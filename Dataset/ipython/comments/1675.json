[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5449608",
    "html_url": "https://github.com/ipython/ipython/issues/1675#issuecomment-5449608",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1675",
    "id": 5449608,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NDk2MDg=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-01T22:21:13Z",
    "updated_at": "2012-05-01T22:21:13Z",
    "author_association": "MEMBER",
    "body": "The question is what are the desired semantics: do we want to run the cells and update the nb contents in-place?  That's currently more or less impossible, since the code responsible for much of that is actually _in the browser_.  Now, being able to re-execute the code in a notebook by itself, that's a different story.  But that would be only to re-generate figures on-disk, for example...\n\nGiven how much of the document logic is in JavaScript, I think this is a no-go for the foreseeable future, and I'm not sure it's worth keeping it open since it's likely unrealistic to change even in the long run.  @ellisonbg, @minrk, thoughts on this?  I'm trying to be fairly aggressive in  issue triage so we keep open things we can realistically work on, and I'm not quite sure this falls in that category...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5450005",
    "html_url": "https://github.com/ipython/ipython/issues/1675#issuecomment-5450005",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1675",
    "id": 5450005,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NTAwMDU=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-01T22:41:37Z",
    "updated_at": "2013-10-28T22:09:58Z",
    "author_association": "MEMBER",
    "body": "I think writing a Python script that runs code and records output is actually _very_ straightforward.  Remember that the output format in the notebook is basically a transcript of the contents of pyout/display_pub messages.  The part of the js that records outputs and submits execution is actually extremely basic, and largely duplicated by code in the KernelManager object.\n\nIt would basically be:\n\n``` python\nfor cell in nb.worksheets[0]:\n    if not code_cell:\n        continue\n    KM.shell_channel.execute(cell.input)\n    code_cell.outputs = []\n\n    reply = KM.shell_channel.get_msg()\n\n    while True:\n        try:\n            out = KM.sub_channel.get_msg(block=True, timeout=0.1)\n        except Empty:\n            break\n        else:\n            if out.msg_type in ('display_pub', 'pyout'):\n                code_cell.outputs.append(out)\n```\n\nNote that that was just pseudo-code tossed off the top of my head, but I don't think a real version would differ significantly.\n\nWhat would be trickier, and probably not a reasonable thing to do, would be to try to fake the message spec with simple exec/run_cell.  But using and actual KernelManager should make it pretty simple.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5450907",
    "html_url": "https://github.com/ipython/ipython/issues/1675#issuecomment-5450907",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1675",
    "id": 5450907,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NTA5MDc=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-01T23:39:42Z",
    "updated_at": "2012-05-01T23:39:42Z",
    "author_association": "MEMBER",
    "body": "True, it may not be so bad after all... We'd want to preserve all text cells in-place, so it has to be written with a bit of care. But now I see a way to do it, actually; thanks for pointing this out!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5452867",
    "html_url": "https://github.com/ipython/ipython/issues/1675#issuecomment-5452867",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1675",
    "id": 5452867,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NTI4Njc=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-02T02:27:29Z",
    "updated_at": "2012-05-02T02:27:29Z",
    "author_association": "MEMBER",
    "body": "> True, it may not be so bad after all... We'd want to preserve all text cells in-place, so it has to be written with a bit of care.\n\nI think it would actually be harder to _not_ preserve text cells and all othet metadata if you follow the pattern I mentioned. Run cells in order, editing in-place, rather than generating a new notebook struct.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5459439",
    "html_url": "https://github.com/ipython/ipython/issues/1675#issuecomment-5459439",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1675",
    "id": 5459439,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NTk0Mzk=",
    "user": {
      "login": "Krastanov",
      "id": 705248,
      "node_id": "MDQ6VXNlcjcwNTI0OA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/705248?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Krastanov",
      "html_url": "https://github.com/Krastanov",
      "followers_url": "https://api.github.com/users/Krastanov/followers",
      "following_url": "https://api.github.com/users/Krastanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/Krastanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Krastanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Krastanov/subscriptions",
      "organizations_url": "https://api.github.com/users/Krastanov/orgs",
      "repos_url": "https://api.github.com/users/Krastanov/repos",
      "events_url": "https://api.github.com/users/Krastanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Krastanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-02T11:31:10Z",
    "updated_at": "2012-05-02T11:31:10Z",
    "author_association": "NONE",
    "body": "This would be absolutely great for the sympy documentation (the \"examples\" part that is being ported to notebooks at the moment).\n\nRegrettably, I do not know the internal structure of Ipython very well. If you do not plan to implement this anytime soon (ie in the next few weeks), could you point me to the submodules in question (I really have no idea of your submodule structure, so an example preamble with the needed imports for the @minrk pseudo-code will be greatly appreciated. I should be able to understand the rest by tracing the docstrings)?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5534755",
    "html_url": "https://github.com/ipython/ipython/issues/1675#issuecomment-5534755",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1675",
    "id": 5534755,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MzQ3NTU=",
    "user": {
      "login": "Krastanov",
      "id": 705248,
      "node_id": "MDQ6VXNlcjcwNTI0OA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/705248?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Krastanov",
      "html_url": "https://github.com/Krastanov",
      "followers_url": "https://api.github.com/users/Krastanov/followers",
      "following_url": "https://api.github.com/users/Krastanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/Krastanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Krastanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Krastanov/subscriptions",
      "organizations_url": "https://api.github.com/users/Krastanov/orgs",
      "repos_url": "https://api.github.com/users/Krastanov/repos",
      "events_url": "https://api.github.com/users/Krastanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Krastanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-06T10:56:04Z",
    "updated_at": "2012-05-06T10:57:41Z",
    "author_association": "NONE",
    "body": "These two scripts by minrk are related:\nhttps://gist.github.com/2620876\nhttps://gist.github.com/2620735\n\nEDIT: added the correct links\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10363111",
    "html_url": "https://github.com/ipython/ipython/issues/1675#issuecomment-10363111",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1675",
    "id": 10363111,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzYzMTEx",
    "user": {
      "login": "cdeil",
      "id": 852409,
      "node_id": "MDQ6VXNlcjg1MjQwOQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/852409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cdeil",
      "html_url": "https://github.com/cdeil",
      "followers_url": "https://api.github.com/users/cdeil/followers",
      "following_url": "https://api.github.com/users/cdeil/following{/other_user}",
      "gists_url": "https://api.github.com/users/cdeil/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cdeil/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cdeil/subscriptions",
      "organizations_url": "https://api.github.com/users/cdeil/orgs",
      "repos_url": "https://api.github.com/users/cdeil/repos",
      "events_url": "https://api.github.com/users/cdeil/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cdeil/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-14T11:33:23Z",
    "updated_at": "2012-11-14T11:33:23Z",
    "author_association": "NONE",
    "body": "I find the scripts mentioned in the last comment very useful to automatically run and test my IPython notebooks.\nWould it be possible to include them in the nbconvert repo to make them easier accessible?\nThey don't do notebook conversion, but if I understand correctly the nbconvert repo is actually the breeding ground for any notebook related tools.\n- Make them executable\n- Maybe combine them in one command line tool with options whether to test the output or exceptions?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10364580",
    "html_url": "https://github.com/ipython/ipython/issues/1675#issuecomment-10364580",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1675",
    "id": 10364580,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzY0NTgw",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-14T12:34:59Z",
    "updated_at": "2012-11-14T12:34:59Z",
    "author_association": "MEMBER",
    "body": "> They don't do notebook conversion, but if I understand correctly the nbconvert repo is actually the breeding ground for any notebook related tools.\n\nnbconvert is really axed to converting notebook between format. Once it settle it will be merged with IPython itself. \n\nFeel free to create a repository with thoses scripts, it could perfectly go into a nbutils (for example) repository.\n\nIn the end we will certainly need a way to manipulate notebooks in a headless way, so maybe we should think of adding those utility to nbformat itself.\n\n@ellisonbg Though ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17094984",
    "html_url": "https://github.com/ipython/ipython/issues/1675#issuecomment-17094984",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1675",
    "id": 17094984,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDk0OTg0",
    "user": {
      "login": "jseabold",
      "id": 296164,
      "node_id": "MDQ6VXNlcjI5NjE2NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/296164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jseabold",
      "html_url": "https://github.com/jseabold",
      "followers_url": "https://api.github.com/users/jseabold/followers",
      "following_url": "https://api.github.com/users/jseabold/following{/other_user}",
      "gists_url": "https://api.github.com/users/jseabold/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jseabold/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jseabold/subscriptions",
      "organizations_url": "https://api.github.com/users/jseabold/orgs",
      "repos_url": "https://api.github.com/users/jseabold/repos",
      "events_url": "https://api.github.com/users/jseabold/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jseabold/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-26T19:19:04Z",
    "updated_at": "2013-04-26T19:19:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "What has become of BlockingKernelManager from those gists? Is there something else you'd recommend to use instead?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17108072",
    "html_url": "https://github.com/ipython/ipython/issues/1675#issuecomment-17108072",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1675",
    "id": 17108072,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTA4MDcy",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-27T01:33:09Z",
    "updated_at": "2013-04-27T01:33:09Z",
    "author_association": "MEMBER",
    "body": "The gists have been updated, but actually need PR #3222 to be merged before they work in master.  Not much has changed, just some reorganization and PR #3011, which split the KernelManager into two objects - the KernelManager, which creates / starts / restarts Kernels, and the KernelClient, which communicates with a Kernel via channels.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/24812626",
    "html_url": "https://github.com/ipython/ipython/issues/1675#issuecomment-24812626",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1675",
    "id": 24812626,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODEyNjI2",
    "user": {
      "login": "paulgb",
      "id": 46173,
      "node_id": "MDQ6VXNlcjQ2MTcz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/46173?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulgb",
      "html_url": "https://github.com/paulgb",
      "followers_url": "https://api.github.com/users/paulgb/followers",
      "following_url": "https://api.github.com/users/paulgb/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulgb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulgb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulgb/subscriptions",
      "organizations_url": "https://api.github.com/users/paulgb/orgs",
      "repos_url": "https://api.github.com/users/paulgb/repos",
      "events_url": "https://api.github.com/users/paulgb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulgb/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-20T14:07:09Z",
    "updated_at": "2013-09-20T14:07:09Z",
    "author_association": "NONE",
    "body": "If anyone is still interested in this functionality, I wrote an external program to run an IPython notebook as a script and optionally export the HTML through nbconvert: https://github.com/paulgb/runipy\n"
  }
]
