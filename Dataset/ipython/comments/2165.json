[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7079490",
    "html_url": "https://github.com/ipython/ipython/pull/2165#issuecomment-7079490",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2165",
    "id": 7079490,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNzk0OTA=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-18T19:36:46Z",
    "updated_at": "2012-07-18T19:36:46Z",
    "author_association": "MEMBER",
    "body": "Two questions:\n- Would it make sense to do this by default? %run generally behaves like a command line, so maybe the user expects glob expansion without any special option.\n- How does this interact with Python expressions that get evaluated before the magic command runs? E.g. I can do:\n\n```\nIn [3]: %run testargv.py {3*4}\n['testargv.py', '12']\n```\n\nI think these expressions should be evaluated before the glob expansion, but it's worth checking.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7080288",
    "html_url": "https://github.com/ipython/ipython/pull/2165#issuecomment-7080288",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2165",
    "id": 7080288,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwODAyODg=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-18T20:04:17Z",
    "updated_at": "2012-07-18T20:04:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "I _thought_ it was default and surprised to see it wasn't.  I make it optional just because it breaks backward compatibility.  I am +1 for making this as default.\n\nI didn't know about the `{}` expression!  This is really cool.  I can't find where the evaluation is done by looking at magic functions, but it seems the evaluation is done at the time when the magic command line option is passed to the magic function, so I guess `*` is recognized as multiplication when it is in `{}`.  I checked something like the following two yield the same output:\n\n```\n%run -g script.py spam*.egg\n%run -g script.py {\"spam\" + \"*\" * 1 + \".egg\"}\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7081740",
    "html_url": "https://github.com/ipython/ipython/pull/2165#issuecomment-7081740",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2165",
    "id": 7081740,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwODE3NDA=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-18T20:53:47Z",
    "updated_at": "2012-07-18T20:53:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "Beware that the current pull request is going to eat arguments that aren't filenames:\n\n``` python\n>>> import glob\n>>> glob.glob('crap')\n[]\n>>> \n```\n\nIt seems to me that we should offer two modes in %run which correspond, roughly, to the `shell=True` and `shell=False` in `subprocess.Popen`.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7081816",
    "html_url": "https://github.com/ipython/ipython/pull/2165#issuecomment-7081816",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2165",
    "id": 7081816,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwODE4MTY=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-18T20:56:32Z",
    "updated_at": "2012-07-18T20:56:32Z",
    "author_association": "MEMBER",
    "body": "Yep, I've just checked, the expression evaluation is done before the specific magic function is called. It's the call to `var_expand` on this line: https://github.com/ipython/ipython/blob/master/IPython/core/interactiveshell.py#L2077\n\nRe making it the default: let's ask the user list what they think.\n\n@bfroehle well spotted. We should check for that case and add the original argument into the list.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7081915",
    "html_url": "https://github.com/ipython/ipython/pull/2165#issuecomment-7081915",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2165",
    "id": 7081915,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwODE5MTU=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-18T21:00:03Z",
    "updated_at": "2012-07-18T21:00:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "So something like:\n\n``` python\ndef glob_args(args):\n    out = []\n    for arg in args:\n        out.extend(glob.glob(arg) or [arg])\n    return out\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7082300",
    "html_url": "https://github.com/ipython/ipython/pull/2165#issuecomment-7082300",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2165",
    "id": 7082300,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwODIzMDA=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-18T21:13:44Z",
    "updated_at": "2012-07-18T21:13:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "Oops, sorry I didn't notice.  Thanks, @bfroehle.\n\nI checked how shell behave when it cannot find the glob match.\n\n```\nbash $ ls spam*\nls: cannot access spam*: No such file or directory\n\nzsh % ls spam*\nzsh: no matches found: spam*\n```\n\nI like the way zsh acts.  As we pass the explicit argument to turn on and off, I think raising error is better.  Because then the choice is explicit.  So, I suggest:\n\n``` python\ndef globlist(args):\n    expanded = []\n    pattern = set('*[]?!')\n    for a in args:\n        if pattern & set(a):\n            matches = glob(a)\n            if not matches:\n                raise RuntimeError(\"no matches found: {0}\".format(a))\n            expanded.extend(matches)\n        else:\n            expanded.append(a)\n    return expanded\n```\n\n(yea, it's uglier...)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7082583",
    "html_url": "https://github.com/ipython/ipython/pull/2165#issuecomment-7082583",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2165",
    "id": 7082583,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwODI1ODM=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-18T21:22:07Z",
    "updated_at": "2012-07-18T21:22:07Z",
    "author_association": "MEMBER",
    "body": "I'd be inclined to go with the way bash behaves:\n- It means you can easily pass an argument containing a `*`, and there are occasional reasons to do that.\n- Far more people are familiar with bash semantics than zsh semantics.\n- It's simpler, and simple code is always better (e.g. your set-matching code doesn't account for escaped characters, like `\\*`).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7082773",
    "html_url": "https://github.com/ipython/ipython/pull/2165#issuecomment-7082773",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2165",
    "id": 7082773,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwODI3NzM=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-18T21:28:21Z",
    "updated_at": "2012-07-18T21:28:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm going to agree with @takluyver here, regarding assuming bash-style by default.\n\nIf you were going to go with the other format, I'd use the existing `glob.has_magic` function.\n\n``` python\nimport glob\ndef glob_args(args):\n    # fix the name and docstring\n    out = []\n    for a in args:\n        if glob.has_magic(a):\n            matches = glob.glob(a)\n            if not matches:\n                raise UsageError(\"No matches found: %s\" % a)\n            out.extend(matches)\n        else:\n            out.append(a)\n    return out\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7083079",
    "html_url": "https://github.com/ipython/ipython/pull/2165#issuecomment-7083079",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2165",
    "id": 7083079,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwODMwNzk=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-18T21:39:03Z",
    "updated_at": "2012-07-18T21:39:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "Well, you can pass `*` explicitly and more less easily by just adding `\\`, provided that globlist handles escaping.  But I agree that most people are familiar with bash, so I'd change it as @bfroehle suggested.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7083123",
    "html_url": "https://github.com/ipython/ipython/pull/2165#issuecomment-7083123",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2165",
    "id": 7083123,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwODMxMjM=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-18T21:41:02Z",
    "updated_at": "2012-07-18T21:41:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "Oh, is it in glob module?  I was looking for that in fnmatch module!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7083192",
    "html_url": "https://github.com/ipython/ipython/pull/2165#issuecomment-7083192",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2165",
    "id": 7083192,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwODMxOTI=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-18T21:43:43Z",
    "updated_at": "2012-07-18T21:43:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "BTW, I was surprised see the definition:\n\n``` python\nmagic_check = re.compile('[*?[]')\n\ndef has_magic(s):\n    return magic_check.search(s) is not None\n```\n\nOf course,\n\n``` python\nIn [11]:\nglob.has_magic(r'\\*')\nOut [11]:\nTrue\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7088459",
    "html_url": "https://github.com/ipython/ipython/pull/2165#issuecomment-7088459",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2165",
    "id": 7088459,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwODg0NTk=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-19T02:46:39Z",
    "updated_at": "2012-07-19T02:46:39Z",
    "author_association": "MEMBER",
    "body": "re: preferences, I agree with @takluyver.  I would expect bash-style glob expanding to be the only behavior, without needing a flag.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7094793",
    "html_url": "https://github.com/ipython/ipython/pull/2165#issuecomment-7094793",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2165",
    "id": 7094793,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwOTQ3OTM=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-19T10:27:58Z",
    "updated_at": "2012-07-19T10:27:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "@takluyver Thanks.  The commit 1f7c20b3241398338d5c34940c098cfceb827f89 is amended to pretend that I am not stupid :)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7094974",
    "html_url": "https://github.com/ipython/ipython/pull/2165#issuecomment-7094974",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2165",
    "id": 7094974,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwOTQ5NzQ=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-19T10:38:10Z",
    "updated_at": "2012-07-19T10:38:10Z",
    "author_association": "MEMBER",
    "body": "That looks better. Still to do:\n- On by default seems to be the consensus so far. It was pointed out on the mailing list that Windows shells don't do glob expansion, but I think cross-platform consistency is preferable to disabling it on one platform.\n- It should have a test to ensure it keeps working. `TemporaryDirectory` will be useful here.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7095014",
    "html_url": "https://github.com/ipython/ipython/pull/2165#issuecomment-7095014",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2165",
    "id": 7095014,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwOTUwMTQ=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-19T10:40:33Z",
    "updated_at": "2012-07-19T10:40:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Regarding glob escaping.  In shells, you can pass a string to program without expanding it by quoting it (e.g., `'*'`).  I guess this is harder to implement than backslash escaping `\\*`.  I looked up shlex document but I couldn't find a way to split a string _and_ preserve the quotation:\n\n```\nIn [4]:\nshlex.split(\"a 'b' c\")\nOut [4]:\n['a', 'b', 'c']\n```\n\nI guess we should mention the difference from shell glob expansion somewhere in the docstring unless implementing full emulation.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7095114",
    "html_url": "https://github.com/ipython/ipython/pull/2165#issuecomment-7095114",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2165",
    "id": 7095114,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwOTUxMTQ=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-19T10:46:29Z",
    "updated_at": "2012-07-19T10:46:29Z",
    "author_association": "MEMBER",
    "body": "Yes, it should go in the docs somewhere. Although I doubt many people\nwill actually look it up. Even the docstring for %run is pretty long\nalready.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7095369",
    "html_url": "https://github.com/ipython/ipython/pull/2165#issuecomment-7095369",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2165",
    "id": 7095369,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwOTUzNjk=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-19T10:59:53Z",
    "updated_at": "2012-07-19T10:59:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "I guess they will look up when they find that their script act in an unexpected way.  (BTW, this is why I prefer the zsh way.)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7148159",
    "html_url": "https://github.com/ipython/ipython/pull/2165#issuecomment-7148159",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2165",
    "id": 7148159,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNDgxNTk=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-21T00:01:22Z",
    "updated_at": "2012-07-21T00:01:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "In the last commit, I made the expansion default because it looks like people prefer this way.  Don't worry, if the situation is reversed, I will just remove the commit.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7177777",
    "html_url": "https://github.com/ipython/ipython/pull/2165#issuecomment-7177777",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2165",
    "id": 7177777,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNzc3Nzc=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-23T13:27:10Z",
    "updated_at": "2012-07-23T13:27:10Z",
    "author_association": "MEMBER",
    "body": "globlist and its test probably belong in utils - maybe utils.path.\n\nOther than that, I think this is looking pretty good.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7180662",
    "html_url": "https://github.com/ipython/ipython/pull/2165#issuecomment-7180662",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2165",
    "id": 7180662,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxODA2NjI=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-23T15:09:29Z",
    "updated_at": "2012-07-23T15:09:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Done!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7181163",
    "html_url": "https://github.com/ipython/ipython/pull/2165#issuecomment-7181163",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2165",
    "id": 7181163,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxODExNjM=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-23T15:25:10Z",
    "updated_at": "2012-07-23T15:25:10Z",
    "author_association": "MEMBER",
    "body": "**Test results for commit a7c450c merged into master**\nPlatform: linux2\n- python2.7: OK (libraries not available: oct2py pymongo tornado wx wx.aui)\n- python3.2: Failed, log at https://gist.github.com/3164226 (libraries not available: oct2py pymongo wx wx.aui)\n\nNot available for testing: python2.6\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7181204",
    "html_url": "https://github.com/ipython/ipython/pull/2165#issuecomment-7181204",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2165",
    "id": 7181204,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxODEyMDQ=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-23T15:26:07Z",
    "updated_at": "2012-07-23T15:26:07Z",
    "author_association": "MEMBER",
    "body": "Those failures are OK, they're the issue I've fixed in #2189.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7453459",
    "html_url": "https://github.com/ipython/ipython/pull/2165#issuecomment-7453459",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2165",
    "id": 7453459,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NTM0NTk=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-02T12:06:44Z",
    "updated_at": "2012-08-02T12:06:44Z",
    "author_association": "MEMBER",
    "body": "I think it's worth addiing a test for %run as well - it's one of the hairiest bits of the code, so it's worth making sure it's not doing anything unexpected.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7456624",
    "html_url": "https://github.com/ipython/ipython/pull/2165#issuecomment-7456624",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2165",
    "id": 7456624,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NTY2MjQ=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-02T14:21:53Z",
    "updated_at": "2012-08-02T14:21:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "I added doctest for %run option parser.  I noticed that we need double escape for escaping glob patterns, because shlex strips unused backslashes:\n\n``` python\nIn [2]:\nshlex.split(r\"\\'\\*\\\\\", posix=True)\nOut [2]:\n[\"'*\\\\\"]\n\nIn [3]:\nshlex.split(r\"\\'\\*\\\\\", posix=False)\nOut [3]:\n[\"\\\\'\\\\*\\\\\\\\\"]\n```\n\nhttp://docs.python.org/library/shlex.html#parsing-rules\n\nSo, I changed the docstring a little bit saying that you need two backslashes to escape glob patterns.  But I don't know if you like this.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7456822",
    "html_url": "https://github.com/ipython/ipython/pull/2165#issuecomment-7456822",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2165",
    "id": 7456822,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NTY4MjI=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-02T14:29:56Z",
    "updated_at": "2012-08-02T14:29:56Z",
    "author_association": "MEMBER",
    "body": "Hmm, it's not ideal to have to double the backslash. Is there any sensible way to avoid that requirement? I'll have a look later as well.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7456920",
    "html_url": "https://github.com/ipython/ipython/pull/2165#issuecomment-7456920",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2165",
    "id": 7456920,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NTY5MjA=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-02T14:33:26Z",
    "updated_at": "2012-08-02T14:33:26Z",
    "author_association": "MEMBER",
    "body": "**Test results for commit 66727cb merged into master**\nPlatform: linux2\n- python2.7: OK (libraries not available: oct2py pymongo wx wx.aui)\n- python3.2: OK (libraries not available: oct2py pymongo wx wx.aui)\n\nNot available for testing: python2.6\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7497929",
    "html_url": "https://github.com/ipython/ipython/pull/2165#issuecomment-7497929",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2165",
    "id": 7497929,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0OTc5Mjk=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-04T00:51:25Z",
    "updated_at": "2012-08-04T00:51:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "I found a super hacky way (though it just uses interfaces described in the manual) to get the original string of each token:\n\n``` python\nIn [30]:\ndef record_returns(original):\n    returns = []\n    def wrapper(*args, **kwds):\n        ret = original(*args, **kwds)\n        returns.append(ret)\n        return ret\n    return (wrapper, returns)\n\nIn [34]:\nclass Proxy(object):\n    pass\n\nIn [35]:\nclass MyShlex2(shlex.shlex):\n\n    def __init__(self, *args, **kwds):\n        shlex.shlex.__init__(self, *args, **kwds)\n        instream = self.instream\n        self.instream = Proxy()\n        self.instream.readline = instream.readline\n        (self.instream.read, self.returns) = record_returns(instream.read)\n        self.raw_tokens = []\n\n    def read_token(self):\n        ret = shlex.shlex.read_token(self)\n        self.raw_tokens.append(\"\".join(self.returns))\n        self.returns[:] = []\n        return ret\n\nIn [36]:\nstring = r'\"a\\\"\"'\nlex = MyShlex2(string, posix=True)\nlex.whitespace_split = True\nlex.commenters = ''\nlist(lex)\nOut [36]:\n['a\"']\n\nIn [37]:\nlex.raw_tokens\nOut [37]:\n['\"a\\\\\"\"', '']\n```\n\nSo, if `lex.raw_tokens[i][0] in (\"'\", '\"')` then `i`-th element returned by `list(lex)` is quoted.  But I guess this is too hacky...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7510339",
    "html_url": "https://github.com/ipython/ipython/pull/2165#issuecomment-7510339",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2165",
    "id": 7510339,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MTAzMzk=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-05T14:35:16Z",
    "updated_at": "2012-08-05T14:35:16Z",
    "author_association": "MEMBER",
    "body": "Nice going! I'm in two minds about whether behaving like typical shells warrants the extra complexity. Maybe others will chime in.\n\nI think it could also be a little simpler, if instead of `record_returns` and `Proxy` we did something like:\n\n```\nclass StreamProxy(object):\n    def __init__(self, stream):\n        self.stream = stream\n        self.chunks_read = []\n\n    def read(self, *args, **kwargs):\n        ret = self.stream.read(*args, **kwargs)\n        self.chunks_read.append(ret)\n        return ret\n```\n\nThen the dance in `MyShlex2.__init__` becomes `self.instream = StreamProxy(self.instream)`. Note that I haven't tested this, I'm just coding off the top of my head.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7510502",
    "html_url": "https://github.com/ipython/ipython/pull/2165#issuecomment-7510502",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2165",
    "id": 7510502,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MTA1MDI=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-05T15:01:39Z",
    "updated_at": "2012-08-05T15:01:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yea, I think specific proxy class makes it simpler.  I would like to know if this complexity is appropriate here.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7511717",
    "html_url": "https://github.com/ipython/ipython/pull/2165#issuecomment-7511717",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2165",
    "id": 7511717,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MTE3MTc=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-05T17:58:54Z",
    "updated_at": "2012-08-05T17:58:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "I forgot to mention that the approach with custom shlex class does not solve the problem with the double backslash.  I think it's much difficult to solve this problem.\n"
  }
]
