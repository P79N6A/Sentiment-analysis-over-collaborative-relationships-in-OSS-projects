[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/40727874",
    "html_url": "https://github.com/ipython/ipython/pull/5653#issuecomment-40727874",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5653",
    "id": 40727874,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzI3ODc0",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-17T15:36:27Z",
    "updated_at": "2014-04-17T15:36:27Z",
    "author_association": "MEMBER",
    "body": "+1\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/40729448",
    "html_url": "https://github.com/ipython/ipython/pull/5653#issuecomment-40729448",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5653",
    "id": 40729448,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzI5NDQ4",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-17T15:49:53Z",
    "updated_at": "2014-04-17T15:49:53Z",
    "author_association": "MEMBER",
    "body": "This will probably conflict with @ellisonbg  #5596 that updated the `.ipynb` too. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/40735551",
    "html_url": "https://github.com/ipython/ipython/pull/5653#issuecomment-40735551",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5653",
    "id": 40735551,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzM1NTUx",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-17T16:45:54Z",
    "updated_at": "2014-04-17T16:45:54Z",
    "author_association": "MEMBER",
    "body": "I'm -1 on doing this in interact. I think it should show your parameter names precisely as they are in your code, not try to guess how you want it displayed. A third party 'presentation interact' allowing more customisation of the visible UI would be great, but I don't think it belongs in the base interact.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/40745654",
    "html_url": "https://github.com/ipython/ipython/pull/5653#issuecomment-40745654",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5653",
    "id": 40745654,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzQ1NjU0",
    "user": {
      "login": "jhamrick",
      "id": 83444,
      "node_id": "MDQ6VXNlcjgzNDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/83444?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jhamrick",
      "html_url": "https://github.com/jhamrick",
      "followers_url": "https://api.github.com/users/jhamrick/followers",
      "following_url": "https://api.github.com/users/jhamrick/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhamrick/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jhamrick/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhamrick/subscriptions",
      "organizations_url": "https://api.github.com/users/jhamrick/orgs",
      "repos_url": "https://api.github.com/users/jhamrick/repos",
      "events_url": "https://api.github.com/users/jhamrick/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jhamrick/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-17T18:20:54Z",
    "updated_at": "2014-04-17T18:20:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, I can rewrite this to create a new version of interact -- should be pretty straightforward.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/40745875",
    "html_url": "https://github.com/ipython/ipython/pull/5653#issuecomment-40745875",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5653",
    "id": 40745875,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzQ1ODc1",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-17T18:23:04Z",
    "updated_at": "2014-04-17T18:23:04Z",
    "author_association": "MEMBER",
    "body": "I'd be inclined to say it should be a separate extension rather than part of IPython, but others may disagree with me on that.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/40746148",
    "html_url": "https://github.com/ipython/ipython/pull/5653#issuecomment-40746148",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5653",
    "id": 40746148,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzQ2MTQ4",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-17T18:25:15Z",
    "updated_at": "2014-04-17T18:25:15Z",
    "author_association": "MEMBER",
    "body": "Imho, `@interact` is a really high interface, I was surprised to see underscore go through.\nI don't know why but I fell like @ellisonbg will have a strong opinion about that. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/40750916",
    "html_url": "https://github.com/ipython/ipython/pull/5653#issuecomment-40750916",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5653",
    "id": 40750916,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzUwOTE2",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-17T19:07:53Z",
    "updated_at": "2014-04-17T19:07:53Z",
    "author_association": "MEMBER",
    "body": "It is a high level interface, but it's still an interface for programmers, IMO, so I don't want to hide the relationship between widgets and function parameters.\n\nYou could use widgets to build something intended for end users, probably combining it with hiding the code. But I think in that case, you want much more than just automatically tweaking widget names - e.g. ways to customise the labels manually, control widget layout, add explanatory notes amongst the widgets, tooltips, etc. That's a whole big area that I don't think we should try to solve within IPython.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/40786694",
    "html_url": "https://github.com/ipython/ipython/pull/5653#issuecomment-40786694",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5653",
    "id": 40786694,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzg2Njk0",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-18T04:51:56Z",
    "updated_at": "2014-04-18T04:51:56Z",
    "author_association": "MEMBER",
    "body": "I probably agree that we shouldn't hide or transform variable names in the\nwidgets.\n\nOn Thu, Apr 17, 2014 at 12:07 PM, Thomas Kluyver\nnotifications@github.comwrote:\n\n> It is a high level interface, but it's still an interface for programmers,\n> IMO, so I don't want to hide the relationship between widgets and function\n> parameters.\n> \n> You could use widgets to build something intended for end users, probably\n> combining it with hiding the code. But I think in that case, you want much\n> more than just automatically tweaking widget names - e.g. ways to customise\n> the labels manually, control widget layout, add explanatory notes amongst\n> the widgets, tooltips, etc. That's a whole big area that I don't think we\n> should try to solve within IPython.\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/5653#issuecomment-40750916\n> .\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/40859783",
    "html_url": "https://github.com/ipython/ipython/pull/5653#issuecomment-40859783",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5653",
    "id": 40859783,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwODU5Nzgz",
    "user": {
      "login": "jhamrick",
      "id": 83444,
      "node_id": "MDQ6VXNlcjgzNDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/83444?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jhamrick",
      "html_url": "https://github.com/jhamrick",
      "followers_url": "https://api.github.com/users/jhamrick/followers",
      "following_url": "https://api.github.com/users/jhamrick/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhamrick/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jhamrick/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhamrick/subscriptions",
      "organizations_url": "https://api.github.com/users/jhamrick/orgs",
      "repos_url": "https://api.github.com/users/jhamrick/repos",
      "events_url": "https://api.github.com/users/jhamrick/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jhamrick/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-19T03:42:34Z",
    "updated_at": "2014-04-19T03:42:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "@takluyver yeah, that's a fair point.\n\nWhat might be nice, then, is to have an example notebook that gives some examples of how to go from using `interact` to using the explicit widget objects, in order to manually customize them. I know there are already example notebooks for `interact` and for doing widget, layout, etc., but perhaps one that explicitly links the two -- i.e., \"here is what it looks like with interact\" and then \"here is how you would need to create this to make it look exactly the same except with nicer labels\" or something like that. I'd be happy to write something like this if you all are interested.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/40877441",
    "html_url": "https://github.com/ipython/ipython/pull/5653#issuecomment-40877441",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5653",
    "id": 40877441,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwODc3NDQx",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-19T18:49:36Z",
    "updated_at": "2014-04-19T18:49:36Z",
    "author_association": "MEMBER",
    "body": "> I probably agree that we shouldn't hide or transform variable names in the widgets.\n\nI feel like `@interact` has a lot of magic in it, we try to build widget based on abbreviation, have heuristic for integer slider, include the end of a range, and so on and so forth. So the way I understand it it is made to do as much assumption as possible. I would even almost expect it, if I call a variable `lamba_x` to display it using mathjax.\n\nI though understand the point of API, but I think we can make little more effort on the end-user decorator that will be the most used.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/42581492",
    "html_url": "https://github.com/ipython/ipython/pull/5653#issuecomment-42581492",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5653",
    "id": 42581492,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTgxNDky",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-08T17:45:21Z",
    "updated_at": "2014-05-08T17:45:21Z",
    "author_association": "MEMBER",
    "body": "We discussed this in the dev meeting today. @jhamrick is going to make a new PR to make it possible to override the widget description by specifying a full widget instance, but variable names will remain the default if nothing's specified.\n"
  }
]
