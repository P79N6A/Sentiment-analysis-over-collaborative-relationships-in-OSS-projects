[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3929468",
    "html_url": "https://github.com/ipython/ipython/pull/1399#issuecomment-3929468",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1399",
    "id": 3929468,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5Mjk0Njg=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-12T17:52:05Z",
    "updated_at": "2012-02-12T17:52:05Z",
    "author_association": "MEMBER",
    "body": "This looks pretty good.\n\nOne thing that does get weird in the notebook is if you have a list containing a type (or anything whose repr includes `<...>`), because markdown is still treating those as HTML tags.\n\nFor instance, `[type]` transforms to `\\begin{bmatrix}<type 'type'>\\end{bmatrix}` which displays as `$$\\begin{bmatrix}\\end{bmatrix}$$` (not rendered), presumably because it contains an unterminated open-tag, confusing the MathJax parser.\n\nI'm less confident in the png for qtconsole choice, just because they aren't particularly nice, they are slow, and matplotlib.mathtext doesn't provide full LaTeX.\n\nThe reason your container renderers are not drawing in the qtconsole is that the png render is failing, I think due to the use of `\\begin{bmatrix}`, which mathtext doesn't seem to support.  I believe mathtext is only meant for single expressions.\n\nExceptions raised in display formatters are ignored, and treated as \"we can't format this object, move on to other mime-types\".  To see the actual result of the display format call, you can do:\n\n``` python\n# get the formatter object for PNG\npng_formatter = get_ipython().display_formatter.formatters['image/png']\n# get the callable for lists\nf = png_formatter.type_printers[list]\n# call it on a list\nf([1,2])\n```\n\nwhich will raise:\n\n```\nValueError: \n\\begin{bmatrix}1, & 2\\end{bmatrix}\n^\nUnknown symbol: \\begin (at char 0), (line:1, col:1)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3930630",
    "html_url": "https://github.com/ipython/ipython/pull/1399#issuecomment-3930630",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1399",
    "id": 3930630,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzA2MzA=",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-12T20:16:13Z",
    "updated_at": "2012-02-12T20:16:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "So the mathjax formatter should replace all instances of `<` and `>` with `\\<` and `\\>`?\n\nI didn't realize that the png formatter just falls back to the text formatter when it fails.  Does it support `\\left (` and so on (I'm actually not entirely sure why we don't just use that instead of the matrix stuff)? I'll play with it.\n\nI agree that mathtext doesn't look very nice (in general).  I would be better if we could render mathjax in the qtconsole.  Or, we could do something like http://research.scios.ch/inet/doku.php?id=ipy_tex, which uses latex itself to render the math (if it's installed).  \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3930924",
    "html_url": "https://github.com/ipython/ipython/pull/1399#issuecomment-3930924",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1399",
    "id": 3930924,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzA5MjQ=",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-12T20:55:04Z",
    "updated_at": "2012-02-12T20:55:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "Escaping the `<` and `>` doesn't seem to work.  I made it so that `[type(Symbol('x')]` gives `$$\\begin{bmatrix}\\<class 'sympy.core.symbol.Symbol'\\>\\end{bmatrix}$$`, but this just renders as `$$\\begin{bmatrix}\\\\end{bmatrix}$$` (plaintext).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3931050",
    "html_url": "https://github.com/ipython/ipython/pull/1399#issuecomment-3931050",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1399",
    "id": 3931050,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzEwNTA=",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-12T21:09:04Z",
    "updated_at": "2012-02-12T21:09:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm not convinced that `<...>` is the problem, actually.  `And(x < y, y > x)` renders just fine in master for example (you have to use the SymPy master too). That's rendered as `$$x < y \\wedge x > y$$`.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3931051",
    "html_url": "https://github.com/ipython/ipython/pull/1399#issuecomment-3931051",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1399",
    "id": 3931051,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzEwNTE=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-12T21:09:10Z",
    "updated_at": "2012-02-12T21:09:10Z",
    "author_association": "MEMBER",
    "body": "backslash is not used for escaping HTML, it would be `&lt;`, `&gt;` etc.  Also, this escape should not happen at the code level, it should be in javascript in the frontend.  The brackets are valid in LaTeX, but the mixed TeX/HTML environment of mathjax should make a pass at escaping apparent HTML in clearly non-HTML expressions.\n\nAs for the PNG - All available formatters are always called.  So if the PNG formatter fails, it simply returns nothing, acting as if there was no PNG formatter registered for the given object.  At that point, plaintext format is the only remaining one that the QtConsole can display.  As for what it supports, I would check out the docs for matplotlib.mathtext, as that is the code that actually does the rendering.  If you can render the TeX as a png yourself, then that's fine as well.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3931304",
    "html_url": "https://github.com/ipython/ipython/pull/1399#issuecomment-3931304",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1399",
    "id": 3931304,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzEzMDQ=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-12T21:39:11Z",
    "updated_at": "2012-02-12T21:39:11Z",
    "author_association": "MEMBER",
    "body": "> I'm not convinced that `<...>` is the problem, actually...\n\nIt requires that it be identifiable as a tag, which is sensitive to space between open-bracket and tag symbol (hence `<type...` being mishandled, while `x < y` is not).  This has nothing to do with sympy, and applies to latex rendering in MathJax in general.  A simple example:\n\n``` python\nfrom IPython.core.display import *\nm = Math(\"x < y\")\ndisplay(m._repr_latex_())\ndisplay(m)\nm = Math(\"x <y\")\ndisplay(m._repr_latex_())\ndisplay(m)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3931338",
    "html_url": "https://github.com/ipython/ipython/pull/1399#issuecomment-3931338",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1399",
    "id": 3931338,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzEzMzg=",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-12T21:43:28Z",
    "updated_at": "2012-02-12T21:43:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "So should I consider it a separate problem from this pull request?  Regardless, I don't know javascript well enough to do the parsing there, so someone else will have to fix it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3931596",
    "html_url": "https://github.com/ipython/ipython/pull/1399#issuecomment-3931596",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1399",
    "id": 3931596,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzE1OTY=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-12T22:16:29Z",
    "updated_at": "2012-02-13T23:41:28Z",
    "author_association": "MEMBER",
    "body": "Yes, I suppose I would consider it a separate issue.  But it does create a real problem when using sympy to draw basic types that are not at all related to sympy, such as lists, etc.  For instance, I wouldn't want sympy to draw any of my lists or dicts unless they actually contained sympy objects (less objectionable when they contain only simple scalars).\n\nThis changes what `%load_ext sympyprinting` means,\n\nfrom: \"Display sympy objects with latex\"\nto: \"Draw _everything_ with latex\"\n\nBoth of which are reasonable, and have advantages and disadvantages.\n\nIs it possible for the sympyprinting callable to skip containers that contain anything sympy doesn't handle (e.g. str, object, etc.)?  All it would have to do is return None in those cases.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3931844",
    "html_url": "https://github.com/ipython/ipython/pull/1399#issuecomment-3931844",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1399",
    "id": 3931844,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzE4NDQ=",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-12T22:44:11Z",
    "updated_at": "2012-02-12T22:44:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah, that should be straightforward.  If there are mixed types, I guess it will have to draw the whole thing using the string printer (unless mathjax can be mixed with it nicely).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3951998",
    "html_url": "https://github.com/ipython/ipython/pull/1399#issuecomment-3951998",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1399",
    "id": 3951998,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTE5OTg=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-13T23:37:19Z",
    "updated_at": "2012-02-13T23:37:19Z",
    "author_association": "MEMBER",
    "body": "Okay, let's go with that.  I wouldn't bother trying to mix latex and reprs, just abort latex-printing if there's anything in the container not on the whitelist of latexable types.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3952175",
    "html_url": "https://github.com/ipython/ipython/pull/1399#issuecomment-3952175",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1399",
    "id": 3952175,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTIxNzU=",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-13T23:50:03Z",
    "updated_at": "2012-02-13T23:50:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "What's the best way to do that, given that we use string forms of the SymPy types instead of the types themselves?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3952192",
    "html_url": "https://github.com/ipython/ipython/pull/1399#issuecomment-3952192",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1399",
    "id": 3952192,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTIxOTI=",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-13T23:51:33Z",
    "updated_at": "2012-02-13T23:51:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "In other words, I want to do something like\n\n``` py\ndef can_print_latex(o):\n    \"\"\"                                                                       \n    Return True of every element of a container type o can be printed with    \n    LaTeX.                                                                    \n    \"\"\"\n    if type(o) in (list, tuple):\n        return all(can_print_latex(i) for i in o)\n    if type(o) is dict:\n        return all(can_print_latex(i) and can_print_latex(o[i]) for i in o)\n    if type(o) in (sympy.Basic, sympy.matrices.Matrix):\n        return True\n    return False\n```\n\nBut that requires having sympy imported, which I gather from the rest of the file is not necessarily true (though I'm not entirely sure why).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3952222",
    "html_url": "https://github.com/ipython/ipython/pull/1399#issuecomment-3952222",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1399",
    "id": 3952222,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTIyMjI=",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-13T23:53:06Z",
    "updated_at": "2012-02-13T23:53:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "Actually, I want to use `isinstance`, not `type`.  But the question is the same.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3952330",
    "html_url": "https://github.com/ipython/ipython/pull/1399#issuecomment-3952330",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1399",
    "id": 3952330,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTIzMzA=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-14T00:03:22Z",
    "updated_at": "2012-02-14T00:03:22Z",
    "author_association": "MEMBER",
    "body": "Why is the sympy import a problem?  You can just import sympy, either in the module, or in the function itself, if that's necessary for some reason:\n\nSomething like this should work:\n\n``` python\ndef can_print_latex(o):\n    \"\"\"                                                                       \n    Return True of every element of a container type o can be printed with    \n    LaTeX.                                                                    \n    \"\"\"\n    import sympy\n    if isinstance(o, (list, tuple)):\n        return all(can_print_latex(i) for i in o)\n    elif isinstance(o, dict):\n        return all((isinstance(i, basestring) or can_print_latex(i)) and can_print_latex(o[i]) for i in o)\n    elif isinstance(o,(sympy.Basic, sympy.matrices.Matrix, int, long, float)):\n        return True\n    return False\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3952707",
    "html_url": "https://github.com/ipython/ipython/pull/1399#issuecomment-3952707",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1399",
    "id": 3952707,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTI3MDc=",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-14T00:33:58Z",
    "updated_at": "2012-02-14T00:33:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't know. I assumed it was because of the try block at the top of the file. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3953679",
    "html_url": "https://github.com/ipython/ipython/pull/1399#issuecomment-3953679",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1399",
    "id": 3953679,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTM2Nzk=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-14T02:00:46Z",
    "updated_at": "2012-02-14T02:00:46Z",
    "author_association": "MEMBER",
    "body": "Oh, I wouldn't worry about that.  I think it might have to do with testing or some such that the file must be importable.  It should be fine to rely on that import having succeeded in your functions\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4488504",
    "html_url": "https://github.com/ipython/ipython/pull/1399#issuecomment-4488504",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1399",
    "id": 4488504,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODg1MDQ=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-03-13T23:05:04Z",
    "updated_at": "2012-03-13T23:05:04Z",
    "author_association": "MEMBER",
    "body": "@asmeurer, just checking in... I finally have some time to start catching up with our accumulated PR backlog.  This looks like a good PR, once the discussion above is taken into account in the changes.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4566846",
    "html_url": "https://github.com/ipython/ipython/pull/1399#issuecomment-4566846",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1399",
    "id": 4566846,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NjY4NDY=",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-03-19T02:24:57Z",
    "updated_at": "2012-03-19T02:24:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm actually backlogged as well, but I'm am trying to get through stuff.  I'm going through my emails in order, so your comment ironically made it take longer for me to get to :)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4679262",
    "html_url": "https://github.com/ipython/ipython/pull/1399#issuecomment-4679262",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1399",
    "id": 4679262,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzkyNjI=",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-03-25T03:48:27Z",
    "updated_at": "2012-03-25T03:48:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK, I finally finished this.  Please verify that I did everything correctly, as I may have forgotten something in the time I've left this.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4679287",
    "html_url": "https://github.com/ipython/ipython/pull/1399#issuecomment-4679287",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1399",
    "id": 4679287,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzkyODc=",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-03-25T03:55:44Z",
    "updated_at": "2012-03-25T03:55:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't have time to look into the qtconsole now, so I opened #1523 for it.  I'd be interested in hearing your opinions on using MathJax or something like http://research.scios.ch/inet/doku.php?id=ipy_tex in the qtconsole. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5135561",
    "html_url": "https://github.com/ipython/ipython/pull/1399#issuecomment-5135561",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1399",
    "id": 5135561,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzU1NjE=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-14T23:26:22Z",
    "updated_at": "2012-04-14T23:26:22Z",
    "author_association": "MEMBER",
    "body": "This one looks good to me, now.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5136224",
    "html_url": "https://github.com/ipython/ipython/pull/1399#issuecomment-5136224",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1399",
    "id": 5136224,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzYyMjQ=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-15T01:38:02Z",
    "updated_at": "2012-04-15T01:38:02Z",
    "author_association": "MEMBER",
    "body": "Looks good to me too, merging now.  @asmeurer, thanks for the work!  We'll take up the rest of the discussion in #1523.\n"
  }
]
