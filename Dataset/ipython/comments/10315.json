[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/281422050",
    "html_url": "https://github.com/ipython/ipython/issues/10315#issuecomment-281422050",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10315",
    "id": 281422050,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MTQyMjA1MA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-21T17:50:17Z",
    "updated_at": "2017-02-21T17:50:17Z",
    "author_association": "MEMBER",
    "body": "Hum, tab completion has not been touch a lot in 5.x , only the interface. \r\n\r\n\r\n> should crash the JVM.\r\n\r\nDid you meant should *not* ?"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/281422311",
    "html_url": "https://github.com/ipython/ipython/issues/10315#issuecomment-281422311",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10315",
    "id": 281422311,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MTQyMjMxMQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-21T17:51:12Z",
    "updated_at": "2017-02-21T17:51:12Z",
    "author_association": "MEMBER",
    "body": "That's unfortunate. Yes, completion does use threads, and I don't think there's anything we can easily do about it.\r\n\r\nPing @jonathanslenders - I don't particularly expect a fix, but you may want to be aware of this."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/281424777",
    "html_url": "https://github.com/ipython/ipython/issues/10315#issuecomment-281424777",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10315",
    "id": 281424777,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MTQyNDc3Nw==",
    "user": {
      "login": "rdemaria",
      "id": 54369,
      "node_id": "MDQ6VXNlcjU0MzY5",
      "avatar_url": "https://avatars2.githubusercontent.com/u/54369?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rdemaria",
      "html_url": "https://github.com/rdemaria",
      "followers_url": "https://api.github.com/users/rdemaria/followers",
      "following_url": "https://api.github.com/users/rdemaria/following{/other_user}",
      "gists_url": "https://api.github.com/users/rdemaria/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rdemaria/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rdemaria/subscriptions",
      "organizations_url": "https://api.github.com/users/rdemaria/orgs",
      "repos_url": "https://api.github.com/users/rdemaria/repos",
      "events_url": "https://api.github.com/users/rdemaria/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rdemaria/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-21T17:58:58Z",
    "updated_at": "2017-02-21T17:58:58Z",
    "author_association": "NONE",
    "body": "Edited the comment to clarify. I think it is related to threads that usually tends to crash jpype. I open an issue in jpype as well. I am not experts in both ipython and jpype internals unfortunately..."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/281439776",
    "html_url": "https://github.com/ipython/ipython/issues/10315#issuecomment-281439776",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10315",
    "id": 281439776,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MTQzOTc3Ng==",
    "user": {
      "login": "jonathanslenders",
      "id": 216638,
      "node_id": "MDQ6VXNlcjIxNjYzOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/216638?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonathanslenders",
      "html_url": "https://github.com/jonathanslenders",
      "followers_url": "https://api.github.com/users/jonathanslenders/followers",
      "following_url": "https://api.github.com/users/jonathanslenders/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonathanslenders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonathanslenders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonathanslenders/subscriptions",
      "organizations_url": "https://api.github.com/users/jonathanslenders/orgs",
      "repos_url": "https://api.github.com/users/jonathanslenders/repos",
      "events_url": "https://api.github.com/users/jonathanslenders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonathanslenders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-21T18:51:14Z",
    "updated_at": "2017-02-21T18:51:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, autocompletion runs in a different thread, because it could otherwise block the UI interaction (we want zero-latency typing). Jedi for instance takes some time to generate the completions. It's not a lot, but noticeable if we would do it in the main event loop.\r\n\r\nHowever, auto completion is not supposed to crash anything. Worst case, it should not give any suggestion. "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/281470711",
    "html_url": "https://github.com/ipython/ipython/issues/10315#issuecomment-281470711",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10315",
    "id": 281470711,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MTQ3MDcxMQ==",
    "user": {
      "login": "marscher",
      "id": 170287,
      "node_id": "MDQ6VXNlcjE3MDI4Nw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/170287?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marscher",
      "html_url": "https://github.com/marscher",
      "followers_url": "https://api.github.com/users/marscher/followers",
      "following_url": "https://api.github.com/users/marscher/following{/other_user}",
      "gists_url": "https://api.github.com/users/marscher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marscher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marscher/subscriptions",
      "organizations_url": "https://api.github.com/users/marscher/orgs",
      "repos_url": "https://api.github.com/users/marscher/repos",
      "events_url": "https://api.github.com/users/marscher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marscher/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-21T20:30:54Z",
    "updated_at": "2017-02-21T20:30:54Z",
    "author_association": "NONE",
    "body": "To inspect the package structure (which will also descent into the Java bindings) one would need to attach the current Python thread to the Java virtual machine. Is there some kind of call back interface, which we could use at jpype's side to bind to the current thread? If not, there is not much we (jpype) nor Ipython folks can do about this. "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/281488305",
    "html_url": "https://github.com/ipython/ipython/issues/10315#issuecomment-281488305",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10315",
    "id": 281488305,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MTQ4ODMwNQ==",
    "user": {
      "login": "jonathanslenders",
      "id": 216638,
      "node_id": "MDQ6VXNlcjIxNjYzOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/216638?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonathanslenders",
      "html_url": "https://github.com/jonathanslenders",
      "followers_url": "https://api.github.com/users/jonathanslenders/followers",
      "following_url": "https://api.github.com/users/jonathanslenders/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonathanslenders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonathanslenders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonathanslenders/subscriptions",
      "organizations_url": "https://api.github.com/users/jonathanslenders/orgs",
      "repos_url": "https://api.github.com/users/jonathanslenders/repos",
      "events_url": "https://api.github.com/users/jonathanslenders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonathanslenders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-21T21:34:18Z",
    "updated_at": "2017-02-21T21:35:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Right now, there is no way to do that. I could add an option to make auto completion synchronous (in the UI thread), but that won't be for right now and I'm afraid that the performance will suffer.\r\n\r\nedit: feel free to create an issue for a feature request for synchronous auto completion. That way I won't forget."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/281493978",
    "html_url": "https://github.com/ipython/ipython/issues/10315#issuecomment-281493978",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10315",
    "id": 281493978,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MTQ5Mzk3OA==",
    "user": {
      "login": "rdemaria",
      "id": 54369,
      "node_id": "MDQ6VXNlcjU0MzY5",
      "avatar_url": "https://avatars2.githubusercontent.com/u/54369?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rdemaria",
      "html_url": "https://github.com/rdemaria",
      "followers_url": "https://api.github.com/users/rdemaria/followers",
      "following_url": "https://api.github.com/users/rdemaria/following{/other_user}",
      "gists_url": "https://api.github.com/users/rdemaria/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rdemaria/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rdemaria/subscriptions",
      "organizations_url": "https://api.github.com/users/rdemaria/orgs",
      "repos_url": "https://api.github.com/users/rdemaria/repos",
      "events_url": "https://api.github.com/users/rdemaria/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rdemaria/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-21T21:54:42Z",
    "updated_at": "2017-02-21T21:55:41Z",
    "author_association": "NONE",
    "body": "Does jpype use the __dir__ method? In that case would it be possible to\r\ncheck inside __dir__ whether the thread, which is calling __dir__, is\r\nattached to the JVM and, if not, attach to it?"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/281502186",
    "html_url": "https://github.com/ipython/ipython/issues/10315#issuecomment-281502186",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10315",
    "id": 281502186,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MTUwMjE4Ng==",
    "user": {
      "login": "rdemaria",
      "id": 54369,
      "node_id": "MDQ6VXNlcjU0MzY5",
      "avatar_url": "https://avatars2.githubusercontent.com/u/54369?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rdemaria",
      "html_url": "https://github.com/rdemaria",
      "followers_url": "https://api.github.com/users/rdemaria/followers",
      "following_url": "https://api.github.com/users/rdemaria/following{/other_user}",
      "gists_url": "https://api.github.com/users/rdemaria/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rdemaria/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rdemaria/subscriptions",
      "organizations_url": "https://api.github.com/users/rdemaria/orgs",
      "repos_url": "https://api.github.com/users/rdemaria/repos",
      "events_url": "https://api.github.com/users/rdemaria/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rdemaria/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-21T22:25:44Z",
    "updated_at": "2017-02-21T22:25:44Z",
    "author_association": "NONE",
    "body": "It seems to work on my class:\r\n\r\n```\r\n   def __dir__(self):\r\n        if jpype.isThreadAttachedToJVM()==0:\r\n            jpype.attachThreadToJVM()\r\n        return sorted(self._dict.keys())\r\n```\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/281751577",
    "html_url": "https://github.com/ipython/ipython/issues/10315#issuecomment-281751577",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10315",
    "id": 281751577,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MTc1MTU3Nw==",
    "user": {
      "login": "nimish",
      "id": 993805,
      "node_id": "MDQ6VXNlcjk5MzgwNQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/993805?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nimish",
      "html_url": "https://github.com/nimish",
      "followers_url": "https://api.github.com/users/nimish/followers",
      "following_url": "https://api.github.com/users/nimish/following{/other_user}",
      "gists_url": "https://api.github.com/users/nimish/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nimish/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nimish/subscriptions",
      "organizations_url": "https://api.github.com/users/nimish/orgs",
      "repos_url": "https://api.github.com/users/nimish/repos",
      "events_url": "https://api.github.com/users/nimish/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nimish/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-22T18:06:29Z",
    "updated_at": "2017-02-22T18:06:29Z",
    "author_association": "NONE",
    "body": "Definitely running into this issue. I would suspect this happens to any non-thread-safe packages as well? Would be good to have a flag to disable this behavior in IPython. "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/281753356",
    "html_url": "https://github.com/ipython/ipython/issues/10315#issuecomment-281753356",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10315",
    "id": 281753356,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MTc1MzM1Ng==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-22T18:12:41Z",
    "updated_at": "2017-02-22T18:12:41Z",
    "author_association": "MEMBER",
    "body": "> Would be good to have a flag to disable this behavior in IPython.\r\n\r\nYou really can't do that easily. Most of the code that was handling the froment is gone in 5.x and has been replaced by prompt-toolkit so it's not a question of \"just a flag\" unfortunately. "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/281776624",
    "html_url": "https://github.com/ipython/ipython/issues/10315#issuecomment-281776624",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10315",
    "id": 281776624,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MTc3NjYyNA==",
    "user": {
      "login": "jonathanslenders",
      "id": 216638,
      "node_id": "MDQ6VXNlcjIxNjYzOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/216638?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonathanslenders",
      "html_url": "https://github.com/jonathanslenders",
      "followers_url": "https://api.github.com/users/jonathanslenders/followers",
      "following_url": "https://api.github.com/users/jonathanslenders/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonathanslenders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonathanslenders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonathanslenders/subscriptions",
      "organizations_url": "https://api.github.com/users/jonathanslenders/orgs",
      "repos_url": "https://api.github.com/users/jonathanslenders/repos",
      "events_url": "https://api.github.com/users/jonathanslenders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonathanslenders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-22T19:32:47Z",
    "updated_at": "2017-02-22T19:32:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "I would expect that ``__dir__`` is always thread safe. Normally, doing an attribute listing should not result in any side effects, so there shouldn't be a reason that ``__dir__`` can't be thread safe. It's really weird if ``dir(my_object)`` can fail if ``my_object`` was created in a different thread. With this bug, even with the normal Python shell, this would crash if the object was created in another thread.\r\n\r\nI don't know jpype, but it looks like ``__dir__`` does some kind of reflection through the Java runtime. If we want to have autocompletion while the user types, and we want to switch to Jedi, then even more it is important to run autocompletions asynchronous. I think it's something worth fixing in Jpype."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/284152183",
    "html_url": "https://github.com/ipython/ipython/issues/10315#issuecomment-284152183",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10315",
    "id": 284152183,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDE1MjE4Mw==",
    "user": {
      "login": "jonathanslenders",
      "id": 216638,
      "node_id": "MDQ6VXNlcjIxNjYzOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/216638?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonathanslenders",
      "html_url": "https://github.com/jonathanslenders",
      "followers_url": "https://api.github.com/users/jonathanslenders/followers",
      "following_url": "https://api.github.com/users/jonathanslenders/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonathanslenders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonathanslenders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonathanslenders/subscriptions",
      "organizations_url": "https://api.github.com/users/jonathanslenders/orgs",
      "repos_url": "https://api.github.com/users/jonathanslenders/repos",
      "events_url": "https://api.github.com/users/jonathanslenders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonathanslenders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-04T13:42:52Z",
    "updated_at": "2017-03-04T13:44:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "I just realized that if you enable readline-style autocompletion, that it doesn't use a separate thread.\r\nSee this example: https://github.com/jonathanslenders/python-prompt-toolkit/blob/master/examples/autocompletion-like-readline.py  (I'm not sure how that can be configured in IPython.)\r\n\r\nedit: Probably it's even the case if ``complete_while_typing=False`` is set (without readline-style visualisation)."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/284154639",
    "html_url": "https://github.com/ipython/ipython/issues/10315#issuecomment-284154639",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10315",
    "id": 284154639,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDE1NDYzOQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-04T14:27:19Z",
    "updated_at": "2017-03-04T14:27:19Z",
    "author_association": "MEMBER",
    "body": "To configure readline-like completions in IPython, set `TerminalInteractiveShell.display_completions = 'readlinelike'` (see [config docs](http://ipython.readthedocs.io/en/stable/config/intro.html)).\r\n\r\n`complete_while_typing` is already disabled by default in IPython, because we use `enable_history_search`, and the two options are mutually exclusive. It seems like completion  still uses a thread, though."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/302245980",
    "html_url": "https://github.com/ipython/ipython/issues/10315#issuecomment-302245980",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10315",
    "id": 302245980,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjI0NTk4MA==",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-17T22:11:15Z",
    "updated_at": "2017-05-17T22:11:15Z",
    "author_association": "MEMBER",
    "body": "@rdemaria, I just want to mention that if you would like the old (IPython <= 4.x) readline interface, it is now available separately as [rlipython](https://github.com/ipython/rlipython). \r\n\r\n```\r\npip install rlipython\r\npython -c \"import rlipython as r; r.install()\"\r\n```\r\n\r\nRight now, it only works in IPython 6.0 (Python 3), but it will also work in Python 2 with the next IPython 5 release (5.4)."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/302337236",
    "html_url": "https://github.com/ipython/ipython/issues/10315#issuecomment-302337236",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10315",
    "id": 302337236,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjMzNzIzNg==",
    "user": {
      "login": "rdemaria",
      "id": 54369,
      "node_id": "MDQ6VXNlcjU0MzY5",
      "avatar_url": "https://avatars2.githubusercontent.com/u/54369?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rdemaria",
      "html_url": "https://github.com/rdemaria",
      "followers_url": "https://api.github.com/users/rdemaria/followers",
      "following_url": "https://api.github.com/users/rdemaria/following{/other_user}",
      "gists_url": "https://api.github.com/users/rdemaria/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rdemaria/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rdemaria/subscriptions",
      "organizations_url": "https://api.github.com/users/rdemaria/orgs",
      "repos_url": "https://api.github.com/users/rdemaria/repos",
      "events_url": "https://api.github.com/users/rdemaria/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rdemaria/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-18T08:29:45Z",
    "updated_at": "2017-05-18T08:29:45Z",
    "author_association": "NONE",
    "body": "Thanks for the information. Thankfully jpype was update to be compatible with the new ipython behaviour, however I find good there is a way back..."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/332895165",
    "html_url": "https://github.com/ipython/ipython/issues/10315#issuecomment-332895165",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10315",
    "id": 332895165,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjg5NTE2NQ==",
    "user": {
      "login": "dimpase",
      "id": 1276956,
      "node_id": "MDQ6VXNlcjEyNzY5NTY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1276956?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dimpase",
      "html_url": "https://github.com/dimpase",
      "followers_url": "https://api.github.com/users/dimpase/followers",
      "following_url": "https://api.github.com/users/dimpase/following{/other_user}",
      "gists_url": "https://api.github.com/users/dimpase/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dimpase/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dimpase/subscriptions",
      "organizations_url": "https://api.github.com/users/dimpase/orgs",
      "repos_url": "https://api.github.com/users/dimpase/repos",
      "events_url": "https://api.github.com/users/dimpase/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dimpase/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-28T16:43:51Z",
    "updated_at": "2017-09-28T16:43:51Z",
    "author_association": "NONE",
    "body": "we are facing a similar issue in Sagemath, with an extension that embeds a Common Lisp interpreter ECL, which crashes on some versions of Linux:\r\nhttps://trac.sagemath.org/ticket/23700#comment:11\r\n\r\nNamely, tab completion on import of something from a component using this extension crashes with a segfault."
  }
]
