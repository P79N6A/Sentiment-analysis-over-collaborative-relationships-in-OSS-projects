[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/356316043",
    "html_url": "https://github.com/ipython/ipython/pull/10974#issuecomment-356316043",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10974",
    "id": 356316043,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjMxNjA0Mw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-09T15:25:12Z",
    "updated_at": "2018-01-09T15:25:12Z",
    "author_association": "MEMBER",
    "body": "I'd say it's up to matplotlib to pick a better backend in that situation.\r\n\r\ncc @tacaswell "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/356336498",
    "html_url": "https://github.com/ipython/ipython/pull/10974#issuecomment-356336498",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10974",
    "id": 356336498,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjMzNjQ5OA==",
    "user": {
      "login": "boeddeker",
      "id": 13744128,
      "node_id": "MDQ6VXNlcjEzNzQ0MTI4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/13744128?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/boeddeker",
      "html_url": "https://github.com/boeddeker",
      "followers_url": "https://api.github.com/users/boeddeker/followers",
      "following_url": "https://api.github.com/users/boeddeker/following{/other_user}",
      "gists_url": "https://api.github.com/users/boeddeker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/boeddeker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/boeddeker/subscriptions",
      "organizations_url": "https://api.github.com/users/boeddeker/orgs",
      "repos_url": "https://api.github.com/users/boeddeker/repos",
      "events_url": "https://api.github.com/users/boeddeker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/boeddeker/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-09T16:28:15Z",
    "updated_at": "2018-01-09T16:28:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "I agree that the default backend in this situation should be another one.\r\nBut it is still the problem when a user wants to use Qt as backend.\r\nWhen simulations run on a remote server and use the same code base, the user can hit this bug while debugging.\r\nThe current error msg is annoying and does not really help.\r\nIt would be better to have a try except around the Qt code, but I do not know if this is possible.\r\n\r\nSo an exception with information about the cause with a solution is an alternate."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/356345999",
    "html_url": "https://github.com/ipython/ipython/pull/10974#issuecomment-356345999",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10974",
    "id": 356345999,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjM0NTk5OQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-09T16:57:37Z",
    "updated_at": "2018-01-09T16:57:37Z",
    "author_association": "MEMBER",
    "body": "Is it possible to use Qt as a backend in a headless environment at all? I assumed that was just impossible."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/356349554",
    "html_url": "https://github.com/ipython/ipython/pull/10974#issuecomment-356349554",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10974",
    "id": 356349554,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjM0OTU1NA==",
    "user": {
      "login": "boeddeker",
      "id": 13744128,
      "node_id": "MDQ6VXNlcjEzNzQ0MTI4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/13744128?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/boeddeker",
      "html_url": "https://github.com/boeddeker",
      "followers_url": "https://api.github.com/users/boeddeker/followers",
      "following_url": "https://api.github.com/users/boeddeker/following{/other_user}",
      "gists_url": "https://api.github.com/users/boeddeker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/boeddeker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/boeddeker/subscriptions",
      "organizations_url": "https://api.github.com/users/boeddeker/orgs",
      "repos_url": "https://api.github.com/users/boeddeker/repos",
      "events_url": "https://api.github.com/users/boeddeker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/boeddeker/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-09T17:09:02Z",
    "updated_at": "2018-01-09T17:09:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "It depends on how you define use.\r\n\r\nIn my mind, the following code should always work in any python interpreter and any environment.\r\n```python\r\nimport matplotlib\r\nmatplotlib.use('Qt5Agg')\r\nimport matplotlib.pyplot\r\n```\r\nBecause it is typical code at the top of files that contain visualization functions, that may be imported, but not executed.\r\nOr at least raise an appropriate error msg.\r\n\r\nThe following should raise an exception, depending if is possible to render the plot\r\n```python\r\nmatplotlib.pyplot.plot(...)\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/356350060",
    "html_url": "https://github.com/ipython/ipython/pull/10974#issuecomment-356350060",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10974",
    "id": 356350060,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjM1MDA2MA==",
    "user": {
      "login": "dsblank",
      "id": 168568,
      "node_id": "MDQ6VXNlcjE2ODU2OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/168568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsblank",
      "html_url": "https://github.com/dsblank",
      "followers_url": "https://api.github.com/users/dsblank/followers",
      "following_url": "https://api.github.com/users/dsblank/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsblank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsblank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsblank/subscriptions",
      "organizations_url": "https://api.github.com/users/dsblank/orgs",
      "repos_url": "https://api.github.com/users/dsblank/repos",
      "events_url": "https://api.github.com/users/dsblank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsblank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-09T17:10:47Z",
    "updated_at": "2018-01-09T17:10:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "We had to work around this issue. We did this:\r\n\r\n```python\r\nif ((\"DISPLAY\" not in os.environ) or\r\n    (os.environ[\"DISPLAY\"] == \"\")):\r\n    if (matplotlib.get_backend() in [\r\n            'module://ipykernel.pylab.backend_inline',\r\n            'NbAgg',\r\n            ]):\r\n        pass  ## Don't change if server has no DISPLAY but is connected to notebook\r\n    else:\r\n        matplotlib.use('Agg')\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/356360859",
    "html_url": "https://github.com/ipython/ipython/pull/10974#issuecomment-356360859",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10974",
    "id": 356360859,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjM2MDg1OQ==",
    "user": {
      "login": "ccordoba12",
      "id": 365293,
      "node_id": "MDQ6VXNlcjM2NTI5Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/365293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ccordoba12",
      "html_url": "https://github.com/ccordoba12",
      "followers_url": "https://api.github.com/users/ccordoba12/followers",
      "following_url": "https://api.github.com/users/ccordoba12/following{/other_user}",
      "gists_url": "https://api.github.com/users/ccordoba12/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ccordoba12/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ccordoba12/subscriptions",
      "organizations_url": "https://api.github.com/users/ccordoba12/orgs",
      "repos_url": "https://api.github.com/users/ccordoba12/repos",
      "events_url": "https://api.github.com/users/ccordoba12/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ccordoba12/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-09T17:48:32Z",
    "updated_at": "2018-01-09T17:48:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "> In my mind, the following code should always work in any python interpreter and any environment.\r\n\r\nThe Qt5 package from Anaconda and the conda-forge one too are linked against X libraries, so I really don't understand how setting the Qt5Agg backend is going to \"work\" on a headless server.\r\n\r\n> We had to work around this issue. We did this\r\n\r\nI find @dsblank solution better than the OP one."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/356585212",
    "html_url": "https://github.com/ipython/ipython/pull/10974#issuecomment-356585212",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10974",
    "id": 356585212,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjU4NTIxMg==",
    "user": {
      "login": "boeddeker",
      "id": 13744128,
      "node_id": "MDQ6VXNlcjEzNzQ0MTI4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/13744128?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/boeddeker",
      "html_url": "https://github.com/boeddeker",
      "followers_url": "https://api.github.com/users/boeddeker/followers",
      "following_url": "https://api.github.com/users/boeddeker/following{/other_user}",
      "gists_url": "https://api.github.com/users/boeddeker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/boeddeker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/boeddeker/subscriptions",
      "organizations_url": "https://api.github.com/users/boeddeker/orgs",
      "repos_url": "https://api.github.com/users/boeddeker/repos",
      "events_url": "https://api.github.com/users/boeddeker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/boeddeker/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-10T12:12:54Z",
    "updated_at": "2018-01-10T12:12:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "> The Qt5 package from Anaconda and the conda-forge one too are linked against X libraries, so I really don't understand how setting the Qt5Agg backend is going to \"work\" on a headless server.\r\n\r\nThe server where I have access use the same operating system as workstations and anaconda is installed on a network drive, so the X libraries are installed.\r\n\r\n> I find @dsblank solution better than the OP one.\r\n\r\nI find @dsblank solution is a nice workaround, but it shouldn't be in any user code.\r\nWhat happens when someone uses another jupyter backend? Or the name `module://ipykernel.pylab.backend_inline` changes?\r\nOr someone uses matplotlib to produce image files with a special backend?\r\n\r\nSo from my viewpoint, the solution should be on the library side (matplotlib, Qt, IPython, Anaconda).\r\n\r\nNevertheless, it is annoying, that there is no python exception that explains what happens wrong and how to solve it.\r\n\r\nSo on the IPython side, an exception instead a warning in `inputhook` is better?\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/356636022",
    "html_url": "https://github.com/ipython/ipython/pull/10974#issuecomment-356636022",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10974",
    "id": 356636022,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjYzNjAyMg==",
    "user": {
      "login": "ccordoba12",
      "id": 365293,
      "node_id": "MDQ6VXNlcjM2NTI5Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/365293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ccordoba12",
      "html_url": "https://github.com/ccordoba12",
      "followers_url": "https://api.github.com/users/ccordoba12/followers",
      "following_url": "https://api.github.com/users/ccordoba12/following{/other_user}",
      "gists_url": "https://api.github.com/users/ccordoba12/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ccordoba12/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ccordoba12/subscriptions",
      "organizations_url": "https://api.github.com/users/ccordoba12/orgs",
      "repos_url": "https://api.github.com/users/ccordoba12/repos",
      "events_url": "https://api.github.com/users/ccordoba12/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ccordoba12/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-10T15:27:28Z",
    "updated_at": "2018-01-10T15:27:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "> So on the IPython side, an exception instead a warning in inputhook is better?\r\n\r\nNo, of course not. I just think that you should use @dsblank code instead of one you proposed in this PR.\r\n\r\n> What happens when someone uses another jupyter backend?\r\n\r\nI think the only backend that fails when no DISPLAY is available is Qt5Agg. Could you test it, please?\r\n\r\n> Or someone uses matplotlib to produce image files with a special backend?\r\n\r\nWell, I guess special backends (like Agg) doesn't need DISPLAY. That's what makes them special."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/356673929",
    "html_url": "https://github.com/ipython/ipython/pull/10974#issuecomment-356673929",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10974",
    "id": 356673929,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjY3MzkyOQ==",
    "user": {
      "login": "boeddeker",
      "id": 13744128,
      "node_id": "MDQ6VXNlcjEzNzQ0MTI4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/13744128?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/boeddeker",
      "html_url": "https://github.com/boeddeker",
      "followers_url": "https://api.github.com/users/boeddeker/followers",
      "following_url": "https://api.github.com/users/boeddeker/following{/other_user}",
      "gists_url": "https://api.github.com/users/boeddeker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/boeddeker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/boeddeker/subscriptions",
      "organizations_url": "https://api.github.com/users/boeddeker/orgs",
      "repos_url": "https://api.github.com/users/boeddeker/repos",
      "events_url": "https://api.github.com/users/boeddeker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/boeddeker/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-10T17:23:58Z",
    "updated_at": "2018-01-10T17:23:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "\r\nAccording to https://stackoverflow.com/a/5092255/5766934 a subset of all matplotlib backends are\r\n```\r\n>>> matplotlib.rcsetup.interactive_bk\r\n['GTK', 'GTKAgg', 'GTKCairo', 'MacOSX', 'Qt4Agg', 'Qt5Agg', 'TkAgg', 'WX', 'WXAgg', 'GTK3Cairo', 'GTK3Agg', 'WebAgg', 'nbAgg']\r\n>>> matplotlib.rcsetup.non_interactive_bk\r\n['agg', 'cairo', 'gdk', 'pdf', 'pgf', 'ps', 'svg', 'template']\r\n```\r\nTkAgg and nbAgg work.\r\n```\r\nimport matplotlib; matplotlib.use('TkAgg'); import matplotlib.pylab\r\nimport matplotlib; matplotlib.use('nbAgg'); import matplotlib.pylab\r\n```\r\n\r\nThe others do not work (Missing libs), but all oft them throw an exception (Not a C++ Error).\r\n```python\r\n>>> import matplotlib; matplotlib.use('GTK'); import matplotlib.pylab\r\nImportError: Gtk* backend requires pygtk to be installed.\r\n# Same for 'GTKAgg', 'GTKCairo', 'MacOSX'\r\n>>> import matplotlib; matplotlib.use('Qt4Agg'); import matplotlib.pylab\r\nModuleNotFoundError: No module named 'PyQt4'\r\n>>> import matplotlib; matplotlib.use('WX'); import matplotlib.pylab\r\nImportError: Matplotlib backend_wx and backend_wxagg require wxPython >=2.8.12\r\n>>> import matplotlib; matplotlib.use('WebAgg'); import matplotlib.pylab\r\nNameError: name 'FigureManagerWebAgg' is not defined\r\n```\r\n\r\nSo on my server, only Ot5 does not work with IPython and that backend is the only one that closes the ipython shell.\r\n\r\n> No, of course not. I just think that you should use @dsblank code instead of one you proposed in this PR.\r\n\r\nAs a solution on the user side, it is a bad idea (As workaround it is fine) because what when I want to use the SVG backend? It will be overwritten.\r\nI want to have a solution and not a workaround.\r\n\r\n> I think the only backend that fails when no DISPLAY is available is Qt5Agg. Could you test it, please?\r\n\r\nYes, only Qt5Agg have a C++ Error. The two other interactive backends that run on the server are importable.\r\n\r\n> Well, I guess special backends (like Agg) doesn't need DISPLAY. That's what makes them special.\r\n\r\nYes, but there are more than Agg for example SVG. So with above workaround, you need to add all non-interactive backends. \r\nAnd `'module://ipykernel.pylab.backend_inline'` is an example that is not listed from matplotlib.\r\nFurther the backends are not case sensitive, for example, my notebooks have `nbAgg` as the backend, while dsblank has `NbAgg`. This needs also be handled.\r\n\r\nThe only thing I want is to get rid of the C++ exception and get instead a Python exception or it is silent.\r\n\r\nThe next point after this is to figure out where Qt5 is set as default and change it for linux (and mac?) to \r\n```\r\nif ((\"DISPLAY\" not in os.environ) or\r\n    (os.environ[\"DISPLAY\"] == \"\")):\r\n        matplotlib.use('Agg')\r\nelse:\r\n        matplotlib.use('Qt5Agg')\r\n```\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/356674762",
    "html_url": "https://github.com/ipython/ipython/pull/10974#issuecomment-356674762",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10974",
    "id": 356674762,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjY3NDc2Mg==",
    "user": {
      "login": "boeddeker",
      "id": 13744128,
      "node_id": "MDQ6VXNlcjEzNzQ0MTI4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/13744128?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/boeddeker",
      "html_url": "https://github.com/boeddeker",
      "followers_url": "https://api.github.com/users/boeddeker/followers",
      "following_url": "https://api.github.com/users/boeddeker/following{/other_user}",
      "gists_url": "https://api.github.com/users/boeddeker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/boeddeker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/boeddeker/subscriptions",
      "organizations_url": "https://api.github.com/users/boeddeker/orgs",
      "repos_url": "https://api.github.com/users/boeddeker/repos",
      "events_url": "https://api.github.com/users/boeddeker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/boeddeker/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-10T17:26:39Z",
    "updated_at": "2018-01-10T17:26:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "To clarify, I am not concerning that the Qt5Agg backend does not work, I am concerning that the python interpreter stops to work with a C++ exception and not a Python Exception."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/356676326",
    "html_url": "https://github.com/ipython/ipython/pull/10974#issuecomment-356676326",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10974",
    "id": 356676326,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjY3NjMyNg==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-10T17:32:04Z",
    "updated_at": "2018-01-10T17:32:04Z",
    "author_association": "MEMBER",
    "body": "That makes sense. But is the C++ error coming from something we do with Qt, or something matplotlib does?"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/356677819",
    "html_url": "https://github.com/ipython/ipython/pull/10974#issuecomment-356677819",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10974",
    "id": 356677819,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjY3NzgxOQ==",
    "user": {
      "login": "ccordoba12",
      "id": 365293,
      "node_id": "MDQ6VXNlcjM2NTI5Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/365293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ccordoba12",
      "html_url": "https://github.com/ccordoba12",
      "followers_url": "https://api.github.com/users/ccordoba12/followers",
      "following_url": "https://api.github.com/users/ccordoba12/following{/other_user}",
      "gists_url": "https://api.github.com/users/ccordoba12/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ccordoba12/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ccordoba12/subscriptions",
      "organizations_url": "https://api.github.com/users/ccordoba12/orgs",
      "repos_url": "https://api.github.com/users/ccordoba12/repos",
      "events_url": "https://api.github.com/users/ccordoba12/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ccordoba12/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-10T17:37:25Z",
    "updated_at": "2018-01-10T17:42:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "> The next point after this is to figure out where Qt5 is set as default and change it for linux (and mac?)\r\n\r\nThe backend is set directly by the Matplotlib Anaconda packages:\r\n\r\nhttps://github.com/AnacondaRecipes/matplotlib-feedstock/blob/master/recipe/cfg_qt5agg.patch\r\n\r\n> But is the C++ error coming from something we do with Qt, or something matplotlib does?\r\n\r\nI think it comes directly from PyQt5."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/356678374",
    "html_url": "https://github.com/ipython/ipython/pull/10974#issuecomment-356678374",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10974",
    "id": 356678374,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjY3ODM3NA==",
    "user": {
      "login": "ccordoba12",
      "id": 365293,
      "node_id": "MDQ6VXNlcjM2NTI5Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/365293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ccordoba12",
      "html_url": "https://github.com/ccordoba12",
      "followers_url": "https://api.github.com/users/ccordoba12/followers",
      "following_url": "https://api.github.com/users/ccordoba12/following{/other_user}",
      "gists_url": "https://api.github.com/users/ccordoba12/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ccordoba12/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ccordoba12/subscriptions",
      "organizations_url": "https://api.github.com/users/ccordoba12/orgs",
      "repos_url": "https://api.github.com/users/ccordoba12/repos",
      "events_url": "https://api.github.com/users/ccordoba12/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ccordoba12/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-10T17:39:20Z",
    "updated_at": "2018-01-10T17:39:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "After giving it a bit of thought, I think @boeddeker is a good compromise.\r\n\r\n@takluyver?"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/356684825",
    "html_url": "https://github.com/ipython/ipython/pull/10974#issuecomment-356684825",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10974",
    "id": 356684825,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjY4NDgyNQ==",
    "user": {
      "login": "boeddeker",
      "id": 13744128,
      "node_id": "MDQ6VXNlcjEzNzQ0MTI4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/13744128?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/boeddeker",
      "html_url": "https://github.com/boeddeker",
      "followers_url": "https://api.github.com/users/boeddeker/followers",
      "following_url": "https://api.github.com/users/boeddeker/following{/other_user}",
      "gists_url": "https://api.github.com/users/boeddeker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/boeddeker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/boeddeker/subscriptions",
      "organizations_url": "https://api.github.com/users/boeddeker/orgs",
      "repos_url": "https://api.github.com/users/boeddeker/repos",
      "events_url": "https://api.github.com/users/boeddeker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/boeddeker/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-10T18:00:39Z",
    "updated_at": "2018-01-10T18:00:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "> That makes sense. But is the C++ error coming from something we do with Qt, or something matplotlib does?\r\n\r\nI forgot to mention that the line below my modifications breaks `QtGui.QApplication([\" \"])`.\r\nIt has something to do with the prompt_toolkit and hooks that are executed.\r\nI am not sure why the code is executed, but with the activated Qt backend (i.e. `import matplotlib.pyplot`) IPython gets this Qt hook.\r\nI only investigated where the error happens, not why the function is called (I went through functions from prompt_toolkit, traitlet and Ipython).\r\n\r\n> The backend is set directly by the Matplotlib Anaconda packages:\r\nhttps://github.com/AnacondaRecipes/matplotlib-feedstock/blob/master/recipe/cfg_qt5agg.patch\r\n\r\nThanks for the link, it saves me many searches. I was hoping the backend is set in a python file and not in an ini file.\r\n\r\nDepending what the IPython developers decide (Exception/Warning/Silent) it may not be necessary to change the default backend on a server.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/370719039",
    "html_url": "https://github.com/ipython/ipython/pull/10974#issuecomment-370719039",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10974",
    "id": 370719039,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDcxOTAzOQ==",
    "user": {
      "login": "boeddeker",
      "id": 13744128,
      "node_id": "MDQ6VXNlcjEzNzQ0MTI4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/13744128?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/boeddeker",
      "html_url": "https://github.com/boeddeker",
      "followers_url": "https://api.github.com/users/boeddeker/followers",
      "following_url": "https://api.github.com/users/boeddeker/following{/other_user}",
      "gists_url": "https://api.github.com/users/boeddeker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/boeddeker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/boeddeker/subscriptions",
      "organizations_url": "https://api.github.com/users/boeddeker/orgs",
      "repos_url": "https://api.github.com/users/boeddeker/repos",
      "events_url": "https://api.github.com/users/boeddeker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/boeddeker/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-06T09:30:36Z",
    "updated_at": "2018-03-06T09:30:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "Any plans to merge this or fix this at another position? \r\nIt is always annoying when the interactive interpreter exits."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/370839105",
    "html_url": "https://github.com/ipython/ipython/pull/10974#issuecomment-370839105",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10974",
    "id": 370839105,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDgzOTEwNQ==",
    "user": {
      "login": "ccordoba12",
      "id": 365293,
      "node_id": "MDQ6VXNlcjM2NTI5Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/365293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ccordoba12",
      "html_url": "https://github.com/ccordoba12",
      "followers_url": "https://api.github.com/users/ccordoba12/followers",
      "following_url": "https://api.github.com/users/ccordoba12/following{/other_user}",
      "gists_url": "https://api.github.com/users/ccordoba12/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ccordoba12/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ccordoba12/subscriptions",
      "organizations_url": "https://api.github.com/users/ccordoba12/orgs",
      "repos_url": "https://api.github.com/users/ccordoba12/repos",
      "events_url": "https://api.github.com/users/ccordoba12/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ccordoba12/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-06T16:24:25Z",
    "updated_at": "2018-03-06T16:24:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "+1 from me to merge."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/371103980",
    "html_url": "https://github.com/ipython/ipython/pull/10974#issuecomment-371103980",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10974",
    "id": 371103980,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTEwMzk4MA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-07T11:04:13Z",
    "updated_at": "2018-03-07T11:04:13Z",
    "author_association": "MEMBER",
    "body": "I think we need to find a better way of checking whether we can use a GUI. $DISPLAY is for X, but Qt can also run on top of Wayland, which doesn't need that environment variable. I'm already running Wayland on Fedora - at the moment DISPLAY is still set for the XWayland compatibility layer, but I bet that before long someone will be running Wayland without the compatibility layer, and then the check is wrong.\r\n\r\nIdeally Qt itself should provide some way of checking if it has a display to draw to, but at a minimum we should check:\r\n\r\n```python\r\nos.environ.get('DISPLAY') or os.environ.get('WAYLAND_DISPLAY')\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/371424765",
    "html_url": "https://github.com/ipython/ipython/pull/10974#issuecomment-371424765",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10974",
    "id": 371424765,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTQyNDc2NQ==",
    "user": {
      "login": "boeddeker",
      "id": 13744128,
      "node_id": "MDQ6VXNlcjEzNzQ0MTI4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/13744128?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/boeddeker",
      "html_url": "https://github.com/boeddeker",
      "followers_url": "https://api.github.com/users/boeddeker/followers",
      "following_url": "https://api.github.com/users/boeddeker/following{/other_user}",
      "gists_url": "https://api.github.com/users/boeddeker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/boeddeker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/boeddeker/subscriptions",
      "organizations_url": "https://api.github.com/users/boeddeker/orgs",
      "repos_url": "https://api.github.com/users/boeddeker/repos",
      "events_url": "https://api.github.com/users/boeddeker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/boeddeker/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-08T09:04:51Z",
    "updated_at": "2018-03-08T09:04:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, I added WAYLAND_DISPLAY."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/371521214",
    "html_url": "https://github.com/ipython/ipython/pull/10974#issuecomment-371521214",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10974",
    "id": 371521214,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTUyMTIxNA==",
    "user": {
      "login": "tacaswell",
      "id": 199813,
      "node_id": "MDQ6VXNlcjE5OTgxMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/199813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tacaswell",
      "html_url": "https://github.com/tacaswell",
      "followers_url": "https://api.github.com/users/tacaswell/followers",
      "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
      "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
      "organizations_url": "https://api.github.com/users/tacaswell/orgs",
      "repos_url": "https://api.github.com/users/tacaswell/repos",
      "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tacaswell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-08T15:27:57Z",
    "updated_at": "2018-03-08T15:27:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am :+1: on this being fixed at the IPython level.  At the Matplotlib level if the user asks to use qt5agg then we should respect that (even if it causes exceptions).\r\n\r\nSimilar logic should be put into all of the GUI input hooks?"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/371807129",
    "html_url": "https://github.com/ipython/ipython/pull/10974#issuecomment-371807129",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10974",
    "id": 371807129,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTgwNzEyOQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-09T13:06:14Z",
    "updated_at": "2018-03-09T13:06:14Z",
    "author_association": "MEMBER",
    "body": "I think the issue that made this particularly a problem with Qt is that the error crashes the process. I don't know if the integration with other toolkits fails as hard in a headless environment, but it would definitely be good if someone could check."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/380298187",
    "html_url": "https://github.com/ipython/ipython/pull/10974#issuecomment-380298187",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10974",
    "id": 380298187,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDI5ODE4Nw==",
    "user": {
      "login": "isaacovercast",
      "id": 5974975,
      "node_id": "MDQ6VXNlcjU5NzQ5NzU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5974975?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/isaacovercast",
      "html_url": "https://github.com/isaacovercast",
      "followers_url": "https://api.github.com/users/isaacovercast/followers",
      "following_url": "https://api.github.com/users/isaacovercast/following{/other_user}",
      "gists_url": "https://api.github.com/users/isaacovercast/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/isaacovercast/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/isaacovercast/subscriptions",
      "organizations_url": "https://api.github.com/users/isaacovercast/orgs",
      "repos_url": "https://api.github.com/users/isaacovercast/repos",
      "events_url": "https://api.github.com/users/isaacovercast/events{/privacy}",
      "received_events_url": "https://api.github.com/users/isaacovercast/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-11T01:34:35Z",
    "updated_at": "2018-04-11T01:42:52Z",
    "author_association": "NONE",
    "body": "Any chance this will get backported to the 5.x branch? In my case the behavior was very difficult to debug (ipyparallel engines failing silently was driving me insane). The fix seems reasonable, simple, and it should provide more transparent behavior. Also, not sure if anybody else saw this, but in my case ipyparallel engines were actually segfaulting D: \r\n\r\nHey, thanks for all your awesome work on ipython! It's really really awesome and useful!"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/384955974",
    "html_url": "https://github.com/ipython/ipython/pull/10974#issuecomment-384955974",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10974",
    "id": 384955974,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDk1NTk3NA==",
    "user": {
      "login": "boeddeker",
      "id": 13744128,
      "node_id": "MDQ6VXNlcjEzNzQ0MTI4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/13744128?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/boeddeker",
      "html_url": "https://github.com/boeddeker",
      "followers_url": "https://api.github.com/users/boeddeker/followers",
      "following_url": "https://api.github.com/users/boeddeker/following{/other_user}",
      "gists_url": "https://api.github.com/users/boeddeker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/boeddeker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/boeddeker/subscriptions",
      "organizations_url": "https://api.github.com/users/boeddeker/orgs",
      "repos_url": "https://api.github.com/users/boeddeker/repos",
      "events_url": "https://api.github.com/users/boeddeker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/boeddeker/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-27T12:30:59Z",
    "updated_at": "2018-04-27T12:30:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, I applied the comments"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/418505657",
    "html_url": "https://github.com/ipython/ipython/pull/10974#issuecomment-418505657",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10974",
    "id": 418505657,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODUwNTY1Nw==",
    "user": {
      "login": "andportnoy",
      "id": 9360340,
      "node_id": "MDQ6VXNlcjkzNjAzNDA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9360340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andportnoy",
      "html_url": "https://github.com/andportnoy",
      "followers_url": "https://api.github.com/users/andportnoy/followers",
      "following_url": "https://api.github.com/users/andportnoy/following{/other_user}",
      "gists_url": "https://api.github.com/users/andportnoy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andportnoy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andportnoy/subscriptions",
      "organizations_url": "https://api.github.com/users/andportnoy/orgs",
      "repos_url": "https://api.github.com/users/andportnoy/repos",
      "events_url": "https://api.github.com/users/andportnoy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andportnoy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-04T20:24:16Z",
    "updated_at": "2018-09-04T20:24:16Z",
    "author_association": "NONE",
    "body": "@boeddeker @takluyver Any updates on this PR?"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/419738419",
    "html_url": "https://github.com/ipython/ipython/pull/10974#issuecomment-419738419",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10974",
    "id": 419738419,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTczODQxOQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-09T19:20:34Z",
    "updated_at": "2018-09-09T19:20:34Z",
    "author_association": "MEMBER",
    "body": "I've rebased. Tests are now passing."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/419738563",
    "html_url": "https://github.com/ipython/ipython/pull/10974#issuecomment-419738563",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10974",
    "id": 419738563,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTczODU2Mw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-09T19:22:54Z",
    "updated_at": "2018-09-09T19:22:54Z",
    "author_association": "MEMBER",
    "body": "I also haven't been involved before, so it would take time to be up-to-speed. IIRC about warnings, we do clear the warning registry explicitly, so warning reappearing and custom logic being needed make sens to me."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/419916751",
    "html_url": "https://github.com/ipython/ipython/pull/10974#issuecomment-419916751",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10974",
    "id": 419916751,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTkxNjc1MQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-10T13:43:45Z",
    "updated_at": "2018-09-10T13:43:45Z",
    "author_association": "MEMBER",
    "body": "Ok, I reviewed the discussion, and this is just adding warnings, and deactivating Qt. There is the small disagreement about warning showing everytime but I'm favor of moving forward with at least an explanation for users.\r\n\r\nWe can still update the behavior later. \r\nMerging. \r\n\r\n> Any chance this will get backported to the 5.x branch?\r\n\r\nI'm marking as backport, just to see if this will apply cleanly, if not someone will have to send a PR against 5.x."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/471816821",
    "html_url": "https://github.com/ipython/ipython/pull/10974#issuecomment-471816821",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10974",
    "id": 471816821,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MTgxNjgyMQ==",
    "user": {
      "login": "tacaswell",
      "id": 199813,
      "node_id": "MDQ6VXNlcjE5OTgxMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/199813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tacaswell",
      "html_url": "https://github.com/tacaswell",
      "followers_url": "https://api.github.com/users/tacaswell/followers",
      "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
      "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
      "organizations_url": "https://api.github.com/users/tacaswell/orgs",
      "repos_url": "https://api.github.com/users/tacaswell/repos",
      "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tacaswell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-12T01:55:11Z",
    "updated_at": "2019-03-12T01:55:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "As a late follow up, as of 3.0 Matplotlib does a better job of not, by default, selecting a GUI backend on a headless machine (but will still respect an rcparams file that asks for it)."
  }
]
