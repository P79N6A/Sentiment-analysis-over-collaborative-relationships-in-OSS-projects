[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/80561716",
    "html_url": "https://github.com/ipython/ipython/issues/8053#issuecomment-80561716",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8053",
    "id": 80561716,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNTYxNzE2",
    "user": {
      "login": "vbraun",
      "id": 888729,
      "node_id": "MDQ6VXNlcjg4ODcyOQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/888729?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbraun",
      "html_url": "https://github.com/vbraun",
      "followers_url": "https://api.github.com/users/vbraun/followers",
      "following_url": "https://api.github.com/users/vbraun/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbraun/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbraun/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbraun/subscriptions",
      "organizations_url": "https://api.github.com/users/vbraun/orgs",
      "repos_url": "https://api.github.com/users/vbraun/repos",
      "events_url": "https://api.github.com/users/vbraun/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbraun/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-14T16:26:31Z",
    "updated_at": "2015-03-14T16:26:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "Somewhat related, relative paths in FileLink are normalized incorrectly, for example\n\n```\nFileLink('../../tmp/foo.png')\n```\n\ndisplays `http://localhost:8888/tmp/foo.png` as link which obviously can't work. \n\nIf I manually browse to a url with a relative path component like `http://localhost:8888/files/../../tmp/foo.png` then I'm getting redirected to the incorrect path normalization  `http://localhost:8888/tmp/foo.png` which again can't work. Either forbid relative paths (why?) or don't normalize it. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/80565745",
    "html_url": "https://github.com/ipython/ipython/issues/8053#issuecomment-80565745",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8053",
    "id": 80565745,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNTY1NzQ1",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-14T16:37:16Z",
    "updated_at": "2015-03-14T16:37:16Z",
    "author_association": "MEMBER",
    "body": "Yup, we should raise on any attempt to link to absolute files, since absolute paths will always fail due to URL tree isolation (only files within the root server dir are accessible).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/80567265",
    "html_url": "https://github.com/ipython/ipython/issues/8053#issuecomment-80567265",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8053",
    "id": 80567265,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNTY3MjY1",
    "user": {
      "login": "vbraun",
      "id": 888729,
      "node_id": "MDQ6VXNlcjg4ODcyOQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/888729?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbraun",
      "html_url": "https://github.com/vbraun",
      "followers_url": "https://api.github.com/users/vbraun/followers",
      "following_url": "https://api.github.com/users/vbraun/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbraun/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbraun/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbraun/subscriptions",
      "organizations_url": "https://api.github.com/users/vbraun/orgs",
      "repos_url": "https://api.github.com/users/vbraun/repos",
      "events_url": "https://api.github.com/users/vbraun/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbraun/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-14T16:42:02Z",
    "updated_at": "2015-03-14T16:42:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "I haven't seen that restriction spelled out, nor does it make much sense to me. Why should only files in the tree descending from the ipython cwd be accessible? There is no security benefit. Temporary files are almost always outside of it and are a likely candidate for files that you might want to download from a remote server.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/80568028",
    "html_url": "https://github.com/ipython/ipython/issues/8053#issuecomment-80568028",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8053",
    "id": 80568028,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNTY4MDI4",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-14T16:42:45Z",
    "updated_at": "2015-03-14T16:42:45Z",
    "author_association": "MEMBER",
    "body": "@vbraun we don't handle the path, browsers do that. `..` behaves the same in URLs as it does in a path, so `/files/../foo` results in a request for `/foo`, and `/files/path/../otherpath` results in `/files/otherpath`, which is correct. Because of this, relative paths do actually work correctly, as long as they don't leave the root of the served directory.\n\nThe kernel, where the links are computed, doesn't know the server's root directory, so it can't verify that the root has been escaped.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/80568614",
    "html_url": "https://github.com/ipython/ipython/issues/8053#issuecomment-80568614",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8053",
    "id": 80568614,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNTY4NjE0",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-14T16:43:19Z",
    "updated_at": "2015-03-14T16:43:19Z",
    "author_association": "MEMBER",
    "body": "@vbraun the contents service, which serves these files, is restricted to a particular path. It does not serve all files on the system, nor should it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/80573835",
    "html_url": "https://github.com/ipython/ipython/issues/8053#issuecomment-80573835",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8053",
    "id": 80573835,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNTczODM1",
    "user": {
      "login": "vbraun",
      "id": 888729,
      "node_id": "MDQ6VXNlcjg4ODcyOQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/888729?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbraun",
      "html_url": "https://github.com/vbraun",
      "followers_url": "https://api.github.com/users/vbraun/followers",
      "following_url": "https://api.github.com/users/vbraun/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbraun/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbraun/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbraun/subscriptions",
      "organizations_url": "https://api.github.com/users/vbraun/orgs",
      "repos_url": "https://api.github.com/users/vbraun/repos",
      "events_url": "https://api.github.com/users/vbraun/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbraun/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-14T16:48:31Z",
    "updated_at": "2015-03-14T16:48:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ah good point, the handler doesn't see the '..'\n\nStill, why shouldn't it server all files? You can already execute arbitrary code. The standard tornado file server shouldn't of course, but the standard reason clearly doesn't apply.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/80576172",
    "html_url": "https://github.com/ipython/ipython/issues/8053#issuecomment-80576172",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8053",
    "id": 80576172,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNTc2MTcy",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-14T16:50:40Z",
    "updated_at": "2015-03-14T16:50:40Z",
    "author_association": "MEMBER",
    "body": "Kernels and server might not be on the same machine. You could run a docker instace isolated, then you don't care wether or not it runs arbitrary code. You don't want the server to expose your `~/.ssh/` keys.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/80580002",
    "html_url": "https://github.com/ipython/ipython/issues/8053#issuecomment-80580002",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8053",
    "id": 80580002,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNTgwMDAy",
    "user": {
      "login": "vbraun",
      "id": 888729,
      "node_id": "MDQ6VXNlcjg4ODcyOQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/888729?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbraun",
      "html_url": "https://github.com/vbraun",
      "followers_url": "https://api.github.com/users/vbraun/followers",
      "following_url": "https://api.github.com/users/vbraun/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbraun/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbraun/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbraun/subscriptions",
      "organizations_url": "https://api.github.com/users/vbraun/orgs",
      "repos_url": "https://api.github.com/users/vbraun/repos",
      "events_url": "https://api.github.com/users/vbraun/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbraun/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-14T16:54:24Z",
    "updated_at": "2015-03-14T16:54:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, I was under the impression that FileLink would serve from the kernel filesystem in that case. If its serving from the notebook server filesystem then its pretty useless to me anyways.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/80582054",
    "html_url": "https://github.com/ipython/ipython/issues/8053#issuecomment-80582054",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8053",
    "id": 80582054,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNTgyMDU0",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-14T16:56:35Z",
    "updated_at": "2015-03-14T16:56:35Z",
    "author_association": "MEMBER",
    "body": "You can make it serve all files:\n\n```\nipython notebook --notebook-dir=/\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/80583689",
    "html_url": "https://github.com/ipython/ipython/issues/8053#issuecomment-80583689",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8053",
    "id": 80583689,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNTgzNjg5",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-14T16:58:07Z",
    "updated_at": "2015-03-14T16:58:07Z",
    "author_association": "MEMBER",
    "body": "Yes, FileLinks came about only as a convenient shortcut for building common URLs. It doesn't serve any files itself, and will be totally useless if the contents service and kernels are separated.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/80584442",
    "html_url": "https://github.com/ipython/ipython/issues/8053#issuecomment-80584442",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8053",
    "id": 80584442,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNTg0NDQy",
    "user": {
      "login": "vbraun",
      "id": 888729,
      "node_id": "MDQ6VXNlcjg4ODcyOQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/888729?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbraun",
      "html_url": "https://github.com/vbraun",
      "followers_url": "https://api.github.com/users/vbraun/followers",
      "following_url": "https://api.github.com/users/vbraun/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbraun/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbraun/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbraun/subscriptions",
      "organizations_url": "https://api.github.com/users/vbraun/orgs",
      "repos_url": "https://api.github.com/users/vbraun/repos",
      "events_url": "https://api.github.com/users/vbraun/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbraun/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-14T16:58:49Z",
    "updated_at": "2015-03-14T16:58:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "So what is the recommended way for getting at files that the the kernel process created?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/80589060",
    "html_url": "https://github.com/ipython/ipython/issues/8053#issuecomment-80589060",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8053",
    "id": 80589060,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNTg5MDYw",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-14T17:03:13Z",
    "updated_at": "2015-03-14T17:03:13Z",
    "author_association": "MEMBER",
    "body": "We don't have a generic mechanism for serving files from the kernel if it is remote from the notebook. You can use the display system to publish things directly to the frontend, but there is no mechanism for URLs to refer to kernel data.\n\nAre you planning on separating notebook servers from their kernels? This is a rare, and generally not recommended pattern, because it comes with a lot of headaches, and few benefits. Isolating the notebook server and kernels together as a single multi-process application is more often the way to go.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/80599637",
    "html_url": "https://github.com/ipython/ipython/issues/8053#issuecomment-80599637",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8053",
    "id": 80599637,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNTk5NjM3",
    "user": {
      "login": "vbraun",
      "id": 888729,
      "node_id": "MDQ6VXNlcjg4ODcyOQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/888729?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vbraun",
      "html_url": "https://github.com/vbraun",
      "followers_url": "https://api.github.com/users/vbraun/followers",
      "following_url": "https://api.github.com/users/vbraun/following{/other_user}",
      "gists_url": "https://api.github.com/users/vbraun/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vbraun/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vbraun/subscriptions",
      "organizations_url": "https://api.github.com/users/vbraun/orgs",
      "repos_url": "https://api.github.com/users/vbraun/repos",
      "events_url": "https://api.github.com/users/vbraun/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vbraun/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-14T17:13:02Z",
    "updated_at": "2015-03-14T17:13:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm trying to find a way for Sage users to download generated files (where most types are not supported by the IPython display system) without having to know how their administrator set up the server.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/80703234",
    "html_url": "https://github.com/ipython/ipython/issues/8053#issuecomment-80703234",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8053",
    "id": 80703234,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNzAzMjM0",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-14T20:25:17Z",
    "updated_at": "2015-03-14T20:25:17Z",
    "author_association": "MEMBER",
    "body": "I don't know about the Sage deployment, but Sage could add an additional StaticFileHandler, serving all files in the kernel's filesystem. This should only be done if access to the handler itself is as restricted as access to execution on a kernel.\n"
  }
]
