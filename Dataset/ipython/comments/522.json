[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1380785",
    "html_url": "https://github.com/ipython/ipython/issues/522#issuecomment-1380785",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/522",
    "id": 1380785,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODA3ODU=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-06-16T13:05:30Z",
    "updated_at": "2011-06-16T13:05:30Z",
    "author_association": "MEMBER",
    "body": "Dammit, again. It looks like it's being decoded correctly, then re-encoded for some reason as utf-8. Of course, on most Linux/Mac systems, UTF-8 is what the terminal is using anyway, so it isn't noticed.\n1. If you do `u\"åäö\"` and `print u\"åäö\"`, does it interpret the characters correctly?\n2. Can you use git bisect to work out when the regression occurred (assuming it was working before)?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1381773",
    "html_url": "https://github.com/ipython/ipython/issues/522#issuecomment-1381773",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/522",
    "id": 1381773,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODE3NzM=",
    "user": {
      "login": "jstenar",
      "id": 281420,
      "node_id": "MDQ6VXNlcjI4MTQyMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/281420?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jstenar",
      "html_url": "https://github.com/jstenar",
      "followers_url": "https://api.github.com/users/jstenar/followers",
      "following_url": "https://api.github.com/users/jstenar/following{/other_user}",
      "gists_url": "https://api.github.com/users/jstenar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jstenar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jstenar/subscriptions",
      "organizations_url": "https://api.github.com/users/jstenar/orgs",
      "repos_url": "https://api.github.com/users/jstenar/repos",
      "events_url": "https://api.github.com/users/jstenar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jstenar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-06-16T15:19:17Z",
    "updated_at": "2011-06-16T15:19:17Z",
    "author_association": "MEMBER",
    "body": "takluyver skrev 2011-06-16 15:05:\n\n> Dammit, again. It looks like it's being decoded correctly, then re-encoded for some reason as utf-8. Of course, on most Linux/Mac systems, UTF-8 is what the terminal is using anyway, so it isn't noticed.\n> 1. If you do `u\"åäö\"` and `print u\"åäö\"`, does it interpret the characters correctly?\n>    In ipython:\n\nIn [1]: print \"åäö\"\nÃ¥Ã¤Ã¶\n\nIn [2]: print u\"åäö\"\nåäö\n\nIn regular python:\n\n> > > print \"åäö\"\n> > > åäö\n> > > print u\"åäö\"\n> > > åäö\n> 1. Can you use git bisect to work out when the regression occurred (assuming it was working before)?\n> \n> I will try this later tonight\n\n/Jörgen\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1382597",
    "html_url": "https://github.com/ipython/ipython/issues/522#issuecomment-1382597",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/522",
    "id": 1382597,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODI1OTc=",
    "user": {
      "login": "jstenar",
      "id": 281420,
      "node_id": "MDQ6VXNlcjI4MTQyMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/281420?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jstenar",
      "html_url": "https://github.com/jstenar",
      "followers_url": "https://api.github.com/users/jstenar/followers",
      "following_url": "https://api.github.com/users/jstenar/following{/other_user}",
      "gists_url": "https://api.github.com/users/jstenar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jstenar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jstenar/subscriptions",
      "organizations_url": "https://api.github.com/users/jstenar/orgs",
      "repos_url": "https://api.github.com/users/jstenar/repos",
      "events_url": "https://api.github.com/users/jstenar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jstenar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-06-16T17:02:46Z",
    "updated_at": "2011-06-16T17:02:46Z",
    "author_association": "MEMBER",
    "body": "I have been unable to find a good starting point. Apparently I have not been paying attention to this issue for a long time. \n\nOn march 25th with checkin a6a9d5803e479de956d9 I see the issue for the checkin before that 528125c0fe8fabc703d0 I get a crash on startup. I have tried to delete the .ipython dir and I still get a crash, I have tried different versions of pyreadline and without and I still get the crash.\n\nDo you have any ideas on where to start looking for the åäö problem?\n\n/Jörgen\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1382646",
    "html_url": "https://github.com/ipython/ipython/issues/522#issuecomment-1382646",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/522",
    "id": 1382646,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODI2NDY=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-06-16T17:10:06Z",
    "updated_at": "2011-06-16T17:10:06Z",
    "author_association": "MEMBER",
    "body": "What is `get_ipython().stdin_encoding`?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1382759",
    "html_url": "https://github.com/ipython/ipython/issues/522#issuecomment-1382759",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/522",
    "id": 1382759,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODI3NTk=",
    "user": {
      "login": "jstenar",
      "id": 281420,
      "node_id": "MDQ6VXNlcjI4MTQyMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/281420?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jstenar",
      "html_url": "https://github.com/jstenar",
      "followers_url": "https://api.github.com/users/jstenar/followers",
      "following_url": "https://api.github.com/users/jstenar/following{/other_user}",
      "gists_url": "https://api.github.com/users/jstenar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jstenar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jstenar/subscriptions",
      "organizations_url": "https://api.github.com/users/jstenar/orgs",
      "repos_url": "https://api.github.com/users/jstenar/repos",
      "events_url": "https://api.github.com/users/jstenar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jstenar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-06-16T17:25:58Z",
    "updated_at": "2011-06-16T17:25:58Z",
    "author_association": "MEMBER",
    "body": "takluyver skrev 2011-06-16 19:10:\n\n> What is `get_ipython().stdin_encoding`?\n\nIn what context? I would guess that the intention is that it should \ncontain the encdoing used by the terminal. It is probably obtained by \nlooking at the encoding property of sys.stdin.\n\n/Jörgen\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1382781",
    "html_url": "https://github.com/ipython/ipython/issues/522#issuecomment-1382781",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/522",
    "id": 1382781,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODI3ODE=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-06-16T17:29:52Z",
    "updated_at": "2011-06-16T17:29:52Z",
    "author_association": "MEMBER",
    "body": "Sorry, I mean, what do you get if you type that in in IPython?\n\nCan you also try this (at a plain Python prompt):\n\n<pre>\nimport ast\ns = \"'åäö'\"   # Note \" and '\nu = s.decode(\"cp850\")\na = ast.parse(u)\na.body[0].value.s   # What is the value of this?\n</pre>\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1382958",
    "html_url": "https://github.com/ipython/ipython/issues/522#issuecomment-1382958",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/522",
    "id": 1382958,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODI5NTg=",
    "user": {
      "login": "jstenar",
      "id": 281420,
      "node_id": "MDQ6VXNlcjI4MTQyMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/281420?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jstenar",
      "html_url": "https://github.com/jstenar",
      "followers_url": "https://api.github.com/users/jstenar/followers",
      "following_url": "https://api.github.com/users/jstenar/following{/other_user}",
      "gists_url": "https://api.github.com/users/jstenar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jstenar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jstenar/subscriptions",
      "organizations_url": "https://api.github.com/users/jstenar/orgs",
      "repos_url": "https://api.github.com/users/jstenar/repos",
      "events_url": "https://api.github.com/users/jstenar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jstenar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-06-16T17:58:19Z",
    "updated_at": "2011-06-16T17:58:19Z",
    "author_association": "MEMBER",
    "body": "takluyver skrev 2011-06-16 19:29:\n\n> Sorry, I mean, what do you get if you type that in in IPython?\n> \n> In [2]: get_ipython().stdin_encoding\n> Out[2]: 'cp850'\n> \n> Can you also try this (at a plain Python prompt):\n> \n> <pre>\n> import ast\n> s = \"'åäö'\"   # Note \" and '\n> u = s.decode(\"cp850\")\n> a = ast.parse(u)\n> a.body[0].value.s   # What is the value of this?\n> </pre>\n> \n> \n> > > import ast\n> > > s=\"'åäö'\"\n> > > u=s.decode(\"cp850\")\n> > > a=ast.parse(u)\n> > > a.body[0].value.s\n> > > '\\xc3\\xa5\\xc3\\xa4\\xc3\\xb6'\n\nI get the same result if I change the codepage of the terminal to cp1252 \nand then run python.\n\n/Jörgen\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1383361",
    "html_url": "https://github.com/ipython/ipython/issues/522#issuecomment-1383361",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/522",
    "id": 1383361,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODMzNjE=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-06-16T18:48:41Z",
    "updated_at": "2011-06-16T18:48:41Z",
    "author_association": "MEMBER",
    "body": "Ok, thanks. And what about if you repeat the lines I gave above, but this time with `s = u\"'åäö'\"` (i.e. a unicode string literal)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1383439",
    "html_url": "https://github.com/ipython/ipython/issues/522#issuecomment-1383439",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/522",
    "id": 1383439,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODM0Mzk=",
    "user": {
      "login": "jstenar",
      "id": 281420,
      "node_id": "MDQ6VXNlcjI4MTQyMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/281420?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jstenar",
      "html_url": "https://github.com/jstenar",
      "followers_url": "https://api.github.com/users/jstenar/followers",
      "following_url": "https://api.github.com/users/jstenar/following{/other_user}",
      "gists_url": "https://api.github.com/users/jstenar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jstenar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jstenar/subscriptions",
      "organizations_url": "https://api.github.com/users/jstenar/orgs",
      "repos_url": "https://api.github.com/users/jstenar/repos",
      "events_url": "https://api.github.com/users/jstenar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jstenar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-06-16T19:03:10Z",
    "updated_at": "2011-06-16T19:03:10Z",
    "author_association": "MEMBER",
    "body": "takluyver skrev 2011-06-16 20:48:\n\n> Ok, thanks. And what about if you repeat the lines I gave above, but this time with `s = u\"'åäö'\"` (i.e. a unicode string literal)\n\nI assumed I should skip the decode line, I tried two variations. Both \nusing cp850.\n\nPython 2.6.6 (r266:84297, Aug 24 2010, 18:46:32) [MSC v.1500 32 bit \n(Intel)] on win32\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n\n> > > import sys, ast\n> > > s=u\"'åäö'\"\n> > > a=ast.parse(s)\n> > > a.body[0].value.s\n> > > '\\xc3\\xa5\\xc3\\xa4\\xc3\\xb6'\n\nC:\\python\\external> python\nPython 2.6.6 (r266:84297, Aug 24 2010, 18:46:32) [MSC v.1500 32 bit \n(Intel)] on win32\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n\n> > > import sys, ast\n> > > s=\"u'åäö'\"\n> > > a=ast.parse(s)\n> > > a.body[0].value.s\n> > > u'\\x86\\x84\\x94'\n> > > 'åäö'\n> > > '\\x86\\x84\\x94'\n> > > u'åäö'\n> > > u'\\xe5\\xe4\\xf6'\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1383474",
    "html_url": "https://github.com/ipython/ipython/issues/522#issuecomment-1383474",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/522",
    "id": 1383474,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODM0NzQ=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-06-16T19:06:47Z",
    "updated_at": "2011-06-16T19:06:47Z",
    "author_association": "MEMBER",
    "body": "Actually, I'm coming to believe that it's impossible. When you enter å at the prompt, we can represent that either as the unicode code point for å, or the bytes which your terminal uses to represent å. So long as we know the encoding, we can convert between the two freely.\n\nHowever, there's no way to tell Python what encoding to use when parsing the code. Currently we parse the code as a unicode string, so the behaviour of non-ascii characters inside byte literals is undefined. The alternative would be to parse the bytes, but then the behaviour of bytes >127 is undefined in unicode literals (which is a worse problem). Short of writing our own parser, there's not a lot we can do. See also http://bugs.python.org/issue5911\n\nWith unicode issues, it's often helpful to consider what will happen doing the equivalent in Python 3:\n\n<pre>\n>>> s = b\"å\"\n  File \"<stdin>\", line 1\nSyntaxError: bytes can only contain ASCII literal characters.\n</pre>\n\n\nTo summarise: if you want to enter non-ascii characters, put them inside `u\"Unicode literals\"`.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1383685",
    "html_url": "https://github.com/ipython/ipython/issues/522#issuecomment-1383685",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/522",
    "id": 1383685,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODM2ODU=",
    "user": {
      "login": "jstenar",
      "id": 281420,
      "node_id": "MDQ6VXNlcjI4MTQyMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/281420?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jstenar",
      "html_url": "https://github.com/jstenar",
      "followers_url": "https://api.github.com/users/jstenar/followers",
      "following_url": "https://api.github.com/users/jstenar/following{/other_user}",
      "gists_url": "https://api.github.com/users/jstenar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jstenar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jstenar/subscriptions",
      "organizations_url": "https://api.github.com/users/jstenar/orgs",
      "repos_url": "https://api.github.com/users/jstenar/repos",
      "events_url": "https://api.github.com/users/jstenar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jstenar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-06-16T19:35:40Z",
    "updated_at": "2011-06-16T19:35:40Z",
    "author_association": "MEMBER",
    "body": "takluyver skrev 2011-06-16 21:06:\n\n> Actually, I'm coming to believe that it's impossible. When you enter å at the prompt, we can represent that either as the unicode code point for å, or the bytes which your terminal uses to represent å. So long as we know the encoding, we can convert between the two freely.\n> \n> However, there's no way to tell Python what encoding to use when parsing the code. Currently we parse the code as a unicode string, so the behaviour of non-ascii characters inside byte literals is undefined. The alternative would be to parse the bytes, but then the behaviour of bytes>127 is undefined in unicode literals (which is a worse problem). Short of writing our own parser, there's not a lot we can do. See also http://bugs.python.org/issue5911\n> \n> With unicode issues, it's often helpful to consider what will happen doing the equivalent in Python 3:\n> \n> <pre>\n> >>>  s = b\"å\"\n>    File \"<stdin>\", line 1\n> SyntaxError: bytes can only contain ASCII literal characters.\n> </pre>\n> \n> \n> To summarise: if you want to enter non-ascii characters, put them inside `u\"Unicode literals\"`.\n> \n> Yes I guess that is true but it is kind of annoying when it works at the \n> regular prompt. I think we will get a lot of bug reports for this behavior.\n\nThis works in the 0.10 series:\n\nPython 2.6.6 (r266:84297, Aug 24 2010, 18:46:32) [MSC v.1500 32 bit (Intel)]\nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 0.10.2 -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object'. ?object also works, ?? prints more.\n\nIn [1]: \"åäö\"\nOut[1]: '\\x86\\x84\\x94'\n\n/Jörgen\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1383728",
    "html_url": "https://github.com/ipython/ipython/issues/522#issuecomment-1383728",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/522",
    "id": 1383728,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODM3Mjg=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-06-16T19:42:55Z",
    "updated_at": "2011-06-16T19:48:35Z",
    "author_association": "MEMBER",
    "body": "We already get a lot of bug reports about Unicode behaviour. But if we can only choose between them, I think the version we have in trunk is:\n- More correct: non-ascii characters should always behave correctly within unicode literals (`u\"åäö\"`). It's less important that they behave as you might expect in bytes literals (`\"åäö\"`).\n- Likely to lead to fewer complaints: the majority of our user base is on Linux or Mac, where trunk behaves correctly and 0.10 doesn't.\n\nTo clarify, I believe our choices are:\n- Parse byte strings: bytes literals should work as expected on all platforms, unicode literals are broken except for Windows users with cp1252.\n- Parse unicode strings: unicode literals work properly on all platforms, bytes literals are broken except for users with UTF-8 (the majority of Mac & Linux users).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1384213",
    "html_url": "https://github.com/ipython/ipython/issues/522#issuecomment-1384213",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/522",
    "id": 1384213,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODQyMTM=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-06-16T20:59:30Z",
    "updated_at": "2011-06-16T20:59:30Z",
    "author_association": "MEMBER",
    "body": "We _could_, I suppose, add a nasty hack which encodes the input only if stdin_encoding is cp1252. But that's nasty, and depends on the implementation in CPython.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1384829",
    "html_url": "https://github.com/ipython/ipython/issues/522#issuecomment-1384829",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/522",
    "id": 1384829,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODQ4Mjk=",
    "user": {
      "login": "jstenar",
      "id": 281420,
      "node_id": "MDQ6VXNlcjI4MTQyMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/281420?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jstenar",
      "html_url": "https://github.com/jstenar",
      "followers_url": "https://api.github.com/users/jstenar/followers",
      "following_url": "https://api.github.com/users/jstenar/following{/other_user}",
      "gists_url": "https://api.github.com/users/jstenar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jstenar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jstenar/subscriptions",
      "organizations_url": "https://api.github.com/users/jstenar/orgs",
      "repos_url": "https://api.github.com/users/jstenar/repos",
      "events_url": "https://api.github.com/users/jstenar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jstenar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-06-16T22:32:40Z",
    "updated_at": "2011-06-16T22:32:40Z",
    "author_association": "MEMBER",
    "body": "takluyver skrev 2011-06-16 22:59:\n\n> We _could_, I suppose, add a nasty hack which encodes the input only if stdin_encoding is cp1252. But that's nasty, and depends on the implementation in CPython.\n> \n> perhaps we could add this as a non-default option for those that it \n> works for.\n\n/Jörgen\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1385044",
    "html_url": "https://github.com/ipython/ipython/issues/522#issuecomment-1385044",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/522",
    "id": 1385044,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzODUwNDQ=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-06-16T23:19:53Z",
    "updated_at": "2011-06-16T23:19:53Z",
    "author_association": "MEMBER",
    "body": "Let's get some more opinions on the mailing list.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1402309",
    "html_url": "https://github.com/ipython/ipython/issues/522#issuecomment-1402309",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/522",
    "id": 1402309,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MDIzMDk=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-06-20T12:33:47Z",
    "updated_at": "2011-06-20T12:33:47Z",
    "author_association": "MEMBER",
    "body": "The feeling on the mailing list was that we'll make unicode literals behave correctly, and not attempt to implement any workaround. We'll revisit this depending on how many bug reports we get for it, but I'll close the issue for the time being.\n\nHere's the thread, for reference: http://mail.scipy.org/pipermail/ipython-dev/2011-June/007728.html\n"
  }
]
