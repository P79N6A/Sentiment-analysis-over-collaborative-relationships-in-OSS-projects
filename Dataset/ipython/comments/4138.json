[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23518175",
    "html_url": "https://github.com/ipython/ipython/issues/4138#issuecomment-23518175",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4138",
    "id": 23518175,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTE4MTc1",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-29T19:48:06Z",
    "updated_at": "2013-08-29T19:48:06Z",
    "author_association": "MEMBER",
    "body": "What happens if you do this after re-opening:\n1. interrupt kernel\n2. execute a new cell\n\n?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23518285",
    "html_url": "https://github.com/ipython/ipython/issues/4138#issuecomment-23518285",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4138",
    "id": 23518285,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTE4Mjg1",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-29T19:49:59Z",
    "updated_at": "2013-08-29T19:49:59Z",
    "author_association": "MEMBER",
    "body": "If you actually have no connection to the kernel, the interrupt will never happen, and/or the new cell execution will never be submitted.  If you are connected, then it will be interrupted, and the new cell will be submitted.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23518645",
    "html_url": "https://github.com/ipython/ipython/issues/4138#issuecomment-23518645",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4138",
    "id": 23518645,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTE4NjQ1",
    "user": {
      "login": "ptwobrussell",
      "id": 98668,
      "node_id": "MDQ6VXNlcjk4NjY4",
      "avatar_url": "https://avatars2.githubusercontent.com/u/98668?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ptwobrussell",
      "html_url": "https://github.com/ptwobrussell",
      "followers_url": "https://api.github.com/users/ptwobrussell/followers",
      "following_url": "https://api.github.com/users/ptwobrussell/following{/other_user}",
      "gists_url": "https://api.github.com/users/ptwobrussell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ptwobrussell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ptwobrussell/subscriptions",
      "organizations_url": "https://api.github.com/users/ptwobrussell/orgs",
      "repos_url": "https://api.github.com/users/ptwobrussell/repos",
      "events_url": "https://api.github.com/users/ptwobrussell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ptwobrussell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-29T19:55:42Z",
    "updated_at": "2013-08-29T19:55:42Z",
    "author_association": "NONE",
    "body": "When I come back to the notebook, I don't see any new \"X\"s getting printed. When I interrupt the kernel and then execute a different cell, it executes fine, but still no new \"X\"s getting printed (which I suppose wouldn't happen anyway since the kernel was just interrupted)\n\nShould be easy enough to try out on your end as well.\n\nMy use case is that I'd like to be able to have a long-running cell (which might literally take days to execute) and be able to close/re-open the web browser. Otherwise, I'm not sure how you could use ipynb for anything long-running in which you don't have a constant connection\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23519702",
    "html_url": "https://github.com/ipython/ipython/issues/4138#issuecomment-23519702",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4138",
    "id": 23519702,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTE5NzAy",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-29T20:11:58Z",
    "updated_at": "2013-08-29T20:11:58Z",
    "author_association": "MEMBER",
    "body": "I mentioned this last night, but you probably didn't catch/understand it:\n\nWhen you disconnect from a kernel by closing your browser, the kernel\ncontinues to run, but you lose the ability to get the future output of the\ncells that have been submitted for execution.  You can still reconnect but\nto get output you will have to submit new cells.  This is not ideal, but we\nhonestly don't know how to solve this problem with our current design.\n\nOn Thu, Aug 29, 2013 at 12:55 PM, Matthew A. Russell <\nnotifications@github.com> wrote:\n\n> When I come back to the notebook, I don't see any new \"X\"s getting\n> printed. When I interrupt the kernel and then execute a different cell, it\n> executes fine, but still no new \"X\"s getting printed (which I suppose\n> wouldn't happen anyway since the kernel was just interrupted)\n> \n> Should be easy enough to try out on your end as well.\n> \n> My use case is that I'd like to be able to have a long-running cell (which\n> might literally take days to execute) and be able to close/re-open the web\n> browser. Otherwise, I'm not sure how you could use ipynb for anything\n> long-running in which you don't have a constant connection\n> \n> â€”\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/issues/4138#issuecomment-23518645\n> .\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23519803",
    "html_url": "https://github.com/ipython/ipython/issues/4138#issuecomment-23519803",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4138",
    "id": 23519803,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTE5ODAz",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-29T20:13:09Z",
    "updated_at": "2013-08-29T20:13:09Z",
    "author_association": "MEMBER",
    "body": "Ironically, the output is actually coming back to your browser after you\nreopen, but the notebook web app doesn't know which cell the output goes\nwith so it discards it.  We could improve that, but we are not sure what we\nwould do...\n\nOn Thu, Aug 29, 2013 at 1:11 PM, Brian Granger ellisonbg@gmail.com wrote:\n\n> I mentioned this last night, but you probably didn't catch/understand it:\n> \n> When you disconnect from a kernel by closing your browser, the kernel\n> continues to run, but you lose the ability to get the future output of the\n> cells that have been submitted for execution.  You can still reconnect but\n> to get output you will have to submit new cells.  This is not ideal, but we\n> honestly don't know how to solve this problem with our current design.\n> \n> On Thu, Aug 29, 2013 at 12:55 PM, Matthew A. Russell <\n> notifications@github.com> wrote:\n> \n> > When I come back to the notebook, I don't see any new \"X\"s getting\n> > printed. When I interrupt the kernel and then execute a different cell, it\n> > executes fine, but still no new \"X\"s getting printed (which I suppose\n> > wouldn't happen anyway since the kernel was just interrupted)\n> > \n> > Should be easy enough to try out on your end as well.\n> > \n> > My use case is that I'd like to be able to have a long-running cell\n> > (which might literally take days to execute) and be able to close/re-open\n> > the web browser. Otherwise, I'm not sure how you could use ipynb for\n> > anything long-running in which you don't have a constant connection\n> > \n> > â€”\n> > Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/issues/4138#issuecomment-23518645\n> > .\n> \n> ## \n> \n> Brian E. Granger\n> Cal Poly State University, San Luis Obispo\n> bgranger@calpoly.edu and ellisonbg@gmail.com\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23520279",
    "html_url": "https://github.com/ipython/ipython/issues/4138#issuecomment-23520279",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4138",
    "id": 23520279,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTIwMjc5",
    "user": {
      "login": "ptwobrussell",
      "id": 98668,
      "node_id": "MDQ6VXNlcjk4NjY4",
      "avatar_url": "https://avatars2.githubusercontent.com/u/98668?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ptwobrussell",
      "html_url": "https://github.com/ptwobrussell",
      "followers_url": "https://api.github.com/users/ptwobrussell/followers",
      "following_url": "https://api.github.com/users/ptwobrussell/following{/other_user}",
      "gists_url": "https://api.github.com/users/ptwobrussell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ptwobrussell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ptwobrussell/subscriptions",
      "organizations_url": "https://api.github.com/users/ptwobrussell/orgs",
      "repos_url": "https://api.github.com/users/ptwobrussell/repos",
      "events_url": "https://api.github.com/users/ptwobrussell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ptwobrussell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-29T20:20:01Z",
    "updated_at": "2013-08-29T20:20:01Z",
    "author_association": "NONE",
    "body": "@ellisonbg - Ah, I see now. I misunderstood. I thought that you would just lose the output that would have been sent to your browser while it was closed but once you re-connected, you would start seeing output again when the kernel \"reconnects\"\n\nIt sounds like for my case in which I just have one long-running cell, once I close the browser, there is just no way to recover that output unless I do a little extra work to have it logged to a file on disk that I could monitor (which should work fine.) All I really need to do is keep an eye on it to see that progress is happening in a calculation.\n\nI'll leave it to you guys to close this or to use it as a reference point as an enhancement for what would be a really cool feature enhancement.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23521382",
    "html_url": "https://github.com/ipython/ipython/issues/4138#issuecomment-23521382",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4138",
    "id": 23521382,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTIxMzgy",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-29T20:36:24Z",
    "updated_at": "2013-08-29T20:36:24Z",
    "author_association": "MEMBER",
    "body": "Let's close this one, but open another with a more accurate description of\nthe problem.\n\nOn Thu, Aug 29, 2013 at 1:20 PM, Matthew A. Russell <\nnotifications@github.com> wrote:\n\n> @ellisonbg https://github.com/ellisonbg - Ah, I see now. I\n> misunderstood. I thought that you would just lose the output that would\n> have been sent to your browser while it was closed but once you\n> re-connected, you would start seeing output again when the kernel\n> \"reconnects\"\n> \n> It sounds like for my case in which I just have one long-running cell,\n> once I close the browser, there is just no way to recover that output\n> unless I do a little extra work to have it logged to a file on disk that I\n> could monitor (which should work fine.) All I really need to do is keep an\n> eye on it to see that progress is happening in a calculation.\n> \n> I'll leave it to you guys to close this or to use it as a reference point\n> as an enhancement for what would be a really cool feature enhancement.\n> \n> â€”\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/issues/4138#issuecomment-23520279\n> .\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26862487",
    "html_url": "https://github.com/ipython/ipython/issues/4138#issuecomment-26862487",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4138",
    "id": 26862487,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2ODYyNDg3",
    "user": {
      "login": "michaelaye",
      "id": 69774,
      "node_id": "MDQ6VXNlcjY5Nzc0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/69774?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelaye",
      "html_url": "https://github.com/michaelaye",
      "followers_url": "https://api.github.com/users/michaelaye/followers",
      "following_url": "https://api.github.com/users/michaelaye/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelaye/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelaye/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelaye/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelaye/orgs",
      "repos_url": "https://api.github.com/users/michaelaye/repos",
      "events_url": "https://api.github.com/users/michaelaye/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelaye/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-22T23:09:05Z",
    "updated_at": "2013-10-22T23:09:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "A link to the new one with more accurate descriptions would be helpful. Which one is it? There are quite several ones that have reconnection as a topic?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/27245490",
    "html_url": "https://github.com/ipython/ipython/issues/4138#issuecomment-27245490",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4138",
    "id": 27245490,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjQ1NDkw",
    "user": {
      "login": "michaelaye",
      "id": 69774,
      "node_id": "MDQ6VXNlcjY5Nzc0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/69774?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelaye",
      "html_url": "https://github.com/michaelaye",
      "followers_url": "https://api.github.com/users/michaelaye/followers",
      "following_url": "https://api.github.com/users/michaelaye/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelaye/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelaye/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelaye/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelaye/orgs",
      "repos_url": "https://api.github.com/users/michaelaye/repos",
      "events_url": "https://api.github.com/users/michaelaye/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelaye/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-28T19:16:27Z",
    "updated_at": "2013-10-28T19:16:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "That would be #4140 I guess.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/27245646",
    "html_url": "https://github.com/ipython/ipython/issues/4138#issuecomment-27245646",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4138",
    "id": 27245646,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjQ1NjQ2",
    "user": {
      "login": "michaelaye",
      "id": 69774,
      "node_id": "MDQ6VXNlcjY5Nzc0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/69774?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelaye",
      "html_url": "https://github.com/michaelaye",
      "followers_url": "https://api.github.com/users/michaelaye/followers",
      "following_url": "https://api.github.com/users/michaelaye/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelaye/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelaye/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelaye/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelaye/orgs",
      "repos_url": "https://api.github.com/users/michaelaye/repos",
      "events_url": "https://api.github.com/users/michaelaye/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelaye/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-28T19:17:55Z",
    "updated_at": "2013-10-28T19:18:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "Brian, your description seems to imply that newly created cells should be able to execute and receive output after a reconnect? That does not seem to work for me.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/459276132",
    "html_url": "https://github.com/ipython/ipython/issues/4138#issuecomment-459276132",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4138",
    "id": 459276132,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTI3NjEzMg==",
    "user": {
      "login": "mohammedyunus009",
      "id": 20074024,
      "node_id": "MDQ6VXNlcjIwMDc0MDI0",
      "avatar_url": "https://avatars3.githubusercontent.com/u/20074024?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mohammedyunus009",
      "html_url": "https://github.com/mohammedyunus009",
      "followers_url": "https://api.github.com/users/mohammedyunus009/followers",
      "following_url": "https://api.github.com/users/mohammedyunus009/following{/other_user}",
      "gists_url": "https://api.github.com/users/mohammedyunus009/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mohammedyunus009/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mohammedyunus009/subscriptions",
      "organizations_url": "https://api.github.com/users/mohammedyunus009/orgs",
      "repos_url": "https://api.github.com/users/mohammedyunus009/repos",
      "events_url": "https://api.github.com/users/mohammedyunus009/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mohammedyunus009/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-31T09:28:50Z",
    "updated_at": "2019-01-31T09:28:50Z",
    "author_association": "NONE",
    "body": "> When I come back to the notebook, I don't see any new \"X\"s getting printed. When I interrupt the kernel and then execute a different cell, it executes fine, but still no new \"X\"s getting printed (which I suppose wouldn't happen anyway since the kernel was just interrupted)\r\n> \r\n> Should be easy enough to try out on your end as well.\r\n> \r\n> My use case is that I'd like to be able to have a long-running cell (which might literally take days to execute) and be able to close/re-open the web browser. Otherwise, I'm not sure how you could use ipynb for anything long-running in which you don't have a constant connection\r\n\r\nI too have the similar use uses like yours , But for those things jupyter is not useful , Better off to regular python files and kernel , and use **screen** tool for Linux"
  }
]
