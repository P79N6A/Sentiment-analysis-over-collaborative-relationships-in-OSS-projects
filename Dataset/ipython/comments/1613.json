[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5160903",
    "html_url": "https://github.com/ipython/ipython/pull/1613#issuecomment-5160903",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1613",
    "id": 5160903,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjA5MDM=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-16T19:54:16Z",
    "updated_at": "2012-04-16T19:54:16Z",
    "author_association": "MEMBER",
    "body": "Mmh, you're giving me pause now... I like the simplicity of 'doing what the user wanted' for new/naive users.  But at the same time, I know that sometimes making libraries 'too smart' ends up causing trouble down the road.  I fail to foresee a problem with this simple enhancement, but the fact that tagets gets converted to a list, while the `.apply` semantics still distinguish between the two cases, makes me think that keeping the old behavior albeit with an easier to understand error message might be better... Something like \"only views created with a list of engines can use the map\\* methods, use client[n:n+1] syntax if you need a single-engine view\".\n\nThoughts?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5162872",
    "html_url": "https://github.com/ipython/ipython/pull/1613#issuecomment-5162872",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1613",
    "id": 5162872,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjI4NzI=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-16T21:24:50Z",
    "updated_at": "2012-04-16T21:24:50Z",
    "author_association": "MEMBER",
    "body": "I'm pretty close to 50/50 on this, and implemented it both ways, switching back and forth a few times before issuing the PR, but I came down on the side of not surprising users with artificial error messages when user intent is obvious, makes sense, and is easily supported.\n\nFor map specifically, there is exactly no ambiguity about what should be returned: It should be a list, no matter how/where it is called.  In this case, `e0.map(f, iterable)` is _exactly identical_ to `e0.apply(map, f, iterable)`.  The same code is submitted in the same number of messages (1).\n\nThis is substantially different from apply, which only means 'call this function remotely', but with lots of overloaded information packed into properties of the View itself (where/when, load-balance/mux, etc.) affecting what is actually returned.\n\nI think another point is that `map` is _not_ a necessarily parallel call - it's a builtin function that makes sense locally, so I think it makes sense to be able to call it remotely on a single engine.  A clearer way to do this would be the `.apply(map, f...)` manner above, but I don't see a significant reason to prevent this method from working as well.\n\nNote that `targets` doesn't get 'converted to a list' in any preserved way, it's just that I use `len` and `enumerate` on it, so it was simpler to wrap it in a list once than special case those two calls.  The targets are not preserved beyond the submission of the tasks, and they are only used to determine the initial partition.\n\nAlso, better than `client[n:n+1]` is, I think, `client[[n]]` if we go that route.  It's clearer (to me) that it is just a list containing the ID.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5163924",
    "html_url": "https://github.com/ipython/ipython/pull/1613#issuecomment-5163924",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1613",
    "id": 5163924,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjM5MjQ=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-16T22:15:19Z",
    "updated_at": "2012-04-16T22:15:19Z",
    "author_association": "MEMBER",
    "body": "OK, let's go for user friendliness here.  Merging as-is, thanks!!\n"
  }
]
