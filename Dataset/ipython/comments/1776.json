[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5965141",
    "html_url": "https://github.com/ipython/ipython/pull/1776#issuecomment-5965141",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1776",
    "id": 5965141,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjUxNDE=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-28T13:13:00Z",
    "updated_at": "2012-05-28T13:13:00Z",
    "author_association": "MEMBER",
    "body": "Is having two separate menus the way we want to go? This means things like %timeit will appear in both. To my mind, it would make more sense to combine them.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5966282",
    "html_url": "https://github.com/ipython/ipython/pull/1776#issuecomment-5966282",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1776",
    "id": 5966282,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjYyODI=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-28T14:28:44Z",
    "updated_at": "2012-05-28T14:28:44Z",
    "author_association": "MEMBER",
    "body": "I don't think we want to merge them, because :\n- with 2 menu named differently, even without reading the doc you know that there is 2 kind of magics (btw, \"block\" magic make more sens in qtconsole, where there is no cell)\n- when clicking, most of the magic are executed, so you don't get any chance of changing %% to %, so you would hate to put `%%timeit` and `%timeit` in the same menu and the sorting is alphabetical, so it will be kind of separated.\n- current menu is huge on windows (only one column is allowd... you have to scroll, I wa thinking of already splitting in subcategories A-M,N-Z or more)\n- (it is harder to implement without using `eval`) \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5967916",
    "html_url": "https://github.com/ipython/ipython/pull/1776#issuecomment-5967916",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1776",
    "id": 5967916,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5Njc5MTY=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-28T16:13:29Z",
    "updated_at": "2012-05-28T16:13:29Z",
    "author_association": "MEMBER",
    "body": "Now that the magics are defined in files like \"namespace\", \"history\",\netc., could we base classification on them?\n\nNone of the cell magics we've come up with so far could sensibly be\nexecuted without user input first, so I don't think that's too big a\nproblem.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5968842",
    "html_url": "https://github.com/ipython/ipython/pull/1776#issuecomment-5968842",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1776",
    "id": 5968842,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5Njg4NDI=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-28T17:10:57Z",
    "updated_at": "2012-05-28T17:10:57Z",
    "author_association": "MEMBER",
    "body": "Yes we could. right now if I remember correctly, qtconsole execute `get_ipython().watever.lsmagic()` in `user_expression`, so the result is the dict of magic as a string which is a pain to get back as a dict without evaluating, unless you know a good method to do that. \nThen it should be easier to make a classification base on the name of the class of the magic, we can also add even more info to the lsmagic dict.\n\nExecuting the magic on click make sens for some of them like `%guiref`,`%autocall`,`%logon`... and I think some give help when called without argument. \n\nWe could improve the menu by, for example making the cell magic be inserted at top of current block/cell, or things like that. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5969041",
    "html_url": "https://github.com/ipython/ipython/pull/1776#issuecomment-5969041",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1776",
    "id": 5969041,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjkwNDE=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-28T17:24:46Z",
    "updated_at": "2012-05-28T17:24:46Z",
    "author_association": "MEMBER",
    "body": "If we really need to get a dict from its repr, there's `ast.literal_eval`, but if we have to resort to that, it's probably because we're doing something else wrong ;-)\n\nDon't start implementing categories yet - I'm putting the idea out there, but I'm not convinced it's what we want. It would be quite hard to define intuitive, non-overlapping categories.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5969130",
    "html_url": "https://github.com/ipython/ipython/pull/1776#issuecomment-5969130",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1776",
    "id": 5969130,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjkxMzA=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-28T17:31:14Z",
    "updated_at": "2012-05-28T17:31:14Z",
    "author_association": "MEMBER",
    "body": "nop `ast.literal_eval` work for a restrictive type of object, `magic_manager.lsmagic` returns `name` as key, \nand `bound method` as value, so it refuses to evaluate it. \n\n``` python\n{'cell': \n    {\n    'prun': <bound method ExecutionMagics.prun of <IPython.core.magics.execution.ExecutionMagics object at 0x103e13d50>>,\n    'timeit': <bound method ExecutionMagics.timeit of <IPython.core.magics.execution.ExecutionMagics object at 0x103e13d50>>\n    },\n 'line' : \n    {\n    ...\n    },\n}\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5969220",
    "html_url": "https://github.com/ipython/ipython/pull/1776#issuecomment-5969220",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1776",
    "id": 5969220,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjkyMjA=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-28T17:37:08Z",
    "updated_at": "2012-05-28T17:37:08Z",
    "author_association": "MEMBER",
    "body": "OK, so if we went down that route, we'd need a wrapper function on the\nkernel side that made a json-able dict of just the names.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5969566",
    "html_url": "https://github.com/ipython/ipython/pull/1776#issuecomment-5969566",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1776",
    "id": 5969566,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5Njk1NjY=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-28T18:03:14Z",
    "updated_at": "2012-05-28T18:03:14Z",
    "author_association": "MEMBER",
    "body": "Yes, and I'm wondering if there is a way to figure out wether the magic need to have a parameter on the line or not, or if we add something like decorators to do that. We could the tweek the gui to either :\n- prepend the magic to the current line/block\n- put the magic on a new line for the user to enter the parameters.\n- run the magic if it dos not need parameters\n\nSomething like defining some completion if the magic take some values like ON/OFF...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5972481",
    "html_url": "https://github.com/ipython/ipython/pull/1776#issuecomment-5972481",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1776",
    "id": 5972481,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzI0ODE=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-28T21:37:14Z",
    "updated_at": "2012-05-28T21:37:14Z",
    "author_association": "MEMBER",
    "body": "I've something that works. \nJust using the class name of the magic and  UnCamelCassify it makes a nice Menu Title.\nsee `https://Carreau@github.com/Carreau/ipython.git magiclistinfo`, I'll clean it tomorrow before makin an alternate PR.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6078852",
    "html_url": "https://github.com/ipython/ipython/pull/1776#issuecomment-6078852",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1776",
    "id": 6078852,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNzg4NTI=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-02T16:38:38Z",
    "updated_at": "2012-06-02T16:38:38Z",
    "author_association": "MEMBER",
    "body": "Closing, as #1782 seem more appropriate.\n"
  }
]
