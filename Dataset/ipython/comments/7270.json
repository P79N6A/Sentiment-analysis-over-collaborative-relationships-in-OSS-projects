[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/126402571",
    "html_url": "https://github.com/ipython/ipython/issues/7270#issuecomment-126402571",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7270",
    "id": 126402571,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjQwMjU3MQ==",
    "user": {
      "login": "denfromufa",
      "id": 7870949,
      "node_id": "MDQ6VXNlcjc4NzA5NDk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7870949?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/denfromufa",
      "html_url": "https://github.com/denfromufa",
      "followers_url": "https://api.github.com/users/denfromufa/followers",
      "following_url": "https://api.github.com/users/denfromufa/following{/other_user}",
      "gists_url": "https://api.github.com/users/denfromufa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/denfromufa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/denfromufa/subscriptions",
      "organizations_url": "https://api.github.com/users/denfromufa/orgs",
      "repos_url": "https://api.github.com/users/denfromufa/repos",
      "events_url": "https://api.github.com/users/denfromufa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/denfromufa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-30T17:02:52Z",
    "updated_at": "2015-07-30T17:02:52Z",
    "author_association": "NONE",
    "body": "I hit this bug as well, is there any way to get inline plots without memory leaks? I do not want to launch separate processes for each plot, since the arrays are quite large.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/126414995",
    "html_url": "https://github.com/ipython/ipython/issues/7270#issuecomment-126414995",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7270",
    "id": 126414995,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjQxNDk5NQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-30T17:45:51Z",
    "updated_at": "2015-07-30T17:45:51Z",
    "author_association": "MEMBER",
    "body": "Can you check this when memory usage increases:\n\n``` python\nlen(IPython.kernel.zmq.pylab.backend_inline.show._to_draw)\n```\n\nThat's a list where figures are being stored. They should be there only temporarily, but maybe they're building up without getting cleared.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/126431393",
    "html_url": "https://github.com/ipython/ipython/issues/7270#issuecomment-126431393",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7270",
    "id": 126431393,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjQzMTM5Mw==",
    "user": {
      "login": "denfromufa",
      "id": 7870949,
      "node_id": "MDQ6VXNlcjc4NzA5NDk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7870949?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/denfromufa",
      "html_url": "https://github.com/denfromufa",
      "followers_url": "https://api.github.com/users/denfromufa/followers",
      "following_url": "https://api.github.com/users/denfromufa/following{/other_user}",
      "gists_url": "https://api.github.com/users/denfromufa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/denfromufa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/denfromufa/subscriptions",
      "organizations_url": "https://api.github.com/users/denfromufa/orgs",
      "repos_url": "https://api.github.com/users/denfromufa/repos",
      "events_url": "https://api.github.com/users/denfromufa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/denfromufa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-30T18:46:08Z",
    "updated_at": "2015-07-30T18:46:08Z",
    "author_association": "NONE",
    "body": "len(IPython.kernel.zmq.pylab.backend_inline.show._to_draw)=0\n\nBTW, I'm plotting using `.plot()` method on pandas dataframes.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/126436673",
    "html_url": "https://github.com/ipython/ipython/issues/7270#issuecomment-126436673",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7270",
    "id": 126436673,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjQzNjY3Mw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-30T18:53:16Z",
    "updated_at": "2015-07-30T18:53:16Z",
    "author_association": "MEMBER",
    "body": "OK, so much for that theory.\n\nIt's possible pandas keeps some data around plots internally as well. The original report doesn't involve pandas, though.\n\nHow much memory does each additional plot appear to add?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/126444884",
    "html_url": "https://github.com/ipython/ipython/issues/7270#issuecomment-126444884",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7270",
    "id": 126444884,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjQ0NDg4NA==",
    "user": {
      "login": "denfromufa",
      "id": 7870949,
      "node_id": "MDQ6VXNlcjc4NzA5NDk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7870949?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/denfromufa",
      "html_url": "https://github.com/denfromufa",
      "followers_url": "https://api.github.com/users/denfromufa/followers",
      "following_url": "https://api.github.com/users/denfromufa/following{/other_user}",
      "gists_url": "https://api.github.com/users/denfromufa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/denfromufa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/denfromufa/subscriptions",
      "organizations_url": "https://api.github.com/users/denfromufa/orgs",
      "repos_url": "https://api.github.com/users/denfromufa/repos",
      "events_url": "https://api.github.com/users/denfromufa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/denfromufa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-30T19:23:35Z",
    "updated_at": "2015-07-30T19:23:35Z",
    "author_association": "NONE",
    "body": "ok, this seems to be my case, I was using pandas 0.16.0, but the issue is fixed in master:\n\nhttps://github.com/pydata/pandas/pull/9814\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/126479001",
    "html_url": "https://github.com/ipython/ipython/issues/7270#issuecomment-126479001",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7270",
    "id": 126479001,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjQ3OTAwMQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-30T20:41:19Z",
    "updated_at": "2015-07-30T20:41:19Z",
    "author_association": "MEMBER",
    "body": "Great, thanks. Leaving open since the original report didn't involve pandas.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/139817647",
    "html_url": "https://github.com/ipython/ipython/issues/7270#issuecomment-139817647",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7270",
    "id": 139817647,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzOTgxNzY0Nw==",
    "user": {
      "login": "tacaswell",
      "id": 199813,
      "node_id": "MDQ6VXNlcjE5OTgxMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/199813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tacaswell",
      "html_url": "https://github.com/tacaswell",
      "followers_url": "https://api.github.com/users/tacaswell/followers",
      "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
      "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
      "organizations_url": "https://api.github.com/users/tacaswell/orgs",
      "repos_url": "https://api.github.com/users/tacaswell/repos",
      "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tacaswell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-12T20:22:14Z",
    "updated_at": "2015-09-12T20:22:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "This can be reproduced more simply:\n\n``` python\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport matplotlib.ticker\n\n%matplotlib inline\n\nimport os\nimport sys\nimport StringIO\nimport urllib, base64\n\nfrom matplotlib import rcParams\n\nrcParams['figure.figsize'] = (24, 6)\nrcParams['figure.dpi'] = 150\n\n\n\ndef friendlyPlot():\n    fig, ax = plt.subplots()\n    ax.plot(range(1000))\n    fig.savefig('tmp.png')\n    plt.close('all')\n\n\nfor i in range(500):\n    friendlyPlot()\n```\n\nThis does not leak memory so it is something on the IPython side not the pyplot side (I think).\n\n``` python\nimport matplotlib\nmatplotlib.use('agg')\nimport matplotlib.pyplot as plt\nimport matplotlib.ticker\n\n\n\nimport os\nimport sys\nimport StringIO\nimport urllib, base64\n\nfrom matplotlib import rcParams\n\nrcParams['figure.figsize'] = (24, 6)\nrcParams['figure.dpi'] = 150\n\n\n\ndef friendlyPlot():\n    fig, ax = plt.subplots()\n    ax.plot(range(1000))\n    fig.savefig('tmp.png')\n    plt.close('all')\n\n\nfor i in range(500):\n    friendlyPlot()\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/148689577",
    "html_url": "https://github.com/ipython/ipython/issues/7270#issuecomment-148689577",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7270",
    "id": 148689577,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0ODY4OTU3Nw==",
    "user": {
      "login": "asteppke",
      "id": 5851636,
      "node_id": "MDQ6VXNlcjU4NTE2MzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5851636?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asteppke",
      "html_url": "https://github.com/asteppke",
      "followers_url": "https://api.github.com/users/asteppke/followers",
      "following_url": "https://api.github.com/users/asteppke/following{/other_user}",
      "gists_url": "https://api.github.com/users/asteppke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asteppke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asteppke/subscriptions",
      "organizations_url": "https://api.github.com/users/asteppke/orgs",
      "repos_url": "https://api.github.com/users/asteppke/repos",
      "events_url": "https://api.github.com/users/asteppke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asteppke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-16T11:26:35Z",
    "updated_at": "2015-10-16T11:26:35Z",
    "author_association": "NONE",
    "body": "@tacaswell With your test code IPython on Windows 7 consumes here approximately 1.7GB which are not freed afterwards. Running with a slightly higher number of iterations leads to a memory error. So this is still an issue.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/148744077",
    "html_url": "https://github.com/ipython/ipython/issues/7270#issuecomment-148744077",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7270",
    "id": 148744077,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0ODc0NDA3Nw==",
    "user": {
      "login": "tacaswell",
      "id": 199813,
      "node_id": "MDQ6VXNlcjE5OTgxMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/199813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tacaswell",
      "html_url": "https://github.com/tacaswell",
      "followers_url": "https://api.github.com/users/tacaswell/followers",
      "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
      "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
      "organizations_url": "https://api.github.com/users/tacaswell/orgs",
      "repos_url": "https://api.github.com/users/tacaswell/repos",
      "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tacaswell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-16T15:17:45Z",
    "updated_at": "2015-10-16T15:17:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "@asteppke The first or second block?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/148745804",
    "html_url": "https://github.com/ipython/ipython/issues/7270#issuecomment-148745804",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7270",
    "id": 148745804,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0ODc0NTgwNA==",
    "user": {
      "login": "asteppke",
      "id": 5851636,
      "node_id": "MDQ6VXNlcjU4NTE2MzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5851636?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asteppke",
      "html_url": "https://github.com/asteppke",
      "followers_url": "https://api.github.com/users/asteppke/followers",
      "following_url": "https://api.github.com/users/asteppke/following{/other_user}",
      "gists_url": "https://api.github.com/users/asteppke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asteppke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asteppke/subscriptions",
      "organizations_url": "https://api.github.com/users/asteppke/orgs",
      "repos_url": "https://api.github.com/users/asteppke/repos",
      "events_url": "https://api.github.com/users/asteppke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asteppke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-16T15:24:44Z",
    "updated_at": "2015-10-16T15:29:57Z",
    "author_association": "NONE",
    "body": "@tacaswell With your first test code (`%matplotlib inline`) memory consumption goes up to 1.7GB. In contrast when using the second piece (`matplotlib.use('agg')`) memory usage oscillates only between 50MB and 100MB. \n\nBoth tests are executed with Python 3.4 and IPython notebook version 4.0.5. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/173742272",
    "html_url": "https://github.com/ipython/ipython/issues/7270#issuecomment-173742272",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7270",
    "id": 173742272,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3Mzc0MjI3Mg==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-21T22:56:35Z",
    "updated_at": "2016-01-21T22:56:35Z",
    "author_association": "MEMBER",
    "body": "I've played with this a bit more. I notice that if I re-run the for loop in @tacaswell's example a few times, memory usage doesn't increase - it seems to be the number you create in a single cell that matters. IPython certainly keeps a list of all the figures generated in the cell for the inline backend, but that list is quite definitely being cleared after the cell runs, which doesn't make memory usage drop, even after doing `gc.collect()`.\n\nCould our code be interacting badly with something in matplotlib? I thought `_pylab_helpers.Gcf` looked likely, but it doesn't seem to be holding on to anything.\n\nI tried grabbing a reference to one of the figures and calling `gc.get_referrers()` on it; apart from the reference I had in user_ns, all the others looked like mpl objects - presumably many of them are in reference loops. What object is it most likely something else would be inappropriately keeping a reference to?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/174609766",
    "html_url": "https://github.com/ipython/ipython/issues/7270#issuecomment-174609766",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7270",
    "id": 174609766,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NDYwOTc2Ng==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-25T18:21:40Z",
    "updated_at": "2016-01-25T18:21:40Z",
    "author_association": "MEMBER",
    "body": "I'm dropping this to milestone 'wishlist'. We want to fix it, but at the moment we're not sure how to make further progress in identifying the bug, and I don't think it's worth holding up releases for it.\n\nAnyone who can make progress gets brownie points. Also cake.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/193220877",
    "html_url": "https://github.com/ipython/ipython/issues/7270#issuecomment-193220877",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7270",
    "id": 193220877,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MzIyMDg3Nw==",
    "user": {
      "login": "lucasb-eyer",
      "id": 1476029,
      "node_id": "MDQ6VXNlcjE0NzYwMjk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1476029?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lucasb-eyer",
      "html_url": "https://github.com/lucasb-eyer",
      "followers_url": "https://api.github.com/users/lucasb-eyer/followers",
      "following_url": "https://api.github.com/users/lucasb-eyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/lucasb-eyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lucasb-eyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lucasb-eyer/subscriptions",
      "organizations_url": "https://api.github.com/users/lucasb-eyer/orgs",
      "repos_url": "https://api.github.com/users/lucasb-eyer/repos",
      "events_url": "https://api.github.com/users/lucasb-eyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lucasb-eyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-07T12:00:02Z",
    "updated_at": "2016-03-07T12:00:02Z",
    "author_association": "NONE",
    "body": "Not really progress, but the memory seems to be lost somewhere inside the kernel. Neither does calling `gc.collect()` after or inside the loop help, and `summary.print_(summary.summarize(muppy.get_objects()))` doesn't find any of the leaked memory. Neither does setting all `_N` and `_iN` to `None` help. It's really mysterious.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/193227825",
    "html_url": "https://github.com/ipython/ipython/issues/7270#issuecomment-193227825",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7270",
    "id": 193227825,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MzIyNzgyNQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-07T12:16:52Z",
    "updated_at": "2016-03-07T12:16:52Z",
    "author_association": "MEMBER",
    "body": "I also wondered if it was creating uncollectable objects, but those should end up in `gc.garbage` when there are no other references to them, and that's still empty when I see it using up loads of RAM.\n\nI think someone who knows about these things is going to have to use C-level tools to track down what memory is not getting freed. There's no evidence of extra Python objects being kept alive anywhere we can find.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/237853896",
    "html_url": "https://github.com/ipython/ipython/issues/7270#issuecomment-237853896",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7270",
    "id": 237853896,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzg1Mzg5Ng==",
    "user": {
      "login": "thenomemac",
      "id": 15183450,
      "node_id": "MDQ6VXNlcjE1MTgzNDUw",
      "avatar_url": "https://avatars0.githubusercontent.com/u/15183450?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thenomemac",
      "html_url": "https://github.com/thenomemac",
      "followers_url": "https://api.github.com/users/thenomemac/followers",
      "following_url": "https://api.github.com/users/thenomemac/following{/other_user}",
      "gists_url": "https://api.github.com/users/thenomemac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thenomemac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thenomemac/subscriptions",
      "organizations_url": "https://api.github.com/users/thenomemac/orgs",
      "repos_url": "https://api.github.com/users/thenomemac/repos",
      "events_url": "https://api.github.com/users/thenomemac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thenomemac/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-05T13:44:33Z",
    "updated_at": "2016-08-05T13:44:33Z",
    "author_association": "NONE",
    "body": "I'll second that a fix on this issue would be appreciated. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/237874600",
    "html_url": "https://github.com/ipython/ipython/issues/7270#issuecomment-237874600",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7270",
    "id": 237874600,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzg3NDYwMA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-05T15:03:23Z",
    "updated_at": "2016-08-05T15:03:23Z",
    "author_association": "MEMBER",
    "body": "We know, but at present no-one has worked out the cause of the bug.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/255632372",
    "html_url": "https://github.com/ipython/ipython/issues/7270#issuecomment-255632372",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7270",
    "id": 255632372,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTYzMjM3Mg==",
    "user": {
      "login": "daidoji",
      "id": 452431,
      "node_id": "MDQ6VXNlcjQ1MjQzMQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/452431?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/daidoji",
      "html_url": "https://github.com/daidoji",
      "followers_url": "https://api.github.com/users/daidoji/followers",
      "following_url": "https://api.github.com/users/daidoji/following{/other_user}",
      "gists_url": "https://api.github.com/users/daidoji/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/daidoji/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daidoji/subscriptions",
      "organizations_url": "https://api.github.com/users/daidoji/orgs",
      "repos_url": "https://api.github.com/users/daidoji/repos",
      "events_url": "https://api.github.com/users/daidoji/events{/privacy}",
      "received_events_url": "https://api.github.com/users/daidoji/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-24T02:00:20Z",
    "updated_at": "2016-10-24T02:00:20Z",
    "author_association": "NONE",
    "body": "+1\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/260543327",
    "html_url": "https://github.com/ipython/ipython/issues/7270#issuecomment-260543327",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7270",
    "id": 260543327,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDU0MzMyNw==",
    "user": {
      "login": "akapocsi",
      "id": 8197282,
      "node_id": "MDQ6VXNlcjgxOTcyODI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8197282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/akapocsi",
      "html_url": "https://github.com/akapocsi",
      "followers_url": "https://api.github.com/users/akapocsi/followers",
      "following_url": "https://api.github.com/users/akapocsi/following{/other_user}",
      "gists_url": "https://api.github.com/users/akapocsi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/akapocsi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/akapocsi/subscriptions",
      "organizations_url": "https://api.github.com/users/akapocsi/orgs",
      "repos_url": "https://api.github.com/users/akapocsi/repos",
      "events_url": "https://api.github.com/users/akapocsi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/akapocsi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-15T04:17:20Z",
    "updated_at": "2016-11-15T04:17:20Z",
    "author_association": "NONE",
    "body": "+1\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/260544619",
    "html_url": "https://github.com/ipython/ipython/issues/7270#issuecomment-260544619",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7270",
    "id": 260544619,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDU0NDYxOQ==",
    "user": {
      "login": "denfromufa",
      "id": 7870949,
      "node_id": "MDQ6VXNlcjc4NzA5NDk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7870949?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/denfromufa",
      "html_url": "https://github.com/denfromufa",
      "followers_url": "https://api.github.com/users/denfromufa/followers",
      "following_url": "https://api.github.com/users/denfromufa/following{/other_user}",
      "gists_url": "https://api.github.com/users/denfromufa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/denfromufa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/denfromufa/subscriptions",
      "organizations_url": "https://api.github.com/users/denfromufa/orgs",
      "repos_url": "https://api.github.com/users/denfromufa/repos",
      "events_url": "https://api.github.com/users/denfromufa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/denfromufa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-15T04:29:21Z",
    "updated_at": "2016-11-15T04:29:21Z",
    "author_association": "NONE",
    "body": "BTW, I'm still hitting this issue from time to time on latest matplotlib, pandas, jupyter, ipython. If anyone knows any debugger that can help to troubleshoot this multi-process communication, then please let me know.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/260715098",
    "html_url": "https://github.com/ipython/ipython/issues/7270#issuecomment-260715098",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7270",
    "id": 260715098,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDcxNTA5OA==",
    "user": {
      "login": "akapocsi",
      "id": 8197282,
      "node_id": "MDQ6VXNlcjgxOTcyODI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8197282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/akapocsi",
      "html_url": "https://github.com/akapocsi",
      "followers_url": "https://api.github.com/users/akapocsi/followers",
      "following_url": "https://api.github.com/users/akapocsi/following{/other_user}",
      "gists_url": "https://api.github.com/users/akapocsi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/akapocsi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/akapocsi/subscriptions",
      "organizations_url": "https://api.github.com/users/akapocsi/orgs",
      "repos_url": "https://api.github.com/users/akapocsi/repos",
      "events_url": "https://api.github.com/users/akapocsi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/akapocsi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-15T17:53:01Z",
    "updated_at": "2016-11-15T17:53:01Z",
    "author_association": "NONE",
    "body": "Could it perhaps have anything to do with the browser cache mechanism?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/260745678",
    "html_url": "https://github.com/ipython/ipython/issues/7270#issuecomment-260745678",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7270",
    "id": 260745678,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDc0NTY3OA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-15T19:44:18Z",
    "updated_at": "2016-11-15T19:44:18Z",
    "author_association": "MEMBER",
    "body": "Good thought, but I don't think so. It's IPython's process taking up extra memory, not the browser, and \n@tacaswell's reproduction doesn't involve sending plots to the browser.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/355276432",
    "html_url": "https://github.com/ipython/ipython/issues/7270#issuecomment-355276432",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7270",
    "id": 355276432,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTI3NjQzMg==",
    "user": {
      "login": "lucasb-eyer",
      "id": 1476029,
      "node_id": "MDQ6VXNlcjE0NzYwMjk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1476029?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lucasb-eyer",
      "html_url": "https://github.com/lucasb-eyer",
      "followers_url": "https://api.github.com/users/lucasb-eyer/followers",
      "following_url": "https://api.github.com/users/lucasb-eyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/lucasb-eyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lucasb-eyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lucasb-eyer/subscriptions",
      "organizations_url": "https://api.github.com/users/lucasb-eyer/orgs",
      "repos_url": "https://api.github.com/users/lucasb-eyer/repos",
      "events_url": "https://api.github.com/users/lucasb-eyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lucasb-eyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-04T13:00:40Z",
    "updated_at": "2018-01-04T13:00:40Z",
    "author_association": "NONE",
    "body": "Hi, I believe I have found part of the culprit and a way to significantly, but not completely, reduce this problem!\r\n\r\nAfter scrolling through the `ipykernel/pylab/backend_inline.py` code, I got the hunch that interactive mode does a lot of storing of \"plot-things\", though I don't understand it completely, so I am not able to pinpoint the exact reason with certainty.\r\n\r\nHere is the code to verify this (based on @tacaswell's snippet above), useful for anyone trying to implement a fix.\r\n\r\nInitialization:\r\n\r\n```python\r\nimport matplotlib\r\nimport matplotlib.pyplot as plt\r\nimport matplotlib.ticker\r\n\r\n%matplotlib inline\r\n\r\nmatplotlib.rcParams['figure.figsize'] = (24, 6)\r\nmatplotlib.rcParams['figure.dpi'] = 150\r\n\r\nfrom resource import getrusage\r\nfrom resource import RUSAGE_SELF\r\n\r\ndef friendlyPlot():\r\n    fig, ax = plt.subplots()\r\n    ax.plot(range(1000))\r\n    fig.savefig('tmp.png')\r\n    plt.close('all')\r\n```\r\n\r\nActual test:\r\n\r\n```python\r\nprint(\"before any:  {:7d} kB\".format(getrusage(RUSAGE_SELF).ru_maxrss))\r\nfriendlyPlot()\r\nprint(\"before loop: {:7d} kB\".format(getrusage(RUSAGE_SELF).ru_maxrss))\r\nfor i in range(50):\r\n    friendlyPlot()\r\nprint(\"after loop:  {:7d} kB\".format(getrusage(RUSAGE_SELF).ru_maxrss))\r\nimport gc ; gc.collect(2)\r\nprint(\"after gc:    {:7d} kB\".format(getrusage(RUSAGE_SELF).ru_maxrss))\r\n```\r\n\r\nRunning it for 50 iterations of the loop, I get:\r\n\r\n```\r\nbefore any:    87708 kB\r\nbefore loop:  106772 kB\r\nafter loop:   786668 kB\r\nafter gc:     786668 kB\r\n```\r\n\r\nRunning it for 200 iterations of the loop, I get:\r\n\r\n```\r\nbefore any:    87708 kB\r\nbefore loop:  100492 kB\r\nafter loop:  2824316 kB\r\nafter gc:    2824540 kB\r\n```\r\n\r\nwhich shows the almost linear increase in memory with iterations.\r\n\r\nNow to the fix/workaround: call `matplotlib.interactive(False)` before the test-snippet, and then run it.\r\n\r\nWith 50 iterations:\r\n\r\n```\r\nbefore any:    87048 kB\r\nbefore loop:  104992 kB\r\nafter loop:   241604 kB\r\nafter gc:     241604 kB\r\n```\r\n\r\nAnd with 200 iterations:\r\n\r\n```\r\nbefore any:    87536 kB\r\nbefore loop:  103104 kB\r\nafter loop:   239276 kB\r\nafter gc:     239276 kB\r\n```\r\n\r\nWhich confirms that only a constant increase (independent of iterations) is left.\r\n\r\nUsing these numbers, I make a rough estimate of the leak size per iteration:\r\n\r\n```\r\n(786668-(241604 - 104992))/50   = 13001.12\r\n(2824316-(241604 - 104992))/200 = 13438.52\r\n```\r\n\r\nAnd for a single iteration of the loop, I get `13560`. So the amount of leak *per iteration* is significantly smaller than the image size, be it raw (>3MB) or png-compressed (54KB).\r\n\r\nAlso, strangely, running a small-scale test (only few iterations) repeatedly in the same cell without restarting the kernel is much less consistent, I have not been able to understand this or determine a pattern.\r\n\r\nI hope someone with more knowledge of the internals can take it from here, as I lack the time and knowledge to dive deeper into it right now."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/414023009",
    "html_url": "https://github.com/ipython/ipython/issues/7270#issuecomment-414023009",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7270",
    "id": 414023009,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDAyMzAwOQ==",
    "user": {
      "login": "fedral",
      "id": 13436512,
      "node_id": "MDQ6VXNlcjEzNDM2NTEy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/13436512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fedral",
      "html_url": "https://github.com/fedral",
      "followers_url": "https://api.github.com/users/fedral/followers",
      "following_url": "https://api.github.com/users/fedral/following{/other_user}",
      "gists_url": "https://api.github.com/users/fedral/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fedral/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fedral/subscriptions",
      "organizations_url": "https://api.github.com/users/fedral/orgs",
      "repos_url": "https://api.github.com/users/fedral/repos",
      "events_url": "https://api.github.com/users/fedral/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fedral/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-18T01:30:40Z",
    "updated_at": "2018-08-18T01:30:40Z",
    "author_association": "NONE",
    "body": "it works"
  }
]
