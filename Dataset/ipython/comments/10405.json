[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/288777376",
    "html_url": "https://github.com/ipython/ipython/issues/10405#issuecomment-288777376",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10405",
    "id": 288777376,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODc3NzM3Ng==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-23T16:28:24Z",
    "updated_at": "2017-03-23T16:28:24Z",
    "author_association": "MEMBER",
    "body": "I'd like to keep the shortcuts consistent (enter to guess what to do, alt-enter to force execution - unfortunately we can't detect Ctrl-enter), but if you want to customise what they do yourself, see here:\r\nhttp://ipython.readthedocs.io/en/stable/config/details.html#keyboard-shortcuts\r\n\r\nUnfortunately it requires a bit of digging around in prompt_toolkit to find the functions you need."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/289073473",
    "html_url": "https://github.com/ipython/ipython/issues/10405#issuecomment-289073473",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10405",
    "id": 289073473,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTA3MzQ3Mw==",
    "user": {
      "login": "mspacek",
      "id": 799467,
      "node_id": "MDQ6VXNlcjc5OTQ2Nw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/799467?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mspacek",
      "html_url": "https://github.com/mspacek",
      "followers_url": "https://api.github.com/users/mspacek/followers",
      "following_url": "https://api.github.com/users/mspacek/following{/other_user}",
      "gists_url": "https://api.github.com/users/mspacek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mspacek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mspacek/subscriptions",
      "organizations_url": "https://api.github.com/users/mspacek/orgs",
      "repos_url": "https://api.github.com/users/mspacek/repos",
      "events_url": "https://api.github.com/users/mspacek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mspacek/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-24T16:32:10Z",
    "updated_at": "2017-03-24T16:32:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks, though I'm not quite sure what you mean by \"enter to guess what to do\"...\r\n\r\nHmm. So this is considered a feature, not a bug? Is there a discussion somewhere that justifies the change in behaviour from previous versions of IPython?"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/289233414",
    "html_url": "https://github.com/ipython/ipython/issues/10405#issuecomment-289233414",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10405",
    "id": 289233414,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTIzMzQxNA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-25T19:21:13Z",
    "updated_at": "2017-03-25T19:21:13Z",
    "author_association": "MEMBER",
    "body": "> Thanks, though I'm not quite sure what you mean by \"enter to guess what to do\"...\r\n\r\nSorry, that was too brief a description. When you press enter, it tries to guess whether you want a new line at that point, or to execute the code. So `x = 1<ENTER>` will execute, but `for a in range(5):<ENTER>` will give you a new line. The reason I say 'guess' is because this turns out to be really complex, and there are situations, like the one you describe, where it's not clear what the user wants:\r\n\r\n```\r\nx = (1, 2,|)\r\n```\r\n\r\nIf `|` represents the cursor when you press enter, you could reasonably expect it to insert a newline before the right-paren, or to execute the code. \r\n\r\n> Hmm. So this is considered a feature, not a bug? Is there a discussion somewhere that justifies the change in behaviour from previous versions of IPython?\r\n\r\nIt wasn't deliberately changed - it's a side-effect of the new prompt_toolkit interface - but it's not clear to me that the old behaviour is better than the new. Because I know that code is fiddly, my default preference is not to change it more often than I need to. ;-)\r\n\r\nYou can see the code in question here:\r\nhttps://github.com/ipython/ipython/blob/5.3.0/IPython/terminal/shortcuts.py#L85\r\n\r\nI think the behaviour you don't like is that it asks 'is this complete' on the text *before* the cursor - so in your case, it sees an unmatched left-paren, and gives you a new line to complete the expression. I don't think always considering the whole text works well either, though, now that real multiline editing works. Maybe there's something smarter we can do with considering to the end of the line the cursor is on, but I suspect there would be cases where that's not quite what we want either."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/290116943",
    "html_url": "https://github.com/ipython/ipython/issues/10405#issuecomment-290116943",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10405",
    "id": 290116943,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDExNjk0Mw==",
    "user": {
      "login": "ixarka",
      "id": 5183614,
      "node_id": "MDQ6VXNlcjUxODM2MTQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5183614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ixarka",
      "html_url": "https://github.com/ixarka",
      "followers_url": "https://api.github.com/users/ixarka/followers",
      "following_url": "https://api.github.com/users/ixarka/following{/other_user}",
      "gists_url": "https://api.github.com/users/ixarka/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ixarka/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ixarka/subscriptions",
      "organizations_url": "https://api.github.com/users/ixarka/orgs",
      "repos_url": "https://api.github.com/users/ixarka/repos",
      "events_url": "https://api.github.com/users/ixarka/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ixarka/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-29T14:57:34Z",
    "updated_at": "2017-03-29T14:59:13Z",
    "author_association": "NONE",
    "body": "In case someone else comes across this, the following code did the trick for me, stuck under profile/startup/disableSmartEnter.py\r\n\r\n```python\r\nfrom IPython import get_ipython\r\nfrom prompt_toolkit.enums import DEFAULT_BUFFER\r\nfrom prompt_toolkit.keys import Keys\r\nfrom prompt_toolkit.filters import HasFocus, HasSelection, ViInsertMode, EmacsInsertMode\r\n\r\nip = get_ipython()\r\ninsert_mode = ViInsertMode() | EmacsInsertMode()\r\n\r\ndef eval_line(event):\r\n    buf = event.current_buffer\r\n    buf.accept_action.validate_and_handle(event.cli, buf)\r\n\r\n# Register the shortcut if IPython is using prompt_toolkit\r\nif getattr(ip, 'pt_cli'):\r\n    registry = ip.pt_cli.application.key_bindings_registry\r\n    registry.add_binding(Keys.Enter,\r\n                     filter=(HasFocus(DEFAULT_BUFFER)\r\n                             & ~HasSelection()\r\n                             & insert_mode))(eval_line)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/290171169",
    "html_url": "https://github.com/ipython/ipython/issues/10405#issuecomment-290171169",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10405",
    "id": 290171169,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDE3MTE2OQ==",
    "user": {
      "login": "carlsmith",
      "id": 7561668,
      "node_id": "MDQ6VXNlcjc1NjE2Njg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7561668?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carlsmith",
      "html_url": "https://github.com/carlsmith",
      "followers_url": "https://api.github.com/users/carlsmith/followers",
      "following_url": "https://api.github.com/users/carlsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/carlsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carlsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carlsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/carlsmith/orgs",
      "repos_url": "https://api.github.com/users/carlsmith/repos",
      "events_url": "https://api.github.com/users/carlsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carlsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-29T17:57:18Z",
    "updated_at": "2017-04-05T00:40:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm personally -1 on always having to use a modifier to enter a newline.\r\nThat's what DevTools does, and even with years of practice, I still\r\nfrequently hit Enter by force of habit. It's frustrating.\r\n\r\nIf psychic-return is ever scrapped, IMO, it should be the opposite way\r\nround, so Enter always enters a newline, and Alt-Enter executes.\r\n\r\nI've plugged the following idea already, so will keep it brief: It's\r\ntrivial to detect that the input is a one-liner and starts with a bang or\r\nline magic (even with automagic on). My prompt detects this state already.\r\nWe could have an option that makes one-line 'commands' auto-execute, and\r\nregular Python not do so. You could then either type a one-line command and\r\nhit Enter, or enter Python code in multi-line mode. I implemented this once\r\nin another, similar Python shell, and it quickly became intuitive.\r\n\r\nMaybe we could ask the list for what logic people would prefer, sticking to\r\nthings that are simple to implement and document, and see if we can\r\nshortlist a small set of options that would keep most people happy??"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/290174816",
    "html_url": "https://github.com/ipython/ipython/issues/10405#issuecomment-290174816",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10405",
    "id": 290174816,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDE3NDgxNg==",
    "user": {
      "login": "mspacek",
      "id": 799467,
      "node_id": "MDQ6VXNlcjc5OTQ2Nw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/799467?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mspacek",
      "html_url": "https://github.com/mspacek",
      "followers_url": "https://api.github.com/users/mspacek/followers",
      "following_url": "https://api.github.com/users/mspacek/following{/other_user}",
      "gists_url": "https://api.github.com/users/mspacek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mspacek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mspacek/subscriptions",
      "organizations_url": "https://api.github.com/users/mspacek/orgs",
      "repos_url": "https://api.github.com/users/mspacek/repos",
      "events_url": "https://api.github.com/users/mspacek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mspacek/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-29T18:08:15Z",
    "updated_at": "2017-03-29T18:08:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the tips on changing the default behaviour of ENTER. However, I'm more concerned about the default behaviour itself, out of the box, not changing it for specific installations, e.g. for teaching a class.\r\n\r\nWhat about making the default behaviour check for matching brackets? If the closing bracket is missing, start a new line. If all opened brackets have a closing bracket, execute the line (unless other conditions apply, such as the line ending with a colon). I don't know how complex that would be to implement. Perhaps the Python parser itself can simplify such a task?"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/290176585",
    "html_url": "https://github.com/ipython/ipython/issues/10405#issuecomment-290176585",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10405",
    "id": 290176585,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDE3NjU4NQ==",
    "user": {
      "login": "mspacek",
      "id": 799467,
      "node_id": "MDQ6VXNlcjc5OTQ2Nw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/799467?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mspacek",
      "html_url": "https://github.com/mspacek",
      "followers_url": "https://api.github.com/users/mspacek/followers",
      "following_url": "https://api.github.com/users/mspacek/following{/other_user}",
      "gists_url": "https://api.github.com/users/mspacek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mspacek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mspacek/subscriptions",
      "organizations_url": "https://api.github.com/users/mspacek/orgs",
      "repos_url": "https://api.github.com/users/mspacek/repos",
      "events_url": "https://api.github.com/users/mspacek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mspacek/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-29T18:13:16Z",
    "updated_at": "2017-03-29T18:13:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sorry, regarding @takluyver 's comment:\r\n\r\n> `x = (1, 2,|)`\r\n> If | represents the cursor when you press enter, you could reasonably expect it to insert a newline before the right-paren, or to execute the code.\r\n\r\nI would say it's more reasonable to expect it to execute the code, as (I'm pretty sure) used to be the case. If you want to make it multiline, delete the closing bracket, then hit enter, and continue typing."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/290200897",
    "html_url": "https://github.com/ipython/ipython/issues/10405#issuecomment-290200897",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10405",
    "id": 290200897,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDIwMDg5Nw==",
    "user": {
      "login": "carlsmith",
      "id": 7561668,
      "node_id": "MDQ6VXNlcjc1NjE2Njg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7561668?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carlsmith",
      "html_url": "https://github.com/carlsmith",
      "followers_url": "https://api.github.com/users/carlsmith/followers",
      "following_url": "https://api.github.com/users/carlsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/carlsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carlsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carlsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/carlsmith/orgs",
      "repos_url": "https://api.github.com/users/carlsmith/repos",
      "events_url": "https://api.github.com/users/carlsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carlsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-29T19:35:02Z",
    "updated_at": "2017-04-05T00:40:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "If this stuff was controllable in the config options, the default could\r\nthen be something simple, either Enter to execute and Alt+Enter to add a\r\nnewline, or the opposite way around.\r\n\r\nThe current default is not really a default. It's generally just how things\r\nalways worked for everyone. If you only have one way of handling input,\r\nthen it makes sense to try and be clever about it. If you have options,\r\nthen the default can and probably should be simple. Having a system that's\r\nso complex that people aren't always sure what should happen isn't a good\r\ndefault.\r\n\r\nThe current logic is just too complicated."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/290225115",
    "html_url": "https://github.com/ipython/ipython/issues/10405#issuecomment-290225115",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10405",
    "id": 290225115,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDIyNTExNQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-29T21:03:16Z",
    "updated_at": "2017-03-29T21:03:16Z",
    "author_association": "MEMBER",
    "body": "I don't want to scrap 'psychic return' (thanks for that name ;-). It would undoubtedly make my life easier as the maintainer to say that it won't try to guess, but as a user I like it to guess.\r\n\r\nJust today I saw someone fall foul of this change in behaviour with IPython 5, though. I wonder if we should change the behaviour to prefer executing more if there's only one line. So (with `|` representing the cursor again):\r\n\r\n```python\r\na = (1, 2,|)   # Would execute\r\n```\r\n\r\nBut:\r\n\r\n```python\r\na = 1\r\nb = (2, 3,|)  # Would insert a newline, because you're already in a multiline cell\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/290342872",
    "html_url": "https://github.com/ipython/ipython/issues/10405#issuecomment-290342872",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10405",
    "id": 290342872,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDM0Mjg3Mg==",
    "user": {
      "login": "mspacek",
      "id": 799467,
      "node_id": "MDQ6VXNlcjc5OTQ2Nw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/799467?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mspacek",
      "html_url": "https://github.com/mspacek",
      "followers_url": "https://api.github.com/users/mspacek/followers",
      "following_url": "https://api.github.com/users/mspacek/following{/other_user}",
      "gists_url": "https://api.github.com/users/mspacek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mspacek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mspacek/subscriptions",
      "organizations_url": "https://api.github.com/users/mspacek/orgs",
      "repos_url": "https://api.github.com/users/mspacek/repos",
      "events_url": "https://api.github.com/users/mspacek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mspacek/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-30T08:41:43Z",
    "updated_at": "2017-03-30T08:41:43Z",
    "author_association": "CONTRIBUTOR",
    "body": ">  I wonder if we should change the behaviour to prefer executing more if there's only one line.\r\n\r\nThat seems reasonable to me. As a user, I also very much appreciate \"psychic return\"! Unfortunately, to make it sufficiently psychic, I suspect we probably can't avoid using a collection of ad-hoc rules. Maybe they can be kept reasonable simple by just using a flat if...elif...elif... block, with rules ordered in decreasing priority? It would also be good if those rules could then be exposed in documentation, to help the user help IPython guess more accurately."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/290460607",
    "html_url": "https://github.com/ipython/ipython/issues/10405#issuecomment-290460607",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10405",
    "id": 290460607,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDQ2MDYwNw==",
    "user": {
      "login": "carlsmith",
      "id": 7561668,
      "node_id": "MDQ6VXNlcjc1NjE2Njg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7561668?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carlsmith",
      "html_url": "https://github.com/carlsmith",
      "followers_url": "https://api.github.com/users/carlsmith/followers",
      "following_url": "https://api.github.com/users/carlsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/carlsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carlsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carlsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/carlsmith/orgs",
      "repos_url": "https://api.github.com/users/carlsmith/repos",
      "events_url": "https://api.github.com/users/carlsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carlsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-30T16:10:31Z",
    "updated_at": "2017-04-05T00:40:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "So, it's definitely a feature people want to keep, at least generally, so\r\ntweaking the logic seems like the best thing to do.\r\n\r\nI'm not sure what I can add right now that's useful.\r\n\r\nWe could use machine learning :)"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/291232688",
    "html_url": "https://github.com/ipython/ipython/issues/10405#issuecomment-291232688",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10405",
    "id": 291232688,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTIzMjY4OA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-03T18:33:50Z",
    "updated_at": "2017-04-03T18:33:50Z",
    "author_association": "MEMBER",
    "body": "I would be happy to push the threshold to execute more often if only one line. It also often bother be, as I rarely break a single line into multiple one with single statements."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/291232781",
    "html_url": "https://github.com/ipython/ipython/issues/10405#issuecomment-291232781",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10405",
    "id": 291232781,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTIzMjc4MQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-03T18:34:10Z",
    "updated_at": "2017-04-03T18:34:10Z",
    "author_association": "MEMBER",
    "body": "> We could use machine learning :)\r\n\r\nWatch out, if you go too far IPython will replace you. "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/299186867",
    "html_url": "https://github.com/ipython/ipython/issues/10405#issuecomment-299186867",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10405",
    "id": 299186867,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTE4Njg2Nw==",
    "user": {
      "login": "jslavin",
      "id": 644963,
      "node_id": "MDQ6VXNlcjY0NDk2Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/644963?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jslavin",
      "html_url": "https://github.com/jslavin",
      "followers_url": "https://api.github.com/users/jslavin/followers",
      "following_url": "https://api.github.com/users/jslavin/following{/other_user}",
      "gists_url": "https://api.github.com/users/jslavin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jslavin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jslavin/subscriptions",
      "organizations_url": "https://api.github.com/users/jslavin/orgs",
      "repos_url": "https://api.github.com/users/jslavin/repos",
      "events_url": "https://api.github.com/users/jslavin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jslavin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-04T13:36:04Z",
    "updated_at": "2017-05-04T13:36:04Z",
    "author_association": "NONE",
    "body": "I side with those who want Enter to execute the line as previously.  For one thing, it's like it is for the shell command line (bash or tcsh).  I often want to do up arrow (N times), edit, execute.  With the current default, I need to go to the end of the line, which I tend to forget.\r\n\r\nIn any case, the change needs to be more prominent in the docs.  This is the first place where I've seen the bit about using alt+enter to execute. "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/302504221",
    "html_url": "https://github.com/ipython/ipython/issues/10405#issuecomment-302504221",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10405",
    "id": 302504221,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjUwNDIyMQ==",
    "user": {
      "login": "tstarbow-sfdc",
      "id": 26944190,
      "node_id": "MDQ6VXNlcjI2OTQ0MTkw",
      "avatar_url": "https://avatars0.githubusercontent.com/u/26944190?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tstarbow-sfdc",
      "html_url": "https://github.com/tstarbow-sfdc",
      "followers_url": "https://api.github.com/users/tstarbow-sfdc/followers",
      "following_url": "https://api.github.com/users/tstarbow-sfdc/following{/other_user}",
      "gists_url": "https://api.github.com/users/tstarbow-sfdc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tstarbow-sfdc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tstarbow-sfdc/subscriptions",
      "organizations_url": "https://api.github.com/users/tstarbow-sfdc/orgs",
      "repos_url": "https://api.github.com/users/tstarbow-sfdc/repos",
      "events_url": "https://api.github.com/users/tstarbow-sfdc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tstarbow-sfdc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-18T18:35:17Z",
    "updated_at": "2017-05-18T18:35:17Z",
    "author_association": "NONE",
    "body": "On my mac I have to hit esc-enter to execute. Enter, cmd-enter, ctrl-enter and option/alt-enter all inserts a newline, which is very confusing after years of bash. I see this doesn't happen if the line has no parens, but really I am almost always editing a statement inside parenthesis. So thumbs up to changing the guessing to guess execute more often on single line statements."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/302515381",
    "html_url": "https://github.com/ipython/ipython/issues/10405#issuecomment-302515381",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10405",
    "id": 302515381,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjUxNTM4MQ==",
    "user": {
      "login": "carlsmith",
      "id": 7561668,
      "node_id": "MDQ6VXNlcjc1NjE2Njg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7561668?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carlsmith",
      "html_url": "https://github.com/carlsmith",
      "followers_url": "https://api.github.com/users/carlsmith/followers",
      "following_url": "https://api.github.com/users/carlsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/carlsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carlsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carlsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/carlsmith/orgs",
      "repos_url": "https://api.github.com/users/carlsmith/repos",
      "events_url": "https://api.github.com/users/carlsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carlsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-18T19:21:00Z",
    "updated_at": "2017-05-18T19:21:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "The shortcut is technically <kbd>Meta</kbd> `+` <kbd>Enter</kbd>. You need your terminal emulator configured to use <kbd>Option</kbd> as the <kbd>Meta</kbd> key.\r\n\r\nIn the Apple Terminal, in the *Keyboard* tab of the *Preferences* window, you can check *Use Option as Meta key* near the bottom. Other terminals should all have a similar setting."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/302555631",
    "html_url": "https://github.com/ipython/ipython/issues/10405#issuecomment-302555631",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10405",
    "id": 302555631,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjU1NTYzMQ==",
    "user": {
      "login": "carlsmith",
      "id": 7561668,
      "node_id": "MDQ6VXNlcjc1NjE2Njg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7561668?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carlsmith",
      "html_url": "https://github.com/carlsmith",
      "followers_url": "https://api.github.com/users/carlsmith/followers",
      "following_url": "https://api.github.com/users/carlsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/carlsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carlsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carlsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/carlsmith/orgs",
      "repos_url": "https://api.github.com/users/carlsmith/repos",
      "events_url": "https://api.github.com/users/carlsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carlsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-18T22:10:29Z",
    "updated_at": "2017-05-18T22:10:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "Quite a few people have expressed a view on this now, and apart from me, everyone seems to want it work like it used to. A pretty large majority of users are probably going to agree with the consensus here. My reasons are subjective as well; it's not like I know something anyone else missed.\r\n\r\nI initially thought I was speaking for a much larger percentage of users, but seeing what everyone else thinks, I don't have any objections.\r\n\r\nI'll look at hacking something together using the config system, maybe create a gist or something."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/305238367",
    "html_url": "https://github.com/ipython/ipython/issues/10405#issuecomment-305238367",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10405",
    "id": 305238367,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTIzODM2Nw==",
    "user": {
      "login": "not-raspberry",
      "id": 12380813,
      "node_id": "MDQ6VXNlcjEyMzgwODEz",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12380813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/not-raspberry",
      "html_url": "https://github.com/not-raspberry",
      "followers_url": "https://api.github.com/users/not-raspberry/followers",
      "following_url": "https://api.github.com/users/not-raspberry/following{/other_user}",
      "gists_url": "https://api.github.com/users/not-raspberry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/not-raspberry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/not-raspberry/subscriptions",
      "organizations_url": "https://api.github.com/users/not-raspberry/orgs",
      "repos_url": "https://api.github.com/users/not-raspberry/repos",
      "events_url": "https://api.github.com/users/not-raspberry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/not-raspberry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-31T16:15:36Z",
    "updated_at": "2017-05-31T16:15:36Z",
    "author_association": "NONE",
    "body": "Unfortunately, the snippet posted by @ixarka also disables ^v^j. (Just FYI.)"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/305529062",
    "html_url": "https://github.com/ipython/ipython/issues/10405#issuecomment-305529062",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10405",
    "id": 305529062,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTUyOTA2Mg==",
    "user": {
      "login": "alexrichert",
      "id": 5454564,
      "node_id": "MDQ6VXNlcjU0NTQ1NjQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5454564?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexrichert",
      "html_url": "https://github.com/alexrichert",
      "followers_url": "https://api.github.com/users/alexrichert/followers",
      "following_url": "https://api.github.com/users/alexrichert/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexrichert/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexrichert/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexrichert/subscriptions",
      "organizations_url": "https://api.github.com/users/alexrichert/orgs",
      "repos_url": "https://api.github.com/users/alexrichert/repos",
      "events_url": "https://api.github.com/users/alexrichert/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexrichert/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-01T15:27:05Z",
    "updated_at": "2017-06-01T15:27:05Z",
    "author_association": "NONE",
    "body": "Maybe \"shift+enter\" could be used to request a new line, and plain \"enter\" could have the old behavior (enter command)? \"Shift-enter\" is slightly easier to enter with one hand than \"alt-enter\"."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/305624120",
    "html_url": "https://github.com/ipython/ipython/issues/10405#issuecomment-305624120",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10405",
    "id": 305624120,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTYyNDEyMA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-01T21:20:48Z",
    "updated_at": "2017-06-01T21:20:48Z",
    "author_association": "MEMBER",
    "body": "We can't detect shift-enter or ctrl-enter in the terminal. They come through exactly the same as enter by itself. Even detecting alt-enter only works on some platforms."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/305666185",
    "html_url": "https://github.com/ipython/ipython/issues/10405#issuecomment-305666185",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10405",
    "id": 305666185,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTY2NjE4NQ==",
    "user": {
      "login": "ixarka",
      "id": 5183614,
      "node_id": "MDQ6VXNlcjUxODM2MTQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5183614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ixarka",
      "html_url": "https://github.com/ixarka",
      "followers_url": "https://api.github.com/users/ixarka/followers",
      "following_url": "https://api.github.com/users/ixarka/following{/other_user}",
      "gists_url": "https://api.github.com/users/ixarka/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ixarka/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ixarka/subscriptions",
      "organizations_url": "https://api.github.com/users/ixarka/orgs",
      "repos_url": "https://api.github.com/users/ixarka/repos",
      "events_url": "https://api.github.com/users/ixarka/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ixarka/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-02T01:42:39Z",
    "updated_at": "2017-06-02T01:44:02Z",
    "author_association": "NONE",
    "body": "Since this thread is still kicking, I thought I'd post an update to my earlier snippet.  I got annoyed that enter always did a newline since it effectively broke multi-line editing.  I ran into the annoying ctrl-enter problem as well (which is not prompt-toolkit's fault, as pointed out).  I settled on ctrl-N for a newline.  Note that indenting is broken if you need to nest.  I'm sure there are smarter ways to do it but I usually bust out an editor if I need to indent more than 2 levels in an ipython shell.  This 95% solution works well enough until I come across a full-featured \"smart enter\" implementation.\r\n\r\n```python\r\nfrom IPython import get_ipython\r\nfrom prompt_toolkit.enums import DEFAULT_BUFFER\r\nfrom prompt_toolkit.keys import Keys\r\nfrom prompt_toolkit.filters import HasFocus, HasSelection, ViInsertMode, EmacsInsertMode\r\n\r\nip = get_ipython()\r\ninsert_mode = ViInsertMode() | EmacsInsertMode()\r\n\r\ndef eval_line(event):\r\n    buf = event.current_buffer\r\n    buf.accept_action.validate_and_handle(event.cli, buf)\r\n\r\ndef new_line(event):\r\n    buf = event.current_buffer\r\n    buf.insert_text('\\n' + '    ')\r\n\r\n# Register the shortcut if IPython is using prompt_toolkit\r\nif getattr(ip, 'pt_cli'):\r\n    registry = ip.pt_cli.application.key_bindings_registry\r\n    registry.add_binding(Keys.Enter,\r\n                     filter=(HasFocus(DEFAULT_BUFFER)\r\n                             & ~HasSelection()\r\n                             & insert_mode))(eval_line)\r\n    registry.add_binding(Keys.ControlN,\r\n                     filter=(HasFocus(DEFAULT_BUFFER)\r\n                             & ~HasSelection()\r\n                             & insert_mode))(new_line)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/305667253",
    "html_url": "https://github.com/ipython/ipython/issues/10405#issuecomment-305667253",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10405",
    "id": 305667253,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTY2NzI1Mw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-02T01:50:33Z",
    "updated_at": "2017-06-02T01:50:33Z",
    "author_association": "MEMBER",
    "body": "We released IPython 5.4 and 6.1 yesterday that give you a clean hook to register custom function for `Enter`."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/308178436",
    "html_url": "https://github.com/ipython/ipython/issues/10405#issuecomment-308178436",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10405",
    "id": 308178436,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwODE3ODQzNg==",
    "user": {
      "login": "ceilingcat",
      "id": 485053,
      "node_id": "MDQ6VXNlcjQ4NTA1Mw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/485053?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ceilingcat",
      "html_url": "https://github.com/ceilingcat",
      "followers_url": "https://api.github.com/users/ceilingcat/followers",
      "following_url": "https://api.github.com/users/ceilingcat/following{/other_user}",
      "gists_url": "https://api.github.com/users/ceilingcat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ceilingcat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ceilingcat/subscriptions",
      "organizations_url": "https://api.github.com/users/ceilingcat/orgs",
      "repos_url": "https://api.github.com/users/ceilingcat/repos",
      "events_url": "https://api.github.com/users/ceilingcat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ceilingcat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-13T16:47:41Z",
    "updated_at": "2017-06-13T16:47:41Z",
    "author_association": "NONE",
    "body": "@Carreau Can you give an example of how this can be done in the new IPython release? Thanks!"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/308185198",
    "html_url": "https://github.com/ipython/ipython/issues/10405#issuecomment-308185198",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10405",
    "id": 308185198,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwODE4NTE5OA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-13T17:11:57Z",
    "updated_at": "2017-06-13T17:11:57Z",
    "author_association": "MEMBER",
    "body": "[Here](http://ipython.readthedocs.io/en/stable/config/details.html#keyboard-shortcuts) is a full section in the docs. If something is missing, or could be better expressed feel free to open an issue (or send a PR). Happy to get more examples. "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/308229848",
    "html_url": "https://github.com/ipython/ipython/issues/10405#issuecomment-308229848",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10405",
    "id": 308229848,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwODIyOTg0OA==",
    "user": {
      "login": "carlsmith",
      "id": 7561668,
      "node_id": "MDQ6VXNlcjc1NjE2Njg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7561668?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carlsmith",
      "html_url": "https://github.com/carlsmith",
      "followers_url": "https://api.github.com/users/carlsmith/followers",
      "following_url": "https://api.github.com/users/carlsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/carlsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carlsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carlsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/carlsmith/orgs",
      "repos_url": "https://api.github.com/users/carlsmith/repos",
      "events_url": "https://api.github.com/users/carlsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carlsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-13T19:56:02Z",
    "updated_at": "2017-06-13T19:56:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "I wrote something about this, posted to the mailing list, but didn't get a reply. The current docs don't cover things very well, but I think the API should be improved a bit too.\r\n\r\nWhile `handle_return` is designed for customising when IPython executes code or inserts a newline, in practice, users want to execute code or insert a newline *with automatic indentation*.\r\n\r\nThe docs show how to execute code and how to insert a newline, but it's not clear how to insert the correct number of spaces after the newline. I ended up with this:\r\n\r\n``` python\r\ndef psychic_return(shell):\r\n\r\n    def handle(event):\r\n\r\n        def should_execute(): ... # custom heuristics go here\r\n\r\n        buffer = event.current_buffer\r\n        document = buffer.document\r\n        text = document.text\r\n\r\n        if should_execute(): # this block just executes the input...\r\n\r\n            buffer.accept_action.validate_and_handle(event.cli, buffer)\r\n\r\n        else: # this block inserts a newline with auto-indentation...\r\n\r\n            if document.line_count > 1: text = text[:document.cursor_position]\r\n            indent = shell.input_splitter.check_complete(text + '\\n')[1] or 0\r\n            buffer.insert_text(\"\\n\" + \" \" * indent)\r\n\r\n    return handle\r\n\r\nc.TerminalInteractiveShell.handle_return = psychic_return\r\n```\r\n\r\nThe three lines in the else-block are pretty messy, considering that is what most users will want to do. They are usually only customising *when* IPython executes or inserts a newline, not *how* the newline is inserted.\r\n\r\nIf you look at the `psychic_return` function as a whole, it's all boilerplate. Users will normally only need to customise the logic in the `should_execute` function, which returns a bool. The API should really allow users to just implement that part.\r\n\r\nI was thinking the user could provide a function that returns `True` if it wants IPython to execute the input, `False` if it wants IPython to insert a newline (observing any auto-indentation settings) and return `None` if it wants IPython to do nothing, allowing the user's function to handle the situation itself, as it does in every case currently. Something like that."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/308236390",
    "html_url": "https://github.com/ipython/ipython/issues/10405#issuecomment-308236390",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10405",
    "id": 308236390,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwODIzNjM5MA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-13T20:20:20Z",
    "updated_at": "2017-06-13T20:20:20Z",
    "author_association": "MEMBER",
    "body": "Thanks Carl, do you want to attempt a PR against the documentation. help is always welcome. \r\n\r\nSorry to have missed your mail on the mailing list it's hard to track everything which is happening. "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/308261449",
    "html_url": "https://github.com/ipython/ipython/issues/10405#issuecomment-308261449",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10405",
    "id": 308261449,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwODI2MTQ0OQ==",
    "user": {
      "login": "carlsmith",
      "id": 7561668,
      "node_id": "MDQ6VXNlcjc1NjE2Njg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7561668?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carlsmith",
      "html_url": "https://github.com/carlsmith",
      "followers_url": "https://api.github.com/users/carlsmith/followers",
      "following_url": "https://api.github.com/users/carlsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/carlsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carlsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carlsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/carlsmith/orgs",
      "repos_url": "https://api.github.com/users/carlsmith/repos",
      "events_url": "https://api.github.com/users/carlsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carlsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-13T22:00:23Z",
    "updated_at": "2017-06-13T22:00:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "No problem. I know some things slip through the net on the mailing list. I'll look at updating the docs now."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/321619820",
    "html_url": "https://github.com/ipython/ipython/issues/10405#issuecomment-321619820",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10405",
    "id": 321619820,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTYxOTgyMA==",
    "user": {
      "login": "mspacek",
      "id": 799467,
      "node_id": "MDQ6VXNlcjc5OTQ2Nw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/799467?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mspacek",
      "html_url": "https://github.com/mspacek",
      "followers_url": "https://api.github.com/users/mspacek/followers",
      "following_url": "https://api.github.com/users/mspacek/following{/other_user}",
      "gists_url": "https://api.github.com/users/mspacek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mspacek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mspacek/subscriptions",
      "organizations_url": "https://api.github.com/users/mspacek/orgs",
      "repos_url": "https://api.github.com/users/mspacek/repos",
      "events_url": "https://api.github.com/users/mspacek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mspacek/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-10T17:29:41Z",
    "updated_at": "2017-08-10T17:29:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "Is it just me, or has IPython 6.1.0 somehow solved this problem? I don't seem to experience it any more after upgrading with pip. However, now from the first example:\r\n```python\r\nIn [1]: a = (1 + 1)\r\n# highlight the + sign with the cursor and hit ENTER, or ALT/CTRL/SHIFT + ENTER:\r\nIn [2]: a\r\nOut[2]: 2\r\n```\r\nI can't seem to force a new line (not that this personally bothers me though). After browsing recent commits, I see that CTRL+O does seem to work though.\r\n\r\nStrange, this problem is also solved for me in IPython 5.1.0 on Python 2.7.12. Maybe I changed some ipythonrc setting that applies to both?"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/321630686",
    "html_url": "https://github.com/ipython/ipython/issues/10405#issuecomment-321630686",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10405",
    "id": 321630686,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTYzMDY4Ng==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-10T18:11:11Z",
    "updated_at": "2017-08-10T18:11:11Z",
    "author_association": "MEMBER",
    "body": "I believe this was fixed by https://github.com/ipython/ipython/pull/10489/, 5.1 may not have this \"bug\". You can find that in the [what's new in 5.4](http://ipython.readthedocs.io/en/stable/whatsnew/version5.html#ipython-5-4) docs."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/321799818",
    "html_url": "https://github.com/ipython/ipython/issues/10405#issuecomment-321799818",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10405",
    "id": 321799818,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTc5OTgxOA==",
    "user": {
      "login": "mspacek",
      "id": 799467,
      "node_id": "MDQ6VXNlcjc5OTQ2Nw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/799467?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mspacek",
      "html_url": "https://github.com/mspacek",
      "followers_url": "https://api.github.com/users/mspacek/followers",
      "following_url": "https://api.github.com/users/mspacek/following{/other_user}",
      "gists_url": "https://api.github.com/users/mspacek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mspacek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mspacek/subscriptions",
      "organizations_url": "https://api.github.com/users/mspacek/orgs",
      "repos_url": "https://api.github.com/users/mspacek/repos",
      "events_url": "https://api.github.com/users/mspacek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mspacek/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-11T12:27:55Z",
    "updated_at": "2017-08-11T12:27:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "Great! I'll close this one then."
  }
]
