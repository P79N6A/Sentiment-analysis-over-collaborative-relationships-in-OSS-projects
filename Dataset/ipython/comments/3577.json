[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/20624725",
    "html_url": "https://github.com/ipython/ipython/pull/3577#issuecomment-20624725",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3577",
    "id": 20624725,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNjI0NzI1",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-08T18:10:52Z",
    "updated_at": "2013-07-08T18:10:52Z",
    "author_association": "MEMBER",
    "body": "Looks good to me, great cleanup!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/20634367",
    "html_url": "https://github.com/ipython/ipython/pull/3577#issuecomment-20634367",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3577",
    "id": 20634367,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNjM0MzY3",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-08T20:40:36Z",
    "updated_at": "2013-07-08T20:40:36Z",
    "author_association": "MEMBER",
    "body": "Yeah, I'm trying to improve python-mode on CM to also have Cython. \nDo you know by any chance where I could find a list of all cython keywords and token that would have to be highlighted ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/20635104",
    "html_url": "https://github.com/ipython/ipython/pull/3577#issuecomment-20635104",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3577",
    "id": 20635104,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNjM1MTA0",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-08T20:52:17Z",
    "updated_at": "2013-07-08T20:52:17Z",
    "author_association": "MEMBER",
    "body": "here's a `/syntax/pyrex.vim` that might help, Matthias:\n\n``` vim\n\" Vim syntax file\n\" Language: Pyrex\n\" Maintainer:   Marco Barisione <marco.bari@people.it>\n\" URL:      http://marcobari.altervista.org/pyrex_vim.html\n\" Last Change:  2009 Nov 09\n\n\" For version 5.x: Clear all syntax items\n\" For version 6.x: Quit when a syntax file was already loaded\nif version < 600\n  syntax clear\nelseif exists(\"b:current_syntax\")\n  finish\nendif\n\n\" Read the Python syntax to start with\nif version < 600\n  so <sfile>:p:h/python.vim\nelse\n  runtime! syntax/python.vim\n  unlet b:current_syntax\nendif\n\n\" Pyrex extentions\nsyn keyword pyrexStatement      cdef typedef ctypedef sizeof\nsyn keyword pyrexType       int long short float double char object void\nsyn keyword pyrexType       signed unsigned\nsyn keyword pyrexStructure  struct union enum\nsyn keyword pyrexInclude    include cimport\nsyn keyword pyrexAccess     public private property readonly extern\n\" If someome wants Python's built-ins highlighted probably he\n\" also wants Pyrex's built-ins highlighted\nif exists(\"python_highlight_builtins\") || exists(\"pyrex_highlight_builtins\")\n    syn keyword pyrexBuiltin    NULL\nendif\n\n\" This deletes \"from\" from the keywords and re-adds it as a\n\" match with lower priority than pyrexForFrom\nsyn clear   pythonInclude\nsyn keyword pythonInclude     import\nsyn match   pythonInclude     \"from\"\n\n\" With \"for[^:]*\\zsfrom\" VIM does not match \"for\" anymore, so\n\" I used the slower \"\\@<=\" form\nsyn match   pyrexForFrom        \"\\(for[^:]*\\)\\@<=from\"\n\n\" Default highlighting\nif version >= 508 || !exists(\"did_pyrex_syntax_inits\")\n  if version < 508\n    let did_pyrex_syntax_inits = 1\n    command -nargs=+ HiLink hi link <args>\n  else\n    command -nargs=+ HiLink hi def link <args>\n  endif\n  HiLink pyrexStatement     Statement\n  HiLink pyrexType      Type\n  HiLink pyrexStructure     Structure\n  HiLink pyrexInclude       PreCondit\n  HiLink pyrexAccess        pyrexStatement\n  if exists(\"python_highlight_builtins\") || exists(\"pyrex_highlight_builtins\")\n      HiLink pyrexBuiltin   Function\n  endif\n  HiLink pyrexForFrom       Statement\n\n  delcommand HiLink\nendif\n\nlet b:current_syntax = \"pyrex\"\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/20662355",
    "html_url": "https://github.com/ipython/ipython/pull/3577#issuecomment-20662355",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3577",
    "id": 20662355,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNjYyMzU1",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-09T09:20:54Z",
    "updated_at": "2013-07-09T09:20:54Z",
    "author_association": "MEMBER",
    "body": "Thanks @ivanov, a few more keywords to add to the list. I was astonished not to find a list in the official doc.\nWill merge now.\n"
  }
]
