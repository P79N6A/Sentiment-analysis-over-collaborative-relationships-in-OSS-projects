[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/48491519",
    "html_url": "https://github.com/ipython/ipython/issues/2606#issuecomment-48491519",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2606",
    "id": 48491519,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NDkxNTE5",
    "user": {
      "login": "durden",
      "id": 58063,
      "node_id": "MDQ6VXNlcjU4MDYz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/58063?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/durden",
      "html_url": "https://github.com/durden",
      "followers_url": "https://api.github.com/users/durden/followers",
      "following_url": "https://api.github.com/users/durden/following{/other_user}",
      "gists_url": "https://api.github.com/users/durden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/durden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/durden/subscriptions",
      "organizations_url": "https://api.github.com/users/durden/orgs",
      "repos_url": "https://api.github.com/users/durden/repos",
      "events_url": "https://api.github.com/users/durden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/durden/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-09T15:38:41Z",
    "updated_at": "2014-07-09T15:38:41Z",
    "author_association": "NONE",
    "body": "The workaround that exists for this doesn't completely work.   The current workaround doesn't provide the built-in `help` function that site.py does.  The fake-site.py does provide a minimal `_Helper` class.  However, the real site.py also sets `builtins.help = _Helper`.   So, using the IPython shell inside of something that was built with PyInstaller doesn't work.\n\nAre there any problems with adding the following to the fake-site.py?\n\n``` python\ntry:\n    import __builtin__ as builtins\nexcept ImportError:\n    import builtins\n\nbuiltins.help = _Helper()\n```\n\nI've successfully tested the above code with my scenario.  However, I don't know enough about PyInstaller as a whole to know if it could cause issues elsewhere.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/143588012",
    "html_url": "https://github.com/ipython/ipython/issues/2606#issuecomment-143588012",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2606",
    "id": 143588012,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MzU4ODAxMg==",
    "user": {
      "login": "htgoebel",
      "id": 784161,
      "node_id": "MDQ6VXNlcjc4NDE2MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/784161?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/htgoebel",
      "html_url": "https://github.com/htgoebel",
      "followers_url": "https://api.github.com/users/htgoebel/followers",
      "following_url": "https://api.github.com/users/htgoebel/following{/other_user}",
      "gists_url": "https://api.github.com/users/htgoebel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/htgoebel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/htgoebel/subscriptions",
      "organizations_url": "https://api.github.com/users/htgoebel/orgs",
      "repos_url": "https://api.github.com/users/htgoebel/repos",
      "events_url": "https://api.github.com/users/htgoebel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/htgoebel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-27T19:07:03Z",
    "updated_at": "2015-09-27T19:07:03Z",
    "author_association": "NONE",
    "body": "This should be solved on ipyhton's side. If we include `pydoc` in our `fake-site`-module, `pydoc` will be included in **every frozen app**. And pydoc imports `Tkinter`, thus adding another **huge** pile of software to every frozen app.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/143588062",
    "html_url": "https://github.com/ipython/ipython/issues/2606#issuecomment-143588062",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2606",
    "id": 143588062,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MzU4ODA2Mg==",
    "user": {
      "login": "htgoebel",
      "id": 784161,
      "node_id": "MDQ6VXNlcjc4NDE2MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/784161?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/htgoebel",
      "html_url": "https://github.com/htgoebel",
      "followers_url": "https://api.github.com/users/htgoebel/followers",
      "following_url": "https://api.github.com/users/htgoebel/following{/other_user}",
      "gists_url": "https://api.github.com/users/htgoebel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/htgoebel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/htgoebel/subscriptions",
      "organizations_url": "https://api.github.com/users/htgoebel/orgs",
      "repos_url": "https://api.github.com/users/htgoebel/repos",
      "events_url": "https://api.github.com/users/htgoebel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/htgoebel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-27T19:07:56Z",
    "updated_at": "2015-09-27T19:07:56Z",
    "author_association": "NONE",
    "body": "If you'd accept a pull-request following the idea of the first comment, I'll prepare one.\n"
  }
]
