[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/66653924",
    "html_url": "https://github.com/ipython/ipython/pull/7175#issuecomment-66653924",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7175",
    "id": 66653924,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NjUzOTI0",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-11T17:17:39Z",
    "updated_at": "2014-12-11T17:17:39Z",
    "author_association": "MEMBER",
    "body": "Thanks @marcus-oscarsson . Unfortunately, this will conflict with a big refactor of the channels code that is (hopefully) just about to land (#7108), so you may need to redo it once that's in.\n\nI'm also not sure whether it makes sense for us to do this in IPython. The in-process kernel is already poorly supported, because we don't use it in any of our own code, and it somewhat goes against our idea of cleanly separating frontend and kernel in separate processes with a communication layer. So another kind of in-process kernel probably won't be well supported either. There's limited benefit to running code in a separate thread, because the GIL will slow down both user code and your application code. And we're not particularly fans of gevent either.\n\nI'll put this on the agenda for the dev meeting today.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/66662102",
    "html_url": "https://github.com/ipython/ipython/pull/7175#issuecomment-66662102",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7175",
    "id": 66662102,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NjYyMTAy",
    "user": {
      "login": "marcus-oscarsson",
      "id": 4331447,
      "node_id": "MDQ6VXNlcjQzMzE0NDc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4331447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marcus-oscarsson",
      "html_url": "https://github.com/marcus-oscarsson",
      "followers_url": "https://api.github.com/users/marcus-oscarsson/followers",
      "following_url": "https://api.github.com/users/marcus-oscarsson/following{/other_user}",
      "gists_url": "https://api.github.com/users/marcus-oscarsson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marcus-oscarsson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marcus-oscarsson/subscriptions",
      "organizations_url": "https://api.github.com/users/marcus-oscarsson/orgs",
      "repos_url": "https://api.github.com/users/marcus-oscarsson/repos",
      "events_url": "https://api.github.com/users/marcus-oscarsson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marcus-oscarsson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-11T18:11:01Z",
    "updated_at": "2014-12-11T18:11:35Z",
    "author_association": "NONE",
    "body": "Allright, thanks for taking a look. I understand that it might seem somewhat unnecessary to use IPython in this way. I found it to be a really neat way to provide a interpreter that shares the same memory space as \"main\" application code. It makes it really easy to provide a UI with a python scripting facility, without the need of exporting your API through some service layer. \n\nI'm sure you get the idea, thanks in anyways and I'll take a look at #7108 when it lands\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/67559676",
    "html_url": "https://github.com/ipython/ipython/pull/7175#issuecomment-67559676",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7175",
    "id": 67559676,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NTU5Njc2",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-18T21:26:41Z",
    "updated_at": "2014-12-18T21:26:41Z",
    "author_association": "MEMBER",
    "body": "We discussed this at the dev meeting today, and concluded that if you need changes in the existing code to make this possible, we're happy to merge those changes, but we'd prefer you to maintain the new subclasses for the async in-process kernel as a standalone project. Thanks!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/68600310",
    "html_url": "https://github.com/ipython/ipython/pull/7175#issuecomment-68600310",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7175",
    "id": 68600310,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NjAwMzEw",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-03T16:23:10Z",
    "updated_at": "2015-01-03T16:23:10Z",
    "author_association": "MEMBER",
    "body": "> We discussed this at the dev meeting today, and concluded that if you need changes in the existing code to make this possible, we're happy to merge those changes, but we'd prefer you to maintain the new subclasses for the async in-process kernel as a standalone project. Thanks!\n\n@marcus-oscarsson, do you have plans to request/made entry points using this same PR? \nIf not, I think we can close this one... there is no real possibility to get this merged, so there is no need to keep it opened.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/68690438",
    "html_url": "https://github.com/ipython/ipython/pull/7175#issuecomment-68690438",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7175",
    "id": 68690438,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NjkwNDM4",
    "user": {
      "login": "marcus-oscarsson",
      "id": 4331447,
      "node_id": "MDQ6VXNlcjQzMzE0NDc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4331447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marcus-oscarsson",
      "html_url": "https://github.com/marcus-oscarsson",
      "followers_url": "https://api.github.com/users/marcus-oscarsson/followers",
      "following_url": "https://api.github.com/users/marcus-oscarsson/following{/other_user}",
      "gists_url": "https://api.github.com/users/marcus-oscarsson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marcus-oscarsson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marcus-oscarsson/subscriptions",
      "organizations_url": "https://api.github.com/users/marcus-oscarsson/orgs",
      "repos_url": "https://api.github.com/users/marcus-oscarsson/repos",
      "events_url": "https://api.github.com/users/marcus-oscarsson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marcus-oscarsson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-05T10:25:57Z",
    "updated_at": "2015-01-05T10:25:57Z",
    "author_association": "NONE",
    "body": "Sorry for taking sometime to answer your comments, I have been away for quite some time. I will take a closer look at #7180 to see what changes that needs to be done. I need the feature for one of my own projects so I will probably continue to maintain this solution, if I don't find anything better/easier. Ill try to implement something and Ill get back to you guys if I have something I think might be worth merging. I will close this pull request and perhaps open a new one later.\n\nHappy new year !\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/68693838",
    "html_url": "https://github.com/ipython/ipython/pull/7175#issuecomment-68693838",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7175",
    "id": 68693838,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NjkzODM4",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-05T10:58:22Z",
    "updated_at": "2015-01-05T10:58:22Z",
    "author_association": "MEMBER",
    "body": "Thanks for the feedback @marcus-oscarsson... happy new year for you too!\n"
  }
]
