[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/236089",
    "html_url": "https://github.com/ipython/ipython/issues/21#issuecomment-236089",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/21",
    "id": 236089,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjA4OQ==",
    "user": {
      "login": "ipython",
      "id": 230453,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjIzMDQ1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/230453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ipython",
      "html_url": "https://github.com/ipython",
      "followers_url": "https://api.github.com/users/ipython/followers",
      "following_url": "https://api.github.com/users/ipython/following{/other_user}",
      "gists_url": "https://api.github.com/users/ipython/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ipython/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ipython/subscriptions",
      "organizations_url": "https://api.github.com/users/ipython/orgs",
      "repos_url": "https://api.github.com/users/ipython/repos",
      "events_url": "https://api.github.com/users/ipython/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ipython/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2010-05-10T09:28:56Z",
    "updated_at": "2010-05-10T09:28:56Z",
    "author_association": "COLLABORATOR",
    "body": "[ LP comment 1 by: Andrea Riciputi, on 2009-04-16 20:35:54.161954+00:00 ]\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1753253",
    "html_url": "https://github.com/ipython/ipython/issues/21#issuecomment-1753253",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/21",
    "id": 1753253,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NTMyNTM=",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-08-08T11:09:44Z",
    "updated_at": "2011-08-08T11:09:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "Was this perhaps fixed?  I get:\n\n``` python\nIn [1]: myvara = 1\n\nIn [2]: myvarA = 2\n\nIn [3]: myvar<TAB>\nmyvarA  myvara  \n\nIn [3]: myvarA\n```\n\nOtherwise, this is a bug. Or perhaps it is a bug anyway, as it's completing ambiguously.  Should I open an new issue for this?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1925483",
    "html_url": "https://github.com/ipython/ipython/issues/21#issuecomment-1925483",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/21",
    "id": 1925483,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MjU0ODM=",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-08-28T20:55:59Z",
    "updated_at": "2011-08-28T20:55:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "This definitely is a bug, since it doesn't complete further, and does complete ambiguously:\n\n``` python\nIn [1]: myvarab = 1\n\nIn [2]: myvarAb = 2\n\nIn [3]: myvara<TAB>\n\n(result)\nIn [3]: myvarab\n```\n\nand also\n\n``` python\nIn [3]: myvarac = 1\n\nIn [4]: myvarAb = 2\n\nIn [5]: myvar<tab>\nmyvarAb  myvarab  myvarac  \n\nIn [5]: myvarA\n```\n\nAnd if I tab complete in the last item, it puts b.  Being case insensitive is a great idea, but it needs to be insensitive both to what is completed and to what was already typed (or in this case \"typed\").\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1925965",
    "html_url": "https://github.com/ipython/ipython/issues/21#issuecomment-1925965",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/21",
    "id": 1925965,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MjU5NjU=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-08-28T22:41:26Z",
    "updated_at": "2011-08-28T22:41:26Z",
    "author_association": "MEMBER",
    "body": "What's ambiguous?  Isn't tab completion simply entirely case sensitive, as this case-insensitive work hasn't been implemented?  I don't see any ambiguity in what you report.  `myvarA<tab>` unambiguously and correctly returns `myvarAb` as the lone match, while `myvara<TAB>` shows `myvarab myvarac`, the only two matches.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1932404",
    "html_url": "https://github.com/ipython/ipython/issues/21#issuecomment-1932404",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/21",
    "id": 1932404,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MzI0MDQ=",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-08-29T15:41:48Z",
    "updated_at": "2011-08-29T15:41:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Isn't tab completion simply entirely case sensitive\n\nNo, because it completes to `myvarA` even though both that and `myvara` exist.  \n\n> I don't see any ambiguity in what you report. \n\nI guess the problem is that it typed `A` for me.  If I want `myvarc`, for example, I have to delete the `A` and be careful not to press Tab after `v`.  \n\nBy the way, I perhaps typed the first one wrong. It should show `myvar<TAB` going directly to `myvarAb`.  Imagine you have `reallyReallyreallyreallylongvariable` and `reallyreallyreallyreallylongvariable`, and you type `really<Tab>` and get `reallyReallyreallyreallylongvariable` when you really wanted `reallyreallyreallyreallylongvariable`.   You have to arrow back to the `R` and change it, or else delete the whole thing and try again, making sure you don't press Tab before you type the second `r`.  \n\nI don't know about you, but my typing style in the terminal involves gratuitously pressing Tab, knowing that it won't complete unless the completion is unique, and this kind of messes with that.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1933022",
    "html_url": "https://github.com/ipython/ipython/issues/21#issuecomment-1933022",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/21",
    "id": 1933022,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MzMwMjI=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-08-29T16:24:06Z",
    "updated_at": "2011-08-29T16:24:20Z",
    "author_association": "MEMBER",
    "body": "Ah, I see.  I was confused, because I didn't read that the myvarA above was inserted by the completer, and I can't reproduce this at all.  I have:\n\n``` python\n\nIn [1]: myvarab = 1\nIn [2]: myvarAb = 2\nIn [3]: myvar<TAB>\nmyvarab myvarAb\nIn [3]: myvar\n...\nIn [4]: myvara<TAB>\nIn [4]: myvarab \nIn [5]: myvarac = 3\nIn [6]: myvara<TAB>\nmyvarab myvarac\nIn [6]: myvara\n```\n\nWhich is consistent with perfectly case-sensitive behavior.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1933951",
    "html_url": "https://github.com/ipython/ipython/issues/21#issuecomment-1933951",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/21",
    "id": 1933951,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MzM5NTE=",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-08-29T17:23:57Z",
    "updated_at": "2011-08-29T17:23:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "Well, that definitely behaves differently for me.  I'm using Mac OS X Lion (though I suppose you probably are too).\n\nHow do you get the version of readline that is being used?  Are there perhaps other things that might cause the difference?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1934252",
    "html_url": "https://github.com/ipython/ipython/issues/21#issuecomment-1934252",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/21",
    "id": 1934252,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MzQyNTI=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-08-29T17:43:44Z",
    "updated_at": "2011-08-29T17:43:44Z",
    "author_association": "MEMBER",
    "body": "I am using the Lion readline egg that I built, which is now on pypi.  The same one you should get with `easy_install readline`.\n\nI'm not terribly familiar with readline or the completer code, so I don't know what could be causing yours to behave differently.\n\nI suppose it could be something in configuration.  Does it still happen if you launch IPython unconfigured (`ipython --quick`)?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1934664",
    "html_url": "https://github.com/ipython/ipython/issues/21#issuecomment-1934664",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/21",
    "id": 1934664,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MzQ2NjQ=",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-08-29T18:24:22Z",
    "updated_at": "2011-08-29T18:24:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Does it still happen if you launch IPython unconfigured (ipython --quick)?\n\nYes.\n\n> I am using the Lion readline egg that I built, which is now on pypi. The same one you should get with easy_install readline.\n\nSo I apparently have the right version.  I tried `pip install --upgrade readline`, but then it told me that I was using libedit! (by the way, libedit acts correctly completing `myvar<TAB>`).  I think it's because it built as 64-bit but ran as 32-bit.\n\nI'll let you know if I can fix it by reinstalling readline.  It seems now that I've broken my installation trying to fix this.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1934686",
    "html_url": "https://github.com/ipython/ipython/issues/21#issuecomment-1934686",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/21",
    "id": 1934686,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MzQ2ODY=",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-08-29T18:26:40Z",
    "updated_at": "2011-08-29T18:26:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "Actually, the fact that readline is broken reminds me of how I had a hard time getting this installed in the first place.  I _may_ have actually had the git version of readline installed.  Don't know if that would make a difference here.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1934713",
    "html_url": "https://github.com/ipython/ipython/issues/21#issuecomment-1934713",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/21",
    "id": 1934713,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MzQ3MTM=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-08-29T18:28:50Z",
    "updated_at": "2011-08-29T18:28:50Z",
    "author_association": "MEMBER",
    "body": "I recommend using easy_install.  The sdist needs a small bugfix to build properly on Lion, so pip won't work right.  The egg works fine.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1935477",
    "html_url": "https://github.com/ipython/ipython/issues/21#issuecomment-1935477",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/21",
    "id": 1935477,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MzU0Nzc=",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-08-29T19:35:57Z",
    "updated_at": "2011-08-29T19:35:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK, re-easy_installed, and the problem is still there.  So it's not a too old version of readline.  \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/15729418",
    "html_url": "https://github.com/ipython/ipython/issues/21#issuecomment-15729418",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/21",
    "id": 15729418,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzI5NDE4",
    "user": {
      "login": "boxed",
      "id": 332428,
      "node_id": "MDQ6VXNlcjMzMjQyOA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/332428?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/boxed",
      "html_url": "https://github.com/boxed",
      "followers_url": "https://api.github.com/users/boxed/followers",
      "following_url": "https://api.github.com/users/boxed/following{/other_user}",
      "gists_url": "https://api.github.com/users/boxed/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/boxed/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/boxed/subscriptions",
      "organizations_url": "https://api.github.com/users/boxed/orgs",
      "repos_url": "https://api.github.com/users/boxed/repos",
      "events_url": "https://api.github.com/users/boxed/events{/privacy}",
      "received_events_url": "https://api.github.com/users/boxed/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-01T18:35:33Z",
    "updated_at": "2013-04-01T18:35:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm not sure my commit referenced above fixes all the use cases. If any of you guys who commented in this ticket are still interested it would be great if you could test my change.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/15762592",
    "html_url": "https://github.com/ipython/ipython/issues/21#issuecomment-15762592",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/21",
    "id": 15762592,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzYyNTky",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-02T08:25:19Z",
    "updated_at": "2013-04-02T08:25:19Z",
    "author_association": "MEMBER",
    "body": "Hi, For information there is an [IPEP 11](https://github.com/ipython/ipython/wiki/IPEP-11%3A-Tab-Completion-System-Refactor) (refactor tab completion) that might be relevant.\n\nSorry overwhelmed right now, not much time to review, but thanks !\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/275002688",
    "html_url": "https://github.com/ipython/ipython/issues/21#issuecomment-275002688",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/21",
    "id": 275002688,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTAwMjY4OA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-25T02:30:34Z",
    "updated_at": "2017-01-25T02:30:34Z",
    "author_association": "MEMBER",
    "body": "This should will be fixed by #10182 "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/360014447",
    "html_url": "https://github.com/ipython/ipython/issues/21#issuecomment-360014447",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/21",
    "id": 360014447,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDAxNDQ0Nw==",
    "user": {
      "login": "cottrell",
      "id": 223276,
      "node_id": "MDQ6VXNlcjIyMzI3Ng==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/223276?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cottrell",
      "html_url": "https://github.com/cottrell",
      "followers_url": "https://api.github.com/users/cottrell/followers",
      "following_url": "https://api.github.com/users/cottrell/following{/other_user}",
      "gists_url": "https://api.github.com/users/cottrell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cottrell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cottrell/subscriptions",
      "organizations_url": "https://api.github.com/users/cottrell/orgs",
      "repos_url": "https://api.github.com/users/cottrell/repos",
      "events_url": "https://api.github.com/users/cottrell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cottrell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-24T04:03:22Z",
    "updated_at": "2018-01-24T04:03:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Does anyone know how to turn all new features off on tab completion and have the old, fast, reliable case sensitive tab completion? "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/360975199",
    "html_url": "https://github.com/ipython/ipython/issues/21#issuecomment-360975199",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/21",
    "id": 360975199,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDk3NTE5OQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-27T10:21:13Z",
    "updated_at": "2018-01-27T10:21:13Z",
    "author_association": "MEMBER",
    "body": "Configuring `Completer.use_jedi=False` should go back to the older machinery *for now*. However, the idea is that this is for a transition period while we work out the kinks with using Jedi, and eventually the old completion machinery will probably go away."
  }
]
