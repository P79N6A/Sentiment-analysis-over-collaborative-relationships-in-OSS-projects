[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23568813",
    "html_url": "https://github.com/ipython/ipython/issues/4146#issuecomment-23568813",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4146",
    "id": 23568813,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTY4ODEz",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-30T15:25:29Z",
    "updated_at": "2013-08-30T15:25:29Z",
    "author_association": "MEMBER",
    "body": "You shouldn't add `/files/` but `files/` without slash. It is in the [docs/examples](http://nbviewer.ipython.org/url/github.com/ipython/ipython/raw/master/examples/notebooks/Part%204%20-%20Markdown%20Cells.ipynb#Local-files), but you need to follow  `[see also]` somewhere if you are browsing the doc on the website IIRC (PR welcomed if you think the doc can be improved).\n\nI don't understand why this is more confusing when files are in a subdirectory ?\n\nIt is not restricted to images and far from being imaginary, it allow to distinguish when you link to the url `foo.ipynb` between editting this file and downloading it. You might miss is on many website, but a blog admin have a `/admin/` prefix on CMS when editting and no prefix if he just want to \"view\" the post.\n\n> no prefix should be necessary, same as in other IPython parts (Python paths, bash paths) and all the other markdown systems.\n\nYou are basically comparing a bird with a plane, the two can fly, are often white and in the sky, but one have wheels and do not poo on your car. Path and URL might have slashes in common ( path on windows have backslashes), but they do convey different meaning and usecase. Path are relative to kernel location most of the time, url to server root (might not be on the same machine). Path presuppose a filesystem, url don't. It your notebooks are on rackspace, chances are your `data/img` is actually a database. It's the same that someone that think that `right-click > copy` put the text \"in the mouse\" and that carrying the mouse around to another computer will bring the text with it. Ok, maybe more complicated, but the idea is the same, an abstraction is assumed to be the fact it help to managed.\n\nProblem is the two are really close for end-user so people get confused. But those are really different stuff.\n\nNonetheless, we do our best and this should be taken care of as a side effect of [IPEP 16](https://github.com/ipython/ipython/wiki/IPEP-16%3A-Notebook-multi-directory-dashboard-and-URL-mapping), that will try to be as smart as possible, but it is a non-trivial piece of work.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23572329",
    "html_url": "https://github.com/ipython/ipython/issues/4146#issuecomment-23572329",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4146",
    "id": 23572329,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTcyMzI5",
    "user": {
      "login": "metakermit",
      "id": 1818628,
      "node_id": "MDQ6VXNlcjE4MTg2Mjg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1818628?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/metakermit",
      "html_url": "https://github.com/metakermit",
      "followers_url": "https://api.github.com/users/metakermit/followers",
      "following_url": "https://api.github.com/users/metakermit/following{/other_user}",
      "gists_url": "https://api.github.com/users/metakermit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/metakermit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/metakermit/subscriptions",
      "organizations_url": "https://api.github.com/users/metakermit/orgs",
      "repos_url": "https://api.github.com/users/metakermit/repos",
      "events_url": "https://api.github.com/users/metakermit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/metakermit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-30T16:16:11Z",
    "updated_at": "2013-08-30T16:16:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sure, thanks for the explanation. I trust you that there is a reason for it from the implementation point of view.\n\nI am simply stating that it's not intuitive to me from an end-user point of view. When I'm working in a notebook on my machine I assume that I'm positioned wherever I started my notebook from, that is wherever `! pwd` or `os.getcwd()` tells me I am. So when I would like to add an image, I also expect that I can \"navigate\" the markdown image path the same way.\n\n```\n![bla](image.jpg)\n```\n\nLuckily, the whole web app is running so smoothly that I don't have a clue about what's going on in the background and how exactly is it serving my local files to the web browser - blissful ignorance :). Not having to think that files are behind some 'files/' URL is just a minor thing that would make the experience even better for me. If it'll be fixed with [IPEP 16](https://github.com/ipython/ipython/wiki/IPEP-16%3A-Notebook-multi-directory-dashboard-and-URL-mapping), that's great*!\n\n__\n\n*multi-directory dashboard is even more awesome! I've been wanting that for some time with my >30 notebooks and a hacky topic.subtopic.name naming convention to retain some level of organisation.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23578753",
    "html_url": "https://github.com/ipython/ipython/issues/4146#issuecomment-23578753",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4146",
    "id": 23578753,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTc4NzUz",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-30T17:56:34Z",
    "updated_at": "2013-08-30T17:56:34Z",
    "author_association": "MEMBER",
    "body": "I think the main issue is that it gives us a namespace for serving local files. E.g. if we want to have URLs like  `sessions/foo-bar`, it would mean you couldn't use a folder called `sessions`. By serving files with the `files/` prefix, you can call your files and folders whatever you like without worrying that they'll clash with other IPython URLs.\n\nMaybe we could rewrite local URLs after processing Markdown, so `image.jpg` -> `files/image.jpg` automatically in the HTML? Are there any situations where you might want your Markdown to refer to local resources that aren't in `files/`? I guess we'll soon want to link to other notebooks, but maybe we can detect that. On the other hand, that starts to sound complicated.\n\n(And where would we be without @Carreau's entertaining analogies? :wink:)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23578833",
    "html_url": "https://github.com/ipython/ipython/issues/4146#issuecomment-23578833",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4146",
    "id": 23578833,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTc4ODMz",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-30T17:57:42Z",
    "updated_at": "2013-08-30T17:57:42Z",
    "author_association": "MEMBER",
    "body": "The `files/` prefix is an unfortunate compromise that we had to make to provide access to local files because of our URL scheme. IPEP 16 resolves the issue that forced the compromise, and the prefix will no longer be required in 2.0, so there's nothing really left to be done.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23629103",
    "html_url": "https://github.com/ipython/ipython/issues/4146#issuecomment-23629103",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4146",
    "id": 23629103,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjI5MTAz",
    "user": {
      "login": "metakermit",
      "id": 1818628,
      "node_id": "MDQ6VXNlcjE4MTg2Mjg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1818628?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/metakermit",
      "html_url": "https://github.com/metakermit",
      "followers_url": "https://api.github.com/users/metakermit/followers",
      "following_url": "https://api.github.com/users/metakermit/following{/other_user}",
      "gists_url": "https://api.github.com/users/metakermit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/metakermit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/metakermit/subscriptions",
      "organizations_url": "https://api.github.com/users/metakermit/orgs",
      "repos_url": "https://api.github.com/users/metakermit/repos",
      "events_url": "https://api.github.com/users/metakermit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/metakermit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-01T17:23:50Z",
    "updated_at": "2013-09-01T17:23:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK, thanks for the clarification @takluyver and @minrk . Looking forward to 2.0 in that case :+1: \n\n( @takluyver @Carreau yes, refreshing to see such poetic discussions on a GitHub issue :) )\n"
  }
]
