[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2422095",
    "html_url": "https://github.com/ipython/ipython/pull/856#issuecomment-2422095",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/856",
    "id": 2422095,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjIwOTU=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-16T18:07:21Z",
    "updated_at": "2011-10-16T18:07:21Z",
    "author_association": "MEMBER",
    "body": "This looks good to me.\n\nI don't think attaching output to cells other than the current one is very simple.  The issue is tracking the parent message, which we do at the beginning of execute requests [here](https://github.com/ipython/ipython/blob/master/IPython/zmq/ipkernel.py#L234).  Any print/display calls made after that will be attached to that parent, including those made in threads which launched earlier.  What you want would require that background threads are not affected by later calls to `set_parent()`.  This essentially means that in the scope of the Thread, `shell.displayhook`, `shell.display_pub`, `sys.stdout`, and `sys.stderr` must all somehow be different objects from those in the regular scope.  I don't know how that's really possible, but the only alternative I see would be to add inspect calls to `IOStream.write`, which would walk up into some identifying frame to get the appropriate parent on every single call, and have to add extra flushes in case it has pending messages from a previous parent, to prevent collisions.\n\nWith the current model, Threads have no attachment whatsoever to the cell that launched them.  By launching something in a thread, you are divorcing that code from the cell in which it launched.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2422431",
    "html_url": "https://github.com/ipython/ipython/pull/856#issuecomment-2422431",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/856",
    "id": 2422431,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjI0MzE=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-16T19:05:44Z",
    "updated_at": "2011-10-16T19:05:44Z",
    "author_association": "MEMBER",
    "body": "Thanks for the review, @minrk.  Good analysis on the thread/stdout question, thanks.  We'll just table that idea for now: it's not like it's any worse than threads at a terminal, so I have no problem moving on as-is.  I'll merge this now then, one less thing to linger.\n"
  }
]
