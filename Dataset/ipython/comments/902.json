[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2457229",
    "html_url": "https://github.com/ipython/ipython/issues/902#issuecomment-2457229",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/902",
    "id": 2457229,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTcyMjk=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-19T15:28:01Z",
    "updated_at": "2011-10-19T15:28:01Z",
    "author_association": "MEMBER",
    "body": "Yup, currently ipdb in the qtconsole has two major and related limitations: no history (see #682) and no tab completion.  We'd love some manpower on this...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5217358",
    "html_url": "https://github.com/ipython/ipython/issues/902#issuecomment-5217358",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/902",
    "id": 5217358,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMTczNTg=",
    "user": {
      "login": "CRP",
      "id": 807824,
      "node_id": "MDQ6VXNlcjgwNzgyNA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/807824?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CRP",
      "html_url": "https://github.com/CRP",
      "followers_url": "https://api.github.com/users/CRP/followers",
      "following_url": "https://api.github.com/users/CRP/following{/other_user}",
      "gists_url": "https://api.github.com/users/CRP/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CRP/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CRP/subscriptions",
      "organizations_url": "https://api.github.com/users/CRP/orgs",
      "repos_url": "https://api.github.com/users/CRP/repos",
      "events_url": "https://api.github.com/users/CRP/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CRP/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-19T08:50:13Z",
    "updated_at": "2012-04-19T08:50:13Z",
    "author_association": "NONE",
    "body": "I tried playing around a bit with rlcompleter within pdb, alas without success. Any suggestion on how this problem should be approached? I understand that pdb basically uses raw_input to get commands, so one should probably replace that with a more advanced shell?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5218755",
    "html_url": "https://github.com/ipython/ipython/issues/902#issuecomment-5218755",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/902",
    "id": 5218755,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMTg3NTU=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-19T10:36:41Z",
    "updated_at": "2012-04-19T10:36:41Z",
    "author_association": "MEMBER",
    "body": "It's not something that can be solved purely within pdb. The IPython kernel would need a way to delegate finding tab completions at a raw_input prompt to the package that produced the prompt. AFAIK, the kernel also blocks while waiting for input, so we'd need some way to work around that. That will probably take quite some thought.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5229110",
    "html_url": "https://github.com/ipython/ipython/issues/902#issuecomment-5229110",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/902",
    "id": 5229110,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjkxMTA=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-19T18:51:35Z",
    "updated_at": "2012-04-19T18:51:35Z",
    "author_association": "MEMBER",
    "body": "Agreed, this is not an easy one: in the terminal, I'm pretty sure readline runs in a thread and calls the completion code in that thread, but it does all that automatically, so user code only has to provide custom completers, without worrying about thread management.  I'm really not sure how to get the completion code to fire on a kernel that's blocking while it waits for stdin: we can certainly capture the <tab> event on the client easily, but the question is how to send the completion request to the kernel whose main thread is blocking (the zmq code listens on the main thread).  Tricky one indeed.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5229225",
    "html_url": "https://github.com/ipython/ipython/issues/902#issuecomment-5229225",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/902",
    "id": 5229225,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjkyMjU=",
    "user": {
      "login": "CRP",
      "id": 807824,
      "node_id": "MDQ6VXNlcjgwNzgyNA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/807824?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CRP",
      "html_url": "https://github.com/CRP",
      "followers_url": "https://api.github.com/users/CRP/followers",
      "following_url": "https://api.github.com/users/CRP/following{/other_user}",
      "gists_url": "https://api.github.com/users/CRP/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CRP/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CRP/subscriptions",
      "organizations_url": "https://api.github.com/users/CRP/orgs",
      "repos_url": "https://api.github.com/users/CRP/repos",
      "events_url": "https://api.github.com/users/CRP/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CRP/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-19T18:57:02Z",
    "updated_at": "2012-04-19T18:57:02Z",
    "author_association": "NONE",
    "body": "If pdb uses raw_input, which is a function in ipython/zmq, would it be possible to create a second, thread-aware version of raw_input, and then get pdb to use that?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/16006761",
    "html_url": "https://github.com/ipython/ipython/issues/902#issuecomment-16006761",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/902",
    "id": 16006761,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDA2NzYx",
    "user": {
      "login": "dashesy",
      "id": 873905,
      "node_id": "MDQ6VXNlcjg3MzkwNQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/873905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dashesy",
      "html_url": "https://github.com/dashesy",
      "followers_url": "https://api.github.com/users/dashesy/followers",
      "following_url": "https://api.github.com/users/dashesy/following{/other_user}",
      "gists_url": "https://api.github.com/users/dashesy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dashesy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dashesy/subscriptions",
      "organizations_url": "https://api.github.com/users/dashesy/orgs",
      "repos_url": "https://api.github.com/users/dashesy/repos",
      "events_url": "https://api.github.com/users/dashesy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dashesy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-07T00:19:13Z",
    "updated_at": "2013-04-07T00:19:13Z",
    "author_association": "NONE",
    "body": "Sorry if I sound like a fool, I certainly do not know about the iPython code. \nIs it possible to pipe stdin/stdout of the pdb and never actually give it access to the console, instead the same thread as iPython will get the console, interpret it (maybe Tab complete), then write to pdb stdin.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/234366327",
    "html_url": "https://github.com/ipython/ipython/issues/902#issuecomment-234366327",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/902",
    "id": 234366327,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDM2NjMyNw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-21T20:00:28Z",
    "updated_at": "2016-07-21T20:00:28Z",
    "author_association": "MEMBER",
    "body": "Hi, \n\nThe qtconsole has been moved to https://github.com/jupyter/qtconsole, and this issue had no activity for quite some time. If this is still relevant I would suggest this issue to be reopen on the above cited repository. \n\nThis will allow us to keep the number of IPython issues smaller and focussed on IPython. As currently there is an extremely high number of opened issues , it make it really hard to find if a problem is actually known, or going to be worked one. \n\nFeel free to reopen if need, for the time being I'm going to close this. \n\nThanks.\n"
  }
]
