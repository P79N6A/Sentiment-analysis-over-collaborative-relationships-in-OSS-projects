[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3731468",
    "html_url": "https://github.com/ipython/ipython/pull/1357#issuecomment-3731468",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1357",
    "id": 3731468,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzE0Njg=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-31T00:58:52Z",
    "updated_at": "2012-01-31T00:58:52Z",
    "author_association": "MEMBER",
    "body": "Now the default behavior is to embed the Kernel into the calling application scope, which is incorrect for the basic IPython kernel.  This is why the `embed` entry point and the regular entry point in terminal IPython are _not_ the same.  One is not a subset of the other.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3731719",
    "html_url": "https://github.com/ipython/ipython/pull/1357#issuecomment-3731719",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1357",
    "id": 3731719,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzE3MTk=",
    "user": {
      "login": "scottt",
      "id": 110957,
      "node_id": "MDQ6VXNlcjExMDk1Nw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/110957?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/scottt",
      "html_url": "https://github.com/scottt",
      "followers_url": "https://api.github.com/users/scottt/followers",
      "following_url": "https://api.github.com/users/scottt/following{/other_user}",
      "gists_url": "https://api.github.com/users/scottt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/scottt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scottt/subscriptions",
      "organizations_url": "https://api.github.com/users/scottt/orgs",
      "repos_url": "https://api.github.com/users/scottt/repos",
      "events_url": "https://api.github.com/users/scottt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/scottt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-31T01:18:40Z",
    "updated_at": "2012-01-31T01:18:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm reading up on traitlets.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3731968",
    "html_url": "https://github.com/ipython/ipython/pull/1357#issuecomment-3731968",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1357",
    "id": 3731968,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzE5Njg=",
    "user": {
      "login": "scottt",
      "id": 110957,
      "node_id": "MDQ6VXNlcjExMDk1Nw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/110957?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/scottt",
      "html_url": "https://github.com/scottt",
      "followers_url": "https://api.github.com/users/scottt/followers",
      "following_url": "https://api.github.com/users/scottt/following{/other_user}",
      "gists_url": "https://api.github.com/users/scottt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/scottt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scottt/subscriptions",
      "organizations_url": "https://api.github.com/users/scottt/orgs",
      "repos_url": "https://api.github.com/users/scottt/repos",
      "events_url": "https://api.github.com/users/scottt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/scottt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-31T01:41:05Z",
    "updated_at": "2012-01-31T01:41:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "@minrk, I think I addressed the concerns raised so far.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3732331",
    "html_url": "https://github.com/ipython/ipython/pull/1357#issuecomment-3732331",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1357",
    "id": 3732331,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzIzMzE=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-31T02:20:42Z",
    "updated_at": "2012-01-31T02:20:42Z",
    "author_association": "MEMBER",
    "body": "nice! Thanks.  Pinging @fperez, who was asking about exactly this feature last week.\n\nOne thing you might change from a user perspective is slightly different handling of the failed import.  Right now, if pyzmq is not installed, trying IPython.embed_kernel() will raise an AttributeError.  Perhaps it would be better to fallback on something with a more informative error (`ImportError(\"IPython.zmq requires pyzmq â‰¥ 2.1.4\")` being the most logical error to raise).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3732345",
    "html_url": "https://github.com/ipython/ipython/pull/1357#issuecomment-3732345",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1357",
    "id": 3732345,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzIzNDU=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-31T02:22:05Z",
    "updated_at": "2012-01-31T02:22:05Z",
    "author_association": "MEMBER",
    "body": "Awesome, @scottt, many thanks!  I have a long trip tomorrow so I'll be offline for a day or two, but if nobody beats me to it I'll definitely play with this and review it before the end of the week.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3732515",
    "html_url": "https://github.com/ipython/ipython/pull/1357#issuecomment-3732515",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1357",
    "id": 3732515,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzI1MTU=",
    "user": {
      "login": "scottt",
      "id": 110957,
      "node_id": "MDQ6VXNlcjExMDk1Nw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/110957?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/scottt",
      "html_url": "https://github.com/scottt",
      "followers_url": "https://api.github.com/users/scottt/followers",
      "following_url": "https://api.github.com/users/scottt/following{/other_user}",
      "gists_url": "https://api.github.com/users/scottt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/scottt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scottt/subscriptions",
      "organizations_url": "https://api.github.com/users/scottt/orgs",
      "repos_url": "https://api.github.com/users/scottt/repos",
      "events_url": "https://api.github.com/users/scottt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/scottt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-31T02:38:09Z",
    "updated_at": "2012-01-31T02:38:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "@minrk, I tweaked the error message to be <code>ImportError(\"IPython.embed_kernel requires pyzmq >= 2.14\")</code> as refering to <code>IPython.embed_kernel</code> instead of <code>IPython.zmq</code> seems clearer to me.\nThanks a bunch for the fast responses and pointers.\n\n@fperez, Looking forward for the review :)\nMy last patch to IPython was 6+ years ago, thanks for all your work on IPython. I love this software!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4436323",
    "html_url": "https://github.com/ipython/ipython/pull/1357#issuecomment-4436323",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1357",
    "id": 4436323,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MzYzMjM=",
    "user": {
      "login": "scottt",
      "id": 110957,
      "node_id": "MDQ6VXNlcjExMDk1Nw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/110957?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/scottt",
      "html_url": "https://github.com/scottt",
      "followers_url": "https://api.github.com/users/scottt/followers",
      "following_url": "https://api.github.com/users/scottt/following{/other_user}",
      "gists_url": "https://api.github.com/users/scottt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/scottt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scottt/subscriptions",
      "organizations_url": "https://api.github.com/users/scottt/orgs",
      "repos_url": "https://api.github.com/users/scottt/repos",
      "events_url": "https://api.github.com/users/scottt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/scottt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-03-11T03:07:58Z",
    "updated_at": "2012-03-11T03:09:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "After reading https://github.com/ipython/ipython/pull/1357#r543009, I changed the code slightly in  https://github.com/scottt/ipython/commit/087e9c3b22ed647531e3b18daed4e7ac294d9ff1\n\n`embed_kernel()` now only imports `IPython.zmq.ipkernel` when called. So as not to cause unnecessary I/O and slow down IPython startup for an infrequently used feature.\n\nI also stopped catching ImportError for IPython.zmq.ipkernel. I found that [IPython/zmq/**init**.py](https://github.com/ipython/ipython/blob/master/IPython/zmq/__init__.py#L19) would catch and replace the ImportError message with \"IPython.zmq requires pyzmq >= 2.1.4\" which seems clear enough. Not doing the import check twice also means the minimum ZMQ version required can stay written only in one place.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4487797",
    "html_url": "https://github.com/ipython/ipython/pull/1357#issuecomment-4487797",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1357",
    "id": 4487797,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODc3OTc=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-03-13T22:24:09Z",
    "updated_at": "2012-03-13T22:24:09Z",
    "author_association": "MEMBER",
    "body": "@scottt, this is great!  One thing I'd like to have before we merge it, is at least one or two tests.  Because of the kernel embedding, they might need to go into a new test group, so let us know if you need a hand.  But I don't want to build too much more technical debt without new tests.\n\nIn this case the test should be pretty simple to write: just start a new process with an embedded kernel that has a namespace configured with one or two variables, check those values from the test, run a piece of code in there, check the result, done.\n\nLet us know if you need a hand with the test, shouldn't be hard.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4487812",
    "html_url": "https://github.com/ipython/ipython/pull/1357#issuecomment-4487812",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1357",
    "id": 4487812,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODc4MTI=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-03-13T22:25:01Z",
    "updated_at": "2012-03-13T22:25:01Z",
    "author_association": "MEMBER",
    "body": "Finally, this new capability should also be mentioned in the manual, in the [embedding section](http://ipython.org/ipython-doc/dev/interactive/reference.html#embedding).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5136217",
    "html_url": "https://github.com/ipython/ipython/pull/1357#issuecomment-5136217",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1357",
    "id": 5136217,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzYyMTc=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-15T01:36:18Z",
    "updated_at": "2012-04-15T01:36:18Z",
    "author_association": "MEMBER",
    "body": "This currently breaks all _regular_ usage of the KernelApp, with:\n\n```\nAttributeError: 'IPKernelApp' object has no attribute 'user_module'\n```\n\nWhich should be fixed by adding the user_module/user_ns to the IPKernelApp as traitlets.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5164046",
    "html_url": "https://github.com/ipython/ipython/pull/1357#issuecomment-5164046",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1357",
    "id": 5164046,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjQwNDY=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-16T22:22:32Z",
    "updated_at": "2012-04-16T22:22:32Z",
    "author_association": "MEMBER",
    "body": "@scottt, what's your take on this one?  This is kind of a high-priority/value PR for us, so if you're swamped and don't think you'll be able to work on it, let us know and we'll do our best to pitch in and give you a hand.  It seems there's a bit of fixing still needed before we can merge it...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5208823",
    "html_url": "https://github.com/ipython/ipython/pull/1357#issuecomment-5208823",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1357",
    "id": 5208823,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMDg4MjM=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-18T21:07:39Z",
    "updated_at": "2012-04-18T21:09:27Z",
    "author_association": "MEMBER",
    "body": "This is super close, so I'm happy to take it over the line, if you want.\n\nThe only changes requested by review seem to be:\n- add `user_module/ns` to IPKernelApp\n- remove unnecessarily specific `extract_module_locals_above()`\n- add a docstring and basic test and docs\n\nThose seem quite straightforward, and I'm happy to do them.\n\nOne thing we might want to add is passing config to the embedded Kernel, changing the sig to:\n\n``` python\ndef embed_kernel(module=None, local_ns=None, **kwargs):\n    KernelApp = IPKernelApp.instance(**kwargs) \n    ...\n```\n\nThis better matches the existing IPython.embed()\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5209500",
    "html_url": "https://github.com/ipython/ipython/pull/1357#issuecomment-5209500",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1357",
    "id": 5209500,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMDk1MDA=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-18T21:41:17Z",
    "updated_at": "2012-04-18T21:41:17Z",
    "author_association": "MEMBER",
    "body": "Actually, come to think of it, `user_module/_ns` should _not_ be part of IPKernelApp.  The embedding should just set them directly on the kernel.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5211158",
    "html_url": "https://github.com/ipython/ipython/pull/1357#issuecomment-5211158",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1357",
    "id": 5211158,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMTExNTg=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-18T23:08:16Z",
    "updated_at": "2012-04-18T23:08:16Z",
    "author_association": "MEMBER",
    "body": "@minrk, are you sure?  I seem to recall that we need to 'prepare' a namespace that will be used by the kernel by adding a few names to it (like `__file__`, `get_ipython`, etc).  In that scenario, it's better to get the dict the user wants in the constructor, so we can manipulate it before the interactive loop starts.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5213492",
    "html_url": "https://github.com/ipython/ipython/pull/1357#issuecomment-5213492",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1357",
    "id": 5213492,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMTM0OTI=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-19T02:09:57Z",
    "updated_at": "2012-04-19T03:15:15Z",
    "author_association": "MEMBER",
    "body": "> @minrk, are you sure?  I seem to recall that we need to 'prepare' a namespace that will be used by the kernel by adding a few names to it (like `__file__`, `get_ipython`, etc).  In that scenario, it's better to get the dict the user wants in the constructor, so we can manipulate it before the interactive loop starts.\n\nThat's not how it works in the current embedded terminal, and there's no reason embed_kernel should be different.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5214191",
    "html_url": "https://github.com/ipython/ipython/pull/1357#issuecomment-5214191",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1357",
    "id": 5214191,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMTQxOTE=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-19T03:22:30Z",
    "updated_at": "2012-04-19T03:22:30Z",
    "author_association": "MEMBER",
    "body": "@fperez I've got a working version [here](https://github.com/minrk/ipython/compare/embedkernel), where the user_module/ns are attached only to the Kernel, and behave essentially the same as EmbeddedShell (changing user_ns triggers `init_user_ns()` which does the setup).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5215013",
    "html_url": "https://github.com/ipython/ipython/pull/1357#issuecomment-5215013",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1357",
    "id": 5215013,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMTUwMTM=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-19T05:07:09Z",
    "updated_at": "2012-04-19T05:07:09Z",
    "author_association": "MEMBER",
    "body": "I certainly agree that the two should match, I just wasn't sure the embedded terminal was fully correct :)  Is the `init_user_ns()` step triggered by traitlets event handling?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5227595",
    "html_url": "https://github.com/ipython/ipython/pull/1357#issuecomment-5227595",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1357",
    "id": 5227595,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjc1OTU=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-19T17:42:54Z",
    "updated_at": "2012-04-19T17:42:54Z",
    "author_association": "MEMBER",
    "body": "it is not in EmbeddedShell, it is in the Kernel\n"
  }
]
