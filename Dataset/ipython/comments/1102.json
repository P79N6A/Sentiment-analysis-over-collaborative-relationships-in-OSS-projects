[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3009587",
    "html_url": "https://github.com/ipython/ipython/issues/1102#issuecomment-3009587",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1102",
    "id": 3009587,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDk1ODc=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-04T22:52:50Z",
    "updated_at": "2011-12-04T22:52:50Z",
    "author_association": "MEMBER",
    "body": "It's not quite 'top of demo file', because the issue applies to each segment of the demo.\n\nThe source of the difference:\n\nIn >= 0.11, each segment is treated as one cell (a single multiline input).  The magic transform doesn't act on multiline cells, so `lsmagic` is left unchanged.\n\nPossible real fix:\n\nsplit ast nodes, so that lines will be treated as separate inputs in the demo.  This actually won't work, because IPython code is not parse-able as Python code, but perhaps something similar could be done.\n\nUser fix: don't rely on automagic or autocall in multiline segments.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3009754",
    "html_url": "https://github.com/ipython/ipython/issues/1102#issuecomment-3009754",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1102",
    "id": 3009754,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDk3NTQ=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-04T23:26:30Z",
    "updated_at": "2011-12-04T23:26:30Z",
    "author_association": "MEMBER",
    "body": "I believe there is an option to do the prefiltering with `multiline_specials`, so it will allow automagics on more than a single line.\n\nThe warning about history should (I think) be gone in the development version.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3015663",
    "html_url": "https://github.com/ipython/ipython/issues/1102#issuecomment-3015663",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1102",
    "id": 3015663,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTU2NjM=",
    "user": {
      "login": "agardelein",
      "id": 1240355,
      "node_id": "MDQ6VXNlcjEyNDAzNTU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1240355?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/agardelein",
      "html_url": "https://github.com/agardelein",
      "followers_url": "https://api.github.com/users/agardelein/followers",
      "following_url": "https://api.github.com/users/agardelein/following{/other_user}",
      "gists_url": "https://api.github.com/users/agardelein/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/agardelein/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agardelein/subscriptions",
      "organizations_url": "https://api.github.com/users/agardelein/orgs",
      "repos_url": "https://api.github.com/users/agardelein/repos",
      "events_url": "https://api.github.com/users/agardelein/events{/privacy}",
      "received_events_url": "https://api.github.com/users/agardelein/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-05T11:12:50Z",
    "updated_at": "2011-12-05T11:12:50Z",
    "author_association": "NONE",
    "body": "IPythonLineDemo with a loop seems a workaround solution as it is on a line by line basis.\n\nbomberx% ipython --automagic  \nPython 2.7.2+ (default, Nov 30 2011, 19:22:03) \nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 0.11 -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object', use 'object??' for extra details.\n\nIn [1]: from IPython.lib.demo import IPythonLineDemo\n\nIn [2]: mydemo=IPythonLineDemo('aa2.py')\n\nIn [3]: while not mydemo.finished:\n   ...:     mydemo()\n   ...:  \n*********************\\* <aa2.py> block # 0 (1 remaining) **********************\nprint 2222\n\n*********************************\\* output: **********************************\n2222\n*********************\\* <aa2.py> block # 1 (0 remaining) **********************\nlsmagic\n\n*********************************\\* output: **********************************\nERROR! Session/line number was not unique in database. History logging moved to new session 41\nAvailable magic functions:\n%alias  %autocall  %autoindent  %automagic  %bookmark  %cd  %colors  %cpaste  %debug  %dhist  %dirs  %doctest_mode  %ed  %edit  %env  %gui  %hist  %history  %install_default_config  %install_profiles  %load_ext  %loadpy  %logoff  %logon  %logstart  %logstate  %logstop  %lsmagic  %macro  %magic  %page  %paste  %pastebin  %pdb  %pdef  %pdoc  %pfile  %pinfo  %pinfo2  %popd  %pprint  %precision  %profile  %prun  %psearch  %psource  %pushd  %pwd  %pycat  %pylab  %quickref  %recall  %rehashx  %reload_ext  %rep  %rerun  %reset  %reset_selective  %run  %save  %sc  %sx  %tb  %time  %timeit  %unalias  %unload_ext  %who  %who_ls  %whos  %xdel  %xmode\n\nAutomagic is ON, % prefix NOT needed for magic functions.\n\n*******************************\\* END OF DEMO ********************************\n*************\\* Use <demo_name>.reset() if you want to rerun it. **************\n\nIn [6]: \n"
  }
]
