[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/464929",
    "html_url": "https://github.com/ipython/ipython/issues/169#issuecomment-464929",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/169",
    "id": 464929,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDkyOQ==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2010-10-13T00:23:27Z",
    "updated_at": "2010-10-13T00:23:27Z",
    "author_association": "MEMBER",
    "body": "The ipythonqt script has similar logic preventing binding to a local non-loopback interface (it fails silently, which is worse, but easily fixable).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/465031",
    "html_url": "https://github.com/ipython/ipython/issues/169#issuecomment-465031",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/169",
    "id": 465031,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTAzMQ==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2010-10-13T01:15:03Z",
    "updated_at": "2010-10-13T01:15:03Z",
    "author_association": "MEMBER",
    "body": "We also need to allow binding to multiple interfaces. At the _very least_, support the catch-all aliases, which can be specified as: '0.0.0.0' or '', since these are likely the most common choice after localhost.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/465046",
    "html_url": "https://github.com/ipython/ipython/issues/169#issuecomment-465046",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/169",
    "id": 465046,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTA0Ng==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2010-10-13T01:30:26Z",
    "updated_at": "2010-10-13T01:30:26Z",
    "author_association": "MEMBER",
    "body": "No, I hadn't tried.  I had assumed it was possible (the generic machinery for it is there), but I'd never actually tested it.\n\nGo ahead and make the fixes.\n\nThough since right now we have _zero_ security/authentication/encryption, I'd say that allowing remote clients should be something explicitly required on startup with --allow-remote or somesuch.  At least users will be aware that they are opening effectively a remote shell on their system.\n\nOn something like the UCB-wide network, I tend to keep long-running sessions on a machine that has a publicly addressable IP.  I don't want to have to worry about remote connections all the time.\n\nIt would be even better if this could be _toggled_ at runtime: you could decide you want to invite someone, then you allow their IP, then you close again.\n\nSo I think the ideal design would be:\n- by default, closed to remotes (like now)\n- --allow-remote=IP: allows this IP to connect.\n- --allow-remote='all': fully open to any remote connection.\n\nAnd having the allow/disable remotes be an internal IPython method would be great, so that one can do this at runtime too (both allowing and closing).\n\nHow does that sound?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/465384",
    "html_url": "https://github.com/ipython/ipython/issues/169#issuecomment-465384",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/169",
    "id": 465384,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTM4NA==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2010-10-13T06:38:31Z",
    "updated_at": "2010-10-13T06:40:15Z",
    "author_association": "MEMBER",
    "body": "I pushed an implementation of this into my newkernel.  It involves adding a file into IPython.utils that builds LOCALHOST and a list of IPs pointing to the current machine called LOCAL_IPS which can be used for checking whether a connection is really local.\n\nhttp://github.com/minrk/ipython/commit/0641149f37f1de87743c4338cda4d3715b9da38d\n\nThe rest of the implementation involves propagating the existing --ip flag in base_launch_kernel up through the various launch/start_kernel methods, so that the frontend '--ip' flag actually makes sense when the kernel is not external.\n\nhttp://github.com/minrk/ipython/commit/cd37162666ee713076f79c77c4e49e555fbacc6a\n\nIt sounds like you want to be able to allow connections _from_ specific clients, but that just isn't possible at the socket level. We would have to build all of the identifying machinery into our messaging system (e.g. via uuid1 based session IDs), and implementing security for the entire messaging system is a bit beyond the scope of this interface bugfix.  Are we ready to start that discussion?\n\nAll I did was fix the '--ip' flag for the listening kernel, which didn't work unless it was loopback before. That means you can now listen on 192.168.x.y (enet) OR 127.0.0.1 (loopback) OR 0.0.0.0 (all interfaces). What you can't do is listen on more than one interface but less than all of them.  If we change the ip argument from an interface to a list of interfaces, then we can reasonably build in the option to have multiple interfaces, and then runtime-removable interfaces make sense.\n\nThe default is still loopback, so unless users specify to listen on an externally visible IP, it's not vulnerable.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/467760",
    "html_url": "https://github.com/ipython/ipython/issues/169#issuecomment-467760",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/169",
    "id": 467760,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2Nzc2MA==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2010-10-14T06:48:39Z",
    "updated_at": "2010-10-14T06:48:39Z",
    "author_association": "MEMBER",
    "body": "Mmh, this is weird.  I'd written a long comment about this a couple of days ago, and now I don't see it!  Very odd.\n\nReconstructing from memory, I think my main points were:\n- implementation looks good to me.\n- I'm a little worried the logic isn't trivial and we have no real documentation for this other than in --help.  I know it's not your fault because we don't have yet _any_ docs for the qtconsole, but if you think you can start even a sketch of the docs that could be a dump of the --help output along with the explanation above, that would be great.\n\nOtherwise, I'm happy to merge #164 and close this one.  Let me know if you think you can do the little doc stub (whatever you have time for) and we'll proceed.\n\nThanks for the great work!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/467905",
    "html_url": "https://github.com/ipython/ipython/issues/169#issuecomment-467905",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/169",
    "id": 467905,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzkwNQ==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2010-10-14T08:33:31Z",
    "updated_at": "2010-10-14T08:33:31Z",
    "author_association": "MEMBER",
    "body": "Yes, I thought I submitted the above comment before, but it didn't post, and I had to redo it a few hours later when I noticed.  I assumed I just forgot to hit the button.\n\nI think the logic is fairly straightforward, but there does seem to be an increasing number of states to switch between.\n\nI just added a little bit of text to --help in #164, and I'll start a skeleton doc, hopefully by this weekend.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/485482",
    "html_url": "https://github.com/ipython/ipython/issues/169#issuecomment-485482",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/169",
    "id": 485482,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NTQ4Mg==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2010-10-22T08:11:08Z",
    "updated_at": "2010-10-22T08:11:08Z",
    "author_association": "MEMBER",
    "body": "What's the status of this one?  It seems to me that since we've closed #164 with these enhancements, this one can be closed, no?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/486336",
    "html_url": "https://github.com/ipython/ipython/issues/169#issuecomment-486336",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/169",
    "id": 486336,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NjMzNg==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2010-10-22T16:38:35Z",
    "updated_at": "2010-10-22T16:38:35Z",
    "author_association": "MEMBER",
    "body": " Yes, this is fixed as part of #164. Closing...\n"
  }
]
