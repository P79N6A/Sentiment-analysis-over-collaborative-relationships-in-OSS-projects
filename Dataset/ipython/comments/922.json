[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2492607",
    "html_url": "https://github.com/ipython/ipython/issues/922#issuecomment-2492607",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/922",
    "id": 2492607,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTI2MDc=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-22T20:39:41Z",
    "updated_at": "2011-10-22T20:39:41Z",
    "author_association": "MEMBER",
    "body": "We know ipython.el is out of date, but none of the core team know (or particularly want to learn) emacs lisp. If you want to work on it, we'll definitely welcome pull requests.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2492664",
    "html_url": "https://github.com/ipython/ipython/issues/922#issuecomment-2492664",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/922",
    "id": 2492664,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTI2NjQ=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-22T20:52:24Z",
    "updated_at": "2011-10-22T20:52:24Z",
    "author_association": "MEMBER",
    "body": "It would be nice if there were a way to merge Issues on GitHub.  This is really a duplicate of #853, but from a different angle.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2494145",
    "html_url": "https://github.com/ipython/ipython/issues/922#issuecomment-2494145",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/922",
    "id": 2494145,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTQxNDU=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-23T05:36:00Z",
    "updated_at": "2011-10-23T05:36:00Z",
    "author_association": "MEMBER",
    "body": "Made an emacs label so at least we can quickly spot these emacs/ipython.el bugs on triage.  But until someone with good elisp chops steps up to the plate to help out, this will unfortunately go unfixed...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4043889",
    "html_url": "https://github.com/ipython/ipython/issues/922#issuecomment-4043889",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/922",
    "id": 4043889,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDM4ODk=",
    "user": {
      "login": "andreas-roehler",
      "id": 1173139,
      "node_id": "MDQ6VXNlcjExNzMxMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1173139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andreas-roehler",
      "html_url": "https://github.com/andreas-roehler",
      "followers_url": "https://api.github.com/users/andreas-roehler/followers",
      "following_url": "https://api.github.com/users/andreas-roehler/following{/other_user}",
      "gists_url": "https://api.github.com/users/andreas-roehler/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andreas-roehler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andreas-roehler/subscriptions",
      "organizations_url": "https://api.github.com/users/andreas-roehler/orgs",
      "repos_url": "https://api.github.com/users/andreas-roehler/repos",
      "events_url": "https://api.github.com/users/andreas-roehler/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andreas-roehler/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-19T18:22:41Z",
    "updated_at": "2012-02-19T20:13:40Z",
    "author_association": "NONE",
    "body": "Hi all,\n\nbelow a patch which should cure that bug and some others around.\nPython-mode.el seeks to assist IPython natively, the related code has been merged.\nThanks all authors BTW.\n\nThink ipython.el might be of some importance for other Python-modes still - thus removed the \"require 'python-mode\".\n\nCheers,\nAndreas\n\n``` diff\nhttp://launchpad.net/python-mode\nhttp://launchpad.net/s-x-emacs-werkstatt/\n\n\n--- ipython.el  2012-02-19 18:40:11.344802431 +0100\n+++ ipython.el  2012-02-19 18:37:58.172802431 +0100\n@@ -133,7 +133,6 @@\n ;;      - look into init priority issues with `py-python-command' (if it's set\n ;;        via custom)\n\n-\n ;;; Code\n (require 'cl)\n (require 'shell)\n@@ -144,7 +143,14 @@\n ;; python-file is ever edited etc. but it means that `py-shell' works\n ;; without loading a python-file first. Obviously screwing around with\n ;; python-mode's variables like this is a mess, but well.\n-(require 'python-mode)\n+(cond ((featurep 'python-mode)\n+       (load \"python-mode\" nil t))\n+      ((featurep 'python)\n+       (load \"python\" nil t))\n+      (error \"Don't see any Python-mode\"))\n+\n+(defvar inferior-python-mode-hook nil\n+  \"Python-mode from python.el has no `py-shell-hook'. \")\n\n (defcustom ipython-command \"ipython\"\n   \"*Shell command used to start ipython.\"\n@@ -159,7 +165,6 @@\n (defvar ipython-backup-of-py-python-command nil\n   \"HACK\")\n\n-\n (defvar ipython-de-input-prompt-regexp \"\\\\(?:\n In \\\\[[0-9]+\\\\]: *.*\n ----+> \\\\(.*\n@@ -173,6 +178,8 @@\n (defvar ipython-de-output-prompt-regexp \"^Out\\\\[[0-9]+\\\\]: \"\n   \"A regular expression to match the output prompt of IPython.\")\n\n+(defvaralias 'python-python-command-args 'py-python-command-args)\n+(defvaralias  'inferior-python-mode-map 'py-shell-map)\n\n (if (not (executable-find ipython-command))\n     (message (format \"Can't find executable %s - ipython.el *NOT* activated!!!\"\n@@ -197,10 +204,11 @@\n       (define-key py-shell-map \"\\t\" 'ipython-complete)\n       ;;XXX this is really just a cheap hack, it only completes symbols in the\n       ;;interactive session -- useful nonetheless.\n-      (define-key py-mode-map [(meta tab)] 'ipython-complete)\n-\n-      )\n+    (define-key py-mode-map [(meta tab)] 'ipython-complete))\n+  (if (boundp 'py-shell-hook)\n+      ;; only python-mode.el has that hook\n     (add-hook 'py-shell-hook 'ipython-shell-hook)\n+    (add-hook 'inferior-python-mode-hook 'ipython-shell-hook))\n     ;; Regular expression that describes tracebacks for IPython in context and\n     ;; verbose mode.\n\n@@ -217,14 +225,13 @@\n     (setq py-traceback-line-re\n           \"\\\\(^[^\\t >].+?\\\\.py\\\\).*\\n   +[0-9]+[^\\00]*?\\n-+> \\\\([0-9]+\\\\)+\")\n\n-\n     ;; Recognize the ipython pdb, whose prompt is 'ipdb>' or  'ipydb>'\n     ;;instead of '(Pdb)'\n     (setq py-pdbtrack-input-prompt \"\\n[(<]*[Ii]?[Pp]y?db[>)]+ \")\n     (setq pydb-pydbtrack-input-prompt \"\\n[(]*ipydb[>)]+ \")\n\n     (setq py-shell-input-prompt-1-regexp \"^In \\\\[[0-9]+\\\\]: *\"\n-          py-shell-input-prompt-2-regexp \"^   [.][.][.]+: *\" )\n+        py-shell-input-prompt-2-regexp \"^   [.][.][.]+: *\")\n     ;; select a suitable color-scheme\n     (unless (delq nil\n                   (mapcar (lambda (x) (eq (string-match \"^--colors*\" x) 0))\n@@ -286,7 +293,6 @@\n looks like it came from a normal interactive python session, so that it can\n be used in doctests. Example:\n\n-\n     In [1]: import sys\n\n     In [2]: sys.stdout.write 'Hi!\\n'\n@@ -327,6 +333,8 @@\n   \"print(';'.join(get_ipython().complete('%s', '%s')[1])) #PYTHON-MODE SILENT\\n\"\n   \"The string send to ipython to query for all possible completions\")\n\n+(setq ipython-completion-command-string\n+      \"print(';'.join(get_ipython().complete('%s', '%s')[1])) #PYTHON-MODE SILENT\\n\")\n\n ;; xemacs doesn't have `comint-preoutput-filter-functions' so we'll try the\n ;; following wonderful hack to work around this case\n@@ -432,7 +440,7 @@\n              (with-output-to-temp-buffer \"*IPython Completions*\"\n                (display-completion-list (all-completions pattern completion-table)))\n              (message \"Making completion list...%s\" \"done\")))))\n-)\n+  )\n\n ;;; if python-mode's keybinding for the tab key wins then py-shell-complete is called\n ;;; instead of ipython-complete which result in hanging emacs since there is no shell\n@@ -441,7 +449,6 @@\n   (around avoid-py-shell-complete activate)\n   (ipython-complete))\n\n-\n ;;; autoindent support: patch sent in by Jin Liu <m.liu.jin@gmail.com>,\n ;;; originally written by doxgen@newsmth.net\n ;;; Minor modifications by fperez for xemacs compatibility.\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4043942",
    "html_url": "https://github.com/ipython/ipython/issues/922#issuecomment-4043942",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/922",
    "id": 4043942,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDM5NDI=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-19T18:29:44Z",
    "updated_at": "2012-02-19T18:29:44Z",
    "author_association": "MEMBER",
    "body": "Thanks, Andreas. Can you submit the changes as a github pull request (equivalent to a merge proposal on launchpad)? Let us know if that's a problem.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4049526",
    "html_url": "https://github.com/ipython/ipython/issues/922#issuecomment-4049526",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/922",
    "id": 4049526,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDk1MjY=",
    "user": {
      "login": "andreas-roehler",
      "id": 1173139,
      "node_id": "MDQ6VXNlcjExNzMxMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1173139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andreas-roehler",
      "html_url": "https://github.com/andreas-roehler",
      "followers_url": "https://api.github.com/users/andreas-roehler/followers",
      "following_url": "https://api.github.com/users/andreas-roehler/following{/other_user}",
      "gists_url": "https://api.github.com/users/andreas-roehler/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andreas-roehler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andreas-roehler/subscriptions",
      "organizations_url": "https://api.github.com/users/andreas-roehler/orgs",
      "repos_url": "https://api.github.com/users/andreas-roehler/repos",
      "events_url": "https://api.github.com/users/andreas-roehler/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andreas-roehler/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-20T07:43:10Z",
    "updated_at": "2012-02-20T07:43:10Z",
    "author_association": "NONE",
    "body": "https://github.com/ipython/ipython/pull/1420\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/69992819",
    "html_url": "https://github.com/ipython/ipython/issues/922#issuecomment-69992819",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/922",
    "id": 69992819,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5OTkyODE5",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-14T21:12:36Z",
    "updated_at": "2015-01-14T21:12:36Z",
    "author_association": "MEMBER",
    "body": "ipython.el is gone\n"
  }
]
