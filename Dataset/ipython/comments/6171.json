[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/49512306",
    "html_url": "https://github.com/ipython/ipython/pull/6171#issuecomment-49512306",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6171",
    "id": 49512306,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NTEyMzA2",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-19T15:25:28Z",
    "updated_at": "2014-07-19T15:25:41Z",
    "author_association": "MEMBER",
    "body": "Thanks for working on this!  Does this change the actual model value, or does it just change what is displayed on the slider?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/50216476",
    "html_url": "https://github.com/ipython/ipython/pull/6171#issuecomment-50216476",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6171",
    "id": 50216476,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjE2NDc2",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-25T23:57:44Z",
    "updated_at": "2014-07-25T23:57:44Z",
    "author_association": "MEMBER",
    "body": "Pinging @jdfreder to review this.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/50221053",
    "html_url": "https://github.com/ipython/ipython/pull/6171#issuecomment-50221053",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6171",
    "id": 50221053,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjIxMDUz",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-26T02:38:50Z",
    "updated_at": "2014-07-26T02:38:50Z",
    "author_association": "MEMBER",
    "body": "@tarzzz did you check to make sure `value` isn't getting echoed back to the backend even when it hasn't changed?  I don't know if the diff logic built-in into the widget framework is smart enough to prevent the code you have here from sending state to the backend upon every update to the frontend - which we definitely do not want to happen!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52176042",
    "html_url": "https://github.com/ipython/ipython/pull/6171#issuecomment-52176042",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6171",
    "id": 52176042,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMTc2MDQy",
    "user": {
      "login": "tarzzz",
      "id": 1546532,
      "node_id": "MDQ6VXNlcjE1NDY1MzI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1546532?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tarzzz",
      "html_url": "https://github.com/tarzzz",
      "followers_url": "https://api.github.com/users/tarzzz/followers",
      "following_url": "https://api.github.com/users/tarzzz/following{/other_user}",
      "gists_url": "https://api.github.com/users/tarzzz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tarzzz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tarzzz/subscriptions",
      "organizations_url": "https://api.github.com/users/tarzzz/orgs",
      "repos_url": "https://api.github.com/users/tarzzz/repos",
      "events_url": "https://api.github.com/users/tarzzz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tarzzz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-14T12:19:47Z",
    "updated_at": "2014-08-14T13:03:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "By every update, you mean the slider only right? \n\nRight now, I have implemented it such that if there is a change in slider limits from python code, an update is sent to the frontend, which changes the current slider value appropriately. If there is no change in python object of the slider, no request is sent.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52232501",
    "html_url": "https://github.com/ipython/ipython/pull/6171#issuecomment-52232501",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6171",
    "id": 52232501,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjMyNTAx",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-14T19:36:26Z",
    "updated_at": "2014-08-14T19:36:26Z",
    "author_association": "MEMBER",
    "body": "Yeah, I mean you don't want to call set and touch if value isn't actually being changed.  Here it looks like you do something like this:\n- If value is out of bounds, adjust it accordingly.\n- Unconditionally re-set the value and send it to the backend.\n\nIt should be something like this:\n- If value is out of bounds, adjust it accordingly.\n- If the value was adjusted by the last step, re-set the value and send it to the backend.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52234345",
    "html_url": "https://github.com/ipython/ipython/pull/6171#issuecomment-52234345",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6171",
    "id": 52234345,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjM0MzQ1",
    "user": {
      "login": "tarzzz",
      "id": 1546532,
      "node_id": "MDQ6VXNlcjE1NDY1MzI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1546532?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tarzzz",
      "html_url": "https://github.com/tarzzz",
      "followers_url": "https://api.github.com/users/tarzzz/followers",
      "following_url": "https://api.github.com/users/tarzzz/following{/other_user}",
      "gists_url": "https://api.github.com/users/tarzzz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tarzzz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tarzzz/subscriptions",
      "organizations_url": "https://api.github.com/users/tarzzz/orgs",
      "repos_url": "https://api.github.com/users/tarzzz/repos",
      "events_url": "https://api.github.com/users/tarzzz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tarzzz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-14T19:52:00Z",
    "updated_at": "2014-08-14T19:52:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ah, [hopefully] now I understand your concern. Please allow me to elaborate:\nIf initially:\n\n```\nslider.min = 10\n```\n\nand \n\n```\nslider.value = 12\n```\n\nnow somebody changes slider.min to 15(in any input cell), then this code will change the `slider.value` to `15`. \n\n**but**  if initially,\n\n```\nslider.min = 10 # and\nslider.value = 15\n```\n\nNow If somebody changes slider.min to 12, I _dont_ reset slider.value to `12`. It remains `15`\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52239397",
    "html_url": "https://github.com/ipython/ipython/pull/6171#issuecomment-52239397",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6171",
    "id": 52239397,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjM5Mzk3",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-14T20:27:26Z",
    "updated_at": "2014-08-14T20:27:26Z",
    "author_association": "MEMBER",
    "body": "No I don't think that's what I meant, but that's a good point too.  I meant:\n\nslider.value = 5\nslider.min = 0\nslider.max = 10\n\nIf I then do:\n\nslider.value = 11\n\nslider.value gets changed to 10 and the value gets send to the back-end.  This is great, and how it should behave, however!~ If I do this (in Python code):\n\nslider.value = 6\n\nThe value 6 gets sent to the front-end, which triggers the model to update, which triggers your logic in the slider view to be fired, which doesn't make changes to the value, since it's within the bounds, but it still calls this.model.set and this.touch which **may** (this is the part that needs to be checked) send the value back from the front-end to the back-end.  Sending the value back is pointless since it hasn't actually changed.\n\nSo looking at the sync messages:\nBack->Front | value: 6\nFront->Back | value: 6\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52240053",
    "html_url": "https://github.com/ipython/ipython/pull/6171#issuecomment-52240053",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6171",
    "id": 52240053,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjQwMDUz",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-14T20:32:20Z",
    "updated_at": "2014-08-14T20:32:20Z",
    "author_association": "MEMBER",
    "body": "If you look at lines [229-243](https://github.com/tarzzz/ipython/blob/slider-value-validate/IPython/html/static/widgets/js/widget_int.js#L229) in the same file (IntTextView class), you'll see what I mean.  This is how I think it should be done, with a check for the value != to the value already set in the model.  That way you're not calling this.touch when it's not needed.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52242351",
    "html_url": "https://github.com/ipython/ipython/pull/6171#issuecomment-52242351",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6171",
    "id": 52242351,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjQyMzUx",
    "user": {
      "login": "tarzzz",
      "id": 1546532,
      "node_id": "MDQ6VXNlcjE1NDY1MzI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1546532?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tarzzz",
      "html_url": "https://github.com/tarzzz",
      "followers_url": "https://api.github.com/users/tarzzz/followers",
      "following_url": "https://api.github.com/users/tarzzz/following{/other_user}",
      "gists_url": "https://api.github.com/users/tarzzz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tarzzz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tarzzz/subscriptions",
      "organizations_url": "https://api.github.com/users/tarzzz/orgs",
      "repos_url": "https://api.github.com/users/tarzzz/repos",
      "events_url": "https://api.github.com/users/tarzzz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tarzzz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-14T20:50:00Z",
    "updated_at": "2014-08-14T20:50:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, I understood what you meant. adding a commit to reflect your suggestions\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52244862",
    "html_url": "https://github.com/ipython/ipython/pull/6171#issuecomment-52244862",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6171",
    "id": 52244862,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjQ0ODYy",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-14T21:08:45Z",
    "updated_at": "2014-08-14T21:08:45Z",
    "author_association": "MEMBER",
    "body": "Thanks!  \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52386663",
    "html_url": "https://github.com/ipython/ipython/pull/6171#issuecomment-52386663",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6171",
    "id": 52386663,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMzg2NjYz",
    "user": {
      "login": "tarzzz",
      "id": 1546532,
      "node_id": "MDQ6VXNlcjE1NDY1MzI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1546532?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tarzzz",
      "html_url": "https://github.com/tarzzz",
      "followers_url": "https://api.github.com/users/tarzzz/followers",
      "following_url": "https://api.github.com/users/tarzzz/following{/other_user}",
      "gists_url": "https://api.github.com/users/tarzzz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tarzzz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tarzzz/subscriptions",
      "organizations_url": "https://api.github.com/users/tarzzz/orgs",
      "repos_url": "https://api.github.com/users/tarzzz/repos",
      "events_url": "https://api.github.com/users/tarzzz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tarzzz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-16T07:45:26Z",
    "updated_at": "2014-08-16T07:45:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jdfreder I guess it can be labelled as \"needs review\"? I cant do it(some collaborator or owner can).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52585037",
    "html_url": "https://github.com/ipython/ipython/pull/6171#issuecomment-52585037",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6171",
    "id": 52585037,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTg1MDM3",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-19T03:03:22Z",
    "updated_at": "2014-08-19T03:03:22Z",
    "author_association": "MEMBER",
    "body": "Thanks @tarzzz !\n"
  }
]
