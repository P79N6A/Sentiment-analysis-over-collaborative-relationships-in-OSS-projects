[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12409188",
    "html_url": "https://github.com/ipython/ipython/pull/2792#issuecomment-12409188",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2792",
    "id": 12409188,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNDA5MTg4",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-18T06:17:20Z",
    "updated_at": "2013-01-18T06:17:20Z",
    "author_association": "MEMBER",
    "body": "This looks very simple and straightforward to me (travis failures are travis bugs).\n\n@takluyver do you want to check in, since you covered the review of the actual implementation?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12422338",
    "html_url": "https://github.com/ipython/ipython/pull/2792#issuecomment-12422338",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2792",
    "id": 12422338,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNDIyMzM4",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-18T13:47:45Z",
    "updated_at": "2013-01-18T13:47:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "Checked that it works with my Emacs client.\nhttps://github.com/tkf/emacs-ipython-notebook/commit/20818f2e771aa5fe1931d881057fd5e93600e2f2 (note to myself)\n\nI feel bit sorry about not supporting it in any official frontends.  I'd like to add some but I guess it requires very intensive coding for UI part, unless you require some widget that can be used for JS or Qt.  For terminal frontend, percol [1] can be a good choice.\n\n[1] https://github.com/mooz/percol\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12423193",
    "html_url": "https://github.com/ipython/ipython/pull/2792#issuecomment-12423193",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2792",
    "id": 12423193,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNDIzMTkz",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-18T14:11:10Z",
    "updated_at": "2013-01-18T14:11:10Z",
    "author_association": "MEMBER",
    "body": "I've skipped much of the protocol versioning discussion, so just to check: protocol version (4, 1) means:\n- If the frontend speaks version (4, 0), it can safely communicate with a kernel speaking (4, 1), so long as it ignores extra fields in the response.\n- If the kernel speaks (4, 0), a client that knows (4, 1) is responsible for going into (4, 0) compatibility mode? Or should a (4, 0) kernel be able to ignore the extras in (4, 1) messages?\n\nAlso, are we documenting anywhere the changes as we increment the protocol version? And what's the policy for incrementing it - i.e. if we add something else to the protocol in a couple of weeks, before we make a release, do we just add that to the (4, 1) spec, or do we increment again?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12425408",
    "html_url": "https://github.com/ipython/ipython/pull/2792#issuecomment-12425408",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2792",
    "id": 12425408,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNDI1NDA4",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-18T15:03:38Z",
    "updated_at": "2013-01-18T15:03:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "> - If the frontend speaks version (4, 0), it can safely communicate with a kernel speaking (4, 1), so long as it ignores extra fields in the response.\n\nThis is my understanding.\n\n> - If the kernel speaks (4, 0), a client that knows (4, 1) is responsible for going into (4, 0) compatibility mode? Or should a (4, 0) kernel be able to ignore the extras in (4, 1) messages?\n\nI think this is a good point missing in the previous discussions.  I have been considering the latter case.  All kernels and clients sharing the major version number should be able to communicate without any consideration of protocol version.  Introducing backward incompatible change in same major version (i.e., 4.1 client can't communicate with 4.0 kernel) should not be allowed.\n\nI think any change that introduces additional key to the protocol can be done by just updating minor version, as long as the default (missing key) is the same as the one to the previous version.\n\n> Also, are we documenting anywhere the changes as we increment the protocol version?\n\nIt is mentioned in the messaging protocol:\nff19bf72ba60a63ee3075376ab8995e29555eb3e\n\nBut probably we need a dedicated section or so.\n\nAlso, perhaps we need to note that in what version this key is introduced?  To do that, can we use `versionadded` directive with `kernel-` prefix or something?\n\n``` rst\n.. versionadded:: kernel-4.1\n\n   The key `unique` is introduced.\n```\n\n> And what's the policy for incrementing it - i.e. if we add something else to the protocol in a couple of weeks, before we make a release, do we just add that to the (4, 1) spec, or do we increment again?\n\nI think that should be 4.2.  But I don't have strong opinion on this.\n\nIf we are updating the major version, I think we should update it per pull request basis because without this policy using unofficial client on master will be dangerous.  To be consistent with this update policy for major version, I prefer updating it for minor version.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12435329",
    "html_url": "https://github.com/ipython/ipython/pull/2792#issuecomment-12435329",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2792",
    "id": 12435329,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNDM1MzI5",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-18T18:40:26Z",
    "updated_at": "2013-01-18T18:40:26Z",
    "author_association": "MEMBER",
    "body": "Let's not actually rev the version number here.  4.0 should mean the version _released_ with IPython 0.14.dev.\nIf we rev the version every time there's a small commit that is never actually released, that is useless granularity,\nand not feasible to track.\n\nRe: documentation, yes, we do need to track this kind of thing in the message spec doc.  We should probably use the `versionadded` rst, like the Python docs.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12436103",
    "html_url": "https://github.com/ipython/ipython/pull/2792#issuecomment-12436103",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2792",
    "id": 12436103,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNDM2MTAz",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-18T18:59:30Z",
    "updated_at": "2013-01-18T18:59:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't argue, but @Carreau and @takluyver might have different opinion because originally the discussion about kernel version is started to track the change of this new key.\nsee: https://github.com/ipython/ipython/pull/2609#issuecomment-10628972\n\n> We should probably use the versionadded rst, like the Python docs.\n\nSo, should I use IPython version number or kernel version number?  That was my question.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12436303",
    "html_url": "https://github.com/ipython/ipython/pull/2792#issuecomment-12436303",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2792",
    "id": 12436303,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNDM2MzAz",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-18T19:04:12Z",
    "updated_at": "2013-01-18T19:04:12Z",
    "author_association": "MEMBER",
    "body": "> So, should I use IPython version number or kernel version number? That was my question.\n\nspec version.  While it will probably be some time before the two versions are not 100% redundant, ultimately the message spec is an independent document.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12436591",
    "html_url": "https://github.com/ipython/ipython/pull/2792#issuecomment-12436591",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2792",
    "id": 12436591,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNDM2NTkx",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-18T19:11:47Z",
    "updated_at": "2013-01-18T19:11:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "`.. versionadded:: kernel-4.0` sounds bit weird because there is no version before it.  Anyway, fix is applied.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12443573",
    "html_url": "https://github.com/ipython/ipython/pull/2792#issuecomment-12443573",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2792",
    "id": 12443573,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNDQzNTcz",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-18T22:17:58Z",
    "updated_at": "2013-01-18T22:17:58Z",
    "author_association": "MEMBER",
    "body": "I'm somewhat inbetween - I think incrementing the version each time we add a key will get messy, but if we only increment once per release, we'll leave lots of people with kernels that claim to be, say, 4.0, but don't implement all the features documented for 4.0.\n\nIn this specific case, 4.0 has only been around for a few days, so I don't think it's important to increment it\n\nAnyway, once we've worked out the protocol question, I'm happy with the code changes here.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12444125",
    "html_url": "https://github.com/ipython/ipython/pull/2792#issuecomment-12444125",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2792",
    "id": 12444125,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNDQ0MTI1",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-18T22:34:15Z",
    "updated_at": "2013-01-18T22:34:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "What do you mean by \"the protocol question\"?  This?:\n\n> - If the frontend speaks version (4, 0), it can safely communicate with a kernel speaking (4, 1), so long as it ignores extra fields in the response.\n> - If the kernel speaks (4, 0), a client that knows (4, 1) is responsible for going into (4, 0) compatibility mode? Or should a (4, 0) kernel be able to ignore the extras in (4, 1) messages?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12444277",
    "html_url": "https://github.com/ipython/ipython/pull/2792#issuecomment-12444277",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2792",
    "id": 12444277,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNDQ0Mjc3",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-18T22:39:25Z",
    "updated_at": "2013-01-18T22:39:25Z",
    "author_association": "MEMBER",
    "body": "Well, for this PR, the protocol question is whether or not we bump the version number to (4, 1). We seem to be converging on 'no', but there's no particular rush to land this (for me, at least), so I'm letting people offer other opinions before we commit to it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12444562",
    "html_url": "https://github.com/ipython/ipython/pull/2792#issuecomment-12444562",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2792",
    "id": 12444562,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNDQ0NTYy",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-18T22:48:54Z",
    "updated_at": "2013-01-18T22:48:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ah, OK.  So we are deciding the protocol version number.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12472476",
    "html_url": "https://github.com/ipython/ipython/pull/2792#issuecomment-12472476",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2792",
    "id": 12472476,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNDcyNDc2",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-20T16:00:46Z",
    "updated_at": "2013-01-20T16:00:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "@minrk  What do you think about updating polity for major version?  If we want to have easy-to-understand error message when connecting to old released kernel from a new client in development, we need to update the major version before release, right?  Not considering this situation may be a wise choice because it may simplify development, though.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12981343",
    "html_url": "https://github.com/ipython/ipython/pull/2792#issuecomment-12981343",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2792",
    "id": 12981343,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyOTgxMzQz",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-01T05:27:12Z",
    "updated_at": "2013-02-01T05:27:12Z",
    "author_association": "MEMBER",
    "body": "Sorry, I had forgotten you were waiting on me.  I don't think we should update the version at any point between now and the release of 0.14.  This PR should be ready as-is, with the only exception that ipkernel.py has moved out from under you (sorry about that).  If you rebase on master (it might be easier to just reset to master and manually apply the change again, since it is small), ipkernel.py has moved from IPython.zmq to IPython.kernel.zmq.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/13005027",
    "html_url": "https://github.com/ipython/ipython/pull/2792#issuecomment-13005027",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2792",
    "id": 13005027,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMDA1MDI3",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-01T17:42:03Z",
    "updated_at": "2013-02-01T17:42:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK, I rebased and force pushed.  I checked that it works in Emacs client.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/13008871",
    "html_url": "https://github.com/ipython/ipython/pull/2792#issuecomment-13008871",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2792",
    "id": 13008871,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMDA4ODcx",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-01T19:07:43Z",
    "updated_at": "2013-02-01T19:07:43Z",
    "author_association": "MEMBER",
    "body": "Thanks, merging.\n"
  }
]
