[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/307959588",
    "html_url": "https://github.com/ipython/ipython/pull/10651#issuecomment-307959588",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10651",
    "id": 307959588,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzk1OTU4OA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-12T23:04:31Z",
    "updated_at": "2017-06-12T23:04:31Z",
    "author_association": "MEMBER",
    "body": "Refactored, cleaned and documented with some tests. Still some polish to do. \r\nI moved the \"get_repr_mimebundle\" into a class method with \"use your own instance of the class if you have any chance of having concurrency\", Of course you can shoot your self in the foot, by creating a instance everytime you compute the repr, but he, you can shoot yourself in the foot in so many different way, and you can also call the formatters yourself.\r\n\r\nI now also \"Fake\" the `__module__` object of everything in IPython.core.display as otherwise Sphinx can't cross link (I'm partially unhappy because it changes the `repr`.)\r\n\r\nThe DataMetadata now have `.data` and `.metadata` attributes instead of being a named tuple.\r\n\r\nThe `IPython.display` module have some top-level docs."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/308160560",
    "html_url": "https://github.com/ipython/ipython/pull/10651#issuecomment-308160560",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10651",
    "id": 308160560,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwODE2MDU2MA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-13T15:46:19Z",
    "updated_at": "2017-06-13T15:46:19Z",
    "author_association": "MEMBER",
    "body": "Not sure, but that won't help with the base class that are automatically\ninferred.\n\nOn Jun 13, 2017 08:14, \"Thomas Kluyver\" <notifications@github.com> wrote:\n\n> *@takluyver* commented on this pull request.\n> ------------------------------\n>\n> In IPython/core/display.py\n> <https://github.com/ipython/ipython/pull/10651#discussion_r121708575>:\n>\n> > @@ -1338,3 +1448,15 @@ def set_matplotlib_close(close=True):\n>      from ipykernel.pylab.config import InlineBackend\n>      cfg = InlineBackend.instance()\n>      cfg.close_figures = close\n> +\n> +\n> +\n> +for oname in __all__:\n> +    # set the module name to IPython.display or sphinx cannot correctly cross\n> +    # link. Mostly it figures out that objets are in IPython.core.display, but\n> +    # that's a module we explicitly do not document.\n> +    try:\n> +        # using hasattr to check still raises an AttributeError.\n> +        locals()[oname].__module__ = 'IPython.display'\n>\n> What happens if we cross reference to e.g.\n>\n> :func:`IPython.display.display`\n>\n> â€”\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ipython/ipython/pull/10651#discussion_r121708575>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AAUezw-HNO-gOcZhrh8zvqSNXDsEgdUZks5sDqdBgaJpZM4N11Yr>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/308246533",
    "html_url": "https://github.com/ipython/ipython/pull/10651#issuecomment-308246533",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10651",
    "id": 308246533,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwODI0NjUzMw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-13T20:58:05Z",
    "updated_at": "2017-06-13T20:58:05Z",
    "author_association": "MEMBER",
    "body": "TODO: Look at wether a custom formatter can say \"I actually don't know how to represent this\". "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/308524850",
    "html_url": "https://github.com/ipython/ipython/pull/10651#issuecomment-308524850",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10651",
    "id": 308524850,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwODUyNDg1MA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-14T18:51:46Z",
    "updated_at": "2017-06-14T18:51:46Z",
    "author_association": "MEMBER",
    "body": "meh, I'm un-happy with the actual API when using it. I keep using `get_repr_mimebundle(obj).data.get('text/html', None) or escape(repr(obj))` to build my own nested repr. I defined a helper function, but that seem less than optimal. Though it allows to do some nice things. I'm going to think a bit about the API. "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/308619773",
    "html_url": "https://github.com/ipython/ipython/pull/10651#issuecomment-308619773",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10651",
    "id": 308619773,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwODYxOTc3Mw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-15T03:39:16Z",
    "updated_at": "2017-06-15T03:39:16Z",
    "author_association": "MEMBER",
    "body": "Note to self, the recursion stuff also does not work if a formatter need another. Like for example, the HTML, being \"just\" a bold version of the text/plain."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/308632081",
    "html_url": "https://github.com/ipython/ipython/pull/10651#issuecomment-308632081",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10651",
    "id": 308632081,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwODYzMjA4MQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-15T05:24:55Z",
    "updated_at": "2017-06-15T05:24:55Z",
    "author_association": "MEMBER",
    "body": "> Note to self, the recursion stuff also does not work if a formatter need another. Like for example, the HTML, being \"just\" a bold version of the text/plain.\r\n\r\nOk, I got that to work. "
  }
]
