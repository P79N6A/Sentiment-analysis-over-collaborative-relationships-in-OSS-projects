[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/105056039",
    "html_url": "https://github.com/ipython/ipython/issues/8469#issuecomment-105056039",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8469",
    "id": 105056039,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTA1NjAzOQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-24T19:38:45Z",
    "updated_at": "2015-05-24T19:38:45Z",
    "author_association": "MEMBER",
    "body": "This is a terminal emulator issue IMHO, OS X \"Termianl.app\" is relatively bad (and I can reproduce with it). It works (almost) flawlessly in \"iTerm.app\".\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/105063194",
    "html_url": "https://github.com/ipython/ipython/issues/8469#issuecomment-105063194",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8469",
    "id": 105063194,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTA2MzE5NA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-24T21:29:19Z",
    "updated_at": "2015-05-24T21:29:19Z",
    "author_association": "MEMBER",
    "body": "From my incomplete understanding of terminal mechanics, SIGWINCH should be sent to the foreground process when you resize the window. While you're running nano, that is the foreground process. Possibly the bug is that Terminal.app is sending the signal to the wrong process.\n\nFor lots of details about terminals, see [this article](http://www.linusakesson.net/programming/tty/).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/105081561",
    "html_url": "https://github.com/ipython/ipython/issues/8469#issuecomment-105081561",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8469",
    "id": 105081561,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTA4MTU2MQ==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-25T00:32:08Z",
    "updated_at": "2015-05-25T00:32:08Z",
    "author_association": "MEMBER",
    "body": "IPython registers no handlers for SIGWINCH, so the default process behavior of passing signals to children should be happening. When I test it with a different process, I can see that the subprocess is indeed receiving `SIGWINCH`:\n\n``` python\n# tstwinch.py\nimport time\nimport signal\n\ndef winch(*a):\n    print(\"\\nwinch!\")\n\nsignal.signal(signal.SIGWINCH, winch)\n\n\nwhile True:\n    time.sleep(1)\n```\n\nIPython:\n\n``` python\nIn [1]: !python tstwinch.py\n```\n\nHowever, I do see that the `COLUMNS` env is set in the subprocess, which could be the cause of the confusion.\n\n@takluyver could this be in pexpect or how we call pexpect?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/105118497",
    "html_url": "https://github.com/ipython/ipython/issues/8469#issuecomment-105118497",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8469",
    "id": 105118497,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTExODQ5Nw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-25T04:14:27Z",
    "updated_at": "2015-05-25T04:14:27Z",
    "author_association": "MEMBER",
    "body": "I think the `$COLUMNS` env variable is something bash updates; since you can't change another process' environment variables after starting it, it will be unreliable for long running programs, so I think anything which handles SIGWINCH should use ioctls to check the current size from the terminal itself.\n\nAssuming this is in plain terminal IPython (which is the only way you can use nano, I think), pexpect isn't involved when you do `!nano`. We just call `os.system(\"nano\")`. So I don't see how this could be something we do.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/105298699",
    "html_url": "https://github.com/ipython/ipython/issues/8469#issuecomment-105298699",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8469",
    "id": 105298699,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTI5ODY5OQ==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-25T19:45:16Z",
    "updated_at": "2015-05-25T19:45:16Z",
    "author_association": "MEMBER",
    "body": "Right, I forgot about that. Since SIGWINCH is being properly handled as far as I can tell, I'm not sure what the cause could be.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/109059734",
    "html_url": "https://github.com/ipython/ipython/issues/8469#issuecomment-109059734",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8469",
    "id": 109059734,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwOTA1OTczNA==",
    "user": {
      "login": "tkessler45",
      "id": 12587417,
      "node_id": "MDQ6VXNlcjEyNTg3NDE3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/12587417?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkessler45",
      "html_url": "https://github.com/tkessler45",
      "followers_url": "https://api.github.com/users/tkessler45/followers",
      "following_url": "https://api.github.com/users/tkessler45/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkessler45/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkessler45/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkessler45/subscriptions",
      "organizations_url": "https://api.github.com/users/tkessler45/orgs",
      "repos_url": "https://api.github.com/users/tkessler45/repos",
      "events_url": "https://api.github.com/users/tkessler45/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkessler45/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-04T21:30:45Z",
    "updated_at": "2015-06-04T21:30:45Z",
    "author_association": "NONE",
    "body": "I've been looking at the issue more, and when a terminal session starts up, the iPython shell size is fixed to the current terminal's column number, but then does not resize. If the terminal starts at 80x24, then iPython launches at a fixed 80-column width. It works just fine provided the window remains at 80. If the window is expanded larger than 80, then iPython is still displayed correctly, but its contents still only occupy 80 columns in the upper-left of the window. When in this view, if !nano is run then it only fills out this upper-left view, and not the full view of the resized shell.\n\nEven in these views, when nano is run, the content is rendered correctly (albeit limited to the upper left); however, the problems come when the window is then resized to be smaller, where iPython shows the odd wrapping issues. This happens both when the Terminal window is left at 80-columns, iPython is run, and then the window is resized smaller, and also if iPython is running and you expand the window, then run nano, and then try to make the window smaller again when nano is still running. In both of these cases, the nano window elements get garbles.\n\nThis only happens when using iPython.\n\nThis issue also affects iPython's line wrapping. When you are at the standard iPython prompt, lines usually wrap to the next line, but if the window is resized to be smaller than the bounds it was when iPython was launched (ie, narrowed from 80 columns to something smaller), then the word wrapping is broken and long entries overlap on same line. This issue seems to be fixed by running !clear, but that should not be needed.\n\nThis issue only happens in iPython, and happens regardless of the Terminal emulator being used. I've used three so far: OS X Terminal, iTerm versions 1 and 2, and xterm in XQuartz, and the behavior is consistent among all three.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/109061092",
    "html_url": "https://github.com/ipython/ipython/issues/8469#issuecomment-109061092",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8469",
    "id": 109061092,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwOTA2MTA5Mg==",
    "user": {
      "login": "tkessler45",
      "id": 12587417,
      "node_id": "MDQ6VXNlcjEyNTg3NDE3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/12587417?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkessler45",
      "html_url": "https://github.com/tkessler45",
      "followers_url": "https://api.github.com/users/tkessler45/followers",
      "following_url": "https://api.github.com/users/tkessler45/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkessler45/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkessler45/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkessler45/subscriptions",
      "organizations_url": "https://api.github.com/users/tkessler45/orgs",
      "repos_url": "https://api.github.com/users/tkessler45/repos",
      "events_url": "https://api.github.com/users/tkessler45/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkessler45/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-04T21:35:16Z",
    "updated_at": "2015-06-04T21:35:16Z",
    "author_association": "NONE",
    "body": "It may not be SIGWINCH, per se, but something with ipython is causing this issue. If I only run python3 to get to the basic python prompt, and then run os.system(\"nano\"), then nano opens properly and resizing works as expected.\n\nI've not changed anything about iPython, besides creating a startup script to automatically import pandas, os, and some other common libraries.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/109103954",
    "html_url": "https://github.com/ipython/ipython/issues/8469#issuecomment-109103954",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8469",
    "id": 109103954,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwOTEwMzk1NA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-05T00:33:45Z",
    "updated_at": "2015-06-05T00:33:45Z",
    "author_association": "MEMBER",
    "body": "It might be something to do with readline. Do you see a warning about libedit when you start IPython? Do you have [gnureadline](https://pypi.python.org/pypi/gnureadline) installed, and is it up to date.\n\nWe really don't do anything special with the terminal ourselves - we're just calling `print()` and `input()`. All the terminal handling is done by readline, so if there's a problem, there's a good chance that's where it is.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/109148963",
    "html_url": "https://github.com/ipython/ipython/issues/8469#issuecomment-109148963",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8469",
    "id": 109148963,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwOTE0ODk2Mw==",
    "user": {
      "login": "tkessler45",
      "id": 12587417,
      "node_id": "MDQ6VXNlcjEyNTg3NDE3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/12587417?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkessler45",
      "html_url": "https://github.com/tkessler45",
      "followers_url": "https://api.github.com/users/tkessler45/followers",
      "following_url": "https://api.github.com/users/tkessler45/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkessler45/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkessler45/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkessler45/subscriptions",
      "organizations_url": "https://api.github.com/users/tkessler45/orgs",
      "repos_url": "https://api.github.com/users/tkessler45/repos",
      "events_url": "https://api.github.com/users/tkessler45/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkessler45/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-05T03:00:54Z",
    "updated_at": "2015-06-05T03:06:51Z",
    "author_association": "NONE",
    "body": "I dont see any errors. This is all I see:\n\nTophers-Retina-MBP:~ tkessler$ ipython\nPython 3.4.3 (v3.4.3:9b73f1c3e601, Feb 23 2015, 02:52:03) \nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 3.1.0 -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object', use 'object??' for extra details.\n\nIn [1]: \n\nRunning \"pip3 list\" shows that gnureadline 6.3.3 is already installed. The problem may be with that package, but I can't tell. Are there other programs that are built in a similar way using this package? If so, I'd like to test them to see if the problem is there.\n\nOtherwise, I'd be happy to send in screencasts, screenshots, and other details if it will help.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/109860698",
    "html_url": "https://github.com/ipython/ipython/issues/8469#issuecomment-109860698",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8469",
    "id": 109860698,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwOTg2MDY5OA==",
    "user": {
      "login": "mvduin",
      "id": 2078931,
      "node_id": "MDQ6VXNlcjIwNzg5MzE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2078931?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mvduin",
      "html_url": "https://github.com/mvduin",
      "followers_url": "https://api.github.com/users/mvduin/followers",
      "following_url": "https://api.github.com/users/mvduin/following{/other_user}",
      "gists_url": "https://api.github.com/users/mvduin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mvduin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mvduin/subscriptions",
      "organizations_url": "https://api.github.com/users/mvduin/orgs",
      "repos_url": "https://api.github.com/users/mvduin/repos",
      "events_url": "https://api.github.com/users/mvduin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mvduin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-08T04:43:06Z",
    "updated_at": "2015-06-08T04:43:06Z",
    "author_association": "NONE",
    "body": "COLUMNS and LINES should never be in your environment!  Bash provides those shell variables for scripting convenience (and backwards compatibility) but they are normally _not_ exported.\n\nNowadays, programs that care about the terminal size will simply query the kernel (TIOCGWINSZ) after installing a SIGWINCH handler to be notified of changes (if they care). However, for historical reasons, if the terminal size is passed via environment variables, ncurses apps use those values instead of querying the kernel. (Try running `COLUMNS=30 nano` for fun).\n\n> IPython registers no handlers for SIGWINCH, so the default process behavior of passing signals to children should be happening\n\nSignals are never \"passed down to children\", nor otherwise dependent on handlers installed by the parent (except that SIG_IGN is inherited by child processes). SIGWINCH is delivered to all processes belonging to the foreground process group of the controlling terminal (same as for the SIGINT produced by ctrl-c, etc).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/109869039",
    "html_url": "https://github.com/ipython/ipython/issues/8469#issuecomment-109869039",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8469",
    "id": 109869039,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwOTg2OTAzOQ==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-08T05:37:13Z",
    "updated_at": "2015-06-08T05:37:13Z",
    "author_association": "MEMBER",
    "body": "> COLUMNS and LINES should never be in your environment\n\nI'm not sure what is setting them. It does not appear to be IPython. I guess the shell is setting them itself?\n\n> Signals are never \"passed down to children\"\n\nForgive my imprecise language. The fact remains that the process is receiving SIGNWICH without any interference.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/111706852",
    "html_url": "https://github.com/ipython/ipython/issues/8469#issuecomment-111706852",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8469",
    "id": 111706852,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTcwNjg1Mg==",
    "user": {
      "login": "mvduin",
      "id": 2078931,
      "node_id": "MDQ6VXNlcjIwNzg5MzE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2078931?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mvduin",
      "html_url": "https://github.com/mvduin",
      "followers_url": "https://api.github.com/users/mvduin/followers",
      "following_url": "https://api.github.com/users/mvduin/following{/other_user}",
      "gists_url": "https://api.github.com/users/mvduin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mvduin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mvduin/subscriptions",
      "organizations_url": "https://api.github.com/users/mvduin/orgs",
      "repos_url": "https://api.github.com/users/mvduin/repos",
      "events_url": "https://api.github.com/users/mvduin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mvduin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-13T12:44:29Z",
    "updated_at": "2015-06-13T12:44:29Z",
    "author_association": "NONE",
    "body": "> I'm not sure what is setting them. It does not appear to be IPython. I guess the shell is setting them itself?\n\nThe shell will set/update the variables, but not export them by default. That will most likely be due to some crufty bashrc/profile content left over from Ye Olden Days. The line you need to hunt for is probably\n\n``` sh\neval `resize`\n```\n\nsince this was the customary way to set those environment variables back in the days when terminals did not spontaneously change size (except perhaps due to defenestration). If the offending line can't be easily found, a workaround would be to explicitly unexport the variables with\n\n``` sh\nexport -n LINES COLUMNS\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/161486274",
    "html_url": "https://github.com/ipython/ipython/issues/8469#issuecomment-161486274",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8469",
    "id": 161486274,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MTQ4NjI3NA==",
    "user": {
      "login": "awelkie",
      "id": 6946046,
      "node_id": "MDQ6VXNlcjY5NDYwNDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6946046?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/awelkie",
      "html_url": "https://github.com/awelkie",
      "followers_url": "https://api.github.com/users/awelkie/followers",
      "following_url": "https://api.github.com/users/awelkie/following{/other_user}",
      "gists_url": "https://api.github.com/users/awelkie/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/awelkie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/awelkie/subscriptions",
      "organizations_url": "https://api.github.com/users/awelkie/orgs",
      "repos_url": "https://api.github.com/users/awelkie/repos",
      "events_url": "https://api.github.com/users/awelkie/events{/privacy}",
      "received_events_url": "https://api.github.com/users/awelkie/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-03T01:23:49Z",
    "updated_at": "2015-12-03T01:23:49Z",
    "author_association": "NONE",
    "body": "It looks like this is an issue with `readline`. See this bug report for details:\n\nhttps://bugs.python.org/issue23735\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/172260140",
    "html_url": "https://github.com/ipython/ipython/issues/8469#issuecomment-172260140",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8469",
    "id": 172260140,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MjI2MDE0MA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-16T21:45:18Z",
    "updated_at": "2016-01-16T21:45:18Z",
    "author_association": "MEMBER",
    "body": "Closing for now as I don't think there's anything to be fixed in IPython. It will still be possible to add comments if anyone wants to investigate causes and solutions further.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/175530082",
    "html_url": "https://github.com/ipython/ipython/issues/8469#issuecomment-175530082",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8469",
    "id": 175530082,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NTUzMDA4Mg==",
    "user": {
      "login": "brbsix",
      "id": 6672131,
      "node_id": "MDQ6VXNlcjY2NzIxMzE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6672131?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brbsix",
      "html_url": "https://github.com/brbsix",
      "followers_url": "https://api.github.com/users/brbsix/followers",
      "following_url": "https://api.github.com/users/brbsix/following{/other_user}",
      "gists_url": "https://api.github.com/users/brbsix/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brbsix/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brbsix/subscriptions",
      "organizations_url": "https://api.github.com/users/brbsix/orgs",
      "repos_url": "https://api.github.com/users/brbsix/repos",
      "events_url": "https://api.github.com/users/brbsix/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brbsix/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-27T10:19:05Z",
    "updated_at": "2016-01-27T10:19:05Z",
    "author_association": "NONE",
    "body": "I've been dealing with this as well. The following fixed it:\n\n```\neasy_install-2.7 --install-dir ~/.local/lib/python2.7/site-packages/ readline\neasy_install-3.4 --install-dir ~/.local/lib/python3.4/site-packages/ readline\n```\n\nNote I am on a Debian derivative. For whatever reason (I didn't look into it), installation via `pip` did not work, but `easy_install` did. This fixed the issue in both Python and IPython shells. Here is a link to the [readline](https://pypi.python.org/pypi/readline) package. It is deprecated v6.4.2.1, which AFAIK is the last working version before major changes were made.\n"
  }
]
