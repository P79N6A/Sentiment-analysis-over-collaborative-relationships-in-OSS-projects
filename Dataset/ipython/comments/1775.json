[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5972712",
    "html_url": "https://github.com/ipython/ipython/issues/1775#issuecomment-5972712",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1775",
    "id": 5972712,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzI3MTI=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-28T21:57:15Z",
    "updated_at": "2012-05-28T21:57:15Z",
    "author_association": "MEMBER",
    "body": "I don't think that's python-dependent but rather nose-dependent.  It does provide for cleaner error messages, my suggestion would be to monkeypatch nose if we find that it's an older version of nose without it.  The code is extremely simple:\n\n```\n    def assertIn(self, member, container, msg=None):\n        \"\"\"Just like self.assertTrue(a in b), but with a nicer default message.\"\"\"\n        if member not in container:\n            standardMsg = '%s not found in %s' % (safe_repr(member),\n                                                  safe_repr(container))\n            self.fail(self._formatMessage(msg, standardMsg))\n```\n\nThis is very easy but I've made it a blocker b/c we can't ship ipython with a test suite that can't be run in 2.6.  Thanks for the catch!  I can't work on it today, so if you want to have a go at it, great.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5973749",
    "html_url": "https://github.com/ipython/ipython/issues/1775#issuecomment-5973749",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1775",
    "id": 5973749,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzM3NDk=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-29T00:11:40Z",
    "updated_at": "2012-05-29T00:11:40Z",
    "author_association": "MEMBER",
    "body": "I vaguely remember that nose just borrows the methods from `unittest.TestCase`.  The version of nose we're using on ShiningPanda shouldn't be out of date, and we're only seeing those failures on 2.6.\n\nI'm hitting the sack now, but I might pick it up at some point tomorrow.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5974100",
    "html_url": "https://github.com/ipython/ipython/issues/1775#issuecomment-5974100",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1775",
    "id": 5974100,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzQxMDA=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-29T01:02:48Z",
    "updated_at": "2012-05-29T01:02:48Z",
    "author_association": "MEMBER",
    "body": "Yes, you're right, I'd forgotten.  Nose does forward those methods from unittest.  Still, it's so little code that we can just monkeypatch so we have the cleaner api, and we'll remove the monkeypatch when we drop 2.6.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6017000",
    "html_url": "https://github.com/ipython/ipython/issues/1775#issuecomment-6017000",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1775",
    "id": 6017000,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMTcwMDA=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-30T18:11:16Z",
    "updated_at": "2012-05-30T18:11:16Z",
    "author_association": "MEMBER",
    "body": "If we are going to monkeypatch this one in, is there a reason to not include the new-in-2.7 methods wholesale?  They are incredibly useful.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6017973",
    "html_url": "https://github.com/ipython/ipython/issues/1775#issuecomment-6017973",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1775",
    "id": 6017973,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMTc5NzM=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-30T18:50:04Z",
    "updated_at": "2012-05-30T18:50:04Z",
    "author_association": "MEMBER",
    "body": "We could require unittest2 for Python2.6 - it's a backport of all the methods introduce in 2.7. nose doesn't yet automatically use it (https://github.com/nose-devs/nose/issues/25 ), but we could expose the relevant methods separately.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6022658",
    "html_url": "https://github.com/ipython/ipython/issues/1775#issuecomment-6022658",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1775",
    "id": 6022658,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMjI2NTg=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-30T21:54:31Z",
    "updated_at": "2012-05-30T21:54:31Z",
    "author_association": "MEMBER",
    "body": "I hadn't paid attention to the new methods available, but I'm happy to monkeypatch all of them into our `nt` entry point.  \n\nI'm a bit torn about the 2.6 issue: requiring unittest2 makes things easier for us, though it raises the burden on 2.6 testers...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6022781",
    "html_url": "https://github.com/ipython/ipython/issues/1775#issuecomment-6022781",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1775",
    "id": 6022781,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMjI3ODE=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-30T21:59:31Z",
    "updated_at": "2012-05-30T21:59:31Z",
    "author_association": "MEMBER",
    "body": "unittest2 is a pretty trivial pure-Python install, so I'm fine going either way. I think 2.6 is in Legacy Support Mode at this point, so a slightly higher testing burden seems acceptable to me.\n\nSo I would say: monkeypatch if it's reasonably obvious, easy, and clean. Otherwise, require unittest2 on 2.6.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6023986",
    "html_url": "https://github.com/ipython/ipython/issues/1775#issuecomment-6023986",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1775",
    "id": 6023986,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMjM5ODY=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-30T23:00:31Z",
    "updated_at": "2012-05-30T23:00:31Z",
    "author_association": "MEMBER",
    "body": "+1 to @minrk's note above.\n"
  }
]
