[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/50471344",
    "html_url": "https://github.com/ipython/ipython/issues/6229#issuecomment-50471344",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6229",
    "id": 50471344,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNDcxMzQ0",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-29T12:49:12Z",
    "updated_at": "2014-07-29T12:49:12Z",
    "author_association": "MEMBER",
    "body": "That sound mostly good, you can either add it to the wiki or make a PR against IPython documentation.\nWe need to think about that also with the arrival of kernelspec. I'll try to do a few comment inline\n\n> First, write your JavaScript programs. There should be a main JS file. The\n> JavaScript file should generally take the form:\n> \n> ```\n> define( function () {\n>     var load_ipython_extension = function () {\n>         ...\n>     };\n> \n>     return {\n>         load_ipython_extension : load_ipython_extension,\n>     };\n> });\n> ```\n\nI would add that `define()` can take a first argument which is the list of \"dependencies\"\nand then add a link to requirejs doc. \n\n> This function will return a JS object with \"load_ipython_extension\" defined\n> to be a function that is called when loading the extension.\n\nthat _should be called from custom.js_ it will not be called automatically, will it ? \n\n> Name this JS file with a unique name that won't collide with other\n> extensions. For example, use \"jones-feature-name.js\" where \"jones\" is the\n> name of your group, and \"feature-name\" is the name of what the feature you\n> are adding/enhancing.\n\nAnd/or make it in a folder.\n\n> If there is only the single .js file, then you can easily make a download\n> for it.\n> \n> If more than one file is needed for your extension (additional libraries,\n> css, etc) it is advised to make a zip file for easy install. The zip file\n> should have your main JS file in the root.\n> \n> To install the zip or js file, use:\n> \n> ipython install-nbextension URL\n> \n> The files are saved to $(ipython locale)/nbextensions/\n\n`locate`, note locale\n\n> At this point, you can use your extension by interactively loading it in a\n> notebook (regardless of kernel, as long as your kernel supports running\n> javascript); in the native kernel, that is:\n> \n> ```\n> %%javascript\n> IPython.load_extensions(\"jones-feature-name\")\n> ```\n> \n> Your feature is now active, and will be loaded automatically each time you\n> open this notebook if you leave this cell in the notebook. [Is that right?\n> How does it work?]\n\nOnly if notebook is trusted. \nI would suggest showing an example on how to do it in custom.js and how to liten to event \nlike app_loaded or notebook loaded and the differences. \n\n> What if you have an associated CSS file? It is not loaded automatically.\n> \n> Add this to your defined JS object:\n> \n> ```\n>     var load_css = function () {\n>         var link = document.createElement(\"link\");\n>         link.type = \"text/css\";\n>         link.rel = \"stylesheet\";\n>         link.href = require.toUrl(\"/nbextensions/jones-feature-name.css\");\n>         console.log(link);\n>         document.getElementsByTagName(\"head\")[0].appendChild(link);\n>     };\n> ```\n> \n> and call it in load_ipython_extension.\n> \n> Finally, if you want to load your extension automatically (or need to have\n> your script loaded earlier to handle opening functions) then you can add\n> this single line to your $(ipython\n> locale)/profile_XXX/static/custom/custom.js:\n> \n> IPython.load_extensions(\"jones-feature-name\");\n\nYep.\n\n> There are more options (having things execute on notebook open, adding\n> toolbar buttons, menu items), and those are explain here ...\n\nWould be nice to have a common way of \"disabling\" extension. \nEspecially by the fact that now you can have many kernels.\n\nBut it is a good start. \n\nA few links to existing extensions ? \n\n> How does that sound? Did I miss anything?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/50606310",
    "html_url": "https://github.com/ipython/ipython/issues/6229#issuecomment-50606310",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6229",
    "id": 50606310,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNjA2MzEw",
    "user": {
      "login": "dsblank",
      "id": 168568,
      "node_id": "MDQ6VXNlcjE2ODU2OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/168568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsblank",
      "html_url": "https://github.com/dsblank",
      "followers_url": "https://api.github.com/users/dsblank/followers",
      "following_url": "https://api.github.com/users/dsblank/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsblank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsblank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsblank/subscriptions",
      "organizations_url": "https://api.github.com/users/dsblank/orgs",
      "repos_url": "https://api.github.com/users/dsblank/repos",
      "events_url": "https://api.github.com/users/dsblank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsblank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-30T12:12:18Z",
    "updated_at": "2014-07-30T12:12:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the feedback! I'll move to a wiki page first, so that we all can just edit it.\n\n> that should be called from custom.js it will not be called automatically, will it ?\n\nYes, that function is called automatically when you `IPython.load_extensions();`\n\nRegarding automatically running JavaScript when opening a notebook, you say:\n\n> Only if notebook is trusted. \n- What JS gets run when a notebook is trusted?\n- Does it have to be trusted by the current notebook user, or by the author?\n- Are there existing docs on this feature?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/50670991",
    "html_url": "https://github.com/ipython/ipython/issues/6229#issuecomment-50670991",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6229",
    "id": 50670991,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNjcwOTkx",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-30T19:59:00Z",
    "updated_at": "2014-07-30T19:59:00Z",
    "author_association": "MEMBER",
    "body": "> What JS gets run when a notebook is trusted?\n\nJS in the outputs of code cells. Notebook trust has nothing to do with custom.js or extensions, which are always user-configured and thus always trusted.\n\n> Does it have to be trusted by the current notebook user, or by the author?\n\nAlways current user, author has no control over other people's machines.\n\n> Are there existing docs on this feature?\n\nTrusted output is documented [here](http://ipython.org/ipython-doc/dev/notebook/security.html).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/69628612",
    "html_url": "https://github.com/ipython/ipython/issues/6229#issuecomment-69628612",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6229",
    "id": 69628612,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NjI4NjEy",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-12T19:22:38Z",
    "updated_at": "2015-01-12T19:22:38Z",
    "author_association": "MEMBER",
    "body": "I think we have another duplicate of this, but can't find it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/69658448",
    "html_url": "https://github.com/ipython/ipython/issues/6229#issuecomment-69658448",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6229",
    "id": 69658448,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NjU4NDQ4",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-12T22:23:55Z",
    "updated_at": "2015-01-12T22:23:55Z",
    "author_association": "MEMBER",
    "body": "Are you referring to #7392?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/69661276",
    "html_url": "https://github.com/ipython/ipython/issues/6229#issuecomment-69661276",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6229",
    "id": 69661276,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NjYxMjc2",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-12T22:40:17Z",
    "updated_at": "2015-01-12T22:40:17Z",
    "author_association": "MEMBER",
    "body": "Yep that is it, thanks.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/71755011",
    "html_url": "https://github.com/ipython/ipython/issues/6229#issuecomment-71755011",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6229",
    "id": 71755011,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNzU1MDEx",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-27T23:58:12Z",
    "updated_at": "2015-01-27T23:58:12Z",
    "author_association": "MEMBER",
    "body": "_Thinking out loud:_  It's unfortunate that `ipython install-nbextension URL` doesn't have a flag that allows you to automagically add a line to the profile of choice (default if unspecified) to load the installed extension.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/71755179",
    "html_url": "https://github.com/ipython/ipython/issues/6229#issuecomment-71755179",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6229",
    "id": 71755179,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNzU1MTc5",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-27T23:59:39Z",
    "updated_at": "2015-01-27T23:59:39Z",
    "author_association": "MEMBER",
    "body": "Nice out loud thought! Or even just prompt using raw_input...\n\nOn Tue, Jan 27, 2015 at 3:58 PM, Jonathan Frederic <notifications@github.com\n\n> wrote:\n> \n> _Thinking out loud:_ It's unfortunate that ipython install-nbextension URL\n> doesn't have a flag that allows you to automagically add a line to the\n> profile of choice (default if unspecified) to load the installed extension.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/issues/6229#issuecomment-71755011.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\n@ellisonbg on Twitter and GitHub\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/71756081",
    "html_url": "https://github.com/ipython/ipython/issues/6229#issuecomment-71756081",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6229",
    "id": 71756081,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNzU2MDgx",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-28T00:06:45Z",
    "updated_at": "2015-01-28T00:06:45Z",
    "author_association": "MEMBER",
    "body": "My approach to this is to have an install script with my extension that uses IPython's functionality to install and enable it - see cite2c's [install.py](https://github.com/takluyver/cite2c/blob/master/install.py).\n\nI'd be wary of providing too much functionality directly from `install-nbextension` because of the risk that we end up building a package manager in addition to everything else.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/71757225",
    "html_url": "https://github.com/ipython/ipython/issues/6229#issuecomment-71757225",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6229",
    "id": 71757225,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNzU3MjI1",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-28T00:17:11Z",
    "updated_at": "2015-01-28T00:17:11Z",
    "author_association": "MEMBER",
    "body": "@takluyver your solution is nice.  Maybe this yet to be written documentation should mention it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/71757404",
    "html_url": "https://github.com/ipython/ipython/issues/6229#issuecomment-71757404",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6229",
    "id": 71757404,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNzU3NDA0",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-28T00:18:51Z",
    "updated_at": "2015-01-28T00:18:51Z",
    "author_association": "MEMBER",
    "body": "+1 on not inventing another packaging system....pretty easy call on that\none...\n\nOn Tue, Jan 27, 2015 at 4:17 PM, Jonathan Frederic <notifications@github.com\n\n> wrote:\n> \n> @takluyver https://github.com/takluyver your solution is nice. Maybe\n> this yet to be written documentation should mention it.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/issues/6229#issuecomment-71757225.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\n@ellisonbg on Twitter and GitHub\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/71766293",
    "html_url": "https://github.com/ipython/ipython/issues/6229#issuecomment-71766293",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6229",
    "id": 71766293,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNzY2Mjkz",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-28T01:42:04Z",
    "updated_at": "2015-01-28T01:42:04Z",
    "author_association": "MEMBER",
    "body": "Same idea as @takluyver, it probably needs some update but you get the idea: https://github.com/damianavila/live_reveal/blob/master/setup.py\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/316768636",
    "html_url": "https://github.com/ipython/ipython/issues/6229#issuecomment-316768636",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6229",
    "id": 316768636,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjc2ODYzNg==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-20T17:05:58Z",
    "updated_at": "2017-07-20T17:05:58Z",
    "author_association": "MEMBER",
    "body": "Closing as this issue is not in IPython itself and if still problematic and relevant should be opened on the right repository.  This will allow to keep the number of opened issue on the IPython repo under control. \r\n\r\nFeel free to keep commenting or reopen if necessary.\r\n\r\nThanks."
  }
]
