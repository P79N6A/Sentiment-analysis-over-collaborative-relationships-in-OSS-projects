[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/64445347",
    "html_url": "https://github.com/ipython/ipython/issues/7037#issuecomment-64445347",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7037",
    "id": 64445347,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NDQ1MzQ3",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-25T18:15:46Z",
    "updated_at": "2014-11-25T18:15:46Z",
    "author_association": "MEMBER",
    "body": "I don't see what there is for us to fix here. InteractiveShell is, as you've noted, a singleton. The way our singleton architecture works, you should get it by calling `.instance()`, not by instantiating it - this saves fiddling around with either `__new__` or metaclasses. So it's possible to create more than one instance of the singleton, but if you do that, things will break. Everything seems to be working as expected.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/64447157",
    "html_url": "https://github.com/ipython/ipython/issues/7037#issuecomment-64447157",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7037",
    "id": 64447157,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NDQ3MTU3",
    "user": {
      "login": "olaurino",
      "id": 5692321,
      "node_id": "MDQ6VXNlcjU2OTIzMjE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5692321?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/olaurino",
      "html_url": "https://github.com/olaurino",
      "followers_url": "https://api.github.com/users/olaurino/followers",
      "following_url": "https://api.github.com/users/olaurino/following{/other_user}",
      "gists_url": "https://api.github.com/users/olaurino/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/olaurino/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/olaurino/subscriptions",
      "organizations_url": "https://api.github.com/users/olaurino/orgs",
      "repos_url": "https://api.github.com/users/olaurino/repos",
      "events_url": "https://api.github.com/users/olaurino/events{/privacy}",
      "received_events_url": "https://api.github.com/users/olaurino/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-25T18:27:35Z",
    "updated_at": "2014-11-25T18:29:48Z",
    "author_association": "NONE",
    "body": "I just think this is confusing, especially if it used to work in earlier versions.\n\nI am not arguing for or against any implementation or design choices (e.g. metaclasses or the borg pattern). However, I find it confusing that I am allowed to instantiate singleton classes in two different ways with different (and not obvious, as in the case of tab completion) results. As it is confusing to find out that a \"singleton\" can be instantiated more than once, but its integrity is not guaranteed.\n\nMaybe raising an exception, or at least issuing a warning, would help?\n\nThanks anyway for looking into this.\n"
  }
]
