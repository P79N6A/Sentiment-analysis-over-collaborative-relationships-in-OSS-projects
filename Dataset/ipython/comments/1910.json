[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6253309",
    "html_url": "https://github.com/ipython/ipython/pull/1910#issuecomment-6253309",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1910",
    "id": 6253309,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNTMzMDk=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-11T19:17:58Z",
    "updated_at": "2012-06-11T19:17:58Z",
    "author_association": "MEMBER",
    "body": "Most definitely yes!!  This has been in the back of my mind for a long time, and would love to see a cleaner solution.  I'm going to tag this as 0.14 material right away, because it's a complex and delicate piece of code that I don't want to merge days before a release, but I'd love to see this go in early in the 0.14 cycle so we have plenty of time to refine it with usage.  Many thanks!\n\nIn another project I've worked on, the [nitime library](https://github.com/nipy/nitime), we make use of auto-setting properties extensively, and this might also give us a better way to provide introspection for those; pinging @arokem and @ivanov so they are aware of this work...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6253437",
    "html_url": "https://github.com/ipython/ipython/pull/1910#issuecomment-6253437",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1910",
    "id": 6253437,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNTM0Mzc=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-11T19:23:33Z",
    "updated_at": "2012-06-11T19:23:33Z",
    "author_association": "MEMBER",
    "body": "Will this work with another level of attribute access? E.g. `a.b.c?` (if `b` is a property)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6265721",
    "html_url": "https://github.com/ipython/ipython/pull/1910#issuecomment-6265721",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1910",
    "id": 6265721,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNjU3MjE=",
    "user": {
      "login": "int3",
      "id": 228496,
      "node_id": "MDQ6VXNlcjIyODQ5Ng==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/228496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/int3",
      "html_url": "https://github.com/int3",
      "followers_url": "https://api.github.com/users/int3/followers",
      "following_url": "https://api.github.com/users/int3/following{/other_user}",
      "gists_url": "https://api.github.com/users/int3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/int3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/int3/subscriptions",
      "organizations_url": "https://api.github.com/users/int3/orgs",
      "repos_url": "https://api.github.com/users/int3/repos",
      "events_url": "https://api.github.com/users/int3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/int3/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-12T08:47:25Z",
    "updated_at": "2012-06-12T08:47:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Most definitely yes!! This has been in the back of my mind for a long time, and would love to see a cleaner solution. I'm going to tag this as 0.14 material right away, because it's a complex and delicate piece of code that I don't want to merge days before a release, but I'd love to see this go in early in the 0.14 cycle so we have plenty of time to refine it with usage. Many thanks!\n\nGlad you like it :) I'll get to work on the tests, then. Totally agree on it being 'complex and delicate'.\n\n> Will this work with another level of attribute access? E.g. a.b.c? (if b is a property)\n\nYup, the noninvoking get is only done on the last property (`c` in this case). I think it is safe to assume that the user definitely wants to access / invoke the earlier attributes.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6988834",
    "html_url": "https://github.com/ipython/ipython/pull/1910#issuecomment-6988834",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1910",
    "id": 6988834,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5ODg4MzQ=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-15T03:50:04Z",
    "updated_at": "2012-07-15T03:50:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "Cool this is something I've been thinking about too!  Should this patch also handle properties?  I think that should be straightforward, just given `a.b.c` go check if `a.b.__class__.c.fget.__doc__` is meaningful.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7480880",
    "html_url": "https://github.com/ipython/ipython/pull/1910#issuecomment-7480880",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1910",
    "id": 7480880,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0ODA4ODA=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-03T11:02:44Z",
    "updated_at": "2012-08-03T11:02:44Z",
    "author_association": "MEMBER",
    "body": "I agree with @bfroehle that we'll want to handle properties, as that's probably the most common case where attribute access invokes something.\n\nWe'll also need some tests for this feature - look at `IPython.core.tests.test_oinspect` and `IPython.core.tests.test_magic` for examples.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8016368",
    "html_url": "https://github.com/ipython/ipython/pull/1910#issuecomment-8016368",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1910",
    "id": 8016368,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMTYzNjg=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-24T22:13:35Z",
    "updated_at": "2012-08-24T22:13:35Z",
    "author_association": "MEMBER",
    "body": "Trying to revive this.\nDo we keep it this way and implement the rest in another PR, or try to add some commits to this one ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/9012300",
    "html_url": "https://github.com/ipython/ipython/pull/1910#issuecomment-9012300",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1910",
    "id": 9012300,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwMTIzMDA=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-30T10:02:10Z",
    "updated_at": "2012-09-30T10:02:46Z",
    "author_association": "MEMBER",
    "body": "Hi, \nThis PR is without activities for 1 month now, \nI'm going to close it and open an issue to reference it. \nThis does not mean than we refuse the code that is here, but that we try to keep the number of opened Pull request as low as possible to have better bird view of active code.\n\nFell free to reopen this PR whenever you want or contact us if you have any questions.\n\nThanks for contributing.\n\n## \n\nAs a side note, as the time of closing this PR it does not merge cleanly.\n"
  }
]
