[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/341802520",
    "html_url": "https://github.com/ipython/ipython/issues/10884#issuecomment-341802520",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10884",
    "id": 341802520,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTgwMjUyMA==",
    "user": {
      "login": "scubahub",
      "id": 14059878,
      "node_id": "MDQ6VXNlcjE0MDU5ODc4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/14059878?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/scubahub",
      "html_url": "https://github.com/scubahub",
      "followers_url": "https://api.github.com/users/scubahub/followers",
      "following_url": "https://api.github.com/users/scubahub/following{/other_user}",
      "gists_url": "https://api.github.com/users/scubahub/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/scubahub/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scubahub/subscriptions",
      "organizations_url": "https://api.github.com/users/scubahub/orgs",
      "repos_url": "https://api.github.com/users/scubahub/repos",
      "events_url": "https://api.github.com/users/scubahub/events{/privacy}",
      "received_events_url": "https://api.github.com/users/scubahub/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-03T19:23:37Z",
    "updated_at": "2017-11-03T19:23:37Z",
    "author_association": "NONE",
    "body": "Same issue in classic notebook."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/342299608",
    "html_url": "https://github.com/ipython/ipython/issues/10884#issuecomment-342299608",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10884",
    "id": 342299608,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MjI5OTYwOA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-06T21:51:47Z",
    "updated_at": "2017-11-06T21:51:47Z",
    "author_association": "MEMBER",
    "body": "Thanks for the report, and yes this is the right place to report execution issue as this will have the same effect on pure IPython repl.\r\n\r\nI see why this would be confusing, but `%run` is not `import`;  from run docstring:\r\n\r\n```\r\n        Parameters after the filename are passed as command-line arguments to\r\n        the program (put in sys.argv). Then, control returns to IPython's\r\n        prompt.\r\n\r\n        ...\r\n\r\n        The file is executed in a namespace initially consisting only of\r\n        ``__name__=='__main__'`` and sys.argv constructed as indicated. It thus\r\n        sees its environment as if it were being run as a stand-alone program\r\n        (except for sharing global objects such as previously imported\r\n        modules). But after execution, the IPython interactive namespace gets\r\n        updated with all variables defined in the program (except for __name__\r\n        and sys.argv). This allows for very convenient loading of code for\r\n        interactive work, while giving each program a 'clean sheet' to run in.\r\n```\r\n\r\nSo the behavior appear to be consistent with the documentation and what \"%run\" does (basically run everything as if I had typed it here).\r\n\r\nThe logic in here is already quite complicated and relied upon by many; so I'm unsure we want to change that. My _guess_ is that you're trying to import notebook; for that I would look at https://github.com/ipython/ipynb which is attempting to do that (with it's own complications).\r\n\r\nDoes that make some sens ?"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/342574595",
    "html_url": "https://github.com/ipython/ipython/issues/10884#issuecomment-342574595",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10884",
    "id": 342574595,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MjU3NDU5NQ==",
    "user": {
      "login": "scubahub",
      "id": 14059878,
      "node_id": "MDQ6VXNlcjE0MDU5ODc4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/14059878?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/scubahub",
      "html_url": "https://github.com/scubahub",
      "followers_url": "https://api.github.com/users/scubahub/followers",
      "following_url": "https://api.github.com/users/scubahub/following{/other_user}",
      "gists_url": "https://api.github.com/users/scubahub/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/scubahub/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scubahub/subscriptions",
      "organizations_url": "https://api.github.com/users/scubahub/orgs",
      "repos_url": "https://api.github.com/users/scubahub/repos",
      "events_url": "https://api.github.com/users/scubahub/events{/privacy}",
      "received_events_url": "https://api.github.com/users/scubahub/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-07T18:21:12Z",
    "updated_at": "2017-11-07T18:21:12Z",
    "author_association": "NONE",
    "body": "It does make sense, but I think it greatly reduces the useability of %run and using notebooks as a better way of documenting python code."
  }
]
