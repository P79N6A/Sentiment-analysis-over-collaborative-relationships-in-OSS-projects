[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1789171",
    "html_url": "https://github.com/ipython/ipython/issues/695#issuecomment-1789171",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/695",
    "id": 1789171,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3ODkxNzE=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-08-12T06:19:26Z",
    "updated_at": "2011-08-12T06:19:26Z",
    "author_association": "MEMBER",
    "body": "It should probably also be an option to select a less verbose crash-handler, that doesn't print massive amounts of information, even when the crashes are real.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2424827",
    "html_url": "https://github.com/ipython/ipython/issues/695#issuecomment-2424827",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/695",
    "id": 2424827,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjQ4Mjc=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-17T04:03:13Z",
    "updated_at": "2011-10-17T04:03:13Z",
    "author_association": "MEMBER",
    "body": "I see two ways to address the obvious issue above of bad user config causing crashes.\n1. _Never_ crash on a TraitError.  This is more aggressive protection from TraitErrors causing a crash report, and could potentially prevent the massive crash report if there really is an IPython bug that manifests as a TraitError.\n2. explicitly catch TraitErrors during initialization. This requires a lot more code fiddling, adding try/except blocks (either via decorators or context managers) to every initialize (or init_foo) method.\n"
  }
]
