[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61595152",
    "html_url": "https://github.com/ipython/ipython/issues/6849#issuecomment-61595152",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6849",
    "id": 61595152,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNTk1MTUy",
    "user": {
      "login": "KesterTong",
      "id": 5741341,
      "node_id": "MDQ6VXNlcjU3NDEzNDE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5741341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/KesterTong",
      "html_url": "https://github.com/KesterTong",
      "followers_url": "https://api.github.com/users/KesterTong/followers",
      "following_url": "https://api.github.com/users/KesterTong/following{/other_user}",
      "gists_url": "https://api.github.com/users/KesterTong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/KesterTong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KesterTong/subscriptions",
      "organizations_url": "https://api.github.com/users/KesterTong/orgs",
      "repos_url": "https://api.github.com/users/KesterTong/repos",
      "events_url": "https://api.github.com/users/KesterTong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/KesterTong/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-04T05:23:49Z",
    "updated_at": "2014-11-04T05:23:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for looping me in.  I think 2 is the best option also.  Controlling\na different window with the same origin is a standard thing to do, and much\nmore common than synchronous requests.\nOn Nov 3, 2014 9:20 PM, \"Thomas Kluyver\" notifications@github.com wrote:\n\n> Ping @Carreau https://github.com/Carreau and @KesterTong\n> https://github.com/KesterTong about this.\n> \n> Because of pop-up blockers, creating a new thing (notebook, terminal) and\n> then opening a new page for that thing is awkward: creating the thing with\n> a standard AJAX request and opening the page on success fails, because we\n> can only open a window in response to a user action, and the async-callback\n> doesn't count.\n> \n> There are a few possible ways round this:\n> 1. Use a synchronous request by setting async: false in the AJAX\n>    parameters. This is what we currently do for notebooks, but synchronous\n>    requests are frowned upon, since they can block the browser. It also means\n>    the contents API needs an ugly way to pass this extra parameter in, and the\n>    way it's currently implemented ('extra_settings') definitely smells of\n>    jQuery ajax.\n> 2. Open the window immediately, keep a reference to it, and set its\n>    URL later. I've just found a suggestion that this is possible. According to\n>    Mozilla docs, the new window can be controlled by the original so long as\n>    they fall under the same origin (which ours do). If creation fails for some\n>    reason, the user will presumably see a flash of a new tab before we close\n>    it on error, but that's a fairly pathological case anyway.\n> 3. Make the button submit a form with _target='blank' to make a POST\n>    request in a new page. The POST request would redirect to the correct URL\n>    once the resource is created. This looked appealing until we thought about\n>    Google Drive - it would be possible for the POST request to respond with JS\n>    that created the new notebook and then navigated to it, but it's not\n>    exactly elegant.\n> 4. Open a page for the user that GETs a special 'new' URL, which\n>    creates the thing and redirects to it. This is something of an abuse of\n>    HTML verbs. It apparently causes problems with browsers that prefetch\n>    links, but it's possible to check HTTP headers\n>    http://webmasters.stackexchange.com/questions/33415/is-it-possible-to-stop-chrome-and-other-browsers-from-pre-fetching-rendering-my\n>    to block that.\n> \n> I'm currently leaning towards 2, which I didn't know about when I started\n> writing this issue.\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/issues/6849.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61684756",
    "html_url": "https://github.com/ipython/ipython/issues/6849#issuecomment-61684756",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6849",
    "id": 61684756,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNjg0NzU2",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-04T17:59:37Z",
    "updated_at": "2014-11-04T17:59:37Z",
    "author_association": "MEMBER",
    "body": "I've tried this out with terminals in #6854.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61697960",
    "html_url": "https://github.com/ipython/ipython/issues/6849#issuecomment-61697960",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6849",
    "id": 61697960,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNjk3OTYw",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-04T19:21:36Z",
    "updated_at": "2014-11-04T19:21:36Z",
    "author_association": "MEMBER",
    "body": "And for notebooks in #6855.\n"
  }
]
