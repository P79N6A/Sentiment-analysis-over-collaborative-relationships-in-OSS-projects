[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8166392",
    "html_url": "https://github.com/ipython/ipython/pull/2363#issuecomment-8166392",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2363",
    "id": 8166392,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxNjYzOTI=",
    "user": {
      "login": "travisbot",
      "id": 1516820,
      "node_id": "MDQ6VXNlcjE1MTY4MjA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1516820?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/travisbot",
      "html_url": "https://github.com/travisbot",
      "followers_url": "https://api.github.com/users/travisbot/followers",
      "following_url": "https://api.github.com/users/travisbot/following{/other_user}",
      "gists_url": "https://api.github.com/users/travisbot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/travisbot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/travisbot/subscriptions",
      "organizations_url": "https://api.github.com/users/travisbot/orgs",
      "repos_url": "https://api.github.com/users/travisbot/repos",
      "events_url": "https://api.github.com/users/travisbot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/travisbot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-30T16:59:51Z",
    "updated_at": "2012-08-30T16:59:51Z",
    "author_association": "NONE",
    "body": "This pull request [fails](http://travis-ci.org/ipython/ipython/builds/2285389) (merged 8ff5f907 into 3e7df85b).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8182300",
    "html_url": "https://github.com/ipython/ipython/pull/2363#issuecomment-8182300",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2363",
    "id": 8182300,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxODIzMDA=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-31T04:20:10Z",
    "updated_at": "2012-08-31T04:20:10Z",
    "author_association": "MEMBER",
    "body": "Thanks for working on this!  I am still +1 on moving to jinja2 but haven't had the chance to review the code yet.  One thing to keep in mind is that we are eventually going to move to a model where each page or web service in the web app has its own subdirectories with its templates, js, CSS and handlers.  that is part of the reason I wanted to move to ninja is that it makes that easier.  But that will probably be in a later PR.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8215125",
    "html_url": "https://github.com/ipython/ipython/pull/2363#issuecomment-8215125",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2363",
    "id": 8215125,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyMTUxMjU=",
    "user": {
      "login": "travisbot",
      "id": 1516820,
      "node_id": "MDQ6VXNlcjE1MTY4MjA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1516820?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/travisbot",
      "html_url": "https://github.com/travisbot",
      "followers_url": "https://api.github.com/users/travisbot/followers",
      "following_url": "https://api.github.com/users/travisbot/following{/other_user}",
      "gists_url": "https://api.github.com/users/travisbot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/travisbot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/travisbot/subscriptions",
      "organizations_url": "https://api.github.com/users/travisbot/orgs",
      "repos_url": "https://api.github.com/users/travisbot/repos",
      "events_url": "https://api.github.com/users/travisbot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/travisbot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-01T18:02:12Z",
    "updated_at": "2012-09-01T18:02:12Z",
    "author_association": "NONE",
    "body": "This pull request [passes](http://travis-ci.org/ipython/ipython/builds/2304996) (merged 8ff5f907 into 3e7df85b).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8215162",
    "html_url": "https://github.com/ipython/ipython/pull/2363#issuecomment-8215162",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2363",
    "id": 8215162,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyMTUxNjI=",
    "user": {
      "login": "crbates",
      "id": 1195249,
      "node_id": "MDQ6VXNlcjExOTUyNDk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1195249?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/crbates",
      "html_url": "https://github.com/crbates",
      "followers_url": "https://api.github.com/users/crbates/followers",
      "following_url": "https://api.github.com/users/crbates/following{/other_user}",
      "gists_url": "https://api.github.com/users/crbates/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/crbates/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/crbates/subscriptions",
      "organizations_url": "https://api.github.com/users/crbates/orgs",
      "repos_url": "https://api.github.com/users/crbates/repos",
      "events_url": "https://api.github.com/users/crbates/events{/privacy}",
      "received_events_url": "https://api.github.com/users/crbates/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-01T18:06:25Z",
    "updated_at": "2012-09-01T18:06:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "Whoops still learning github. I tried re-arranging folders, but I usually ended up with something that seemed less organized than when I started and had lots of duplicates. I'm still figuring out the internals of the tornado/ipython/javascript interplay and how to best organize all that with jinja2. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8276727",
    "html_url": "https://github.com/ipython/ipython/pull/2363#issuecomment-8276727",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2363",
    "id": 8276727,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyNzY3Mjc=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-04T20:04:23Z",
    "updated_at": "2012-09-04T20:04:23Z",
    "author_association": "MEMBER",
    "body": "Let's save the folder rearranging to a later PR.\n\nOn Sat, Sep 1, 2012 at 11:06 AM, Cameron Bates notifications@github.comwrote:\n\n> Whoops still learning github. I tried re-arranging folders, but I usually\n> ended up with something that seemed less organized than when I started and\n> had lots of duplicates. I'm still figuring out the internals of the\n> tornado/ipython/javascript interplay and how to best organize all that with\n> jinja2.\n> \n> â€”\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/2363#issuecomment-8215162.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8387036",
    "html_url": "https://github.com/ipython/ipython/pull/2363#issuecomment-8387036",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2363",
    "id": 8387036,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzODcwMzY=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-08T12:20:29Z",
    "updated_at": "2012-09-08T12:20:29Z",
    "author_association": "MEMBER",
    "body": "I'll still wait for @ellisonbg  full review, but it's ok for me. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8868639",
    "html_url": "https://github.com/ipython/ipython/pull/2363#issuecomment-8868639",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2363",
    "id": 8868639,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg4Njg2Mzk=",
    "user": {
      "login": "crbates",
      "id": 1195249,
      "node_id": "MDQ6VXNlcjExOTUyNDk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1195249?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/crbates",
      "html_url": "https://github.com/crbates",
      "followers_url": "https://api.github.com/users/crbates/followers",
      "following_url": "https://api.github.com/users/crbates/following{/other_user}",
      "gists_url": "https://api.github.com/users/crbates/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/crbates/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/crbates/subscriptions",
      "organizations_url": "https://api.github.com/users/crbates/orgs",
      "repos_url": "https://api.github.com/users/crbates/repos",
      "events_url": "https://api.github.com/users/crbates/events{/privacy}",
      "received_events_url": "https://api.github.com/users/crbates/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-25T20:18:52Z",
    "updated_at": "2012-09-25T20:18:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ellisonbg I have another commit to check the notebook metadata for an alternative notebook.html location. Should this be it's own PR?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8869277",
    "html_url": "https://github.com/ipython/ipython/pull/2363#issuecomment-8869277",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2363",
    "id": 8869277,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg4NjkyNzc=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-25T20:37:52Z",
    "updated_at": "2012-09-25T20:37:52Z",
    "author_association": "MEMBER",
    "body": "Can you describe a bit more about what you mean?\n\nOn Tue, Sep 25, 2012 at 1:18 PM, Cameron Bates notifications@github.comwrote:\n\n> @ellisonbg https://github.com/ellisonbg I have another commit to check\n> the notebook metadata for an alternative notebook.html location. Should\n> this be it's own PR?\n> \n> â€”\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/2363#issuecomment-8868639.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8869863",
    "html_url": "https://github.com/ipython/ipython/pull/2363#issuecomment-8869863",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2363",
    "id": 8869863,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg4Njk4NjM=",
    "user": {
      "login": "crbates",
      "id": 1195249,
      "node_id": "MDQ6VXNlcjExOTUyNDk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1195249?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/crbates",
      "html_url": "https://github.com/crbates",
      "followers_url": "https://api.github.com/users/crbates/followers",
      "following_url": "https://api.github.com/users/crbates/following{/other_user}",
      "gists_url": "https://api.github.com/users/crbates/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/crbates/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/crbates/subscriptions",
      "organizations_url": "https://api.github.com/users/crbates/orgs",
      "repos_url": "https://api.github.com/users/crbates/repos",
      "events_url": "https://api.github.com/users/crbates/events{/privacy}",
      "received_events_url": "https://api.github.com/users/crbates/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-25T20:53:51Z",
    "updated_at": "2012-09-25T20:53:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "The commit is at: c05ad05b676fa95cb254c935c84817c59954a0ad. It checks for the template metadata object in a notebook when loaded and render the notebook using notebook.html in the provided absolute directory.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8874122",
    "html_url": "https://github.com/ipython/ipython/pull/2363#issuecomment-8874122",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2363",
    "id": 8874122,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg4NzQxMjI=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-25T23:35:25Z",
    "updated_at": "2012-09-25T23:35:25Z",
    "author_association": "MEMBER",
    "body": "Cameron,\n\nHi, on had a quick look at this and, unless I don't understand what this is\ndoing, I think we need to steer clear of tightly coupling the notebook\nformat to the notebook server details.  Consider the following:\n- Someone writes a completely different notebook server or maybe even a\n  native app.  This other notebook server/native app would have no idea what\n  to do with this metadata attribute and the notebook would behave the same\n  for those users.\n- We rewrite the internals of the notebook server (this is actually going\n  to happen) and completely break the model of what you are doing, so that\n  everyone who has notebooks with this metadata attribute have broken\n  notebooks.\n- The Ruby folks decid they love the notebook format and start to use it in\n  ways we never intended, completely decoupled from our notebook server.\n\nAlso, from a philosophical perspective, we need to keep a very long term,\nbig picture for the notebook format, including various metadata attributes.\n\nBut the bigger question is this: why do you want this capability?  Maybe\nthen we can see if there is a way of supporting it with less coupling\nbetween the format and server.\n\nOne final note about design ideas for the notebook.  We want to _minimize_\nthe configurability/customizability of the notebook (it commits us to\nbrittle implementation details) and maximize the reusability of it (create\nmodular building block that other people can assemble in cool new ways).\n From this perspective, I feel this commit is going in the wrong direction.\n\nNote that moving to jinja2 will help us build a more modular code base -\nit's just the first step though.\n\nOn Tue, Sep 25, 2012 at 1:53 PM, Cameron Bates notifications@github.comwrote:\n\n> The commit is at: c05ad05https://github.com/ipython/ipython/commit/c05ad05b676fa95cb254c935c84817c59954a0ad.\n> It checks for the template metadata object in a notebook when loaded and\n> render the notebook using notebook.html in the provided absolute directory.\n> \n> â€”\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/2363#issuecomment-8869863.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8879875",
    "html_url": "https://github.com/ipython/ipython/pull/2363#issuecomment-8879875",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2363",
    "id": 8879875,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg4Nzk4NzU=",
    "user": {
      "login": "crbates",
      "id": 1195249,
      "node_id": "MDQ6VXNlcjExOTUyNDk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1195249?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/crbates",
      "html_url": "https://github.com/crbates",
      "followers_url": "https://api.github.com/users/crbates/followers",
      "following_url": "https://api.github.com/users/crbates/following{/other_user}",
      "gists_url": "https://api.github.com/users/crbates/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/crbates/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/crbates/subscriptions",
      "organizations_url": "https://api.github.com/users/crbates/orgs",
      "repos_url": "https://api.github.com/users/crbates/repos",
      "events_url": "https://api.github.com/users/crbates/events{/privacy}",
      "received_events_url": "https://api.github.com/users/crbates/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-26T06:07:30Z",
    "updated_at": "2012-09-26T06:07:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "Good to know. I was just exploring this as an alternative to putting html + javascript in a markdown cell because I am having issues when I accidentally render the markdown cell multiple times. I am running into this when adding javascript timers to markdown cells because there is no way to know the cell is being re-rendered and the old javascript continues to run. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8901645",
    "html_url": "https://github.com/ipython/ipython/pull/2363#issuecomment-8901645",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2363",
    "id": 8901645,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg5MDE2NDU=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-26T19:15:32Z",
    "updated_at": "2012-09-26T19:15:32Z",
    "author_association": "MEMBER",
    "body": "We are likely going to disallow JavaScript in markdown cells, so I would\nmove away from doing that.  It turns out there are too many security issues\nwith it.\n\nOn Tue, Sep 25, 2012 at 11:07 PM, Cameron Bates notifications@github.comwrote:\n\n> Good to know. I was just exploring this as an alternative to putting html\n> - javascript in a markdown cell because I am having issues when I\n>   accidentally render the markdown cell multiple times. I am running into\n>   this when adding javascript timers to markdown cells because there is no\n>   way to know the cell is being re-rendered and the old javascript continues\n>   to run.\n> \n> â€”\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/2363#issuecomment-8879875.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8902143",
    "html_url": "https://github.com/ipython/ipython/pull/2363#issuecomment-8902143",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2363",
    "id": 8902143,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg5MDIxNDM=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-26T19:30:04Z",
    "updated_at": "2012-09-26T19:30:04Z",
    "author_association": "MEMBER",
    "body": "Le 26 sept. 2012 Ã  21:15, Brian E. Granger a Ã©crit :\n\n> We are likely going to disallow JavaScript in markdown cells, so I would \n> move away from doing that. It turns out there are too many security issues \n> with it. \n\nI don't think disabling is neither good solution, nor a solution at all. \nThe problem is **not** in the **cells** it is in the **output area** that render what is given to it.\ndisallowing Javascript won't prevent forged notebook with script in **output** when loading.\n\nThe only reliable way would be :\n1 - To strip js from **all** output ( markdown and codecell)\n2 - To sandbox each cell with html5-iframe.\n\nThere is no way we wish to go back to 1. or display Js is useless. \n\nWith 2 js would be restricted in it's div with no way of leaking outside. The timeout would be killed on MD regeneration. \nwhen using display_javascript, we could allow a specific flag, explicitly set that allow the iframe to access parent namespace.\n\nI don't know if it is possible, but we could even listen on wether the iframe is trying to access parent window, and make it red  with a\nwarning : \n\"This iframe is trying to access global name space :\n\n## allow it ? [yes], [No], [What are the risks].\"\n\nMatthias\n\n> On Tue, Sep 25, 2012 at 11:07 PM, Cameron Bates notifications@github.comwrote: \n> \n> > Good to know. I was just exploring this as an alternative to putting html \n> > - javascript in a markdown cell because I am having issues when I \n> >   accidentally render the markdown cell multiple times. I am running into \n> >   this when adding javascript timers to markdown cells because there is no \n> >   way to know the cell is being re-rendered and the old javascript continues \n> >   to run. \n> > \n> > â€” \n> > Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/2363#issuecomment-8879875. \n> \n> ## \n> \n> Brian E. Granger \n> Cal Poly State University, San Luis Obispo \n> bgranger@calpoly.edu and ellisonbg@gmail.com\n> â€”\n> Reply to this email directly or view it on GitHub.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8904173",
    "html_url": "https://github.com/ipython/ipython/pull/2363#issuecomment-8904173",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2363",
    "id": 8904173,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg5MDQxNzM=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-26T20:31:51Z",
    "updated_at": "2012-09-26T20:31:51Z",
    "author_association": "MEMBER",
    "body": "Matthias,\n\nThere are multiple layers of vulnerability here:\n\na) A user loading a notebook (but not running anything) and _at load_\nmalicious JavaScript code running.\nb) A user running Python code that sends malicious HTML/JS output that is\nthen run on the page.\n\nAs far as (a) is concerned, it should never ever happen.  The problem with\n(a) is that this vulnerability happens at page load literally before the\nuser even get's to see the code that is about to be run.  As far as I know,\nthe only way that (a) can happen is with <script> tags in markdown cells.\n If we clean <script> tags from markdown cells we have solved this problem.\n\nSolving (b) is both easier and more difficult to solve:\n\nIt is easier because <B) can only happen as a result of a direct user\naction and that action is precisely the user's request to run arbitrary\ncode.  The bottom line is that when you run code, in the notebook or\nelsewhere, you better trust it 100% or you shouldn't run it.  Even if we\ncompletely disabled dynamic JS in notebooks this will always be the case =\n\"don't run notebooks you don't trust 100%\".\n\nBut, the fact the Js code can be dynamically generated and run in the\nbrowser does introduce additional vulnerabilties.  The main one is that Js\ncode gets run in an authenticated context - the malicious Js code can not\nonly mess up the server it can also do things on the net on behalf of the\nuser.\n\n> The only reliable way would be :\n> 1 - To strip js from **all** output ( markdown and codecell)\n> 2 - To sandbox each cell with html5-iframe.\n> \n> There is no way we wish to go back to 1. or display Js is useless.\n> \n> Yep.\n> \n> With 2 js would be restricted in it's div with no way of leaking outside.\n> The timeout would be killed on MD regeneration.\n> when using display_javascript, we could allow a specific flag, explicitly\n> set that allow the iframe to access parent namespace.\n> \n> I don't know enough about the execution context of iframes yet.  Could the\n> iframe's Javascript still access the global IPython Js objects, such as\n> Notebook and Kernel?  In order to support JS code that makes calls back\n> into the kernel, it would need to.  My feeling is that if the sandboxing is\n> solid enough to prevent these vulnerabilities, it will also prevent the\n> iframe from accessing these things (that we want it to access).\n\nHere is my current thinking on the issue.\n- We either allow dynamic JS or we don't.  If we do, we need to accept the\n  vulnerabilities and mitigate them through other means.\n- These vulnerabilities are primarily relevant in multiuser authenticated\n  contexts.  In those contexts I am thinking we could introduce the notion of\n  \"trusted\" notebooks and could build that into any web applications.\n  Basically, in order for code to be trusted, it has to be \"reviewed and\n  approved\" by others.  We could then build the web app to completely\n  disallow JS/HTML output when running non-trusted code.  Basically, we would\n  be developing a way that forces people to be careful about the notebooks\n  they are running and require explicit approval to have JS/HTML output.\n  There are a number of different ways we could manage this approval\n  process.  I view this as a social rather than technical approach to the\n  issue.\n\nBut I think we need to investigate exactly what the limitations of iframes\nare to see what level of features/security they provide.\n\nBut, being security, I also worry that I am drastically misunderstanding\neverything.\n\nI don't know if it is possible, but we could even listen on wether the\n\n> iframe is trying to access parent window, and make it red with a\n> warning :\n> \"This iframe is trying to access global name space :\n> \n> ## allow it ? [yes], [No], [What are the risks].\"\n> \n> Matthias\n> \n> > On Tue, Sep 25, 2012 at 11:07 PM, Cameron Bates <\n> > notifications@github.com>wrote:\n> > \n> > > Good to know. I was just exploring this as an alternative to putting\n> > > html\n> > > - javascript in a markdown cell because I am having issues when I\n> > >   accidentally render the markdown cell multiple times. I am running\n> > >   into\n> > >   this when adding javascript timers to markdown cells because there is\n> > >   no\n> > >   way to know the cell is being re-rendered and the old javascript\n> > >   continues\n> > >   to run.\n> > > \n> > > â€”\n> > > Reply to this email directly or view it on GitHub<\n> > > https://github.com/ipython/ipython/pull/2363#issuecomment-8879875>.\n> > \n> > ## \n> > \n> > Brian E. Granger\n> > Cal Poly State University, San Luis Obispo\n> > bgranger@calpoly.edu and ellisonbg@gmail.com\n> > â€”\n> > Reply to this email directly or view it on GitHub.\n> \n> â€”\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/2363#issuecomment-8902143.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8928490",
    "html_url": "https://github.com/ipython/ipython/pull/2363#issuecomment-8928490",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2363",
    "id": 8928490,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg5Mjg0OTA=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-27T07:46:29Z",
    "updated_at": "2012-09-27T07:46:29Z",
    "author_association": "MEMBER",
    "body": "From my phone, so sorry if short.\n\nI will look at the code again, but i think you missrepresent the difference\nbetween md and code cell. Both have input and output, difference is with md\ncell you cannot see in and out at the same time.\nSecond thing, you mix display_all_but_js and display_js\n\nDisplay_js does indead eval js which is not reexecuted at load time vs\ndisplay_\\* that does put it in output, and is then displayed as is at load\ntime.\nexecution pathways are irrelevent here, because someone malicious will\ngenerate a notebook by hand, not respecting what current cell do.\n\nWhatever cell you wish to target you just have to create a script in its\noutput. Maybe some implementation subtilities, but the principle is the\nsame.\n\nAs for html5 iframe. By default they disallow js. One can pass a flag to\nselectively allow js; allow js to acces top frame namespace,allow explicite\ncross origin policies.  Note that as it applies to **output** frame, it\ndoes not prevent binding codemirror event.\n\nThough, i don't know wether you can selectively give acces to only some js\nfunction. But selectively enable js on a per output basis is imho a huge\nimprovement of security which should be considered for notebook and\nnbviewer.\n Le 26 sept. 2012 22:31, \"Brian E. Granger\" notifications@github.com a\nÃ©crit :\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8953348",
    "html_url": "https://github.com/ipython/ipython/pull/2363#issuecomment-8953348",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2363",
    "id": 8953348,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg5NTMzNDg=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-27T20:42:33Z",
    "updated_at": "2012-09-27T20:42:33Z",
    "author_association": "MEMBER",
    "body": "Matthias,\n\nYou raise very good points, replies inline...\n\nOn Thu, Sep 27, 2012 at 12:46 AM, Bussonnier Matthias <\nnotifications@github.com> wrote:\n\n> From my phone, so sorry if short.\n> \n> I will look at the code again, but i think you missrepresent the\n> difference\n> between md and code cell. Both have input and output, difference is with\n> md\n> cell you cannot see in and out at the same time.\n> Second thing, you mix display_all_but_js and display_js\n> \n> Display_js does indead eval js which is not reexecuted at load time vs\n> display_\\* that does put it in output, and is then displayed as is at load\n> time.\n> execution pathways are irrelevent here, because someone malicious will\n> generate a notebook by hand, not respecting what current cell do.\n> \n> Whatever cell you wish to target you just have to create a script in its\n> output. Maybe some implementation subtilities, but the principle is the\n> same.\n> \n> Yep, I had missed this vulnerability.  Because we just insert output into\n> the DOM in a rather simple manner, any script tags in the output are run,\n> even if they are not in the HTML/JS output.  And that does happen at load\n> time :(\n> \n> As for html5 iframe. By default they disallow js. One can pass a flag to\n> selectively allow js; allow js to acces top frame namespace,allow\n> explicite\n> cross origin policies. Note that as it applies to **output** frame, it\n> does not prevent binding codemirror event.\n> \n> OK I will try to read up more on this.\n> \n> Though, i don't know wether you can selectively give acces to only some js\n> function. But selectively enable js on a per output basis is imho a huge\n> improvement of security which should be considered for notebook and\n> nbviewer.\n> Le 26 sept. 2012 22:31, \"Brian E. Granger\" notifications@github.com a\n> Ã©crit :\n> \n> â€”\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/2363#issuecomment-8928490.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/9003825",
    "html_url": "https://github.com/ipython/ipython/pull/2363#issuecomment-9003825",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2363",
    "id": 9003825,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwMDM4MjU=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-29T13:08:47Z",
    "updated_at": "2012-09-29T13:08:47Z",
    "author_association": "MEMBER",
    "body": "@ellisonbg , back on original PR. \nDo you think it's ready for merge ? are you ready to move to jinja now ? \nI think i've a few PR that will conflict with this one, but i'm ok to rebase them. \n\nAfter i'll like to start introducing bootrap one step at a time, so the sooner everything nbrelated is merged, the better. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/9937072",
    "html_url": "https://github.com/ipython/ipython/pull/2363#issuecomment-9937072",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2363",
    "id": 9937072,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5MzcwNzI=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-10-31T08:52:55Z",
    "updated_at": "2012-10-31T08:52:55Z",
    "author_association": "MEMBER",
    "body": "Pinging the status of this one. \n\nthe 2 point to fix are :\n`env` should be created only in one place. \n\nstatic_url macro discussion, which is fine for me if the `?v=` attribute is not added. Practical reason is that we already have an HTML header which state wether or not the fiel as changed. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10040475",
    "html_url": "https://github.com/ipython/ipython/pull/2363#issuecomment-10040475",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2363",
    "id": 10040475,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMDQwNDc1",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-03T15:35:00Z",
    "updated_at": "2012-11-03T15:35:00Z",
    "author_association": "MEMBER",
    "body": "This does not merge cleanly anymore.\nSorry about that. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10488064",
    "html_url": "https://github.com/ipython/ipython/pull/2363#issuecomment-10488064",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2363",
    "id": 10488064,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNDg4MDY0",
    "user": {
      "login": "crbates",
      "id": 1195249,
      "node_id": "MDQ6VXNlcjExOTUyNDk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1195249?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/crbates",
      "html_url": "https://github.com/crbates",
      "followers_url": "https://api.github.com/users/crbates/followers",
      "following_url": "https://api.github.com/users/crbates/following{/other_user}",
      "gists_url": "https://api.github.com/users/crbates/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/crbates/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/crbates/subscriptions",
      "organizations_url": "https://api.github.com/users/crbates/orgs",
      "repos_url": "https://api.github.com/users/crbates/repos",
      "events_url": "https://api.github.com/users/crbates/events{/privacy}",
      "received_events_url": "https://api.github.com/users/crbates/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-18T16:49:12Z",
    "updated_at": "2012-11-18T16:49:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sorry, been really busy since Sept. I'll pull from head and look into what needs to be done sometime this week. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10490103",
    "html_url": "https://github.com/ipython/ipython/pull/2363#issuecomment-10490103",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2363",
    "id": 10490103,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNDkwMTAz",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-18T19:21:29Z",
    "updated_at": "2012-11-18T19:21:29Z",
    "author_association": "MEMBER",
    "body": "Thanks that would be great, I don't think it should be too much work.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11004321",
    "html_url": "https://github.com/ipython/ipython/pull/2363#issuecomment-11004321",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2363",
    "id": 11004321,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMDA0MzIx",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-04T16:38:45Z",
    "updated_at": "2012-12-04T16:38:45Z",
    "author_association": "MEMBER",
    "body": "This one has been rebase and merge cleanly again ! Yay !\n\n`env` is now a property.\n`static_url` is not as before, but this is not necessary IMHO.\n\n+1 for merging, \n\nReserve on `env` as a property (is it slow to recompute each time, would it make sens to make it a trait ?)\nbut this could be done as separate PR.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11019497",
    "html_url": "https://github.com/ipython/ipython/pull/2363#issuecomment-11019497",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2363",
    "id": 11019497,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMDE5NDk3",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-04T22:51:18Z",
    "updated_at": "2012-12-04T22:51:18Z",
    "author_association": "MEMBER",
    "body": "OK, I will do a final review and then we can merge this.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11220789",
    "html_url": "https://github.com/ipython/ipython/pull/2363#issuecomment-11220789",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2363",
    "id": 11220789,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMjIwNzg5",
    "user": {
      "login": "cldeploy",
      "id": 2956788,
      "node_id": "MDQ6VXNlcjI5NTY3ODg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2956788?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cldeploy",
      "html_url": "https://github.com/cldeploy",
      "followers_url": "https://api.github.com/users/cldeploy/followers",
      "following_url": "https://api.github.com/users/cldeploy/following{/other_user}",
      "gists_url": "https://api.github.com/users/cldeploy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cldeploy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cldeploy/subscriptions",
      "organizations_url": "https://api.github.com/users/cldeploy/orgs",
      "repos_url": "https://api.github.com/users/cldeploy/repos",
      "events_url": "https://api.github.com/users/cldeploy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cldeploy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-10T22:13:52Z",
    "updated_at": "2012-12-10T22:13:52Z",
    "author_association": "NONE",
    "body": "@crbates Yes, this is it exactly.  There is just one more change (super minor) that I just commented on and then we can merge.  Great work!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11387206",
    "html_url": "https://github.com/ipython/ipython/pull/2363#issuecomment-11387206",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2363",
    "id": 11387206,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMzg3MjA2",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-14T18:41:22Z",
    "updated_at": "2012-12-14T18:41:22Z",
    "author_association": "MEMBER",
    "body": "Perfect last comment has been fixed, I'm going to merge this ! \nThanks ! \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11459379",
    "html_url": "https://github.com/ipython/ipython/pull/2363#issuecomment-11459379",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2363",
    "id": 11459379,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNDU5Mzc5",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-17T20:18:47Z",
    "updated_at": "2012-12-17T20:39:08Z",
    "author_association": "NONE",
    "body": "Looks like login.html needs to be updated as well. I'm getting an error about closing with end instead of endblock. Mysteriously, it works fine on a different computer with the same version of ipython. The only difference is that in one version I use an encrypted version of the notebook and in the other it's not encrypted.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11460062",
    "html_url": "https://github.com/ipython/ipython/pull/2363#issuecomment-11460062",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2363",
    "id": 11460062,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNDYwMDYy",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-17T20:34:18Z",
    "updated_at": "2012-12-17T20:34:18Z",
    "author_association": "MEMBER",
    "body": "@carreau, do you think you can fix this one?\n\nOn Mon, Dec 17, 2012 at 12:18 PM, Phillip Cloud notifications@github.comwrote:\n\n> Looks like login.html needs to be updated as well. I'm getting an error\n> about closing with end instead of endblock.\n> \n> â€”\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/2363#issuecomment-11459379.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11460975",
    "html_url": "https://github.com/ipython/ipython/pull/2363#issuecomment-11460975",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2363",
    "id": 11460975,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNDYwOTc1",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-17T20:54:57Z",
    "updated_at": "2012-12-17T20:54:57Z",
    "author_association": "NONE",
    "body": "So I've narrowed it down to something with the encryption. I can use the notebook over an unencrypted connection but not over an encrypted connection. Don't have time right now to fully debug.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11469075",
    "html_url": "https://github.com/ipython/ipython/pull/2363#issuecomment-11469075",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2363",
    "id": 11469075,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNDY5MDc1",
    "user": {
      "login": "crbates",
      "id": 1195249,
      "node_id": "MDQ6VXNlcjExOTUyNDk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1195249?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/crbates",
      "html_url": "https://github.com/crbates",
      "followers_url": "https://api.github.com/users/crbates/followers",
      "following_url": "https://api.github.com/users/crbates/following{/other_user}",
      "gists_url": "https://api.github.com/users/crbates/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/crbates/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/crbates/subscriptions",
      "organizations_url": "https://api.github.com/users/crbates/orgs",
      "repos_url": "https://api.github.com/users/crbates/repos",
      "events_url": "https://api.github.com/users/crbates/events{/privacy}",
      "received_events_url": "https://api.github.com/users/crbates/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-18T00:38:43Z",
    "updated_at": "2012-12-18T00:38:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah just fixed and tested password protected/encrypted notebooks. see #2699\n"
  }
]
