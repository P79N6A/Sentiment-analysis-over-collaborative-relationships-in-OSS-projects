[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/296335058",
    "html_url": "https://github.com/ipython/ipython/issues/10477#issuecomment-296335058",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10477",
    "id": 296335058,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NjMzNTA1OA==",
    "user": {
      "login": "rkern",
      "id": 46135,
      "node_id": "MDQ6VXNlcjQ2MTM1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/46135?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rkern",
      "html_url": "https://github.com/rkern",
      "followers_url": "https://api.github.com/users/rkern/followers",
      "following_url": "https://api.github.com/users/rkern/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkern/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rkern/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkern/subscriptions",
      "organizations_url": "https://api.github.com/users/rkern/orgs",
      "repos_url": "https://api.github.com/users/rkern/repos",
      "events_url": "https://api.github.com/users/rkern/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rkern/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-22T00:47:39Z",
    "updated_at": "2017-04-22T00:47:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm guessing that there is a random number being pulled by IPython for some reason, possibly for some kind of unique ID per executed block. Or some other module that IPython calls once per executed block pulls a random number.\r\n\r\nIn general, this is a fine, typical use of the convenience functions in `random`, which implicitly use a shared global instance. You should only use those if you want *arbitrary* numbers. If you want *repeatable* numbers, you must instantiate `random.Random()` yourself and use the methods on that instance exclusively. Don't expect `random.seed()` to give you repeatability with the convenience functions."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/296606785",
    "html_url": "https://github.com/ipython/ipython/issues/10477#issuecomment-296606785",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10477",
    "id": 296606785,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NjYwNjc4NQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-24T10:17:17Z",
    "updated_at": "2017-04-24T10:17:17Z",
    "author_association": "MEMBER",
    "body": "Yup, as @rkern described, you should instantiate a `Random()` object yourself if you want a repeatable sequence of random numbers. (Thanks Robert)\r\n\r\nClosing as I believe everything is working as intended."
  }
]
