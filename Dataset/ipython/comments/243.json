[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/665278",
    "html_url": "https://github.com/ipython/ipython/pull/243#issuecomment-665278",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/243",
    "id": 665278,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NTI3OA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-01-10T00:28:36Z",
    "updated_at": "2011-01-10T00:28:36Z",
    "author_association": "MEMBER",
    "body": "Amazing stuff! A couple of little points about docstrings:\n- In `core.formatters.DisplayFormatter.format`, include and exclude are listed as returns in the docstring, while I think they should be under parameters.\n- In `core.formatters.PNGFormatter`, the docstring mentions \"define a :meth:`__svg__` method\", while I'm guessing it should be a `__png__` method.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/665321",
    "html_url": "https://github.com/ipython/ipython/pull/243#issuecomment-665321",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/243",
    "id": 665321,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NTMyMQ==",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-01-10T01:11:18Z",
    "updated_at": "2011-01-10T01:11:18Z",
    "author_association": "MEMBER",
    "body": "Thanks for having a look.  I just pushed fixes for these things.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/698149",
    "html_url": "https://github.com/ipython/ipython/pull/243#issuecomment-698149",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/243",
    "id": 698149,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5ODE0OQ==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-01-22T06:07:08Z",
    "updated_at": "2011-01-22T06:07:08Z",
    "author_association": "MEMBER",
    "body": "This looks really great. I've looked over some of it, and I have a few notes:\n\n## core/display.py\n\nin def display:  \n  typo in docstring: exclue->exclude\n  why does display call InteractiveShell.instance() twice for each call?  Why not pass an instance as the first argument, or make it an InteractiveShell method, or at least only call instance() just once?\n\n## core/displayhook.py\n\ndef compute_format_data:\n docstring typos: method only compute the format... (computes)\n and ... whose forat ... (format)\n\n## displaypub.py\n\nin publish there is a `print >>io.Term.cout, ...`\nsince we depend on py2.6 now, do we want to use print_function in new code?\n\n## zmqshell.py\n\nZMQDisplayPublisher\n\nreplace:\n      msg = session.msg(...)\n      socket.send(msg)\nwith:\n      msg = session.send(socket, ...)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/699443",
    "html_url": "https://github.com/ipython/ipython/pull/243#issuecomment-699443",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/243",
    "id": 699443,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5OTQ0Mw==",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-01-22T22:13:11Z",
    "updated_at": "2011-01-22T22:13:11Z",
    "author_association": "MEMBER",
    "body": "Min, thanks for the comments.  I have fixed these things.  The display functions should remain functions as they are designed to be imported and used by users.  I think this is a better approach than 1) polluting their namespace by default or 2) requiring them to do get_ipython first.  I think we should probably move get_ipython to this model as well.  I haven't fixed the session stuff, but will once your branch is merged and I rebase on top of that.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/699552",
    "html_url": "https://github.com/ipython/ipython/pull/243#issuecomment-699552",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/243",
    "id": 699552,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5OTU1Mg==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-01-22T23:20:18Z",
    "updated_at": "2011-01-22T23:20:18Z",
    "author_association": "MEMBER",
    "body": "Okay, that makes sense.\n\nYou don't have to wait for my work to merge before making the change to the send pattern.  The only changes I made have to do with being able to send a message twice, and tweaking the form of recv.  That way, there's no reason for you to rebase, just use session.send(socket,...) instead of msg = session.msg(...)+socket.send_json(msg) in _new_ sends, like you added in DisplayPublisher.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/701734",
    "html_url": "https://github.com/ipython/ipython/pull/243#issuecomment-701734",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/243",
    "id": 701734,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwMTczNA==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-01-24T04:38:43Z",
    "updated_at": "2011-01-24T04:38:43Z",
    "author_association": "MEMBER",
    "body": "This looks great, excellent work!\n\nPlease go ahead and merge, once a few things (most fairly minor) are taken care of:\n- [the only not totally trivial fix] as we chatted about, we should restore the part of pastefig() that did the logic for getting the figure objects with an easy to use function pulled in when --pylab is in use. The code was all there in the old pastefig(), we just need to pull it back, and adapt display() so it can take _args.  Then the call can be made by the user as display(_getfigs()) or display(*getfigs(1, 3, f5)).  If this proves to be a really common idiom, we can always (later) expose a 2-line convenience wrapper for it.\n- in displaypub (and any new files) we should use \"from **future** import print_function\" and use print().  We're on 2.6 now and that will make the py3k branch cleaner.  Backporting this fix to old files can be done as we go whenever it's easy/convenient, but for new files we should  stick to the new syntax.\n- L 74 in formatter.py, typo: immage -> image\n- L 216 in displayhook.py, this code:\n\n<pre>\n        format_dict = self.shell.display_formatter.format(result)\n        return format_dict\n</pre>\n\n\ncan be changed to just\n\n<pre>\n        return self.shell.display_formatter.format(result)\n</pre>\n\n\nno need to create a variable just to return it.\n\nAgain, fabulous work.  Thanks!!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/701779",
    "html_url": "https://github.com/ipython/ipython/pull/243#issuecomment-701779",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/243",
    "id": 701779,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwMTc3OQ==",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-01-24T05:32:28Z",
    "updated_at": "2011-01-24T05:32:28Z",
    "author_association": "MEMBER",
    "body": "I wrote a getfigs function that does what you want and display now takes *args.  I fixed everything else as well and have merged.  Thanks for the reviews everyone!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/702199",
    "html_url": "https://github.com/ipython/ipython/pull/243#issuecomment-702199",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/243",
    "id": 702199,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwMjE5OQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-01-24T10:09:21Z",
    "updated_at": "2011-01-24T10:09:21Z",
    "author_association": "MEMBER",
    "body": "Just to add - from a Python 3 point of view, it's not a big deal whether you use print_function. 2to3 doesn't seem to have any trouble converting print statements to functions. Of course, it can handle it as a function as well, but don't lose too much sleep over converting them manually.\n"
  }
]
