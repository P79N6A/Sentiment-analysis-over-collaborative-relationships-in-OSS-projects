[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/283621919",
    "html_url": "https://github.com/ipython/ipython/issues/10367#issuecomment-283621919",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10367",
    "id": 283621919,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzYyMTkxOQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-02T10:54:48Z",
    "updated_at": "2017-03-02T10:54:48Z",
    "author_association": "MEMBER",
    "body": "I don't know why it's different (different Python version, maybe?), but I think the error is from passing a decimal object to range:\r\n\r\n```\r\n>>> range(0, Decimal(2))\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nTypeError: 'decimal.Decimal' object cannot be interpreted as an integer\r\n>>> range(0, int(Decimal(2)))\r\nrange(0, 2)\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/283744835",
    "html_url": "https://github.com/ipython/ipython/issues/10367#issuecomment-283744835",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10367",
    "id": 283744835,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4Mzc0NDgzNQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-02T18:55:48Z",
    "updated_at": "2017-03-02T18:55:48Z",
    "author_association": "MEMBER",
    "body": "Dang, it's been a couple of time where I responded to an issues, github UI behaved as if it did receive it, and a couple of hours later it's gone. \r\n\r\nI know because I installed an extension that locally saves everything I type in form fields locally in localstorage to be sure I'm not crazy and it's there. \r\n\r\nSo here is what I responded yesterday that never ended up there:\r\n\r\nComment 1:\r\nCan you check the value of `sys.executable` in both ?\r\nCan you compare the values of sys.modules.keys() in both notebook and IPython ?\r\nAre you a user of libraries like SymPy/Sage ? (I'm thinking the transformer that auto wrap numbers in AST )\r\n\r\nThe likely cause is an extension which is loaded only by ipykernel.\r\n\r\nComment 2:\r\n\r\nCheck also the content of `~/.ipython/profile_default/ipython_kernel_config.py`\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/283844900",
    "html_url": "https://github.com/ipython/ipython/issues/10367#issuecomment-283844900",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10367",
    "id": 283844900,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4Mzg0NDkwMA==",
    "user": {
      "login": "kohaugustine",
      "id": 6628545,
      "node_id": "MDQ6VXNlcjY2Mjg1NDU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6628545?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kohaugustine",
      "html_url": "https://github.com/kohaugustine",
      "followers_url": "https://api.github.com/users/kohaugustine/followers",
      "following_url": "https://api.github.com/users/kohaugustine/following{/other_user}",
      "gists_url": "https://api.github.com/users/kohaugustine/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kohaugustine/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kohaugustine/subscriptions",
      "organizations_url": "https://api.github.com/users/kohaugustine/orgs",
      "repos_url": "https://api.github.com/users/kohaugustine/repos",
      "events_url": "https://api.github.com/users/kohaugustine/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kohaugustine/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-03T02:12:21Z",
    "updated_at": "2017-03-03T02:12:21Z",
    "author_association": "NONE",
    "body": "@Carreau Thanks for your help! Here are my responses:\r\n\r\nCan you check the value of sys.executable in both ?\r\n- It is the same in both: `~/miniconda2/envs/Economics_Finance/bin/python`\r\n\r\nCan you compare the values of sys.modules.keys() in both notebook and IPython ?\r\n- I have placed the values on this page on [DiffChecker](https://www.diffchecker.com/5QB2gGni). The text on the left is from the IPython shell, the right is from the notebook.\r\n\r\nAre you a user of libraries like SymPy/Sage ? (I'm thinking the transformer that auto wrap numbers in AST) \r\n- Yes I am, but these packages are not in my current conda env named Economics_Finance. I always use conda environments for package management across all my projects.\r\n\r\nCheck also the content of ~/.ipython/profile_default/ipython_kernel_config.py\r\n- This file does not exist in my system home dir. So I looked into my conda env and found two of these files in two separate locations. Both of them contain the exact same thing as a diff gives nothing. They are located in `~/miniconda2/envs/Economics_Finance/lib/python3.5/site-packages/jupyter_core/tests/dotipython/profile_default/ipython_kernel_config.py` and `~/miniconda2/envs/Economics_Finance/lib/python3.5/site-packages/jupyter_core/tests/dotipython_empty/profile_default/ipython_kernel_config.py`. I've attached the file here as a txt so that Github will allow me to upload it (I figure no need to paste it all up here otherwise it will just be a wall of code)\r\n[ipython_kernel_config.txt](https://github.com/ipython/ipython/files/815644/ipython_kernel_config.txt). \r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/283859823",
    "html_url": "https://github.com/ipython/ipython/issues/10367#issuecomment-283859823",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10367",
    "id": 283859823,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4Mzg1OTgyMw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-03T04:04:31Z",
    "updated_at": "2017-03-03T04:04:31Z",
    "author_association": "MEMBER",
    "body": "Ok, nothing weird in what you posted. \r\n\r\nDo you use `%pylab` ? of `--pylab` ? It might screw up `sum`.\r\nTry to remove the `.pyc` files generated, they might interfere as the message seem to be off. (did you restart your kernel ?)\r\n\r\nTry renaming `function.py`\r\nAny chance you can post the full function.py file ? \r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/283947131",
    "html_url": "https://github.com/ipython/ipython/issues/10367#issuecomment-283947131",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10367",
    "id": 283947131,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4Mzk0NzEzMQ==",
    "user": {
      "login": "kohaugustine",
      "id": 6628545,
      "node_id": "MDQ6VXNlcjY2Mjg1NDU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6628545?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kohaugustine",
      "html_url": "https://github.com/kohaugustine",
      "followers_url": "https://api.github.com/users/kohaugustine/followers",
      "following_url": "https://api.github.com/users/kohaugustine/following{/other_user}",
      "gists_url": "https://api.github.com/users/kohaugustine/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kohaugustine/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kohaugustine/subscriptions",
      "organizations_url": "https://api.github.com/users/kohaugustine/orgs",
      "repos_url": "https://api.github.com/users/kohaugustine/repos",
      "events_url": "https://api.github.com/users/kohaugustine/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kohaugustine/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-03T13:00:48Z",
    "updated_at": "2017-03-03T13:00:48Z",
    "author_association": "NONE",
    "body": "@Carreau Following your suggestion on restarting my IPython notebook kernel, that fixed the issue entirely! Gosh I couldn't believe that this was the reason, but now in hindsight, I'm not surprised. In the IPython shell, I would do `imp.reload(functions)` in order to reload the module after correcting the bug in the source. All I was doing in the IPython notebook was re-executing the import again. I can't believe that I forgot about reloading the module! \r\n\r\nSo I guess this closes the issue. I've fixed the bug in the `present_value()` function, and have pushed the code to my Github repo [here](https://github.com/kohaugustine/Introduction_to_Finance). Actually I'm not done with my module yet because I will still need to apply this change to many other functions in the `functions.py`. The change involves first casting a non-Decimal object into a Decimal object before applying it to another Decimal object with an arithmetic operation.\r\n\r\nI first wrote the module almost 2 years back using python 2.7, and under python 2.7, it was perfectly fine doing things like adding integers with Decimal objects directly. Now it seems like I would need to manually cast all non-Decimals to Decimals first before using them in any operations with other Decimal objects.\r\n\r\nThank you!\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/283948567",
    "html_url": "https://github.com/ipython/ipython/issues/10367#issuecomment-283948567",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10367",
    "id": 283948567,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4Mzk0ODU2Nw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-03T13:08:21Z",
    "updated_at": "2017-03-03T13:08:21Z",
    "author_association": "MEMBER",
    "body": "Glad you got it fixed.\r\n\r\nI can still do maths operations between decimals and integers in Python 3.5. But I think it doesn't like using decimal objects where an integer is needed (as in `range()`)."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/283999371",
    "html_url": "https://github.com/ipython/ipython/issues/10367#issuecomment-283999371",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10367",
    "id": 283999371,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4Mzk5OTM3MQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-03T16:24:00Z",
    "updated_at": "2017-03-03T16:24:00Z",
    "author_association": "MEMBER",
    "body": "> All I was doing in the IPython notebook was re-executing the import again. I can't believe that I forgot about reloading the module!\r\n\r\nIt's Ok, glad you figured it out. I regularly run things without saving python files and scratch my head as well :-) \r\n\r\nThanks !"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/284204198",
    "html_url": "https://github.com/ipython/ipython/issues/10367#issuecomment-284204198",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10367",
    "id": 284204198,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDIwNDE5OA==",
    "user": {
      "login": "kohaugustine",
      "id": 6628545,
      "node_id": "MDQ6VXNlcjY2Mjg1NDU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6628545?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kohaugustine",
      "html_url": "https://github.com/kohaugustine",
      "followers_url": "https://api.github.com/users/kohaugustine/followers",
      "following_url": "https://api.github.com/users/kohaugustine/following{/other_user}",
      "gists_url": "https://api.github.com/users/kohaugustine/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kohaugustine/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kohaugustine/subscriptions",
      "organizations_url": "https://api.github.com/users/kohaugustine/orgs",
      "repos_url": "https://api.github.com/users/kohaugustine/repos",
      "events_url": "https://api.github.com/users/kohaugustine/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kohaugustine/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-05T04:15:02Z",
    "updated_at": "2017-03-05T04:15:02Z",
    "author_association": "NONE",
    "body": "@takluyver Thanks for pointing that out! Following your comment, I got spurred to try out different arithmetic operations and found that indeed maths operations between decimals and integers are perfectly fine (it appears that the result will be automatically turned into a decimal). However, this does not hold for between decimal and floats. You can't do operations between decimals and floats without first converting the float to a decimal. Looks like I just went way overboard by casting everything to a decimal in my `functions.py` haha. At least I've learnt something new about the python number system through this.\r\n\r\n@Carreau Thanks for your help throughout!"
  }
]
