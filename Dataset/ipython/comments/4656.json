[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30058668",
    "html_url": "https://github.com/ipython/ipython/pull/4656#issuecomment-30058668",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4656",
    "id": 30058668,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDU4NjY4",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-07T16:37:07Z",
    "updated_at": "2013-12-07T16:37:07Z",
    "author_association": "MEMBER",
    "body": "I suppose one could look at the key in `exporter_map` and make `exporter_map` a configurable also. \nWe should also think that people might just want to open the link and not download for html ones.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30058673",
    "html_url": "https://github.com/ipython/ipython/pull/4656#issuecomment-30058673",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4656",
    "id": 30058673,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDU4Njcz",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-07T16:37:15Z",
    "updated_at": "2013-12-07T16:37:15Z",
    "author_association": "MEMBER",
    "body": "Need a rebase also.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30065139",
    "html_url": "https://github.com/ipython/ipython/pull/4656#issuecomment-30065139",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4656",
    "id": 30065139,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDY1MTM5",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-07T21:20:31Z",
    "updated_at": "2013-12-07T21:20:31Z",
    "author_association": "MEMBER",
    "body": "The 'print preview' option, just above the submenu, will open the HTML view in a new window/tab, without downloading it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30065500",
    "html_url": "https://github.com/ipython/ipython/pull/4656#issuecomment-30065500",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4656",
    "id": 30065500,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDY1NTAw",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-07T21:37:48Z",
    "updated_at": "2013-12-07T21:37:48Z",
    "author_association": "MEMBER",
    "body": "@minrk, the conflict here is with your PR to add raw_mimetype metadata to raw cells, and pass them through the relevant exporters. We've both add a mime type traitlet to exporters, with a few differences:\n- Yours are `raw_mimetype` (a single string) and `raw_mimetypes` (a list), mine is just called `mime_type`.\n- Yours are for selecting cells from the input, mine is just metadata for the output.\n- Yours are on TemplateExporter, mine are on the Exporter parent class..\n\nAre there any situations where `raw_mimetype` won't be the same as the output mime type? I guess if we had a PDF exporter class it wouldn't. So we presumably need both traitlets, but one should be set to the other by default. And I should make the name of mine more explicit, something like `output_mimetype`. Does that sound sensible?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30066005",
    "html_url": "https://github.com/ipython/ipython/pull/4656#issuecomment-30066005",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4656",
    "id": 30066005,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDY2MDA1",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-07T21:59:45Z",
    "updated_at": "2013-12-07T21:59:45Z",
    "author_association": "MEMBER",
    "body": "Let's look at the specific use cases:\n- output_mimetype describes the final output format\n- raw_mimetype is used as the default value for raw cells with no mimetype specified\n- raw_mimetypes is a list of supported mimetypes for raw cell inclusion\n- raw_mimetype is always raw_mimetypes[0]\n\nCurrently, I don't think there are any cases where `output_mimetype` and `raw_mimetype` would differ. The PDF Exporter we discussed yesterday would probably be one, though.\n\nI think we can replace `raw_mimetype` with use of `raw_mimetypes[0]`, so we don't need _three_ traits with exactly the same information in almost every case, and your `output_mimetype` makes sense, or even just `mimetype` wouldn't bother me.  And keep the same `raw_mimetypes` default behavior, which is already constructed from raw_mimetype (which would become output_mimetype).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30066030",
    "html_url": "https://github.com/ipython/ipython/pull/4656#issuecomment-30066030",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4656",
    "id": 30066030,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDY2MDMw",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-07T22:01:13Z",
    "updated_at": "2013-12-07T22:01:13Z",
    "author_association": "MEMBER",
    "body": ">  It would be nice to have it dynamic\n\nEven if you want to save it for another PR, I think the appropriate request for this would be\n\n```\nGET /nbconvert/\n```\n\nto list available formats.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30142420",
    "html_url": "https://github.com/ipython/ipython/pull/4656#issuecomment-30142420",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4656",
    "id": 30142420,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTQyNDIw",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-09T15:45:44Z",
    "updated_at": "2013-12-09T15:45:44Z",
    "author_association": "MEMBER",
    "body": "> Even if you want to save it for another PR, I think the appropriate request for this would be\n> GET /nbconvert/\n> to list available formats\n\nCertainly, I would like to have available \"all\" the options we currently support in nbconvert...\nI know that probably having latex/pdf and reveal slideshow make the UI more complex than now... and more if we support a `slideshow preview` as the `print preview` for the HTML... but it would be very useful for the users... OK, maybe we can put it there later, but at least I think you have to add Markdown `md` to the current proposed menu... \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30170917",
    "html_url": "https://github.com/ipython/ipython/pull/4656#issuecomment-30170917",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4656",
    "id": 30170917,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTcwOTE3",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-09T20:37:30Z",
    "updated_at": "2013-12-09T20:37:30Z",
    "author_association": "MEMBER",
    "body": "Rebased, condensed the mime type information on nbconvert exporters as Min suggested, and added `GET /nbconvert` - the result is a JSON dict mapping exporter short names (e.g. `python`) to more dicts of information - currently just the output mimetype.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30286827",
    "html_url": "https://github.com/ipython/ipython/pull/4656#issuecomment-30286827",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4656",
    "id": 30286827,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjg2ODI3",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-11T01:41:49Z",
    "updated_at": "2013-12-11T01:41:49Z",
    "author_association": "MEMBER",
    "body": "Added a whatsnew entry.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30318462",
    "html_url": "https://github.com/ipython/ipython/pull/4656#issuecomment-30318462",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4656",
    "id": 30318462,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzE4NDYy",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-11T13:03:54Z",
    "updated_at": "2013-12-11T13:03:54Z",
    "author_association": "MEMBER",
    "body": "Would (partially?) close #3402 (linking both issues otherwise people tend to submit equivalent PRs like #4674 )\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30319013",
    "html_url": "https://github.com/ipython/ipython/pull/4656#issuecomment-30319013",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4656",
    "id": 30319013,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzE5MDEz",
    "user": {
      "login": "westurner",
      "id": 50891,
      "node_id": "MDQ6VXNlcjUwODkx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/50891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/westurner",
      "html_url": "https://github.com/westurner",
      "followers_url": "https://api.github.com/users/westurner/followers",
      "following_url": "https://api.github.com/users/westurner/following{/other_user}",
      "gists_url": "https://api.github.com/users/westurner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/westurner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/westurner/subscriptions",
      "organizations_url": "https://api.github.com/users/westurner/orgs",
      "repos_url": "https://api.github.com/users/westurner/repos",
      "events_url": "https://api.github.com/users/westurner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/westurner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-11T13:13:03Z",
    "updated_at": "2013-12-11T13:13:03Z",
    "author_association": "NONE",
    "body": "What does this do if I have not installed pandoc?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30345081",
    "html_url": "https://github.com/ipython/ipython/pull/4656#issuecomment-30345081",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4656",
    "id": 30345081,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzQ1MDgx",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-11T18:07:38Z",
    "updated_at": "2013-12-11T18:07:38Z",
    "author_association": "MEMBER",
    "body": "> What does this do if I have not installed pandoc?\n\nFail :)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30345479",
    "html_url": "https://github.com/ipython/ipython/pull/4656#issuecomment-30345479",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4656",
    "id": 30345479,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzQ1NDc5",
    "user": {
      "login": "westurner",
      "id": 50891,
      "node_id": "MDQ6VXNlcjUwODkx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/50891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/westurner",
      "html_url": "https://github.com/westurner",
      "followers_url": "https://api.github.com/users/westurner/followers",
      "following_url": "https://api.github.com/users/westurner/following{/other_user}",
      "gists_url": "https://api.github.com/users/westurner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/westurner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/westurner/subscriptions",
      "organizations_url": "https://api.github.com/users/westurner/orgs",
      "repos_url": "https://api.github.com/users/westurner/repos",
      "events_url": "https://api.github.com/users/westurner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/westurner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-11T18:12:40Z",
    "updated_at": "2013-12-11T18:12:40Z",
    "author_association": "NONE",
    "body": "refs https://github.com/ipython/ipython/pull/4655\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30364207",
    "html_url": "https://github.com/ipython/ipython/pull/4656#issuecomment-30364207",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4656",
    "id": 30364207,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzY0MjA3",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-11T21:09:25Z",
    "updated_at": "2013-12-11T21:09:25Z",
    "author_association": "MEMBER",
    "body": "> Fail :)\n\nWe need to alert to the user in some way... maybe an alert or something like that...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30376208",
    "html_url": "https://github.com/ipython/ipython/pull/4656#issuecomment-30376208",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4656",
    "id": 30376208,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzc2MjA4",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-11T23:39:11Z",
    "updated_at": "2013-12-11T23:39:11Z",
    "author_association": "MEMBER",
    "body": "I talked with Min about what we can do to fail more informatively. He reckons we should copy across the error pages that nbviewer uses, which include details about the failure. To make room for that (which will happen in a separate PR), I've made the 'download as' links open in a new tab, so that we don't navigate the user away from the interactive notebook view if the conversion fails. The downside of that is that if it succeeds, the user sees a brief flash of a new tab opening and closing before the browser offers the download.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30376319",
    "html_url": "https://github.com/ipython/ipython/pull/4656#issuecomment-30376319",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4656",
    "id": 30376319,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzc2MzE5",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-11T23:40:59Z",
    "updated_at": "2013-12-11T23:40:59Z",
    "author_association": "MEMBER",
    "body": "I am stuck grading today but will try to review this tomorrow. I have some\nideas on how we can do this in a possibly different way...\n\nOn Wed, Dec 11, 2013 at 3:39 PM, Thomas Kluyver notifications@github.comwrote:\n\n> I talked with Min about what we can do to fail more informatively. He\n> reckons we should copy across the error pages that nbviewer uses, which\n> include details about the failure. To make room for that (which will happen\n> in a separate PR), I've made the 'download as' links open in a new tab, so\n> that we don't navigate the user away from the interactive notebook view if\n> the conversion fails. The downside of that is that if it succeeds, the user\n> sees a brief flash of a new tab opening and closing before the browser\n> offers the download.\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/4656#issuecomment-30376208\n> .\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30376636",
    "html_url": "https://github.com/ipython/ipython/pull/4656#issuecomment-30376636",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4656",
    "id": 30376636,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzc2NjM2",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-11T23:46:13Z",
    "updated_at": "2013-12-11T23:46:13Z",
    "author_association": "MEMBER",
    "body": "We discussed doing it all through a JSON API, but base64 encoding massive blobs of content to stick them in a JSON structure seems distinctly icky.\n\nOne possibility that I advanced is having the big blob as the body of the HTTP response, with JSON metadata in an HTTP header (`X-IPython-Metadata` or similar). This would also mean that the same URL could be used for an API request or directly in a browser.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30376874",
    "html_url": "https://github.com/ipython/ipython/pull/4656#issuecomment-30376874",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4656",
    "id": 30376874,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzc2ODc0",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-11T23:50:15Z",
    "updated_at": "2013-12-11T23:50:15Z",
    "author_association": "MEMBER",
    "body": "I haven't looked the code yet, but does this create a separate HTTP server for nbconvert or just extend the RESTful API of the notebook server?  -Just wondering if one can start a standalone nbconvert service without the notebook...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30377114",
    "html_url": "https://github.com/ipython/ipython/pull/4656#issuecomment-30377114",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4656",
    "id": 30377114,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzc3MTE0",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-11T23:54:46Z",
    "updated_at": "2013-12-11T23:54:46Z",
    "author_association": "MEMBER",
    "body": "This just adds handlers to the regular notebook server. AIUI, you could quite easily write a server that would only expose some of the handlers of the main notebook server.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30377240",
    "html_url": "https://github.com/ipython/ipython/pull/4656#issuecomment-30377240",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4656",
    "id": 30377240,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzc3MjQw",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-11T23:56:40Z",
    "updated_at": "2013-12-11T23:56:40Z",
    "author_association": "MEMBER",
    "body": "OK, quick grading break...here is a summary of my idea - largely inspired\nby my thinking about these issue in the background over the last bit of\ndays...\n- Notebook list/tree view should list all files of all types (maybe sorted\n  by type...).\n- The tree view should provide \"Download\" link for all flies listed.\n- The nbconvert web service should 1) take JSON configuration, 2) run\n  nbconvert, 3) return log. It should not return the actual output file. That\n  will be handled using the regular downloads.\n- The UI for all of this should be in the tree view. When it supports\n  multiple selection that will make it easy to select a couple of notebook\n  and run them.\n- When we allow users to edit regular text files, this approach will allow\n  them to edit the local config file for nbconvert as well.\n\nThoughts?\n\nOn Wed, Dec 11, 2013 at 3:50 PM, Jonathan Frederic <notifications@github.com\n\n> wrote:\n> \n> I haven't looked the code yet, but does this create a separate HTTP server\n> for nbconvert or just extend the RESTful API of the notebook server? -Just\n> wondering if one can start a standalone nbconvert service without the\n> notebook...\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/4656#issuecomment-30376874\n> .\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30380390",
    "html_url": "https://github.com/ipython/ipython/pull/4656#issuecomment-30380390",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4656",
    "id": 30380390,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzgwMzkw",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-12T00:54:56Z",
    "updated_at": "2013-12-12T00:54:56Z",
    "author_association": "MEMBER",
    "body": "Providing a UI to convert from the dashboard should be easy enough in a later PR. I'm -1 on saving the output to a file and reading it back for the response - that seems somewhat backwards. Except of course when it's necessary, as it will be for PDF.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30395959",
    "html_url": "https://github.com/ipython/ipython/pull/4656#issuecomment-30395959",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4656",
    "id": 30395959,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzk1OTU5",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-12T08:13:54Z",
    "updated_at": "2013-12-12T08:13:54Z",
    "author_association": "MEMBER",
    "body": "Agreed with thomas. \nI think that user want the current notebook as rst now and when they are editing it. Saving to disk using dashboard will induce confusion as to wether or not converted files are up to date. \n\nTo take the example of Office, you do \"file > export as...\". You are not asked to go to the explorer and right click > convert to.\n\nAlso opening a new page when downloading is ok IMHO, as the conversion is never instantaneous, would it even be possible to show \"your notebook is being processed\" \nThat when ready trigger the download itself?\n\nEnvoyé de mon iPhone\n\n> Le 12 déc. 2013 à 01:55, Thomas Kluyver notifications@github.com a écrit :\n> \n> Providing a UI to convert from the dashboard should be easy enough in a later PR. I'm -1 on saving the output to a file and reading it back for the response - that seems somewhat backwards. Except of course when it's necessary, as it will be for PDF.\n> \n> —\n> Reply to this email directly or view it on GitHub.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30404874",
    "html_url": "https://github.com/ipython/ipython/pull/4656#issuecomment-30404874",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4656",
    "id": 30404874,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDA0ODc0",
    "user": {
      "login": "westurner",
      "id": 50891,
      "node_id": "MDQ6VXNlcjUwODkx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/50891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/westurner",
      "html_url": "https://github.com/westurner",
      "followers_url": "https://api.github.com/users/westurner/followers",
      "following_url": "https://api.github.com/users/westurner/following{/other_user}",
      "gists_url": "https://api.github.com/users/westurner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/westurner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/westurner/subscriptions",
      "organizations_url": "https://api.github.com/users/westurner/orgs",
      "repos_url": "https://api.github.com/users/westurner/repos",
      "events_url": "https://api.github.com/users/westurner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/westurner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-12T10:31:00Z",
    "updated_at": "2013-12-12T10:31:00Z",
    "author_association": "NONE",
    "body": "> We discussed doing it all through a JSON API, but base64 encoding massive blobs of content to stick them in a JSON structure seems distinctly icky.\n> \n> One possibility that I advanced is having the big blob as the body of the HTTP response, with JSON metadata in an HTTP header (X-IPython-Metadata or similar). This would also mean that the same URL could be used for an API request or directly in a browser.\n- http://schema.org/AssessAction\n- http://json-ld.org/spec/latest/json-ld/#embedding-json-ld-in-html-documents\n- **http://www.reddit.com/r/semanticweb/comments/1o4v5k/some_help_please_im_the_founder_of_rbutr_a/ccqw3ju**\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30404965",
    "html_url": "https://github.com/ipython/ipython/pull/4656#issuecomment-30404965",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4656",
    "id": 30404965,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDA0OTY1",
    "user": {
      "login": "westurner",
      "id": 50891,
      "node_id": "MDQ6VXNlcjUwODkx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/50891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/westurner",
      "html_url": "https://github.com/westurner",
      "followers_url": "https://api.github.com/users/westurner/followers",
      "following_url": "https://api.github.com/users/westurner/following{/other_user}",
      "gists_url": "https://api.github.com/users/westurner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/westurner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/westurner/subscriptions",
      "organizations_url": "https://api.github.com/users/westurner/orgs",
      "repos_url": "https://api.github.com/users/westurner/repos",
      "events_url": "https://api.github.com/users/westurner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/westurner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-12T10:32:50Z",
    "updated_at": "2013-12-12T10:39:47Z",
    "author_association": "NONE",
    "body": "... \n- https://en.wikipedia.org/wiki/List_of_HTTP_header_fields#Size_limits (Apache ~8190 bytes)\n- http://stackoverflow.com/questions/686217/maximum-on-http-header-values\n- https://en.wikipedia.org/wiki/RESTful#Cacheable\n\nhttp://restful-api-design.readthedocs.org/en/latest/relationships.html\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30437782",
    "html_url": "https://github.com/ipython/ipython/pull/4656#issuecomment-30437782",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4656",
    "id": 30437782,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDM3Nzgy",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-12T16:30:43Z",
    "updated_at": "2013-12-12T16:30:43Z",
    "author_association": "MEMBER",
    "body": "My feeling about that model is that it is a leaky abstraction that will\nlead to frustration. There are a couple of leaks in the model:\n- The configuration of nbconvert in many cases will be done by users at the\n  directory level in a .ipy config file. That is out-of-band relative to an\n  nbconvert web service.\n- The result of running nbconvert is not a single file. There can be\n  images, and any file referred to in the \"files\" URL. Downloading the rst\n  file alone in many cases will be useless.\n- There are many failure modes of nbconvert. Because of this we really need\n  to bring the full log back to the user. That is very difficult to do in a\n  sane manner when the result of clicking on \"Download As\" is to grab the\n  file.\n- In many cases, users will want to open the converted file to look at the\n  contents. Downloading to someones \"Desktop\" or \"Downloads\" folder and then\n  forcing the user to 1) move the file back into the notebook directories or\n  2) open the file in an external text editor are both very\n  counter-productive. They should see the file in the tree view and be able\n  to click the edit button. Of course we need to offer downloads, but that\n  shouldn't replace the \"file on the file system view\".\n- The web service model makes it extremely painful if you want to manage\n  the output of nbconvert alongside the original notebooks in a version\n  control system.\n- We need to be very mindful of the file system abstraction that we are\n  exposing. One of the main ideas of the notebook servers is that \"notebooks\n  are just files on the file system\". I think the corollaries are\n  \"PDF/rst/markdown files are just files on the files system\".\n\nOn Thu, Dec 12, 2013 at 12:13 AM, Matthias Bussonnier <\nnotifications@github.com> wrote:\n\n> Agreed with thomas.\n> I think that user want the current notebook as rst now and when they are\n> editing it. Saving to disk using dashboard will induce confusion as to\n> wether or not converted files are up to date.\n> \n> To take the example of Office, you do \"file > export as...\". You are not\n> asked to go to the explorer and right click > convert to.\n> \n> Also opening a new page when downloading is ok IMHO, as the conversion is\n> never instantaneous, would it even be possible to show \"your notebook is\n> being processed\"\n> That when ready trigger the download itself?\n> \n> Envoyé de mon iPhone\n> \n> > Le 12 déc. 2013 à 01:55, Thomas Kluyver notifications@github.com a\n> > écrit :\n> > \n> > Providing a UI to convert from the dashboard should be easy enough in a\n> > later PR. I'm -1 on saving the output to a file and reading it back for the\n> > response - that seems somewhat backwards. Except of course when it's\n> > necessary, as it will be for PDF.\n> > \n> > —\n> > Reply to this email directly or view it on GitHub.\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/4656#issuecomment-30395959\n> .\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30551220",
    "html_url": "https://github.com/ipython/ipython/pull/4656#issuecomment-30551220",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4656",
    "id": 30551220,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTUxMjIw",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-13T23:07:50Z",
    "updated_at": "2013-12-13T23:07:50Z",
    "author_association": "MEMBER",
    "body": "Rebased to fix the tests with the changes to the subprocess stream capturing API in #4690.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30814497",
    "html_url": "https://github.com/ipython/ipython/pull/4656#issuecomment-30814497",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4656",
    "id": 30814497,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwODE0NDk3",
    "user": {
      "login": "mrmagooey",
      "id": 640316,
      "node_id": "MDQ6VXNlcjY0MDMxNg==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/640316?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mrmagooey",
      "html_url": "https://github.com/mrmagooey",
      "followers_url": "https://api.github.com/users/mrmagooey/followers",
      "following_url": "https://api.github.com/users/mrmagooey/following{/other_user}",
      "gists_url": "https://api.github.com/users/mrmagooey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mrmagooey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mrmagooey/subscriptions",
      "organizations_url": "https://api.github.com/users/mrmagooey/orgs",
      "repos_url": "https://api.github.com/users/mrmagooey/repos",
      "events_url": "https://api.github.com/users/mrmagooey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mrmagooey/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-18T04:00:23Z",
    "updated_at": "2013-12-18T04:00:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "I would provide a counter viewpoint to @ellisonbg's view of the exporter/download process, I'm actually hoping that the download process will provide the abstraction necessary to not scare off new users of an IPython system. I plan to give my co-workers their first access to Python via a remote IPython notebook server and being able to provide the ability to download the pdf's without knowing the details of the underlying filesystem (or nbconvert config) would be perfect. Clicking download and then opening the file from a downloads folder feels like a well understood mechanism. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30825763",
    "html_url": "https://github.com/ipython/ipython/pull/4656#issuecomment-30825763",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4656",
    "id": 30825763,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwODI1NzYz",
    "user": {
      "login": "westurner",
      "id": 50891,
      "node_id": "MDQ6VXNlcjUwODkx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/50891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/westurner",
      "html_url": "https://github.com/westurner",
      "followers_url": "https://api.github.com/users/westurner/followers",
      "following_url": "https://api.github.com/users/westurner/following{/other_user}",
      "gists_url": "https://api.github.com/users/westurner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/westurner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/westurner/subscriptions",
      "organizations_url": "https://api.github.com/users/westurner/orgs",
      "repos_url": "https://api.github.com/users/westurner/repos",
      "events_url": "https://api.github.com/users/westurner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/westurner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-18T08:56:30Z",
    "updated_at": "2013-12-18T08:56:53Z",
    "author_association": "NONE",
    "body": "If I might help to clarify @takluyver 's patch: \n\nhttps://github.com/ipython/ipython/pull/4656/files#diff-5b7a0ba3686e1c37c317732cd6e771fdR82\n\n```\n+    (r\"/nbconvert/%s%s\" % (_format_regex, _notebook_path_regex),\n+         NbconvertFileHandler),\n+    (r\"/nbconvert/%s\" % _format_regex, NbconvertPostHandler),\n```\n\nIt looks like the url to download a PDF of a notebook from the notebook server will be something like:\n\n```\n/nbconvert/pdf/<path_to_notebook.ipynb>\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30861434",
    "html_url": "https://github.com/ipython/ipython/pull/4656#issuecomment-30861434",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4656",
    "id": 30861434,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwODYxNDM0",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-18T17:22:46Z",
    "updated_at": "2013-12-18T17:22:46Z",
    "author_association": "MEMBER",
    "body": "The URL would indeed look like that. However, at present, PDF export is done by a post-processor after Latex export, so that wouldn't work. We've been discussing restructuring it as a separate exporter in order to make that work.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30963991",
    "html_url": "https://github.com/ipython/ipython/pull/4656#issuecomment-30963991",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4656",
    "id": 30963991,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTYzOTkx",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-19T20:35:10Z",
    "updated_at": "2013-12-19T20:35:10Z",
    "author_association": "MEMBER",
    "body": "A few comments inline, but this looks really good.\n\nOne more little bit: we should check that the right tests are skipped when pandoc is unavailable.\n\nAs discussed in today's dev meeting, we may want a richer, more configurable way to use nbconvert, but this will be added to `/api/nbconvert`, not `/nbconvert` which produces for-humans pages / downloads. So I don't think adding that functionality would necessarily change how any of this works.\n"
  }
]
