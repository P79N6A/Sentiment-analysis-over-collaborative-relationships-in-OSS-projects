[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30615232",
    "html_url": "https://github.com/ipython/ipython/pull/4679#issuecomment-30615232",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4679",
    "id": 30615232,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjE1MjMy",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-15T18:27:16Z",
    "updated_at": "2013-12-15T18:27:16Z",
    "author_association": "MEMBER",
    "body": "This looks good to me.\n\nI'll just re-ask the same question that I did when the `retina` key has appeard  : what if you want jpeg double res for retina ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30615289",
    "html_url": "https://github.com/ipython/ipython/pull/4679#issuecomment-30615289",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4679",
    "id": 30615289,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjE1Mjg5",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-15T18:28:00Z",
    "updated_at": "2013-12-15T18:28:00Z",
    "author_association": "MEMBER",
    "body": "Would you like to drop a line in the what's new and the doc at the same time ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30617938",
    "html_url": "https://github.com/ipython/ipython/pull/4679#issuecomment-30617938",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4679",
    "id": 30617938,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjE3OTM4",
    "user": {
      "login": "dbarbeau",
      "id": 1106945,
      "node_id": "MDQ6VXNlcjExMDY5NDU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1106945?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dbarbeau",
      "html_url": "https://github.com/dbarbeau",
      "followers_url": "https://api.github.com/users/dbarbeau/followers",
      "following_url": "https://api.github.com/users/dbarbeau/following{/other_user}",
      "gists_url": "https://api.github.com/users/dbarbeau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dbarbeau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dbarbeau/subscriptions",
      "organizations_url": "https://api.github.com/users/dbarbeau/orgs",
      "repos_url": "https://api.github.com/users/dbarbeau/repos",
      "events_url": "https://api.github.com/users/dbarbeau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dbarbeau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-15T19:24:21Z",
    "updated_at": "2013-12-15T19:25:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't know the history behind the `retina` key but just now, I'd say it doesn't fit well in the \"figure_format\" flag. It is some sort of extra-qualifier. Maybe a syntax like `png:2x` for the figure_format option could give more flexibility:\n- `jpg:2x` for JPG Retina\n- `png:4x` for PNG Super-Retina\n\nThe `:2x` part would be optional and if absent it would be synonym of `:1x`. The `retina` key would be kept as synonym of `png:2x` but deprecated. This also avoids adding an extra flag and preserves the current behaviour so users aren't lost.\n\nWill look into docs and what's new.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30620462",
    "html_url": "https://github.com/ipython/ipython/pull/4679#issuecomment-30620462",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4679",
    "id": 30620462,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjIwNDYy",
    "user": {
      "login": "dbarbeau",
      "id": 1106945,
      "node_id": "MDQ6VXNlcjExMDY5NDU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1106945?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dbarbeau",
      "html_url": "https://github.com/dbarbeau",
      "followers_url": "https://api.github.com/users/dbarbeau/followers",
      "following_url": "https://api.github.com/users/dbarbeau/following{/other_user}",
      "gists_url": "https://api.github.com/users/dbarbeau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dbarbeau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dbarbeau/subscriptions",
      "organizations_url": "https://api.github.com/users/dbarbeau/orgs",
      "repos_url": "https://api.github.com/users/dbarbeau/repos",
      "events_url": "https://api.github.com/users/dbarbeau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dbarbeau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-15T21:11:38Z",
    "updated_at": "2013-12-15T21:11:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "I added some lines in the what's new pr directory. I didn't find a convenient place to add extra doc and found the options page was autogenerated. Any tips to where I could put more information?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30620665",
    "html_url": "https://github.com/ipython/ipython/pull/4679#issuecomment-30620665",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4679",
    "id": 30620665,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjIwNjY1",
    "user": {
      "login": "dbarbeau",
      "id": 1106945,
      "node_id": "MDQ6VXNlcjExMDY5NDU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1106945?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dbarbeau",
      "html_url": "https://github.com/dbarbeau",
      "followers_url": "https://api.github.com/users/dbarbeau/followers",
      "following_url": "https://api.github.com/users/dbarbeau/following{/other_user}",
      "gists_url": "https://api.github.com/users/dbarbeau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dbarbeau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dbarbeau/subscriptions",
      "organizations_url": "https://api.github.com/users/dbarbeau/orgs",
      "repos_url": "https://api.github.com/users/dbarbeau/repos",
      "events_url": "https://api.github.com/users/dbarbeau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dbarbeau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-15T21:19:04Z",
    "updated_at": "2013-12-15T21:19:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "Oh, I didn't implement the proposal above (`png:2x` syntax) because I think it belongs to another PR and I don't know the code well enough to be sure such a syntax wouldn't have side-effects in places expecting a simple format and receiving that sort of composite string.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30626415",
    "html_url": "https://github.com/ipython/ipython/pull/4679#issuecomment-30626415",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4679",
    "id": 30626415,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjI2NDE1",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-16T00:38:22Z",
    "updated_at": "2013-12-16T00:38:22Z",
    "author_association": "MEMBER",
    "body": "I suggest using Pillow instead of PIL... it is a fork of PIL but a lot of better and it will probably replace PIL after all...\nIf I remember correctly, you import `Image` in the same way... so you would need to changes only some references which I commented in the code above :wink: \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30626433",
    "html_url": "https://github.com/ipython/ipython/pull/4679#issuecomment-30626433",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4679",
    "id": 30626433,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjI2NDMz",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-16T00:39:17Z",
    "updated_at": "2013-12-16T00:39:17Z",
    "author_association": "MEMBER",
    "body": "Just a note: -1 to @damianavila's proposed additions of pillow to comments / docstrings.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30626893",
    "html_url": "https://github.com/ipython/ipython/pull/4679#issuecomment-30626893",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4679",
    "id": 30626893,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjI2ODkz",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-16T01:01:32Z",
    "updated_at": "2013-12-16T01:01:32Z",
    "author_association": "MEMBER",
    "body": "I'd mention Pillow in docstrings, but possibly as \"PIL/Pillow\"\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30626939",
    "html_url": "https://github.com/ipython/ipython/pull/4679#issuecomment-30626939",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4679",
    "id": 30626939,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjI2OTM5",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-16T01:04:38Z",
    "updated_at": "2013-12-16T01:08:02Z",
    "author_association": "MEMBER",
    "body": "> Just a note: -1 to @damianavila's proposed additions of pillow to comments / docstrings.\n\nand because ?\n\n> I'd mention Pillow in docstrings, but possibly as \"PIL/Pillow\"\n\nI can live with this proposal...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30652091",
    "html_url": "https://github.com/ipython/ipython/pull/4679#issuecomment-30652091",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4679",
    "id": 30652091,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjUyMDkx",
    "user": {
      "login": "dbarbeau",
      "id": 1106945,
      "node_id": "MDQ6VXNlcjExMDY5NDU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1106945?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dbarbeau",
      "html_url": "https://github.com/dbarbeau",
      "followers_url": "https://api.github.com/users/dbarbeau/followers",
      "following_url": "https://api.github.com/users/dbarbeau/following{/other_user}",
      "gists_url": "https://api.github.com/users/dbarbeau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dbarbeau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dbarbeau/subscriptions",
      "organizations_url": "https://api.github.com/users/dbarbeau/orgs",
      "repos_url": "https://api.github.com/users/dbarbeau/repos",
      "events_url": "https://api.github.com/users/dbarbeau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dbarbeau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-16T10:58:31Z",
    "updated_at": "2013-12-16T10:58:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think the PIL/Pillow import method is the same, and I'm actually using Pillow :) I can document it as PIL/Pillow, and be generic in the code by referring to it as \"python_imaging\". i really don't mind.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30654639",
    "html_url": "https://github.com/ipython/ipython/pull/4679#issuecomment-30654639",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4679",
    "id": 30654639,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjU0NjM5",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-16T11:46:09Z",
    "updated_at": "2013-12-16T11:46:09Z",
    "author_association": "MEMBER",
    "body": "> I'm actually using Pillow :) I can document it as PIL/Pillow, and be generic in the code by referring to it as \"python_imaging\".\n\nI think that mention of Pillow will save a lot of headaches to future users who don't know about this better fork of PIL... but it would be better to wait for @minrk comments about his -1 to make some of these changes, before actually doing the changes...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30684353",
    "html_url": "https://github.com/ipython/ipython/pull/4679#issuecomment-30684353",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4679",
    "id": 30684353,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjg0MzUz",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-16T18:08:11Z",
    "updated_at": "2013-12-16T18:08:11Z",
    "author_association": "MEMBER",
    "body": "I think it's okay to mention just 'PIL' in the comments, since the import is the same, and we don't need to add clutter to every comment. You need the library, it doesn't matter how you install it. Mentioning Pillow in the what's new snippet is fine, though.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30715248",
    "html_url": "https://github.com/ipython/ipython/pull/4679#issuecomment-30715248",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4679",
    "id": 30715248,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzE1MjQ4",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-17T00:18:40Z",
    "updated_at": "2013-12-17T00:18:40Z",
    "author_association": "MEMBER",
    "body": "> I think it's okay to mention just 'PIL' in the comments, since the import is the same, and we don't need to add clutter to every comment. You need the library, it doesn't matter how you install it. Mentioning Pillow in the what's new snippet is fine, though.\n\nOK, but I still would like to see a reference in the docstrings... maybe with the suggestion from @takluyver: \"PIL/Pillow\" :trollface:\nThe people read what's new once, but the source is read it a lot of times... so aiding the user with just a few words in docstrings do not seem to much to add to me... :trollface:\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30715567",
    "html_url": "https://github.com/ipython/ipython/pull/4679#issuecomment-30715567",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4679",
    "id": 30715567,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzE1NTY3",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-17T00:24:55Z",
    "updated_at": "2013-12-17T00:24:55Z",
    "author_association": "MEMBER",
    "body": "I just think adding PIL/Pillow to _every_ instance is useless clutter. At most one location seems like plenty.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30716103",
    "html_url": "https://github.com/ipython/ipython/pull/4679#issuecomment-30716103",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4679",
    "id": 30716103,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzE2MTAz",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-17T00:35:10Z",
    "updated_at": "2013-12-17T00:35:10Z",
    "author_association": "MEMBER",
    "body": "> At most one location seems like plenty.\n\nYes, but I do not think the what's new was the proper location... but, at the end, it is a little detail... and not a reason to stop the flow of this PR... :arrow_forward: :wink: \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30716713",
    "html_url": "https://github.com/ipython/ipython/pull/4679#issuecomment-30716713",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4679",
    "id": 30716713,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzE2NzEz",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-17T00:47:49Z",
    "updated_at": "2013-12-17T00:47:49Z",
    "author_association": "MEMBER",
    "body": "Sorry - by one location I meant in the code (not counting what's new). Mentioning it in the print_figure docstring and/or the traitlet help string is fine, but renaming variables as you proposed is a bit too far.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30716874",
    "html_url": "https://github.com/ipython/ipython/pull/4679#issuecomment-30716874",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4679",
    "id": 30716874,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzE2ODc0",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-17T00:50:45Z",
    "updated_at": "2013-12-17T00:50:45Z",
    "author_association": "MEMBER",
    "body": "> Mentioning it in the print_figure docstring and/or the traitlet help string is fine, but renaming variables as you proposed is a bit too far.\n\nI agree that is maybe too far to rename variables... I will be happy with\n\n> in the print_figure docstring and/or the traitlet help string\n\nGreat we have achieved a consensus, hehe... :+1: \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30717191",
    "html_url": "https://github.com/ipython/ipython/pull/4679#issuecomment-30717191",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4679",
    "id": 30717191,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzE3MTkx",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-17T00:56:30Z",
    "updated_at": "2013-12-17T00:56:30Z",
    "author_association": "MEMBER",
    "body": "Actually, let's back up for a second - why do we check for PIL anyway? matplotlib jpeg output seems to work fine without PIL.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30717595",
    "html_url": "https://github.com/ipython/ipython/pull/4679#issuecomment-30717595",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4679",
    "id": 30717595,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzE3NTk1",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-17T01:04:05Z",
    "updated_at": "2013-12-17T01:04:05Z",
    "author_association": "MEMBER",
    "body": "Nevermind - I was testing a non-agg backend. PIL is needed for jpg output with agg. Ignore me, I'm going home :).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30717668",
    "html_url": "https://github.com/ipython/ipython/pull/4679#issuecomment-30717668",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4679",
    "id": 30717668,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzE3NjY4",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-17T01:05:37Z",
    "updated_at": "2013-12-17T01:05:37Z",
    "author_association": "MEMBER",
    "body": "No problem, it is late here too ;-)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30774815",
    "html_url": "https://github.com/ipython/ipython/pull/4679#issuecomment-30774815",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4679",
    "id": 30774815,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzc0ODE1",
    "user": {
      "login": "dbarbeau",
      "id": 1106945,
      "node_id": "MDQ6VXNlcjExMDY5NDU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1106945?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dbarbeau",
      "html_url": "https://github.com/dbarbeau",
      "followers_url": "https://api.github.com/users/dbarbeau/followers",
      "following_url": "https://api.github.com/users/dbarbeau/following{/other_user}",
      "gists_url": "https://api.github.com/users/dbarbeau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dbarbeau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dbarbeau/subscriptions",
      "organizations_url": "https://api.github.com/users/dbarbeau/orgs",
      "repos_url": "https://api.github.com/users/dbarbeau/repos",
      "events_url": "https://api.github.com/users/dbarbeau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dbarbeau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-17T18:04:29Z",
    "updated_at": "2013-12-17T18:04:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, I think the latest commit addresses most (if not all) of your comments. I tried to test it the best I could but I have a few concerns : \n- its quite hard to make ipython notebook print out `warn()` or `logging.debug(...)` or even `print()`! I had to attach another frontend to the kernel and call %debug to obtain feedback upon exceptions.\n- is calling `nosetests IPython/kernel/zmq/tests` _the_ way to run tests locally?\n\nAs always any feedback is welcome!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30776269",
    "html_url": "https://github.com/ipython/ipython/pull/4679#issuecomment-30776269",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4679",
    "id": 30776269,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzc2MjY5",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-17T18:21:07Z",
    "updated_at": "2013-12-17T18:21:07Z",
    "author_association": "MEMBER",
    "body": "> its quite hard to make ipython notebook print out warn() or logging.debug(...)\n\nIf you do `%matplotlib inline`, `warn` statements will be captured in the cell (I would recommend against ever starting the notebook with `--matplotlib/pylab`, I assume that's why you can't see your messages). `logging.debug` on the other hand, will only show up (in the terminal) if you have set the log-level to debug, e.g. with `ipython notebook --debug`.\n\n> is calling nosetests IPython/kernel/zmq/tests the way to run tests locally?\n\nNo, `iptest kernel` for kernel tests.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30784072",
    "html_url": "https://github.com/ipython/ipython/pull/4679#issuecomment-30784072",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4679",
    "id": 30784072,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzg0MDcy",
    "user": {
      "login": "dbarbeau",
      "id": 1106945,
      "node_id": "MDQ6VXNlcjExMDY5NDU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1106945?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dbarbeau",
      "html_url": "https://github.com/dbarbeau",
      "followers_url": "https://api.github.com/users/dbarbeau/followers",
      "following_url": "https://api.github.com/users/dbarbeau/following{/other_user}",
      "gists_url": "https://api.github.com/users/dbarbeau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dbarbeau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dbarbeau/subscriptions",
      "organizations_url": "https://api.github.com/users/dbarbeau/orgs",
      "repos_url": "https://api.github.com/users/dbarbeau/repos",
      "events_url": "https://api.github.com/users/dbarbeau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dbarbeau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-17T19:48:12Z",
    "updated_at": "2013-12-17T19:48:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "> If you do %matplotlib inline, warn statements will be captured in the cell (I would recommend against ever starting the notebook with --matplotlib/pylab, I assume that's why you can't see your messages). logging.debug on the other hand, will only show up (in the terminal) if you have set the log-level to debug, e.g. with ipython notebook --debug\n\nI was indeed doing notebook --pylab=inline and was worried because I didn't get any errors! I tried %pylab inline which seems to work and now I do get exceptions in my cells! Thanks, and thanks for the iptest info too.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30840480",
    "html_url": "https://github.com/ipython/ipython/pull/4679#issuecomment-30840480",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4679",
    "id": 30840480,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwODQwNDgw",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-18T13:15:12Z",
    "updated_at": "2013-12-18T13:15:12Z",
    "author_association": "MEMBER",
    "body": "Looks good and test are passing. I upvote.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30856898",
    "html_url": "https://github.com/ipython/ipython/pull/4679#issuecomment-30856898",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4679",
    "id": 30856898,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwODU2ODk4",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-18T16:34:47Z",
    "updated_at": "2013-12-18T16:34:47Z",
    "author_association": "MEMBER",
    "body": "Me too :+1: \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30867942",
    "html_url": "https://github.com/ipython/ipython/pull/4679#issuecomment-30867942",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4679",
    "id": 30867942,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwODY3OTQy",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-18T18:38:38Z",
    "updated_at": "2013-12-18T18:38:38Z",
    "author_association": "MEMBER",
    "body": "> I'll rebring this issue later, but I feel like we should also allow many formater, no?\n\nYes, I think so, and it's not hard to actually do. Right now, you can:\n\n``` python\nfor fmt, mime in [('svg', 'image/svg+xml'), ('png', 'image/png'), ('jpg', 'image/jpeg')]:\n    f = ip.display_formatter.formatters[mime]\n    f.for_type(Figure, lambda fig: print_figure(fig, fmt)\n```\n\nIt's just a question of API, and the default behavior makes the most sense with only one format published. I think you proposed a 'formats' configurable, which would be a list rather than the current single string. But that's separate from this issue, which I agree is ready to go.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/31012029",
    "html_url": "https://github.com/ipython/ipython/pull/4679#issuecomment-31012029",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4679",
    "id": 31012029,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDEyMDI5",
    "user": {
      "login": "dbarbeau",
      "id": 1106945,
      "node_id": "MDQ6VXNlcjExMDY5NDU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1106945?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dbarbeau",
      "html_url": "https://github.com/dbarbeau",
      "followers_url": "https://api.github.com/users/dbarbeau/followers",
      "following_url": "https://api.github.com/users/dbarbeau/following{/other_user}",
      "gists_url": "https://api.github.com/users/dbarbeau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dbarbeau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dbarbeau/subscriptions",
      "organizations_url": "https://api.github.com/users/dbarbeau/orgs",
      "repos_url": "https://api.github.com/users/dbarbeau/repos",
      "events_url": "https://api.github.com/users/dbarbeau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dbarbeau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-20T14:19:00Z",
    "updated_at": "2013-12-20T14:19:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hello guys!\n\nI was wondering if you'd like me to rebase this. I ask because I've read that rebasing can be dangerous, but since it hasn't been merged yet I don't think it should be an issue. However, I'd like to know your opinion!\n\nThanks\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/31013266",
    "html_url": "https://github.com/ipython/ipython/pull/4679#issuecomment-31013266",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4679",
    "id": 31013266,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDEzMjY2",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-20T14:37:10Z",
    "updated_at": "2013-12-20T14:37:10Z",
    "author_association": "MEMBER",
    "body": "It merge cleanly so there is no need to rebase for now. We usually rebase only when there is a merge conflict. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/31022070",
    "html_url": "https://github.com/ipython/ipython/pull/4679#issuecomment-31022070",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4679",
    "id": 31022070,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDIyMDcw",
    "user": {
      "login": "dbarbeau",
      "id": 1106945,
      "node_id": "MDQ6VXNlcjExMDY5NDU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1106945?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dbarbeau",
      "html_url": "https://github.com/dbarbeau",
      "followers_url": "https://api.github.com/users/dbarbeau/followers",
      "following_url": "https://api.github.com/users/dbarbeau/following{/other_user}",
      "gists_url": "https://api.github.com/users/dbarbeau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dbarbeau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dbarbeau/subscriptions",
      "organizations_url": "https://api.github.com/users/dbarbeau/orgs",
      "repos_url": "https://api.github.com/users/dbarbeau/repos",
      "events_url": "https://api.github.com/users/dbarbeau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dbarbeau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-20T16:32:21Z",
    "updated_at": "2013-12-20T16:32:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK!\n\nI'm looking into adding unit tests but I don't really get how to do this for such a function. I'd like to create a code cell which creates a pylab figure and just test that the server returns a jpg if I asked it to. I don't see well how to proceed? Should start `IPython notebook` and talk HTTP directly to it?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/31027447",
    "html_url": "https://github.com/ipython/ipython/pull/4679#issuecomment-31027447",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4679",
    "id": 31027447,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDI3NDQ3",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-20T17:42:52Z",
    "updated_at": "2013-12-20T17:42:52Z",
    "author_association": "MEMBER",
    "body": "There's a test `IPython.core.tests.test_pylabtools.test_figure_to_svg` that you could base it on, and check the magic number for JPEG files. I think testing a separate process for this is probably overkill.\n"
  }
]
