[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/40286100",
    "html_url": "https://github.com/ipython/ipython/issues/5591#issuecomment-40286100",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5591",
    "id": 40286100,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjg2MTAw",
    "user": {
      "login": "juhasch",
      "id": 2445216,
      "node_id": "MDQ6VXNlcjI0NDUyMTY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2445216?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/juhasch",
      "html_url": "https://github.com/juhasch",
      "followers_url": "https://api.github.com/users/juhasch/followers",
      "following_url": "https://api.github.com/users/juhasch/following{/other_user}",
      "gists_url": "https://api.github.com/users/juhasch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/juhasch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/juhasch/subscriptions",
      "organizations_url": "https://api.github.com/users/juhasch/orgs",
      "repos_url": "https://api.github.com/users/juhasch/repos",
      "events_url": "https://api.github.com/users/juhasch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/juhasch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-12T17:17:22Z",
    "updated_at": "2014-04-12T17:17:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "From https://github.com/ipython/ipython/issues/5532:\nYou can add this line to your `custom.js` file:\n\n``` Javascript\nIPython.security.sanitize_html = function (html) { return html; };\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/40322921",
    "html_url": "https://github.com/ipython/ipython/issues/5591#issuecomment-40322921",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5591",
    "id": 40322921,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzIyOTIx",
    "user": {
      "login": "psychemedia",
      "id": 82988,
      "node_id": "MDQ6VXNlcjgyOTg4",
      "avatar_url": "https://avatars0.githubusercontent.com/u/82988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/psychemedia",
      "html_url": "https://github.com/psychemedia",
      "followers_url": "https://api.github.com/users/psychemedia/followers",
      "following_url": "https://api.github.com/users/psychemedia/following{/other_user}",
      "gists_url": "https://api.github.com/users/psychemedia/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/psychemedia/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/psychemedia/subscriptions",
      "organizations_url": "https://api.github.com/users/psychemedia/orgs",
      "repos_url": "https://api.github.com/users/psychemedia/repos",
      "events_url": "https://api.github.com/users/psychemedia/events{/privacy}",
      "received_events_url": "https://api.github.com/users/psychemedia/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-13T23:00:30Z",
    "updated_at": "2014-04-13T23:00:30Z",
    "author_association": "NONE",
    "body": "@juhasch Thanks.. I'm absolutely at the limit of my skills trying to build a virtual machine to run these notebooks. So in the VM provisioning script, do I now need to work out where the ipython profile is in the VM, create some directory paths and a custom.js file, populate the custom.js file appropriately, and then... it should work?\nIs there documentation anywhere about locating/defining custom.js files? \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/40397101",
    "html_url": "https://github.com/ipython/ipython/issues/5591#issuecomment-40397101",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5591",
    "id": 40397101,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzk3MTAx",
    "user": {
      "login": "juhasch",
      "id": 2445216,
      "node_id": "MDQ6VXNlcjI0NDUyMTY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2445216?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/juhasch",
      "html_url": "https://github.com/juhasch",
      "followers_url": "https://api.github.com/users/juhasch/followers",
      "following_url": "https://api.github.com/users/juhasch/following{/other_user}",
      "gists_url": "https://api.github.com/users/juhasch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/juhasch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/juhasch/subscriptions",
      "organizations_url": "https://api.github.com/users/juhasch/orgs",
      "repos_url": "https://api.github.com/users/juhasch/repos",
      "events_url": "https://api.github.com/users/juhasch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/juhasch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-14T17:56:11Z",
    "updated_at": "2014-04-14T17:56:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "You can locate the default profile using `ipython locate profile`. There should be a default `static/custom/custom.js` file. \nFor documentation look here: http://ipython.org/ipython-doc/stable/config/intro.html#profiles\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/45169325",
    "html_url": "https://github.com/ipython/ipython/issues/5591#issuecomment-45169325",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5591",
    "id": 45169325,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTY5MzI1",
    "user": {
      "login": "psychemedia",
      "id": 82988,
      "node_id": "MDQ6VXNlcjgyOTg4",
      "avatar_url": "https://avatars0.githubusercontent.com/u/82988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/psychemedia",
      "html_url": "https://github.com/psychemedia",
      "followers_url": "https://api.github.com/users/psychemedia/followers",
      "following_url": "https://api.github.com/users/psychemedia/following{/other_user}",
      "gists_url": "https://api.github.com/users/psychemedia/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/psychemedia/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/psychemedia/subscriptions",
      "organizations_url": "https://api.github.com/users/psychemedia/orgs",
      "repos_url": "https://api.github.com/users/psychemedia/repos",
      "events_url": "https://api.github.com/users/psychemedia/events{/privacy}",
      "received_events_url": "https://api.github.com/users/psychemedia/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-05T00:37:11Z",
    "updated_at": "2014-06-05T00:37:11Z",
    "author_association": "NONE",
    "body": "@juhasch What creates the .ipython/profile_default/static/custom/custom.js ? If I change that file, eg running something like:\n\n```\n#Really should autodetect the path using ipython locate profile\nExec{\n    'ipynb_customjs':\n    command => '!sed -i \"$a IPython.security.sanitize_html = function (html) { return html;} \" /root/.ipython/profile_default/static/custom/custom.js';\n  }\n```\n\nfrom my vagrant/puppet provisioner, I need to ensure that the file exists before I try to modify it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/45414201",
    "html_url": "https://github.com/ipython/ipython/issues/5591#issuecomment-45414201",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5591",
    "id": 45414201,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDE0MjAx",
    "user": {
      "login": "juhasch",
      "id": 2445216,
      "node_id": "MDQ6VXNlcjI0NDUyMTY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2445216?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/juhasch",
      "html_url": "https://github.com/juhasch",
      "followers_url": "https://api.github.com/users/juhasch/followers",
      "following_url": "https://api.github.com/users/juhasch/following{/other_user}",
      "gists_url": "https://api.github.com/users/juhasch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/juhasch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/juhasch/subscriptions",
      "organizations_url": "https://api.github.com/users/juhasch/orgs",
      "repos_url": "https://api.github.com/users/juhasch/repos",
      "events_url": "https://api.github.com/users/juhasch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/juhasch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-07T16:19:31Z",
    "updated_at": "2014-06-07T16:19:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "@psychemedia This is in the documentation:\n`ipython profile create default` creates the default profile.\nHowever, it would be **much** better if you would use an extension like this\nhttps://github.com/ipython-contrib/IPython-notebook-extensions/tree/master/usability/hide_input\ninstead of disabling security.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/45431348",
    "html_url": "https://github.com/ipython/ipython/issues/5591#issuecomment-45431348",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5591",
    "id": 45431348,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDMxMzQ4",
    "user": {
      "login": "psychemedia",
      "id": 82988,
      "node_id": "MDQ6VXNlcjgyOTg4",
      "avatar_url": "https://avatars0.githubusercontent.com/u/82988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/psychemedia",
      "html_url": "https://github.com/psychemedia",
      "followers_url": "https://api.github.com/users/psychemedia/followers",
      "following_url": "https://api.github.com/users/psychemedia/following{/other_user}",
      "gists_url": "https://api.github.com/users/psychemedia/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/psychemedia/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/psychemedia/subscriptions",
      "organizations_url": "https://api.github.com/users/psychemedia/orgs",
      "repos_url": "https://api.github.com/users/psychemedia/repos",
      "events_url": "https://api.github.com/users/psychemedia/events{/privacy}",
      "received_events_url": "https://api.github.com/users/psychemedia/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-08T08:23:00Z",
    "updated_at": "2014-06-08T08:23:00Z",
    "author_association": "NONE",
    "body": "@juhasch So to recap:  what I want is the ability for a user to click a button and have an answer revealed. My original solution was a simple <script>ed javascript button to implement this but IPython Notebook update broke that in update. Quick fix was suggestion to nullify the security.sanitize_html method. New suggestion is to create presumably a hide/reveal extension based on other examples such as hide_input (is there a human readable description of what that extension does anywhere?)\n\nApols for being so slow, this is just one of multiple implementation jigsaw pieces I am trying to juggle at the moment and all of them are distractions from what I should be doing (which is writing teaching content that will use these features)!;-)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/45440416",
    "html_url": "https://github.com/ipython/ipython/issues/5591#issuecomment-45440416",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5591",
    "id": 45440416,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDQwNDE2",
    "user": {
      "login": "juhasch",
      "id": 2445216,
      "node_id": "MDQ6VXNlcjI0NDUyMTY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2445216?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/juhasch",
      "html_url": "https://github.com/juhasch",
      "followers_url": "https://api.github.com/users/juhasch/followers",
      "following_url": "https://api.github.com/users/juhasch/following{/other_user}",
      "gists_url": "https://api.github.com/users/juhasch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/juhasch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/juhasch/subscriptions",
      "organizations_url": "https://api.github.com/users/juhasch/orgs",
      "repos_url": "https://api.github.com/users/juhasch/repos",
      "events_url": "https://api.github.com/users/juhasch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/juhasch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-08T15:54:02Z",
    "updated_at": "2014-06-08T15:54:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "I understand this, it is just not solution for the future.\nCan't you just use something like this (I don't claim this to be perfect):\n\nFile `answer_button.js`: https://gist.github.com/juhasch/2332190e19eb6276bed3\n\nIn your `custom.js` file add:\n\n``` javascript\n$([IPython.events]).on('app_initialized.NotebookApp', function(){\n  require(['custom/answer_buttons'])\n});\n```\n\nAnd in your HTML in markdown, just add `class=\"answer\"`\n\n``` HTML\n<div class=\"answer\" id=\"ans2\" style=\"display: none\">\nI can see several ways of generating common identifiers:\n...\n```\n\nWhenever you load or reload your notebook (or press the toolbar button created by the extension), this will generate your answer buttons.\n"
  }
]
