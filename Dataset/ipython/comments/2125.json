[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6927968",
    "html_url": "https://github.com/ipython/ipython/issues/2125#issuecomment-6927968",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2125",
    "id": 6927968,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5Mjc5Njg=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-12T06:29:57Z",
    "updated_at": "2012-07-12T06:29:57Z",
    "author_association": "MEMBER",
    "body": "I think a new cell type is not the right approach (there is a high cost to adding one). A property of CodeCells is probably more appropriate, or you can right now put code in markdown cells, and it will be highlighted.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6930112",
    "html_url": "https://github.com/ipython/ipython/issues/2125#issuecomment-6930112",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2125",
    "id": 6930112,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MzAxMTI=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-12T08:55:15Z",
    "updated_at": "2012-07-12T08:55:15Z",
    "author_association": "MEMBER",
    "body": "Also, don't forget that changing cell type clear undo history.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6941147",
    "html_url": "https://github.com/ipython/ipython/issues/2125#issuecomment-6941147",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2125",
    "id": 6941147,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDExNDc=",
    "user": {
      "login": "MrCreosote",
      "id": 1686141,
      "node_id": "MDQ6VXNlcjE2ODYxNDE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1686141?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MrCreosote",
      "html_url": "https://github.com/MrCreosote",
      "followers_url": "https://api.github.com/users/MrCreosote/followers",
      "following_url": "https://api.github.com/users/MrCreosote/following{/other_user}",
      "gists_url": "https://api.github.com/users/MrCreosote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MrCreosote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MrCreosote/subscriptions",
      "organizations_url": "https://api.github.com/users/MrCreosote/orgs",
      "repos_url": "https://api.github.com/users/MrCreosote/repos",
      "events_url": "https://api.github.com/users/MrCreosote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MrCreosote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-12T17:04:10Z",
    "updated_at": "2012-07-12T17:04:10Z",
    "author_association": "NONE",
    "body": "Sorry, over-specified my request. s/type/behavior/ on the OP.\n\nI prefer raw text as a workaround because you can cntl-m t and the code is still legible and cntl-m y restores it. To make code legible in markdown requires editing the code cell (unless there's some trick I'm unaware of).\n\nLike my other request, this is very much a nicety and not particularly important.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6942138",
    "html_url": "https://github.com/ipython/ipython/issues/2125#issuecomment-6942138",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2125",
    "id": 6942138,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDIxMzg=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-12T17:40:16Z",
    "updated_at": "2012-07-12T17:40:16Z",
    "author_association": "MEMBER",
    "body": "We can try to provide different type of highlighting in raw-cell, that shouldn't be to hard.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6942390",
    "html_url": "https://github.com/ipython/ipython/issues/2125#issuecomment-6942390",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2125",
    "id": 6942390,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDIzOTA=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-12T17:49:31Z",
    "updated_at": "2012-07-12T17:49:31Z",
    "author_association": "MEMBER",
    "body": "If I remember correctly, prettify, which we are using to highlight literal blocks in markdown cells, tries to autodetect languages.  Perhaps we should be applying that to raw cells.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6942420",
    "html_url": "https://github.com/ipython/ipython/issues/2125#issuecomment-6942420",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2125",
    "id": 6942420,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDI0MjA=",
    "user": {
      "login": "MrCreosote",
      "id": 1686141,
      "node_id": "MDQ6VXNlcjE2ODYxNDE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1686141?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MrCreosote",
      "html_url": "https://github.com/MrCreosote",
      "followers_url": "https://api.github.com/users/MrCreosote/followers",
      "following_url": "https://api.github.com/users/MrCreosote/following{/other_user}",
      "gists_url": "https://api.github.com/users/MrCreosote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MrCreosote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MrCreosote/subscriptions",
      "organizations_url": "https://api.github.com/users/MrCreosote/orgs",
      "repos_url": "https://api.github.com/users/MrCreosote/repos",
      "events_url": "https://api.github.com/users/MrCreosote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MrCreosote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-12T17:50:23Z",
    "updated_at": "2012-07-12T17:50:23Z",
    "author_association": "NONE",
    "body": "I would guess that having something like a CodeCell.isActive boolean property (as per minrk's post) that's settable by the menu & keyboard shortcuts where False means the cell's contents aren't evaluated would be easier than adding code highlighting to the raw text cells. That being said, I don't want to specify the solution, so however you choose to do it (if you do choose to spend time on a low priority feature such as this) is fine with me.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6942650",
    "html_url": "https://github.com/ipython/ipython/issues/2125#issuecomment-6942650",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2125",
    "id": 6942650,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDI2NTA=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-12T17:58:14Z",
    "updated_at": "2012-07-12T17:58:14Z",
    "author_association": "MEMBER",
    "body": "I would go for highlighting raw cell, preventing execution would be brittle, and highlighting can support many languages.\nMoreover it makes the raw-cell more usefull.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6942985",
    "html_url": "https://github.com/ipython/ipython/issues/2125#issuecomment-6942985",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2125",
    "id": 6942985,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDI5ODU=",
    "user": {
      "login": "MrCreosote",
      "id": 1686141,
      "node_id": "MDQ6VXNlcjE2ODYxNDE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1686141?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MrCreosote",
      "html_url": "https://github.com/MrCreosote",
      "followers_url": "https://api.github.com/users/MrCreosote/followers",
      "following_url": "https://api.github.com/users/MrCreosote/following{/other_user}",
      "gists_url": "https://api.github.com/users/MrCreosote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MrCreosote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MrCreosote/subscriptions",
      "organizations_url": "https://api.github.com/users/MrCreosote/orgs",
      "repos_url": "https://api.github.com/users/MrCreosote/repos",
      "events_url": "https://api.github.com/users/MrCreosote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MrCreosote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-12T18:10:20Z",
    "updated_at": "2012-07-12T18:10:20Z",
    "author_association": "NONE",
    "body": "The other point I forgot to mention is from your prior post - apparently when you switch between text and code cells you lose the undo history. Whether this is worse than the drawbacks you note above I don't know.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6943391",
    "html_url": "https://github.com/ipython/ipython/issues/2125#issuecomment-6943391",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2125",
    "id": 6943391,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDMzOTE=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-12T18:25:41Z",
    "updated_at": "2012-07-12T18:25:41Z",
    "author_association": "MEMBER",
    "body": "Well nothing prevent from dooing both, right now, the raw cell have an `rst` highlighting mode.\nCodecell have a `readonly` flag that does not work (used for readonly notebook/printview and should also prevent editting, so not the same).\n\nI would vote for having a way to overwrite the highlighting mode in the class `cell.js` so that every XXXcell that inherit from it can get the hability to change theirs highlighting, and store the value in cell metadata. This would be also usefull for cellmagics like `%%ruby`, `%%R` <del>or `%%Pyton`</del> ...\n\nThought ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6952055",
    "html_url": "https://github.com/ipython/ipython/issues/2125#issuecomment-6952055",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2125",
    "id": 6952055,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NTIwNTU=",
    "user": {
      "login": "MrCreosote",
      "id": 1686141,
      "node_id": "MDQ6VXNlcjE2ODYxNDE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1686141?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MrCreosote",
      "html_url": "https://github.com/MrCreosote",
      "followers_url": "https://api.github.com/users/MrCreosote/followers",
      "following_url": "https://api.github.com/users/MrCreosote/following{/other_user}",
      "gists_url": "https://api.github.com/users/MrCreosote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MrCreosote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MrCreosote/subscriptions",
      "organizations_url": "https://api.github.com/users/MrCreosote/orgs",
      "repos_url": "https://api.github.com/users/MrCreosote/repos",
      "events_url": "https://api.github.com/users/MrCreosote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MrCreosote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-13T00:58:20Z",
    "updated_at": "2012-07-13T00:58:20Z",
    "author_association": "NONE",
    "body": "Not sure if you're addressing that at minrk or me; assuming the latter, I'm afraid I've only been using IPy for a couple of weeks now and I'm not familiar enough with IPy (let alone the code) to fully understand your proposal. \n\nThat being said, I **think** you're proposing that 1) raw text cells be upgraded to prettify code, and 2) undo history isn't zapped when converting between cell types. That sounds great to me. \n\nIf that's not what you're proposing, I'm afraid I'll need clarification before I can comment usefully.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6961541",
    "html_url": "https://github.com/ipython/ipython/issues/2125#issuecomment-6961541",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2125",
    "id": 6961541,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NjE1NDE=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-13T12:24:38Z",
    "updated_at": "2012-07-13T12:24:38Z",
    "author_association": "MEMBER",
    "body": "Sorry, it might have not bean really clear. \n\nActual state : \n- Codecell have already a read-only attribute that does not work.\n  - it is used for print view, and was ment to prevent both executing and editting.\n- RawCell already have an highlighting mode enabled (rst).\n\nFuture : \n- Keeping history when changing cell type is something we want, but nos easy / separate issue.\n- I propose of adding a way to change highlighting mode to the common ancestor of all cell, so that user can change \n  the highlighting at will, hence for raw text cell, but also for code cell, MD cell ...whatever. I'm thinking of this because one might want to use `R` highlighting in a code cell with `%%R` cell magic, or `ruby` for `%%ruby`...\n\nI'm not sure about prettify because then the rawcell have to be `renderd`... and I think we wish to keep raw-cell...raw and have highlighting at writing time.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6965266",
    "html_url": "https://github.com/ipython/ipython/issues/2125#issuecomment-6965266",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2125",
    "id": 6965266,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NjUyNjY=",
    "user": {
      "login": "MrCreosote",
      "id": 1686141,
      "node_id": "MDQ6VXNlcjE2ODYxNDE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1686141?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MrCreosote",
      "html_url": "https://github.com/MrCreosote",
      "followers_url": "https://api.github.com/users/MrCreosote/followers",
      "following_url": "https://api.github.com/users/MrCreosote/following{/other_user}",
      "gists_url": "https://api.github.com/users/MrCreosote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MrCreosote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MrCreosote/subscriptions",
      "organizations_url": "https://api.github.com/users/MrCreosote/orgs",
      "repos_url": "https://api.github.com/users/MrCreosote/repos",
      "events_url": "https://api.github.com/users/MrCreosote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MrCreosote/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-13T14:57:55Z",
    "updated_at": "2012-07-13T14:57:55Z",
    "author_association": "NONE",
    "body": "These all sound like implementation decisions to me, and as such I don't feel as if I understand the code well enough to provide intelligent comments as yet.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17436720",
    "html_url": "https://github.com/ipython/ipython/issues/2125#issuecomment-17436720",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2125",
    "id": 17436720,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NDM2NzIw",
    "user": {
      "login": "ronenabr",
      "id": 4340718,
      "node_id": "MDQ6VXNlcjQzNDA3MTg=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4340718?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ronenabr",
      "html_url": "https://github.com/ronenabr",
      "followers_url": "https://api.github.com/users/ronenabr/followers",
      "following_url": "https://api.github.com/users/ronenabr/following{/other_user}",
      "gists_url": "https://api.github.com/users/ronenabr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ronenabr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ronenabr/subscriptions",
      "organizations_url": "https://api.github.com/users/ronenabr/orgs",
      "repos_url": "https://api.github.com/users/ronenabr/repos",
      "events_url": "https://api.github.com/users/ronenabr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ronenabr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-04T16:09:56Z",
    "updated_at": "2013-05-04T16:09:56Z",
    "author_association": "NONE",
    "body": "I would like to remark one thing:\n\nI have a similar problem (I want to mark cell code as inactive) but I want do that after the code already ran and produced outputs (text, plots, etc.)\n\nIn the \"mark cell as raw text\" the output dose not saved. Will it save when the cell added read-only attribute?\n\nThanks,\nRonen\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21901678",
    "html_url": "https://github.com/ipython/ipython/issues/2125#issuecomment-21901678",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2125",
    "id": 21901678,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTAxNjc4",
    "user": {
      "login": "samuela",
      "id": 226872,
      "node_id": "MDQ6VXNlcjIyNjg3Mg==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/226872?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/samuela",
      "html_url": "https://github.com/samuela",
      "followers_url": "https://api.github.com/users/samuela/followers",
      "following_url": "https://api.github.com/users/samuela/following{/other_user}",
      "gists_url": "https://api.github.com/users/samuela/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/samuela/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/samuela/subscriptions",
      "organizations_url": "https://api.github.com/users/samuela/orgs",
      "repos_url": "https://api.github.com/users/samuela/repos",
      "events_url": "https://api.github.com/users/samuela/events{/privacy}",
      "received_events_url": "https://api.github.com/users/samuela/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-31T22:41:31Z",
    "updated_at": "2013-07-31T22:41:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "I find myself continually wishing for this feature.\n\nI would also definitely vote for adding an `isActive` attribute to CodeCells instead of hacking together something with RawCells. When I was rewriting the Sage Notebook frontend I was faced with a similar choice and opted for this implementation mainly because it more accurately reflects what I envision disabled code cells being: exactly that, code cells. Users expect disabled code cells to behave exactly like normal code cells except that they are disabled and using an `isActive` attribute has the advantage of giving us all of that behavior for free. Using raw cells requires adding a bunch of hacks to make them behave more like code cells.\n\nRegardless of implementation however, I think hiding cell contents and/or input of disabled code cells would be very helpful.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21909448",
    "html_url": "https://github.com/ipython/ipython/issues/2125#issuecomment-21909448",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2125",
    "id": 21909448,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTA5NDQ4",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-01T02:00:29Z",
    "updated_at": "2013-08-01T02:00:29Z",
    "author_association": "MEMBER",
    "body": "On 5/4/13 9:09 AM, ronenabr wrote:\n\n> I would like to remark one thing:\n> \n> I have a similar problem (I want to mark cell code as inactive) but I\n> want do that after the code already ran and produced outputs (text,\n> plots, etc.)\n> \n> In the \"mark cell as raw text\" the output dose not saved. Will it save\n> when the cell added read-only attribute?\n\nA cell decorator seems like a great solution here; one that basically \njust throws away the code.\n\n%%inactive\n\nwhatever code\n\n-> executing the cell will do nothing.\n\nThanks,\n\nJason\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21946707",
    "html_url": "https://github.com/ipython/ipython/issues/2125#issuecomment-21946707",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2125",
    "id": 21946707,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTQ2NzA3",
    "user": {
      "login": "samuela",
      "id": 226872,
      "node_id": "MDQ6VXNlcjIyNjg3Mg==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/226872?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/samuela",
      "html_url": "https://github.com/samuela",
      "followers_url": "https://api.github.com/users/samuela/followers",
      "following_url": "https://api.github.com/users/samuela/following{/other_user}",
      "gists_url": "https://api.github.com/users/samuela/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/samuela/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/samuela/subscriptions",
      "organizations_url": "https://api.github.com/users/samuela/orgs",
      "repos_url": "https://api.github.com/users/samuela/repos",
      "events_url": "https://api.github.com/users/samuela/events{/privacy}",
      "received_events_url": "https://api.github.com/users/samuela/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-01T15:52:56Z",
    "updated_at": "2013-08-01T15:52:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "+1 for @jasongrout's `%%inactive` idea.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22123309",
    "html_url": "https://github.com/ipython/ipython/issues/2125#issuecomment-22123309",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2125",
    "id": 22123309,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMTIzMzA5",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-05T17:46:45Z",
    "updated_at": "2013-08-05T17:46:45Z",
    "author_association": "MEMBER",
    "body": "> I would also definitely vote for adding an isActive attribute to CodeCells instead of hacking together something with RawCells.\n\nRaw cell have a specific purpose which is to go untouch to nbconvert, they are not ment to be hacked to more or less behave like raw cells.\n\n> When I was rewriting the Sage Notebook frontend I was faced with a similar choice and opted for this implementation mainly because it more accurately reflects what I envision disabled code cells being: exactly that, code cells. Users expect disabled code cells to behave exactly like normal code cells except that they are disabled and using an isActive attribute has the advantage of giving us all of that behavior for free. Using raw cells requires adding a bunch of hacks to make them behave more like code cells.\n\nAnd this is exactly why code cell have arbitrary metadata. CodeMirror support read-only, and it is not hard to have a js-extension that add a read-only field to the metadata and disable the execute action of this cell. It would be really easy like [this](https://github.com/ipython-contrib/IPython-notebook-extensions/blob/master/no_exec_dunder.js) with only slight modifications.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56467560",
    "html_url": "https://github.com/ipython/ipython/issues/2125#issuecomment-56467560",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2125",
    "id": 56467560,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NDY3NTYw",
    "user": {
      "login": "jlstevens",
      "id": 890576,
      "node_id": "MDQ6VXNlcjg5MDU3Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890576?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jlstevens",
      "html_url": "https://github.com/jlstevens",
      "followers_url": "https://api.github.com/users/jlstevens/followers",
      "following_url": "https://api.github.com/users/jlstevens/following{/other_user}",
      "gists_url": "https://api.github.com/users/jlstevens/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jlstevens/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jlstevens/subscriptions",
      "organizations_url": "https://api.github.com/users/jlstevens/orgs",
      "repos_url": "https://api.github.com/users/jlstevens/repos",
      "events_url": "https://api.github.com/users/jlstevens/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jlstevens/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-23T01:38:48Z",
    "updated_at": "2014-09-23T01:39:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "This `%%inactive` magic doesn't prevent the display data from being destroyed when the cell is executed.\n\nPersonally, I am hoping for a magic (or otherwise) that skips cells without disrupting display data.\n"
  }
]
