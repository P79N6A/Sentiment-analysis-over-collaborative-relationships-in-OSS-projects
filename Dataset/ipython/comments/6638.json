[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/58119406",
    "html_url": "https://github.com/ipython/ipython/pull/6638#issuecomment-58119406",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6638",
    "id": 58119406,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MTE5NDA2",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-07T00:11:17Z",
    "updated_at": "2014-10-07T00:11:17Z",
    "author_association": "MEMBER",
    "body": "https://github.com/ipython/ipython-components/pull/32\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/58122328",
    "html_url": "https://github.com/ipython/ipython/pull/6638#issuecomment-58122328",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6638",
    "id": 58122328,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MTIyMzI4",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-07T00:50:11Z",
    "updated_at": "2014-10-07T00:50:11Z",
    "author_association": "MEMBER",
    "body": "BUG: it creates a new input area on every click of the filter button:\n\n![screen shot 2014-10-06 at 17 48 10](https://cloud.githubusercontent.com/assets/151929/4535839/c0887d9a-4dbb-11e4-9bee-6d1f1cf82eef.PNG)\n\nIt should prohibit tags with commas, and possibly also tags with spaces:\n\n![screen shot 2014-10-06 at 17 48 21](https://cloud.githubusercontent.com/assets/151929/4535848/d87fa28e-4dbb-11e4-87c2-d75ca9441d8a.PNG)\n\nWhat is the filter supposed to do? For me, it does nothing at all.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/58133051",
    "html_url": "https://github.com/ipython/ipython/pull/6638#issuecomment-58133051",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6638",
    "id": 58133051,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MTMzMDUx",
    "user": {
      "login": "jhamrick",
      "id": 83444,
      "node_id": "MDQ6VXNlcjgzNDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/83444?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jhamrick",
      "html_url": "https://github.com/jhamrick",
      "followers_url": "https://api.github.com/users/jhamrick/followers",
      "following_url": "https://api.github.com/users/jhamrick/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhamrick/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jhamrick/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhamrick/subscriptions",
      "organizations_url": "https://api.github.com/users/jhamrick/orgs",
      "repos_url": "https://api.github.com/users/jhamrick/repos",
      "events_url": "https://api.github.com/users/jhamrick/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jhamrick/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-07T03:51:14Z",
    "updated_at": "2014-10-07T03:51:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "Oooh, this is super cool! I have a few more comments...\n- Suggestions seem to show up behind the text of the cell below (this only seems to happen with code cells, I think?):\n\n![image](https://cloud.githubusercontent.com/assets/83444/4537066/052c0f3a-4dd4-11e4-9e4d-9371892ee30d.png)\n- The filter also does nothing for me.\n- If there are multiple cells with the same tag, the tag shows up twice in suggestions:\n\n![image](https://cloud.githubusercontent.com/assets/83444/4537097/959ae244-4dd4-11e4-822c-c196479341dc.png)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/58183303",
    "html_url": "https://github.com/ipython/ipython/pull/6638#issuecomment-58183303",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6638",
    "id": 58183303,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MTgzMzAz",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-07T13:26:25Z",
    "updated_at": "2014-10-07T13:26:25Z",
    "author_association": "MEMBER",
    "body": "pinging also @juhasch, who I think will be very interested and maybe use some of these machinery in his extensions...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/58186339",
    "html_url": "https://github.com/ipython/ipython/pull/6638#issuecomment-58186339",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6638",
    "id": 58186339,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MTg2MzM5",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-07T13:47:50Z",
    "updated_at": "2014-10-07T13:47:50Z",
    "author_association": "MEMBER",
    "body": "IMHO, the tagging where you have to type on each cell is not practical, I would have a main interface where you can edit the global list of tag, and then just a checkbox for the tag you want to add/remove. a bit like the github UI. But it's just an idea.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/58215752",
    "html_url": "https://github.com/ipython/ipython/pull/6638#issuecomment-58215752",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6638",
    "id": 58215752,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MjE1NzUy",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-07T16:43:16Z",
    "updated_at": "2014-10-07T16:43:16Z",
    "author_association": "MEMBER",
    "body": "Wow thanks for the quick review guys.  I've just pushed a fix for the tag filter and fixes for the other comments.\n\n@minrk :\n\n> Why does this toolbar have a unique signature for register?\n\nI changed it so it looks like the others now.\n\n> BUG: it creates a new input area on every click of the filter button:\n\nFixed\n\n> It should prohibit tags with commas, and possibly also tags with spaces:\n\nOkay, I added a function that prohibits space characters and commas.\n\n> What is the filter supposed to do? For me, it does nothing at all.\n\nIt was broken after a rebase, it should be fixed now.  You should be able to type a cell filtering expression.  Pressing return will execute your filter.  Filter expressions support `and`, `or`, `not`, and parenthesis.  `cell.cell_type` is treated as a tag too, so you can also filter by cell type.  i.e. `not difficult and code` will show code cells that don't have a `difficult` tag.\n\n@jhamrick :\n\n> Suggestions seem to show up behind the text of the cell below (this only seems to happen with code cells, I think?):\n\nFixed\n\n> If there are multiple cells with the same tag, the tag shows up twice in suggestions:\n\nFixed\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/58218787",
    "html_url": "https://github.com/ipython/ipython/pull/6638#issuecomment-58218787",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6638",
    "id": 58218787,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MjE4Nzg3",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-07T16:59:42Z",
    "updated_at": "2014-10-07T16:59:42Z",
    "author_association": "MEMBER",
    "body": "Temporarily broken because I rebased the components branch on top of master which has CM 4.  I'll have to rebase this on top of @Carreau 's CM PR.  I'll ping back when this is done.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/58224975",
    "html_url": "https://github.com/ipython/ipython/pull/6638#issuecomment-58224975",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6638",
    "id": 58224975,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MjI0OTc1",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-07T17:34:05Z",
    "updated_at": "2014-10-07T17:34:05Z",
    "author_association": "MEMBER",
    "body": "I decided against rebasing on top of @Carreau 's CM4 PR for now, so this is no longer broken.  Test away :)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/58272353",
    "html_url": "https://github.com/ipython/ipython/pull/6638#issuecomment-58272353",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6638",
    "id": 58272353,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MjcyMzUz",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-07T22:18:18Z",
    "updated_at": "2014-10-07T22:19:45Z",
    "author_association": "MEMBER",
    "body": "@jhamrick I think you accidentally put your comment in the accompanying compents PR instead of here.  I'll respond here:\n\n> After you click the filter button, it expands; if you click it again, it collapses, and then can't be expaned again.\n\nCan you try again with the latest ( 86d4f91 ) ?  I can't replicate this.  Are any errors printing to the JS console?\n\n> If you start typing in the cell tags area and then click out of the area (or press tab), the tag doesn't get rendered. My expectation is that anything typed into the tags area should become a tag if focus leaves the tags area?\n\nI'm not sure bootstrap-tags supports this, but I could probably add something so on blur the current text gets added as a tag.\n\n> Is the idea with filtering to be just visual\n\nIt was intended to be just visual, but you bring up a good point.  It may make sense to modify run all so only cells that are display != 'none' get ran.  @jasongrout opinion?\n\n> If the cursor is in the cell tags area and you press up/down, it does not cause the next/previous cell to be selected (which is what I would have expected). It seems the only way to get out of the tags area via the keyboard is to press \"tab\", which will move you into the text of the cell if it's a code cell, or to the tags area of the next cell. So if you wanted to go to a previous cell, you would have to do n tabs, escape, then n ups = 2n + 1 key presses, or use the mouse.\n\nThis is something I will add a handler for manually.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/58272749",
    "html_url": "https://github.com/ipython/ipython/pull/6638#issuecomment-58272749",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6638",
    "id": 58272749,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MjcyNzQ5",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-07T22:21:43Z",
    "updated_at": "2014-10-07T22:21:43Z",
    "author_association": "MEMBER",
    "body": "Another question: Should the filter be persist through download as?  If so, it should probably be in a separate PR which would add nbconvert support for cherry picking.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/58273781",
    "html_url": "https://github.com/ipython/ipython/pull/6638#issuecomment-58273781",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6638",
    "id": 58273781,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MjczNzgx",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-07T22:31:01Z",
    "updated_at": "2014-10-07T22:31:01Z",
    "author_association": "MEMBER",
    "body": "@jdfreder it looks like Travis is breaking on the submodule. I think you need to push your branch in components to the `ipython/ipython-components` repo (don't merge, just `git push ipython tagging`), so that Travis can see it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/58274430",
    "html_url": "https://github.com/ipython/ipython/pull/6638#issuecomment-58274430",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6638",
    "id": 58274430,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4Mjc0NDMw",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-07T22:37:20Z",
    "updated_at": "2014-10-07T22:37:20Z",
    "author_association": "MEMBER",
    "body": "> @jdfreder it looks like Travis is breaking on the submodule. I think you need to push your branch in components to the ipython/ipython-components repo (don't merge, just git push ipython tagging), so that Travis can see it.\n\nAh I was wondering why I say branches != 'master' in that repo, that explains why...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/58275935",
    "html_url": "https://github.com/ipython/ipython/pull/6638#issuecomment-58275935",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6638",
    "id": 58275935,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4Mjc1OTM1",
    "user": {
      "login": "jhamrick",
      "id": 83444,
      "node_id": "MDQ6VXNlcjgzNDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/83444?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jhamrick",
      "html_url": "https://github.com/jhamrick",
      "followers_url": "https://api.github.com/users/jhamrick/followers",
      "following_url": "https://api.github.com/users/jhamrick/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhamrick/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jhamrick/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhamrick/subscriptions",
      "organizations_url": "https://api.github.com/users/jhamrick/orgs",
      "repos_url": "https://api.github.com/users/jhamrick/repos",
      "events_url": "https://api.github.com/users/jhamrick/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jhamrick/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-07T22:51:56Z",
    "updated_at": "2014-10-07T22:51:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "Oops! Sorry about that.\n\nThe error with the filtering box does still seem to occur on 86d4f91 :\n\n![Imgur](http://i.imgur.com/jshJio6.gif)\n\nFrom the js console, it looks like it's still throwing the same `TypeError` on line 206 of maintoolbar.js that I mentioned before (it's happening within the jquery merge function).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/58448740",
    "html_url": "https://github.com/ipython/ipython/pull/6638#issuecomment-58448740",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6638",
    "id": 58448740,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NDQ4NzQw",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-09T00:31:56Z",
    "updated_at": "2014-10-09T00:31:56Z",
    "author_association": "MEMBER",
    "body": "ok looking now...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/58530470",
    "html_url": "https://github.com/ipython/ipython/pull/6638#issuecomment-58530470",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6638",
    "id": 58530470,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NTMwNDcw",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-09T15:50:10Z",
    "updated_at": "2014-10-09T15:50:10Z",
    "author_association": "MEMBER",
    "body": "@jhamrick I fixed the bug and made it so blur triggers the typed text to add a tag (this fixes the problem you mentioned regarding `tab`).  I didn't modify the up/down behavior because it appears to be coupled with the suggestions box.  I'm not sure what the correct up/down behavior should be other than how it behaves now.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/58941110",
    "html_url": "https://github.com/ipython/ipython/pull/6638#issuecomment-58941110",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6638",
    "id": 58941110,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4OTQxMTEw",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-13T19:19:44Z",
    "updated_at": "2014-10-13T19:19:44Z",
    "author_association": "MEMBER",
    "body": "rebased\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/58955735",
    "html_url": "https://github.com/ipython/ipython/pull/6638#issuecomment-58955735",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6638",
    "id": 58955735,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4OTU1NzM1",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-13T21:13:48Z",
    "updated_at": "2014-10-13T21:13:48Z",
    "author_association": "MEMBER",
    "body": "@ellisonbg thanks for the feedback!  My response follows:\n\n> So cool, some feedback:\n> \n> Rendered markdown and heading cells lack the padding inside the selected border. Bug in master also, but I don't want to forget.\n> Looks like the celltoolbar background color is different for text and code cells?\n\nUsing the ColorMeter distributed with OSX, I do not see this problem.  Optical illusion?\n\n> Cells with no tags are no affected by the filter. How should they be treated?\n\nThis was a bug that I just fixed, please try again.  Now cells without tags are treated like cells without tags, with the exception of the special pseudo tags (celltype) `code`, `markdown`, etc...\n\n> We should at least register an ESC handler for the tag text area so users can get back to command mode. But that should automatically happen if you are using the keyboard_manager stuff?\n\nThe tag textboxs are registered with events using the keyboard manager (just like the widgets).  Like most GUIs, you can use `tab` to change focus to another element.  The up/down arrows are registered by the control's autocomplete.  I suppose we could register `esc` as a deselect key?\n\n> Expression like tag1 and (not tag2) are not working, but tag1 and not tag2 does.\n\nFixed.\n\n> We should probably save the current filter in notebook metadata and reapply upon a page load.\n\nAgreed, my last commit adds this.\n\n> Let's remove the glowing blue border from the filter text area when selected.\n\nDone.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/58958175",
    "html_url": "https://github.com/ipython/ipython/pull/6638#issuecomment-58958175",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6638",
    "id": 58958175,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4OTU4MTc1",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-13T21:33:41Z",
    "updated_at": "2014-10-13T21:33:41Z",
    "author_association": "MEMBER",
    "body": "> @jdfreder it looks like Travis is breaking on the submodule. I think you need to push your branch in components to the ipython/ipython-components repo (don't merge, just git push ipython tagging), so that Travis can see it.\n\n@takluyver I tried this and it still isn't working :sob: See it here: https://github.com/ipython/ipython-components/tree/bootstrap-tags\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59268788",
    "html_url": "https://github.com/ipython/ipython/pull/6638#issuecomment-59268788",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6638",
    "id": 59268788,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MjY4Nzg4",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-15T20:17:09Z",
    "updated_at": "2014-10-15T20:17:09Z",
    "author_association": "MEMBER",
    "body": "Somehow I lost the commits that addressed some of the comments above...  working to recover them...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59272023",
    "html_url": "https://github.com/ipython/ipython/pull/6638#issuecomment-59272023",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6638",
    "id": 59272023,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MjcyMDIz",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-15T20:38:26Z",
    "updated_at": "2014-10-15T20:38:26Z",
    "author_association": "MEMBER",
    "body": "I've manually cancelled some Travis tests on this, because when the JS tests go really wrong, they take ages due to all the timeouts, and that hogs Travis builders that could be checking other PRs.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59292476",
    "html_url": "https://github.com/ipython/ipython/pull/6638#issuecomment-59292476",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6638",
    "id": 59292476,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MjkyNDc2",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-15T23:22:07Z",
    "updated_at": "2014-10-15T23:22:07Z",
    "author_association": "MEMBER",
    "body": "> I've manually cancelled some Travis tests on this, because when the JS tests go really wrong, they take ages due to all the timeouts, and that hogs Travis builders that could be checking other PRs.\n\nNo problem, I think it had something to do with a nasty race condition in the require js loading of bootstrap-tags.  I've fixed it now, so hopefully Travis is happy on this next commit.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59299372",
    "html_url": "https://github.com/ipython/ipython/pull/6638#issuecomment-59299372",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6638",
    "id": 59299372,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5Mjk5Mzcy",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-16T00:49:05Z",
    "updated_at": "2014-10-16T00:49:05Z",
    "author_association": "MEMBER",
    "body": "@takluyver Travis is driving me crazy.  I can't replicate the JS test failures locally.  It seems Travis isn't actually downloading the `ipython-components` commit I'm pointing to, even though it has been merge in `ipython-components/master` (see accompanying PR merged by @minrk )  Is this the problem you saw on your jstrem branch?  How did you fix it?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59309546",
    "html_url": "https://github.com/ipython/ipython/pull/6638#issuecomment-59309546",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6638",
    "id": 59309546,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MzA5NTQ2",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-16T03:30:26Z",
    "updated_at": "2014-10-16T03:30:26Z",
    "author_association": "MEMBER",
    "body": "I don't think so. My trouble was with rebasing when there was a conflict in the submodule. Once it was merged, it was fine. I'm mystified for the moment.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59926462",
    "html_url": "https://github.com/ipython/ipython/pull/6638#issuecomment-59926462",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6638",
    "id": 59926462,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5OTI2NDYy",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-21T13:25:56Z",
    "updated_at": "2014-10-21T13:25:56Z",
    "author_association": "MEMBER",
    "body": "This look nice ! Though I don't like the UI.\nI think that having to type the tag each time in each cell is painfull, I would rather have a master UI that allow mw to select a subset of tags and display something like that:\n\n![capture d ecran 2014-10-21 a 15 12 24](https://cloud.githubusercontent.com/assets/335567/4718813/2f4cbf84-5924-11e4-9b4c-6682e16eebd4.png)\n\nMuch much faster to tags things this way with the mouse, especially when you start having long tags name.\n\nThe filtering is beautiful (I love the click on the button that expand the input field), but people will get confused about the use of filtering. IMHO it should be as a separate extension. \n\nWhat is \"filter expression\" ? `foo|bar` `foo&bar` and variation do not work, (yes I figured out if was or and and) I don't want to add the implicit things that we have to maintain that.\n\nI though we agreed that if a cell had a tag `foo`, it would automatically got a class `ipython-tag-foo`, I would much rather see that implemented than  going crazy on UI features. \n\n> Another question: Should the filter be persist through download as? If so, it should probably be in a separate PR which would add nbconvert support for cherry picking.\n\nFeature creep !\n\nThe blue of the tag is ugly, but nitpicking.\n\nAs much as I like it, strong -1 for as is in the core. \n\n(also need rebase, and should be prioritized as already merged in IPython-components)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59929557",
    "html_url": "https://github.com/ipython/ipython/pull/6638#issuecomment-59929557",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6638",
    "id": 59929557,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5OTI5NTU3",
    "user": {
      "login": "SylvainCorlay",
      "id": 2397974,
      "node_id": "MDQ6VXNlcjIzOTc5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2397974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylvainCorlay",
      "html_url": "https://github.com/SylvainCorlay",
      "followers_url": "https://api.github.com/users/SylvainCorlay/followers",
      "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions",
      "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs",
      "repos_url": "https://api.github.com/users/SylvainCorlay/repos",
      "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-21T13:48:32Z",
    "updated_at": "2014-10-21T13:48:32Z",
    "author_association": "MEMBER",
    "body": "I love the feature. For a widget, we used `bootstrap-tagsinput` rather than `bootstrap-tags`. We found it  more flexible, it has more contributors and stars on GitHub. The main advantage was the ability to have custom complex logic for the validation of the tag, using a lookup in a dataset, or multiple datasets. \n\nFor convenience, I would find it nice if it was the one used and loaded with IPython, and you might also prefer it because of its larger adoption. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59938088",
    "html_url": "https://github.com/ipython/ipython/pull/6638#issuecomment-59938088",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6638",
    "id": 59938088,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5OTM4MDg4",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-21T14:40:58Z",
    "updated_at": "2014-10-21T14:40:58Z",
    "author_association": "MEMBER",
    "body": "Let's look at this option \n\nSent from my iPhone\n\n> On Oct 21, 2014, at 6:48 AM, Sylvain Corlay notifications@github.com wrote:\n> \n> I love the feature. For a widget, we used bootstrap-tagsinput rather than bootstrap-tags. We found it more flexible, it has more contributors and stars on GitHub. The main advantage was the ability to have custom complex logic for the validation of the tag, using a lookup in a dataset, or multiple datasets.\n> \n> For convenience, I would find it nice if it was the one used and loaded with IPython, and you might also prefer it because of its larger adoption.\n> \n> —\n> Reply to this email directly or view it on GitHub.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59967006",
    "html_url": "https://github.com/ipython/ipython/pull/6638#issuecomment-59967006",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6638",
    "id": 59967006,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5OTY3MDA2",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-21T17:41:18Z",
    "updated_at": "2014-10-21T17:41:18Z",
    "author_association": "MEMBER",
    "body": "There are many different usage cases that this targets. In a sense tags are\na way of providing a entire set of commonly asked for features such as the\nability to change how a notebook looks in different contexts. I definitely\nthink that a tagging and filtering UI should be in ipython core.\n\nIn terms of the particular library that is used, I think that it is worth\nlooking at different ones.\n\nWhile I agree with some of the points that @Carreau has made about the UI,\nI think there are more problems with the checkbox approach:\n- The amount of visual noise this approach creates is = N*M where N is the\n  number of cells and M is the total number of tags on the page.\n- As the number of tags in a notebook gets large, the checkbox UI becomes\n  extremely painful - this is true even if individual cell only has a few\n  active tags.\n- The label+checkbox takes up more space than the existing tag UI\n- It is really distracting to look at all of the tags on all of the cells.\n\nOn Tue, Oct 21, 2014 at 7:40 AM, Brian Granger ellisonbg@gmail.com wrote:\n\n> Let's look at this option\n> \n> Sent from my iPhone\n> \n> On Oct 21, 2014, at 6:48 AM, Sylvain Corlay notifications@github.com\n> wrote:\n> \n> I love the feature. For a widget, we used bootstrap-tagsinput rather than\n> bootstrap-tags. We found it more flexible, it has more contributors and\n> stars on GitHub. The main advantage was the ability to have custom complex\n> logic for the validation of the tag, using a lookup in a dataset, or\n> multiple datasets.\n> \n> For convenience, I would find it nice if it was the one used and loaded\n> with IPython, and you might also prefer it because of its larger adoption.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/pull/6638#issuecomment-59929557.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\n@ellisonbg on Twitter and GitHub\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59967102",
    "html_url": "https://github.com/ipython/ipython/pull/6638#issuecomment-59967102",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6638",
    "id": 59967102,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5OTY3MTAy",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-21T17:41:53Z",
    "updated_at": "2014-10-21T17:41:53Z",
    "author_association": "MEMBER",
    "body": "I am fine with `&` and `|` being used in addition to `and` and `or`.\n\nOn Tue, Oct 21, 2014 at 10:41 AM, Brian Granger ellisonbg@gmail.com wrote:\n\n> There are many different usage cases that this targets. In a sense tags\n> are a way of providing a entire set of commonly asked for features such as\n> the ability to change how a notebook looks in different contexts. I\n> definitely think that a tagging and filtering UI should be in ipython core.\n> \n> In terms of the particular library that is used, I think that it is worth\n> looking at different ones.\n> \n> While I agree with some of the points that @Carreau has made about the UI,\n> I think there are more problems with the checkbox approach:\n> - The amount of visual noise this approach creates is = N*M where N is the\n>   number of cells and M is the total number of tags on the page.\n> - As the number of tags in a notebook gets large, the checkbox UI becomes\n>   extremely painful - this is true even if individual cell only has a few\n>   active tags.\n> - The label+checkbox takes up more space than the existing tag UI\n> - It is really distracting to look at all of the tags on all of the cells.\n> \n> On Tue, Oct 21, 2014 at 7:40 AM, Brian Granger ellisonbg@gmail.com\n> wrote:\n> \n> > Let's look at this option\n> > \n> > Sent from my iPhone\n> > \n> > On Oct 21, 2014, at 6:48 AM, Sylvain Corlay notifications@github.com\n> > wrote:\n> > \n> > I love the feature. For a widget, we used bootstrap-tagsinput rather\n> > than bootstrap-tags. We found it more flexible, it has more contributors\n> > and stars on GitHub. The main advantage was the ability to have custom\n> > complex logic for the validation of the tag, using a lookup in a dataset,\n> > or multiple datasets.\n> > \n> > For convenience, I would find it nice if it was the one used and loaded\n> > with IPython, and you might also prefer it because of its larger adoption.\n> > \n> > —\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/ipython/ipython/pull/6638#issuecomment-59929557.\n> \n> ## \n> \n> Brian E. Granger\n> Cal Poly State University, San Luis Obispo\n> @ellisonbg on Twitter and GitHub\n> bgranger@calpoly.edu and ellisonbg@gmail.com\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\n@ellisonbg on Twitter and GitHub\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59996254",
    "html_url": "https://github.com/ipython/ipython/pull/6638#issuecomment-59996254",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6638",
    "id": 59996254,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5OTk2MjU0",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-21T20:48:46Z",
    "updated_at": "2014-10-21T20:48:46Z",
    "author_association": "MEMBER",
    "body": "Hey all,\n\nI'm going to open another PR trying `bootstrap-tagsinput`.  I'll ping back when I do so.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/60071276",
    "html_url": "https://github.com/ipython/ipython/pull/6638#issuecomment-60071276",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6638",
    "id": 60071276,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMDcxMjc2",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-22T11:35:06Z",
    "updated_at": "2014-10-22T11:35:06Z",
    "author_association": "MEMBER",
    "body": "I don't say that checkbox is perfect, but people will be mostly adding tags and remove them occasionally. \nUI is good at the opposite.\n\nLe's imagine something more evolved, Taking john example aboveI just edited cell \"A\" from \n`code|asdf` to `code|asdf|has, commas, etc` I'm thus likely to want o add `has, commas, etc` to other cell. \n\nI propose that the UI of all the \"others\" cell of the notebook turn into something like the following, n which clicking on the `+` of the ghost `has, commas, etc` of the cell does actually add the tag to the cell.\n![d87fa28e-4dbb-11e4-87c2-d75ca9441d8a](https://cloud.githubusercontent.com/assets/335567/4735260/9701100c-59de-11e4-8303-7ad3d4e111e0.PNG)\n\nThese \"ghost proposed tags\" could be limited to the 3 last entered tags in the last minute or so.\nCause I really find typing to tag cell really annoying, especially by the fact that it's relatively difficult to do purely in keyboard and you have to reach the mouse. \n"
  }
]
