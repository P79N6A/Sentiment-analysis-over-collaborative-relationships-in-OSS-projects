[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4247949",
    "html_url": "https://github.com/ipython/ipython/issues/1453#issuecomment-4247949",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1453",
    "id": 4247949,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDc5NDk=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-29T22:12:33Z",
    "updated_at": "2012-02-29T22:12:50Z",
    "author_association": "MEMBER",
    "body": "Engines do not reconnect, nor are they ever aware that the Controller is gone (the Controller is notified when Engines stop responding, but not vice versa).  When you shutdown the Controller, you should always shutdown all your engines.  They cannot be reused.\n\nWe do have plans to bring Controllers back up transparently so that Engines need not be restarted, but this hasn't been implemented (it merely requires taking a slightly different path starting up).\n\nTo 'restart' an engine, simply:\n\n```\nkill -INT <zombie-engine-PID> && ipengine --with-the-same-arguments --as=before\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7971329",
    "html_url": "https://github.com/ipython/ipython/issues/1453#issuecomment-7971329",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1453",
    "id": 7971329,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5NzEzMjk=",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-23T14:26:56Z",
    "updated_at": "2012-08-23T14:26:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "One Problem I found was that the controller unregistered engines which missed a heartbeat (not sure what happend here, but it was either the controller / engine not having enough CPU to respond / react in time or bad LAN connectivity). Afterwards, the engines where just idle and I had to walk around the office to restart them on each PC.\n\nIt would be nice if the engines could be made aware of missing controllers so that they could to reconnect for a few times when they didn't get a heartbeat for about a minute. \n\nActually having the engines trying to reconnect every few minutes would also be nice: you could start the engine as a windows service and they would simple wait for a controller at an IP become available..\n\n(I use our normal office PCs and a simple \"ipcluster engines\" to start the engines on each PC)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7975515",
    "html_url": "https://github.com/ipython/ipython/issues/1453#issuecomment-7975515",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1453",
    "id": 7975515,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5NzU1MTU=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-23T16:32:59Z",
    "updated_at": "2012-08-23T16:32:59Z",
    "author_association": "MEMBER",
    "body": "@JanSchulz - if the heartbeat is too short, you can simply increase the heartbeat period with `HeartMonitor.period` to something like 10000 (10 seconds).  An engine has to miss two straight beats, which means being totally unresponsive for six seconds under default config.  If your engines are regularly unresponsive on this time scale, then increasing the heartbeat period is appropriate.  I typically use 250ms without issue, so 3 seconds already seems pretty conservative to me, but it apparently is not enough on your systems.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7977526",
    "html_url": "https://github.com/ipython/ipython/issues/1453#issuecomment-7977526",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1453",
    "id": 7977526,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5Nzc1MjY=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-23T17:36:41Z",
    "updated_at": "2012-08-23T17:36:41Z",
    "author_association": "MEMBER",
    "body": "@JanSchulz, is it possible that your engines are overly\nmemory-constrained and thus swapping a lot?  Swap-driven intensive i/o\nis one of the typical culprits that will introduce long delays in the\nhearbeat, since those operations are managed by the kernel and prevent\nthe context switching necessary for the heartbeat thread to have a\nchance to activate.  Just something to look at...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7978183",
    "html_url": "https://github.com/ipython/ipython/issues/1453#issuecomment-7978183",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1453",
    "id": 7978183,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5NzgxODM=",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-23T17:57:49Z",
    "updated_at": "2012-08-23T17:58:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "If `IPython.parallel.controller.heartmonitor.Heart` would have a state `last_pinged`, the EngineApp could then check this and reconnect (or kill itself) if no heartbeat happend during the last x seconds. I looked at `IPython.parallel.controller.heartmonitor.Heart` but didn't understand anything what's happening here (no idea about the zmq stuff). \n\nIf someone could give me a hint how to add a callback to the `zmq.devices.basedevice.ThreadDevice`, I could give the rest a try.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7978303",
    "html_url": "https://github.com/ipython/ipython/issues/1453#issuecomment-7978303",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1453",
    "id": 7978303,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5NzgzMDM=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-23T18:01:43Z",
    "updated_at": "2012-08-23T18:01:43Z",
    "author_association": "MEMBER",
    "body": "It is actually critical that the Heart have _no Python code whatsoever_, so that it remains responsive during GIL-holding operations in the engine.  You could do it by changing the ThreadDevice to a ThreadMonitoredQueue, and having a SUB socket in the main app thread connected to the monitor.  Then the logic for handing heartbeat behavior would go in the regular app eventloop.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/9394964",
    "html_url": "https://github.com/ipython/ipython/issues/1453#issuecomment-9394964",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1453",
    "id": 9394964,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkzOTQ5NjQ=",
    "user": {
      "login": "kaazoo",
      "id": 357935,
      "node_id": "MDQ6VXNlcjM1NzkzNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/357935?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kaazoo",
      "html_url": "https://github.com/kaazoo",
      "followers_url": "https://api.github.com/users/kaazoo/followers",
      "following_url": "https://api.github.com/users/kaazoo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kaazoo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kaazoo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kaazoo/subscriptions",
      "organizations_url": "https://api.github.com/users/kaazoo/orgs",
      "repos_url": "https://api.github.com/users/kaazoo/repos",
      "events_url": "https://api.github.com/users/kaazoo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kaazoo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-10-12T22:17:47Z",
    "updated_at": "2012-10-12T22:17:47Z",
    "author_association": "NONE",
    "body": "What's the status of this pull request?\nI tested it and it worked for me.\n\nHas anybody else tried it out?\n"
  }
]
