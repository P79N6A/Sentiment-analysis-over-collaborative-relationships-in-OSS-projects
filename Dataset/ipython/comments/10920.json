[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/346399512",
    "html_url": "https://github.com/ipython/ipython/issues/10920#issuecomment-346399512",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10920",
    "id": 346399512,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjM5OTUxMg==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-22T16:18:20Z",
    "updated_at": "2017-11-22T16:18:20Z",
    "author_association": "MEMBER",
    "body": "The `{}` act as string formatting to interpolate a Python expression into a magic command. There's no need for it on timeit, but for historical reasons it does that on all %magic and !system commands.\r\n\r\nDoubling the braces `{{State.erred, State.memory}}` should escape them."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/432982469",
    "html_url": "https://github.com/ipython/ipython/issues/10920#issuecomment-432982469",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10920",
    "id": 432982469,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMjk4MjQ2OQ==",
    "user": {
      "login": "blaiseli",
      "id": 3380503,
      "node_id": "MDQ6VXNlcjMzODA1MDM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3380503?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blaiseli",
      "html_url": "https://github.com/blaiseli",
      "followers_url": "https://api.github.com/users/blaiseli/followers",
      "following_url": "https://api.github.com/users/blaiseli/following{/other_user}",
      "gists_url": "https://api.github.com/users/blaiseli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blaiseli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blaiseli/subscriptions",
      "organizations_url": "https://api.github.com/users/blaiseli/orgs",
      "repos_url": "https://api.github.com/users/blaiseli/repos",
      "events_url": "https://api.github.com/users/blaiseli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blaiseli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-25T09:33:46Z",
    "updated_at": "2018-10-25T09:33:46Z",
    "author_association": "NONE",
    "body": "I could have a related issue.\r\n\r\nAttempts at timing set intersection operations (that work perfectly well otherwise) fail:\r\n\r\n```{python}\r\nIn [34]: %timeit s & {2}\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-34-c6066eb98afc> in <module>()\r\n----> 1 get_ipython().run_line_magic('timeit', 's & {2}')\r\n\r\n~/.local/lib/python3.6/site-packages/IPython/core/interactiveshell.py in run_line_magic(self, magic_name, line, _stack_depth)\r\n   2093                 kwargs['local_ns'] = sys._getframe(stack_depth).f_locals\r\n   2094             with self.builtin_trap:\r\n-> 2095                 result = fn(*args,**kwargs)\r\n   2096             return result\r\n   2097 \r\n\r\n<decorator-gen-61> in timeit(self, line, cell, local_ns)\r\n\r\n~/.local/lib/python3.6/site-packages/IPython/core/magic.py in <lambda>(f, *a, **k)\r\n    185     # but it's overkill for just that one bit of state.\r\n    186     def magic_deco(arg):\r\n--> 187         call = lambda f, *a, **k: f(*a, **k)\r\n    188 \r\n    189         if callable(arg):\r\n\r\n~/.local/lib/python3.6/site-packages/IPython/core/magics/execution.py in timeit(self, line, cell, local_ns)\r\n   1096             for index in range(0, 10):\r\n   1097                 number = 10 ** index\r\n-> 1098                 time_number = timer.timeit(number)\r\n   1099                 if time_number >= 0.2:\r\n   1100                     break\r\n\r\n~/.local/lib/python3.6/site-packages/IPython/core/magics/execution.py in timeit(self, number)\r\n    158         gc.disable()\r\n    159         try:\r\n--> 160             timing = self.inner(it, self.timer)\r\n    161         finally:\r\n    162             if gcold:\r\n\r\n<magic-timeit> in inner(_it, _timer)\r\n\r\nTypeError: unsupported operand type(s) for &: 'set' and 'int'\r\n```\r\n\r\nAnd:\r\n\r\n```{python}\r\nIn [40]: %timeit s.intersection({2})\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-40-d2cf5cc5314f> in <module>()\r\n----> 1 get_ipython().run_line_magic('timeit', 's.intersection({2})')\r\n\r\n~/.local/lib/python3.6/site-packages/IPython/core/interactiveshell.py in run_line_magic(self, magic_name, line, _stack_depth)\r\n   2093                 kwargs['local_ns'] = sys._getframe(stack_depth).f_locals\r\n   2094             with self.builtin_trap:\r\n-> 2095                 result = fn(*args,**kwargs)\r\n   2096             return result\r\n   2097 \r\n\r\n<decorator-gen-61> in timeit(self, line, cell, local_ns)\r\n\r\n~/.local/lib/python3.6/site-packages/IPython/core/magic.py in <lambda>(f, *a, **k)\r\n    185     # but it's overkill for just that one bit of state.\r\n    186     def magic_deco(arg):\r\n--> 187         call = lambda f, *a, **k: f(*a, **k)\r\n    188 \r\n    189         if callable(arg):\r\n\r\n~/.local/lib/python3.6/site-packages/IPython/core/magics/execution.py in timeit(self, line, cell, local_ns)\r\n   1096             for index in range(0, 10):\r\n   1097                 number = 10 ** index\r\n-> 1098                 time_number = timer.timeit(number)\r\n   1099                 if time_number >= 0.2:\r\n   1100                     break\r\n\r\n~/.local/lib/python3.6/site-packages/IPython/core/magics/execution.py in timeit(self, number)\r\n    158         gc.disable()\r\n    159         try:\r\n--> 160             timing = self.inner(it, self.timer)\r\n    161         finally:\r\n    162             if gcold:\r\n\r\n<magic-timeit> in inner(_it, _timer)\r\n\r\nTypeError: 'int' object is not iterable\r\n```\r\n\r\nDoubling the braces bypasses the issue:\r\n\r\n```{python}\r\nIn [44]: %timeit s.intersection({{2}})\r\n242 ns ± 23.2 ns per loop (mean ± std. dev. of 7 runs, 1000000 loops each)\r\n\r\nIn [45]: %timeit s & {{2}}\r\n174 ns ± 22.5 ns per loop (mean ± std. dev. of 7 runs, 1000000 loops each)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/435566842",
    "html_url": "https://github.com/ipython/ipython/issues/10920#issuecomment-435566842",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10920",
    "id": 435566842,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTU2Njg0Mg==",
    "user": {
      "login": "mgeier",
      "id": 705404,
      "node_id": "MDQ6VXNlcjcwNTQwNA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/705404?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mgeier",
      "html_url": "https://github.com/mgeier",
      "followers_url": "https://api.github.com/users/mgeier/followers",
      "following_url": "https://api.github.com/users/mgeier/following{/other_user}",
      "gists_url": "https://api.github.com/users/mgeier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mgeier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mgeier/subscriptions",
      "organizations_url": "https://api.github.com/users/mgeier/orgs",
      "repos_url": "https://api.github.com/users/mgeier/repos",
      "events_url": "https://api.github.com/users/mgeier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mgeier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-03T07:21:17Z",
    "updated_at": "2018-11-03T07:21:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "I just had the same problem with the `%config` magic:\r\n\r\n    %config InlineBackend.figure_formats={'png'}\r\n\r\nWhich led to the very-hard-to-diagnose error:\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nNameError                                 Traceback (most recent call last)\r\n<ipython-input-13-3733ff7e8826> in <module>\r\n----> 1 get_ipython().run_line_magic('config', \"InlineBackend.figure_formats={'png'}\")\r\n\r\n~/git/ipython/IPython/core/interactiveshell.py in run_line_magic(self, magic_name, line, _stack_depth)\r\n   2283                 kwargs['local_ns'] = sys._getframe(stack_depth).f_locals\r\n   2284             with self.builtin_trap:\r\n-> 2285                 result = fn(*args,**kwargs)\r\n   2286             return result\r\n   2287 \r\n\r\n<decorator-gen-49> in config(self, s)\r\n\r\n~/git/ipython/IPython/core/magic.py in <lambda>(f, *a, **k)\r\n    185     # but it's overkill for just that one bit of state.\r\n    186     def magic_deco(arg):\r\n--> 187         call = lambda f, *a, **k: f(*a, **k)\r\n    188 \r\n    189         if callable(arg):\r\n\r\n~/git/ipython/IPython/core/magics/config.py in config(self, s)\r\n    150         # unquoted args to eval in user_ns\r\n    151         cfg = Config()\r\n--> 152         exec(\"cfg.\"+line, locals(), self.shell.user_ns)\r\n    153 \r\n    154         for configurable in configurables:\r\n\r\n<string> in <module>\r\n\r\nNameError: name 'png' is not defined\r\n```\r\n\r\nTo add even more confusion, it works fine when I use two formats:\r\n\r\n    %config InlineBackend.figure_formats={'svg', 'pdf'}\r\n\r\n@takluyver \r\n\r\n> There's no need for it on timeit, but for historical reasons it does that on all `%magic` and `!system` commands.\r\n\r\nIf there is no need, is it possible to disable this confusing behavior?\r\n\r\nJust out of interest, what are the magic functions that actually use `{}` string interpolation?"
  }
]
