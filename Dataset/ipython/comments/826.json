[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2251451",
    "html_url": "https://github.com/ipython/ipython/issues/826#issuecomment-2251451",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/826",
    "id": 2251451,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTE0NTE=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-30T16:32:35Z",
    "updated_at": "2011-09-30T16:32:35Z",
    "author_association": "MEMBER",
    "body": "This is already true in trunk for load-balanced tasks.  Obviously, you can't send jobs to particular engines that don't exist.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2292136",
    "html_url": "https://github.com/ipython/ipython/issues/826#issuecomment-2292136",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/826",
    "id": 2292136,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTIxMzY=",
    "user": {
      "login": "kaazoo",
      "id": 357935,
      "node_id": "MDQ6VXNlcjM1NzkzNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/357935?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kaazoo",
      "html_url": "https://github.com/kaazoo",
      "followers_url": "https://api.github.com/users/kaazoo/followers",
      "following_url": "https://api.github.com/users/kaazoo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kaazoo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kaazoo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kaazoo/subscriptions",
      "organizations_url": "https://api.github.com/users/kaazoo/orgs",
      "repos_url": "https://api.github.com/users/kaazoo/repos",
      "events_url": "https://api.github.com/users/kaazoo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kaazoo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-04T22:19:18Z",
    "updated_at": "2011-10-04T22:19:18Z",
    "author_association": "NONE",
    "body": "Thanks. This works with the 0.12 branch.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3835557",
    "html_url": "https://github.com/ipython/ipython/issues/826#issuecomment-3835557",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/826",
    "id": 3835557,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MzU1NTc=",
    "user": {
      "login": "kaazoo",
      "id": 357935,
      "node_id": "MDQ6VXNlcjM1NzkzNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/357935?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kaazoo",
      "html_url": "https://github.com/kaazoo",
      "followers_url": "https://api.github.com/users/kaazoo/followers",
      "following_url": "https://api.github.com/users/kaazoo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kaazoo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kaazoo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kaazoo/subscriptions",
      "organizations_url": "https://api.github.com/users/kaazoo/orgs",
      "repos_url": "https://api.github.com/users/kaazoo/repos",
      "events_url": "https://api.github.com/users/kaazoo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kaazoo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-06T19:57:17Z",
    "updated_at": "2012-02-06T19:57:17Z",
    "author_association": "NONE",
    "body": "With IPython 0.12, I just noticed that I can't get information about tasks using rc.query_db() which where created when no engine was running until I start an engine. The start of the first engine seems to trigger ipcontroller to make that information available.\n\nIs this intended?\nI would assume that all tasks which haven't been queued to an engine would have a 'pending' status.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3836473",
    "html_url": "https://github.com/ipython/ipython/issues/826#issuecomment-3836473",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/826",
    "id": 3836473,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MzY0NzM=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-06T20:46:41Z",
    "updated_at": "2012-02-06T20:46:41Z",
    "author_association": "MEMBER",
    "body": "Hmm.\n\nThe TaskScheduler disables the on_recv callback from clients when there are no engines, because it is certain that tasks cannot be submitted.  This means that they sit in the Ã˜MQ queue, and do not trigger the callback that notifies the Hub, putting the request in the database.  I imagine I can adjust it in such a way that the tasks are pulled into Python, instead of left in the buffer.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3836622",
    "html_url": "https://github.com/ipython/ipython/issues/826#issuecomment-3836622",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/826",
    "id": 3836622,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MzY2MjI=",
    "user": {
      "login": "kaazoo",
      "id": 357935,
      "node_id": "MDQ6VXNlcjM1NzkzNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/357935?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kaazoo",
      "html_url": "https://github.com/kaazoo",
      "followers_url": "https://api.github.com/users/kaazoo/followers",
      "following_url": "https://api.github.com/users/kaazoo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kaazoo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kaazoo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kaazoo/subscriptions",
      "organizations_url": "https://api.github.com/users/kaazoo/orgs",
      "repos_url": "https://api.github.com/users/kaazoo/repos",
      "events_url": "https://api.github.com/users/kaazoo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kaazoo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-06T20:52:55Z",
    "updated_at": "2012-02-06T20:52:55Z",
    "author_association": "NONE",
    "body": "If you need further proof let me know. Can you reproduce this behaviour?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3836704",
    "html_url": "https://github.com/ipython/ipython/issues/826#issuecomment-3836704",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/826",
    "id": 3836704,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MzY3MDQ=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-06T20:57:07Z",
    "updated_at": "2012-02-06T20:57:07Z",
    "author_association": "MEMBER",
    "body": "Sorry if I wasn't clear, I was trying to explain why you see what you are seeing.  The Hub (the process that maintains the DB) will not get tasks submitted while there are no engines, because the TaskScheduler never calls recv, leaving messages in the upstream Ã˜MQ buffer.  Essentially the queue processing is paused slightly further upstream than you would like.  I will look into addressing this.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3874234",
    "html_url": "https://github.com/ipython/ipython/issues/826#issuecomment-3874234",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/826",
    "id": 3874234,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzQyMzQ=",
    "user": {
      "login": "kaazoo",
      "id": 357935,
      "node_id": "MDQ6VXNlcjM1NzkzNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/357935?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kaazoo",
      "html_url": "https://github.com/kaazoo",
      "followers_url": "https://api.github.com/users/kaazoo/followers",
      "following_url": "https://api.github.com/users/kaazoo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kaazoo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kaazoo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kaazoo/subscriptions",
      "organizations_url": "https://api.github.com/users/kaazoo/orgs",
      "repos_url": "https://api.github.com/users/kaazoo/repos",
      "events_url": "https://api.github.com/users/kaazoo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kaazoo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-08T19:29:32Z",
    "updated_at": "2012-02-08T19:29:32Z",
    "author_association": "NONE",
    "body": "Thank you for your explaination. Is there any workaround for this?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3874506",
    "html_url": "https://github.com/ipython/ipython/issues/826#issuecomment-3874506",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/826",
    "id": 3874506,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzQ1MDY=",
    "user": {
      "login": "kaazoo",
      "id": 357935,
      "node_id": "MDQ6VXNlcjM1NzkzNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/357935?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kaazoo",
      "html_url": "https://github.com/kaazoo",
      "followers_url": "https://api.github.com/users/kaazoo/followers",
      "following_url": "https://api.github.com/users/kaazoo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kaazoo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kaazoo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kaazoo/subscriptions",
      "organizations_url": "https://api.github.com/users/kaazoo/orgs",
      "repos_url": "https://api.github.com/users/kaazoo/repos",
      "events_url": "https://api.github.com/users/kaazoo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kaazoo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-08T19:44:09Z",
    "updated_at": "2012-02-08T19:44:09Z",
    "author_association": "NONE",
    "body": "Modifying IPython/parallel/controller/scheduler.py made it work, but this is obviously not the solution:\n\n```\n--- ../ipython-git/IPython/parallel/controller/scheduler.py 2011-12-04 21:36:57.000000000 +0100\n+++ IPython/parallel/controller/scheduler.py    2012-02-08 20:35:49.000000000 +0100\n@@ -181,6 +181,7 @@\n\n     def start(self):\n         self.engine_stream.on_recv(self.dispatch_result, copy=False)\n+        self.client_stream.on_recv(self.dispatch_submission, copy=False)\n         self._notification_handlers = dict(\n             registration_notification = self._register_engine,\n             unregistration_notification = self._unregister_engine\n@@ -192,12 +193,12 @@\n\n     def resume_receiving(self):\n         \"\"\"Resume accepting jobs.\"\"\"\n-        self.client_stream.on_recv(self.dispatch_submission, copy=False)\n+        #self.client_stream.on_recv(self.dispatch_submission, copy=False)\n\n     def stop_receiving(self):\n         \"\"\"Stop accepting jobs while there are no engines.\n         Leave them in the ZMQ queue.\"\"\"\n-        self.client_stream.on_recv(None)\n+        #self.client_stream.on_recv(None)\n\n     #-----------------------------------------------------------------------\n     # [Un]Registration Handling\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3875477",
    "html_url": "https://github.com/ipython/ipython/issues/826#issuecomment-3875477",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/826",
    "id": 3875477,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzU0Nzc=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-08T20:31:42Z",
    "updated_at": "2012-02-08T20:31:42Z",
    "author_association": "MEMBER",
    "body": "I think that is approximately the solution you are looking for (I'll do a PR shortly).  There certainly isn't a workaround with code as it is, because it is functioning exactly as designed - the Scheduler is entirely halted while no engines are registered.  But with the changes to the scheduler supporting dependencies, etc., I think this should work fine with only minor tweaks.\n"
  }
]
