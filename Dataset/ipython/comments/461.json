[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1216688",
    "html_url": "https://github.com/ipython/ipython/issues/461#issuecomment-1216688",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/461",
    "id": 1216688,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMTY2ODg=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-05-22T08:57:44Z",
    "updated_at": "2011-05-22T08:57:44Z",
    "author_association": "MEMBER",
    "body": "That makes sense, although I'm not sure how easy it would be to implement. It probably won't be sorted before 0.11, though.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/14121811",
    "html_url": "https://github.com/ipython/ipython/issues/461#issuecomment-14121811",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/461",
    "id": 14121811,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MTIxODEx",
    "user": {
      "login": "Honghe",
      "id": 1092722,
      "node_id": "MDQ6VXNlcjEwOTI3MjI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1092722?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Honghe",
      "html_url": "https://github.com/Honghe",
      "followers_url": "https://api.github.com/users/Honghe/followers",
      "following_url": "https://api.github.com/users/Honghe/following{/other_user}",
      "gists_url": "https://api.github.com/users/Honghe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Honghe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Honghe/subscriptions",
      "organizations_url": "https://api.github.com/users/Honghe/orgs",
      "repos_url": "https://api.github.com/users/Honghe/repos",
      "events_url": "https://api.github.com/users/Honghe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Honghe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-26T15:52:45Z",
    "updated_at": "2013-02-26T15:52:45Z",
    "author_association": "NONE",
    "body": "Though 2 years has gone, 0.13.1 still hasn't deep reload for %run yet.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/14122477",
    "html_url": "https://github.com/ipython/ipython/issues/461#issuecomment-14122477",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/461",
    "id": 14122477,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MTIyNDc3",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-26T16:03:21Z",
    "updated_at": "2013-02-26T16:03:21Z",
    "author_association": "MEMBER",
    "body": "I guess no-one has felt the need strongly enough to implement it. It should be possible with autoreload, if you'd like to have a go.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/14179074",
    "html_url": "https://github.com/ipython/ipython/issues/461#issuecomment-14179074",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/461",
    "id": 14179074,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MTc5MDc0",
    "user": {
      "login": "ccordoba12",
      "id": 365293,
      "node_id": "MDQ6VXNlcjM2NTI5Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/365293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ccordoba12",
      "html_url": "https://github.com/ccordoba12",
      "followers_url": "https://api.github.com/users/ccordoba12/followers",
      "following_url": "https://api.github.com/users/ccordoba12/following{/other_user}",
      "gists_url": "https://api.github.com/users/ccordoba12/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ccordoba12/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ccordoba12/subscriptions",
      "organizations_url": "https://api.github.com/users/ccordoba12/orgs",
      "repos_url": "https://api.github.com/users/ccordoba12/repos",
      "events_url": "https://api.github.com/users/ccordoba12/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ccordoba12/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-27T15:21:19Z",
    "updated_at": "2013-02-27T15:21:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "For what is worth, [Spyder](https://code.google.com/p/spyderlib/) has had this functionality for a very long time. It deletes from the current namespace and then reloads all local modules used on a given script before re-running it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/14226302",
    "html_url": "https://github.com/ipython/ipython/issues/461#issuecomment-14226302",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/461",
    "id": 14226302,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MjI2MzAy",
    "user": {
      "login": "Honghe",
      "id": 1092722,
      "node_id": "MDQ6VXNlcjEwOTI3MjI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1092722?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Honghe",
      "html_url": "https://github.com/Honghe",
      "followers_url": "https://api.github.com/users/Honghe/followers",
      "following_url": "https://api.github.com/users/Honghe/following{/other_user}",
      "gists_url": "https://api.github.com/users/Honghe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Honghe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Honghe/subscriptions",
      "organizations_url": "https://api.github.com/users/Honghe/orgs",
      "repos_url": "https://api.github.com/users/Honghe/repos",
      "events_url": "https://api.github.com/users/Honghe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Honghe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-28T10:15:46Z",
    "updated_at": "2013-02-28T10:15:46Z",
    "author_association": "NONE",
    "body": "@ccordoba12 where is the source code of the functionality in Spyder, Thanks.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/14351384",
    "html_url": "https://github.com/ipython/ipython/issues/461#issuecomment-14351384",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/461",
    "id": 14351384,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MzUxMzg0",
    "user": {
      "login": "ccordoba12",
      "id": 365293,
      "node_id": "MDQ6VXNlcjM2NTI5Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/365293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ccordoba12",
      "html_url": "https://github.com/ccordoba12",
      "followers_url": "https://api.github.com/users/ccordoba12/followers",
      "following_url": "https://api.github.com/users/ccordoba12/following{/other_user}",
      "gists_url": "https://api.github.com/users/ccordoba12/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ccordoba12/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ccordoba12/subscriptions",
      "organizations_url": "https://api.github.com/users/ccordoba12/orgs",
      "repos_url": "https://api.github.com/users/ccordoba12/repos",
      "events_url": "https://api.github.com/users/ccordoba12/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ccordoba12/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-03T18:06:03Z",
    "updated_at": "2013-03-03T18:06:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Honghe, you can find it [here](http://code.google.com/p/spyderlib/source/browse/spyderlib/widgets/externalshell/sitecustomize.py#473). `runfile` is our version of `%run`, and `UserModuleDeleter` is the class in charge of reloading local modules.\n\nFor the future we are considering to replace `%run` with `runfile` for kernels managed by us.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/14375478",
    "html_url": "https://github.com/ipython/ipython/issues/461#issuecomment-14375478",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/461",
    "id": 14375478,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0Mzc1NDc4",
    "user": {
      "login": "Honghe",
      "id": 1092722,
      "node_id": "MDQ6VXNlcjEwOTI3MjI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1092722?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Honghe",
      "html_url": "https://github.com/Honghe",
      "followers_url": "https://api.github.com/users/Honghe/followers",
      "following_url": "https://api.github.com/users/Honghe/following{/other_user}",
      "gists_url": "https://api.github.com/users/Honghe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Honghe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Honghe/subscriptions",
      "organizations_url": "https://api.github.com/users/Honghe/orgs",
      "repos_url": "https://api.github.com/users/Honghe/repos",
      "events_url": "https://api.github.com/users/Honghe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Honghe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-04T11:07:31Z",
    "updated_at": "2013-03-04T11:07:31Z",
    "author_association": "NONE",
    "body": "@Carlos Thanks a lot.\n\nOn Mon, Mar 4, 2013 at 2:06 AM, Carlos Cordoba notifications@github.comwrote:\n\n> @Honghe https://github.com/Honghe, you can find it herehttp://code.google.com/p/spyderlib/source/browse/spyderlib/widgets/externalshell/sitecustomize.py#473.\n> runfile is our version of %run, and UserModuleDeleter is the class in\n> charge of reloading local modules.\n> \n> For the future we are considering to replace %run with runfile for\n> kernels managed by us.\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/issues/461#issuecomment-14351384\n> .\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/16397083",
    "html_url": "https://github.com/ipython/ipython/issues/461#issuecomment-16397083",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/461",
    "id": 16397083,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2Mzk3MDgz",
    "user": {
      "login": "mfbx9da4",
      "id": 1690659,
      "node_id": "MDQ6VXNlcjE2OTA2NTk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1690659?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mfbx9da4",
      "html_url": "https://github.com/mfbx9da4",
      "followers_url": "https://api.github.com/users/mfbx9da4/followers",
      "following_url": "https://api.github.com/users/mfbx9da4/following{/other_user}",
      "gists_url": "https://api.github.com/users/mfbx9da4/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mfbx9da4/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mfbx9da4/subscriptions",
      "organizations_url": "https://api.github.com/users/mfbx9da4/orgs",
      "repos_url": "https://api.github.com/users/mfbx9da4/repos",
      "events_url": "https://api.github.com/users/mfbx9da4/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mfbx9da4/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-15T16:50:54Z",
    "updated_at": "2013-04-15T16:50:54Z",
    "author_association": "NONE",
    "body": "This would be extremely useful for me, means i only need one interpreter for everything! Would be great if it was just an option to the run command e.g. `run -dr file.py`\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/46737779",
    "html_url": "https://github.com/ipython/ipython/issues/461#issuecomment-46737779",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/461",
    "id": 46737779,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzM3Nzc5",
    "user": {
      "login": "jorgehatccrma",
      "id": 1522348,
      "node_id": "MDQ6VXNlcjE1MjIzNDg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1522348?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorgehatccrma",
      "html_url": "https://github.com/jorgehatccrma",
      "followers_url": "https://api.github.com/users/jorgehatccrma/followers",
      "following_url": "https://api.github.com/users/jorgehatccrma/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorgehatccrma/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorgehatccrma/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorgehatccrma/subscriptions",
      "organizations_url": "https://api.github.com/users/jorgehatccrma/orgs",
      "repos_url": "https://api.github.com/users/jorgehatccrma/repos",
      "events_url": "https://api.github.com/users/jorgehatccrma/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorgehatccrma/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-20T23:55:46Z",
    "updated_at": "2014-06-20T23:55:46Z",
    "author_association": "NONE",
    "body": "+1 for this feature request\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/54382721",
    "html_url": "https://github.com/ipython/ipython/issues/461#issuecomment-54382721",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/461",
    "id": 54382721,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MzgyNzIx",
    "user": {
      "login": "dashesy",
      "id": 873905,
      "node_id": "MDQ6VXNlcjg3MzkwNQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/873905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dashesy",
      "html_url": "https://github.com/dashesy",
      "followers_url": "https://api.github.com/users/dashesy/followers",
      "following_url": "https://api.github.com/users/dashesy/following{/other_user}",
      "gists_url": "https://api.github.com/users/dashesy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dashesy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dashesy/subscriptions",
      "organizations_url": "https://api.github.com/users/dashesy/orgs",
      "repos_url": "https://api.github.com/users/dashesy/repos",
      "events_url": "https://api.github.com/users/dashesy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dashesy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-03T23:25:31Z",
    "updated_at": "2014-09-09T20:26:49Z",
    "author_association": "NONE",
    "body": "If I know what is the problem hindering development of this I will gladly work on it, currently with '%autoreload 2' I get `TypeError('super(type, obj): obj must be an instance or subtype of type)'` any time I change a class that has a call to `super`. The solution could be a new `%run2` comamnd that has a combination of [this answer](http://stackoverflow.com/a/2918951/311567] and Spyder's.\nHere is another reload mechanism that takes care of old instances too:  http://luke-campagnola.blogspot.com/2010/12/easy-automated-reloading-in-python.html\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/217333761",
    "html_url": "https://github.com/ipython/ipython/issues/461#issuecomment-217333761",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/461",
    "id": 217333761,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzMzMzc2MQ==",
    "user": {
      "login": "kawing-chiu",
      "id": 5235260,
      "node_id": "MDQ6VXNlcjUyMzUyNjA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5235260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kawing-chiu",
      "html_url": "https://github.com/kawing-chiu",
      "followers_url": "https://api.github.com/users/kawing-chiu/followers",
      "following_url": "https://api.github.com/users/kawing-chiu/following{/other_user}",
      "gists_url": "https://api.github.com/users/kawing-chiu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kawing-chiu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kawing-chiu/subscriptions",
      "organizations_url": "https://api.github.com/users/kawing-chiu/orgs",
      "repos_url": "https://api.github.com/users/kawing-chiu/repos",
      "events_url": "https://api.github.com/users/kawing-chiu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kawing-chiu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-06T02:32:02Z",
    "updated_at": "2016-05-06T02:33:35Z",
    "author_association": "NONE",
    "body": "+1 for this. This issue renders autoreload useless for projects with just moderate inheritance complexity.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/289780352",
    "html_url": "https://github.com/ipython/ipython/issues/461#issuecomment-289780352",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/461",
    "id": 289780352,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTc4MDM1Mg==",
    "user": {
      "login": "fhgd",
      "id": 8189473,
      "node_id": "MDQ6VXNlcjgxODk0NzM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8189473?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fhgd",
      "html_url": "https://github.com/fhgd",
      "followers_url": "https://api.github.com/users/fhgd/followers",
      "following_url": "https://api.github.com/users/fhgd/following{/other_user}",
      "gists_url": "https://api.github.com/users/fhgd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fhgd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fhgd/subscriptions",
      "organizations_url": "https://api.github.com/users/fhgd/orgs",
      "repos_url": "https://api.github.com/users/fhgd/repos",
      "events_url": "https://api.github.com/users/fhgd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fhgd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-28T14:04:43Z",
    "updated_at": "2017-03-28T14:04:43Z",
    "author_association": "NONE",
    "body": "+1"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/427148102",
    "html_url": "https://github.com/ipython/ipython/issues/461#issuecomment-427148102",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/461",
    "id": 427148102,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzE0ODEwMg==",
    "user": {
      "login": "zbarry",
      "id": 4762711,
      "node_id": "MDQ6VXNlcjQ3NjI3MTE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4762711?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zbarry",
      "html_url": "https://github.com/zbarry",
      "followers_url": "https://api.github.com/users/zbarry/followers",
      "following_url": "https://api.github.com/users/zbarry/following{/other_user}",
      "gists_url": "https://api.github.com/users/zbarry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zbarry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zbarry/subscriptions",
      "organizations_url": "https://api.github.com/users/zbarry/orgs",
      "repos_url": "https://api.github.com/users/zbarry/repos",
      "events_url": "https://api.github.com/users/zbarry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zbarry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-04T19:53:30Z",
    "updated_at": "2018-10-04T19:53:30Z",
    "author_association": "NONE",
    "body": "Mirroring @dashesy 's question, could anyone point towards what would need to be worked on to implement the `TypeError('super(type, obj): obj must be an instance or subtype of type)'` fix?\r\n\r\nThanks!"
  }
]
