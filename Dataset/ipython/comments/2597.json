[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10476726",
    "html_url": "https://github.com/ipython/ipython/issues/2597#issuecomment-10476726",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2597",
    "id": 10476726,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNDc2NzI2",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-17T17:50:03Z",
    "updated_at": "2012-11-17T17:50:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "I would like to see the combination of Sumatra [1] with IPython.\n\nPerhaps the easiest step is to add an (magic?) function to dump metadata using Sumatra API.  You can dump metadata as an object having JSON repr and HTML repr, so that notebook shows pretty table with all the version information and then later time you can use JSON data to compare the version info.\n\n[1] http://neuralensemble.org/trac/sumatra/\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10476759",
    "html_url": "https://github.com/ipython/ipython/issues/2597#issuecomment-10476759",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2597",
    "id": 10476759,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNDc2NzU5",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-17T17:52:59Z",
    "updated_at": "2012-11-17T17:52:59Z",
    "author_association": "MEMBER",
    "body": "Hi, \n\nThanks for the suggestion. \nThis could totally be in the metadata of a notebook, and would be a good candidate for a notebook plugin. See PR #2518.\n\nFor now, the notebook lack configurability, and I'm a little reluctant to add by default this kind of information as it would help to fingerprint where a notebook is coming from.\n\nI'm pretty scared of [that](http://cubiq.org/project-underpants-explained) already.\n\n@ctb have some nice [thought on reproducibility](http://ivory.idyll.org/blog/vms-considered-harmful.html)\n\nAs a scientist I am +1 on a plugin like that. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10477384",
    "html_url": "https://github.com/ipython/ipython/issues/2597#issuecomment-10477384",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2597",
    "id": 10477384,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNDc3Mzg0",
    "user": {
      "login": "khughitt",
      "id": 125001,
      "node_id": "MDQ6VXNlcjEyNTAwMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/125001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/khughitt",
      "html_url": "https://github.com/khughitt",
      "followers_url": "https://api.github.com/users/khughitt/followers",
      "following_url": "https://api.github.com/users/khughitt/following{/other_user}",
      "gists_url": "https://api.github.com/users/khughitt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/khughitt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/khughitt/subscriptions",
      "organizations_url": "https://api.github.com/users/khughitt/orgs",
      "repos_url": "https://api.github.com/users/khughitt/repos",
      "events_url": "https://api.github.com/users/khughitt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/khughitt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-17T18:47:58Z",
    "updated_at": "2012-11-17T18:47:58Z",
    "author_association": "NONE",
    "body": "Yea, I think having some settings options in the notebook UI would help provide a good place for these kinds of choices.\n\nI agree with the fingerprinting. I think it should definitely be controllable so that privacy-concerned users can disable the automatic providence metadata from being added. Still, I would suspect that _most_ IPython notebook users would find this beneficial since they are probably creating the notebook with the intention of sharing/reproducing.\n\nI could be wrong though :)\n\nIncidentally, ctb's is one of the initial motivations for me to try out using IPython notebook as a lab notebook, and so far it has worked out really great!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10477642",
    "html_url": "https://github.com/ipython/ipython/issues/2597#issuecomment-10477642",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2597",
    "id": 10477642,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNDc3NjQy",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-17T19:10:44Z",
    "updated_at": "2012-11-17T19:10:44Z",
    "author_association": "MEMBER",
    "body": "> Yea, I think having some settings options in the notebook UI would help provide a good place for these kinds of choices.\n\nUI for configuration is one of the thing that are really lacking, both on notebook and qtconsole...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10492869",
    "html_url": "https://github.com/ipython/ipython/issues/2597#issuecomment-10492869",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2597",
    "id": 10492869,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNDkyODY5",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-18T22:16:28Z",
    "updated_at": "2012-11-18T22:16:28Z",
    "author_association": "MEMBER",
    "body": "I think we need to begin thinking about these things, but I am not ready to add this information to the notebook metadata universally.  It is just a lot of complexity to worry about and it is not exactly obvious what people would do with it.\n\nBUT, the IPython Notebook format is completely open and the metadata section was designed to be used by users in unexpected ways.  Thus, there is absolutely nothing preventing you from adding this information to your own notebooks.\n\nI am also -1 on adding new complexity with layers of preferences to manage that complexity for different audiences.  It something is really too complex, we should simply not implement it.\n\nPart of our vision is for the notebook format to enable reproducible research.  I would like us to continue using the notebook and exploring the ways that it helps in this effort.  We also have a number of upcoming notebook features that will address other aspects of reproducibility.  I would like to see how all of this plays out before we directly tackle this aspect of reproducibility.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/41529238",
    "html_url": "https://github.com/ipython/ipython/issues/2597#issuecomment-41529238",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2597",
    "id": 41529238,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTI5MjM4",
    "user": {
      "login": "westurner",
      "id": 50891,
      "node_id": "MDQ6VXNlcjUwODkx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/50891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/westurner",
      "html_url": "https://github.com/westurner",
      "followers_url": "https://api.github.com/users/westurner/followers",
      "following_url": "https://api.github.com/users/westurner/following{/other_user}",
      "gists_url": "https://api.github.com/users/westurner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/westurner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/westurner/subscriptions",
      "organizations_url": "https://api.github.com/users/westurner/orgs",
      "repos_url": "https://api.github.com/users/westurner/repos",
      "events_url": "https://api.github.com/users/westurner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/westurner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-28T07:13:30Z",
    "updated_at": "2014-04-28T07:13:30Z",
    "author_association": "NONE",
    "body": "These might be relevant:\n- `Adds %version_information extension` https://github.com/ipython/ipython/pull/4666 (https://github.com/jrjohansson/version_information)\n- `Adds %lsext magic and entry_points for ipython_extensions, ipython_exporters` https://github.com/ipython/ipython/pull/4673\n"
  }
]
