[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/198454918",
    "html_url": "https://github.com/ipython/ipython/pull/9335#issuecomment-198454918",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9335",
    "id": 198454918,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5ODQ1NDkxOA==",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-18T17:02:18Z",
    "updated_at": "2016-03-18T17:02:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "I tried this in Python 2\n\n```\nIn [1]: from sympy import *\n\nIn [2]: LambertW?\n---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\n<ipython-input-2-7098d7fe0bcf> in <module>()\n----> 1 get_ipython().magic(u'pinfo LambertW')\n\n/Users/aaronmeurer/Documents/ipython/IPython/core/interactiveshell.pyc in magic(self, arg_s)\n   2162         magic_name, _, magic_arg_s = arg_s.partition(' ')\n   2163         magic_name = magic_name.lstrip(prefilter.ESC_MAGIC)\n-> 2164         return self.run_line_magic(magic_name, magic_arg_s)\n   2165\n   2166     #-------------------------------------------------------------------------\n\n/Users/aaronmeurer/Documents/ipython/IPython/core/interactiveshell.pyc in run_line_magic(self, magic_name, line)\n   2083                 kwargs['local_ns'] = sys._getframe(stack_depth).f_locals\n   2084             with self.builtin_trap:\n-> 2085                 result = fn(*args,**kwargs)\n   2086             return result\n   2087\n\n<decorator-gen-74> in pinfo(self, parameter_s, namespaces)\n\n/Users/aaronmeurer/Documents/ipython/IPython/core/magic.pyc in <lambda>(f, *a, **k)\n    191     # but it's overkill for just that one bit of state.\n    192     def magic_deco(arg):\n--> 193         call = lambda f, *a, **k: f(*a, **k)\n    194\n    195         if callable(arg):\n\n/Users/aaronmeurer/Documents/ipython/IPython/core/magics/namespace.pyc in pinfo(self, parameter_s, namespaces)\n     59         else:\n     60             self.shell._inspect('pinfo', oname, detail_level=detail_level,\n---> 61                                 namespaces=namespaces)\n     62\n     63     @line_magic\n\n/Users/aaronmeurer/Documents/ipython/IPython/core/interactiveshell.pyc in _inspect(self, meth, oname, namespaces, **kw)\n   1550                 pmethod(info.obj, oname, formatter)\n   1551             elif meth == 'pinfo':\n-> 1552                 pmethod(info.obj, oname, formatter, info, **kw)\n   1553             else:\n   1554                 pmethod(info.obj, oname)\n\n/Users/aaronmeurer/Documents/ipython/IPython/core/oinspect.pyc in pinfo(self, obj, oname, formatter, info, detail_level)\n    642         - detail_level: if set to 1, more information is given.\n    643         \"\"\"\n--> 644         text = self._format_info(obj, oname, formatter, info, detail_level)\n    645         if text:\n    646             page.page(text)\n\n/Users/aaronmeurer/Documents/ipython/IPython/core/oinspect.pyc in _format_info(self, obj, oname, formatter, info, detail_level)\n    552         \"\"\"Format an info dict as text\"\"\"\n    553         info = self.info(obj, oname=oname, formatter=formatter,\n--> 554                             info=info, detail_level=detail_level)\n    555         displayfields = []\n    556         def add_fields(fields):\n\n/Users/aaronmeurer/Documents/ipython/IPython/core/oinspect.pyc in info(self, obj, oname, formatter, info, detail_level)\n    773                 init_def = None\n    774             else:\n--> 775                 out['init_definition'] = self.format(init_def)\n    776\n    777             # get the __init__ docstring\n\n/Users/aaronmeurer/Documents/ipython/IPython/utils/PyColorize.pyc in format(self, raw, out, scheme)\n    167\n    168     def format(self, raw, out = None, scheme = ''):\n--> 169         return self.format2(raw, out, scheme)[0]\n    170\n    171     def format2(self, raw, out = None, scheme = ''):\n\n/Users/aaronmeurer/Documents/ipython/IPython/utils/PyColorize.pyc in format2(self, raw, out, scheme)\n    206\n    207         # Remove trailing whitespace and normalize tabs\n--> 208         self.raw = raw.expandtabs().rstrip()\n    209\n    210         # store line offsets in self.lines\n\nAttributeError: 'NoneType' object has no attribute 'expandtabs'\n```\n\nI get no error in Python 3 (and also no error in Python 2 master). \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/198455128",
    "html_url": "https://github.com/ipython/ipython/pull/9335#issuecomment-198455128",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9335",
    "id": 198455128,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5ODQ1NTEyOA==",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-18T17:02:52Z",
    "updated_at": "2016-03-18T17:02:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "Oh that's using [this branch](https://github.com/sympy/sympy/pull/10853). I don't know if that matters. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/199192564",
    "html_url": "https://github.com/ipython/ipython/pull/9335#issuecomment-199192564",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9335",
    "id": 199192564,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5OTE5MjU2NA==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-21T09:34:47Z",
    "updated_at": "2016-03-21T09:34:47Z",
    "author_association": "MEMBER",
    "body": "Thanks, I need to add an `if not None` in there.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/199237345",
    "html_url": "https://github.com/ipython/ipython/pull/9335#issuecomment-199237345",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9335",
    "id": 199237345,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5OTIzNzM0NQ==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-21T11:45:23Z",
    "updated_at": "2016-03-21T11:45:23Z",
    "author_association": "MEMBER",
    "body": "@asmeurer looks like our backport of signatures and your signatures-only-on-py3 logic are getting in each other's way. If you return None from your `__signature__` property if `inspect.signature` is unavailable rather than raising, it should work properly on py2 and py3.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/199408087",
    "html_url": "https://github.com/ipython/ipython/pull/9335#issuecomment-199408087",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9335",
    "id": 199408087,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5OTQwODA4Nw==",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-21T18:10:30Z",
    "updated_at": "2016-03-21T18:10:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "Between your fixes and mine it doesn't error on Python 2 any more for me. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/199777043",
    "html_url": "https://github.com/ipython/ipython/pull/9335#issuecomment-199777043",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9335",
    "id": 199777043,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5OTc3NzA0Mw==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-22T11:51:34Z",
    "updated_at": "2016-03-22T11:51:34Z",
    "author_association": "MEMBER",
    "body": "Thanks, @asmeurer! This should be good to go, then.\n"
  }
]
