[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6303630",
    "html_url": "https://github.com/ipython/ipython/pull/1946#issuecomment-6303630",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1946",
    "id": 6303630,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDM2MzA=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-13T15:07:59Z",
    "updated_at": "2012-06-13T15:07:59Z",
    "author_association": "MEMBER",
    "body": "I don't think we should always import PIL at startup - that will delay startup for something that's probably not needed in many cases. We could either disable it by default, so that PIL is loaded if a particular config option is set, or delay the import until the first time it receives an image.\n\nIn terms of the API, checking against a list of strings seems awkward. I'd suggest simply setting `handle_image` to a callable object that does what's needed. If it needs to be configurable, there's a `DottedObjectName` trait which we could use.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6304747",
    "html_url": "https://github.com/ipython/ipython/pull/1946#issuecomment-6304747",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1946",
    "id": 6304747,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDQ3NDc=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-13T15:47:07Z",
    "updated_at": "2012-06-13T15:47:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the review.  Regarding the API, I think it's better to have some kind of fallback mechanism to help sharing config file in different machines.  In that case, traits something like ListOfDottedObjectName is needed.  But if this fallback style is not the IPython style, I will just change to DottedObjectName.\n\nI will apply other suggestions.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6305016",
    "html_url": "https://github.com/ipython/ipython/pull/1946#issuecomment-6305016",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1946",
    "id": 6305016,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDUwMTY=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-13T15:56:51Z",
    "updated_at": "2012-06-13T15:56:51Z",
    "author_association": "MEMBER",
    "body": "That makes sense, but I'd want to hear more about possible use cases with a fallback system - I'm generally wary of building more complex architectures without a practical reason. Especially because handling lists in config ends up with this kind of awkward dance:\n\n```\nif hasattr(app, 'exec_lines'):\n    app.exec_lines.append(lines)\nelse:\n    app.exec_lines = [lines]\n```\n\nI'm sure others will chime in on this in a bit.\n\nIf we do decide to go down that route, there's no real need for a `ListOfDottedObjectName` trait. It can be done with a regular `List` - that just means that the names are checked when they're used, rather than when they're set. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6306847",
    "html_url": "https://github.com/ipython/ipython/pull/1946#issuecomment-6306847",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1946",
    "id": 6306847,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDY4NDc=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-13T17:01:45Z",
    "updated_at": "2012-06-13T17:01:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "Other handlers I have in mind are:\n- Temp file: it creates temporally file and calls external program.\n  So you can set your favorite viewer.\n- Stream: it calls configured program and put the image in the\n  stdin.\n- Python callable: to make it more customizable.\n\nCome to think of it, I just remember that config is a python file so you can check if PIL is available in the config file.  I guess there is no need for the fallback system.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6307092",
    "html_url": "https://github.com/ipython/ipython/pull/1946#issuecomment-6307092",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1946",
    "id": 6307092,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDcwOTI=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-13T17:11:04Z",
    "updated_at": "2012-06-13T17:11:04Z",
    "author_association": "MEMBER",
    "body": "That's all reasonable, but the list could mean \"try to do all of these\", or \"try to do each of these until one succeeds\".\n\nIt's also possible to use a single callable that tries multiple things. In fact, we already have a class for \"try until one succeeds\" - it's `IPython.core.hooks.CommandChainDispatcher`.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6309017",
    "html_url": "https://github.com/ipython/ipython/pull/1946#issuecomment-6309017",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1946",
    "id": 6309017,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDkwMTc=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-13T18:20:07Z",
    "updated_at": "2012-06-13T18:20:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "So, if user want to have fallback system s/he must use CommandChainDispatcher and the hypothetical \"Python callback\" handler.  Is this what you mean?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6309702",
    "html_url": "https://github.com/ipython/ipython/pull/1946#issuecomment-6309702",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1946",
    "id": 6309702,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDk3MDI=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-13T18:43:26Z",
    "updated_at": "2012-06-13T18:43:26Z",
    "author_association": "MEMBER",
    "body": "I'd thought also that having this would be very cool, but I think it has enough implementation fine points (PIL vs native platform tools, config, etc) that we should probably mark it for 0.14.  @takluyver, thoughts??\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6309893",
    "html_url": "https://github.com/ipython/ipython/pull/1946#issuecomment-6309893",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1946",
    "id": 6309893,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDk4OTM=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-13T18:49:26Z",
    "updated_at": "2012-06-13T18:49:26Z",
    "author_association": "MEMBER",
    "body": "Using a CCD as the handler, your config file would do something like:\n\n```\nfrom IPython.core.hooks import CommandChainDispatcher\nfrom my_img_handlers import show_in_pil, save_to_file\n\nc.ZMQTerminalInteractiveShell.image_handler = CommandChainDispatcher([show_in_pil, save_to_file])\n```\n\nI think I agree with @fperez that this is best done for 0.14.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6309999",
    "html_url": "https://github.com/ipython/ipython/pull/1946#issuecomment-6309999",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1946",
    "id": 6309999,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDk5OTk=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-13T18:53:18Z",
    "updated_at": "2012-06-13T18:53:18Z",
    "author_association": "MEMBER",
    "body": "OK, tagging as such.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6310615",
    "html_url": "https://github.com/ipython/ipython/pull/1946#issuecomment-6310615",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1946",
    "id": 6310615,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTA2MTU=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-13T19:16:53Z",
    "updated_at": "2012-06-13T19:16:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am fine with marking it as 0.14!\n\n@takluyver I thought I'd have `Enum(['PIL', 'Stream', 'TempFile', 'Callable'])` as trait for `image_handler` and other options such as `file_image_handler_command`.  So your example will be like:\n\n``` python\nc.ZMQTerminalInteractiveShell.image_handler = 'Callable'\nc.ZMQTerminalInteractiveShell.callable_image_handler = CommandChainDispatcher([show_in_pil, save_to_file])\n```\n\nOther configuration example will be like:\n\n``` python\nc.ZMQTerminalInteractiveShell.image_handler = 'TempFile'\nc.ZMQTerminalInteractiveShell.tempfile_image_handler = ['my_viewer', '--file', '{0}']  # temp file goes into '{0}'\n```\n\nWhat do you think?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6311049",
    "html_url": "https://github.com/ipython/ipython/pull/1946#issuecomment-6311049",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1946",
    "id": 6311049,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTEwNDk=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-13T19:35:07Z",
    "updated_at": "2012-06-13T19:35:07Z",
    "author_association": "MEMBER",
    "body": "Why not just have the callable thing, and offer PIL, stream and tempfile as functions which it can be set to? That way we only need one configurable value, not two.\n\nThat's still compatible with special casing some short names so they're quick to set - here's an example that takes two special cases or an importable name:\nhttps://github.com/ipython/ipython/blob/master/IPython/zmq/session.py#L252\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6311263",
    "html_url": "https://github.com/ipython/ipython/pull/1946#issuecomment-6311263",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1946",
    "id": 6311263,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTEyNjM=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-13T19:42:37Z",
    "updated_at": "2012-06-13T19:42:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "How do you configure external program when you have only one configurable?  Something like this?\n\n``` python\nfrom IPython.somewhere import TempFile\nc.ZMQTerminalInteractiveShell.image_handler = TempFile(['my_viewer', '--file', '{0}'])\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6311447",
    "html_url": "https://github.com/ipython/ipython/pull/1946#issuecomment-6311447",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1946",
    "id": 6311447,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTE0NDc=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-13T19:50:07Z",
    "updated_at": "2012-06-13T19:50:07Z",
    "author_association": "MEMBER",
    "body": "There's various ways you could set the arguments for the image viewer - a second config value may make sense there. I was more objecting to the split between `image_handler` and `callable_image_handler`.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6312560",
    "html_url": "https://github.com/ipython/ipython/pull/1946#issuecomment-6312560",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1946",
    "id": 6312560,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTI1NjA=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-13T20:28:34Z",
    "updated_at": "2012-06-13T20:28:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Wait, putting a callable in image_handler is an error if the trait is DottedObjectName, right?  How can you have a configuration that can be a string or a callable?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6312795",
    "html_url": "https://github.com/ipython/ipython/pull/1946#issuecomment-6312795",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1946",
    "id": 6312795,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTI3OTU=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-13T20:37:26Z",
    "updated_at": "2012-06-13T20:37:26Z",
    "author_association": "MEMBER",
    "body": "Yeah, I've gone back on my idea about `DottedObjectName`. I think we should have a generic configurable, that can take either a callable object or a string, and uses that to set `handle_image`.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6312980",
    "html_url": "https://github.com/ipython/ipython/pull/1946#issuecomment-6312980",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1946",
    "id": 6312980,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTI5ODA=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-13T20:44:12Z",
    "updated_at": "2012-06-13T20:44:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "What trait I should use in that case?  `Any`?  It would be nice to have \"trait\" that can do `Or(Callable(...), Enum(...))`.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6313178",
    "html_url": "https://github.com/ipython/ipython/pull/1946#issuecomment-6313178",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1946",
    "id": 6313178,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTMxNzg=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-13T20:51:34Z",
    "updated_at": "2012-06-13T20:51:34Z",
    "author_association": "MEMBER",
    "body": "I think Any is fine - let's not overcomplicate this. I'd rather not\nhave to debug traitlets code, because it's very meta.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6313669",
    "html_url": "https://github.com/ipython/ipython/pull/1946#issuecomment-6313669",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1946",
    "id": 6313669,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTM2Njk=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-13T21:09:36Z",
    "updated_at": "2012-06-13T21:09:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am awkward to use Any for configurable because I think whole point of using trait is to make things type safe...  I'd like to stick to my Enum solution because it become little bit verbose only when using the callable and I think you'd accept little bit verbose config file when you configuring complex stuff like user defined callable.  What do you think?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6314703",
    "html_url": "https://github.com/ipython/ipython/pull/1946#issuecomment-6314703",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1946",
    "id": 6314703,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTQ3MDM=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-13T21:50:15Z",
    "updated_at": "2012-06-13T21:50:15Z",
    "author_association": "MEMBER",
    "body": "I think 2 configurables is still more complexity than 1. Both in terms of code, and for the user - it might not be obvious that `callable_image_handler` only affects anything if you set `image_handler` to \"callable\".\n\nRemember that you can write a function to be called when the trait is changed, so you could validate the input there (if I understand traits correctly).\n\nAnother way would be to create a new `Callable` trait, and offer a convenience method `select_image_handler` to use the short names.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6316180",
    "html_url": "https://github.com/ipython/ipython/pull/1946#issuecomment-6316180",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1946",
    "id": 6316180,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTYxODA=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-13T23:02:39Z",
    "updated_at": "2012-06-13T23:02:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "I just made a sample implementation using Enum.  In terms of code, I think it is better to have homogeneous type to simplify code.  If you allow callable to image_handler, you need to add more if block.  For the user side, you already have different configurables for external program.  Why not for callable?  It's verbose, but symmetric.\n\nBTW, configurations I put does not show up by the command `%config`?  What is wrong?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6316360",
    "html_url": "https://github.com/ipython/ipython/pull/1946#issuecomment-6316360",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1946",
    "id": 6316360,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTYzNjA=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-13T23:10:46Z",
    "updated_at": "2012-06-13T23:10:57Z",
    "author_association": "MEMBER",
    "body": "> BTW, configurations I put does not show up by the command %config? What is wrong?\n\nIt needs to be added to the shell's configurables list to show up in %config.  MagicsManager.register should be doing this.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6364245",
    "html_url": "https://github.com/ipython/ipython/pull/1946#issuecomment-6364245",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1946",
    "id": 6364245,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNjQyNDU=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-15T19:10:56Z",
    "updated_at": "2012-06-15T19:10:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "I implemented everything I want to add in this PR.  I think the remaining work is config API tweaks.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6693955",
    "html_url": "https://github.com/ipython/ipython/pull/1946#issuecomment-6693955",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1946",
    "id": 6693955,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2OTM5NTU=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-01T14:41:54Z",
    "updated_at": "2012-07-01T14:41:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Now that the 0.13 is out, should I rebase it so that the review is easier?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6696228",
    "html_url": "https://github.com/ipython/ipython/pull/1946#issuecomment-6696228",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1946",
    "id": 6696228,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2OTYyMjg=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-01T19:30:32Z",
    "updated_at": "2012-07-01T19:30:32Z",
    "author_association": "MEMBER",
    "body": "No need: as long as there are no conflicts (which in this case there aren't), it doesn't matter.\n\nJust note that we may be a bit slow with review for a bit, the release blitz put us all behind on other 'real life' things :)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6696267",
    "html_url": "https://github.com/ipython/ipython/pull/1946#issuecomment-6696267",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1946",
    "id": 6696267,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2OTYyNjc=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-01T19:35:39Z",
    "updated_at": "2012-07-01T19:35:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "No problem.  Thanks for the great release!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6696308",
    "html_url": "https://github.com/ipython/ipython/pull/1946#issuecomment-6696308",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1946",
    "id": 6696308,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2OTYzMDg=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-01T19:40:32Z",
    "updated_at": "2012-07-01T19:40:32Z",
    "author_association": "MEMBER",
    "body": "I'll be in Sweden for the next week or so, and won't be doing much review between now and our SciPy tutorial Tuesday July 17, but then I should be doing lots of IPython work for the rest of that week while at SciPy.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7632332",
    "html_url": "https://github.com/ipython/ipython/pull/1946#issuecomment-7632332",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1946",
    "id": 7632332,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MzIzMzI=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-10T01:54:24Z",
    "updated_at": "2012-08-10T01:54:24Z",
    "author_association": "MEMBER",
    "body": "Can you summarize when/why this functionality is needed.  the IPython display protocol already handles these image types and it is not obvious to me why it is needed.  Also, it appears that this is welding display code (PIL) into the kernel.  The ZMQ kernel cannot assume access to a native GUI/window environment.  Before I review the details of the code I want to make sure I understand the big picture.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7640385",
    "html_url": "https://github.com/ipython/ipython/pull/1946#issuecomment-7640385",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1946",
    "id": 7640385,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NDAzODU=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-10T12:08:27Z",
    "updated_at": "2012-08-10T12:08:27Z",
    "author_association": "MEMBER",
    "body": "@ellisonbg : This doesn't affect the kernel. This is about what the terminal frontend (`ipython console`) does if it receives display data from the kernel.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7661495",
    "html_url": "https://github.com/ipython/ipython/pull/1946#issuecomment-7661495",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1946",
    "id": 7661495,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NjE0OTU=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-10T23:26:38Z",
    "updated_at": "2012-08-10T23:26:38Z",
    "author_association": "MEMBER",
    "body": "Ahh, now it makes perfect sense, I missed the \"Terminal\" in the class name.\n\nOn Fri, Aug 10, 2012 at 5:08 AM, Thomas Kluyver notifications@github.comwrote:\n\n> @ellisonbg https://github.com/ellisonbg : This doesn't affect the\n> kernel. This is about what the terminal frontend (ipython console) does\n> if it receives display data from the kernel.\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/1946#issuecomment-7640385.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7892367",
    "html_url": "https://github.com/ipython/ipython/pull/1946#issuecomment-7892367",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1946",
    "id": 7892367,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4OTIzNjc=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-21T06:03:50Z",
    "updated_at": "2012-08-21T06:03:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thoughts on whether or not this is ready to go?  I agree that the configuration options are slightly unfortunate, but it's not obvious to me that any other setup would be objectively better.\n"
  }
]
