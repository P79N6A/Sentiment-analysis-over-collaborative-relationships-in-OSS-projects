[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25322487",
    "html_url": "https://github.com/ipython/ipython/issues/4298#issuecomment-25322487",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4298",
    "id": 25322487,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzIyNDg3",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-29T15:42:22Z",
    "updated_at": "2013-09-29T15:42:22Z",
    "author_association": "MEMBER",
    "body": "Hi, \n\nI'm probably to much used to run IPython with modified `.py` files, hence the slow compiling time of `.pyc` and me not beeing surprised by ~12 sec startup on StackOverflow. Here with `ipython notebook --pylab` I'm more ~3s with a not so fast computer.\n\nprofiling (warm) startup : \n\n```\n$ python -m cProfile -s time `which ipython` notebook --pylab\n362955 function calls (353728 primitive calls) in 2.696 seconds\n\n   Ordered by: internal time\n\n   ncalls  tottime  percall  cumtime  percall filename:lineno(function)\n       11    1.507    0.137    1.508    0.137 {zmq.core._poll.zmq_poll}\n        2    0.105    0.052    0.105    0.052 {select.select}\n  905/262    0.028    0.000    0.073    0.000 sre_parse.py:380(_parse)\n        1    0.027    0.027    0.043    0.043 widgets.py:10(<module>)\n       44    0.020    0.000    0.180    0.004 __init__.py:1(<module>)\n     2519    0.019    0.000    0.019    0.000 {posix.stat}\n 1712/229    0.018    0.000    0.055    0.000 sre_compile.py:33(_compile)\n    10126    0.016    0.000    0.018    0.000 sre_parse.py:183(__next)\n      635    0.015    0.000    0.029    0.000 sre_compile.py:208(_optimize_charset)\n    30313    0.013    0.000    0.013    0.000 {isinstance}\n 2414/947    0.013    0.000    0.014    0.000 sre_parse.py:141(getwidth)\n      161    0.013    0.000    0.013    0.000 {compile}\n...\n```\n\nShow most of the time is spent in waiting for multiple process to speak over ZMQ....\n\nCan you try on your machine to see the bottlenecks ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25322981",
    "html_url": "https://github.com/ipython/ipython/issues/4298#issuecomment-25322981",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4298",
    "id": 25322981,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzIyOTgx",
    "user": {
      "login": "xaverm",
      "id": 2843926,
      "node_id": "MDQ6VXNlcjI4NDM5MjY=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2843926?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xaverm",
      "html_url": "https://github.com/xaverm",
      "followers_url": "https://api.github.com/users/xaverm/followers",
      "following_url": "https://api.github.com/users/xaverm/following{/other_user}",
      "gists_url": "https://api.github.com/users/xaverm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xaverm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xaverm/subscriptions",
      "organizations_url": "https://api.github.com/users/xaverm/orgs",
      "repos_url": "https://api.github.com/users/xaverm/repos",
      "events_url": "https://api.github.com/users/xaverm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xaverm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-29T16:11:08Z",
    "updated_at": "2013-09-29T16:27:19Z",
    "author_association": "NONE",
    "body": "Hi,\n\nyou are absolutely right about ZMQ, but, as compared to your table there is almost a factor of 10 increase in the time spent with ZMQ and one can also see some socket things which take away a similar time total\n\nDoes this give you any clue as to where to continue?\n\n342841 function calls (333899 primitive calls) in 23.093 CPU seconds\n   Ordered by: internal time\n\n   ncalls  tottime  percall  cumtime  percall filename:lineno(function)\n       16   11.444    0.715   11.444    0.715 {zmq.core._poll.zmq_poll}\n        3   10.007    3.336   10.007    3.336 {_socket.gethostbyname_ex}\n      433    0.221    0.001    0.221    0.001 {built-in method search}\n  927/250    0.057    0.000    0.210    0.001 sre_parse.py:379(_parse)\n42236/41229  0.045    0.000    0.047    0.000 {len}\n 1815/220    0.040    0.000    0.118    0.001 sre_compile.py:32(_compile)\n     9834    0.040    0.000    0.058    0.000 sre_parse.py:182(__next)\n    26869    0.038    0.000    0.038    0.000 {isinstance}\n    36397    0.037    0.000    0.037    0.000 {method 'append' of 'list' objects}\n      117    0.023    0.000    0.041    0.000 textwrap.py:235(_wrap_chunks)\n     7690    0.022    0.000    0.033    0.000 sre_parse.py:130(__getitem__)\n        1    0.022    0.022    0.022    0.022 backend_bases.py:2411(FigureManagerBase)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25323670",
    "html_url": "https://github.com/ipython/ipython/issues/4298#issuecomment-25323670",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4298",
    "id": 25323670,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzIzNjcw",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-29T16:37:39Z",
    "updated_at": "2013-09-29T16:37:39Z",
    "author_association": "MEMBER",
    "body": "Then chances are high the blocking call are in one of these : \n\n```\n$ grep  gethostbyname_ex **/*.py\nIPython/utils/localinterfaces.py:        LOCAL_IPS[:] = socket.gethostbyname_ex('localhost')[2]\nIPython/utils/localinterfaces.py:        PUBLIC_IPS[:] = socket.gethostbyname_ex(hostname)[2]\nIPython/utils/localinterfaces.py:            PUBLIC_IPS[:] = socket.gethostbyname_ex(socket.gethostname() + '.local')[2]\n```\n\nCan you try \n\n```\nimport socket\n%timeit -n1 -r1 socket.gethostbyname_ex('localhost')\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25323685",
    "html_url": "https://github.com/ipython/ipython/issues/4298#issuecomment-25323685",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4298",
    "id": 25323685,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzIzNjg1",
    "user": {
      "login": "jenshnielsen",
      "id": 548266,
      "node_id": "MDQ6VXNlcjU0ODI2Ng==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/548266?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jenshnielsen",
      "html_url": "https://github.com/jenshnielsen",
      "followers_url": "https://api.github.com/users/jenshnielsen/followers",
      "following_url": "https://api.github.com/users/jenshnielsen/following{/other_user}",
      "gists_url": "https://api.github.com/users/jenshnielsen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jenshnielsen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jenshnielsen/subscriptions",
      "organizations_url": "https://api.github.com/users/jenshnielsen/orgs",
      "repos_url": "https://api.github.com/users/jenshnielsen/repos",
      "events_url": "https://api.github.com/users/jenshnielsen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jenshnielsen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-29T16:38:57Z",
    "updated_at": "2013-09-29T16:38:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "This stackoverflow question looks related http://stackoverflow.com/questions/18544514/gethostbyname-exhostname-extremely-slow\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25324312",
    "html_url": "https://github.com/ipython/ipython/issues/4298#issuecomment-25324312",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4298",
    "id": 25324312,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzI0MzEy",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-29T17:07:51Z",
    "updated_at": "2013-09-29T17:07:51Z",
    "author_association": "MEMBER",
    "body": "IPython.utils.localinterfaces was causing a slowdown for someone else\nrecently as well. We moved the calls into functions so they don't get\nexecuted at import time, which should speed up 'ipython --pylab'. The\nnotebook still needs to call those functions, so there probably won't be a\nclear difference.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25326295",
    "html_url": "https://github.com/ipython/ipython/issues/4298#issuecomment-25326295",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4298",
    "id": 25326295,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzI2Mjk1",
    "user": {
      "login": "xaverm",
      "id": 2843926,
      "node_id": "MDQ6VXNlcjI4NDM5MjY=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2843926?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xaverm",
      "html_url": "https://github.com/xaverm",
      "followers_url": "https://api.github.com/users/xaverm/followers",
      "following_url": "https://api.github.com/users/xaverm/following{/other_user}",
      "gists_url": "https://api.github.com/users/xaverm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xaverm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xaverm/subscriptions",
      "organizations_url": "https://api.github.com/users/xaverm/orgs",
      "repos_url": "https://api.github.com/users/xaverm/repos",
      "events_url": "https://api.github.com/users/xaverm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xaverm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-29T18:50:59Z",
    "updated_at": "2013-09-29T18:50:59Z",
    "author_association": "NONE",
    "body": "hmm, maybe we have something here ... but pls. read ...\nFirst I tried your suggestion\n\n```\nIn [2]: import socket\nIn [7]: %timeit -n1 -r1 socket.gethostbyname_ex('localhost')\n1 loops, best of 1: 240 µs per loop\n```\n\nI guess that does not look too bad.\nThen I went to this file IPython/utils/localinterfaces.py, which you pointed at.\nIf I understand properly, the relevant section is:\n\n# \n\n```\nimport socket\n\nLOCAL_IPS = []\ntry:\n    LOCAL_IPS = socket.gethostbyname_ex('localhost')[2]\nexcept socket.error:\n    pass\n\nPUBLIC_IPS = []\ntry:\n    hostname = socket.gethostname()\n    PUBLIC_IPS = socket.gethostbyname_ex(hostname)[2]\n    # try hostname.local, in case hostname has been short-circuited to loopback\n    if not hostname.endswith('.local') and all(ip.startswith('127') for ip in PUBLIC_IPS):\n        PUBLIC_IPS = socket.gethostbyname_ex(socket.gethostname() + '.local')[2]\nexcept socket.error:\n    pass\n```\n\n# \n\nSo, I copied that into a small test file 'sock.py' and ran\n\n```\npython -m cProfile -s time `which ipython` sock.py\n```\n\nThe results is:\n\n```\n225252 function calls (221296 primitive calls) in 10.924 CPU seconds\nOrdered by: internal time\n   ncalls  tottime  percall  cumtime  percall filename:lineno(function)\n        3   10.009    3.336   10.009    3.336 {_socket.gethostbyname_ex}\n        1    0.174    0.174    0.175    0.175 history.py:491(new_session)\n```\n\nDo you see it!\nThe 1st line is basically the same delay as for the second line in my start up profile for 'ipython --pylab'.\nSo therefore I put\n\n```\nimport pdb \npdb.set_trace()\n```\n\nat the top of the snippet 'sock.py', invoked\n\n```\nipython sock.py\n```\n\nand stepped through the file ... and:\n1) Yes, it hangs at this line\n\n```\n        PUBLIC_IPS = socket.gethostbyname_ex(socket.gethostname() + '.local')[2]\n```\n\n2) Yes, my hostname does not end with '.local' and my (only) PUBLIC_IPS is '127.0.0.2'.\nSo, it is completely proper that the script steps into this `if not` clause\n\n3) So, now I just directly run the statement following the clause ... and ... I get an error\n\n```\nIn [12]: socket.gethostbyname_ex(socket.gethostname() + '.local')[2]\n---------------------------------------------------------------------------\ngaierror                                  Traceback (most recent call last)\n<ipython-input-12-1febc9a38064> in <module>()\n----> 1 socket.gethostbyname_ex(socket.gethostname() + '.local')[2]\n\ngaierror: [Errno -2] Name or service not known\n```\n\nSo, `localinterfaces.py` seems not only to wait for a long time, but even seems to exit with probably a wrong entry for PUBLIC_IPS\n\nAny clues which steps to take next?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25327105",
    "html_url": "https://github.com/ipython/ipython/issues/4298#issuecomment-25327105",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4298",
    "id": 25327105,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzI3MTA1",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-29T19:26:16Z",
    "updated_at": "2013-09-29T19:26:16Z",
    "author_association": "MEMBER",
    "body": "Well, the error raised is probably catched by the `except socket.error` then the assignment has not been made so `PUBLIC_IPS` will be correct.\n\n`gethostbyname_ex` have no timeout options. So I don't see any things to do except adding an option to not try to get `PUBLIC_IPS`.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25327299",
    "html_url": "https://github.com/ipython/ipython/issues/4298#issuecomment-25327299",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4298",
    "id": 25327299,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzI3Mjk5",
    "user": {
      "login": "xaverm",
      "id": 2843926,
      "node_id": "MDQ6VXNlcjI4NDM5MjY=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2843926?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xaverm",
      "html_url": "https://github.com/xaverm",
      "followers_url": "https://api.github.com/users/xaverm/followers",
      "following_url": "https://api.github.com/users/xaverm/following{/other_user}",
      "gists_url": "https://api.github.com/users/xaverm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xaverm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xaverm/subscriptions",
      "organizations_url": "https://api.github.com/users/xaverm/orgs",
      "repos_url": "https://api.github.com/users/xaverm/repos",
      "events_url": "https://api.github.com/users/xaverm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xaverm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-29T19:35:01Z",
    "updated_at": "2013-09-29T19:35:01Z",
    "author_association": "NONE",
    "body": "Do you mean, that even though the script wants to have `PUBLIC_IPS` different  from `socket.gethostbyname_ex(hostname)[2]`, as the `if` clause suggests, this will not cause problems later?\n\nAlong that line, what should the 'proper' `PUBLIC_IPS` be anyway? \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25327323",
    "html_url": "https://github.com/ipython/ipython/issues/4298#issuecomment-25327323",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4298",
    "id": 25327323,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzI3MzIz",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-29T19:36:05Z",
    "updated_at": "2013-09-29T19:36:05Z",
    "author_association": "MEMBER",
    "body": "PUBLIC_IPS seem to used only in parallels utils. we might make it lazy; but it will only push the problem later. (but at least, people using parallel have more often open public IPs I guess.\n\n@minrk ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25327431",
    "html_url": "https://github.com/ipython/ipython/issues/4298#issuecomment-25327431",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4298",
    "id": 25327431,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzI3NDMx",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-29T19:40:51Z",
    "updated_at": "2013-09-29T19:40:51Z",
    "author_association": "MEMBER",
    "body": "> Do you mean, that even though the script wants to have PUBLIC_IPS different from socket.gethostbyname_ex(hostname)[2], as the if clause suggests, this will not cause problems later?\n> \n> Along that line, what should the 'proper' PUBLIC_IPS be anyway?\n\nPUBLIC_IPS seem to be used in some parallel stuff, I guess to create connection between hub/engines/master (I guess) I don't think it is always used, so as long as you don't use thoses functionality you shoudn't have any problem. And in any case I guess that if you need those functionality things will work as expected and you will not get to the point where the exception is thrown.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25327465",
    "html_url": "https://github.com/ipython/ipython/issues/4298#issuecomment-25327465",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4298",
    "id": 25327465,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzI3NDY1",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-29T19:42:19Z",
    "updated_at": "2013-09-29T19:42:19Z",
    "author_association": "MEMBER",
    "body": "@Carreau LOCAL_IPS includes PUBLIC_IPS, so it's used anywhere LOCAL_IPS is used.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25327606",
    "html_url": "https://github.com/ipython/ipython/issues/4298#issuecomment-25327606",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4298",
    "id": 25327606,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzI3NjA2",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-29T19:47:06Z",
    "updated_at": "2013-09-29T19:47:06Z",
    "author_association": "MEMBER",
    "body": "rhoo, how did I missed that. I probably need sleep.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25327975",
    "html_url": "https://github.com/ipython/ipython/issues/4298#issuecomment-25327975",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4298",
    "id": 25327975,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzI3OTc1",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-29T20:04:28Z",
    "updated_at": "2013-09-29T20:04:28Z",
    "author_association": "MEMBER",
    "body": "there are much faster ways to get this information with tools like netifaces, but I don't know of better ways (that work on Windows) with the stdlib.  I could write two versions, one that uses netifaces, and fallback on gethostbyname if it's unavailable.  I could also use `ifconfig` posixy platforms, and only use gethostbyname (or ipconfig) on Windows.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25328053",
    "html_url": "https://github.com/ipython/ipython/issues/4298#issuecomment-25328053",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4298",
    "id": 25328053,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzI4MDUz",
    "user": {
      "login": "xaverm",
      "id": 2843926,
      "node_id": "MDQ6VXNlcjI4NDM5MjY=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2843926?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xaverm",
      "html_url": "https://github.com/xaverm",
      "followers_url": "https://api.github.com/users/xaverm/followers",
      "following_url": "https://api.github.com/users/xaverm/following{/other_user}",
      "gists_url": "https://api.github.com/users/xaverm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xaverm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xaverm/subscriptions",
      "organizations_url": "https://api.github.com/users/xaverm/orgs",
      "repos_url": "https://api.github.com/users/xaverm/repos",
      "events_url": "https://api.github.com/users/xaverm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xaverm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-29T20:08:02Z",
    "updated_at": "2013-09-29T20:08:48Z",
    "author_association": "NONE",
    "body": "ok. so then I just commented away the `if` clause in `localinterfaces.py`\n\n```\n#if not hostname.endswith('.local') and all(ip.startswith('127') for ip in PUBLIC_IPS):\n#    PUBLIC_IPS = socket.gethostbyname_ex(socket.gethostname() + '.local')[2]\n```\n\nrecompiled `localinterfaces.pyc` and with that `ipython --pylab` and `ipython notebook --pylab` both start up within less than 1-2 secs.\nHope this will not backfire.\n\nThanks for helping. That was great.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25328120",
    "html_url": "https://github.com/ipython/ipython/issues/4298#issuecomment-25328120",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4298",
    "id": 25328120,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzI4MTIw",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-29T20:11:19Z",
    "updated_at": "2013-09-29T20:11:19Z",
    "author_association": "MEMBER",
    "body": "Can you share the contents of `/etc/hosts` (excluding anything you might consider sensitive)?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25328497",
    "html_url": "https://github.com/ipython/ipython/issues/4298#issuecomment-25328497",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4298",
    "id": 25328497,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzI4NDk3",
    "user": {
      "login": "xaverm",
      "id": 2843926,
      "node_id": "MDQ6VXNlcjI4NDM5MjY=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2843926?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xaverm",
      "html_url": "https://github.com/xaverm",
      "followers_url": "https://api.github.com/users/xaverm/followers",
      "following_url": "https://api.github.com/users/xaverm/following{/other_user}",
      "gists_url": "https://api.github.com/users/xaverm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xaverm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xaverm/subscriptions",
      "organizations_url": "https://api.github.com/users/xaverm/orgs",
      "repos_url": "https://api.github.com/users/xaverm/repos",
      "events_url": "https://api.github.com/users/xaverm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xaverm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-29T20:29:26Z",
    "updated_at": "2013-09-29T20:29:26Z",
    "author_association": "NONE",
    "body": "127.0.0.1     localhost\n::1               localhost ipv6-localhost ipv6-loopback\nfe00::0         ipv6-localnet\nff00::0         ipv6-mcastprefix\nff02::1         ipv6-allnodes\nff02::2         ipv6-allrouters\nff02::3         ipv6-allhosts\n127.0.0.2     mymachname.do.main.de mymachname\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25329034",
    "html_url": "https://github.com/ipython/ipython/issues/4298#issuecomment-25329034",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4298",
    "id": 25329034,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzI5MDM0",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-29T20:57:40Z",
    "updated_at": "2013-09-29T20:57:40Z",
    "author_association": "MEMBER",
    "body": "I too have been seeing some really long startup times on Mac OS X (>10 s)\nrecently.\n\nCheers,\n\nBrian\n\nOn Sun, Sep 29, 2013 at 1:29 PM, xaverm notifications@github.com wrote:\n\n> 127.0.0.1 localhost\n> ::1 localhost ipv6-localhost ipv6-loopback\n> fe00::0 ipv6-localnet\n> ff00::0 ipv6-mcastprefix\n> ff02::1 ipv6-allnodes\n> ff02::2 ipv6-allrouters\n> ff02::3 ipv6-allhosts\n> 127.0.0.2 mymachname.do.main.de mymachname\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/issues/4298#issuecomment-25328497\n> .\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25329045",
    "html_url": "https://github.com/ipython/ipython/issues/4298#issuecomment-25329045",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4298",
    "id": 25329045,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzI5MDQ1",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-29T20:58:20Z",
    "updated_at": "2013-09-29T20:58:20Z",
    "author_association": "MEMBER",
    "body": "@ellisonbg can you diagnose the slow startup?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25329064",
    "html_url": "https://github.com/ipython/ipython/issues/4298#issuecomment-25329064",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4298",
    "id": 25329064,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzI5MDY0",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-29T20:59:06Z",
    "updated_at": "2013-09-29T20:59:06Z",
    "author_association": "MEMBER",
    "body": "Sure I will try to get to that...\n\nOn Sun, Sep 29, 2013 at 1:58 PM, Min RK notifications@github.com wrote:\n\n> @ellisonbg https://github.com/ellisonbg can you diagnose the slow\n> startup?\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/issues/4298#issuecomment-25329045\n> .\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25331473",
    "html_url": "https://github.com/ipython/ipython/issues/4298#issuecomment-25331473",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4298",
    "id": 25331473,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzMxNDcz",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-29T23:19:03Z",
    "updated_at": "2013-09-29T23:19:03Z",
    "author_association": "MEMBER",
    "body": "I opened #4304 and #4305 as possible candidates to improve this situation. #4304 uses netifaces if available, and #4305 parses the output of `ifconfig` / `ip addr` / `ipconfig` as appropriate.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33302138",
    "html_url": "https://github.com/ipython/ipython/issues/4298#issuecomment-33302138",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4298",
    "id": 33302138,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzAyMTM4",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-25T22:06:46Z",
    "updated_at": "2014-01-25T22:06:46Z",
    "author_association": "MEMBER",
    "body": "I think we have done all we can on this.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/311536431",
    "html_url": "https://github.com/ipython/ipython/issues/4298#issuecomment-311536431",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4298",
    "id": 311536431,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMTUzNjQzMQ==",
    "user": {
      "login": "yangofzeal",
      "id": 311990,
      "node_id": "MDQ6VXNlcjMxMTk5MA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/311990?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yangofzeal",
      "html_url": "https://github.com/yangofzeal",
      "followers_url": "https://api.github.com/users/yangofzeal/followers",
      "following_url": "https://api.github.com/users/yangofzeal/following{/other_user}",
      "gists_url": "https://api.github.com/users/yangofzeal/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yangofzeal/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yangofzeal/subscriptions",
      "organizations_url": "https://api.github.com/users/yangofzeal/orgs",
      "repos_url": "https://api.github.com/users/yangofzeal/repos",
      "events_url": "https://api.github.com/users/yangofzeal/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yangofzeal/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-28T02:07:05Z",
    "updated_at": "2017-06-28T02:07:05Z",
    "author_association": "NONE",
    "body": "$ sudo pip install ipython==1.0"
  }
]
