[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23757540",
    "html_url": "https://github.com/ipython/ipython/issues/4169#issuecomment-23757540",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4169",
    "id": 23757540,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzU3NTQw",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-04T00:17:00Z",
    "updated_at": "2013-09-04T00:17:00Z",
    "author_association": "MEMBER",
    "body": "Did we profile the effect of CodeMirro instantiation?\n\nOn Tue, Sep 3, 2013 at 5:11 PM, Min RK notifications@github.com wrote:\n\n> This is very expensive, and the primary limiting factor for loading\n> notebooks with many cells. Instantiating CodeMirror on first edit of a cell\n> will help load performance a great deal.\n> \n> We should do this after @ellisonbg https://github.com/ellisonbg's modal\n> PR, since that will add a 'first edit' event to code cells, which doesn't\n> really exist right now.\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/issues/4169\n> .\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23757811",
    "html_url": "https://github.com/ipython/ipython/issues/4169#issuecomment-23757811",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4169",
    "id": 23757811,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzU3ODEx",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-04T00:23:40Z",
    "updated_at": "2013-09-04T00:23:40Z",
    "author_association": "MEMBER",
    "body": "On 3 September 2013 17:17, Brian E. Granger notifications@github.comwrote:\n\n> Did we profile the effect of CodeMirro instantiation?\n\nMin did rough profiling by creating a load of blank cells and loading a\nnotebook (slow), then commenting out the codemirror instantiation and\nloading the same notebook (significantly quicker).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23763645",
    "html_url": "https://github.com/ipython/ipython/issues/4169#issuecomment-23763645",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4169",
    "id": 23763645,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzYzNjQ1",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-04T03:22:50Z",
    "updated_at": "2013-09-04T03:22:50Z",
    "author_association": "MEMBER",
    "body": "And by significantly quicker, I mean 10x faster - almost all of the load time is spent instantiating CodeMirror instances.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23763671",
    "html_url": "https://github.com/ipython/ipython/issues/4169#issuecomment-23763671",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4169",
    "id": 23763671,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzYzNjcx",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-04T03:23:45Z",
    "updated_at": "2013-09-04T03:23:45Z",
    "author_association": "MEMBER",
    "body": "Ahh, OK thanks, this is a good data point.  Fixing this is going to be\ntricky as we are going to need to figure out how to style/format/syntax\nhighlight without CodeMirror prior to editing.  But if it is costing us\nthat much it will be a worthy investment.\n\nOn Tue, Sep 3, 2013 at 5:23 PM, Thomas Kluyver notifications@github.comwrote:\n\n> On 3 September 2013 17:17, Brian E. Granger <notifications@github.com\n> \n> > wrote:\n> > \n> > Did we profile the effect of CodeMirro instantiation?\n> \n> Min did rough profiling by creating a load of blank cells and loading a\n> notebook (slow), then commenting out the codemirror instantiation and\n> loading the same notebook (significantly quicker).\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/issues/4169#issuecomment-23757811\n> .\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23765723",
    "html_url": "https://github.com/ipython/ipython/issues/4169#issuecomment-23765723",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4169",
    "id": 23765723,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzY1NzIz",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-04T04:43:29Z",
    "updated_at": "2013-09-04T04:43:29Z",
    "author_association": "MEMBER",
    "body": "For what it's worth, @williamstein avoided this problem in https://cloud.sagemath.com by making the entire worksheet a single codemirror instance.  A number of (I think rather natural) editing behaviors then spring out of having all input and output in the same Codemirror instance.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/24304654",
    "html_url": "https://github.com/ipython/ipython/issues/4169#issuecomment-24304654",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4169",
    "id": 24304654,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MzA0NjU0",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-12T09:14:47Z",
    "updated_at": "2013-09-12T09:14:47Z",
    "author_association": "MEMBER",
    "body": "But we might have option for the several codemirror instances that change across cells, even codecell might have different highlight settings if the first line is a magic...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/24334435",
    "html_url": "https://github.com/ipython/ipython/issues/4169#issuecomment-24334435",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4169",
    "id": 24334435,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MzM0NDM1",
    "user": {
      "login": "williamstein",
      "id": 1276278,
      "node_id": "MDQ6VXNlcjEyNzYyNzg=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1276278?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/williamstein",
      "html_url": "https://github.com/williamstein",
      "followers_url": "https://api.github.com/users/williamstein/followers",
      "following_url": "https://api.github.com/users/williamstein/following{/other_user}",
      "gists_url": "https://api.github.com/users/williamstein/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/williamstein/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/williamstein/subscriptions",
      "organizations_url": "https://api.github.com/users/williamstein/orgs",
      "repos_url": "https://api.github.com/users/williamstein/repos",
      "events_url": "https://api.github.com/users/williamstein/events{/privacy}",
      "received_events_url": "https://api.github.com/users/williamstein/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-12T16:17:22Z",
    "updated_at": "2013-09-12T16:17:22Z",
    "author_association": "NONE",
    "body": "On Thu, Sep 12, 2013 at 2:14 AM, Matthias Bussonnier <\nnotifications@github.com> wrote:\n\n> But we might have option for the several codemirror instances that change\n> across cells, even codecell might have different highlight settings if the\n> first line is a magic...\n\nCodeMirror3 supports locally changing the highlight mode according to a\npattern.  For example, in the worksheets in https://cloud.sagemath.com, if\nyou type %html at the top of one (my version of \"cell magic\"), then the\nrest of that cell using HTML highlighting and indentation.\n\n -- William\n\n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/issues/4169#issuecomment-24304654\n> .\n\n## \n\nWilliam Stein\nProfessor of Mathematics\nUniversity of Washington\nhttp://wstein.org\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/24336629",
    "html_url": "https://github.com/ipython/ipython/issues/4169#issuecomment-24336629",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4169",
    "id": 24336629,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MzM2NjI5",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-12T16:46:36Z",
    "updated_at": "2013-09-12T16:46:36Z",
    "author_association": "MEMBER",
    "body": "And how do you detect the change \"back\" to another language ? \nYou define a mixing mode right ? I'm wondering how this would play with dynamically loading mode and or reorganizing the cells.\n\nI think it would also be interesting to synchronize line number across cells. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/24343767",
    "html_url": "https://github.com/ipython/ipython/issues/4169#issuecomment-24343767",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4169",
    "id": 24343767,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MzQzNzY3",
    "user": {
      "login": "williamstein",
      "id": 1276278,
      "node_id": "MDQ6VXNlcjEyNzYyNzg=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1276278?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/williamstein",
      "html_url": "https://github.com/williamstein",
      "followers_url": "https://api.github.com/users/williamstein/followers",
      "following_url": "https://api.github.com/users/williamstein/following{/other_user}",
      "gists_url": "https://api.github.com/users/williamstein/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/williamstein/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/williamstein/subscriptions",
      "organizations_url": "https://api.github.com/users/williamstein/orgs",
      "repos_url": "https://api.github.com/users/williamstein/repos",
      "events_url": "https://api.github.com/users/williamstein/events{/privacy}",
      "received_events_url": "https://api.github.com/users/williamstein/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-12T18:20:42Z",
    "updated_at": "2013-09-12T18:20:42Z",
    "author_association": "NONE",
    "body": "On Thu, Sep 12, 2013 at 9:47 AM, Matthias Bussonnier <\nnotifications@github.com> wrote:\n\n> And how do you detect the change \"back\" to another language ?\n\nIn https://cloud.sagemath.com the change back happens at the end of the\ncell.\nThe end of the cell is defined by a reserved unicode character.\nHowever, Codemirror allows you to determine what ends a mode.\nHere's the relevant coffeescript in my code:\n\nCodeMirror.defineMode \"sagews\", (config) ->\n    options = []\n    for x in sagews_decorator_modes\n        options.push(open:\"%\" + x[0], close : MARKERS.cell, mode :\nCodeMirror.getMode(config, x[1]))\n    return CodeMirror.multiplexingMode(CodeMirror.getMode(config,\n\"python\"), options...)\n\n> You define a mixing mode right ?\n> \n>  Yep.\n> \n>  I'm wondering how this would play with dynamically loading mode\n\nI don't know what dynamically loading mode means.\n\nand or reorganizing the cells.\n\n> I think it would also be interesting to synchronize line number across\n> cells.\n\nDo you mean having line numbers starting at 1 and increasing for the whole\ndocument (good), rather than constantly restarting at the beginning of each\ncell (bad)?   I think having a single range of line numbers feels right in\npractice.   Obviously line numbers in error messages are then confusing...\n in my implementation i haven't done anything to address this yet, since I\njust haven't got to it.\n\nAnyway, if you haven't, you can try out having a worksheet as a single\ndocument right now in https://cloud.sagemath.com; make an account, make a\nproject, click \"+New\", click \"Sage\".    I've implemented both worksheets as\nlists of cells (many times, in various ways, starting with sagenb), and\nalso this worksheet as a single document.   Worksheets as a single document\nare much different -- you don't find yourself thinking about \"cells\" so\nmuch.   I'm not convinced either approach is uniformly better than the\nother, though definitely a single document has the potential to scale up\nbetter, since most of the document is not in the DOM at all (this is a\nconfigurable codemirror option).\n\n>  —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/issues/4169#issuecomment-24336629\n> .\n\n## \n\nWilliam Stein\nProfessor of Mathematics\nUniversity of Washington\nhttp://wstein.org\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/24346156",
    "html_url": "https://github.com/ipython/ipython/issues/4169#issuecomment-24346156",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4169",
    "id": 24346156,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MzQ2MTU2",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-12T18:52:46Z",
    "updated_at": "2013-09-12T18:52:46Z",
    "author_association": "MEMBER",
    "body": "See here for the multiplex mode demo:\n\nhttp://codemirror.net/demo/multiplex.html\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30101023",
    "html_url": "https://github.com/ipython/ipython/issues/4169#issuecomment-30101023",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4169",
    "id": 30101023,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTAxMDIz",
    "user": {
      "login": "ArcTanSusan",
      "id": 954858,
      "node_id": "MDQ6VXNlcjk1NDg1OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/954858?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ArcTanSusan",
      "html_url": "https://github.com/ArcTanSusan",
      "followers_url": "https://api.github.com/users/ArcTanSusan/followers",
      "following_url": "https://api.github.com/users/ArcTanSusan/following{/other_user}",
      "gists_url": "https://api.github.com/users/ArcTanSusan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ArcTanSusan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ArcTanSusan/subscriptions",
      "organizations_url": "https://api.github.com/users/ArcTanSusan/orgs",
      "repos_url": "https://api.github.com/users/ArcTanSusan/repos",
      "events_url": "https://api.github.com/users/ArcTanSusan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ArcTanSusan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-09T01:54:57Z",
    "updated_at": "2013-12-09T01:54:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "In `notebook.html`, I comment out `codemirror.js` in the bottom where all the JS scripts are referenced, and when I open a notebook in  new browser tab, this change causes the cells to never appear on the 1st load/refresh. Do you have technical advice on how to get a start on resolving this optimization problem?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30106540",
    "html_url": "https://github.com/ipython/ipython/issues/4169#issuecomment-30106540",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4169",
    "id": 30106540,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTA2NTQw",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-09T05:28:44Z",
    "updated_at": "2013-12-09T05:28:44Z",
    "author_association": "MEMBER",
    "body": "Fixing this is going to be a rather complicated process, and probably a delicate one. It should probably not be done before merging PR #3605.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/316768096",
    "html_url": "https://github.com/ipython/ipython/issues/4169#issuecomment-316768096",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4169",
    "id": 316768096,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjc2ODA5Ng==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-20T17:03:56Z",
    "updated_at": "2017-07-20T17:03:56Z",
    "author_association": "MEMBER",
    "body": "Closing as this issue is not in IPython itself and if still problematic and relevant should be opened on the right repository.  This will allow to keep the number of opened issue on the IPython repo under control. \r\n\r\nFeel free to keep commenting or reopen if necessary.\r\n\r\nThanks."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/316797385",
    "html_url": "https://github.com/ipython/ipython/issues/4169#issuecomment-316797385",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4169",
    "id": 316797385,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjc5NzM4NQ==",
    "user": {
      "login": "williamstein",
      "id": 1276278,
      "node_id": "MDQ6VXNlcjEyNzYyNzg=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1276278?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/williamstein",
      "html_url": "https://github.com/williamstein",
      "followers_url": "https://api.github.com/users/williamstein/followers",
      "following_url": "https://api.github.com/users/williamstein/following{/other_user}",
      "gists_url": "https://api.github.com/users/williamstein/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/williamstein/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/williamstein/subscriptions",
      "organizations_url": "https://api.github.com/users/williamstein/orgs",
      "repos_url": "https://api.github.com/users/williamstein/repos",
      "events_url": "https://api.github.com/users/williamstein/events{/privacy}",
      "received_events_url": "https://api.github.com/users/williamstein/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-20T18:55:09Z",
    "updated_at": "2017-07-20T18:55:09Z",
    "author_association": "NONE",
    "body": "For what it is worth, I tried to implement this approach with CoCalc Jupyter, but eventually gave up (for now), due to it requiring re-implementing too much of CodeMirror.  It’s a huge can of worms.  "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/316818794",
    "html_url": "https://github.com/ipython/ipython/issues/4169#issuecomment-316818794",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4169",
    "id": 316818794,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjgxODc5NA==",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-20T20:21:33Z",
    "updated_at": "2017-07-20T20:21:33Z",
    "author_association": "MEMBER",
    "body": "Thanks for sharing your experience, @williamstein. @blink1073 also tried implementing this in JupyterLab, and gave up after working on it for a while for similar reasons - it's a huge can of worms."
  }
]
