[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/457278756",
    "html_url": "https://github.com/ipython/ipython/issues/11576#issuecomment-457278756",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11576",
    "id": 457278756,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzI3ODc1Ng==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-24T17:13:15Z",
    "updated_at": "2019-01-24T17:13:15Z",
    "author_association": "MEMBER",
    "body": "most likely also limited by Jedi that does use recursion quite a lot to inspect things. \r\nNot sure there is much we can do."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/457600198",
    "html_url": "https://github.com/ipython/ipython/issues/11576#issuecomment-457600198",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11576",
    "id": 457600198,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzYwMDE5OA==",
    "user": {
      "login": "pganssle",
      "id": 1377457,
      "node_id": "MDQ6VXNlcjEzNzc0NTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1377457?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pganssle",
      "html_url": "https://github.com/pganssle",
      "followers_url": "https://api.github.com/users/pganssle/followers",
      "following_url": "https://api.github.com/users/pganssle/following{/other_user}",
      "gists_url": "https://api.github.com/users/pganssle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pganssle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pganssle/subscriptions",
      "organizations_url": "https://api.github.com/users/pganssle/orgs",
      "repos_url": "https://api.github.com/users/pganssle/repos",
      "events_url": "https://api.github.com/users/pganssle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pganssle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-25T15:01:19Z",
    "updated_at": "2019-01-25T15:01:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Carreau Well the problem is that it actually crashes IPython itself. It's a pretty weird edge case I'll grant you that, I think there are a few options to fixing it (if desirable):\r\n\r\n1. Mock `sys.setrecursionlimit()` so that it's not possible to set it low enough that it would crash the main IPython process - Python itself does something like this: https://github.com/python/cpython/blob/ab67281e95de1a88c4379a75a547f19a8ba5ec30/Python/sysmodule.c#L777\r\n2. See if it's possible to set the \"low water mark\" to a higher number in pure python without having to mock `sys.setrecursionlimit`.\r\n3. Temporarily increase the recursion limit while calling IPython functions so that the REPL itself doesn't actually consume any of the stack depth\r\n\r\nThere may be structural changes to IPython that would obviate the problem, but I am not going to explore those because they're way out of proportion for fixing such a minor issue.\r\n\r\nPossibly related is [bpo-25274](https://bugs.python.org/issue25274)."
  }
]
