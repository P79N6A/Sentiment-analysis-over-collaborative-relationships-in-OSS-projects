[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33878099",
    "html_url": "https://github.com/ipython/ipython/issues/4983#issuecomment-33878099",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4983",
    "id": 33878099,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzODc4MDk5",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-01T17:41:56Z",
    "updated_at": "2014-02-01T17:41:56Z",
    "author_association": "MEMBER",
    "body": "LOL, never mind, this is a GH issue :)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33993072",
    "html_url": "https://github.com/ipython/ipython/issues/4983#issuecomment-33993072",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4983",
    "id": 33993072,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTkzMDcy",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-03T19:55:21Z",
    "updated_at": "2014-02-03T20:02:55Z",
    "author_association": "MEMBER",
    "body": "This is actually because of the way the `set_next_input` method was designed to work.\n\n~~EDIT: Removed~~\n\nPossibly the best solution for now is to use a different method, maybe Javascript, to add the cells...\n\n@ellisonbg @minrk opinions?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33994584",
    "html_url": "https://github.com/ipython/ipython/issues/4983#issuecomment-33994584",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4983",
    "id": 33994584,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTk0NTg0",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-03T20:10:51Z",
    "updated_at": "2014-02-03T20:10:51Z",
    "author_association": "MEMBER",
    "body": "I opened an issue that covers this and a few other problems related to the context that comm (widget) code is executed in.  I'm going to close this issue in favor of that one- thanks for pointing this out!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/34617368",
    "html_url": "https://github.com/ipython/ipython/issues/4983#issuecomment-34617368",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4983",
    "id": 34617368,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjE3MzY4",
    "user": {
      "login": "davidtrem",
      "id": 277579,
      "node_id": "MDQ6VXNlcjI3NzU3OQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/277579?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davidtrem",
      "html_url": "https://github.com/davidtrem",
      "followers_url": "https://api.github.com/users/davidtrem/followers",
      "following_url": "https://api.github.com/users/davidtrem/following{/other_user}",
      "gists_url": "https://api.github.com/users/davidtrem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davidtrem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davidtrem/subscriptions",
      "organizations_url": "https://api.github.com/users/davidtrem/orgs",
      "repos_url": "https://api.github.com/users/davidtrem/repos",
      "events_url": "https://api.github.com/users/davidtrem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davidtrem/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-10T10:33:17Z",
    "updated_at": "2014-02-10T10:33:17Z",
    "author_association": "NONE",
    "body": "Hi,\nI seems that using get_ipython().set_next_input() still does not work properly\nwith the current master \"commit 7b9a3a87633171c65c9ad1761eddebc7b36819ec\".\nI would really like to be able to create a new notebook cell from within the widgets,\nthat would be the \"killer app\" for me.\nAny suggestions/clue on how to achieve my goal ? python/javascript ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/34665858",
    "html_url": "https://github.com/ipython/ipython/issues/4983#issuecomment-34665858",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4983",
    "id": 34665858,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjY1ODU4",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-10T18:42:56Z",
    "updated_at": "2014-02-10T18:43:26Z",
    "author_association": "MEMBER",
    "body": "Hi @davidtrem ,\n\nI did not close this because it was fixed, because it is not fixed yet.  I closed this because it was part of a bigger problem - see #5006.  \n\nI whipped up a quick function that will do what you want:\n\n``` python\nimport base64\nfrom IPython.display import Javascript, display\nfrom IPython.utils.py3compat import str_to_bytes, bytes_to_str\ndef create_code_cell(code='', where='below'):\n    \"\"\"Create a code cell in the IPython Notebook.\n\n    Parameters\n    code: unicode\n        Code to fill the new code cell with.\n    where: unicode\n        Where to add the new code cell.\n        Possible values include:\n            at_bottom\n            above\n            below\"\"\"\n    encoded_code = bytes_to_str(base64.b64encode(str_to_bytes(code)))\n    display(Javascript(\"\"\"\n        var code = IPython.notebook.insert_cell_{0}('code');\n        code.set_text(atob(\"{1}\"));\n    \"\"\".format(where, encoded_code)))\n```\n\nThe following shows how this can be used with a button widget:\n\n``` python\nfrom IPython.html.widgets import *\ndef on_click(button):\n    create_code_cell('print(\"Hello world!\")')\nbutton = ButtonWidget(description=\"Show hello world code\")\nbutton.on_click(on_click)\ndisplay(button)\n```\n\nI know this is much uglier, when #5006 is addressed completely, you should be able to use the built-in API you referenced.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/34729112",
    "html_url": "https://github.com/ipython/ipython/issues/4983#issuecomment-34729112",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4983",
    "id": 34729112,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzI5MTEy",
    "user": {
      "login": "davidtrem",
      "id": 277579,
      "node_id": "MDQ6VXNlcjI3NzU3OQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/277579?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davidtrem",
      "html_url": "https://github.com/davidtrem",
      "followers_url": "https://api.github.com/users/davidtrem/followers",
      "following_url": "https://api.github.com/users/davidtrem/following{/other_user}",
      "gists_url": "https://api.github.com/users/davidtrem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davidtrem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davidtrem/subscriptions",
      "organizations_url": "https://api.github.com/users/davidtrem/orgs",
      "repos_url": "https://api.github.com/users/davidtrem/repos",
      "events_url": "https://api.github.com/users/davidtrem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davidtrem/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-11T06:19:05Z",
    "updated_at": "2014-02-11T06:19:05Z",
    "author_association": "NONE",
    "body": "Many, many thanks !  :-)\n\nI was painfully trying to understand the javascript side of the notebook to get this work,\nbut this was a difficult homework for a javascript absolute beginner...\n\nJust one last clarification: It looks like #5006 will not be fixed for IPython 2.0, correct ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/34767220",
    "html_url": "https://github.com/ipython/ipython/issues/4983#issuecomment-34767220",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4983",
    "id": 34767220,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzY3MjIw",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-11T15:49:50Z",
    "updated_at": "2014-02-11T15:49:50Z",
    "author_association": "MEMBER",
    "body": "> It looks like #5006 will not be fixed for IPython 2.0, correct ?\n\nI don't think so, only small bits of it will be addressed (like the error tracebacks, which was merged a few days ago).  I think the code in that area will need more thought and possibly some refactoring.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/38662333",
    "html_url": "https://github.com/ipython/ipython/issues/4983#issuecomment-38662333",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4983",
    "id": 38662333,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjYyMzMz",
    "user": {
      "login": "davidtrem",
      "id": 277579,
      "node_id": "MDQ6VXNlcjI3NzU3OQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/277579?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davidtrem",
      "html_url": "https://github.com/davidtrem",
      "followers_url": "https://api.github.com/users/davidtrem/followers",
      "following_url": "https://api.github.com/users/davidtrem/following{/other_user}",
      "gists_url": "https://api.github.com/users/davidtrem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davidtrem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davidtrem/subscriptions",
      "organizations_url": "https://api.github.com/users/davidtrem/orgs",
      "repos_url": "https://api.github.com/users/davidtrem/repos",
      "events_url": "https://api.github.com/users/davidtrem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davidtrem/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-26T09:10:42Z",
    "updated_at": "2014-03-26T09:11:41Z",
    "author_association": "NONE",
    "body": "I've just saw that #5006 has been closed.\nStill the code example I posted on this issue\ndoes not work properly with the IPython 2.0.0 release candidate.\n\nNow that #5006 has been fixed is there any better solution\nthan the function @jdfreder originally whipped up to solve this issue ?\n\nI copy the code here  for convenience:\n\n``` python\nfrom IPython.html import widgets\nfrom IPython.display import display\n\ndef create(button):\n    get_ipython().set_next_input('print \"test\"')\n\nbutton = widgets.ButtonWidget(description=\"Create next input\")\nbutton.on_click(create)\ndisplay(button)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/38710256",
    "html_url": "https://github.com/ipython/ipython/issues/4983#issuecomment-38710256",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4983",
    "id": 38710256,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzEwMjU2",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-26T17:02:07Z",
    "updated_at": "2014-03-26T17:02:07Z",
    "author_association": "MEMBER",
    "body": "@davidtrem thanks for pointing this out.  Looks like `pre_readline` (the function that actually commits the `set_next_input` call) is still only executed on cell execution.  @takluyver is this something that we could register to trigger on widget messages too?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/38759187",
    "html_url": "https://github.com/ipython/ipython/issues/4983#issuecomment-38759187",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4983",
    "id": 38759187,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzU5MTg3",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-27T01:07:17Z",
    "updated_at": "2014-03-27T01:07:17Z",
    "author_association": "MEMBER",
    "body": "@jdfreder : The notebook isn't using that `set_next_input`, it's overridden in `IPython.kernel.zmq.zmqshell.ZMQInteractiveShell`. It adds a 'payload' to the execution reply telling the frontend to add a new cell. Making that possible for widgets would require message spec changes, so it's something for after 2.0.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/320441793",
    "html_url": "https://github.com/ipython/ipython/issues/4983#issuecomment-320441793",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4983",
    "id": 320441793,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDQ0MTc5Mw==",
    "user": {
      "login": "aneesha",
      "id": 591930,
      "node_id": "MDQ6VXNlcjU5MTkzMA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/591930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aneesha",
      "html_url": "https://github.com/aneesha",
      "followers_url": "https://api.github.com/users/aneesha/followers",
      "following_url": "https://api.github.com/users/aneesha/following{/other_user}",
      "gists_url": "https://api.github.com/users/aneesha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aneesha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aneesha/subscriptions",
      "organizations_url": "https://api.github.com/users/aneesha/orgs",
      "repos_url": "https://api.github.com/users/aneesha/repos",
      "events_url": "https://api.github.com/users/aneesha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aneesha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-05T12:45:50Z",
    "updated_at": "2017-08-05T12:45:50Z",
    "author_association": "NONE",
    "body": "Is there a way to use/convert the create_code_cell() method created by @jdfreder in a javascript from a DOMWidgetView? I am trying to make a code generation widget."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/364314541",
    "html_url": "https://github.com/ipython/ipython/issues/4983#issuecomment-364314541",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4983",
    "id": 364314541,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDMxNDU0MQ==",
    "user": {
      "login": "barik",
      "id": 441243,
      "node_id": "MDQ6VXNlcjQ0MTI0Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/441243?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/barik",
      "html_url": "https://github.com/barik",
      "followers_url": "https://api.github.com/users/barik/followers",
      "following_url": "https://api.github.com/users/barik/following{/other_user}",
      "gists_url": "https://api.github.com/users/barik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/barik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/barik/subscriptions",
      "organizations_url": "https://api.github.com/users/barik/orgs",
      "repos_url": "https://api.github.com/users/barik/repos",
      "events_url": "https://api.github.com/users/barik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/barik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-09T02:16:45Z",
    "updated_at": "2018-02-09T02:25:21Z",
    "author_association": "NONE",
    "body": "In IPython 3, this code should now be:\r\n\r\n```python\r\nimport ipywidgets as widgets\r\ndef on_click(button):\r\n    create_code_cell('print(\"Hello world!\")')\r\nbutton = widgets.Button(description=\"Show hello world code\")\r\nbutton.on_click(on_click)\r\ndisplay(button)\r\n```\r\n\r\nRegardless, when leaving the notebook and re-entering it, it appears that the on_click JavaScript gets executed again (even though no one has explicitly clicked the button), resulting in multiple input cells. Is there a way to avoid this undesirable behavior?"
  }
]
