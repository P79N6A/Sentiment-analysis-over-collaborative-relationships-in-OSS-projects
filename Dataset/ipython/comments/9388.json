[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/207796881",
    "html_url": "https://github.com/ipython/ipython/issues/9388#issuecomment-207796881",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9388",
    "id": 207796881,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNzc5Njg4MQ==",
    "user": {
      "login": "jonathanslenders",
      "id": 216638,
      "node_id": "MDQ6VXNlcjIxNjYzOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/216638?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonathanslenders",
      "html_url": "https://github.com/jonathanslenders",
      "followers_url": "https://api.github.com/users/jonathanslenders/followers",
      "following_url": "https://api.github.com/users/jonathanslenders/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonathanslenders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonathanslenders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonathanslenders/subscriptions",
      "organizations_url": "https://api.github.com/users/jonathanslenders/orgs",
      "repos_url": "https://api.github.com/users/jonathanslenders/repos",
      "events_url": "https://api.github.com/users/jonathanslenders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonathanslenders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-09T14:33:38Z",
    "updated_at": "2016-04-09T14:33:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi all,\n\nprompt-toolkit does not process `.inputrc` yet. Mainly because there was no obvious 1-to-1 mapping of the readline and the prompt-toolkit functionality. Especially because the readline configuration uses vt100 escape codes to define key bindings. This is for historical reasons and not platform independent.\n\nHowever, detecting whether the editing-mode is vi (`set editing-mode vi`), or whether the user has interest in `history-search-backward`  (e.g.:`\"\\e[A\":history-search-backward`) is not going to be difficult.\n\nThe crash guys are doing this: https://github.com/crate/crash/blob/d8e49c0aec8f1c70c49fe56e7f3e967bde1f44a3/src/crate/crash/command.py#L415\nSee also: https://github.com/jonathanslenders/python-prompt-toolkit/issues/56\n\nJonathan\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/207814733",
    "html_url": "https://github.com/ipython/ipython/issues/9388#issuecomment-207814733",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9388",
    "id": 207814733,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNzgxNDczMw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-09T16:19:45Z",
    "updated_at": "2016-04-09T16:19:45Z",
    "author_association": "MEMBER",
    "body": "Hi Paul! I wondered when we'd be seeing you after this change ;-). You're right, we should definitely mention it in the release notes.\n\nI don't think we should try to do any interpretation of inputrc: I'd rather be able to say unambiguously 'no, that no longer affects input in IPython, here are the new ways to configure things', rather than dealing with a situation where some entries in there work and others don't.\n\nFor reference, the config option to enable vi mode is now `TerminalInteractiveShell.vi_mode` (which is a boolean).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/215912492",
    "html_url": "https://github.com/ipython/ipython/issues/9388#issuecomment-215912492",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9388",
    "id": 215912492,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNTkxMjQ5Mg==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-30T00:11:36Z",
    "updated_at": "2016-04-30T00:11:36Z",
    "author_association": "MEMBER",
    "body": "Marking as 5.0 to, at least, document it. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/222247195",
    "html_url": "https://github.com/ipython/ipython/issues/9388#issuecomment-222247195",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9388",
    "id": 222247195,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjI0NzE5NQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-27T20:36:20Z",
    "updated_at": "2016-05-27T20:36:20Z",
    "author_association": "MEMBER",
    "body": "documented in #9497, bumbing to 6.0 to reevaluate.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/247883686",
    "html_url": "https://github.com/ipython/ipython/issues/9388#issuecomment-247883686",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9388",
    "id": 247883686,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Nzg4MzY4Ng==",
    "user": {
      "login": "MarkLodato",
      "id": 58860,
      "node_id": "MDQ6VXNlcjU4ODYw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/58860?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarkLodato",
      "html_url": "https://github.com/MarkLodato",
      "followers_url": "https://api.github.com/users/MarkLodato/followers",
      "following_url": "https://api.github.com/users/MarkLodato/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarkLodato/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarkLodato/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarkLodato/subscriptions",
      "organizations_url": "https://api.github.com/users/MarkLodato/orgs",
      "repos_url": "https://api.github.com/users/MarkLodato/repos",
      "events_url": "https://api.github.com/users/MarkLodato/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarkLodato/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-18T22:00:48Z",
    "updated_at": "2016-09-18T22:00:48Z",
    "author_association": "NONE",
    "body": "So, how do you configure `\"\\e[A\":history-search-backward`? And how do you get up arrow to be normal up arrow and not history search? In old versions I could do\n\n``` python\nc.TerminalInteractiveShell.readline_parse_and_bind = ['tab: complete']\n```\n\nbut that no longer works.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/247943628",
    "html_url": "https://github.com/ipython/ipython/issues/9388#issuecomment-247943628",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9388",
    "id": 247943628,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Nzk0MzYyOA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-19T09:07:43Z",
    "updated_at": "2016-09-19T09:07:43Z",
    "author_association": "MEMBER",
    "body": "We should make history search (the behaviour of the up and down arrows) configurable - I've just opened #9961 for that.\n\nFor adding custom shortcuts, see [the docs](http://ipython.readthedocs.io/en/stable/config/details.html#keyboard-shortcuts). Unfortunately at present you have to go digging in the prompt_toolkit code to find/write a function that does what you want. The normal behaviour of the up-arrow key is defined [here](https://github.com/jonathanslenders/python-prompt-toolkit/blob/99fa7fae61c9b4ed9767ead3b4f9b1318cfa875d/prompt_toolkit/key_binding/bindings/basic.py#L178) and [here](https://github.com/jonathanslenders/python-prompt-toolkit/blob/99fa7fae61c9b4ed9767ead3b4f9b1318cfa875d/prompt_toolkit/buffer.py#L540).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/259457074",
    "html_url": "https://github.com/ipython/ipython/issues/9388#issuecomment-259457074",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9388",
    "id": 259457074,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTQ1NzA3NA==",
    "user": {
      "login": "wavexx",
      "id": 1017726,
      "node_id": "MDQ6VXNlcjEwMTc3MjY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1017726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wavexx",
      "html_url": "https://github.com/wavexx",
      "followers_url": "https://api.github.com/users/wavexx/followers",
      "following_url": "https://api.github.com/users/wavexx/following{/other_user}",
      "gists_url": "https://api.github.com/users/wavexx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wavexx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wavexx/subscriptions",
      "organizations_url": "https://api.github.com/users/wavexx/orgs",
      "repos_url": "https://api.github.com/users/wavexx/repos",
      "events_url": "https://api.github.com/users/wavexx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wavexx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-09T16:26:34Z",
    "updated_at": "2016-11-09T16:26:34Z",
    "author_association": "NONE",
    "body": "prompt-toolkit introduces several editing regressions compared to readline :/. For example, forward/backward-word do not work anymore in urxvt, and there's no way to configure the different escape sequences without editing the internal bindings.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/259468416",
    "html_url": "https://github.com/ipython/ipython/issues/9388#issuecomment-259468416",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9388",
    "id": 259468416,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTQ2ODQxNg==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-09T17:08:50Z",
    "updated_at": "2016-11-09T17:08:50Z",
    "author_association": "MEMBER",
    "body": "Forward/backward word works OK in my terminal; I don't see urxvt in my repos to test with.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/259470158",
    "html_url": "https://github.com/ipython/ipython/issues/9388#issuecomment-259470158",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9388",
    "id": 259470158,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTQ3MDE1OA==",
    "user": {
      "login": "wavexx",
      "id": 1017726,
      "node_id": "MDQ6VXNlcjEwMTc3MjY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1017726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wavexx",
      "html_url": "https://github.com/wavexx",
      "followers_url": "https://api.github.com/users/wavexx/followers",
      "following_url": "https://api.github.com/users/wavexx/following{/other_user}",
      "gists_url": "https://api.github.com/users/wavexx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wavexx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wavexx/subscriptions",
      "organizations_url": "https://api.github.com/users/wavexx/orgs",
      "repos_url": "https://api.github.com/users/wavexx/repos",
      "events_url": "https://api.github.com/users/wavexx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wavexx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-09T17:15:48Z",
    "updated_at": "2016-11-09T17:15:48Z",
    "author_association": "NONE",
    "body": "On Wed, Nov 09 2016, Thomas Kluyver wrote:\n\n> Forward/backward word works OK in my terminal; I don't see urxvt in my repos to test with.\n\nOn debian it's rxvt-unicode/rxvt-unicode-*.\n\nSee https://github.com/jonathanslenders/python-prompt-toolkit/pull/415\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/259470935",
    "html_url": "https://github.com/ipython/ipython/issues/9388#issuecomment-259470935",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9388",
    "id": 259470935,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTQ3MDkzNQ==",
    "user": {
      "login": "MarkLodato",
      "id": 58860,
      "node_id": "MDQ6VXNlcjU4ODYw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/58860?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarkLodato",
      "html_url": "https://github.com/MarkLodato",
      "followers_url": "https://api.github.com/users/MarkLodato/followers",
      "following_url": "https://api.github.com/users/MarkLodato/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarkLodato/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarkLodato/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarkLodato/subscriptions",
      "organizations_url": "https://api.github.com/users/MarkLodato/orgs",
      "repos_url": "https://api.github.com/users/MarkLodato/repos",
      "events_url": "https://api.github.com/users/MarkLodato/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarkLodato/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-09T17:19:18Z",
    "updated_at": "2016-11-09T17:19:18Z",
    "author_association": "NONE",
    "body": "I agree with @wavexx. I have stopped using the new version of IPython because the prompt is so much worse. Although readline is not perfect, it uses my standard ~/.inputrc and I'm happy. The new version of IPython is unusable because of prompt-toolkit. If I were you, I'd revert that change.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/259477317",
    "html_url": "https://github.com/ipython/ipython/issues/9388#issuecomment-259477317",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9388",
    "id": 259477317,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTQ3NzMxNw==",
    "user": {
      "login": "jonathanslenders",
      "id": 216638,
      "node_id": "MDQ6VXNlcjIxNjYzOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/216638?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonathanslenders",
      "html_url": "https://github.com/jonathanslenders",
      "followers_url": "https://api.github.com/users/jonathanslenders/followers",
      "following_url": "https://api.github.com/users/jonathanslenders/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonathanslenders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonathanslenders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonathanslenders/subscriptions",
      "organizations_url": "https://api.github.com/users/jonathanslenders/orgs",
      "repos_url": "https://api.github.com/users/jonathanslenders/repos",
      "events_url": "https://api.github.com/users/jonathanslenders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonathanslenders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-09T17:46:12Z",
    "updated_at": "2016-11-09T17:46:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "@MarkLodato Could you share your inputrc? Are you missing some functionality, or do you have custom key bindings? I plan to support .inputrc at some point, but it won't be in the near future. (Takes more time than I expected.)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/259477950",
    "html_url": "https://github.com/ipython/ipython/issues/9388#issuecomment-259477950",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9388",
    "id": 259477950,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTQ3Nzk1MA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-09T17:48:47Z",
    "updated_at": "2016-11-09T17:48:47Z",
    "author_association": "MEMBER",
    "body": "Sorry, we're not about to revert it. We expected there would be some rough edges with a change this big, but prompt_toolkit allows us to do things we couldn't with readline: live syntax highlighting, and proper multiline editing. It also makes installation simpler on Windows and Mac, because we don't need pyreadline and gnureadline (respectively).\n\nFeel free to point out specific issues like @wavexx did; we'll try to sand down the rough edges on our side, and so far Jonathan Slenders, the author of prompt_toolkit, has been very responsive to issues we've made him aware of. But so far, the magnitude of these problems isn't close to sending us back to readline.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/259479867",
    "html_url": "https://github.com/ipython/ipython/issues/9388#issuecomment-259479867",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9388",
    "id": 259479867,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTQ3OTg2Nw==",
    "user": {
      "login": "MarkLodato",
      "id": 58860,
      "node_id": "MDQ6VXNlcjU4ODYw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/58860?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarkLodato",
      "html_url": "https://github.com/MarkLodato",
      "followers_url": "https://api.github.com/users/MarkLodato/followers",
      "following_url": "https://api.github.com/users/MarkLodato/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarkLodato/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarkLodato/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarkLodato/subscriptions",
      "organizations_url": "https://api.github.com/users/MarkLodato/orgs",
      "repos_url": "https://api.github.com/users/MarkLodato/repos",
      "events_url": "https://api.github.com/users/MarkLodato/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarkLodato/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-09T17:56:42Z",
    "updated_at": "2016-11-09T17:56:42Z",
    "author_association": "NONE",
    "body": "Sorry, my response was more alarmist than necessary (though it is true that I have avoided the new version of IPython for this very reason.)\n\nThe only feature I use in my [.inputrc](https://github.com/MarkLodato/dotfiles/blob/master/.inputrc) is the following, which I already requested above:\n\n```\n\"\\ep\":history-search-backward\n\"\\en\":history-search-forward\n```\n\nOtherwise, my only real complaint is that IPython / prompt-toolkit sets up keybindings differently than readline, and there is no way to turn that off. IPython used to do that before, but I could overwrite `readline_parse_and_bind` and it would revert to normal readline behavior.\n\nI'll have to set up the new ipython in a virtualenv to see what other features it is missing, if any.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/259486716",
    "html_url": "https://github.com/ipython/ipython/issues/9388#issuecomment-259486716",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9388",
    "id": 259486716,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTQ4NjcxNg==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-09T18:24:40Z",
    "updated_at": "2016-11-09T18:24:40Z",
    "author_association": "MEMBER",
    "body": "It is possible to set up extra keyboard shortcuts in a startup file, though we don't have a great way to work out what code needs to run for the shortcut:\n\nhttp://ipython.readthedocs.io/en/stable/config/details.html#keyboard-shortcuts\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/259492348",
    "html_url": "https://github.com/ipython/ipython/issues/9388#issuecomment-259492348",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9388",
    "id": 259492348,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTQ5MjM0OA==",
    "user": {
      "login": "jonathanslenders",
      "id": 216638,
      "node_id": "MDQ6VXNlcjIxNjYzOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/216638?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonathanslenders",
      "html_url": "https://github.com/jonathanslenders",
      "followers_url": "https://api.github.com/users/jonathanslenders/followers",
      "following_url": "https://api.github.com/users/jonathanslenders/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonathanslenders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonathanslenders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonathanslenders/subscriptions",
      "organizations_url": "https://api.github.com/users/jonathanslenders/orgs",
      "repos_url": "https://api.github.com/users/jonathanslenders/repos",
      "events_url": "https://api.github.com/users/jonathanslenders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonathanslenders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-09T18:46:51Z",
    "updated_at": "2016-11-09T18:46:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "@takluyver: At some point, it should be sufficient to choose any of the named bindings from this file: https://github.com/jonathanslenders/python-prompt-toolkit/blob/master/prompt_toolkit/key_binding/bindings/named_commands.py\nIt's still incomplete however.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/259518633",
    "html_url": "https://github.com/ipython/ipython/issues/9388#issuecomment-259518633",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9388",
    "id": 259518633,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTUxODYzMw==",
    "user": {
      "login": "MarkLodato",
      "id": 58860,
      "node_id": "MDQ6VXNlcjU4ODYw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/58860?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarkLodato",
      "html_url": "https://github.com/MarkLodato",
      "followers_url": "https://api.github.com/users/MarkLodato/followers",
      "following_url": "https://api.github.com/users/MarkLodato/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarkLodato/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarkLodato/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarkLodato/subscriptions",
      "organizations_url": "https://api.github.com/users/MarkLodato/orgs",
      "repos_url": "https://api.github.com/users/MarkLodato/repos",
      "events_url": "https://api.github.com/users/MarkLodato/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarkLodato/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-09T20:32:31Z",
    "updated_at": "2016-11-09T20:32:31Z",
    "author_association": "NONE",
    "body": "Sorry in advance for this rant.\n\nI think this brings up a bigger issue: IPython is **painfully** difficult to configure. You have to write so much code and dig through so much (very incomplete) documentation that it literally takes hours to figure out. I'm not exaggerating.  Add on top of that the fact that IPython seems to change the config file format (simple dotfile -> python code -> new python code with a new api) and location  (.ipython -> .config/ipython -> .ipython again) frequently, it really makes me not want to use IPython anymore.\n\nLet's look at [my very simple config](https://github.com/MarkLodato/dotfiles/blob/master/.ipython/profile_default/ipython_config.py):\n\n``` python\nc.InteractiveShell.colors = 'Linux'  # Use dark background color scheme.\nc.TerminalIPythonApp.display_banner = False\nc.TerminalInteractiveShell.confirm_exit = False\nc.TerminalInteractiveShell.term_title = True\n\n# Enable 'aimport foo' to turn on autoreloading of module 'foo'.\nc.TerminalIPythonApp.extensions = ['autoreload']\nc.InteractiveShellApp.exec_lines = ['autoreload 1']\n\n# IPython's default readline config remaps the cursor keys to do history\n# searches, which is extremely annoying.  By setting this here, we prevent *all*\n# of the default mappings, the only of which we care about is tab completion.\nc.TerminalInteractiveShell.readline_parse_and_bind = [\n    'tab: complete',\n]\n\n# Make the IPython prompt look like the regular Python one.\nc.PromptManager.in_template = '>>> '\nc.PromptManager.in2_template = '... '\nc.PromptManager.out_template = ''\nc.PromptManager.justify = False\n\n# Set up aliases for shell commands.\nc.AliasManager.user_aliases = [\n    ('git', 'git'),\n]\n```\n\nThere is no apparent rhyme or reason for when to use `InteractiveShell` vs `TerminalIPythonApp` vs `TerminalInteractiveShell` vs `PromptManager` vs something else. I'd much prefer a simple config format with simple, easy-to-understand variable names. But fine.\n\nNow let's look at the PromptManager lines. In current IPython versions, [the docs say](http://ipython.readthedocs.io/en/stable/config/options/terminal.html):\n\n> Deprecated since IPython 4.0 and ignored since 5.0, set TerminalInteractiveShell.prompts object directly.\n\nOK, let's read the docs for those.\n\n> TerminalInteractiveShell.prompts_class : Type\n> Default: 'IPython.terminal.prompts.Prompts'\n> \n> Class used to generate Prompt token for prompt_toolkit\n\nWow, thanks. Not only has the configuration changed yet again, but this field is completely undocumented! Is it `prompts` or `promtps_class`? How do I use it?\n\nAfter some Googling, I find [Specific config details](http://ipython.readthedocs.io/en/stable/config/details.html) which partially explains it. It is again very incomplete (what is `rewrite_prompt_tokens`? why does `out_prompt_tokens()` have no arguments? what is each used for? don't I need to assign to `prompts_class`?) but I can piece together from examples, intuition, and past experience that I need to write the following:\n\n``` python\nfrom IPython.terminal.prompts import Prompts, Token\n\nclass MyPrompt(Prompts):\n     def in_prompt_tokens(self, cli=None):\n         return [(Token.Prompt, '>>> ')]\n     def continuation_prompt_tokens(self, cli=None, width=None):\n         return [(Token.Prompt, '... ')]\n     def out_prompt_tokens(self):\n         return []\n\nc.TerminalInteractiveShell.prompts_class = MyPrompt\n```\n\nTo me, this is crazy.  I don't understand how this can be considered an improvement.  I know you can now do wacky things with the prompt, but 99% of people don't, so shouldn't it be easy for them to do the simple thing?\n\nAgain, I'm sorry to rant, but I just find IPython's configuration so maddening. It's a shame because I otherwise absolutely **love** IPython. I really think the IPython team needs to come up with a sane, easy-to-use, and **stable** configuration once and for all. The prompt-toolkit issue is just one of many cases where a new IPython version has wasted hours of my time.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/259549908",
    "html_url": "https://github.com/ipython/ipython/issues/9388#issuecomment-259549908",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9388",
    "id": 259549908,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTU0OTkwOA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-09T22:51:54Z",
    "updated_at": "2016-11-09T22:51:54Z",
    "author_association": "MEMBER",
    "body": "The rant is justified - we have changed the config system too often, and what we have now exposes the class names from our code for configuration (that's where InteractiveShell, TerminalIPythonApp, etc. come from). Of course, we can't fix that now without changing the config system yet again, which we're loath to do.\n\nWe've generally erred on the side of making a lot of what IPython does configurable, and in various ways (e.g. startup files vs config files). The downside of this flexibility is that we don't have much time or inclination to document every bit you can configure, most of which few people will ever worry about. The [Specific config details](http://ipython.readthedocs.io/en/stable/config/details.html) page you found is an attempt to give more detail for some specific pieces that people might want to change, but there's still more than we can easily describe (e.g. the _rewrite_ prompt doesn't come up much, so we don't describe it in much detail).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/259550210",
    "html_url": "https://github.com/ipython/ipython/issues/9388#issuecomment-259550210",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9388",
    "id": 259550210,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTU1MDIxMA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-09T22:53:15Z",
    "updated_at": "2016-11-09T22:53:15Z",
    "author_association": "MEMBER",
    "body": "@jonathanslenders thanks, that's a good start. I might look into ways to scrape that list of names to offer a list in the docs.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/273697782",
    "html_url": "https://github.com/ipython/ipython/issues/9388#issuecomment-273697782",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9388",
    "id": 273697782,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MzY5Nzc4Mg==",
    "user": {
      "login": "DanielO",
      "id": 643662,
      "node_id": "MDQ6VXNlcjY0MzY2Mg==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/643662?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DanielO",
      "html_url": "https://github.com/DanielO",
      "followers_url": "https://api.github.com/users/DanielO/followers",
      "following_url": "https://api.github.com/users/DanielO/following{/other_user}",
      "gists_url": "https://api.github.com/users/DanielO/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DanielO/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DanielO/subscriptions",
      "organizations_url": "https://api.github.com/users/DanielO/orgs",
      "repos_url": "https://api.github.com/users/DanielO/repos",
      "events_url": "https://api.github.com/users/DanielO/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DanielO/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-19T07:05:40Z",
    "updated_at": "2017-01-19T07:05:40Z",
    "author_association": "NONE",
    "body": "Is there a handy cut & paste to get reverse/forward history search with esc-p / esc-n? :)"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/275946609",
    "html_url": "https://github.com/ipython/ipython/issues/9388#issuecomment-275946609",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9388",
    "id": 275946609,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTk0NjYwOQ==",
    "user": {
      "login": "rsvp",
      "id": 74293,
      "node_id": "MDQ6VXNlcjc0Mjkz",
      "avatar_url": "https://avatars0.githubusercontent.com/u/74293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rsvp",
      "html_url": "https://github.com/rsvp",
      "followers_url": "https://api.github.com/users/rsvp/followers",
      "following_url": "https://api.github.com/users/rsvp/following{/other_user}",
      "gists_url": "https://api.github.com/users/rsvp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rsvp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rsvp/subscriptions",
      "organizations_url": "https://api.github.com/users/rsvp/orgs",
      "repos_url": "https://api.github.com/users/rsvp/repos",
      "events_url": "https://api.github.com/users/rsvp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rsvp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-29T21:15:13Z",
    "updated_at": "2017-01-29T21:16:00Z",
    "author_association": "NONE",
    "body": "What would be the IPython equivalent to `set editing-mode vi` in an .inputrc Linux readline config file?\r\n\r\n@takluyver wrote:\r\n> Sorry, we're not about to revert it. We expected there would be some rough edges with a change this big, but prompt_toolkit allows us to do things we couldn't with readline: live syntax highlighting, and proper ***multiline editing***. It also makes installation simpler on Windows and Mac, because we don't need pyreadline and gnureadline (respectively).\r\n\r\nIf vi mode cannot be supported via readline, what are the instructions and tips \r\nfor the forementioned *multiline editing* -- how does it work? \r\nCan one call vim into the IPython environment to make edits?\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/275947063",
    "html_url": "https://github.com/ipython/ipython/issues/9388#issuecomment-275947063",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9388",
    "id": 275947063,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTk0NzA2Mw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-29T21:21:48Z",
    "updated_at": "2017-01-29T21:21:48Z",
    "author_association": "MEMBER",
    "body": "In [IPython config](http://ipython.readthedocs.io/en/stable/config/intro.html), the relevant option is `TerminalInteractiveShell.editing_mode`. Setting it to the string 'vi' should give you prompt_toolkit's vi bindings.\r\n\r\n> Can one call vim into the IPython environment to make edits?\r\n\r\nIn 5.2 (coming very soon, we hope), you can press F2 at the IPython prompt to jump into $EDITOR.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/275947297",
    "html_url": "https://github.com/ipython/ipython/issues/9388#issuecomment-275947297",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9388",
    "id": 275947297,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTk0NzI5Nw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-29T21:24:46Z",
    "updated_at": "2017-01-29T21:24:46Z",
    "author_association": "MEMBER",
    "body": "Multiline editing in the prompt means that if you type e.g. `for a in rage(5):<enter>`, you can press up-arrow and go back to the line above, without having to cancel the input. It may sound trivial, but previous versions of IPython couldn't do that."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/275960074",
    "html_url": "https://github.com/ipython/ipython/issues/9388#issuecomment-275960074",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9388",
    "id": 275960074,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTk2MDA3NA==",
    "user": {
      "login": "rsvp",
      "id": 74293,
      "node_id": "MDQ6VXNlcjc0Mjkz",
      "avatar_url": "https://avatars0.githubusercontent.com/u/74293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rsvp",
      "html_url": "https://github.com/rsvp",
      "followers_url": "https://api.github.com/users/rsvp/followers",
      "following_url": "https://api.github.com/users/rsvp/following{/other_user}",
      "gists_url": "https://api.github.com/users/rsvp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rsvp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rsvp/subscriptions",
      "organizations_url": "https://api.github.com/users/rsvp/orgs",
      "repos_url": "https://api.github.com/users/rsvp/repos",
      "events_url": "https://api.github.com/users/rsvp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rsvp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-30T00:48:00Z",
    "updated_at": "2017-01-30T15:51:41Z",
    "author_association": "NONE",
    "body": "hi @takluyver Thanks very much for your prompt :) support !\r\n\r\n*Just to clarify for other users...*\r\n\r\n## Setting IPython (v5+) PROMPT to vi-mode\r\n\r\nThis works like Linux vi-mode for readline, except the developers \r\nhave crafted a cross-platform solution.\r\n\r\n- Go to your .ipython/profile_FOO directory\r\n- Add the following line to ipython_config.py:\r\n`c.TerminalInteractiveShell.editing_mode = 'vi'`  \r\n\r\nP.S. is it possible to reassign the ESC key in vi-mode? \r\nI have been using semi-colon for this purpose.\r\n\r\nP.S.S. since PromptManager is deprecated, what is the correct way \r\nto set  ***PromptManager.in_template***?\r\n\r\n---\r\n\r\nEdit: *Updated solutions posted here:* https://git.io/ipython_config.py\r\n "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/276029793",
    "html_url": "https://github.com/ipython/ipython/issues/9388#issuecomment-276029793",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9388",
    "id": 276029793,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjAyOTc5Mw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-30T10:39:07Z",
    "updated_at": "2017-01-30T10:39:07Z",
    "author_association": "MEMBER",
    "body": "> P.S. is it possible to reassign the ESC key in vi-mode?\r\n\r\nSee [custom keyboard shortcuts](http://ipython.readthedocs.io/en/stable/config/details.html#keyboard-shortcuts) - though at present, you'll have to dig around in the prompt_toolkit source code to find what function to call to do the action.\r\n\r\n> P.S.S. since PromptManager is deprecated, what is the correct way to set `PromptManager.in_template`?\r\n\r\nSee [custom prompts](http://ipython.readthedocs.io/en/stable/config/details.html#custom-prompts). :-)"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/276095594",
    "html_url": "https://github.com/ipython/ipython/issues/9388#issuecomment-276095594",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9388",
    "id": 276095594,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjA5NTU5NA==",
    "user": {
      "login": "rsvp",
      "id": 74293,
      "node_id": "MDQ6VXNlcjc0Mjkz",
      "avatar_url": "https://avatars0.githubusercontent.com/u/74293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rsvp",
      "html_url": "https://github.com/rsvp",
      "followers_url": "https://api.github.com/users/rsvp/followers",
      "following_url": "https://api.github.com/users/rsvp/following{/other_user}",
      "gists_url": "https://api.github.com/users/rsvp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rsvp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rsvp/subscriptions",
      "organizations_url": "https://api.github.com/users/rsvp/orgs",
      "repos_url": "https://api.github.com/users/rsvp/repos",
      "events_url": "https://api.github.com/users/rsvp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rsvp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-30T15:38:57Z",
    "updated_at": "2017-01-30T15:58:51Z",
    "author_association": "NONE",
    "body": "@takluyver Thanks for your tremendous help. I've **summarized the solutions** so far here: \r\nhttps://git.io/ipython_config.py \r\n\r\nIt is a gist which was adapted from your gist of five months ago. \r\nUnlike the official documentation sample code, the *execution_count*\r\nnumber has been included in the custom In and Out prompts. \r\n\r\nI will update my gist as I discover new v5+ features.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/276117765",
    "html_url": "https://github.com/ipython/ipython/issues/9388#issuecomment-276117765",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9388",
    "id": 276117765,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjExNzc2NQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-30T16:52:43Z",
    "updated_at": "2017-01-30T16:52:43Z",
    "author_association": "MEMBER",
    "body": "Thanks for that summary :cookie: "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/480086071",
    "html_url": "https://github.com/ipython/ipython/issues/9388#issuecomment-480086071",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9388",
    "id": 480086071,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MDA4NjA3MQ==",
    "user": {
      "login": "mrrech",
      "id": 1623900,
      "node_id": "MDQ6VXNlcjE2MjM5MDA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1623900?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mrrech",
      "html_url": "https://github.com/mrrech",
      "followers_url": "https://api.github.com/users/mrrech/followers",
      "following_url": "https://api.github.com/users/mrrech/following{/other_user}",
      "gists_url": "https://api.github.com/users/mrrech/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mrrech/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mrrech/subscriptions",
      "organizations_url": "https://api.github.com/users/mrrech/orgs",
      "repos_url": "https://api.github.com/users/mrrech/repos",
      "events_url": "https://api.github.com/users/mrrech/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mrrech/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-04T22:27:28Z",
    "updated_at": "2019-04-04T22:27:28Z",
    "author_association": "NONE",
    "body": "Not sure if this can be still of any help to anyone, but I just figured out how to get `alt-p`/`alt-n` bound to history backward and forward respectively (as @DanielO and @MarkLodato were asking a couple of years ago). Since I haven't found any reference about this other than this old issue, I'll leave it here hoping can be of help.\r\n\r\n```python\r\nfrom IPython import get_ipython                                                 \r\nfrom prompt_toolkit.enums import DEFAULT_BUFFER                                 \r\nfrom prompt_toolkit.filters import HasFocus                                     \r\n                                                                                \r\nip = get_ipython()                                                              \r\n                                                                                \r\ndef history_fwd(event):                                                         \r\n    event.current_buffer.history_forward(count=event.arg)                       \r\n                                                                                \r\ndef history_back(event):                                                        \r\n    event.current_buffer.history_backward(count=event.arg)                      \r\n                                                                                \r\n# Register the shortcut if IPython is using prompt_toolkit                      \r\nif getattr(ip, 'pt_app', None):                                                 \r\n    registry = ip.pt_app.key_bindings                                           \r\n    registry.add_binding('escape', 'p',                                         \r\n                         filter=HasFocus(DEFAULT_BUFFER))(history_back)         \r\n    registry.add_binding('escape', 'n',                                         \r\n                         filter=HasFocus(DEFAULT_BUFFER))(history_fwd)\r\n```\r\nIf you save this in the startup directory of your default ipython profile, it should work (at least it works for me). Of course it would be nice to get this easily without having to understand part of the internals of both IPython and prompt_toolkit.\r\n\r\nHTH"
  }
]
