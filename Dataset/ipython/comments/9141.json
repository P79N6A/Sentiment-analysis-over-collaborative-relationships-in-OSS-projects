[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/172881635",
    "html_url": "https://github.com/ipython/ipython/issues/9141#issuecomment-172881635",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9141",
    "id": 172881635,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3Mjg4MTYzNQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-19T15:09:13Z",
    "updated_at": "2016-01-19T15:09:13Z",
    "author_association": "MEMBER",
    "body": "I may have partially answered my own question 2 minutes after asking it. :expressionless: \n\nOn Windows, we plug in pyreadline's ANSI-escape convertor at `io.std*`, but we don't replace `sys.std*`. So any coloured output, like oinspect and tracebacks, must go through `io.std*`.\n\nNow, is there a reason why we can't just do `sys.stdout = self.readline._outputfile`?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/172883251",
    "html_url": "https://github.com/ipython/ipython/issues/9141#issuecomment-172883251",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9141",
    "id": 172883251,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3Mjg4MzI1MQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-19T15:12:40Z",
    "updated_at": "2016-01-19T15:12:40Z",
    "author_association": "MEMBER",
    "body": "colorama, which I'm using in #9118, installs ansi->win converting streams to sys.stdout/stderr. So we should be able to get rid of these once that work lands, at least.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/173031265",
    "html_url": "https://github.com/ipython/ipython/issues/9141#issuecomment-173031265",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9141",
    "id": 173031265,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MzAzMTI2NQ==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-20T00:17:31Z",
    "updated_at": "2016-01-20T00:17:31Z",
    "author_association": "MEMBER",
    "body": "I _think_ you're right, in that we introduced that indirection layer to assist with Windows issues. I honestly don't 100% remember, though: I wrote most of that code, but it was a very long time ago, and I don't recall the specific rationale.\n\nGoing through the cobwebs in my brain, though, I'm pretty sure that it gave us hooks we needed to play nice with the windows PyReadline machinery.\n\nIt's perfectly conceivable that we could do without all that today, given changes to the surrounding tools.  If that's the case, it would be great to get rid of that layer.  We should, however, test pretty extensively on Windows before jettisoning it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/220754973",
    "html_url": "https://github.com/ipython/ipython/issues/9141#issuecomment-220754973",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9141",
    "id": 220754973,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDc1NDk3Mw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-21T02:59:00Z",
    "updated_at": "2016-05-21T02:59:00Z",
    "author_association": "MEMBER",
    "body": "May I propose a crazy idea.\nI'm sure you won't like it.\n\nInstead of actually replacing `sys.stdout`/`sys.stderr`, we replace **`sys`** itself, and mae `stdin`/`stderr` properties where we can actually watch for changes and dynamically wrap.\n\nNot even sure it is possible, and not even sure it is a good idea.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/220756340",
    "html_url": "https://github.com/ipython/ipython/issues/9141#issuecomment-220756340",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9141",
    "id": 220756340,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDc1NjM0MA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-21T03:39:27Z",
    "updated_at": "2016-05-21T03:39:27Z",
    "author_association": "MEMBER",
    "body": "Well, that's definitively a bad idea, but it works.\n\n``` python\nfrom types import ModuleType\nclass Sys(ModuleType):\n\n    def __init__(self, mod):\n        setattr(self,'_mod', mod)\n        super().__init__(mod.__name__, mod.__doc__)\n\n\n    def __getattr__(self, name):\n        if name in {'stdin','stdout','stderr'}:\n            print('So we are getting to that?')\n        # you dont' want to recurse on `_mod` do you?\n        return object.__getattribute__(object.__getattribute__(self,'_mod'), name)\n\n    def __setattr__(self, name, value):\n        if name in {'stdin', 'stdout','stderr'}:\n            print('Or so you think...')\n            return\n        if name == '_mod':\n            object.__setattr__(self, name, value)\n        setattr(self._mod, name, value)\n\n    def __dir__(self):\n        return dir(self._mod)\n\ndef patchsys(sys):\n    if isinstance(sys, Sys):\n        print('Nop, not twice')\n        return\n    import sys as _sys\n    _sys.modules['sys'] = Sys(_sys)\n\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/220771762",
    "html_url": "https://github.com/ipython/ipython/issues/9141#issuecomment-220771762",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9141",
    "id": 220771762,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDc3MTc2Mg==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-21T11:01:58Z",
    "updated_at": "2016-05-21T11:01:58Z",
    "author_association": "MEMBER",
    "body": "You're quite right, I do not like it. ;-) The sys module is pretty fundamental to Python, and I don't want to find out what we'd break by doing that. I also don't think it would work reliably - anything that had done `import sys` before you put that shim in would still have a reference to the real sys module.\n\nKudos for working out that it's possible, though. For more entertainment, have a look at this code that James Powell showed off at PyData London: https://github.com/dutc/rwatch\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/220897902",
    "html_url": "https://github.com/ipython/ipython/issues/9141#issuecomment-220897902",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9141",
    "id": 220897902,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDg5NzkwMg==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-23T06:35:02Z",
    "updated_at": "2016-05-23T06:35:02Z",
    "author_association": "MEMBER",
    "body": "+1 to not messing around with `sys`.  Neat as the above code may be, I concur with Thomas above. Too dangerous to be worth the trouble.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/221030057",
    "html_url": "https://github.com/ipython/ipython/issues/9141#issuecomment-221030057",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9141",
    "id": 221030057,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMTAzMDA1Nw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-23T16:54:09Z",
    "updated_at": "2016-05-23T16:54:09Z",
    "author_association": "MEMBER",
    "body": "> +1 to not messing around with sys. Neat as the above code may be, I concur with Thomas above. Too dangerous to be worth the trouble.\n\nYes, I was aware that was a bad idea.\n\nSidenote, we have that in `globalipapp`:\n\n```\nclass StreamProxy(io.IOStream):\n    \"\"\"Proxy for sys.stdout/err.  This will request the stream *at call time*\n    allowing for nose's Capture plugin's redirection of sys.stdout/err.\n\n    Parameters\n    ----------\n    name : str\n        The name of the stream. This will be requested anew at every call\n    \"\"\"\n```\n\nSo it seem that iostream does have a useful usage. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/221031246",
    "html_url": "https://github.com/ipython/ipython/issues/9141#issuecomment-221031246",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9141",
    "id": 221031246,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMTAzMTI0Ng==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-23T16:59:00Z",
    "updated_at": "2016-05-23T16:59:00Z",
    "author_association": "MEMBER",
    "body": "I think that's more working around our use of IOStream than a reason for it ;-)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/223436245",
    "html_url": "https://github.com/ipython/ipython/issues/9141#issuecomment-223436245",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9141",
    "id": 223436245,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzQzNjI0NQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-02T22:02:38Z",
    "updated_at": "2016-06-02T22:02:38Z",
    "author_association": "MEMBER",
    "body": "IOStream has been deprecated pushing that for 6.0 for potential removal. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/278504776",
    "html_url": "https://github.com/ipython/ipython/issues/9141#issuecomment-278504776",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9141",
    "id": 278504776,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODUwNDc3Ng==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-09T00:09:07Z",
    "updated_at": "2017-02-09T00:09:07Z",
    "author_association": "MEMBER",
    "body": "@takluyver do you want to have a look at it, 6.0 material or bump to 7+ ?"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/278619465",
    "html_url": "https://github.com/ipython/ipython/issues/9141#issuecomment-278619465",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9141",
    "id": 278619465,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODYxOTQ2NQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-09T11:44:30Z",
    "updated_at": "2017-02-09T11:44:30Z",
    "author_association": "MEMBER",
    "body": "Bumped. It's not hard to leave the code there for another release cycle."
  }
]
