[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/236127",
    "html_url": "https://github.com/ipython/ipython/issues/32#issuecomment-236127",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/32",
    "id": 236127,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjEyNw==",
    "user": {
      "login": "ipython",
      "id": 230453,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjIzMDQ1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/230453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ipython",
      "html_url": "https://github.com/ipython",
      "followers_url": "https://api.github.com/users/ipython/followers",
      "following_url": "https://api.github.com/users/ipython/following{/other_user}",
      "gists_url": "https://api.github.com/users/ipython/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ipython/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ipython/subscriptions",
      "organizations_url": "https://api.github.com/users/ipython/orgs",
      "repos_url": "https://api.github.com/users/ipython/repos",
      "events_url": "https://api.github.com/users/ipython/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ipython/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2010-05-10T09:30:50Z",
    "updated_at": "2010-05-10T09:30:50Z",
    "author_association": "COLLABORATOR",
    "body": "[ LP comment 1 by: eteq, on 2009-09-04 00:41:46.232025+00:00 ]\n\nThis is happening for me as well in 0.10 - it's pretty annoying in that it renders dreload (a very useful function) essentially useless.  It doesn't even work to do dreload(somemodulethatusesnumpy,exclude=['numpy','numpy.numpy','numpy.show'])\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/682314",
    "html_url": "https://github.com/ipython/ipython/issues/32#issuecomment-682314",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/32",
    "id": 682314,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MjMxNA==",
    "user": {
      "login": "tknbamn",
      "id": 567921,
      "node_id": "MDQ6VXNlcjU2NzkyMQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/567921?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tknbamn",
      "html_url": "https://github.com/tknbamn",
      "followers_url": "https://api.github.com/users/tknbamn/followers",
      "following_url": "https://api.github.com/users/tknbamn/following{/other_user}",
      "gists_url": "https://api.github.com/users/tknbamn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tknbamn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tknbamn/subscriptions",
      "organizations_url": "https://api.github.com/users/tknbamn/orgs",
      "repos_url": "https://api.github.com/users/tknbamn/repos",
      "events_url": "https://api.github.com/users/tknbamn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tknbamn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-01-16T22:42:36Z",
    "updated_at": "2011-01-16T22:42:36Z",
    "author_association": "NONE",
    "body": "Do you think it a good idea to modify the dreload() to accept a hook argument that determines whether a given module need reloading ?\nI have wrote such a patch because I usually want to reload my own modules, but not builtin modules or numpy, scipy etc.\nBy passing a hook list, you can choose which modules to be reloaded.\n\nI am not sure where to submit the patch, but if you have interested in,\nplease let me know.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/707713",
    "html_url": "https://github.com/ipython/ipython/issues/32#issuecomment-707713",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/32",
    "id": 707713,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNzcxMw==",
    "user": {
      "login": "emaror",
      "id": 583629,
      "node_id": "MDQ6VXNlcjU4MzYyOQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/583629?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/emaror",
      "html_url": "https://github.com/emaror",
      "followers_url": "https://api.github.com/users/emaror/followers",
      "following_url": "https://api.github.com/users/emaror/following{/other_user}",
      "gists_url": "https://api.github.com/users/emaror/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/emaror/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/emaror/subscriptions",
      "organizations_url": "https://api.github.com/users/emaror/orgs",
      "repos_url": "https://api.github.com/users/emaror/repos",
      "events_url": "https://api.github.com/users/emaror/events{/privacy}",
      "received_events_url": "https://api.github.com/users/emaror/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-01-25T23:23:09Z",
    "updated_at": "2011-01-25T23:23:09Z",
    "author_association": "NONE",
    "body": "The exclusion/inclusion of modules should be more flexible (and actually work).\n\nFor me, limiting the reloaded modules just to specific directories was useful (c.f. excluding modules by names).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/909911",
    "html_url": "https://github.com/ipython/ipython/issues/32#issuecomment-909911",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/32",
    "id": 909911,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwOTkxMQ==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-23T21:47:51Z",
    "updated_at": "2011-03-23T21:47:51Z",
    "author_association": "MEMBER",
    "body": "Yes, such a patch would be very useful, until we figure out the real problem.\n\n@tknbamn, here's a description of our dev workflow:\n\nhttp://ipython.github.com/ipython-doc/dev/development/index.html\n\nIf you're familiar with git/github, it boils down to 'make the fix in a branch, push the \"pull request\" button'.\n\nI'm flagging this 'dormant' for now because it's not on the critical path for the core team right now, but we're happy to review a pull request at _any_ time.  And a bug with a pull request automatically is treated as high priority.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4248617",
    "html_url": "https://github.com/ipython/ipython/issues/32#issuecomment-4248617",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/32",
    "id": 4248617,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDg2MTc=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-29T22:53:29Z",
    "updated_at": "2012-02-29T22:53:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "At this point my working hypothesis is that the original `knee.py` (which `dreload` borrows) no longer mimics Python's import mechanism closely enough.\n\nFor example, if you grab `knee.py` from an old version of Python, you'll see the following::\n\n```\n$ python\nPython 2.7.2+ (default, Oct  4 2011, 20:06:09) \n[GCC 4.6.1] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import knee\n>>> import numpy\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"knee.py\", line 16, in import_hook\n    q, tail = find_head_package(parent, name)\n  File \"knee.py\", line 52, in find_head_package\n    q = import_module(head, qname, parent)\n  File \"knee.py\", line 101, in import_module\n    m = imp.load_module(fqname, fp, pathname, stuff)\n...\nImportError: numpy.core.multiarray failed to import\n```\n\nBut, don't fear, I've [rewritten knee.py](https://gist.github.com/1944819) for the new import syntax, and verified that it works in Python 2.6.7, 2.7.2, and 3.2.2.\n"
  }
]
