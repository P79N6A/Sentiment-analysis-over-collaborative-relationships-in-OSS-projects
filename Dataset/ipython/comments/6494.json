[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56079767",
    "html_url": "https://github.com/ipython/ipython/pull/6494#issuecomment-56079767",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6494",
    "id": 56079767,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDc5NzY3",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-18T18:14:09Z",
    "updated_at": "2014-09-18T18:14:09Z",
    "author_association": "MEMBER",
    "body": "Ping @jdfreder @SylvainCorlay @jasongrout for review\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56080042",
    "html_url": "https://github.com/ipython/ipython/pull/6494#issuecomment-56080042",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6494",
    "id": 56080042,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDgwMDQy",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-18T18:16:04Z",
    "updated_at": "2014-09-18T18:16:04Z",
    "author_association": "MEMBER",
    "body": "This is great, I'm taking a look now...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56085240",
    "html_url": "https://github.com/ipython/ipython/pull/6494#issuecomment-56085240",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6494",
    "id": 56085240,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDg1MjQw",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-18T18:53:31Z",
    "updated_at": "2014-09-18T18:53:31Z",
    "author_association": "MEMBER",
    "body": "@takluyver I left a few comments for you.  This looks great!  Thanks.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56085847",
    "html_url": "https://github.com/ipython/ipython/pull/6494#issuecomment-56085847",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6494",
    "id": 56085847,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDg1ODQ3",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-18T18:58:26Z",
    "updated_at": "2014-09-18T18:58:26Z",
    "author_association": "MEMBER",
    "body": "Thanks Jon. I've incorporated three of your changes and responded to one.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56102576",
    "html_url": "https://github.com/ipython/ipython/pull/6494#issuecomment-56102576",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6494",
    "id": 56102576,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MTAyNTc2",
    "user": {
      "login": "SylvainCorlay",
      "id": 2397974,
      "node_id": "MDQ6VXNlcjIzOTc5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2397974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylvainCorlay",
      "html_url": "https://github.com/SylvainCorlay",
      "followers_url": "https://api.github.com/users/SylvainCorlay/followers",
      "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions",
      "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs",
      "repos_url": "https://api.github.com/users/SylvainCorlay/repos",
      "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-18T21:01:54Z",
    "updated_at": "2014-09-18T21:02:10Z",
    "author_association": "MEMBER",
    "body": "Thanks, I love it. We started namespacing our view names and model names (adding prefixes in the names) to avoid conflict. This resolves the issue in a more elegant way. \n\nBesides the inline comment, the main point is: why only doing this for views? A growing proportion of our widgets have custom models. (One example is the link widget see PR #6454). \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56102945",
    "html_url": "https://github.com/ipython/ipython/pull/6494#issuecomment-56102945",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6494",
    "id": 56102945,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MTAyOTQ1",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-18T21:04:35Z",
    "updated_at": "2014-09-18T21:04:35Z",
    "author_association": "MEMBER",
    "body": "@SylvainCorlay I intend to do this for the models (aka comm targets) as well, I just opted to get this step reviewed before working on that.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56199125",
    "html_url": "https://github.com/ipython/ipython/pull/6494#issuecomment-56199125",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6494",
    "id": 56199125,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MTk5MTI1",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-19T16:15:24Z",
    "updated_at": "2014-09-19T16:15:24Z",
    "author_association": "MEMBER",
    "body": "This looks great, :+1: from me\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56224491",
    "html_url": "https://github.com/ipython/ipython/pull/6494#issuecomment-56224491",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6494",
    "id": 56224491,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MjI0NDkx",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-19T19:38:07Z",
    "updated_at": "2014-09-19T19:38:07Z",
    "author_association": "MEMBER",
    "body": "Looking into how to do it for comm targets, I see a potential problem. There are effectively two registries of comm targets: widget models, and everything else. When you register a widget model, the widget manager registers a corresponding comm target of the same name, which calls back to WidgetManager to create the new widget model.\n\nI'm not sure yet how to distinguish between widget models and other comm targets when they're loaded from require modules rather than being placed in registries.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56235696",
    "html_url": "https://github.com/ipython/ipython/pull/6494#issuecomment-56235696",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6494",
    "id": 56235696,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MjM1Njk2",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-19T21:08:43Z",
    "updated_at": "2014-09-19T21:09:40Z",
    "author_association": "MEMBER",
    "body": "I think you could assume if the namespace pointed to a class inheriting from WidgetModel it was to be handled by the widget manager.  Otherwise, you could assume it was a callback meant to handle a comm. i.e.\n\n``` js\n// Non-widget comm handler\nvar a = function(...) { /* do stuff */ };\n\n// Widget comm handler (really just a widget)\nvar b = MyWidgetClass;\n```\n\nThe code that translates from target name to handling function could look like this (pseudo code):\n\n```\nif target in registry\n    handler = registry[target]\nelse\n    handler = requirejs(target)\n\nif handler is not none\n    if handler is instance of WidgetModel\n        this.kernel.widget_manager.comm_opened(handler, comm)\n    else\n        target.apply(this, [comm]) \n```\n\n(The signatures I used in my examples probably don't match their JS counterparts exactly, but I'd thought it was enough to get the point across.)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56241446",
    "html_url": "https://github.com/ipython/ipython/pull/6494#issuecomment-56241446",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6494",
    "id": 56241446,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MjQxNDQ2",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-19T21:57:26Z",
    "updated_at": "2014-09-19T21:57:26Z",
    "author_association": "MEMBER",
    "body": "@SylvainCorlay , you mentioned that you're building widgets with custom models. Do those all inherit from WidgetModel?\n\nSince WidgetModel itself inherits from Backbone, I could imagine people wanting to make widget models not based on that. Though perhaps they should then just be using a custom Comm target anyway.\n\nI keep coming back to the trouble that the widgets feel like a conflation of two things:\n1. A UI element attached to a comm channel, so it can communicate with the kernel.\n2. A stateful, model-view based abstraction supporting syncing.\n\nI don't know how to sensibly separate those, or even if it actually makes sense to do so.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56245354",
    "html_url": "https://github.com/ipython/ipython/pull/6494#issuecomment-56245354",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6494",
    "id": 56245354,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MjQ1MzU0",
    "user": {
      "login": "SylvainCorlay",
      "id": 2397974,
      "node_id": "MDQ6VXNlcjIzOTc5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2397974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylvainCorlay",
      "html_url": "https://github.com/SylvainCorlay",
      "followers_url": "https://api.github.com/users/SylvainCorlay/followers",
      "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions",
      "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs",
      "repos_url": "https://api.github.com/users/SylvainCorlay/repos",
      "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-19T22:45:52Z",
    "updated_at": "2014-09-19T22:45:52Z",
    "author_association": "MEMBER",
    "body": "So far we inherit from `WidgetModel`. \n- Regarding the 1-2 distinction, the link widget is a good example of synchronized object that does not correspond to a visual element. Before an earlier PR, the model was not instantiated on the JavaScript side before `display` was called. Calling `display` to instantiate a non-visual JavaScript object is a bit odd, especially as it does not have a view (besides the empty base `WidgetView`) In this regard \"Widget\" is probably not the best name. \n- It seems unlikely that everyone building widget libraries will want to use the backbone/jquery/underscore/bootstrap combination. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56246599",
    "html_url": "https://github.com/ipython/ipython/pull/6494#issuecomment-56246599",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6494",
    "id": 56246599,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MjQ2NTk5",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-19T23:02:19Z",
    "updated_at": "2014-09-19T23:02:19Z",
    "author_association": "MEMBER",
    "body": "OK, so it's practical now to use the synced-model part without a UI element. It's unfortunate that the naming for that involves the word 'widget', when it's not really a widget, but I'm not going to fight about that again.\n\nWhat is/should be the answer for people who want a comm + GUI element without the syncing part? Should they just work with the comm layer directly? It seems like there are advantages to using the widget machinery for that; our Button widget uses the syncing model infrastructure even though the only interaction (clicking it) is non-stateful. Presumably anything like a map or plot widget, where you get click events with coordinates, is in a similar position.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56248872",
    "html_url": "https://github.com/ipython/ipython/pull/6494#issuecomment-56248872",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6494",
    "id": 56248872,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MjQ4ODcy",
    "user": {
      "login": "SylvainCorlay",
      "id": 2397974,
      "node_id": "MDQ6VXNlcjIzOTc5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2397974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylvainCorlay",
      "html_url": "https://github.com/SylvainCorlay",
      "followers_url": "https://api.github.com/users/SylvainCorlay/followers",
      "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions",
      "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs",
      "repos_url": "https://api.github.com/users/SylvainCorlay/repos",
      "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-19T23:39:12Z",
    "updated_at": "2014-09-19T23:39:25Z",
    "author_association": "MEMBER",
    "body": "Agree. The only kind of people who would not want to use the widget machinery are probably experienced developers willing to use other frameworks than JQuery and backbone. Otherwise, even with custom messages, the widget manager saves a lot of work. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56267500",
    "html_url": "https://github.com/ipython/ipython/pull/6494#issuecomment-56267500",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6494",
    "id": 56267500,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MjY3NTAw",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-20T13:14:39Z",
    "updated_at": "2014-09-20T13:14:39Z",
    "author_association": "MEMBER",
    "body": "> I keep coming back to the trouble that the widgets feel like a conflation of two things:\n> \n> A UI element attached to a comm channel, so it can communicate with the kernel.\n> A stateful, model-view based abstraction supporting syncing.\n\nIn my mind, an IPython 'Widget' is all about the model syncing (so 2).  A 'DOMWidget' is the thing that usually has a UI component based on the backbone syncing.  I think there will definitely be people that don't want to use the backbone-based syncing, but they then will be using the comm channel to implement a different protocol.  They can call them widgets, but they won't be \"IPython Widgets\".\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56267588",
    "html_url": "https://github.com/ipython/ipython/pull/6494#issuecomment-56267588",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6494",
    "id": 56267588,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MjY3NTg4",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-20T13:17:55Z",
    "updated_at": "2014-09-20T13:17:55Z",
    "author_association": "MEMBER",
    "body": "Perhaps there can be some sort of way to have the nice UI benefits (e.g., best practices for reserving a DOM element in the current output area, etc.) without relying on the backbone model syncing.  Maybe an API based on the cell object, and some way to access the current cell executing code.  Or something (just thinking out loud here).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56273392",
    "html_url": "https://github.com/ipython/ipython/pull/6494#issuecomment-56273392",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6494",
    "id": 56273392,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MjczMzky",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-20T16:55:17Z",
    "updated_at": "2014-09-20T16:55:17Z",
    "author_association": "MEMBER",
    "body": "> I keep coming back to the trouble that the widgets feel like a conflation of two things:\n> \n> A UI element attached to a comm channel, so it can communicate with the kernel.\n> A stateful, model-view based abstraction supporting syncing.\n\nOn second thought, this sounds similar to our design decision to conflate models and views (at least on the python side).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56537725",
    "html_url": "https://github.com/ipython/ipython/pull/6494#issuecomment-56537725",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6494",
    "id": 56537725,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTM3NzI1",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-23T15:26:16Z",
    "updated_at": "2014-09-23T15:26:16Z",
    "author_association": "MEMBER",
    "body": "@takluyver do you want me to merge this work and we can continue the comm/model discussion in another PR?  Or did you want to leave this open in case you wanted to change something else here?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56714576",
    "html_url": "https://github.com/ipython/ipython/pull/6494#issuecomment-56714576",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6494",
    "id": 56714576,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NzE0NTc2",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-24T18:16:22Z",
    "updated_at": "2014-09-24T18:16:22Z",
    "author_association": "MEMBER",
    "body": "I think it might be best to merge this as is. I could try to implement it for comm targets as well using the JS equivalent of `if issubclass(target, WidgetModel)` as you suggested, but even that gets complicated: it would mean that the widget stuff and the comm stuff have a circular import, and I don't know how require handles that.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/57931853",
    "html_url": "https://github.com/ipython/ipython/pull/6494#issuecomment-57931853",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6494",
    "id": 57931853,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTMxODUz",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-05T10:11:56Z",
    "updated_at": "2014-10-05T10:11:56Z",
    "author_association": "MEMBER",
    "body": "This guy need a rebase.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/57943360",
    "html_url": "https://github.com/ipython/ipython/pull/6494#issuecomment-57943360",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6494",
    "id": 57943360,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTQzMzYw",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-05T16:36:38Z",
    "updated_at": "2014-10-05T16:36:38Z",
    "author_association": "MEMBER",
    "body": "Rebased.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/57943489",
    "html_url": "https://github.com/ipython/ipython/pull/6494#issuecomment-57943489",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6494",
    "id": 57943489,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTQzNDg5",
    "user": {
      "login": "SylvainCorlay",
      "id": 2397974,
      "node_id": "MDQ6VXNlcjIzOTc5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2397974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylvainCorlay",
      "html_url": "https://github.com/SylvainCorlay",
      "followers_url": "https://api.github.com/users/SylvainCorlay/followers",
      "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions",
      "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs",
      "repos_url": "https://api.github.com/users/SylvainCorlay/repos",
      "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-05T16:40:40Z",
    "updated_at": "2014-10-05T16:40:40Z",
    "author_association": "MEMBER",
    "body": "Do you guys plan on implementing this for widget models as well ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/57943614",
    "html_url": "https://github.com/ipython/ipython/pull/6494#issuecomment-57943614",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6494",
    "id": 57943614,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTQzNjE0",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-05T16:44:46Z",
    "updated_at": "2014-10-05T16:44:46Z",
    "author_association": "MEMBER",
    "body": "Yes, but currently I intend that to be a separate PR.\n\nAt present, widget model names are reused as comm target names, so registering a widget model causes the widget manager to register the same name as a comm target, pointing to a proxy method of widget manager. But if it's loaded from a module, and not in a registry at all, it's not obvious how to distinguish widget models from other comm targets. We've discussed this, and I think the best approach is to separate those two concepts, so all widgets open a comm with a target called `Widget`, which is a single entry in the comm target registry, pointing to the widget manager to instantiate the desired model.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/57944804",
    "html_url": "https://github.com/ipython/ipython/pull/6494#issuecomment-57944804",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6494",
    "id": 57944804,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTQ0ODA0",
    "user": {
      "login": "SylvainCorlay",
      "id": 2397974,
      "node_id": "MDQ6VXNlcjIzOTc5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2397974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylvainCorlay",
      "html_url": "https://github.com/SylvainCorlay",
      "followers_url": "https://api.github.com/users/SylvainCorlay/followers",
      "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions",
      "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs",
      "repos_url": "https://api.github.com/users/SylvainCorlay/repos",
      "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-05T17:19:43Z",
    "updated_at": "2014-10-05T17:27:46Z",
    "author_association": "MEMBER",
    "body": "If you want to be able to trigger the loading of the requirejs modules for views (and models) from the backend, it could be done in a simpler fashion: \n\nRather than loading the js module when the widget is displayed or loaded the first time, you could have two backend side functions `load_view_module(target_name, module)`  and `load_model_module(target_name, module)` which simply trigger the registration on the frontend with the right target name. \n\n``` JavaScript\nrequire([module], function(module) {\n    manager.register_widget_model(target_name, module); \n});\n```\n\nand\n\n``` JavaScript\nrequire([module], function(module) {\n    manager.register_widget_view(target_name, module);\n});\n```\n\nThis would not require any change in the implementation of the widgets themselves, which would still rely on the current mechanism. - edit - and it would make less differences in what you need to do to overload models and views. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/57945640",
    "html_url": "https://github.com/ipython/ipython/pull/6494#issuecomment-57945640",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6494",
    "id": 57945640,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTQ1NjQw",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-05T17:45:36Z",
    "updated_at": "2014-10-05T17:45:36Z",
    "author_association": "MEMBER",
    "body": "My whole aim is to get away from having a separate registration step. You can already display some JS that requires a module and registers something, but because of the async nature of JS, it's hard to guarantee that that has run before you try to use the registry. By using require on instantiation, you can load the relevant module and continue with instantiation when the load callback fires.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/57946025",
    "html_url": "https://github.com/ipython/ipython/pull/6494#issuecomment-57946025",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6494",
    "id": 57946025,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTQ2MDI1",
    "user": {
      "login": "SylvainCorlay",
      "id": 2397974,
      "node_id": "MDQ6VXNlcjIzOTc5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2397974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylvainCorlay",
      "html_url": "https://github.com/SylvainCorlay",
      "followers_url": "https://api.github.com/users/SylvainCorlay/followers",
      "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions",
      "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs",
      "repos_url": "https://api.github.com/users/SylvainCorlay/repos",
      "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-05T17:57:39Z",
    "updated_at": "2014-10-05T17:57:39Z",
    "author_association": "MEMBER",
    "body": "- The widget registry is language agnostic. requirejs is specific to a frontend. this additional registration contains the abstraction leaking. \n- This implementation introduces discrepancies in the way you can overload views and models. \n- Loading the view module on first display is unnatural to me. I is more natural to load the module at the time when you import the backend Python module. \n- Dealing with the asynchronous nature of JavaScript in this case would be easy: in the same way we have (`this.after_displayed`), which runs the callback right away if things are already dislayed, or when \"display\" is fired, the content of `create_view` can run \"after_loaded\"...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/57946239",
    "html_url": "https://github.com/ipython/ipython/pull/6494#issuecomment-57946239",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6494",
    "id": 57946239,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTQ2MjM5",
    "user": {
      "login": "SylvainCorlay",
      "id": 2397974,
      "node_id": "MDQ6VXNlcjIzOTc5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2397974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylvainCorlay",
      "html_url": "https://github.com/SylvainCorlay",
      "followers_url": "https://api.github.com/users/SylvainCorlay/followers",
      "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions",
      "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs",
      "repos_url": "https://api.github.com/users/SylvainCorlay/repos",
      "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-05T18:05:16Z",
    "updated_at": "2014-10-05T18:05:38Z",
    "author_association": "MEMBER",
    "body": "Btw, I still think that the widget view and model registries should be namespaced. For example`box` is really too generic for a view name. `jupyter.box` would encourage other people to have their own `foo.bar.box`... \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/57946937",
    "html_url": "https://github.com/ipython/ipython/pull/6494#issuecomment-57946937",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6494",
    "id": 57946937,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTQ2OTM3",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-05T18:27:34Z",
    "updated_at": "2014-10-05T18:27:34Z",
    "author_association": "MEMBER",
    "body": "In principle it's frontend agnostic, but in practice, most third party widgets are only likely to be a JS frontend. Especially since there are no other frontends for widgets yet. We have plenty of experience pointing to the fact that we can't really design a decent foo-agnostic architecture until we have more than one _foo_ to actually work with.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/57947010",
    "html_url": "https://github.com/ipython/ipython/pull/6494#issuecomment-57947010",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6494",
    "id": 57947010,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTQ3MDEw",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-05T18:29:32Z",
    "updated_at": "2014-10-05T18:29:32Z",
    "author_association": "MEMBER",
    "body": "And besides, specifying a module name at instantiation time is no more JS-specific than calling `load_view_module()` in the backend with a requirejs path.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/57947272",
    "html_url": "https://github.com/ipython/ipython/pull/6494#issuecomment-57947272",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6494",
    "id": 57947272,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTQ3Mjcy",
    "user": {
      "login": "SylvainCorlay",
      "id": 2397974,
      "node_id": "MDQ6VXNlcjIzOTc5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2397974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylvainCorlay",
      "html_url": "https://github.com/SylvainCorlay",
      "followers_url": "https://api.github.com/users/SylvainCorlay/followers",
      "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions",
      "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs",
      "repos_url": "https://api.github.com/users/SylvainCorlay/repos",
      "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-05T18:37:24Z",
    "updated_at": "2014-10-05T20:02:01Z",
    "author_association": "MEMBER",
    "body": "The `load_view_module` is much less intrusive in the Widget code than making the js module path an attribute of the widget. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/58826199",
    "html_url": "https://github.com/ipython/ipython/pull/6494#issuecomment-58826199",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6494",
    "id": 58826199,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4ODI2MTk5",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-12T23:13:34Z",
    "updated_at": "2014-10-12T23:13:34Z",
    "author_association": "MEMBER",
    "body": ":+1: as-is, @takluyver what's the status of this?\n"
  }
]
