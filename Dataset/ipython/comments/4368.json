[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25988871",
    "html_url": "https://github.com/ipython/ipython/issues/4368#issuecomment-25988871",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4368",
    "id": 25988871,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTg4ODcx",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-09T17:03:53Z",
    "updated_at": "2013-10-09T17:03:53Z",
    "author_association": "MEMBER",
    "body": "This has come up before in some form. The question is what behaviour is least surprising:\n- Always call the scripts `ipython` etc. with no suffix, and let the user distinguish them manually.\n- `ipython` for Python 2, `ipython3` for Py 3 (what we do at the moment, follows the Debian pattern of treating Python 2 and 3 as separate systems)\n- If `sys.executable` ends with `3`, install as `ipython3` (what this does in virtualenvs depends whether python or python3 is the symlink)\n- Whenever we install `ipython3`, symlink `ipython` to it\n- Detect when we're in a Py 3 virtualenv, and only then create an `ipython` symlink to `ipython3`\n- Should there also be `ipython2` scripts or symlinks?\n\nPlus, if we want symlinks, we'll need to find a reliable, cross platform way to create them in the correct places.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26182370",
    "html_url": "https://github.com/ipython/ipython/issues/4368#issuecomment-26182370",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4368",
    "id": 26182370,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MTgyMzcw",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-11T23:25:56Z",
    "updated_at": "2013-10-11T23:25:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "it'd be great if you could follow python/pip convention of having python2.6, python2.7 (or pip-2.7), etc. (so if you install an IPython version, it at least comes with ipython3.2, ipython2.6, etc.). Not going to lie, it'd be nifty to have ipython symlink to ipython3 in a virtualenv, because my fingers type ipython and I realize I'm in the wrong version.\n\nThat said, I would be unhappy if installing IPython in my python 3 environment overrode IPython for Python 2.X, but I'm guessing there are few users who have multiple versions of Python installed.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/27374201",
    "html_url": "https://github.com/ipython/ipython/issues/4368#issuecomment-27374201",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4368",
    "id": 27374201,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3Mzc0MjAx",
    "user": {
      "login": "garrison",
      "id": 91987,
      "node_id": "MDQ6VXNlcjkxOTg3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/91987?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/garrison",
      "html_url": "https://github.com/garrison",
      "followers_url": "https://api.github.com/users/garrison/followers",
      "following_url": "https://api.github.com/users/garrison/following{/other_user}",
      "gists_url": "https://api.github.com/users/garrison/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/garrison/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/garrison/subscriptions",
      "organizations_url": "https://api.github.com/users/garrison/orgs",
      "repos_url": "https://api.github.com/users/garrison/repos",
      "events_url": "https://api.github.com/users/garrison/events{/privacy}",
      "received_events_url": "https://api.github.com/users/garrison/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-30T09:13:24Z",
    "updated_at": "2013-10-30T09:13:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Should there also be ipython2 scripts or symlinks?\n\nFollowing [PEP 394](http://www.python.org/dev/peps/pep-0394/) would suggest than an `ipython2` executable should exist if installed into a python2 environment.  Then, `ipython` would be a symlink either to `ipython2` or `ipython3`.  One way to handle this would be as follows:  Create the `ipython` symlink in the target `bin/` directory _only_ if it does not already exist, and make it point to the ipython matching the current python version.  If the symlink already exists, it should not be modified.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33624283",
    "html_url": "https://github.com/ipython/ipython/issues/4368#issuecomment-33624283",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4368",
    "id": 33624283,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjI0Mjgz",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-29T20:01:24Z",
    "updated_at": "2014-01-29T20:01:24Z",
    "author_association": "MEMBER",
    "body": "We now install ipython/ipython2 for Python 2 and ipython/ipython3 for Python 3.\n"
  }
]
