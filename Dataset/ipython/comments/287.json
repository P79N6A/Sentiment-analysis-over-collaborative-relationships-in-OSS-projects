[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/845163",
    "html_url": "https://github.com/ipython/ipython/issues/287#issuecomment-845163",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/287",
    "id": 845163,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0NTE2Mw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-07T23:33:42Z",
    "updated_at": "2011-03-07T23:33:42Z",
    "author_association": "MEMBER",
    "body": "It seems that, when you run a macro, both the command calling the macro and the macro itself are stored in history. The database expects a unique line number for each entry, but these are passed with the same line number (`shell.execution_count`). I think we should only store the macro call, not the content of the macro. I'm not familiar with the various `shell.run_*` methods, but would it make sense to switch %macro to something like run_source, rather than run_cell?\n\nNearer to release, it probably makes sense for store_inputs to catch IntegrityError so that it can fail more gracefully. I've left it uncaught for now so that we can pick up on errors like this one.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/845361",
    "html_url": "https://github.com/ipython/ipython/issues/287#issuecomment-845361",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/287",
    "id": 845361,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0NTM2MQ==",
    "user": {
      "login": "rkern",
      "id": 46135,
      "node_id": "MDQ6VXNlcjQ2MTM1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/46135?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rkern",
      "html_url": "https://github.com/rkern",
      "followers_url": "https://api.github.com/users/rkern/followers",
      "following_url": "https://api.github.com/users/rkern/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkern/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rkern/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkern/subscriptions",
      "organizations_url": "https://api.github.com/users/rkern/orgs",
      "repos_url": "https://api.github.com/users/rkern/repos",
      "events_url": "https://api.github.com/users/rkern/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rkern/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-08T00:32:19Z",
    "updated_at": "2011-03-08T00:32:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "It might be best for the prefilter mechanism to expand Macro objects explicitly instead of using the IPyAutocall mechanism. Then the history will contain both the raw macro execution and the expanded macro implementation automatically.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/845502",
    "html_url": "https://github.com/ipython/ipython/issues/287#issuecomment-845502",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/287",
    "id": 845502,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0NTUwMg==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-08T01:18:06Z",
    "updated_at": "2011-03-08T01:18:06Z",
    "author_association": "MEMBER",
    "body": "That's not a bad idea. I'll look into it tomorrow.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/849602",
    "html_url": "https://github.com/ipython/ipython/issues/287#issuecomment-849602",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/287",
    "id": 849602,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0OTYwMg==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-08T23:24:18Z",
    "updated_at": "2011-03-08T23:24:18Z",
    "author_association": "MEMBER",
    "body": "It's working a bit. The trouble is that IPython determines that a cell contains a single block before it does the prefiltering. So the macro command gets expanded, but then compiled in single line mode, and only the first line of the macro is executed. Is there an easy way round this, or would it involve substantial changes to IPython's execution machinery?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/849931",
    "html_url": "https://github.com/ipython/ipython/issues/287#issuecomment-849931",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/287",
    "id": 849931,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0OTkzMQ==",
    "user": {
      "login": "rkern",
      "id": 46135,
      "node_id": "MDQ6VXNlcjQ2MTM1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/46135?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rkern",
      "html_url": "https://github.com/rkern",
      "followers_url": "https://api.github.com/users/rkern/followers",
      "following_url": "https://api.github.com/users/rkern/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkern/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rkern/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkern/subscriptions",
      "organizations_url": "https://api.github.com/users/rkern/orgs",
      "repos_url": "https://api.github.com/users/rkern/repos",
      "events_url": "https://api.github.com/users/rkern/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rkern/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-09T01:05:13Z",
    "updated_at": "2011-03-09T01:05:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "It looks like a lot of the logic for prefiltering and transformation has been split up (or simply duplicated) between the PrefilterManager and the InputSplitter. I wouldn't be surprised if there's a bunch of dead code in the prefilter module.\n\nI'll think on it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/927791",
    "html_url": "https://github.com/ipython/ipython/issues/287#issuecomment-927791",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/287",
    "id": 927791,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkyNzc5MQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-28T20:03:46Z",
    "updated_at": "2011-03-28T20:03:46Z",
    "author_association": "MEMBER",
    "body": "The original bug is fixed, and the contents of a macro are now displayed in the translated version of the history. There may well still be duplicate code in prefilter.py and inputsplitter.py - I didn't try to audit them.\n"
  }
]
