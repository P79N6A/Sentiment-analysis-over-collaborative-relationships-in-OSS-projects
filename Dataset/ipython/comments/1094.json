[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3005787",
    "html_url": "https://github.com/ipython/ipython/issues/1094#issuecomment-3005787",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1094",
    "id": 3005787,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDU3ODc=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-04T10:28:38Z",
    "updated_at": "2011-12-04T10:28:38Z",
    "author_association": "MEMBER",
    "body": "@bfroehle\nI see that you've been faster than me, you might want to Initialize `defstring` with `reply.call_def` (I suppose this mean `call_definition`)  to be coherent with the docstring logic . \n\n@fperez sayed :\n\n```\n>  In fact, for classes that have both, we show both\n```\n\nSo we might also want to append the differents `*_docstrings` maybe...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3007970",
    "html_url": "https://github.com/ipython/ipython/issues/1094#issuecomment-3007970",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1094",
    "id": 3007970,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDc5NzA=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-04T18:35:58Z",
    "updated_at": "2011-12-04T18:35:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "For symmetry with qtconsole, etc, I guess we should reimplement `IPython.core.oinspect.call_tip` (and whatever it calls) in Javascript.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3051637",
    "html_url": "https://github.com/ipython/ipython/issues/1094#issuecomment-3051637",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1094",
    "id": 3051637,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTE2Mzc=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-07T18:57:39Z",
    "updated_at": "2011-12-07T18:57:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "In the Qtconsole we do NOT show both docstrings, only the one with the highest priority:\n\n```\n    # Now get docstring.\n    # The priority is: call docstring, constructor docstring, main one.\n    doc = oinfo.get('call_docstring')\n    if doc is None:\n        doc = oinfo.get('init_docstring')\n    if doc is None:\n        doc = oinfo.get('docstring','')\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3197663",
    "html_url": "https://github.com/ipython/ipython/issues/1094#issuecomment-3197663",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1094",
    "id": 3197663,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTc2NjM=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-18T23:25:09Z",
    "updated_at": "2011-12-18T23:25:09Z",
    "author_association": "MEMBER",
    "body": "As mentioned when closing #1096, eventually a nice refactoring of these tools for better reuse and uniformity in output is needed.\n"
  }
]
