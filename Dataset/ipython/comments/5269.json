[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36648541",
    "html_url": "https://github.com/ipython/ipython/issues/5269#issuecomment-36648541",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5269",
    "id": 36648541,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjQ4NTQx",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-04T17:10:42Z",
    "updated_at": "2014-03-04T17:10:42Z",
    "author_association": "MEMBER",
    "body": "You are right that this is meant to safely cleanup after a dead engine (and is confirmed to behave correctly in tests). Can you provide a larger snapshot of the controller when it dies? Can you also provide the output of `print IPython.sys_info()`\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/37200991",
    "html_url": "https://github.com/ipython/ipython/issues/5269#issuecomment-37200991",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5269",
    "id": 37200991,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjAwOTkx",
    "user": {
      "login": "corydolphin",
      "id": 446889,
      "node_id": "MDQ6VXNlcjQ0Njg4OQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/446889?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/corydolphin",
      "html_url": "https://github.com/corydolphin",
      "followers_url": "https://api.github.com/users/corydolphin/followers",
      "following_url": "https://api.github.com/users/corydolphin/following{/other_user}",
      "gists_url": "https://api.github.com/users/corydolphin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/corydolphin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/corydolphin/subscriptions",
      "organizations_url": "https://api.github.com/users/corydolphin/orgs",
      "repos_url": "https://api.github.com/users/corydolphin/repos",
      "events_url": "https://api.github.com/users/corydolphin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/corydolphin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-10T16:17:36Z",
    "updated_at": "2014-03-10T16:17:36Z",
    "author_association": "NONE",
    "body": "I am also having this challenge when iterating through the result of map_async. I attempted to catch the error and continue, but it appears that it is failing in the iterator:\n\nI am using ipython 1.1.0, from Starcluster. I will attempt to force an update to the most recent ipython and see if this fixes the issue, though I am somewhat worried about changing the iPython version given all of the dependencies. \n\n``` python\nclient = Client(packer='pickle')\n\nlogging.info(\"Connected to cluster\")\nlv = client.load_balanced_view()\n\nparallel_result = lv.map_async(lin_regression_evaluate_model, iter_values(), ordered=False)\n\n    try:\n        for res in parallel_result:\n            try:\n                print res\n                outfile.write(\"%s\" % (res,))\n                outfile.write(\"\\n\")\n            except RemoteError as re:\n                print \"Remote error in iteration, trying to continue\"\n                print re\n    except RemoteError as re:\n        print \"Remote error, trying to continue\"\n        print re\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/40645568",
    "html_url": "https://github.com/ipython/ipython/issues/5269#issuecomment-40645568",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5269",
    "id": 40645568,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjQ1NTY4",
    "user": {
      "login": "mluessi",
      "id": 647005,
      "node_id": "MDQ6VXNlcjY0NzAwNQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/647005?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mluessi",
      "html_url": "https://github.com/mluessi",
      "followers_url": "https://api.github.com/users/mluessi/followers",
      "following_url": "https://api.github.com/users/mluessi/following{/other_user}",
      "gists_url": "https://api.github.com/users/mluessi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mluessi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mluessi/subscriptions",
      "organizations_url": "https://api.github.com/users/mluessi/orgs",
      "repos_url": "https://api.github.com/users/mluessi/repos",
      "events_url": "https://api.github.com/users/mluessi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mluessi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-16T20:06:28Z",
    "updated_at": "2014-04-16T20:06:28Z",
    "author_association": "NONE",
    "body": "I finally updated to IPython 2.0 and I still have this problem. Here is a simple script to reproduce it:\n\n```\nimport time\nfrom IPython.parallel import Client\n\ndef test_fun():\n    import time\n    time.sleep(20)\n\nclient = Client(profile='default')\nlb_view = client.load_balanced_view()\n\ntasks = [lb_view.apply(test_fun) for ii in range(4)]\n\nretrieved = [False] * len(tasks)\nwhile True:\n    all_done = True\n    for ii, task in enumerate(tasks):\n        all_done = task.ready() and all_done\n        if task.ready() and not retrieved[ii]:\n            task.get()\n            retrieved[ii] = True\n    time.sleep(1)\n\n    if all_done:\n        print 'done'\n        break\n```\n\nRun the above script and then manually kill one of the engines. When `unregister_engine()` is called, the while-loop stops with the following output:\n\nTraceback (most recent call last):\n  File \"/opt/anaconda/lib/python2.7/site-packages/IPython/parallel/controller/scheduler.py\", line 357, in handle_stranded_tasks\n    raise error.EngineError(\"Engine %r died while running task %r\"%(engine, msg_id))\nEngineError: Engine 'c0270c6c-dc87-43c4-8e02-45269da9e1b3' died while running task u'f6459e30-d7b2-4926-bee1-50e3fd65de4c'\n\nNote that this doesn't seem to be an actual exception, just an output to stderr/stdout but for some reason it interrupts the loop. The other tasks keep running. The output of `IPython.sys_info()` is:\n\n{'commit_hash': 'd268878',\n 'commit_source': 'installation',\n 'default_encoding': 'UTF-8',\n 'ipython_path': '/opt/anaconda/lib/python2.7/site-packages/IPython',\n 'ipython_version': '2.0.0',\n 'os_name': 'posix',\n 'platform': 'Linux-2.6.32-431.1.2.0.1.el6.x86_64-x86_64-with-centos-6.5-Final',\n 'sys_executable': '/opt/anaconda/bin/python',\n 'sys_platform': 'linux2',\n 'sys_version': '2.7.6 |Anaconda 1.8.0 (64-bit)| (default, Jan 17 2014, 10:13:17) \\n[GCC 4.1.2 20080704 (Red Hat 4.1.2-54)]'}\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/40660022",
    "html_url": "https://github.com/ipython/ipython/issues/5269#issuecomment-40660022",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5269",
    "id": 40660022,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjYwMDIy",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-16T22:23:27Z",
    "updated_at": "2014-04-16T22:23:27Z",
    "author_association": "MEMBER",
    "body": "Why do you say the cluster has crashed?  I just ran your script wrapping `task.get()` in try/except and it succeeded just fine.  A summary of the relevant behavior:\n- When a task fails, calling `AsyncResult.get()` will raise the failing Exception.\n- When the reason is an engine dying, the Scheduler builds a special Exception for this case.\n- `AsyncResult.ready()` returns True if the result is ready, regardless of whether the result is successful. `AsyncResult.successful()` will tell you that (ref: [stdlib AsyncResult documentation](https://docs.python.org/2/library/multiprocessing.html#multiprocessing.pool.AsyncResult))\n\nJust because an exception was raised in your client doesn't mean there are any problems in the scheduler or anywhere else in the cluster.\n\n[Your script as a notebook](http://nbviewer.ipython.org/gist/minrk/10938657) illustrating that everything is actually working fine.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/40670579",
    "html_url": "https://github.com/ipython/ipython/issues/5269#issuecomment-40670579",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5269",
    "id": 40670579,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjcwNTc5",
    "user": {
      "login": "mluessi",
      "id": 647005,
      "node_id": "MDQ6VXNlcjY0NzAwNQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/647005?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mluessi",
      "html_url": "https://github.com/mluessi",
      "followers_url": "https://api.github.com/users/mluessi/followers",
      "following_url": "https://api.github.com/users/mluessi/following{/other_user}",
      "gists_url": "https://api.github.com/users/mluessi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mluessi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mluessi/subscriptions",
      "organizations_url": "https://api.github.com/users/mluessi/orgs",
      "repos_url": "https://api.github.com/users/mluessi/repos",
      "events_url": "https://api.github.com/users/mluessi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mluessi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-17T01:06:56Z",
    "updated_at": "2014-04-17T01:06:56Z",
    "author_association": "NONE",
    "body": "@minrk thanks! I should have looked at the documentation more carefully. \n"
  }
]
