[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/105811942",
    "html_url": "https://github.com/ipython/ipython/issues/8478#issuecomment-105811942",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8478",
    "id": 105811942,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTgxMTk0Mg==",
    "user": {
      "login": "njsmith",
      "id": 609896,
      "node_id": "MDQ6VXNlcjYwOTg5Ng==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609896?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/njsmith",
      "html_url": "https://github.com/njsmith",
      "followers_url": "https://api.github.com/users/njsmith/followers",
      "following_url": "https://api.github.com/users/njsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/njsmith/orgs",
      "repos_url": "https://api.github.com/users/njsmith/repos",
      "events_url": "https://api.github.com/users/njsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/njsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-27T08:10:22Z",
    "updated_at": "2015-05-27T08:10:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "See also: https://bugs.python.org/issue24294\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/105963376",
    "html_url": "https://github.com/ipython/ipython/issues/8478#issuecomment-105963376",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8478",
    "id": 105963376,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTk2MzM3Ng==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-27T15:35:35Z",
    "updated_at": "2015-05-27T15:35:35Z",
    "author_association": "MEMBER",
    "body": "We already reset the warning filter in IPython so +1.\nWe could then turn our shims modules into Dreprecation warning and not User warning also maybe.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/106004327",
    "html_url": "https://github.com/ipython/ipython/issues/8478#issuecomment-106004327",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8478",
    "id": 106004327,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNjAwNDMyNw==",
    "user": {
      "login": "charris",
      "id": 77272,
      "node_id": "MDQ6VXNlcjc3Mjcy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/77272?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charris",
      "html_url": "https://github.com/charris",
      "followers_url": "https://api.github.com/users/charris/followers",
      "following_url": "https://api.github.com/users/charris/following{/other_user}",
      "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
      "organizations_url": "https://api.github.com/users/charris/orgs",
      "repos_url": "https://api.github.com/users/charris/repos",
      "events_url": "https://api.github.com/users/charris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charris/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-27T17:26:12Z",
    "updated_at": "2015-05-27T17:26:12Z",
    "author_association": "NONE",
    "body": "IIRC, the bug was introduced when Python made no DeprecationWarning the default in order to work around the mistake of backporting PyCapsule to 2.8 and raising DeprecationWarning for PyCObject.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/106011866",
    "html_url": "https://github.com/ipython/ipython/issues/8478#issuecomment-106011866",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8478",
    "id": 106011866,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNjAxMTg2Ng==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-27T17:52:17Z",
    "updated_at": "2015-05-27T17:52:17Z",
    "author_association": "MEMBER",
    "body": "I think this makes sense. @njsmith , do you have time to do a PR?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/106012099",
    "html_url": "https://github.com/ipython/ipython/issues/8478#issuecomment-106012099",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8478",
    "id": 106012099,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNjAxMjA5OQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-27T17:52:58Z",
    "updated_at": "2015-05-27T17:52:58Z",
    "author_association": "MEMBER",
    "body": "commiting and I push a PR. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/106012146",
    "html_url": "https://github.com/ipython/ipython/issues/8478#issuecomment-106012146",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8478",
    "id": 106012146,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNjAxMjE0Ng==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-27T17:53:08Z",
    "updated_at": "2015-05-27T17:53:08Z",
    "author_association": "MEMBER",
    "body": "(no test yet though) \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/106012548",
    "html_url": "https://github.com/ipython/ipython/issues/8478#issuecomment-106012548",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8478",
    "id": 106012548,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNjAxMjU0OA==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-27T17:54:19Z",
    "updated_at": "2015-05-27T17:54:19Z",
    "author_association": "MEMBER",
    "body": "I hadn't thought of this, but it's a good idea. I don't think that there's any sensible argument against enabling it for `__main__`. I'm wondering if we should unhide deprecations across the board, though.\n\nThe discussion on [python-ideas](http://comments.gmane.org/gmane.comp.python.ideas/32191) is a bit depressing.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/106013027",
    "html_url": "https://github.com/ipython/ipython/issues/8478#issuecomment-106013027",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8478",
    "id": 106013027,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNjAxMzAyNw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-27T17:55:27Z",
    "updated_at": "2015-05-27T17:55:27Z",
    "author_association": "MEMBER",
    "body": "if we enable it locally you get too many warning due to deprecation everywhere. Even on 3,4 you get loads of deprecation just because IPython  use `imp`\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/106016323",
    "html_url": "https://github.com/ipython/ipython/issues/8478#issuecomment-106016323",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8478",
    "id": 106016323,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNjAxNjMyMw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-27T18:06:36Z",
    "updated_at": "2015-05-27T18:06:36Z",
    "author_association": "MEMBER",
    "body": "But you should only be seeing warnings associated with `__main__`, right? So you shouldn't see all the warnings about our use of imp.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/106119371",
    "html_url": "https://github.com/ipython/ipython/issues/8478#issuecomment-106119371",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8478",
    "id": 106119371,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNjExOTM3MQ==",
    "user": {
      "login": "njsmith",
      "id": 609896,
      "node_id": "MDQ6VXNlcjYwOTg5Ng==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609896?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/njsmith",
      "html_url": "https://github.com/njsmith",
      "followers_url": "https://api.github.com/users/njsmith/followers",
      "following_url": "https://api.github.com/users/njsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/njsmith/orgs",
      "repos_url": "https://api.github.com/users/njsmith/repos",
      "events_url": "https://api.github.com/users/njsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/njsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-28T00:19:50Z",
    "updated_at": "2015-05-28T00:19:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "@takluyver: Right, the PR #8480 currently only shows warnings associated with `__main__`. But @minrk suggested that maybe we should show all deprecation warnings, even those not associated with `__main__`.\n\nIt is true that warnings are _very_ often attributed incorrectly. The default value for `stacklevel=` is always wrong, and in the special case whole-module deprecations it turns out that in Python 3 [it's not even possible to get right](https://bugs.python.org/issue24305) without some major shenanigans. Oops.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/106142082",
    "html_url": "https://github.com/ipython/ipython/issues/8478#issuecomment-106142082",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8478",
    "id": 106142082,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNjE0MjA4Mg==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-28T02:06:29Z",
    "updated_at": "2015-05-28T02:06:29Z",
    "author_association": "MEMBER",
    "body": "I guess most of our imports will happen before we set up the warning filters, so our imports shouldn't be seen. \n\nThough with #8480, even if I install a filter on everything, a user's `import imp` does not trigger a warning on stderr, probably cause the filter is added too late.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/107877135",
    "html_url": "https://github.com/ipython/ipython/issues/8478#issuecomment-107877135",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8478",
    "id": 107877135,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNzg3NzEzNQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-02T09:08:22Z",
    "updated_at": "2015-06-02T09:08:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "an after-merge + 1 \nThis is one of the reasons we use FutureWarning in pandas instead of DeprecationWarning (although this has of course the disadvantage of also giving warnings from library code you use ..)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/108029118",
    "html_url": "https://github.com/ipython/ipython/issues/8478#issuecomment-108029118",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8478",
    "id": 108029118,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwODAyOTExOA==",
    "user": {
      "login": "njsmith",
      "id": 609896,
      "node_id": "MDQ6VXNlcjYwOTg5Ng==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609896?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/njsmith",
      "html_url": "https://github.com/njsmith",
      "followers_url": "https://api.github.com/users/njsmith/followers",
      "following_url": "https://api.github.com/users/njsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/njsmith/orgs",
      "repos_url": "https://api.github.com/users/njsmith/repos",
      "events_url": "https://api.github.com/users/njsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/njsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-02T17:48:54Z",
    "updated_at": "2015-06-02T17:48:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche: note that for this to work properly, you also have to make sure the DeprecationWarnings are correctly attributed, which I've noticed that a lot of pandas's aren't. Basically any time you call `warnings.warn` but don't pass in `stacklevel=`, then that's a bug.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/108032498",
    "html_url": "https://github.com/ipython/ipython/issues/8478#issuecomment-108032498",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8478",
    "id": 108032498,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwODAzMjQ5OA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-02T17:57:03Z",
    "updated_at": "2015-06-02T17:57:03Z",
    "author_association": "MEMBER",
    "body": "Should we propose to make stacklevel a mandatory argument in CPython3.6\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/108034416",
    "html_url": "https://github.com/ipython/ipython/issues/8478#issuecomment-108034416",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8478",
    "id": 108034416,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwODAzNDQxNg==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-02T18:01:34Z",
    "updated_at": "2015-06-02T18:01:34Z",
    "author_association": "MEMBER",
    "body": "Make an optional argument compulsory _because_ lots of existing code isn't using it? That doesn't sound like a great idea.\n\nMaybe it should issue a warning if you don't pass stacklevel ;-)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/108034450",
    "html_url": "https://github.com/ipython/ipython/issues/8478#issuecomment-108034450",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8478",
    "id": 108034450,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwODAzNDQ1MA==",
    "user": {
      "login": "njsmith",
      "id": 609896,
      "node_id": "MDQ6VXNlcjYwOTg5Ng==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609896?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/njsmith",
      "html_url": "https://github.com/njsmith",
      "followers_url": "https://api.github.com/users/njsmith/followers",
      "following_url": "https://api.github.com/users/njsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/njsmith/orgs",
      "repos_url": "https://api.github.com/users/njsmith/repos",
      "events_url": "https://api.github.com/users/njsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/njsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-02T18:01:47Z",
    "updated_at": "2015-06-02T18:01:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "The backcompat issues are substantial, but you never know, might be worth a\ntry and see what people say. I probably wouldn't bring it up until a patch\nwas merged to cpython though, which could then be pointed to as motivation\nfor getting people to clean up their stacklevels.\nOn Jun 2, 2015 10:57 AM, \"Matthias Bussonnier\" notifications@github.com\nwrote:\n\n> Should we propose to make stacklevel a mandatory argument in CPython3.6\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/issues/8478#issuecomment-108032498.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/108035121",
    "html_url": "https://github.com/ipython/ipython/issues/8478#issuecomment-108035121",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8478",
    "id": 108035121,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwODAzNTEyMQ==",
    "user": {
      "login": "njsmith",
      "id": 609896,
      "node_id": "MDQ6VXNlcjYwOTg5Ng==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609896?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/njsmith",
      "html_url": "https://github.com/njsmith",
      "followers_url": "https://api.github.com/users/njsmith/followers",
      "following_url": "https://api.github.com/users/njsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/njsmith/orgs",
      "repos_url": "https://api.github.com/users/njsmith/repos",
      "events_url": "https://api.github.com/users/njsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/njsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-02T18:03:24Z",
    "updated_at": "2015-06-02T18:03:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "That does sound more likely to actually be merged :-).\nOn Jun 2, 2015 11:01 AM, \"Thomas Kluyver\" notifications@github.com wrote:\n\n> Make an optional argument compulsory _because_ lots of existing code\n> isn't using it? That doesn't sound like a great idea.\n> \n> Maybe it should issue a warning if you don't pass stacklevel ;-)\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/issues/8478#issuecomment-108034416.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/108039377",
    "html_url": "https://github.com/ipython/ipython/issues/8478#issuecomment-108039377",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8478",
    "id": 108039377,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwODAzOTM3Nw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-02T18:14:34Z",
    "updated_at": "2015-06-02T18:14:34Z",
    "author_association": "MEMBER",
    "body": "> The backcompat issues are substantial, but you never know, might be worth a\n> try and see what people say. I probably wouldn't bring it up until a patch\n> was merged to cpython though, which could then be pointed to as motivation\n> for getting people to clean up their stacklevels.\n\nI don't get this sentence. My brain is probably fried.\n\nIn which case a stacklevel of 1 is correct ? Is stacklevel of 2, The most usefull use value ? \nOr should we add a warning mode that do not raise, but actually print the full stacktrace so that you can manually inspect. \n\nThoughts ? \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/108042532",
    "html_url": "https://github.com/ipython/ipython/issues/8478#issuecomment-108042532",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8478",
    "id": 108042532,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwODA0MjUzMg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-02T18:21:50Z",
    "updated_at": "2015-06-02T18:21:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "@njsmith Yeah, I know you once posted a comment about that somewhere on a pandas issue, but never had the time to look at it. \nDo you know of some good explanations what the `stacklevel` argument exactly does? Because I don't find the docs (https://docs.python.org/2/library/warnings.html#warnings.warn) very helpful to grasp it fully. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/108050561",
    "html_url": "https://github.com/ipython/ipython/issues/8478#issuecomment-108050561",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8478",
    "id": 108050561,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwODA1MDU2MQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-02T18:44:51Z",
    "updated_at": "2015-06-02T18:44:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "@njsmith So actually it is probably rather simple: we need to use `stacklevel=2` everywhere, only in cases we have eg a helper function that does the deprecation call which is called in the deprecated function, you need to use `stacklevel=3`\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/108051452",
    "html_url": "https://github.com/ipython/ipython/issues/8478#issuecomment-108051452",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8478",
    "id": 108051452,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwODA1MTQ1Mg==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-02T18:47:38Z",
    "updated_at": "2015-06-02T18:47:38Z",
    "author_association": "MEMBER",
    "body": "yep, basically. Little more complicated for warning on \"import\", but that's a Python bug. And if you use decorators, in which case you need to take into account the wrapper of the decorator. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/108054260",
    "html_url": "https://github.com/ipython/ipython/issues/8478#issuecomment-108054260",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8478",
    "id": 108054260,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwODA1NDI2MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-02T18:54:55Z",
    "updated_at": "2015-06-02T18:57:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "yes, I was just testing the decorator case (we use this one: https://github.com/pydata/pandas/blob/master/pandas/util/decorators.py#L18), ~~but surprisingly it seems that there the default is ok, and I don't need to specify `stacklevel=2`, which I don't really understand~~ sorry tested wrongly. `stacklevel=2` works as well for the decorator case\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/108098300",
    "html_url": "https://github.com/ipython/ipython/issues/8478#issuecomment-108098300",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8478",
    "id": 108098300,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwODA5ODMwMA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-02T21:03:50Z",
    "updated_at": "2015-06-02T21:03:57Z",
    "author_association": "MEMBER",
    "body": "Yah I was thinking of\n\n```\n@dec \nfun():\n   warn(staclevel=probably(3))\n```\n"
  }
]
