[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10962832",
    "html_url": "https://github.com/ipython/ipython/pull/2643#issuecomment-10962832",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2643",
    "id": 10962832,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwOTYyODMy",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-03T17:34:55Z",
    "updated_at": "2012-12-03T17:34:55Z",
    "author_association": "MEMBER",
    "body": "The other kernels should be separate repos/projects under the ipython org.  I think we should try to make these \"packages\" in whatever language they are written.  So for the ruby kernel, we should be able to easily create a gem and install it like any other ruby package.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10970428",
    "html_url": "https://github.com/ipython/ipython/pull/2643#issuecomment-10970428",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2643",
    "id": 10970428,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwOTcwNDI4",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-03T20:36:50Z",
    "updated_at": "2012-12-03T20:36:50Z",
    "author_association": "MEMBER",
    "body": "So, we need to build a 'PopenKernelManager' I guess with a configurable command line....\n\nThis should handle pretty much every basic things that are not python...\nDo we make some kind of \"template\" for the command line ? Like  `%(cfile)` replaced by connexion file ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10989229",
    "html_url": "https://github.com/ipython/ipython/pull/2643#issuecomment-10989229",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2643",
    "id": 10989229,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwOTg5MjI5",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-04T09:11:41Z",
    "updated_at": "2012-12-04T09:11:41Z",
    "author_association": "MEMBER",
    "body": "does this look better ?\n\nI just have to add this in my config to run the ruby kernel :\n\n[.ipython/profile_ruby/ipython_notebook_config.py]\n\n```\nc = get_config()\n\nc.SubprocessKernelManager.kernel_launch_program = \n         ['/.../ruby','~/.../kernel.rb','{connexion_file_name}']\nc.MappingKernelManager.kernel_manager_class=\n         'IPython.zmq.subprocesskernel.SubprocessKernelManager'\n```\n\nand start notebook with `--profile=ruby`\n\nI think it should be able to run pretty much anything...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11354961",
    "html_url": "https://github.com/ipython/ipython/pull/2643#issuecomment-11354961",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2643",
    "id": 11354961,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMzU0OTYx",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-13T21:47:35Z",
    "updated_at": "2012-12-13T21:47:35Z",
    "author_association": "MEMBER",
    "body": "The existing kernel manager already starts a subprocess, and the launch command could already be customized (via passing launch).  For instance, the iruby project which you reference didn't need to touch IPython at all to work.  It seems this subclass just adds one configurable as an easier way to do what was already possible.  Why not just add this configurable to the base KernelManager class?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11355843",
    "html_url": "https://github.com/ipython/ipython/pull/2643#issuecomment-11355843",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2643",
    "id": 11355843,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMzU1ODQz",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-13T22:09:11Z",
    "updated_at": "2012-12-13T22:09:11Z",
    "author_association": "MEMBER",
    "body": "I didn't looked deep enough in kernelmanager and missed the configurability. \n\nAnd actually the [original iruby](https://github.com/isotope11/iruby) added another [kernel launcher](https://github.com/isotope11/ipython/blob/848c4b989e516177e70f7209226f9ee1773a19d5/IPython/zmq/rubykernel.py) to launch the ruby kernel.\n\nI'll try to see if I can do what you suggest.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11360072",
    "html_url": "https://github.com/ipython/ipython/pull/2643#issuecomment-11360072",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2643",
    "id": 11360072,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMzYwMDcy",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-14T00:19:10Z",
    "updated_at": "2012-12-14T00:19:10Z",
    "author_association": "MEMBER",
    "body": "> And actually the original iruby added another kernel launcher to launch the ruby kernel.\n\nYes, I wrote it :) - but the important thing is that IPython itself did not need to be modified - the kernel launch args were not configurable, but the launch function was, so it needed a subclass assigned via the KMClass configurable.  But that subclass is totally unnecessary if the launch command is configurable in the base class.  There is a benefit to adding the configurable to the base class rather than a subclass, because that also means it is inherited by other subclasses (Qt, Blocking, etc.).\n\nThe reason it isn't there is probably just that the base KM is not a Configurable, but that's just a historical artifact since it was written before the Config stuff - it absolutely should be a Configurable.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11375641",
    "html_url": "https://github.com/ipython/ipython/pull/2643#issuecomment-11375641",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2643",
    "id": 11375641,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMzc1NjQx",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-14T13:10:59Z",
    "updated_at": "2012-12-14T13:10:59Z",
    "author_association": "MEMBER",
    "body": "Question to @minrk, \n\nMaking `kernelmanager.launch_kernel` configurable will still have people be obliged to write their own launcher function in python to run a custom kernel, Am I wrong ?\n\nWould it make more sens to make `entry_point.base_launch_kernel` configurable, and/or to provide a way to have launching process so that you don't have to write any python ?\n\nThe reason would be that then, the different kernel wouldn't have to deal with writing/installing any python files/module.\n\nI might be missing something in the way this works though...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11392316",
    "html_url": "https://github.com/ipython/ipython/pull/2643#issuecomment-11392316",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2643",
    "id": 11392316,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMzkyMzE2",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-14T21:05:44Z",
    "updated_at": "2012-12-14T21:05:44Z",
    "author_association": "MEMBER",
    "body": "Ah, I forgot about the remnants still in entry_point.  That means a little bit more needs to change than I thought.\n\nBut no, don't make `launch_kernel` configurable, make the Popen list itself configurable,\nand make appropriate changes to base_launch_kernel to allow that.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11392693",
    "html_url": "https://github.com/ipython/ipython/pull/2643#issuecomment-11392693",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2643",
    "id": 11392693,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMzkyNjkz",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-14T21:18:19Z",
    "updated_at": "2012-12-14T21:18:19Z",
    "author_association": "MEMBER",
    "body": "a bit more:\n\nbase_launch_kernel does two things:\n1. turn some functional arguments into a Popen command\n2. add some wrapper stuff for pipes, etc.\n\nIt should be split so those are separate actions, and a custom Popen command skips the whole command assembly step.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12132084",
    "html_url": "https://github.com/ipython/ipython/pull/2643#issuecomment-12132084",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2643",
    "id": 12132084,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMTMyMDg0",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-11T05:06:03Z",
    "updated_at": "2013-01-11T05:06:03Z",
    "author_association": "MEMBER",
    "body": "I just had a look at the following modules in `IPython.zmq`:\n- `entry_point.py`\n- `ipkernel.py`\n- `kernelapp.py`\n- `kernelmanager.py`\n\nAt least from a first glance, they are all sort of a rats nest of functions and classes that call each other.  It is tempting to start refactoring this in a clean way, but I worry that it is actually quite subtle because of the different ways that kernels are used.  But I also remember that this code grew in a very organic way and hasn't been cleaned up since the beginning.  @minrk do you have a sense of why things are such a mess - is that needed?  Is part of this the complexity of IPython.parallel also using the same kernel?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12132356",
    "html_url": "https://github.com/ipython/ipython/pull/2643#issuecomment-12132356",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2643",
    "id": 12132356,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMTMyMzU2",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-11T05:26:04Z",
    "updated_at": "2013-01-11T05:26:04Z",
    "author_association": "MEMBER",
    "body": "- I think kernelmanager.py should be fairly well contained.  What's wrong with it? Maybe you want to split the channels into their own file?  I don't see any particular reason to do that.\n- entry_point shouldn't exist, as it's a vestige of the pre-Application way of launching things.  Almost all of it is gone now, with just two utility functions left.  They can go somewhere else, if there is a better name for it.  I never did move them, unlike the rest of its original contents which I did move various other more appropriate places, because I couldn't come up with a better one.\n- kernelapp and ipkernel are the way they are because there used to be two kinds of kernels - they should definitely be cleaned up, ipkernel especially.  Probably move IPKernelApp to its own ipkernelapp or add it to kernelapp.  And the extra launch functions at the bottom probably belong wherever the contents of entry_point end up.\n\nIt is totally appropriate to clean this up, but do note that `from IPython.zmq.ipkernel import IPKernelApp` is currently in use as a public API. Be aware of PR #2724, because it should probably result in a zmq-free bases of Kernel / KernelManager, from with the zmq ones will inherit.  Any attempt at cleanup will conflict severely with that work.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12132438",
    "html_url": "https://github.com/ipython/ipython/pull/2643#issuecomment-12132438",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2643",
    "id": 12132438,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMTMyNDM4",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-11T05:30:59Z",
    "updated_at": "2013-01-11T05:30:59Z",
    "author_association": "MEMBER",
    "body": "Forgot to mention: No, there shouldn't be anything related to IPython.parallel in the complexity here.  The last major step of merging the two kernels is to make IPEngineApp a minimal subclass of IPKernelApp.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12132674",
    "html_url": "https://github.com/ipython/ipython/pull/2643#issuecomment-12132674",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2643",
    "id": 12132674,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMTMyNjc0",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-11T05:48:17Z",
    "updated_at": "2013-01-11T05:48:17Z",
    "author_association": "MEMBER",
    "body": "Thanks Min that really helps.  I guess with #2724 I will just wait.  I can accomplish everything I need to with the current design, it is just a bit messy.\n- I think the only problem with `kernelmanager.py` is how the `launch_kernel` function is customized in a wonky way by passing a `launcher` kwarg to `start_kernel`.  It should probably be a configurable attribute.  I have thought about separating the channels into separate code, but that is a minor point.\n- I would separate the files into three clean ones: put the actual kernel implementation in one file, put the applications in another, and put the launching code in another.\n- Is there any need to have separate `KernelApp` and `IPKernelApp` classes.  It is not at all clear why the two are needed and it means that `IPKernelApp` has multiple inheritance.\n\nIn what way is `from IPython.zmq.ipkernel import IPKernelApp` a public API?  If it makes sense I would love to combine the two applications and put the result into its own file, to leave `ipkernel` with just the kernel.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12132833",
    "html_url": "https://github.com/ipython/ipython/pull/2643#issuecomment-12132833",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2643",
    "id": 12132833,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMTMyODMz",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-11T05:58:42Z",
    "updated_at": "2013-01-11T05:58:42Z",
    "author_association": "MEMBER",
    "body": "> In what way is from IPython.zmq.ipkernel import IPKernelApp a public API?\n\nIf you want to start a kernel and customize it in any way whatsoever, you must make this import.  It is equivalent to the embedded classes - `IPython.embed` is fine if you don't want to change anything, but you have to import the class itself to do any customization.  People are doing this (maybe not many).\n\n> I would separate the files into three clean ones: put the actual kernel implementation in one file, put the applications in another, and put the launching code in another.\n\nSensible\n\n> Is there any need to have separate KernelApp and IPKernelApp classes. It is not at all clear why the two are needed and it means that IPKernelApp has multiple inheritance.\n\nThe main reason was to separate IPython-shell-specific startup from just 'generic interpreter startup'.  Again, the reason being that we used to have a pure Python Kernel.  I think the main argument against merging them is that we may again, but that's not a particularly strong one.  I would maybe just put IPKernelApp as-is after KernelApp in zmq.kernelapp, but merging the two is fine as well.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12132919",
    "html_url": "https://github.com/ipython/ipython/pull/2643#issuecomment-12132919",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2643",
    "id": 12132919,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMTMyOTE5",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-11T06:04:11Z",
    "updated_at": "2013-01-11T06:04:11Z",
    "author_association": "MEMBER",
    "body": "OK great, I will try to help review #2724 and keep my eye on these things\nfor cleanup.\n\nOn Thu, Jan 10, 2013 at 9:58 PM, Min RK notifications@github.com wrote:\n\n> In what way is from IPython.zmq.ipkernel import IPKernelApp a public API?\n> \n> If you want to start a kernel and customize it in any way whatsoever, you\n> must make this import. It is equivalent to the embedded classes -\n> IPython.embed is fine if you don't want to change anything, but you have\n> to import the class itself to do any customization. People are doing this\n> (maybe not many).\n> \n> I would separate the files into three clean ones: put the actual kernel\n> implementation in one file, put the applications in another, and put the\n> launching code in another.\n> \n> Sensible\n> \n> Is there any need to have separate KernelApp and IPKernelApp classes. It\n> is not at all clear why the two are needed and it means that IPKernelApp\n> has multiple inheritance.\n> \n> The main reason was to separate IPython-shell-specific startup from just\n> 'generic interpreter startup'. Again, the reason being that we used to have\n> a pure Python Kernel. I think the main argument against merging them is\n> that we may again, but that's not a particularly strong one. I would maybe\n> just put IPKernelApp as-is after KernelApp in zmq.kernelapp, but merging\n> the two is fine as well.\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/2643#issuecomment-12132833.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12355719",
    "html_url": "https://github.com/ipython/ipython/pull/2643#issuecomment-12355719",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2643",
    "id": 12355719,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMzU1NzE5",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-17T06:05:46Z",
    "updated_at": "2013-01-17T06:05:46Z",
    "author_association": "MEMBER",
    "body": "I cleaned up the kernel manager code a lot in #2775 but didn't really change how the custom launcher is specified.  Bu tin either case, I don't think the approach in this branch is the way to do.  In the long run, I think we will want to build an additional argument into MultiKernelManager.start_kernel, namely, the name of the kernel to start:  ipython, ruby, etc.  This list should be where the configuration happens,  Each kernel name should be associated with the required launcher.  For now can we just get by with what we have until we really get to thinking about multi-kernel support an what that will look like?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12355928",
    "html_url": "https://github.com/ipython/ipython/pull/2643#issuecomment-12355928",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2643",
    "id": 12355928,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMzU1OTI4",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-17T06:18:43Z",
    "updated_at": "2013-01-17T06:18:43Z",
    "author_association": "MEMBER",
    "body": "@ellisonbg that approach doesn't get users anywhere without updates to IPython itself.  I think the point here is that we should have a configurable for launching custom kernels, either with\n\nA) a custom launch_kernel function, as a DottedObjectName\nor B) a custom Popen command-line list.\n\nNow, maybe this should be a _mapping_ by kernel-name, but in any case, we should expose the fact that the KernelManager as it already is can launch custom kernels.  It's just not exposed to config.\n\nIt should be straightforward to add one or both of these, particularly now that KernelManager itself is Configurable, as it always should have been.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12395806",
    "html_url": "https://github.com/ipython/ipython/pull/2643#issuecomment-12395806",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2643",
    "id": 12395806,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMzk1ODA2",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-17T22:40:16Z",
    "updated_at": "2013-01-17T22:40:16Z",
    "author_association": "MEMBER",
    "body": "I wasn't very clear in my description.  I agree that these things should\nabsolutely be a configurable attribute, not something that is merely passed\ninto the function in the wonky way that launcher currently is.  And I think\nthat somethink like the API you are proposing makes sense.  I just think we\nshould close _this_ PR and open an issue to have that discussion about what\nthis should look like.  I agree that the work shouldn't be too difficult,\nbut we also probably want to cleanup the entry_point/base_kernel_launcher\nmess.\n\nOn Wed, Jan 16, 2013 at 10:18 PM, Min RK notifications@github.com wrote:\n\n> @ellisonbg https://github.com/ellisonbg that approach doesn't get users\n> anywhere without updates to IPython itself. I think the point here is that\n> we should have a configurable for launching custom kernels, either with\n> \n> A) a custom launch_kernel function, as a DottedObjectName\n> or B) a custom Popen command-line list.\n> \n> Now, maybe this should be a _mapping_ by kernel-name, but in any case, we\n> should expose the fact that the KernelManager as it already is can launch\n> custom kernels. It's just not exposed to config.\n> \n> It should be straightforward to add one or both of these, particularly now\n> that KernelManager itself is Configurable, as it always should have been.\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/2643#issuecomment-12355928.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12543631",
    "html_url": "https://github.com/ipython/ipython/pull/2643#issuecomment-12543631",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2643",
    "id": 12543631,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNTQzNjMx",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-22T13:12:26Z",
    "updated_at": "2013-01-22T13:12:26Z",
    "author_association": "MEMBER",
    "body": "FYI, perl kernel : \nhttps://github.com/timo/iperl6kernel\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12619833",
    "html_url": "https://github.com/ipython/ipython/pull/2643#issuecomment-12619833",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2643",
    "id": 12619833,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjE5ODMz",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-23T20:14:13Z",
    "updated_at": "2013-01-23T20:14:13Z",
    "author_association": "MEMBER",
    "body": "@minrk and @Carreau I never heard back from you if we can close this PR and open an issue for the broader kernel launcher work.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12622293",
    "html_url": "https://github.com/ipython/ipython/pull/2643#issuecomment-12622293",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2643",
    "id": 12622293,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjIyMjkz",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-23T21:06:22Z",
    "updated_at": "2013-01-23T21:06:22Z",
    "author_association": "MEMBER",
    "body": "Actually you did, just not here.  I was going to submit a new PR with the changes discussed here (split base_launch_kernel into its two separate actions, and expose Popen command as KM config, avoiding the need for subclass), and suggest closing this when I submit that, rather than closing without having a replacement to point to.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12622411",
    "html_url": "https://github.com/ipython/ipython/pull/2643#issuecomment-12622411",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2643",
    "id": 12622411,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjIyNDEx",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-23T21:08:49Z",
    "updated_at": "2013-01-23T21:08:49Z",
    "author_association": "MEMBER",
    "body": "Hehe, if I actually were old I could make some joke about my memory going\nbad.  Just forgot...sorry for wasting your time...\n\nOn Wed, Jan 23, 2013 at 1:06 PM, Min RK notifications@github.com wrote:\n\n> Actually you did, just not here. I was going to submit a new PR with the\n> changes discussed here (split base_launch_kernel into its two separate\n> actions, and expose Popen command as KM config, avoiding the need for\n> subclass), and suggest closing this when I submit that, rather than closing\n> without having a replacement to point to.\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/2643#issuecomment-12622293.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12730960",
    "html_url": "https://github.com/ipython/ipython/pull/2643#issuecomment-12730960",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2643",
    "id": 12730960,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNzMwOTYw",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-26T04:37:49Z",
    "updated_at": "2013-01-26T04:37:49Z",
    "author_association": "MEMBER",
    "body": "replaced by #2854\n"
  }
]
