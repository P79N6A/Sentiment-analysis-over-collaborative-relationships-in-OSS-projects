[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/47423685",
    "html_url": "https://github.com/ipython/ipython/pull/6051#issuecomment-47423685",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6051",
    "id": 47423685,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDIzNjg1",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-28T10:14:46Z",
    "updated_at": "2014-06-28T10:14:46Z",
    "author_association": "MEMBER",
    "body": "I'm neutral on this one. \nI believe that a lot of variation of \"interact\" are usefull (different throttling, caching based on function parameters...) and it would be nice to user-test that in a separate library and eventually bring this in later if there is a real demand. It woudl also allow to use this 'on demand' interact on IPython 2.0 which would be nice.\n\nWhat do you think ? \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/47465822",
    "html_url": "https://github.com/ipython/ipython/pull/6051#issuecomment-47465822",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6051",
    "id": 47465822,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDY1ODIy",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-29T18:27:09Z",
    "updated_at": "2014-06-29T18:27:09Z",
    "author_association": "MEMBER",
    "body": "Overall I am +1 on this idea. The other way of handling it is to introduce an option on individual widgets that do delayed event triggering - mainly thinking of sliders triggering only on release.\n\nI haven't review the code yet, but I think we should review it to see if we can get it into a state we like.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/47465999",
    "html_url": "https://github.com/ipython/ipython/pull/6051#issuecomment-47465999",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6051",
    "id": 47465999,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDY1OTk5",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-29T18:29:40Z",
    "updated_at": "2014-06-29T18:29:40Z",
    "author_association": "MEMBER",
    "body": "The number of 'options' increases fast. I for example would like to throttle with a different number than 5. And every options to `@interact` shadow one possible keyword for the function it wraps. This need to be carefully designed.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/47474685",
    "html_url": "https://github.com/ipython/ipython/pull/6051#issuecomment-47474685",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6051",
    "id": 47474685,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDc0Njg1",
    "user": {
      "login": "ilonajulczuk",
      "id": 2233160,
      "node_id": "MDQ6VXNlcjIyMzMxNjA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2233160?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ilonajulczuk",
      "html_url": "https://github.com/ilonajulczuk",
      "followers_url": "https://api.github.com/users/ilonajulczuk/followers",
      "following_url": "https://api.github.com/users/ilonajulczuk/following{/other_user}",
      "gists_url": "https://api.github.com/users/ilonajulczuk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ilonajulczuk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ilonajulczuk/subscriptions",
      "organizations_url": "https://api.github.com/users/ilonajulczuk/orgs",
      "repos_url": "https://api.github.com/users/ilonajulczuk/repos",
      "events_url": "https://api.github.com/users/ilonajulczuk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ilonajulczuk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-29T20:58:37Z",
    "updated_at": "2014-06-29T20:58:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "That would be an extremely useful feature for me. I used interact for my thesis work for long running functions (numerical simulations with ~100k steps and more) and I missed this functionality. I used a slider a lot to change parameters and animation wasted a lot of time for evaluating function with parameters I wasn't actually interested in.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/47534255",
    "html_url": "https://github.com/ipython/ipython/pull/6051#issuecomment-47534255",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6051",
    "id": 47534255,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NTM0MjU1",
    "user": {
      "login": "chronitis",
      "id": 6874993,
      "node_id": "MDQ6VXNlcjY4NzQ5OTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/6874993?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chronitis",
      "html_url": "https://github.com/chronitis",
      "followers_url": "https://api.github.com/users/chronitis/followers",
      "following_url": "https://api.github.com/users/chronitis/following{/other_user}",
      "gists_url": "https://api.github.com/users/chronitis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chronitis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chronitis/subscriptions",
      "organizations_url": "https://api.github.com/users/chronitis/orgs",
      "repos_url": "https://api.github.com/users/chronitis/repos",
      "events_url": "https://api.github.com/users/chronitis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chronitis/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-30T13:57:51Z",
    "updated_at": "2014-06-30T13:57:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "As observed above, there are many more possibilities for controlling the flow of `interact()`. Conceivably I could have a go at trying to put together an interact function with more options as a library (_iipython_?), but that's a future project.\n\nI would think this nonetheless provides a simple, lowest-common denominator option for controlling execution, although whether the keyword (`on_demand`) is the best option I'm not sure. (`explicit`? `manual`? `on_request`? `on_trigger`?, ...)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/47549291",
    "html_url": "https://github.com/ipython/ipython/pull/6051#issuecomment-47549291",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6051",
    "id": 47549291,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NTQ5Mjkx",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-30T15:54:08Z",
    "updated_at": "2014-06-30T15:54:08Z",
    "author_association": "MEMBER",
    "body": "I really do think this particular option is important enough to have in\nIPython's `interact` itself. For really long running computations,\n`interact` is currently unusable and this option solves that problem\nentirely. I am not thrilled about the name `on_demand` though as all the\nmarketing around that phrase makes me think \"fast\" which is the opposite of\nthe options effect.\n\nOn Mon, Jun 30, 2014 at 6:57 AM, Gordon Ball notifications@github.com\nwrote:\n\n> As observed above, there are many more possibilities for controlling the\n> flow of interact(). Conceivably I could have a go at trying to put\n> together an interact function with more options as a library (_iipython_?),\n> but that's a future project.\n> \n> I would think this nonetheless provides a simple, lowest-common\n> denominator option for controlling execution, although whether the keyword (\n> on_demand) is the best option I'm not sure. (explicit? manual? on_request?\n> on_trigger?, ...)\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/pull/6051#issuecomment-47534255.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\n@ellisonbg on Twitter and GitHub\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/47550616",
    "html_url": "https://github.com/ipython/ipython/pull/6051#issuecomment-47550616",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6051",
    "id": 47550616,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NTUwNjE2",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-30T16:04:49Z",
    "updated_at": "2014-06-30T16:04:49Z",
    "author_association": "MEMBER",
    "body": "Maybe it should be a separate function, called something like\nchoose_params? To my mind, interact implies the current behaviour of\nrecomputing live on each change.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/47552476",
    "html_url": "https://github.com/ipython/ipython/pull/6051#issuecomment-47552476",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6051",
    "id": 47552476,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NTUyNDc2",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-30T16:20:40Z",
    "updated_at": "2014-06-30T16:20:40Z",
    "author_association": "MEMBER",
    "body": "The way that I talk about interact is this: it allows a user to _interact_\nwith a function by automatically creating a user interface for the\narguments of the function that are linked to the calling of the function.\n A button that you click to call the function is another such UI element. I\nagree it changes the semantics of when the function is called, but for long\nrunning code, I think the current one is completely broken. This is almost\na bug fix for `interact`.\n\nThe only reason I see to break this out into a separate function is if this\nadditional mode of operation can't easily be handled by static widgets.\n@jdfreder any thoughts on how static widgets would work with `on_demand`?\n\nOn Mon, Jun 30, 2014 at 9:04 AM, Thomas Kluyver notifications@github.com\nwrote:\n\n> Maybe it should be a separate function, called something like\n> choose_params? To my mind, interact implies the current behaviour of\n> recomputing live on each change.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/pull/6051#issuecomment-47550616.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\n@ellisonbg on Twitter and GitHub\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/47554065",
    "html_url": "https://github.com/ipython/ipython/pull/6051#issuecomment-47554065",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6051",
    "id": 47554065,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NTU0MDY1",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-30T16:34:14Z",
    "updated_at": "2014-06-30T16:34:14Z",
    "author_association": "MEMBER",
    "body": "Here's what we've done in Sage.  Initially, we had a magic parameter \"auto_update=False\" that would put an update button down at the bottom and update the interact only when the button was pushed (using the current values of the controls).  Later, when we rewrote interacts, we introduced an UpdateButton control.  The UpdateButton control took a list of other controls (defaulting to all controls), and disabled automatic updates on those controls.  The UpdateButton was a separate widget just like any other widget.  That way, you could still have some controls that automatically updated the interact, and you had explicit control over the update button as a separate widget, and you could control what that update button controlled.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/47568558",
    "html_url": "https://github.com/ipython/ipython/pull/6051#issuecomment-47568558",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6051",
    "id": 47568558,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NTY4NTU4",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-30T18:34:14Z",
    "updated_at": "2014-06-30T18:34:14Z",
    "author_association": "MEMBER",
    "body": "> The only reason I see to break this out into a separate function is if this\n> additional mode of operation can't easily be handled by static widgets.\n> @jdfreder any thoughts on how static widgets would work with `on_demand`?\n\nFor the simple persistence, it will just work.  For the outer product / compiled output, the brute forcing algorithm will need to be aware of the button.  I'm thinking we could just add a method to the brute forcer to register such buttons (i.e. `register_update_button`).  The button(s) would be triggered each frame and could be excluded or greyed in the end product.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/47569643",
    "html_url": "https://github.com/ipython/ipython/pull/6051#issuecomment-47569643",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6051",
    "id": 47569643,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NTY5NjQz",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-30T18:42:47Z",
    "updated_at": "2014-06-30T18:42:47Z",
    "author_association": "MEMBER",
    "body": "What if the brute forcer was aware of the underlying function? i.e. instead of actually interacting with the widgets and traitlets, it just used them to calculate the set of possible parameters, and then called the function directly, something like this:\n\n``` python\nfor params in itertools.product(parampossibilities):\n    with capture_output() as cap:\n        f(*params)  # Obviously simplified - this would need to handle keyword arguments\n```\n\nThis would mean that it's only practical with the interact mechanism, but I think that's the main place it really makes sense anyway - you can't brute force something like the turtle widget. And it seems like it would be quite a bit easier to implement.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/47569709",
    "html_url": "https://github.com/ipython/ipython/pull/6051#issuecomment-47569709",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6051",
    "id": 47569709,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NTY5NzA5",
    "user": {
      "login": "chronitis",
      "id": 6874993,
      "node_id": "MDQ6VXNlcjY4NzQ5OTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/6874993?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chronitis",
      "html_url": "https://github.com/chronitis",
      "followers_url": "https://api.github.com/users/chronitis/followers",
      "following_url": "https://api.github.com/users/chronitis/following{/other_user}",
      "gists_url": "https://api.github.com/users/chronitis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chronitis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chronitis/subscriptions",
      "organizations_url": "https://api.github.com/users/chronitis/orgs",
      "repos_url": "https://api.github.com/users/chronitis/repos",
      "events_url": "https://api.github.com/users/chronitis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chronitis/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-30T18:43:18Z",
    "updated_at": "2014-06-30T18:43:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "Another possible option would be to have a classed positional argument (perhaps a bit R-like?)\n\n```\ninteract(f, InteractOptions(on_demand=True, ...),\n         param1=...)\n```\n\nwhich avoids shadowing any parameter names, and lets you easily add any further options in future.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/47596970",
    "html_url": "https://github.com/ipython/ipython/pull/6051#issuecomment-47596970",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6051",
    "id": 47596970,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NTk2OTcw",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-30T22:44:12Z",
    "updated_at": "2014-06-30T22:44:12Z",
    "author_association": "MEMBER",
    "body": "as for shadowing, it would also make sense to relegate the function parameters to their own namespace: `interact(f, args=dict(param1=..., param2=..., param3=...))`, and then the interact parameters really are parameters to the interact function.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/51372596",
    "html_url": "https://github.com/ipython/ipython/pull/6051#issuecomment-51372596",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6051",
    "id": 51372596,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzcyNTk2",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-06T18:02:08Z",
    "updated_at": "2014-08-06T18:02:37Z",
    "author_association": "MEMBER",
    "body": "Questions for @all, is the direction in this PR the one we want to go with?  Or would we prefer to have a separate method other than interact to make this work?  If we prefer to implement this as a separate interact function, i.e. `on_demand(...)`, is it worth recycling this PR or should this be closed?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/51543054",
    "html_url": "https://github.com/ipython/ipython/pull/6051#issuecomment-51543054",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6051",
    "id": 51543054,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTQzMDU0",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-07T22:50:08Z",
    "updated_at": "2014-08-07T22:50:08Z",
    "author_association": "MEMBER",
    "body": "We discussed this in the dev meeting, and decided that we'd rather do this as a separate function, instead of an option to interact() - the way we think about interact is specifically the current 'interactive' behaviour: change things and watch the output update live. Of course, if we need to refactor some code to scan function parameters and generate widgets, we should do that to minimise duplication.\n\nWhat should the new function be called? I don't much like `on_demand()` - that implies a pull model, whereas this is really a push model. I think I suggested `choose_parameters` before, as in 'choose the parameters of this function, and then run it when I say'.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/53391567",
    "html_url": "https://github.com/ipython/ipython/pull/6051#issuecomment-53391567",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6051",
    "id": 53391567,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMzkxNTY3",
    "user": {
      "login": "chronitis",
      "id": 6874993,
      "node_id": "MDQ6VXNlcjY4NzQ5OTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/6874993?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chronitis",
      "html_url": "https://github.com/chronitis",
      "followers_url": "https://api.github.com/users/chronitis/followers",
      "following_url": "https://api.github.com/users/chronitis/following{/other_user}",
      "gists_url": "https://api.github.com/users/chronitis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chronitis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chronitis/subscriptions",
      "organizations_url": "https://api.github.com/users/chronitis/orgs",
      "repos_url": "https://api.github.com/users/chronitis/repos",
      "events_url": "https://api.github.com/users/chronitis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chronitis/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-26T08:45:13Z",
    "updated_at": "2014-08-26T08:45:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sorry, I'd forgotten about this one.\n\nI have changed the behaviour so that instead of accepting an `on_demand` kwarg to `interact()`, a new function is added: `interact_choose()`. This is otherwise identical to `interact()`, but implicitly uses the `on_demand` behaviour rather than requiring it as an option.\n\nI used `interact_choose` as a compromise because I think it is probably still useful for it to be obviously similar to the `interact()` function (and to come up as an autocomplete option).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56081214",
    "html_url": "https://github.com/ipython/ipython/pull/6051#issuecomment-56081214",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6051",
    "id": 56081214,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDgxMjE0",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-18T18:25:00Z",
    "updated_at": "2014-09-18T18:25:00Z",
    "author_association": "MEMBER",
    "body": "I can get behind calling it 'interact something', but `interact_choose()` doesn't seem to describe what it is very well. `interact_not_live`? :-P\n\nLet's keep thinking about the name.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56090981",
    "html_url": "https://github.com/ipython/ipython/pull/6051#issuecomment-56090981",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6051",
    "id": 56090981,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDkwOTgx",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-18T19:39:47Z",
    "updated_at": "2014-09-18T19:39:47Z",
    "author_association": "MEMBER",
    "body": "`not_interactive` or `interact_not_really` ;)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56296539",
    "html_url": "https://github.com/ipython/ipython/pull/6051#issuecomment-56296539",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6051",
    "id": 56296539,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2Mjk2NTM5",
    "user": {
      "login": "chronitis",
      "id": 6874993,
      "node_id": "MDQ6VXNlcjY4NzQ5OTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/6874993?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chronitis",
      "html_url": "https://github.com/chronitis",
      "followers_url": "https://api.github.com/users/chronitis/followers",
      "following_url": "https://api.github.com/users/chronitis/following{/other_user}",
      "gists_url": "https://api.github.com/users/chronitis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chronitis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chronitis/subscriptions",
      "organizations_url": "https://api.github.com/users/chronitis/orgs",
      "repos_url": "https://api.github.com/users/chronitis/repos",
      "events_url": "https://api.github.com/users/chronitis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chronitis/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-21T11:52:13Z",
    "updated_at": "2014-09-21T11:52:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "- `interact_selective`?\n- `interact_manual`?\n- `interact_on_request`?\n- `interact_noauto`?\n- `interact_$(shuf -n1 /usr/share/dict/words)`?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56307313",
    "html_url": "https://github.com/ipython/ipython/pull/6051#issuecomment-56307313",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6051",
    "id": 56307313,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MzA3MzEz",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-21T18:13:25Z",
    "updated_at": "2014-09-21T18:13:25Z",
    "author_association": "MEMBER",
    "body": "`interact_manual` is the clearest so far, IMO. I'm tagging this 'Needs decision' to bring it up with more people tomorrow.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56406334",
    "html_url": "https://github.com/ipython/ipython/pull/6051#issuecomment-56406334",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6051",
    "id": 56406334,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NDA2MzM0",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-22T17:12:57Z",
    "updated_at": "2014-09-22T17:13:06Z",
    "author_association": "MEMBER",
    "body": "+several for `interact_manual` from decision meeting\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56406358",
    "html_url": "https://github.com/ipython/ipython/pull/6051#issuecomment-56406358",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6051",
    "id": 56406358,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NDA2MzU4",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-22T17:13:06Z",
    "updated_at": "2014-09-22T17:13:06Z",
    "author_association": "MEMBER",
    "body": "`interact_manual`. Decision made.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56406366",
    "html_url": "https://github.com/ipython/ipython/pull/6051#issuecomment-56406366",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6051",
    "id": 56406366,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NDA2MzY2",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-22T17:13:09Z",
    "updated_at": "2014-09-22T17:13:09Z",
    "author_association": "MEMBER",
    "body": "We have decided to go with `interact_manual` \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56406399",
    "html_url": "https://github.com/ipython/ipython/pull/6051#issuecomment-56406399",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6051",
    "id": 56406399,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NDA2Mzk5",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-22T17:13:25Z",
    "updated_at": "2014-09-22T17:13:25Z",
    "author_association": "MEMBER",
    "body": "Needs final review.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56538043",
    "html_url": "https://github.com/ipython/ipython/pull/6051#issuecomment-56538043",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6051",
    "id": 56538043,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTM4MDQz",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-23T15:28:22Z",
    "updated_at": "2014-09-23T15:28:22Z",
    "author_association": "MEMBER",
    "body": "Don't forget to ping when you do some changes as we don't get notified by user. \n\nOne minor optional point that can be done separately and does not block the merge : do you want to drop a line into `docs/source/whatsnew/pr/` so that this is listed in the releases notes ? \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56538221",
    "html_url": "https://github.com/ipython/ipython/pull/6051#issuecomment-56538221",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6051",
    "id": 56538221,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTM4MjIx",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-23T15:29:25Z",
    "updated_at": "2014-09-23T15:29:25Z",
    "author_association": "MEMBER",
    "body": "Marked as `ready to merge`, will merge in a day or so if no other comments, unless someone else come along. \n\nThanks !\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56539057",
    "html_url": "https://github.com/ipython/ipython/pull/6051#issuecomment-56539057",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6051",
    "id": 56539057,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTM5MDU3",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-23T15:34:18Z",
    "updated_at": "2014-09-23T15:34:18Z",
    "author_association": "MEMBER",
    "body": "I gave it a look over, :+1: from me\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56571358",
    "html_url": "https://github.com/ipython/ipython/pull/6051#issuecomment-56571358",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6051",
    "id": 56571358,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTcxMzU4",
    "user": {
      "login": "chronitis",
      "id": 6874993,
      "node_id": "MDQ6VXNlcjY4NzQ5OTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/6874993?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chronitis",
      "html_url": "https://github.com/chronitis",
      "followers_url": "https://api.github.com/users/chronitis/followers",
      "following_url": "https://api.github.com/users/chronitis/following{/other_user}",
      "gists_url": "https://api.github.com/users/chronitis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chronitis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chronitis/subscriptions",
      "organizations_url": "https://api.github.com/users/chronitis/orgs",
      "repos_url": "https://api.github.com/users/chronitis/repos",
      "events_url": "https://api.github.com/users/chronitis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chronitis/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-23T18:57:35Z",
    "updated_at": "2014-09-23T18:57:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think the test failure is unrelated. (Passed with 876158e and then failed with 80a6dc6, which only adds an `rst` file).\n\n```\npython 3.4 group=js\nIPython/html/tests/widgets/widget_string.js\nPage Error!\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56572134",
    "html_url": "https://github.com/ipython/ipython/pull/6051#issuecomment-56572134",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6051",
    "id": 56572134,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTcyMTM0",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-23T19:02:25Z",
    "updated_at": "2014-09-23T19:02:33Z",
    "author_association": "MEMBER",
    "body": "> I think the test failure is unrelated\n\nProbably, I just relaunched Travis.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56575566",
    "html_url": "https://github.com/ipython/ipython/pull/6051#issuecomment-56575566",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6051",
    "id": 56575566,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTc1NTY2",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-23T19:26:09Z",
    "updated_at": "2014-09-23T19:26:09Z",
    "author_association": "MEMBER",
    "body": "Looks like it passed\n"
  }
]
