[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/75566058",
    "html_url": "https://github.com/ipython/ipython/issues/3165#issuecomment-75566058",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3165",
    "id": 75566058,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NTY2MDU4",
    "user": {
      "login": "d33tah",
      "id": 295322,
      "node_id": "MDQ6VXNlcjI5NTMyMg==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/295322?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/d33tah",
      "html_url": "https://github.com/d33tah",
      "followers_url": "https://api.github.com/users/d33tah/followers",
      "following_url": "https://api.github.com/users/d33tah/following{/other_user}",
      "gists_url": "https://api.github.com/users/d33tah/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/d33tah/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/d33tah/subscriptions",
      "organizations_url": "https://api.github.com/users/d33tah/orgs",
      "repos_url": "https://api.github.com/users/d33tah/repos",
      "events_url": "https://api.github.com/users/d33tah/events{/privacy}",
      "received_events_url": "https://api.github.com/users/d33tah/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-23T15:36:05Z",
    "updated_at": "2015-02-23T15:36:05Z",
    "author_association": "NONE",
    "body": "Agreed. I could benefit from this functionality as well.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/75583953",
    "html_url": "https://github.com/ipython/ipython/issues/3165#issuecomment-75583953",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3165",
    "id": 75583953,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NTgzOTUz",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-23T17:03:33Z",
    "updated_at": "2015-02-23T17:03:33Z",
    "author_association": "MEMBER",
    "body": "I would ask [here](https://github.com/ipython-contrib/IPython-notebook-extensions) it's a perfect case for an extension. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/75584281",
    "html_url": "https://github.com/ipython/ipython/issues/3165#issuecomment-75584281",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3165",
    "id": 75584281,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NTg0Mjgx",
    "user": {
      "login": "d33tah",
      "id": 295322,
      "node_id": "MDQ6VXNlcjI5NTMyMg==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/295322?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/d33tah",
      "html_url": "https://github.com/d33tah",
      "followers_url": "https://api.github.com/users/d33tah/followers",
      "following_url": "https://api.github.com/users/d33tah/following{/other_user}",
      "gists_url": "https://api.github.com/users/d33tah/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/d33tah/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/d33tah/subscriptions",
      "organizations_url": "https://api.github.com/users/d33tah/orgs",
      "repos_url": "https://api.github.com/users/d33tah/repos",
      "events_url": "https://api.github.com/users/d33tah/events{/privacy}",
      "received_events_url": "https://api.github.com/users/d33tah/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-23T17:04:51Z",
    "updated_at": "2015-02-23T17:04:51Z",
    "author_association": "NONE",
    "body": "@Carreau: do you mean creating a new issue in this repo?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/75586041",
    "html_url": "https://github.com/ipython/ipython/issues/3165#issuecomment-75586041",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3165",
    "id": 75586041,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NTg2MDQx",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-23T17:11:33Z",
    "updated_at": "2015-02-23T17:11:33Z",
    "author_association": "MEMBER",
    "body": "You can, or you can even try to implement it and make a PR. \nFor sure it will be accepted there much more easily than here. \n\nI might even respond to you on IPython-contrib, even though Damian and Jurgen are much more active than me on extensions. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/77902753",
    "html_url": "https://github.com/ipython/ipython/issues/3165#issuecomment-77902753",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3165",
    "id": 77902753,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3OTAyNzUz",
    "user": {
      "login": "HyperionAnalytics",
      "id": 5280678,
      "node_id": "MDQ6VXNlcjUyODA2Nzg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5280678?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/HyperionAnalytics",
      "html_url": "https://github.com/HyperionAnalytics",
      "followers_url": "https://api.github.com/users/HyperionAnalytics/followers",
      "following_url": "https://api.github.com/users/HyperionAnalytics/following{/other_user}",
      "gists_url": "https://api.github.com/users/HyperionAnalytics/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/HyperionAnalytics/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/HyperionAnalytics/subscriptions",
      "organizations_url": "https://api.github.com/users/HyperionAnalytics/orgs",
      "repos_url": "https://api.github.com/users/HyperionAnalytics/repos",
      "events_url": "https://api.github.com/users/HyperionAnalytics/events{/privacy}",
      "received_events_url": "https://api.github.com/users/HyperionAnalytics/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-09T17:35:27Z",
    "updated_at": "2015-03-10T13:23:44Z",
    "author_association": "NONE",
    "body": "Found solution! Works in Jupyter and IPython notebook. Ruler shows up only when in edit mode, now.\n- In `~/.ipython/profile_default/custom.js`\n\n``` javascript\n$([IPython.events]).on('command_mode.Cell', function (event, data) {\n\n      function clearRulers(cm) {\n        for (var i = cm.display.lineSpace.childNodes.length - 1; i >= 0; i--) {\n          var node = cm.display.lineSpace.childNodes[i];\n          if (/(^|\\s)CodeMirror-ruler($|\\s)/.test(node.className))\n            node.parentNode.removeChild(node);\n        }\n      }\n\n      selected_cell = IPython.notebook.get_selected_cell();\n        if ((selected_cell instanceof IPython.CodeCell)) {\n            var cm = selected_cell.code_mirror;\n            clearRulers(cm);\n        }\n\n});\n\n$([IPython.events]).on('edit_mode.Cell', function (event, data) {\n\n    function setRulers(cm) {\n        var val = cm.getOption(\"rulers\");\n        var cw = cm.defaultCharWidth();\n        var left = cm.charCoords(CodeMirror.Pos(cm.firstLine(), 0), \"div\").left;\n        var minH = cm.display.scroller.offsetHeight + 30;\n        for (var i = 0; i < val.length; i++) {\n          var elt = document.createElement(\"div\");\n          elt.className = \"CodeMirror-ruler\";\n          var col, cls = null, conf = val[i];\n          if (typeof conf == \"number\") {\n            col = conf;\n          } else {\n            col = conf.column;\n            if (conf.className) elt.className += \" \" + conf.className;\n            if (conf.color) elt.style.borderColor = conf.color;\n            if (conf.lineStyle) elt.style.borderLeftStyle = conf.lineStyle;\n            if (conf.width) elt.style.borderLeftWidth = conf.width;\n            cls = val[i].className;\n          }\n          elt.style.left = (left + col * cw) + \"px\";\n          elt.style.top = \"-60px\";\n          elt.style.bottom = \"-20px\";\n          elt.style.minHeight = minH + \"px\";\n          cm.display.lineSpace.insertBefore(elt, cm.display.cursorDiv);\n        }\n      }\n\n    var ruler = [{column: 79}];\n\n    selected_cell = IPython.notebook.get_selected_cell();\n    if ((selected_cell instanceof IPython.CodeCell)) {\n        var cm = selected_cell.code_mirror;\n        cm.setOption('rulers', ruler);\n        setRulers(cm);\n    }\n});\n```\n- In `~/.ipython/profile_default/custom.css`\n\n``` css\n.CodeMirror-ruler {border-left: 1px solid #cccccc;} /* Custom ruler styling */\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/315144468",
    "html_url": "https://github.com/ipython/ipython/issues/3165#issuecomment-315144468",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3165",
    "id": 315144468,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTE0NDQ2OA==",
    "user": {
      "login": "jpeacock29",
      "id": 6829540,
      "node_id": "MDQ6VXNlcjY4Mjk1NDA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/6829540?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jpeacock29",
      "html_url": "https://github.com/jpeacock29",
      "followers_url": "https://api.github.com/users/jpeacock29/followers",
      "following_url": "https://api.github.com/users/jpeacock29/following{/other_user}",
      "gists_url": "https://api.github.com/users/jpeacock29/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jpeacock29/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jpeacock29/subscriptions",
      "organizations_url": "https://api.github.com/users/jpeacock29/orgs",
      "repos_url": "https://api.github.com/users/jpeacock29/repos",
      "events_url": "https://api.github.com/users/jpeacock29/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jpeacock29/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-13T17:19:19Z",
    "updated_at": "2017-07-13T17:19:19Z",
    "author_association": "NONE",
    "body": "This extension now exists in [jupyter_contrib_nbextensions](https://github.com/ipython-contrib/jupyter_contrib_nbextensions) as the [Ruler](https://github.com/ipython-contrib/jupyter_contrib_nbextensions/tree/master/src/jupyter_contrib_nbextensions/nbextensions/ruler) extension."
  }
]
