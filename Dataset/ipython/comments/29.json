[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/236121",
    "html_url": "https://github.com/ipython/ipython/issues/29#issuecomment-236121",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/29",
    "id": 236121,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjEyMQ==",
    "user": {
      "login": "ipython",
      "id": 230453,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjIzMDQ1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/230453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ipython",
      "html_url": "https://github.com/ipython",
      "followers_url": "https://api.github.com/users/ipython/followers",
      "following_url": "https://api.github.com/users/ipython/following{/other_user}",
      "gists_url": "https://api.github.com/users/ipython/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ipython/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ipython/subscriptions",
      "organizations_url": "https://api.github.com/users/ipython/orgs",
      "repos_url": "https://api.github.com/users/ipython/repos",
      "events_url": "https://api.github.com/users/ipython/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ipython/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2010-05-10T09:29:39Z",
    "updated_at": "2010-05-10T09:29:39Z",
    "author_association": "COLLABORATOR",
    "body": "[ LP comment 1 by: avdd, on 2009-07-16 03:48:57.797382+00:00 ]\n\nHas nothing to do with pickle, but the FakeModule that is registered as **main**:\n\n$ python\nPython 2.5.2 (r252:60911, Oct  5 2008, 19:24:49) \n[GCC 4.3.2] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n\n> > > import sys\n> > > sys.modules[**name**].foo = 1\n> > > foo\n> > > 1\n\na$ ipython\n\nIn [1]: import sys\n\nIn [2]: sys.modules[**name**].foo = 1\n\n## In [3]: foo\n\nNameError                                 Traceback (most recent call last)\n\n/home/avdd/<ipython console> in <module>()\n\nNameError: name 'foo' is not defined\n\nIn [4]: \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/236122",
    "html_url": "https://github.com/ipython/ipython/issues/29#issuecomment-236122",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/29",
    "id": 236122,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjEyMg==",
    "user": {
      "login": "ipython",
      "id": 230453,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjIzMDQ1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/230453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ipython",
      "html_url": "https://github.com/ipython",
      "followers_url": "https://api.github.com/users/ipython/followers",
      "following_url": "https://api.github.com/users/ipython/following{/other_user}",
      "gists_url": "https://api.github.com/users/ipython/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ipython/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ipython/subscriptions",
      "organizations_url": "https://api.github.com/users/ipython/orgs",
      "repos_url": "https://api.github.com/users/ipython/repos",
      "events_url": "https://api.github.com/users/ipython/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ipython/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2010-05-10T09:29:40Z",
    "updated_at": "2010-05-10T09:29:40Z",
    "author_association": "COLLABORATOR",
    "body": "[ LP comment 2 by: Matt Hickford, on 2009-07-18 19:36:43.821085+00:00 ]\n\nI have problem that neither pickle nor cPickle work in ipython (but work in python proper).\n\nIn my case pickle.dump works but pickle.\n\nThis is Jaunty, Python 2.6\n\nMy error:\nAttributeError: 'FakeModule' object has no attribute 'Dictionary'\n\n(I have a custom class inherited from list called Dictionary)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/236123",
    "html_url": "https://github.com/ipython/ipython/issues/29#issuecomment-236123",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/29",
    "id": 236123,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjEyMw==",
    "user": {
      "login": "ipython",
      "id": 230453,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjIzMDQ1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/230453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ipython",
      "html_url": "https://github.com/ipython",
      "followers_url": "https://api.github.com/users/ipython/followers",
      "following_url": "https://api.github.com/users/ipython/following{/other_user}",
      "gists_url": "https://api.github.com/users/ipython/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ipython/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ipython/subscriptions",
      "organizations_url": "https://api.github.com/users/ipython/orgs",
      "repos_url": "https://api.github.com/users/ipython/repos",
      "events_url": "https://api.github.com/users/ipython/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ipython/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2010-05-10T09:29:41Z",
    "updated_at": "2010-05-10T09:29:41Z",
    "author_association": "COLLABORATOR",
    "body": "[ LP comment 3 by: Ville M. Vainio, on 2009-07-18 20:11:20+00:00 ]\n\nOn Sat, Jul 18, 2009 at 10:36 PM, Matt\nHickford<matt.hickford+launchpad@gmail.com> wrote:\n\n> I have problem that neither pickle nor cPickle work in ipython (but work\n> in python proper).\n> \n> In my case pickle.dump works but pickle.\n\nI think you'll note that pickle works when the class of the pickleable\nobject is not declared interactively, but rather imported from module.\n\n## \n\nVille M. Vainio\nhttp://tinyurl.com/vainio\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/236124",
    "html_url": "https://github.com/ipython/ipython/issues/29#issuecomment-236124",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/29",
    "id": 236124,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjEyNA==",
    "user": {
      "login": "ipython",
      "id": 230453,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjIzMDQ1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/230453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ipython",
      "html_url": "https://github.com/ipython",
      "followers_url": "https://api.github.com/users/ipython/followers",
      "following_url": "https://api.github.com/users/ipython/following{/other_user}",
      "gists_url": "https://api.github.com/users/ipython/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ipython/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ipython/subscriptions",
      "organizations_url": "https://api.github.com/users/ipython/orgs",
      "repos_url": "https://api.github.com/users/ipython/repos",
      "events_url": "https://api.github.com/users/ipython/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ipython/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2010-05-10T09:29:42Z",
    "updated_at": "2010-05-10T09:29:42Z",
    "author_association": "COLLABORATOR",
    "body": "[ LP comment 4 by: reckoner, on 2009-07-19 23:50:39+00:00 ]\n\nIf you get the class using the %run magic instead of importing, you DO\nget the pickle failure. I don't know if doing %run is the same as\ndefining a class interactively, though.\n\nAny guidance appreciated.\n\nthanks.\n\nOn Sat, Jul 18, 2009 at 1:11 PM, Ville M. Vainiovivainio@gmail.com wrote:\n\n> On Sat, Jul 18, 2009 at 10:36 PM, Matt\n> Hickford<matt.hickford+launchpad@gmail.com> wrote:\n> \n> > I have problem that neither pickle nor cPickle work in ipython (but work\n> > in python proper).\n> > \n> > In my case pickle.dump works but pickle.\n> \n> I think you'll note that pickle works when the class of the pickleable\n> object is not declared interactively, but rather imported from module.\n> \n> ## \n> \n> Ville M. Vainio\n> http://tinyurl.com/vainio\n> \n> ## \n> \n> cPickle works in standard interpreter, but not in IPython\n> https://bugs.launchpad.net/bugs/363115\n> You received this bug notification because you are a direct subscriber\n> of the bug.\n> \n> Status in IPython - Enhanced Interactive Python: Confirmed\n> \n> Bug description:\n> \n> for example:\n> \n> In IPython:\n> \n> > > class Mylist(list):\n> > >       def **init**(self,x=[]):\n> > >           list.**init**(self,x)\n> > > \n> > > from cPickle import dumps\n> > > w=Mylist([1,2,3])\n> > > dumps(w)\n> \n> PicklingError: Can't pickle <class '__main__.Mylist'>: attribute\n> lookup **main**.Mylist failed\n> \n> However, using the standard Python interpreter:\n> \n> Python 2.5.2 (r252:60911, Feb 21 2008, 13:11:45) [MSC v.1310 32 bit (Intel)] on\n> win32\n> Type \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n> \n> > > > from cPickle import dumps\n> > > > class Mylist(list):\n> > > > ...         def **init**(self,x=[]):\n> > > > ...             list.**init**(self,x)\n> > > > ...\n> > > > w=Mylist([1,2,3])\n> > > > dumps(w)\n> > > > 'ccopy_reg\\n_reconstructor\\np1\\n(c__main__\\nMylist\\np2\\nc__builtin__\\nlist\\np3\\n\n> > > > (lp4\\nI1\\naI2\\naI3\\natRp5\\n.'\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/236125",
    "html_url": "https://github.com/ipython/ipython/issues/29#issuecomment-236125",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/29",
    "id": 236125,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjEyNQ==",
    "user": {
      "login": "ipython",
      "id": 230453,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjIzMDQ1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/230453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ipython",
      "html_url": "https://github.com/ipython",
      "followers_url": "https://api.github.com/users/ipython/followers",
      "following_url": "https://api.github.com/users/ipython/following{/other_user}",
      "gists_url": "https://api.github.com/users/ipython/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ipython/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ipython/subscriptions",
      "organizations_url": "https://api.github.com/users/ipython/orgs",
      "repos_url": "https://api.github.com/users/ipython/repos",
      "events_url": "https://api.github.com/users/ipython/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ipython/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2010-05-10T09:29:43Z",
    "updated_at": "2010-05-10T09:29:43Z",
    "author_association": "COLLABORATOR",
    "body": "[ LP comment 5 by: eteq, on 2009-12-17 01:34:20.367155+00:00 ]\n\nI've encountered this in the past - I always just define any class I want to pickle in a file and then reload the module as necessary instead of pickling outputs from run or interactively-defined objects.  That seems safer anyway - otherwise if you restart the interpreter, the methods on the object are forgotten.  \n\nIt seems to work fine if you pickle from a file and then load that file with an interactively-defined or defined in \"run\" version, though.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/236126",
    "html_url": "https://github.com/ipython/ipython/issues/29#issuecomment-236126",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/29",
    "id": 236126,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjEyNg==",
    "user": {
      "login": "ipython",
      "id": 230453,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjIzMDQ1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/230453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ipython",
      "html_url": "https://github.com/ipython",
      "followers_url": "https://api.github.com/users/ipython/followers",
      "following_url": "https://api.github.com/users/ipython/following{/other_user}",
      "gists_url": "https://api.github.com/users/ipython/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ipython/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ipython/subscriptions",
      "organizations_url": "https://api.github.com/users/ipython/orgs",
      "repos_url": "https://api.github.com/users/ipython/repos",
      "events_url": "https://api.github.com/users/ipython/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ipython/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2010-05-10T09:29:44Z",
    "updated_at": "2010-05-10T09:29:44Z",
    "author_association": "COLLABORATOR",
    "body": "[ LP comment 6 by: Zak Stone, on 2009-12-17 03:02:24.672555+00:00 ]\n\nFor me, a similar problem arises when I am simply unpickling dictionaries in ipython -- no custom classes involved.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/906538",
    "html_url": "https://github.com/ipython/ipython/issues/29#issuecomment-906538",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/29",
    "id": 906538,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwNjUzOA==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-23T06:59:35Z",
    "updated_at": "2011-03-23T06:59:35Z",
    "author_association": "MEMBER",
    "body": "This means that interactively defined functions cannot be used with multiprocessing, as described in #86\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/928094",
    "html_url": "https://github.com/ipython/ipython/issues/29#issuecomment-928094",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/29",
    "id": 928094,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkyODA5NA==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-28T21:13:05Z",
    "updated_at": "2011-03-28T21:14:10Z",
    "author_association": "MEMBER",
    "body": "The problem appears to be that the FakeModule used for `sys.modules['__main__']` is updated once from user_ns, but it is not linked.  If anyone knows of an easy way to effectively do:\n    FakeModule.**dict** = user_ns\nThen we should be set.  Otherwise, I can get pickling to work with the following unattractive hack:\n\n<pre>\nIn [1]: from IPython.core.fakemodule import init_fakemod_dict\nIn [2]: ip = get_ipython()\nIn [3]: fakemain = sys.modules['__main__']\nIn [4]: ip.register_post_execute(lambda : init_fakemod_dict(fakemain, ip.user_ns))\n</pre>\n\n\nThis manually syncs the `FakeModule` in `__main__` after each execution.  It is expensive and ugly because it involves a clear+update of the entire `user_ns` after each execution, but for users who need to pickle interactively defined objects before we figure out a clean solution, it should work as a band-aid solution.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/974588",
    "html_url": "https://github.com/ipython/ipython/issues/29#issuecomment-974588",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/29",
    "id": 974588,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk3NDU4OA==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-08T16:43:33Z",
    "updated_at": "2011-04-08T16:43:33Z",
    "author_association": "MEMBER",
    "body": "Thanks for the hack, Min.  This is a really important one to fix, though I'm reluctant to make it a blocker because it's hard work that may delay us for a while, and it's such an old bug that we've obviously managed to live with it.\n\nBut I'd be thrilled to see a proper fix for this.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/974612",
    "html_url": "https://github.com/ipython/ipython/issues/29#issuecomment-974612",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/29",
    "id": 974612,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk3NDYxMg==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-08T16:49:10Z",
    "updated_at": "2011-04-08T16:49:10Z",
    "author_association": "MEMBER",
    "body": "@fperez do you know if there is a way for us to just have the FM.**dict** softlink to user_ns, rather than doing a one-time copy?\n\nI couldn't figure out a way in my relatively brief exploration of this, but it seems like that would resolve the whole problem.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/974811",
    "html_url": "https://github.com/ipython/ipython/issues/29#issuecomment-974811",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/29",
    "id": 974811,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk3NDgxMQ==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-08T17:37:11Z",
    "updated_at": "2011-04-08T17:37:11Z",
    "author_association": "MEMBER",
    "body": "On Fri, Apr 8, 2011 at 9:49 AM, minrk\nreply@reply.github.com\nwrote:\n\n> @fperez do you know if there is a way for us to just have the FM.**dict** softlink to user_ns, rather than doing a one-time copy?\n> \n> I couldn't figure out a way in my relatively brief exploration of this, but it seems like that would resolve the whole problem.\n\nMy concern would be the fact that this would couple a module (a global\nobject) to the running namespace.  That makes a mess with embedding,\nmultiple shells instantiated in the test suite, etc.\n\nThe FakeModule thing is something I wrote years ago, at the very\nbeginning of ipython, to get some namespace issues working.  Perhaps\nwe should just revisit the whole question fresh, and see if we can get\n%run and other namespace-intensive things working, but with a\ndifferent approach that has a better profile regarding pickling...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/974842",
    "html_url": "https://github.com/ipython/ipython/issues/29#issuecomment-974842",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/29",
    "id": 974842,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk3NDg0Mg==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-08T17:46:24Z",
    "updated_at": "2011-04-08T17:46:24Z",
    "author_association": "MEMBER",
    "body": "Right, but it's specifically the `__main__` module, which _is_ the running namespace.\n\nI certainly don't know enough about what `__main__` is used for, and what we should do about it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/974888",
    "html_url": "https://github.com/ipython/ipython/issues/29#issuecomment-974888",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/29",
    "id": 974888,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk3NDg4OA==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-08T17:58:00Z",
    "updated_at": "2011-04-08T17:58:00Z",
    "author_association": "MEMBER",
    "body": "On Fri, Apr 8, 2011 at 10:46 AM, minrk\nreply@reply.github.com\nwrote:\n\n> Right, but it's specifically the `__main__` module, which _is_ the running namespace.\n> \n> I certainly don't know enough about what `__main__` is used for, and what we should do about it.\n\nThat's why I'm reluctant to make this one a blocker right now: it's\nvery delicate and affects a lot of things in how everything operates.\nThe best might be to come up with a few tests around all of this, add\nthem including failing ones as KnownFailure, and at least we'll have\ncoverage of the issue from the test perspective.  Then post 0.11, we\ncan take a stab at actually fixing this, with some time to think\ncarefully about the entire issue without the rush of a release.\n\nCheers,\n\nf\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/978128",
    "html_url": "https://github.com/ipython/ipython/issues/29#issuecomment-978128",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/29",
    "id": 978128,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk3ODEyOA==",
    "user": {
      "login": "dwf",
      "id": 60206,
      "node_id": "MDQ6VXNlcjYwMjA2",
      "avatar_url": "https://avatars1.githubusercontent.com/u/60206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dwf",
      "html_url": "https://github.com/dwf",
      "followers_url": "https://api.github.com/users/dwf/followers",
      "following_url": "https://api.github.com/users/dwf/following{/other_user}",
      "gists_url": "https://api.github.com/users/dwf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dwf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dwf/subscriptions",
      "organizations_url": "https://api.github.com/users/dwf/orgs",
      "repos_url": "https://api.github.com/users/dwf/repos",
      "events_url": "https://api.github.com/users/dwf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dwf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-09T20:31:32Z",
    "updated_at": "2011-04-09T20:31:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "The exact same issue causes #131. This should also get a \"FakeModule\" label, but I can't figure out how to add it myself (maybe only organization members can do that).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/978138",
    "html_url": "https://github.com/ipython/ipython/issues/29#issuecomment-978138",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/29",
    "id": 978138,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk3ODEzOA==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-09T20:36:26Z",
    "updated_at": "2011-04-09T20:36:26Z",
    "author_association": "MEMBER",
    "body": "On Sat, Apr 9, 2011 at 1:31 PM, dwf\nreply@reply.github.com\nwrote:\n\n> The exact same issue causes #131. This should also get a \"FakeModule\" label, but I can't figure out how to add it myself (maybe only organization members can do that).\n\nDone, thanks! Unfortunately github only allows repo owners to set labels...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1005931",
    "html_url": "https://github.com/ipython/ipython/issues/29#issuecomment-1005931",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/29",
    "id": 1005931,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMDU5MzE=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-15T09:36:55Z",
    "updated_at": "2011-04-15T09:36:55Z",
    "author_association": "MEMBER",
    "body": "I've had a go at this, if people want to test my pickle-interactive branch. See pull request #384 for more explanation.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1008626",
    "html_url": "https://github.com/ipython/ipython/issues/29#issuecomment-1008626",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/29",
    "id": 1008626,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMDg2MjY=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-15T16:18:17Z",
    "updated_at": "2011-04-15T16:18:17Z",
    "author_association": "MEMBER",
    "body": "Thanks, Thomas.  BTW, let's not forget to close this, #131 and anything else on this front when we merge #384 (which I think we will shortly).\n"
  }
]
