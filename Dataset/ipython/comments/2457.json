[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/9037479",
    "html_url": "https://github.com/ipython/ipython/issues/2457#issuecomment-9037479",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2457",
    "id": 9037479,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwMzc0Nzk=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-10-01T15:54:41Z",
    "updated_at": "2012-10-01T15:54:41Z",
    "author_association": "MEMBER",
    "body": "The point of R magic is to write R, which has it's own syntax. \nUnder the hood, it does use a library (r2py) that talk to R, to push and pull variables, r2py also have a higher interface.\n\nUsing `%R` magic to have a `Rlib` would be adding an unnecessary layer of complexity, such a lib should be directly using r2py, or even extend r2py.\n\nAlso , IMHO, why would you want to make a library that look like python, act like python, kwak like python, but is not python ? There is obviously limitation in both ways, and there are python tools to do so (pandas for example take a lot from R world wrapped in python greatness and with an awesome creator.)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/9039532",
    "html_url": "https://github.com/ipython/ipython/issues/2457#issuecomment-9039532",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2457",
    "id": 9039532,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwMzk1MzI=",
    "user": {
      "login": "rhiever",
      "id": 1719223,
      "node_id": "MDQ6VXNlcjE3MTkyMjM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1719223?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rhiever",
      "html_url": "https://github.com/rhiever",
      "followers_url": "https://api.github.com/users/rhiever/followers",
      "following_url": "https://api.github.com/users/rhiever/following{/other_user}",
      "gists_url": "https://api.github.com/users/rhiever/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rhiever/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rhiever/subscriptions",
      "organizations_url": "https://api.github.com/users/rhiever/orgs",
      "repos_url": "https://api.github.com/users/rhiever/repos",
      "events_url": "https://api.github.com/users/rhiever/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rhiever/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-10-01T16:22:39Z",
    "updated_at": "2012-10-01T16:22:39Z",
    "author_association": "NONE",
    "body": "(issue author here -- posting from the correct account this time)\n\nI agree about using rpy2 instead of Rmagic to construct the R library wrapper.\n\nHowever, there are many advanced stats libraries and functions in R that aren't in Python yet. Instead of spending our time re-writing and re-testing those libraries, we could just have a wrapper that uses the established R code.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/9040813",
    "html_url": "https://github.com/ipython/ipython/issues/2457#issuecomment-9040813",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2457",
    "id": 9040813,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwNDA4MTM=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-10-01T16:52:36Z",
    "updated_at": "2012-10-01T16:52:36Z",
    "author_association": "MEMBER",
    "body": "I think rpy2 already is that wrapper, although it's not quite as automatic as your suggestion:\n\n```\nIn [1]: from rpy2.robjects import r, IntVector\n\nIn [2]: X = [1, 2, 3, 4, 3, 2, 3]\n\nIn [3]: r.mean(IntVector(X))\nOut[3]: \n<FloatVector - Python:0x98d010c / R:0x8fbdb18>\n[2.571429]\n```\n\nThere's also lower-level interfaces. You can see the docs here: http://rpy.sourceforge.net/rpy2/doc-2.2/html/index.html\n\nAs @Carreau says, Rmagic is an interface to a wrapper, so creating another wrapper around that would be silly. I'm going to close this, since I don't think there's anything IPython needs to do about it. Feel free to continue discussing the ideas, though.\n"
  }
]
