[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/234104941",
    "html_url": "https://github.com/ipython/ipython/issues/9784#issuecomment-234104941",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9784",
    "id": 234104941,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDEwNDk0MQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-20T22:34:46Z",
    "updated_at": "2016-07-20T22:34:46Z",
    "author_association": "MEMBER",
    "body": "Ouch. I'm unsure having the `%gui <>` returning  an object was meant to be and/or if it should, `%gui` is just here to integrate with eventloop. @takluyver ?\n\nI'm unsure about creating the application in the inputhook. I think that asking the developer to create an Application by himself is reasonable. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/234145710",
    "html_url": "https://github.com/ipython/ipython/issues/9784#issuecomment-234145710",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9784",
    "id": 234145710,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDE0NTcxMA==",
    "user": {
      "login": "zpincus",
      "id": 174217,
      "node_id": "MDQ6VXNlcjE3NDIxNw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/174217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zpincus",
      "html_url": "https://github.com/zpincus",
      "followers_url": "https://api.github.com/users/zpincus/followers",
      "following_url": "https://api.github.com/users/zpincus/following{/other_user}",
      "gists_url": "https://api.github.com/users/zpincus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zpincus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zpincus/subscriptions",
      "organizations_url": "https://api.github.com/users/zpincus/orgs",
      "repos_url": "https://api.github.com/users/zpincus/repos",
      "events_url": "https://api.github.com/users/zpincus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zpincus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-21T03:15:03Z",
    "updated_at": "2016-07-21T03:15:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "Regarding the `QApplication`: do note that creating such an instance is essentially just spinning up a Qt eventloop. It appears that most of the other modules in  `terminal/pt_inputhooks` either construct an eventloop (e.g. glut, pyglet) or rely on an always-available default eventloop procedure or object (gtk, osx, tk). Only qt (and maybe wx, it's hard to tell?) require something external to be created before the `%gui` integration can work.\n\nMoreover, at least for qt, making a `QApplication` instance has been the behavior since well before the 4.x series. So not doing so is definitely a breaking change. It took me the better part of a day to figure out why things were going wonky, and I'm pretty familiar with the IPython / Qt internals (from my spelunking with the last IPython major release, which also broke this stuff :) -- #8757 / #8829). At a minimum some clear documentation about these changes would be helpful.\n\nAlso, on IPython 4, one could use matplotlib with qt just by doing `%gui qt` and then importing and using matplotlib. Now because of this change, it only works via `%matplotlib qt`. I know the latter is the recommended way, but this is liable to cause some additional confusion.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/234243079",
    "html_url": "https://github.com/ipython/ipython/issues/9784#issuecomment-234243079",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9784",
    "id": 234243079,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDI0MzA3OQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-21T12:48:38Z",
    "updated_at": "2016-07-21T12:48:38Z",
    "author_association": "MEMBER",
    "body": "Thanks for the detailed investigation; I've created #9789 which makes your example work for me.\n\nI'm still a bit in two minds about this. Other than matplotlib, I'm not quite sure what's a 'natural' scenario for creating a Qt application interactively. Is it literally building a GUI at the prompt, testing a GUI written into a regular file, or using other things like matplotlib which create a GUI as part of library operation?\n\nQt normally requires you to create a QApplication, so by bypassing that requirement we risk confusing users about what's really going on, and making situations where code runs differently in IPython to plain Python. On the other hand, whatever the arguments against what we did before, consistency is always worth considering.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/234469329",
    "html_url": "https://github.com/ipython/ipython/issues/9784#issuecomment-234469329",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9784",
    "id": 234469329,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDQ2OTMyOQ==",
    "user": {
      "login": "zpincus",
      "id": 174217,
      "node_id": "MDQ6VXNlcjE3NDIxNw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/174217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zpincus",
      "html_url": "https://github.com/zpincus",
      "followers_url": "https://api.github.com/users/zpincus/followers",
      "following_url": "https://api.github.com/users/zpincus/following{/other_user}",
      "gists_url": "https://api.github.com/users/zpincus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zpincus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zpincus/subscriptions",
      "organizations_url": "https://api.github.com/users/zpincus/orgs",
      "repos_url": "https://api.github.com/users/zpincus/repos",
      "events_url": "https://api.github.com/users/zpincus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zpincus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-22T06:59:50Z",
    "updated_at": "2016-07-22T06:59:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm not sure I really understand the objections to the old behavior of creating a `QApplication`. Isn't the whole point of the GUI integration is to make GUI code run differently in IPython vs. plain-Python? (I.e. to shift responsibility for setting up an eventloop from the user code to IPython.)\n\nTo start an eventloop in Qt, a user generally has to create a `QApplication` and then call its `exec_()` method. The Qt integration in IPython 4.x does both tasks (unless the user had already made a `QApplication`, which would get used instead). Currently, IPython 5 requires that a user do the first task and then IPython does the second. Note that **either way**, things in IPython are different from the plain-Python case. The IPython 4.x solution seems to me to be a bit more self-consistent, though.\n\nMoreover, I don't really see how this differs from any of the other GUI integration code. Every GUI toolkit usually requires that an eventloop get created and started as part of starting a GUI program -- yet in every instance, the IPython GUI integration both creates/initializes and runs the eventloop. (It's just that the Qt implementation forgot to take care of all of the usual initialization steps, and unsurprisingly broke as a result.)\n\nFor example, look at the code in `terminal/pt_inputhooks/glut.py`: this is **all** stuff that a user generally has to do in their own `main()` function. Does bypassing the requirement to call `glut.glutInit(sys.argv)` and `glut.glutInitDisplayMode(glut_display_mode)` risk confusing users about what's really going on? \n\nOr would it be more confusing to require that a user run `glut.glutInit(sys.argv)` before `%gui glut` will work correctly? And if that is unacceptable (I certainly think so), is there any meaningful difference from the proposed requirement that a user run `app = QApplication(sys.argv)` before `%gui qt` will work correctly?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/234719139",
    "html_url": "https://github.com/ipython/ipython/issues/9784#issuecomment-234719139",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9784",
    "id": 234719139,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDcxOTEzOQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-23T13:49:04Z",
    "updated_at": "2016-07-23T13:49:04Z",
    "author_association": "MEMBER",
    "body": "> Isn't the whole point of the GUI integration is to make GUI code run differently in IPython vs. plain-Python? (I.e. to shift responsibility for setting up an eventloop from the user code to IPython.)\n\nNot precisely. The point of the GUI integration is to integrate the event loop with the IPython interface, so that you can have both an interactive GUI and an interactive prompt at the same time. That doesn't necessarily imply that IPython has to set up an event loop; it still works if the user creates the event loop and IPython integrates with it.\n\nI'm ambivalent about this, though, and as such I'd probably lean towards preserving the behaviour from previous versions, as you're asking. Maybe @fperez has useful input.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/234723927",
    "html_url": "https://github.com/ipython/ipython/issues/9784#issuecomment-234723927",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9784",
    "id": 234723927,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDcyMzkyNw==",
    "user": {
      "login": "tacaswell",
      "id": 199813,
      "node_id": "MDQ6VXNlcjE5OTgxMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/199813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tacaswell",
      "html_url": "https://github.com/tacaswell",
      "followers_url": "https://api.github.com/users/tacaswell/followers",
      "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
      "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
      "organizations_url": "https://api.github.com/users/tacaswell/orgs",
      "repos_url": "https://api.github.com/users/tacaswell/repos",
      "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tacaswell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-23T15:25:42Z",
    "updated_at": "2016-07-23T15:25:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am in favor of IPython creating the `qApp` if needed.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/234728966",
    "html_url": "https://github.com/ipython/ipython/issues/9784#issuecomment-234728966",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9784",
    "id": 234728966,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDcyODk2Ng==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-23T17:06:20Z",
    "updated_at": "2016-07-23T17:06:20Z",
    "author_association": "MEMBER",
    "body": "Thanks, that's a useful data point.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/235013983",
    "html_url": "https://github.com/ipython/ipython/issues/9784#issuecomment-235013983",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9784",
    "id": 235013983,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTAxMzk4Mw==",
    "user": {
      "login": "zpincus",
      "id": 174217,
      "node_id": "MDQ6VXNlcjE3NDIxNw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/174217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zpincus",
      "html_url": "https://github.com/zpincus",
      "followers_url": "https://api.github.com/users/zpincus/followers",
      "following_url": "https://api.github.com/users/zpincus/following{/other_user}",
      "gists_url": "https://api.github.com/users/zpincus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zpincus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zpincus/subscriptions",
      "organizations_url": "https://api.github.com/users/zpincus/orgs",
      "repos_url": "https://api.github.com/users/zpincus/repos",
      "events_url": "https://api.github.com/users/zpincus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zpincus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-25T16:56:35Z",
    "updated_at": "2016-07-25T16:56:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "> > Isn't the whole point of the GUI integration is to make GUI code run differently in IPython vs. plain-Python? (I.e. to shift responsibility for setting up an eventloop from the user code to IPython.)\n> \n> Not precisely. \n\nSorry, I mis-wrote. This should have been \"(I.e. to shift responsibility for **running** an eventloop from the user code to IPython.)\" Regardless, it remains true that code that uses GUI integration in IPython will necessarily look and work a little differently from code that does the same task in plain Python. As such, I am not sure how a goal can be to try to avoid \"making situations where code runs differently in IPython to plain Python\".\n\nProbably the discussion should broaden to the general policy about what the GUI integration should guarantee (or aim to guarantee) for all of the toolkits, so that things can be as consistent as possible. **That is, should `gui <>` aim to guarantee that an eventloop, if already set up, will be integrated with IPython? Or should it aim to guarantee that an eventloop will be set up and run in a way that integrates with IPython?** As far as I understand it, the general behavior of IPython has always been much closer to the latter than the former.\n\nCurrently, the GUI integration code does perform necessary initialization and/or eventloop setup for GLUT and GTK. I am pretty certain that no additional steps are required from either IPython or the user for the Pyglet and Tk integration. So for all of those toolkits, `gui <>` will work without any additional steps beyond creating widgets. I don't know enough about GTK3, WX, or OS X to say one way or the other. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/235020398",
    "html_url": "https://github.com/ipython/ipython/issues/9784#issuecomment-235020398",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9784",
    "id": 235020398,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTAyMDM5OA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-25T17:19:38Z",
    "updated_at": "2016-07-25T17:19:38Z",
    "author_association": "MEMBER",
    "body": "I agree that there is a difference in conception of what `gui <>` does, in particular it shoudl be taken into account that `gui` is something that you can set in  you configuration file, so it can be persistent for all your sessions. And in that case, there is no way to access what `%gui` returns. \n\nThe inputhook make IPython code ready to work with an eventloop if present by timesharing event processing. It should likely not guarantee that the event loop should be there. \n\nI'm not that much familiar with glut/tk/wx, but there might be technical reasons why in these specific cases we do start the eventloop. \n\nAnyway let's restore the creation of the QtApplication and  discuss further what would be the policy for all the eventlopps. \n"
  }
]
