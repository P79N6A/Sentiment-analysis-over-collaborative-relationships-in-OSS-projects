[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/242164543",
    "html_url": "https://github.com/ipython/ipython/issues/9904#issuecomment-242164543",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9904",
    "id": 242164543,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjE2NDU0Mw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-24T18:31:11Z",
    "updated_at": "2016-08-24T18:31:11Z",
    "author_association": "MEMBER",
    "body": "I'm confused of what you are trying to do, or what you mean by that. \nDo you have any example ? \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/242178692",
    "html_url": "https://github.com/ipython/ipython/issues/9904#issuecomment-242178692",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9904",
    "id": 242178692,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjE3ODY5Mg==",
    "user": {
      "login": "vmalloc",
      "id": 28710,
      "node_id": "MDQ6VXNlcjI4NzEw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/28710?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vmalloc",
      "html_url": "https://github.com/vmalloc",
      "followers_url": "https://api.github.com/users/vmalloc/followers",
      "following_url": "https://api.github.com/users/vmalloc/following{/other_user}",
      "gists_url": "https://api.github.com/users/vmalloc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vmalloc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vmalloc/subscriptions",
      "organizations_url": "https://api.github.com/users/vmalloc/orgs",
      "repos_url": "https://api.github.com/users/vmalloc/repos",
      "events_url": "https://api.github.com/users/vmalloc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vmalloc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-24T19:21:20Z",
    "updated_at": "2016-08-24T19:21:20Z",
    "author_association": "NONE",
    "body": "Our testing infrastructure has a mode for entering IPython via `embed`, and I would like commands entered in that session to be saved to a custom location (say a database that we control). So what I'm looking for is something like a hook to be called for each command the user enters inside the session we spawn...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/244355386",
    "html_url": "https://github.com/ipython/ipython/issues/9904#issuecomment-244355386",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9904",
    "id": 244355386,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDM1NTM4Ng==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-02T11:56:10Z",
    "updated_at": "2016-09-02T11:56:10Z",
    "author_association": "MEMBER",
    "body": "@vmalloc you can register [events](https://ipython.readthedocs.io/en/stable/config/callbacks.html) to fire before and/or after code executes.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/244355850",
    "html_url": "https://github.com/ipython/ipython/issues/9904#issuecomment-244355850",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9904",
    "id": 244355850,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDM1NTg1MA==",
    "user": {
      "login": "vmalloc",
      "id": 28710,
      "node_id": "MDQ6VXNlcjI4NzEw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/28710?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vmalloc",
      "html_url": "https://github.com/vmalloc",
      "followers_url": "https://api.github.com/users/vmalloc/followers",
      "following_url": "https://api.github.com/users/vmalloc/following{/other_user}",
      "gists_url": "https://api.github.com/users/vmalloc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vmalloc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vmalloc/subscriptions",
      "organizations_url": "https://api.github.com/users/vmalloc/orgs",
      "repos_url": "https://api.github.com/users/vmalloc/repos",
      "events_url": "https://api.github.com/users/vmalloc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vmalloc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-02T11:58:51Z",
    "updated_at": "2016-09-02T11:58:51Z",
    "author_association": "NONE",
    "body": "@minrk thanks! will look into it\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/244374555",
    "html_url": "https://github.com/ipython/ipython/issues/9904#issuecomment-244374555",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9904",
    "id": 244374555,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDM3NDU1NQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-02T13:27:54Z",
    "updated_at": "2016-09-02T13:27:54Z",
    "author_association": "MEMBER",
    "body": "Though unfortunately it's not convenient to get the entered text from any of the current events. When we designed the events system, I think we said that if you want the code submitted, you should register a no-op input transformer. That now seems rather awkward; maybe we should introduce a new event (or add a parameter to an existing event using [backcall](https://pypi.python.org/pypi/backcall) ;-) ).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/244607103",
    "html_url": "https://github.com/ipython/ipython/issues/9904#issuecomment-244607103",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9904",
    "id": 244607103,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDYwNzEwMw==",
    "user": {
      "login": "vmalloc",
      "id": 28710,
      "node_id": "MDQ6VXNlcjI4NzEw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/28710?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vmalloc",
      "html_url": "https://github.com/vmalloc",
      "followers_url": "https://api.github.com/users/vmalloc/followers",
      "following_url": "https://api.github.com/users/vmalloc/following{/other_user}",
      "gists_url": "https://api.github.com/users/vmalloc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vmalloc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vmalloc/subscriptions",
      "organizations_url": "https://api.github.com/users/vmalloc/orgs",
      "repos_url": "https://api.github.com/users/vmalloc/repos",
      "events_url": "https://api.github.com/users/vmalloc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vmalloc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-04T14:39:52Z",
    "updated_at": "2016-09-04T14:39:52Z",
    "author_association": "NONE",
    "body": "@takluyver @minrk is there any documented way to register events before the shell instance is created? we want to configure it before creating the actual shell via `embed`...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/267999281",
    "html_url": "https://github.com/ipython/ipython/issues/9904#issuecomment-267999281",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9904",
    "id": 267999281,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2Nzk5OTI4MQ==",
    "user": {
      "login": "vmalloc",
      "id": 28710,
      "node_id": "MDQ6VXNlcjI4NzEw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/28710?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vmalloc",
      "html_url": "https://github.com/vmalloc",
      "followers_url": "https://api.github.com/users/vmalloc/followers",
      "following_url": "https://api.github.com/users/vmalloc/following{/other_user}",
      "gists_url": "https://api.github.com/users/vmalloc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vmalloc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vmalloc/subscriptions",
      "organizations_url": "https://api.github.com/users/vmalloc/orgs",
      "repos_url": "https://api.github.com/users/vmalloc/repos",
      "events_url": "https://api.github.com/users/vmalloc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vmalloc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-19T15:52:23Z",
    "updated_at": "2016-12-19T15:52:23Z",
    "author_association": "NONE",
    "body": "Is there any news on this issue? Or maybe a quick explanation/lead about how to work around it???\r\n\r\nThanks in advance!"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/270127834",
    "html_url": "https://github.com/ipython/ipython/issues/9904#issuecomment-270127834",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9904",
    "id": 270127834,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MDEyNzgzNA==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-03T14:38:40Z",
    "updated_at": "2017-01-03T14:38:40Z",
    "author_association": "MEMBER",
    "body": "You can't register events before the instance exists, but you can register events on an embed instance before it starts its mainloop:\r\n\r\n```python\r\nfrom IPython.terminal.embed import InteractiveShellEmbed\r\n\r\ndef main():\r\n    embed = InteractiveShellEmbed()\r\n    embed.events.register('post_execute', lambda : print('hook!'))\r\n    a = 5\r\n    embed()\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```"
  }
]
