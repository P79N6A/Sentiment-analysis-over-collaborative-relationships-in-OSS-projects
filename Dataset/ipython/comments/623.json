[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1642391",
    "html_url": "https://github.com/ipython/ipython/issues/623#issuecomment-1642391",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/623",
    "id": 1642391,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NDIzOTE=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-07-24T22:08:08Z",
    "updated_at": "2011-07-24T22:08:08Z",
    "author_association": "MEMBER",
    "body": "Yes, this is as intended.  On the Engine, there is no difference between a load-balanced task and a MUX task. The only difference between the two is the routing mechanism for determining the engine destination, but the distinction vanishes on arrival.  There is a separate Control queue that jumps to the head of the line (abort, shutdown, etc. are implemented via this queue, but more queries could be added), but control messages still have to wait for the current task to complete, because the Engine is a single-threaded application (except for heartbeat, which is a pure-C thread).\n\nIf we do make the Engine a multithreaded application, then control messages _might_ respond while tasks are running, but that still won't be true if tasks are doing GIL-holding operations, which is highly likely.\n\nThe general model is that engine state is to be gathered from the Hub, which tracks jobs run and running via requests like `Client.queue_status()`, but this obviously doesn't get things like actual CPU load of the remote machine, only which tasks have run / are running on each engine.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1661638",
    "html_url": "https://github.com/ipython/ipython/issues/623#issuecomment-1661638",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/623",
    "id": 1661638,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NjE2Mzg=",
    "user": {
      "login": "kaazoo",
      "id": 357935,
      "node_id": "MDQ6VXNlcjM1NzkzNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/357935?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kaazoo",
      "html_url": "https://github.com/kaazoo",
      "followers_url": "https://api.github.com/users/kaazoo/followers",
      "following_url": "https://api.github.com/users/kaazoo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kaazoo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kaazoo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kaazoo/subscriptions",
      "organizations_url": "https://api.github.com/users/kaazoo/orgs",
      "repos_url": "https://api.github.com/users/kaazoo/repos",
      "events_url": "https://api.github.com/users/kaazoo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kaazoo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-07-27T06:45:10Z",
    "updated_at": "2011-07-27T06:45:10Z",
    "author_association": "NONE",
    "body": "OK, thank you for the explanation. Then I will see if I can run my status task from time to time and cache the information between. This may not be very accurate but at least my application is not blocked while waiting for engine status.\n"
  }
]
