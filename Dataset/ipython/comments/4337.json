[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25604178",
    "html_url": "https://github.com/ipython/ipython/issues/4337#issuecomment-25604178",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4337",
    "id": 25604178,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjA0MTc4",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-03T07:52:20Z",
    "updated_at": "2013-10-03T07:52:20Z",
    "author_association": "MEMBER",
    "body": "I'm sorry, but I have difficulties to see what you are describing and what would be the use case...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25633230",
    "html_url": "https://github.com/ipython/ipython/issues/4337#issuecomment-25633230",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4337",
    "id": 25633230,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjMzMjMw",
    "user": {
      "login": "karissa",
      "id": 633012,
      "node_id": "MDQ6VXNlcjYzMzAxMg==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/633012?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karissa",
      "html_url": "https://github.com/karissa",
      "followers_url": "https://api.github.com/users/karissa/followers",
      "following_url": "https://api.github.com/users/karissa/following{/other_user}",
      "gists_url": "https://api.github.com/users/karissa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karissa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karissa/subscriptions",
      "organizations_url": "https://api.github.com/users/karissa/orgs",
      "repos_url": "https://api.github.com/users/karissa/repos",
      "events_url": "https://api.github.com/users/karissa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karissa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-03T16:00:00Z",
    "updated_at": "2013-10-03T16:00:00Z",
    "author_association": "NONE",
    "body": "That's okay.\n\nOne example (the one that I'm using ipython notebook for right now) is an IPython Notebook IDE of sorts. I have the notebook embedded in an iframe, with a terminal next to it, with toggleable widths and other doodads. If I open or create a new notebook, I would like to see them in the same frame they spawned from, instead of spawning a new window and defeating the purpose of embedding it in the first place. This allows easy navigation between different notebooks in the same frame.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25649622",
    "html_url": "https://github.com/ipython/ipython/issues/4337#issuecomment-25649622",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4337",
    "id": 25649622,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjQ5NjIy",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-03T19:17:13Z",
    "updated_at": "2013-10-03T19:17:13Z",
    "author_association": "MEMBER",
    "body": "oh; ok, I probably confuse `_parent`, `_top` and `_self`. \nI'm not sure it's that easy to change everywhere, we could probably have a global `target` varaible that could be insert here and there, but it will be pretty difficult to detect when link are notebook or external resources. \n\nI don't think we are close to have the abiliy to \"embed\" the webapp into an iframe, but with native browser, there might be a way to overwrite the `_blank`target handler. Maybe the same exist in JS.\n"
  }
]
