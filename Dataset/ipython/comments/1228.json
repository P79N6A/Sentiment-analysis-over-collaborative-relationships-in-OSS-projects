[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3382987",
    "html_url": "https://github.com/ipython/ipython/issues/1228#issuecomment-3382987",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1228",
    "id": 3382987,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzODI5ODc=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-06T10:37:32Z",
    "updated_at": "2012-01-06T10:37:32Z",
    "author_association": "MEMBER",
    "body": "I believe that it is not precisely that the Ctrl-C is mishandled by the console, it's that the SIGINT sent by the terminal goes directly to both the parent (console) and child (kernel) process.  For instance, you will not see this behavior if you do `ipython console --existing` from another terminal window.\n\nWhat OS/backend are you using that this causes the kernel to exit?  When using OSX and `--pylab osx` or `--pylab qt`, I do see that the kernel gets the SIGINT and prints a message, but it also survives and behaves just fine afterwards, and does not exit.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3383162",
    "html_url": "https://github.com/ipython/ipython/issues/1228#issuecomment-3383162",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1228",
    "id": 3383162,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzODMxNjI=",
    "user": {
      "login": "rabbitmcrabbit",
      "id": 428017,
      "node_id": "MDQ6VXNlcjQyODAxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/428017?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rabbitmcrabbit",
      "html_url": "https://github.com/rabbitmcrabbit",
      "followers_url": "https://api.github.com/users/rabbitmcrabbit/followers",
      "following_url": "https://api.github.com/users/rabbitmcrabbit/following{/other_user}",
      "gists_url": "https://api.github.com/users/rabbitmcrabbit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rabbitmcrabbit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rabbitmcrabbit/subscriptions",
      "organizations_url": "https://api.github.com/users/rabbitmcrabbit/orgs",
      "repos_url": "https://api.github.com/users/rabbitmcrabbit/repos",
      "events_url": "https://api.github.com/users/rabbitmcrabbit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rabbitmcrabbit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-06T10:58:33Z",
    "updated_at": "2012-01-06T10:58:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "you're right -- the Ctrl-C problem is not present if I launch a separate\nconsole.\n\ni get the error running tk, gtk, and wx. if i run qt, then i do not get a\nkernel crash on Ctrl-C, but i do get the following message:\n\n---\n\nKeyboardInterrupt                         Traceback (most recent call last)\n/usr/local/lib/python2.7/dist-packages/IPython/zmq/ipkernel.pyc in\ndo_one_iteration(self=<IPython.zmq.ipkernel.Kernel object>)\n    132         \"\"\"\n    133         try:\n--> 134             ident,msg = self.session.recv(self.shell_socket,\nzmq.NOBLOCK)\n    135         except Exception:\n    136             self.log.warn(\"Invalid Message:\", exc_info=True)\n\n/usr/local/lib/python2.7/dist-packages/IPython/zmq/session.pyc in\nrecv(self=<IPython.zmq.session.Session object>,\nsocket=<zmq.core.socket.Socket object>, mode=1, content=True, copy=True)\n    629             socket = socket.socket\n    630         try:\n--> 631             msg_list = socket.recv_multipart(mode)\n    632         except zmq.ZMQError as e:\n    633             if e.errno == zmq.EAGAIN:\n\nKeyboardInterrupt:\n\nOn Fri, Jan 6, 2012 at 10:37 AM, Min RK <\nreply@reply.github.com\n\n> wrote:\n> \n> I believe that it is not precisely that the Ctrl-C is mishandled by the\n> console, it's that the SIGINT sent by the terminal goes directly to both\n> the parent (console) and child (kernel) process.  For instance, you will\n> not see this behavior if you do `ipython console --existing` from another\n> terminal window.\n> \n> What OS/backend are you using that this causes the kernel to exit?  When\n> using OSX and `--pylab osx` or `--pylab qt`, I do see that the kernel gets\n> the SIGINT and prints a message, but it also survives and behaves just fine\n> afterwards, and does not exit.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/issues/1228#issuecomment-3382987\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3383168",
    "html_url": "https://github.com/ipython/ipython/issues/1228#issuecomment-3383168",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1228",
    "id": 3383168,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzODMxNjg=",
    "user": {
      "login": "rabbitmcrabbit",
      "id": 428017,
      "node_id": "MDQ6VXNlcjQyODAxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/428017?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rabbitmcrabbit",
      "html_url": "https://github.com/rabbitmcrabbit",
      "followers_url": "https://api.github.com/users/rabbitmcrabbit/followers",
      "following_url": "https://api.github.com/users/rabbitmcrabbit/following{/other_user}",
      "gists_url": "https://api.github.com/users/rabbitmcrabbit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rabbitmcrabbit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rabbitmcrabbit/subscriptions",
      "organizations_url": "https://api.github.com/users/rabbitmcrabbit/orgs",
      "repos_url": "https://api.github.com/users/rabbitmcrabbit/repos",
      "events_url": "https://api.github.com/users/rabbitmcrabbit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rabbitmcrabbit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-06T10:59:27Z",
    "updated_at": "2012-01-06T10:59:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "...and i'm on linux (ubuntu natty + python 2.7.1) so no osx pylab available.\n\nOn Fri, Jan 6, 2012 at 10:58 AM, neil rabinowitz <\nneil.rabinowitz@merton.ox.ac.uk> wrote:\n\n> you're right -- the Ctrl-C problem is not present if I launch a separate\n> console.\n> \n> i get the error running tk, gtk, and wx. if i run qt, then i do not get a\n> kernel crash on Ctrl-C, but i do get the following message:\n> \n> ---\n> \n> KeyboardInterrupt                         Traceback (most recent call last)\n> /usr/local/lib/python2.7/dist-packages/IPython/zmq/ipkernel.pyc in\n> do_one_iteration(self=<IPython.zmq.ipkernel.Kernel object>)\n>     132         \"\"\"\n>     133         try:\n> --> 134             ident,msg = self.session.recv(self.shell_socket,\n> zmq.NOBLOCK)\n>     135         except Exception:\n>     136             self.log.warn(\"Invalid Message:\", exc_info=True)\n> \n> /usr/local/lib/python2.7/dist-packages/IPython/zmq/session.pyc in\n> recv(self=<IPython.zmq.session.Session object>,\n> socket=<zmq.core.socket.Socket object>, mode=1, content=True, copy=True)\n>     629             socket = socket.socket\n>     630         try:\n> --> 631             msg_list = socket.recv_multipart(mode)\n>     632         except zmq.ZMQError as e:\n>     633             if e.errno == zmq.EAGAIN:\n> \n> KeyboardInterrupt:\n> \n> On Fri, Jan 6, 2012 at 10:37 AM, Min RK <\n> reply@reply.github.com\n> \n> > wrote:\n> > \n> > I believe that it is not precisely that the Ctrl-C is mishandled by the\n> > console, it's that the SIGINT sent by the terminal goes directly to both\n> > the parent (console) and child (kernel) process.  For instance, you will\n> > not see this behavior if you do `ipython console --existing` from another\n> > terminal window.\n> > \n> > What OS/backend are you using that this causes the kernel to exit?  When\n> > using OSX and `--pylab osx` or `--pylab qt`, I do see that the kernel gets\n> > the SIGINT and prints a message, but it also survives and behaves just fine\n> > afterwards, and does not exit.\n> > \n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/ipython/ipython/issues/1228#issuecomment-3382987\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5043866",
    "html_url": "https://github.com/ipython/ipython/issues/1228#issuecomment-5043866",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1228",
    "id": 5043866,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNDM4NjY=",
    "user": {
      "login": "punchagan",
      "id": 315678,
      "node_id": "MDQ6VXNlcjMxNTY3OA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/315678?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/punchagan",
      "html_url": "https://github.com/punchagan",
      "followers_url": "https://api.github.com/users/punchagan/followers",
      "following_url": "https://api.github.com/users/punchagan/following{/other_user}",
      "gists_url": "https://api.github.com/users/punchagan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/punchagan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/punchagan/subscriptions",
      "organizations_url": "https://api.github.com/users/punchagan/orgs",
      "repos_url": "https://api.github.com/users/punchagan/repos",
      "events_url": "https://api.github.com/users/punchagan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/punchagan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-10T11:39:43Z",
    "updated_at": "2012-04-10T11:39:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "The fact that `SIGINT` goes both to the parent and the child process, causes problems when trying to interrupt running code. \n\nFor example, the following prompts for a kernel restart, instead of interrupting the loop. \n\n```\nwhile 1:\n    print 1\n\n^C\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5127566",
    "html_url": "https://github.com/ipython/ipython/issues/1228#issuecomment-5127566",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1228",
    "id": 5127566,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMjc1NjY=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-14T00:43:22Z",
    "updated_at": "2012-04-14T00:43:22Z",
    "author_association": "MEMBER",
    "body": "I just had a look, and I'm wondering if we shouldn't just catch the `KeyboardInterrupt` in the kernel...  Kernels should exit because of either an explicit shutdown request or SIGTERM, but SIGINT shouldn't be enough to kill a kernel...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5127641",
    "html_url": "https://github.com/ipython/ipython/issues/1228#issuecomment-5127641",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1228",
    "id": 5127641,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMjc2NDE=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-14T00:55:37Z",
    "updated_at": "2012-04-14T00:55:37Z",
    "author_association": "MEMBER",
    "body": "The kernel already does try to catch SIGINT, so any case where SIGINT sent to the kernel results in exit is a bug in that handling.  I can't reproduce this under any circumstances on OSX, but I can with the Tk backend on Linux.\n\nSince I cannot reproduce it without GUI integration, the issue must be in one or more of the [eventloop integration functions](https://github.com/ipython/ipython/blob/master/IPython/zmq/eventloops.py), just not being good enough at catching SIGINT when it should.\n\nAnother step we might take is to change [this if statement](https://github.com/ipython/ipython/blob/master/IPython/zmq/ipkernel.py#L204) to `while self.eventloop is not None:`, so that we just keep re-entering the eventloop through interrupts which should never fire in the first place (but clearly are here).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5134710",
    "html_url": "https://github.com/ipython/ipython/issues/1228#issuecomment-5134710",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1228",
    "id": 5134710,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzQ3MTA=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-14T21:24:51Z",
    "updated_at": "2012-04-14T21:24:51Z",
    "author_association": "MEMBER",
    "body": "@minrk, that's worth trying and seeing if it helps with this problem...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5135243",
    "html_url": "https://github.com/ipython/ipython/issues/1228#issuecomment-5135243",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1228",
    "id": 5135243,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzUyNDM=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-14T22:35:46Z",
    "updated_at": "2012-04-14T22:35:46Z",
    "author_association": "MEMBER",
    "body": "@fperez - I made [that change](https://github.com/minrk/ipython/commit/d70249c94836d682588e3fda8feb752cdb14e8a4), and it does seem to alleviate the issue (get annoying 'interrupt caught in Kernel' message instead of dead kernel), but it's really a workaround for the real bug that the loop methods don't all catch/handle SIGINT properly.  If we want to merge it anyway as a band-aid while we work out the real bugs, I would be fine with that.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5135695",
    "html_url": "https://github.com/ipython/ipython/issues/1228#issuecomment-5135695",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1228",
    "id": 5135695,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzU2OTU=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-14T23:48:53Z",
    "updated_at": "2012-04-14T23:48:53Z",
    "author_association": "MEMBER",
    "body": "@minrk, that doesn't sound like a bad plan to me: in general making the top-level really robust is a good idea, b/c even if we track down the real bug in this case (which we should), it raises the overall user experience quality against other unforeseen bugs in the intermediate layers. So let's do that for now, while we track down the actual culprit in the event handling logic.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6556812",
    "html_url": "https://github.com/ipython/ipython/issues/1228#issuecomment-6556812",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1228",
    "id": 6556812,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1NTY4MTI=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-25T19:13:53Z",
    "updated_at": "2012-06-25T19:13:53Z",
    "author_association": "MEMBER",
    "body": "bumping to 0.14, since #1597 fixed the more serious consequences of the bug, if not the bug itself.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33890019",
    "html_url": "https://github.com/ipython/ipython/issues/1228#issuecomment-33890019",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1228",
    "id": 33890019,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzODkwMDE5",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-02T02:24:12Z",
    "updated_at": "2014-02-02T02:24:12Z",
    "author_association": "MEMBER",
    "body": "Closing this as I can't reproduce on master. If anyone can reproduce, please reopen with concrete steps/platform info to do so (I tried with Tk on Linux and the reported behavior doesn't happen anymore).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33890100",
    "html_url": "https://github.com/ipython/ipython/issues/1228#issuecomment-33890100",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1228",
    "id": 33890100,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzODkwMTAw",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-02T02:29:23Z",
    "updated_at": "2014-02-02T02:29:23Z",
    "author_association": "MEMBER",
    "body": "Ah, never mind: there is a way to see a problem, though it seems milder than before. With Qt, you have to hit `Ctrl-C`, and _then_, send some further code for execution (simply hitting Enter is not enough). I also thought I was on Tk but was on Qt instead, on Tk it's indeed still as reported.\n\nSo, for completeness:\n1. Using Tk, this happens. Immediate error message:\n\n```\namirbar[harvard]> ipython console --pylab tk --no-banner\n\nIn [1]: \nKeyboardInterrupt\n\nIn [1]: [IPKernelApp] ERROR | KeyboardInterrupt caught in kernel\n```\n1. Using Qt, you need to send new code for execution, and then a kernel error is seen:\n\n```\namirbar[harvard]> ipython console --pylab qt --no-banner\n\nIn [1]: \nKeyboardInterrupt\n\nIn [1]: 'hi'\n---------------------------------------------------------------------------\nKeyboardInterrupt                         Traceback (most recent call last)\n/home/fperez/usr/lib/python2.7/site-packages/IPython/kernel/zmq/eventloops.pyc in process_stream_events()\n     43         from IPython.core.interactiveshell import NoOpContext as context\n     44 \n---> 45     def process_stream_events():\n        global process_stream_events = undefined\n     46         while stream.getsockopt(zmq.EVENTS) & zmq.POLLIN:\n     47             with context():\n\nKeyboardInterrupt: \nOut[1]: 'hi'\n```\n\nThis should then stay open, and we should fix it for all event loops.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33891852",
    "html_url": "https://github.com/ipython/ipython/issues/1228#issuecomment-33891852",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1228",
    "id": 33891852,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzODkxODUy",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-02T04:34:54Z",
    "updated_at": "2014-02-02T04:34:54Z",
    "author_association": "MEMBER",
    "body": "Yeah, it's not fatal anymore, but there are still things we don't handle properly when signalling the subprocess.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33891861",
    "html_url": "https://github.com/ipython/ipython/issues/1228#issuecomment-33891861",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1228",
    "id": 33891861,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzODkxODYx",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-02T04:35:24Z",
    "updated_at": "2014-02-02T04:35:24Z",
    "author_association": "MEMBER",
    "body": "And it's complicated by the fact that the handling seems to need to be slightly different for every eventloop.\n"
  }
]
