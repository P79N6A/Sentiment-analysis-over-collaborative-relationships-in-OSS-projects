[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/976222",
    "html_url": "https://github.com/ipython/ipython/issues/342#issuecomment-976222",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/342",
    "id": 976222,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk3NjIyMg==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-08T23:22:59Z",
    "updated_at": "2011-04-08T23:22:59Z",
    "author_association": "MEMBER",
    "body": "I'd start by looking at amending AutomagicChecker (in core/prefilter.py) to catch these cases. We should already be checking we're not colliding with the user namespace.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/976306",
    "html_url": "https://github.com/ipython/ipython/issues/342#issuecomment-976306",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/342",
    "id": 976306,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk3NjMwNg==",
    "user": {
      "login": "dwf",
      "id": 60206,
      "node_id": "MDQ6VXNlcjYwMjA2",
      "avatar_url": "https://avatars1.githubusercontent.com/u/60206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dwf",
      "html_url": "https://github.com/dwf",
      "followers_url": "https://api.github.com/users/dwf/followers",
      "following_url": "https://api.github.com/users/dwf/following{/other_user}",
      "gists_url": "https://api.github.com/users/dwf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dwf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dwf/subscriptions",
      "organizations_url": "https://api.github.com/users/dwf/orgs",
      "repos_url": "https://api.github.com/users/dwf/repos",
      "events_url": "https://api.github.com/users/dwf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dwf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-08T23:54:52Z",
    "updated_at": "2011-04-08T23:54:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "Had a look at that already, the trouble I see is a) there's no way that I can see to cleanly halt processing and tell the user they made a mistake from within a Checker (though it just occurred to me that you might be able to do it via a custom Handler class that messes with the shell object), b) the whole collisions issue: right now \"guiref = lambda x: 5\" means that subsequent calls to guiref(3) get handed off to that lambda function, and I think that's the correct behaviour. So I guess this handler would have to inspect the user namespace for things that shadow a magic command and defer to that, but is there a way for the handler to abort and let the checker pipeline continue?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/976325",
    "html_url": "https://github.com/ipython/ipython/issues/342#issuecomment-976325",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/342",
    "id": 976325,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk3NjMyNQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-09T00:00:45Z",
    "updated_at": "2011-04-09T00:00:45Z",
    "author_association": "MEMBER",
    "body": "The collisions are already dealt with in AutoMagicChecker (that's the\nis_shadowed call). I think the trick is with how line_info gets parsed.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/976331",
    "html_url": "https://github.com/ipython/ipython/issues/342#issuecomment-976331",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/342",
    "id": 976331,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk3NjMzMQ==",
    "user": {
      "login": "dwf",
      "id": 60206,
      "node_id": "MDQ6VXNlcjYwMjA2",
      "avatar_url": "https://avatars1.githubusercontent.com/u/60206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dwf",
      "html_url": "https://github.com/dwf",
      "followers_url": "https://api.github.com/users/dwf/followers",
      "following_url": "https://api.github.com/users/dwf/following{/other_user}",
      "gists_url": "https://api.github.com/users/dwf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dwf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dwf/subscriptions",
      "organizations_url": "https://api.github.com/users/dwf/orgs",
      "repos_url": "https://api.github.com/users/dwf/repos",
      "events_url": "https://api.github.com/users/dwf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dwf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-09T00:03:41Z",
    "updated_at": "2011-04-09T00:03:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "Wait, checkers have a reference to the shell object too. So I guess a) is possible via a call to showtraceback(), and this is all accomplishable with some care in AutoMagicChecker.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/976345",
    "html_url": "https://github.com/ipython/ipython/issues/342#issuecomment-976345",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/342",
    "id": 976345,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk3NjM0NQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-09T00:09:46Z",
    "updated_at": "2011-04-09T00:09:46Z",
    "author_association": "MEMBER",
    "body": "I'm not sure that calling showtraceback in a checker is the right way to do it. That sounds messy. But you could try the shell.auto_rewrite_input method in the handler. So `exit()` gets rewritten to `exit`.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/976423",
    "html_url": "https://github.com/ipython/ipython/issues/342#issuecomment-976423",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/342",
    "id": 976423,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk3NjQyMw==",
    "user": {
      "login": "dwf",
      "id": 60206,
      "node_id": "MDQ6VXNlcjYwMjA2",
      "avatar_url": "https://avatars1.githubusercontent.com/u/60206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dwf",
      "html_url": "https://github.com/dwf",
      "followers_url": "https://api.github.com/users/dwf/followers",
      "following_url": "https://api.github.com/users/dwf/following{/other_user}",
      "gists_url": "https://api.github.com/users/dwf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dwf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dwf/subscriptions",
      "organizations_url": "https://api.github.com/users/dwf/orgs",
      "repos_url": "https://api.github.com/users/dwf/repos",
      "events_url": "https://api.github.com/users/dwf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dwf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-09T00:45:33Z",
    "updated_at": "2011-04-09T00:45:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Well, you only want to rewrite it in the case that there is no variable 'exit' in the user namespace; so I guess the AutoMagicChecker would conditionally dispatch one handler or the other? (Or none). I agree auto_rewrite_input should be called in that case.\n\nI think exit() and quit() should probably be rewritten, but it's unclear what to do about other magics, if anything. That's where showtraceback would come in; raise another exception explaining that you don't call magics with parens like that in general. But I guess the two issues can be dealt with in separate patches.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/977230",
    "html_url": "https://github.com/ipython/ipython/issues/342#issuecomment-977230",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/342",
    "id": 977230,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk3NzIzMA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-09T12:37:13Z",
    "updated_at": "2011-04-09T12:37:13Z",
    "author_association": "MEMBER",
    "body": "If there's an 'exit' in the user namespace, AutoMagicChecker will return\nNone, and it won't be transformed by any handler.\n\nI would probably rewrite the general case where someone calls \"magic()\"\ninstead of \"magic\". I don't think many people will try to call them with\narguments - that's never been how they work (AFAIK), and all the information\nabout them shows how to call them.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/75101301",
    "html_url": "https://github.com/ipython/ipython/issues/342#issuecomment-75101301",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/342",
    "id": 75101301,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MTAxMzAx",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-19T17:53:39Z",
    "updated_at": "2015-02-19T17:53:39Z",
    "author_association": "MEMBER",
    "body": "`exit()` and `quit()` now seem to work fine.\n"
  }
]
