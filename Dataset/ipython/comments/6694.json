[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59105924",
    "html_url": "https://github.com/ipython/ipython/pull/6694#issuecomment-59105924",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6694",
    "id": 59105924,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTA1OTI0",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-14T19:54:49Z",
    "updated_at": "2014-10-14T19:54:49Z",
    "author_association": "MEMBER",
    "body": "I can also imagine that at some point we might want to abstract away the storage into some kind of ConfigManager so people can override it to use a database or something. But since the server config already lives in straightforward files in the profile directory, I think we can kick that can down the road a bit.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59106134",
    "html_url": "https://github.com/ipython/ipython/pull/6694#issuecomment-59106134",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6694",
    "id": 59106134,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTA2MTM0",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-14T19:56:06Z",
    "updated_at": "2014-10-14T19:56:06Z",
    "author_association": "MEMBER",
    "body": "ping @ellisonbg @minrk - I know you don't get all updates from Github, and I'd like you to at least be aware of this one.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59106686",
    "html_url": "https://github.com/ipython/ipython/pull/6694#issuecomment-59106686",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6694",
    "id": 59106686,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTA2Njg2",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-14T19:59:43Z",
    "updated_at": "2014-10-14T19:59:43Z",
    "author_association": "MEMBER",
    "body": "Thanks, I will have a look!\n\nOn Tue, Oct 14, 2014 at 3:56 PM, Thomas Kluyver notifications@github.com\nwrote:\n\n> ping @ellisonbg https://github.com/ellisonbg @minrk\n> https://github.com/minrk - I know you don't get all updates from\n> Github, and I'd like you to at least be aware of this one.\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/pull/6694#issuecomment-59106134.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\n@ellisonbg on Twitter and GitHub\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59134910",
    "html_url": "https://github.com/ipython/ipython/pull/6694#issuecomment-59134910",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6694",
    "id": 59134910,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTM0OTEw",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-14T23:30:38Z",
    "updated_at": "2014-10-14T23:30:38Z",
    "author_association": "MEMBER",
    "body": "This now uses [jsonpatch](http://jsonpatch.com/) as a more robust way of modifying the config. It therefore adds the Python [jsonpatch package](https://github.com/stefankoegl/python-json-patch) as a dependency. This is pretty small, and @minrk indicated that we're thinking of using something like that in the future anyway, for incremental save of notebooks.\n\nFor when we come to implement the frontend side of this, [jiff](https://github.com/cujojs/jiff) was the only one of three JS implementations I looked at to support diffing (the others only appear to handle applying patches).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59266747",
    "html_url": "https://github.com/ipython/ipython/pull/6694#issuecomment-59266747",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6694",
    "id": 59266747,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MjY2NzQ3",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-15T20:02:45Z",
    "updated_at": "2014-10-15T20:02:45Z",
    "author_association": "MEMBER",
    "body": "Thinking about this some more, I don't think jsonpatch is quite right for this, because applying the patch will fail if the server-side state is not as the client expects it (e.g. if you replace an item that another client removed, or add an item that another client added). What we want is more like a nested key-value store, where the operations are 'set key to value' and 'clear key', and they work regardless of the current state of the data, like `d[k] = v` and `d.pop(k, None)`.\n\nI could:\n1. Use jsonpatch, but write custom code to apply it in a way that won't fail. I don't think this is a good idea, but I include it for completeness.\n2. Use a syntax similar to jsonpatch (a list of operations), but with operations `set` and `clear` instead of `add`, `replace`, `remove` etc.\n3. Go back to some variant of the custom thing I was using before, where it sends a partial form of the content with `null` values indicating that a key should be removed.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59294269",
    "html_url": "https://github.com/ipython/ipython/pull/6694#issuecomment-59294269",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6694",
    "id": 59294269,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5Mjk0MjY5",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-15T23:42:33Z",
    "updated_at": "2014-10-15T23:42:33Z",
    "author_association": "MEMBER",
    "body": "If the patch approach won't work, I would be inclined to take the simplest approach - update with special treatment of `null` (or `__removed__` or similar) for clearing values, rather than implementing a lesser transaction scheme.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59842069",
    "html_url": "https://github.com/ipython/ipython/pull/6694#issuecomment-59842069",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6694",
    "id": 59842069,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5ODQyMDY5",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-20T21:22:57Z",
    "updated_at": "2014-10-20T21:22:57Z",
    "author_association": "MEMBER",
    "body": "OK, I have dropped back to applying the UPDATE json as something like a dictionary update. It's now applied recursively, so we can nest config in sub-dicts at whatever level we like. null is still treated as an indication that the key can be removed (i.e. reset to its default value).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59968956",
    "html_url": "https://github.com/ipython/ipython/pull/6694#issuecomment-59968956",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6694",
    "id": 59968956,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5OTY4OTU2",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-21T17:53:12Z",
    "updated_at": "2014-10-21T17:53:12Z",
    "author_association": "MEMBER",
    "body": "This Thursday we will have Chris Colbert joining us to talk about an application framework. I am curious to see how that discussion affects our thinking on config.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59969578",
    "html_url": "https://github.com/ipython/ipython/pull/6694#issuecomment-59969578",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6694",
    "id": 59969578,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5OTY5NTc4",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-21T17:57:01Z",
    "updated_at": "2014-10-21T17:57:01Z",
    "author_association": "MEMBER",
    "body": "Just thinking aloud here....\n- I think the main concept in our python config has worked really well. Namely that the top level of the config is simply a name of a class that will be configured. I think we should use this abstraction as well in the client so that the keys at the top level are not things like pages, but the actual names of the JS objects.\n- If we want to have a separate level of page configuration, we can allow a \"page\" to declare which JS objects are needed for that page. When the page is loaded a single call to the config API can grab the config set for all objects needed.\n- I think that our JS objects should take a `config` argument and that the config should be passed to children instances, which contain the config for those children.\n- +1 for the JS objects themselves having the config defaults.\n\nBasically, the summary is that I think we should simply use the same design as our Python config API (minus the traitlets part of it).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59974610",
    "html_url": "https://github.com/ipython/ipython/pull/6694#issuecomment-59974610",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6694",
    "id": 59974610,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5OTc0NjEw",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-21T18:28:13Z",
    "updated_at": "2014-10-21T18:28:13Z",
    "author_association": "MEMBER",
    "body": "Well, the _top_ level keys for our Python config are actually the filenames, e.g. `ipython_notebook_config`, which apply to particular applications. The 'section' here is roughly analogous: the notebook page can make one AJAX call for the notebook config section, plus maybe one for common config, instead of one request for each class it wants to configure.\n\n> I think the main concept in our python config has worked really well. Namely that the top level of the config is simply a name of a class that will be configured.\n\nI wouldn't go nearly as far as 'really well'. The fact that the class name of every single configurable object is part of our config format has been an annoyance when refactoring. I would use similar names to our JS objects, but I wouldn't write the code in such a way that the config names have to match the class names. I also wouldn't force every config value to be nested inside a class - e.g. I want to have a config value specifying nbextensions to load, which is really outside the objects.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/59983136",
    "html_url": "https://github.com/ipython/ipython/pull/6694#issuecomment-59983136",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6694",
    "id": 59983136,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5OTgzMTM2",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-21T19:22:08Z",
    "updated_at": "2014-10-21T19:22:08Z",
    "author_association": "MEMBER",
    "body": "Over time, I think we are going to move to a design that makes our\ndifferent components (notebook, terminal, dashboard, text editor, variable\ninspector) more modular and isolated. We may end up making each of these\nthings separate repos and projects as we move to jupyter. This will ease\nthe burden for us to be all things to all people by making it easier for\ndifferent groups to build customized web-apps using our components. While I\nthink it is appropriate for us to have our config be \"page\" driven at the\ntop-level, I don't want us to make assumptions about which objects are on\nwhich pages. Our config REST API should be flexible enough to handle these\ncases. The Python config API is flexible in this way.\n\nI can imagine that it might be nice to have a layer of indirection between\nour class name and the names used in the config system, but I am afraid\nthat the same difficulties would arise when trying to refactor that mapping\nlayer.\n\nI do think there are good reasons to say that everything that needs config\nshould be a class. If config lives outside a class then so do defaults,\nwhich gets awkward. Another point that came up in NYC last week is the idea\nof using closures to isolate the private parts of our JS APIs. In that\ncontext each closure would return an object having the public API.\n\nOn Tue, Oct 21, 2014 at 11:28 AM, Thomas Kluyver notifications@github.com\nwrote:\n\n> Well, the _top_ level keys for our Python config are actually the\n> filenames, e.g. ipython_notebook_config, which apply to particular\n> applications. The 'section' here is roughly analogous: the notebook page\n> can make one AJAX call for the notebook config section, plus maybe one for\n> common config, instead of one request for each class it wants to configure.\n> \n> I think the main concept in our python config has worked really well.\n> Namely that the top level of the config is simply a name of a class that\n> will be configured.\n> \n> I wouldn't go nearly as far as 'really well'. The fact that the class name\n> of every single configurable object is part of our config format has been\n> an annoyance when refactoring. I would use similar names to our JS objects,\n> but I wouldn't write the code in such a way that the config names have to\n> match the class names. I also wouldn't force every config value to be\n> nested inside a class - e.g. I want to have a config value specifying\n> nbextensions to load, which is really outside the objects.\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/pull/6694#issuecomment-59974610.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\n@ellisonbg on Twitter and GitHub\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/60068794",
    "html_url": "https://github.com/ipython/ipython/pull/6694#issuecomment-60068794",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6694",
    "id": 60068794,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMDY4Nzk0",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-22T11:08:20Z",
    "updated_at": "2014-10-22T11:08:26Z",
    "author_association": "MEMBER",
    "body": "As thomas I'm -1 on trait like config. I am really intrigued about omiscient.js and react.js react-cursor.js that are made almost completely around the principle on reacting on a change on a json-like structure. \n\nThe principle is that you expose this json structure only through the \"cursor\", and mutate it only through the cursor, which have the advantage that when you pass a subpart of the config to an objet if basically cannot walk \"up\" the config.\n\nSide note, I would be also really interested in looking at this to actually build the notebook interface.\nIt would mean that you basically only act on the json-document structure, and the UI update itself to reflect the changes. This also give you for free partial sync. \n\nThink [this](http://react-json-editor.bitballoon.com/examples/react-state-editor/webapp/) over websocket.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/60132586",
    "html_url": "https://github.com/ipython/ipython/pull/6694#issuecomment-60132586",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6694",
    "id": 60132586,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMTMyNTg2",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-22T18:33:10Z",
    "updated_at": "2014-10-22T18:33:10Z",
    "author_association": "MEMBER",
    "body": "@Carreau those things look very interesting, and we should certainly look at things like that when we're working out live sync in the notebook. But for config, I think it's worth keeping it simple, without lots of flashy magical javascript stuff.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/60133347",
    "html_url": "https://github.com/ipython/ipython/pull/6694#issuecomment-60133347",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6694",
    "id": 60133347,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMTMzMzQ3",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-22T18:37:58Z",
    "updated_at": "2014-10-22T18:37:58Z",
    "author_association": "MEMBER",
    "body": "+1 on just focusing on config for now\n\nOn Wed, Oct 22, 2014 at 11:33 AM, Thomas Kluyver notifications@github.com\nwrote:\n\n> @Carreau https://github.com/Carreau those things look very interesting,\n> and we should certainly look at things like that when we're working out\n> live sync in the notebook. But for config, I think it's worth keeping it\n> simple, without lots of flashy magical javascript stuff.\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/pull/6694#issuecomment-60132586.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\n@ellisonbg on Twitter and GitHub\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/60134229",
    "html_url": "https://github.com/ipython/ipython/pull/6694#issuecomment-60134229",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6694",
    "id": 60134229,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMTM0MjI5",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-22T18:43:46Z",
    "updated_at": "2014-10-22T18:43:46Z",
    "author_association": "MEMBER",
    "body": "I'm just saying they are two views of two similar problem. You try to convolve a function with cosine, and someone speak to you about fourrier transform, and you are just  saying that we shoudl take problem separately. \n\nCursor seem to be a really elegant way of propagating config, I just think they are worth looking into. We did not have config in js for years, there is no need to rush. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/60688264",
    "html_url": "https://github.com/ipython/ipython/pull/6694#issuecomment-60688264",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6694",
    "id": 60688264,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNjg4MjY0",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-27T23:34:56Z",
    "updated_at": "2014-10-27T23:34:56Z",
    "author_association": "MEMBER",
    "body": "Thinking about this some more, I have made PATCH requests return the updated config JSON, so that the frontend only needs to send the config changes and store the result. Otherwise, both the server and the JS would need to merge the changes into their config objects separately.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61031305",
    "html_url": "https://github.com/ipython/ipython/pull/6694#issuecomment-61031305",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6694",
    "id": 61031305,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMDMxMzA1",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-30T01:06:09Z",
    "updated_at": "2014-10-30T01:06:09Z",
    "author_association": "MEMBER",
    "body": "I'm really hoping to get this landed before 3.0 - I'm finding that I want it even in things like my citations extension, to store a user ID for talking to the Zotero API.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/62040092",
    "html_url": "https://github.com/ipython/ipython/pull/6694#issuecomment-62040092",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6694",
    "id": 62040092,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDQwMDky",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-06T19:51:35Z",
    "updated_at": "2014-11-06T19:51:35Z",
    "author_association": "MEMBER",
    "body": "Rebased, and tests passing - please review.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/62849711",
    "html_url": "https://github.com/ipython/ipython/pull/6694#issuecomment-62849711",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6694",
    "id": 62849711,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyODQ5NzEx",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-13T06:58:32Z",
    "updated_at": "2014-11-13T06:58:32Z",
    "author_association": "MEMBER",
    "body": "Woo!\n"
  }
]
