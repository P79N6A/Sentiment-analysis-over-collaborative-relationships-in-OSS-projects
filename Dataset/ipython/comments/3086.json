[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/16411636",
    "html_url": "https://github.com/ipython/ipython/issues/3086#issuecomment-16411636",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3086",
    "id": 16411636,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NDExNjM2",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-15T21:10:28Z",
    "updated_at": "2013-04-15T21:10:28Z",
    "author_association": "MEMBER",
    "body": "Having written [this notebook](http://nbviewer.ipython.org/5303304) as a toy, I think this should be fairly easy.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17267438",
    "html_url": "https://github.com/ipython/ipython/issues/3086#issuecomment-17267438",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3086",
    "id": 17267438,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MjY3NDM4",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-01T03:42:26Z",
    "updated_at": "2013-05-01T03:42:26Z",
    "author_association": "MEMBER",
    "body": "The main usage case I can see for this is being able to save a notebook temporarily in the browser while the connection to the server is down.  I probably wouldn't target this to 1.0 though.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17267469",
    "html_url": "https://github.com/ipython/ipython/issues/3086#issuecomment-17267469",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3086",
    "id": 17267469,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MjY3NDY5",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-01T03:44:25Z",
    "updated_at": "2013-05-01T03:44:25Z",
    "author_association": "MEMBER",
    "body": "I think save is the wrong word - 'download' is the action that should be able to be pure javacsript.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17267523",
    "html_url": "https://github.com/ipython/ipython/issues/3086#issuecomment-17267523",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3086",
    "id": 17267523,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MjY3NTIz",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-01T03:47:18Z",
    "updated_at": "2013-05-01T03:47:18Z",
    "author_association": "MEMBER",
    "body": "Ahh, then I was confused about the meaning of this PR.  Do you mean a \"download\" that doesn't hit the server?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/17267719",
    "html_url": "https://github.com/ipython/ipython/issues/3086#issuecomment-17267719",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3086",
    "id": 17267719,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MjY3NzE5",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-01T03:58:51Z",
    "updated_at": "2013-05-01T03:58:51Z",
    "author_association": "MEMBER",
    "body": "yes - it is a particularly frustrating situation to know that you have the whole document available in memory in the browser, but you can't download or save it because the server has crashed, even though it's fairly simple javascript to simply launch a download with the data fully in-browser.  I should note that when we have persistent URLs, this won't be as big of a problem, because restarting the server will allow regular saves to resume at the same URL.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/19282833",
    "html_url": "https://github.com/ipython/ipython/issues/3086#issuecomment-19282833",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3086",
    "id": 19282833,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MjgyODMz",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-11T18:31:40Z",
    "updated_at": "2013-06-11T18:31:40Z",
    "author_association": "MEMBER",
    "body": "> this won't be as big of a problem, because restarting the server will allow regular saves to resume at the same URL\n\nI haven't kept up with the checkpointing implementation, so maybe it takes care of the main pain points, but resuming at the same URL is not enough. Suppose I have done extensive markdown editing (i.e. browser side only changes) and now want to preserve thous, but the server crashed.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/19283194",
    "html_url": "https://github.com/ipython/ipython/issues/3086#issuecomment-19283194",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3086",
    "id": 19283194,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MjgzMTk0",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-11T18:37:15Z",
    "updated_at": "2013-06-11T18:37:15Z",
    "author_association": "MEMBER",
    "body": "> I haven't kept up with the checkpointing implementation, so maybe it takes care of the main pain points, but resuming at the same URL is not enough. Suppose I have done extensive markdown editing (i.e. browser side only changes) and now want to preserve thous, but the server crashed.\n\nNote that editting any cell now trigger a dirty event (emitted by CodeMirror.onChange()). Not sure if the save happend while editting a cell what the save fill actually get. current Cm value or before starting to edit. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22435846",
    "html_url": "https://github.com/ipython/ipython/issues/3086#issuecomment-22435846",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3086",
    "id": 22435846,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDM1ODQ2",
    "user": {
      "login": "andreabedini",
      "id": 69135,
      "node_id": "MDQ6VXNlcjY5MTM1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/69135?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andreabedini",
      "html_url": "https://github.com/andreabedini",
      "followers_url": "https://api.github.com/users/andreabedini/followers",
      "following_url": "https://api.github.com/users/andreabedini/following{/other_user}",
      "gists_url": "https://api.github.com/users/andreabedini/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andreabedini/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andreabedini/subscriptions",
      "organizations_url": "https://api.github.com/users/andreabedini/orgs",
      "repos_url": "https://api.github.com/users/andreabedini/repos",
      "events_url": "https://api.github.com/users/andreabedini/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andreabedini/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-10T07:54:51Z",
    "updated_at": "2013-08-10T07:54:51Z",
    "author_association": "NONE",
    "body": "If I can chip in, I think the web app should take complete care of where/how to store the notebooks, ad. es:\n- We could use html5 local storage (no need to save, browser closes/crash, reopen the window and your notebook is still there, without need to pass by the server).\n- We could save on Dropbox, S3 or any other service accessible through a web api\n  \n  A notebook has an unique id to map it to a running kernel, at the moment it's a generated uuid. We can generalise this to be a url. The notebook can contact the kernel manager (or something else, I'm not entirely sure how it works now) and asking for the kernel for `s3://data.myorganization.org/95d2cd3708bd184d1d749ac1a22ae7a8/`\n\nDo you think it is possible to split kernel and notebook management entirely?\n\nPS: in my experiments I implemented this 'split' approach and kinda works. I have a rudimentary notebook interface that communicates with the kernel and saves in local storage.\n\nThanks for listening!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22436110",
    "html_url": "https://github.com/ipython/ipython/issues/3086#issuecomment-22436110",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3086",
    "id": 22436110,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDM2MTEw",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-10T08:21:33Z",
    "updated_at": "2013-08-10T08:21:33Z",
    "author_association": "MEMBER",
    "body": ">  We can generalise this to be a url.\n\nplease have a look at #3619 \n\n> We could use html5 local storage (no need to save, browser closes/crash, reopen the window and your notebook is still there, without need to pass by the server).\n\nFor some people it works, for other that change browser it is problematic. Also storage API is limited in size no ?\n\n> We could save on Dropbox, S3 or any other service accessible through a web api\n\nWoudln't there be security issues and cross origin issues ?\n\nSo I'm not totally sure we will make in browser save, but provide enough hook to have people implement it as extensions.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22436259",
    "html_url": "https://github.com/ipython/ipython/issues/3086#issuecomment-22436259",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3086",
    "id": 22436259,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDM2MjU5",
    "user": {
      "login": "andreabedini",
      "id": 69135,
      "node_id": "MDQ6VXNlcjY5MTM1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/69135?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andreabedini",
      "html_url": "https://github.com/andreabedini",
      "followers_url": "https://api.github.com/users/andreabedini/followers",
      "following_url": "https://api.github.com/users/andreabedini/following{/other_user}",
      "gists_url": "https://api.github.com/users/andreabedini/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andreabedini/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andreabedini/subscriptions",
      "organizations_url": "https://api.github.com/users/andreabedini/orgs",
      "repos_url": "https://api.github.com/users/andreabedini/repos",
      "events_url": "https://api.github.com/users/andreabedini/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andreabedini/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-10T08:33:27Z",
    "updated_at": "2013-08-10T08:33:27Z",
    "author_association": "NONE",
    "body": "> please have a look at #3619\n\nbeautiful, I will dig into that\n\n> For some people it works, for other that change browser it is problematic.\n\nsure, it will have to degrade gracefully if the browser doesn't support it.\n\n> Also storage API is limited in size no ?\n\nyes but no, the user can authorise storage size increase. Kindle's cloud reader stores all my books on the local storage.\n\n> Woudln't there be security issues and cross origin issues ?\n\nNo, they made it work, see https://tech.dropbox.com/2012/08/some-love-for-javascript-applications-2/\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/46995591",
    "html_url": "https://github.com/ipython/ipython/issues/3086#issuecomment-46995591",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3086",
    "id": 46995591,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTk1NTkx",
    "user": {
      "login": "rossant",
      "id": 1942359,
      "node_id": "MDQ6VXNlcjE5NDIzNTk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1942359?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rossant",
      "html_url": "https://github.com/rossant",
      "followers_url": "https://api.github.com/users/rossant/followers",
      "following_url": "https://api.github.com/users/rossant/following{/other_user}",
      "gists_url": "https://api.github.com/users/rossant/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rossant/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rossant/subscriptions",
      "organizations_url": "https://api.github.com/users/rossant/orgs",
      "repos_url": "https://api.github.com/users/rossant/repos",
      "events_url": "https://api.github.com/users/rossant/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rossant/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-24T16:35:21Z",
    "updated_at": "2014-06-24T16:35:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I should note that when we have persistent URLs, this won't be as big of a problem, because restarting the server will allow regular saves to resume at the same URL.\n\nThank you, you just saved me hours of work lost... I keep getting permission errors on `.ipynb_checkpoints` with the notebook (probably due to peculiarities of my setup on Windows). I didn't realize that my saves were uneffective, until I noticed the discrete `Internal Server Error` at the top. Nothing had been saved at all. Fortunately, I found your suggestion that worked fine for me. But I already had this problem before and I hadn't been able to save my work.\n\nSo it's very easy to be in a situation where 1) none of your work has been saved, 2) you have no idea it's happening, 3) you have _no way_ to save your notebook while the server is dead. Yet, I guess it would be easy to write a client-side-only `save` feature.\n\nWhat I would suggest, beyond that browser-side save feature, is a much more visible and disruptive error message when the notebook saving has failed.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/316767859",
    "html_url": "https://github.com/ipython/ipython/issues/3086#issuecomment-316767859",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3086",
    "id": 316767859,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjc2Nzg1OQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-20T17:03:11Z",
    "updated_at": "2017-07-20T17:03:11Z",
    "author_association": "MEMBER",
    "body": "Closing as this issue is not in IPython itself and if still problematic and relevant should be opened on the right repository.  This will allow to keep the number of opened issue on the IPython repo under control. \r\n\r\nFeel free to keep commenting or reopen if necessary.\r\n\r\nThanks."
  }
]
