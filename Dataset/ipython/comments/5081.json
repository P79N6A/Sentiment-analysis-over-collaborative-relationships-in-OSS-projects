[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/35044377",
    "html_url": "https://github.com/ipython/ipython/pull/5081#issuecomment-35044377",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5081",
    "id": 35044377,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDQ0Mzc3",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-14T00:41:20Z",
    "updated_at": "2014-02-14T00:41:20Z",
    "author_association": "MEMBER",
    "body": "Hm, this is backwards from what I was expecting. I had thought we would include _only_ `<app>/main.js` in a script tag, which would load everything else with require, rather than the other way around.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/35060108",
    "html_url": "https://github.com/ipython/ipython/pull/5081#issuecomment-35060108",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5081",
    "id": 35060108,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDYwMTA4",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-14T06:40:21Z",
    "updated_at": "2014-02-14T06:40:21Z",
    "author_association": "MEMBER",
    "body": "> Hm, this is backwards from what I was expecting. I had thought we would include only <app>/main.js in a script tag, which would load everything else with require, rather than the other way around.\n\nYes, almost, in the end. I tried to do it at once using shims, but it is not super straitforward.\nProblem is that most of our javascript modules rely on  `IPython` global to access other modules and mutate it. \n\n`require` and `define` call works in a completly different manner wich is that the module have to define what it does require statically before the module definition being executed.\n\nWe could have in main\n\n```\nrequire('utils' , function(utils){\n    require('cell', function(cell){\n        require('codecell', function(codecell){\n               .... IPython.utils = utils\n               .... IPython...\n```\n\nBut it is ugly. \n\nI tried to put everything into a `require.shim`, but it does not prevent you from dooing the dependency graph. \n\nAnd obviously converting scripts from the top down doesn't work because of the async nature of require. \n\nSo next steps would be to convert `config.js`then `tooltip.js`then ... one by one into dependence of either `main.js` or the other file they are needed for. Test, do the same for next file, until no more files are in templates.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36408193",
    "html_url": "https://github.com/ipython/ipython/pull/5081#issuecomment-36408193",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5081",
    "id": 36408193,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDA4MTkz",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-01T00:13:25Z",
    "updated_at": "2014-03-01T00:13:25Z",
    "author_association": "MEMBER",
    "body": "We are going to have to think very carefully about how to use require. We actually have two dependency graphs:\n- The actual source code dependency graphs. IOW, which .js files depend on which other .js files.\n- The instantiation of JS objects in the IPython namespace and references to those in various places.\n\nIt is not at all clear how to use require in this type of context.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36408381",
    "html_url": "https://github.com/ipython/ipython/pull/5081#issuecomment-36408381",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5081",
    "id": 36408381,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDA4Mzgx",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-01T00:16:37Z",
    "updated_at": "2014-03-01T00:21:57Z",
    "author_association": "MEMBER",
    "body": "I thought it was pretty clear.  The js file dependency graph is immaterial since you really should be compressing all of the js files to one single js file (and require has optimizing tools to do this).  So you only have to think about the object dependency graph, and that is done with define/require statements.\n\n(and can I say that I can't wait for javascript ES6 modules?)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36408684",
    "html_url": "https://github.com/ipython/ipython/pull/5081#issuecomment-36408684",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5081",
    "id": 36408684,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDA4Njg0",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-01T00:22:21Z",
    "updated_at": "2014-03-01T00:22:21Z",
    "author_association": "MEMBER",
    "body": "But there are two different types of dependencies:\n- When a file depends on objects (prototypes), functions, etc. in other\n  files (codecell.js depends on completer.Completer (the class not the\n  instance), notebook.js depends on codecell.CodeCell, etc.)\n- When a file depends on a global instance of a class that sits somewhere\n  else (notebook.js depends on IPython.SaveWidget, etc.).\n\nHow do you distinguish between these two cases? In the second case, who is\nresponsible for instantiating the objects? It shouldn't be main.js.\n\nOn Fri, Feb 28, 2014 at 4:16 PM, Jason Grout notifications@github.comwrote:\n\n> I thought it was pretty clear. The js file dependency graph is immaterial\n> since you really should be compressing all of the js files to one single js\n> file (and require has optimizing tools to do this). So you only have to\n> think about the object dependency graph, and that is done with\n> define/require statements.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/5081#issuecomment-36408381\n> .\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36419474",
    "html_url": "https://github.com/ipython/ipython/pull/5081#issuecomment-36419474",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5081",
    "id": 36419474,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDE5NDc0",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-01T08:26:29Z",
    "updated_at": "2014-03-01T08:26:29Z",
    "author_association": "MEMBER",
    "body": "Brian, I think you are missusing / missinterpreting what require does. Require is more like python **`import`**, and you are mixing what is Module an a Class defined in this module. \nI know you know the difference, you are just probably mixing with the view you have a python import mechanism with the weird way javascript works. \n\n>  When a file depends on a global instance of a class that sits somewhere\n> else (notebook.js depends on IPython.SaveWidget, etc.).\n\nA _file_ (I suppose you mean a module) should **never** rely on global. A file is just a file that define a module and exports and their dependencies. \n**If** a module require globals you define a `Module.init(...)` or `Module.configure()` method that do **not** use prototype to set up anything.\n\nIPython `save_widget` should **never** be used as a global, if a `notebook` js module instance need access to `save_widget` is should be passed as an argument to the constructor by whatever constructed it. \n\nBy the way, it does not really depend on `save_widget`, we shoudl just define a callback that is called on rename saved. \n\nTu reuse expressions you like, \"As a theoretical physicist you need to abstract this\" (this time it is not a sphere), and we have a \"leaky abstraction\" between what a Module is, the module once loaded/initiated and the instances.\n\nHaving this better decoupled will simplify dealing with file and the reuse of modules.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36540300",
    "html_url": "https://github.com/ipython/ipython/pull/5081#issuecomment-36540300",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5081",
    "id": 36540300,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTQwMzAw",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-03T18:21:17Z",
    "updated_at": "2014-03-03T18:21:17Z",
    "author_association": "MEMBER",
    "body": "Ok, let me try to summarize what you are saying...\n- We would get rid of the `IPython` JS namespace entirely. No globals.\n- When modules/files depend on each other, we use require.\n- When classes depend on instances of other classes, just pass the instance to the constructor.\n- `main.js` will still be the place where all of the instances are created and passed to each other.\n- Thus `main.js` will require the modules containing the class definitions it needs.\n\nIs this an accurate summary?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36605136",
    "html_url": "https://github.com/ipython/ipython/pull/5081#issuecomment-36605136",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5081",
    "id": 36605136,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjA1MTM2",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-04T09:15:44Z",
    "updated_at": "2014-03-04T09:15:44Z",
    "author_association": "MEMBER",
    "body": "> We would get rid of the IPython JS namespace entirely. No globals.\n\nNot using globals, we can still expose them fro convenience and backward compat : \n\n```\nrequire('foo', function(foo){\n    IPython.foo = foo;\n})\n```\n\nalso requiring the same module should give you handle on the same module, so everythong shoudl still be accessible.\n\n`main.js` would not require **all**, only what is needed to startup the notebook, the rest will be loaded via dependency. At the beginning I suppose we will have a lot in `main.js` but through isolation in the end main should be really shallow.\n\nBut you mostly describe well.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36701259",
    "html_url": "https://github.com/ipython/ipython/pull/5081#issuecomment-36701259",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5081",
    "id": 36701259,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzAxMjU5",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-05T01:36:27Z",
    "updated_at": "2014-03-05T01:36:27Z",
    "author_association": "MEMBER",
    "body": "@Carreau Can open an issue and summarize the main points of the design there. This PR itself to way too early to be meaningful. I would rather close the PR and track the discussion in an issue. This allows us to have a PR queue that is focused on stuff that is approaching merge readiness.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/45017881",
    "html_url": "https://github.com/ipython/ipython/pull/5081#issuecomment-45017881",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5081",
    "id": 45017881,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDE3ODgx",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-03T20:44:52Z",
    "updated_at": "2014-06-03T20:44:52Z",
    "author_association": "MEMBER",
    "body": "> I had thought we would include only <app>/main.js in a script tag, which would load everything else with require, rather than the other way around.\n\nAfter playing with require.js I'm convinced that this is doable and I do think this is the right way.\n\n> We could have in main\n> \n> require('utils' , function(utils){\n>     require('cell', function(cell){\n>         require('codecell', function(codecell){\n>                .... IPython.utils = utils\n>                .... IPython...\n> But it is ugly.\n\nRequire has support for multiple imports, I use it all the time in the widget stuff.  I don't think it looks ugly at all when written like this:\n\n``` js\nrequire(['utils', 'cells', 'codecell'] , \n    function(utils, cell, codecell){\n```\n\n> And obviously converting scripts from the top down doesn't work because of the async nature of require.\n\nI'm not sure why you say this.  Yes top-down wouldn't work for a \n- `require`  \n- `require`  \n- `require`  \n\nchain, but it does work just fine with a  \n- `require`  \n- `define`  \n- `define`  \n\nchain (that's how I do it in the widget code, see `/widgets/js/init.js`).\n\n@Carreau are you still planning on tackling this?  I've been hacking away at the widget persistence stuff which would benefit greatly from require.js being implemented everywhere.  (I use the r.js optimizer to \"compile\" and minify the dependency graph into one file.)  If you don't have time to work on this or don't want to tackle it I can take over for you.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/45022781",
    "html_url": "https://github.com/ipython/ipython/pull/5081#issuecomment-45022781",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5081",
    "id": 45022781,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDIyNzgx",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-03T21:25:53Z",
    "updated_at": "2014-06-03T21:25:53Z",
    "author_association": "MEMBER",
    "body": "Hey Jon,\n\nUntil roughly 20rh July you can assume that I don't have time for anything, so feel free to take on this work. I have have some free time, or I really need a break, I will be happy to have a look at what you are doing though.\n\nEnvoyé de mon iPhone\n\n> Le 3 juin 2014 à 22:44, Jonathan Frederic notifications@github.com a écrit :\n> \n> I had thought we would include only /main.js in a script tag, which would load everything else with require, rather than the other way around.\n> \n> After playing with require.js I'm convinced that this is doable and I do think this is the right way.\n> \n> We could have in main\n> \n> require('utils' , function(utils){\n> require('cell', function(cell){\n> require('codecell', function(codecell){\n> .... IPython.utils = utils\n> .... IPython...\n> But it is ugly.\n> \n> Require has support for multiple imports, I use it all the time in the widget stuff. I don't think it looks ugly at all when written like this:\n> \n> require(['utils', 'cells', 'codecell'] , \n>     function(utils, cell, codecell){\n> And obviously converting scripts from the top down doesn't work because of the async nature of require.\n> \n> I'm not sure why you say this. Yes top-down wouldn't work for a\n> \n> require\n> require\n> require\n> chain, but it does work just fine with a\n> \n> require\n> define\n> define\n> chain (that's how I do it in the widget code, see /widgets/js/init.js).\n> \n> @Carreau are you still planning on tackling this? I've been hacking away at the widget persistence stuff which would benefit greatly from require.js being implemented everywhere. (I use the r.js optimizer to \"compile\" and minify the dependency graph into one file.) If you don't have time to work on this or don't want to tackle it I can take over for you.\n> \n> —\n> Reply to this email directly or view it on GitHub.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/46092002",
    "html_url": "https://github.com/ipython/ipython/pull/5081#issuecomment-46092002",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5081",
    "id": 46092002,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDkyMDAy",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-14T16:09:23Z",
    "updated_at": "2014-06-14T16:09:23Z",
    "author_association": "MEMBER",
    "body": "Closing as @jdfreder is taking care of it.\n"
  }
]
