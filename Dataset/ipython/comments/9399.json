[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/210130931",
    "html_url": "https://github.com/ipython/ipython/pull/9399#issuecomment-210130931",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9399",
    "id": 210130931,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDEzMDkzMQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-14T20:16:18Z",
    "updated_at": "2016-04-14T20:16:18Z",
    "author_association": "MEMBER",
    "body": "Whoooo ! Will review !\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/210333588",
    "html_url": "https://github.com/ipython/ipython/pull/9399#issuecomment-210333588",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9399",
    "id": 210333588,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDMzMzU4OA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-15T07:38:12Z",
    "updated_at": "2016-04-15T07:38:12Z",
    "author_association": "MEMBER",
    "body": "So before reviewing I'll still ask: It seem like PTShell make it more difficult (impossible) to us this in things like emacs inferior shell. It will likely not be the only one, so should we really get rid of the readline one ?Or leave it as an option ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/210336132",
    "html_url": "https://github.com/ipython/ipython/pull/9399#issuecomment-210336132",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9399",
    "id": 210336132,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDMzNjEzMg==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-15T07:40:24Z",
    "updated_at": "2016-04-15T07:40:24Z",
    "author_association": "MEMBER",
    "body": "> So before reviewing I'll still ask: It seem like PTShell make it more difficult (impossible) to us this in things like emacs inferior shell. It will likely not be the only one, so should we really get rid of the readline one ?Or leave it as an option ?\n\n+1 otherwise.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/210464215",
    "html_url": "https://github.com/ipython/ipython/pull/9399#issuecomment-210464215",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9399",
    "id": 210464215,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDQ2NDIxNQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-15T13:28:39Z",
    "updated_at": "2016-04-15T13:28:39Z",
    "author_association": "MEMBER",
    "body": "- Do we have an issue or something about use in emacs? How bad is it, and is there any chance things could get fixed?\n- What is emacs inferior shell doing/not doing that affects this? Do we know of any other examples that will be affected? Early on we thought that we might need the readline one for use over SSH, but prompt_toolkit turned out to work fine.\n\nI'm concerned that if we have two sets of terminal interaction code and are mainly using one, it will bit rot. Maybe we could split it out and have it as a separate package for emacs users to maintain? But the APIs the InteractiveShell subclasses use are not very well defined, so I'm not really keen on that either.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/210470978",
    "html_url": "https://github.com/ipython/ipython/pull/9399#issuecomment-210470978",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9399",
    "id": 210470978,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDQ3MDk3OA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-15T13:50:07Z",
    "updated_at": "2016-04-15T13:50:07Z",
    "author_association": "MEMBER",
    "body": "> Do we have an issue or something about use in emacs? How bad is it, and is there any chance things could get fixed?\n\nping @tacaswell \n\n> I'm concerned that if we have two sets of terminal interaction code and are mainly using one, it will bit rot. Maybe we could split it out and have it as a separate package for emacs users to maintain? But the APIs the InteractiveShell subclasses use are not very well defined, so I'm not really keen on that either.\n\nFair enough. We can always resurrect the code from git right ? That's what the `git dig` command from the git-archaeologist plugin is for ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/210637651",
    "html_url": "https://github.com/ipython/ipython/pull/9399#issuecomment-210637651",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9399",
    "id": 210637651,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDYzNzY1MQ==",
    "user": {
      "login": "tacaswell",
      "id": 199813,
      "node_id": "MDQ6VXNlcjE5OTgxMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/199813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tacaswell",
      "html_url": "https://github.com/tacaswell",
      "followers_url": "https://api.github.com/users/tacaswell/followers",
      "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
      "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
      "organizations_url": "https://api.github.com/users/tacaswell/orgs",
      "repos_url": "https://api.github.com/users/tacaswell/repos",
      "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tacaswell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-15T20:40:59Z",
    "updated_at": "2016-04-15T20:40:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am motivated to look in to this (and suspect that it can be fixed on the emacs side) and if not then on the pt side to not emit some escapes.\n\nEmacs chokes in a function that converts ansi escapes into emacs font faces.\n\nThis is 90% conjecture.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/210646600",
    "html_url": "https://github.com/ipython/ipython/pull/9399#issuecomment-210646600",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9399",
    "id": 210646600,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDY0NjYwMA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-15T21:06:53Z",
    "updated_at": "2016-04-15T21:06:53Z",
    "author_association": "MEMBER",
    "body": "Great, I'm glad someone has the motivation to investigate. We'll put this on hold for the moment then to see if you can work the issue out. If it's not possible, we'll work out what we're going to do.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/218116906",
    "html_url": "https://github.com/ipython/ipython/pull/9399#issuecomment-218116906",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9399",
    "id": 218116906,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODExNjkwNg==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-10T10:18:56Z",
    "updated_at": "2016-05-10T10:18:56Z",
    "author_association": "MEMBER",
    "body": "@tacaswell have you had a chance to look at this?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/218121196",
    "html_url": "https://github.com/ipython/ipython/pull/9399#issuecomment-218121196",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9399",
    "id": 218121196,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODEyMTE5Ng==",
    "user": {
      "login": "tacaswell",
      "id": 199813,
      "node_id": "MDQ6VXNlcjE5OTgxMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/199813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tacaswell",
      "html_url": "https://github.com/tacaswell",
      "followers_url": "https://api.github.com/users/tacaswell/followers",
      "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
      "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
      "organizations_url": "https://api.github.com/users/tacaswell/orgs",
      "repos_url": "https://api.github.com/users/tacaswell/repos",
      "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tacaswell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-10T10:39:27Z",
    "updated_at": "2016-05-10T10:39:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "A bit but not enough to resolve it.\n\nOn Tue, May 10, 2016, 06:18 Thomas Kluyver notifications@github.com wrote:\n\n> @tacaswell https://github.com/tacaswell have you had a chance to look\n> at this?\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/pull/9399#issuecomment-218116906\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/221334695",
    "html_url": "https://github.com/ipython/ipython/pull/9399#issuecomment-221334695",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9399",
    "id": 221334695,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMTMzNDY5NQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-24T16:52:50Z",
    "updated_at": "2016-05-24T16:52:50Z",
    "author_association": "MEMBER",
    "body": "@tacaswell any more updates? I'd like to get this code out before we release 5.0.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/221352664",
    "html_url": "https://github.com/ipython/ipython/pull/9399#issuecomment-221352664",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9399",
    "id": 221352664,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMTM1MjY2NA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-24T17:57:04Z",
    "updated_at": "2016-05-24T17:57:04Z",
    "author_association": "MEMBER",
    "body": "> I'd like to get this code out before we release 5.0.\n\nI would be +1 for merging, we can revert if **really** necessary, but I don't see us reverting PTK for now.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/221663187",
    "html_url": "https://github.com/ipython/ipython/pull/9399#issuecomment-221663187",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9399",
    "id": 221663187,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMTY2MzE4Nw==",
    "user": {
      "login": "tacaswell",
      "id": 199813,
      "node_id": "MDQ6VXNlcjE5OTgxMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/199813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tacaswell",
      "html_url": "https://github.com/tacaswell",
      "followers_url": "https://api.github.com/users/tacaswell/followers",
      "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
      "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
      "organizations_url": "https://api.github.com/users/tacaswell/orgs",
      "repos_url": "https://api.github.com/users/tacaswell/repos",
      "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tacaswell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-25T18:24:19Z",
    "updated_at": "2016-05-25T18:24:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "between day-job and mpl 1.5.2/2.0 I have had no time :disappointed: \n\nWhen is 5.0 slated to be out?\n\nattn @jorgenschaefer who might be able to tell me that is is just a minor configuration thing.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/221665168",
    "html_url": "https://github.com/ipython/ipython/pull/9399#issuecomment-221665168",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9399",
    "id": 221665168,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMTY2NTE2OA==",
    "user": {
      "login": "jorgenschaefer",
      "id": 2500270,
      "node_id": "MDQ6VXNlcjI1MDAyNzA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2500270?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorgenschaefer",
      "html_url": "https://github.com/jorgenschaefer",
      "followers_url": "https://api.github.com/users/jorgenschaefer/followers",
      "following_url": "https://api.github.com/users/jorgenschaefer/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorgenschaefer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorgenschaefer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorgenschaefer/subscriptions",
      "organizations_url": "https://api.github.com/users/jorgenschaefer/orgs",
      "repos_url": "https://api.github.com/users/jorgenschaefer/repos",
      "events_url": "https://api.github.com/users/jorgenschaefer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorgenschaefer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-25T18:31:17Z",
    "updated_at": "2016-05-25T18:31:17Z",
    "author_association": "NONE",
    "body": "I do not use ipython, so no idea about any of this, sorry. Emacs' `python.el` has some hardcoded stuff in `python-shell-completion-native-setup` that tries to use `readline` or `rlcompleter` in turn. I don't know at what point it fails, but the correct fix here would be (IMHO) to fix Emacs.\n\nThough, considering the release cycle, that can take a while.\n\nFor the curious, the Python code Emacs uses: https://github.com/emacs-mirror/emacs/blob/master/lisp/progmodes/python.el#L3206-L3254\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/221667551",
    "html_url": "https://github.com/ipython/ipython/pull/9399#issuecomment-221667551",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9399",
    "id": 221667551,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMTY2NzU1MQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-25T18:39:56Z",
    "updated_at": "2016-05-25T18:39:56Z",
    "author_association": "MEMBER",
    "body": "> between day-job and mpl 1.5.2/2.0 I have had no time\n\nI hear you. \n\n> When is 5.0 slated to be out?\n\nI'd like to have it out for end of June, to have pushed in conad for SciPy. \nAs it will be LTS, I'd like to release a beta relatively soon to get things battle tested. \n\n> I do not use ipython, so no idea about any of this, sorry. Emacs' python.el has some hardcoded stuff in python-shell-completion-native-setup that tries to use readline or rlcompleter in turn. I don't know at what point it fails, but the correct fix here would be (IMHO) to fix Emacs.\n\nThanks for pitching in. Will try to get a few  emacs-users to pitch in, will ping people on ML, and twitter. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/221860875",
    "html_url": "https://github.com/ipython/ipython/pull/9399#issuecomment-221860875",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9399",
    "id": 221860875,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMTg2MDg3NQ==",
    "user": {
      "login": "ludwigschwardt",
      "id": 392144,
      "node_id": "MDQ6VXNlcjM5MjE0NA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/392144?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ludwigschwardt",
      "html_url": "https://github.com/ludwigschwardt",
      "followers_url": "https://api.github.com/users/ludwigschwardt/followers",
      "following_url": "https://api.github.com/users/ludwigschwardt/following{/other_user}",
      "gists_url": "https://api.github.com/users/ludwigschwardt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ludwigschwardt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ludwigschwardt/subscriptions",
      "organizations_url": "https://api.github.com/users/ludwigschwardt/orgs",
      "repos_url": "https://api.github.com/users/ludwigschwardt/repos",
      "events_url": "https://api.github.com/users/ludwigschwardt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ludwigschwardt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-26T12:47:18Z",
    "updated_at": "2016-05-26T12:47:18Z",
    "author_association": "NONE",
    "body": "Does this remove the dependency on gnureadline on Macs? That would be nice :-)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/221861888",
    "html_url": "https://github.com/ipython/ipython/pull/9399#issuecomment-221861888",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9399",
    "id": 221861888,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMTg2MTg4OA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-26T12:52:04Z",
    "updated_at": "2016-05-26T12:52:04Z",
    "author_association": "MEMBER",
    "body": "Yep, and the dependency on pyreadline on Windows :-)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/221862735",
    "html_url": "https://github.com/ipython/ipython/pull/9399#issuecomment-221862735",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9399",
    "id": 221862735,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMTg2MjczNQ==",
    "user": {
      "login": "tacaswell",
      "id": 199813,
      "node_id": "MDQ6VXNlcjE5OTgxMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/199813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tacaswell",
      "html_url": "https://github.com/tacaswell",
      "followers_url": "https://api.github.com/users/tacaswell/followers",
      "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
      "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
      "organizations_url": "https://api.github.com/users/tacaswell/orgs",
      "repos_url": "https://api.github.com/users/tacaswell/repos",
      "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tacaswell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-26T12:55:58Z",
    "updated_at": "2016-05-26T12:55:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorgenschaefer The issue is not with calls into ipython, it is with colorizing the string that comes back from ptprompt\n\n```\nDebugger entered--Lisp error: (args-out-of-range \"\u001B[8D\u001B[0m\u001B[J\u001B[0;38;5;28mIn [\u001B[0;38;5;10;1m1\u001B[0;38;5;28m]: \u001B[8D\u001B[0m\n\u001B[J\u001B[0m\" 80)\n  string-match(\"\u001B\" \"\u001B[8D\u001B[0m\u001B[J\u001B[0;38;5;28mIn [\u001B[0;38;5;10;1m1\u001B[0;38;5;28m]: \u001B[8D\u001B[0m\n\\n\u001B[J\u001B[0m\" 80)\n  ansi-color-filter-apply(\"\u001B[?25l\u001B[8D\u001B[0m\u001B[J\u001B[0;38;5;28mIn [\u001B[0;38;5;10;1m1\u001B[0;38;5;28m]: \u001B[8D\u001B[0m\n\\n\u001B[J\u001B[0m\u001B[?7h\u001B[?12l\u001B[?25h\")\n  python-shell-comint-watch-for-first-prompt-output-filter(\"\u001B[?25l\u001B[8D\u001B[0m\u001B[J\u001B[0;38;5;28mIn [\u001B[0;38;5;10;1m1\u001B[0;38;5;28m]: \u001B[8D\u001B[0m\n\\n\u001B[J\u001B[0m\u001B[?7h\u001B[?12l\u001B[?25h\")\n  run-hook-with-args(python-shell-comint-watch-for-first-prompt-output-filter \"\u001B[?25l\u001B[8D\u001B[0m\u001B[J\u001B[0;38;5;28mIn [\u001B[0;38;5;10;1m1\u001B[0;38;5;28m]: \u001B[8D\u001B[0m\n\\n\u001B[J\u001B[0m\u001B[?7h\u001B[?12l\u001B[?25h\")\n  comint-output-filter(#<process Python> \"\u001B[?25l\u001B[8D\u001B[0m\u001B[J\u001B[0;38;5;28mIn [\u001B[0;38;5;10;1m1\u001B[0;38;5;28m]: \u001B[8D\u001B[0m\n\\n\u001B[J\u001B[0m\u001B[?7h\u001B[?12l\u001B[?25h\")\n\n```\n\nWhich given how badly gh is mangling this copy/paste makes me assume it is an encoding issue.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/221864104",
    "html_url": "https://github.com/ipython/ipython/pull/9399#issuecomment-221864104",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9399",
    "id": 221864104,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMTg2NDEwNA==",
    "user": {
      "login": "jorgenschaefer",
      "id": 2500270,
      "node_id": "MDQ6VXNlcjI1MDAyNzA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2500270?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorgenschaefer",
      "html_url": "https://github.com/jorgenschaefer",
      "followers_url": "https://api.github.com/users/jorgenschaefer/followers",
      "following_url": "https://api.github.com/users/jorgenschaefer/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorgenschaefer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorgenschaefer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorgenschaefer/subscriptions",
      "organizations_url": "https://api.github.com/users/jorgenschaefer/orgs",
      "repos_url": "https://api.github.com/users/jorgenschaefer/repos",
      "events_url": "https://api.github.com/users/jorgenschaefer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorgenschaefer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-26T13:02:17Z",
    "updated_at": "2016-05-26T13:02:17Z",
    "author_association": "NONE",
    "body": "Looks like a bug in `ansy-color-filter-apply`, again something to report to the Emacs maintainers :-)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/221872572",
    "html_url": "https://github.com/ipython/ipython/pull/9399#issuecomment-221872572",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9399",
    "id": 221872572,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMTg3MjU3Mg==",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-26T13:36:46Z",
    "updated_at": "2016-05-26T13:37:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "@tacaswell As a workaround, you can probably use `%colors NoColor` before execution the code which has the problem... Or is that problem happinging in lisp code? Can't actually read/parse it :-)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/221950862",
    "html_url": "https://github.com/ipython/ipython/pull/9399#issuecomment-221950862",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9399",
    "id": 221950862,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMTk1MDg2Mg==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-26T18:13:59Z",
    "updated_at": "2016-05-26T18:14:45Z",
    "author_association": "MEMBER",
    "body": "I think we add the discussion on twitter, and as far as I can remember it's a question of inferior-shell, vs ansi-terminal:\n\n`M-X ansi-term`\n\n![mx-ansi-term](https://cloud.githubusercontent.com/assets/335567/15585087/8c6262e4-2332-11e6-8da5-f47fecd832ef.gif)\n\n`M-x shell`\n![mxshell](https://cloud.githubusercontent.com/assets/335567/15585088/8c63dcfa-2332-11e6-9f41-801069dcf4ad.gif)\n\nI know there is a reason why you can't use ansi-term, but I'm not sure I remember why. \n\nAlso as we see on the screenshots, the color does works, it's so extra escape sequences that are broken, so I'm unsure NoColor is a solution. \n\n[edit] I have no clue what I am doing above. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/221952823",
    "html_url": "https://github.com/ipython/ipython/pull/9399#issuecomment-221952823",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9399",
    "id": 221952823,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMTk1MjgyMw==",
    "user": {
      "login": "tacaswell",
      "id": 199813,
      "node_id": "MDQ6VXNlcjE5OTgxMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/199813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tacaswell",
      "html_url": "https://github.com/tacaswell",
      "followers_url": "https://api.github.com/users/tacaswell/followers",
      "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
      "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
      "organizations_url": "https://api.github.com/users/tacaswell/orgs",
      "repos_url": "https://api.github.com/users/tacaswell/repos",
      "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tacaswell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-26T18:21:19Z",
    "updated_at": "2016-05-26T18:21:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "The reason I use shell instead of ansi-term is that in what `elpy-shell-switch-to-shell` (eventually) delegates to (hence why I tried to get @jorgenschaefer interested as I suspect that elpy will be getting this bug report in the near future).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/221955409",
    "html_url": "https://github.com/ipython/ipython/pull/9399#issuecomment-221955409",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9399",
    "id": 221955409,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMTk1NTQwOQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-26T18:30:49Z",
    "updated_at": "2016-05-26T18:30:49Z",
    "author_association": "MEMBER",
    "body": "> The reason I use shell instead of ansi-term is that in what elpy-shell-switch-to-shell (eventually) delegates to (hence why I tried to get @jorgenschaefer interested as I suspect that elpy will be getting this bug report in the near future).\n\nAh, yes I'm starting to remember.\n\nThen could elpy  be made configurable to use ansi-term ? Or is there a reason not to ? \n\n(https://www.masteringemacs.org/article/running-shells-in-emacs-overview) \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/221956117",
    "html_url": "https://github.com/ipython/ipython/pull/9399#issuecomment-221956117",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9399",
    "id": 221956117,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMTk1NjExNw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-26T18:33:24Z",
    "updated_at": "2016-05-26T18:33:24Z",
    "author_association": "MEMBER",
    "body": "@takluyver would one option be to \"extract\" the readline TIS thing into a separate package and \"offer it to the community\" [Yes I know this solution ~~sucks~~ is not optimal].\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/221956610",
    "html_url": "https://github.com/ipython/ipython/pull/9399#issuecomment-221956610",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9399",
    "id": 221956610,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMTk1NjYxMA==",
    "user": {
      "login": "jorgenschaefer",
      "id": 2500270,
      "node_id": "MDQ6VXNlcjI1MDAyNzA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2500270?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorgenschaefer",
      "html_url": "https://github.com/jorgenschaefer",
      "followers_url": "https://api.github.com/users/jorgenschaefer/followers",
      "following_url": "https://api.github.com/users/jorgenschaefer/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorgenschaefer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorgenschaefer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorgenschaefer/subscriptions",
      "organizations_url": "https://api.github.com/users/jorgenschaefer/orgs",
      "repos_url": "https://api.github.com/users/jorgenschaefer/repos",
      "events_url": "https://api.github.com/users/jorgenschaefer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorgenschaefer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-26T18:35:15Z",
    "updated_at": "2016-05-26T18:35:15Z",
    "author_association": "NONE",
    "body": "It is difficult to interact with ansi-term from Emacs proper. All the REPL modes use comint.\n\n(In theory, ipython should check termcap/terminfo capabilities and not send colors or any terminal commands at all – `os.environ[\"TERM\"] == \"dumb\"`.)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/221981358",
    "html_url": "https://github.com/ipython/ipython/pull/9399#issuecomment-221981358",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9399",
    "id": 221981358,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMTk4MTM1OA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-26T20:13:45Z",
    "updated_at": "2016-05-26T20:13:45Z",
    "author_association": "MEMBER",
    "body": "So technically it's not color, it's the cursor movement sequences and blinking (plus a few other I haven't tracked down yet) , and as this is mostly how prompt_toolkit does it thing, it will likely be super hard to avoid. \n\nLooking a bit at it, it should be (relatively) straightforward to  export the \"old\" terminal interactive shell out of there into a separate package. \n\nTell me if I'm wrong but `M-x shell` seem to not handle forward some things like tab completion (do elpy does it through readline ? ) in which case we should be able to reduce that even further. \n\nThat would (at least) give some fallback for the time being until we figure out a better plan. \n\nAs I'm unsure about how `elpy-shell-switch-to-shell` is used, I have difficulties understanding what feature is needed, what behavior is expected. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/221992703",
    "html_url": "https://github.com/ipython/ipython/pull/9399#issuecomment-221992703",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9399",
    "id": 221992703,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMTk5MjcwMw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-26T20:58:26Z",
    "updated_at": "2016-05-26T20:58:26Z",
    "author_association": "MEMBER",
    "body": "It's certainly possible to split out the old TIS as a separate package, but I'm wary of doing that, because:\n1. It creates some kind of expectation that it's supported and maintained. We don't want to do that, and it's not clear that anyone else is willing to put the time in for it.\n2. Making it a separate package, especially if other people are maintaining it, relies on the inheritance API between InteractiveShell and TerminalInteractiveShell being stable and well defined, and it isn't. Especially at the moment, we're changing that API quite a bit to improve things with prompt_toolkit, and quite probably breaking/degrading things for the old TIS.\n\nI don't know what the answer is here, but I'm really not keen on the idea of a separate readline TIS package.\n\nThere is a _very_ dumb fallback mode used for tests, which just uses Python's `raw_input`. But you're no better off with that than with the vanilla Python shell.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/221994522",
    "html_url": "https://github.com/ipython/ipython/pull/9399#issuecomment-221994522",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9399",
    "id": 221994522,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMTk5NDUyMg==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-26T21:05:27Z",
    "updated_at": "2016-05-26T21:05:27Z",
    "author_association": "MEMBER",
    "body": "> here is a very dumb fallback mode used for tests, which just uses Python's raw_input. But you're no better off with that than with the vanilla Python shell.\n\nThat untrue for magics, ls, and all the syntax on top of Python. \nAs far as I understand the `elpy-shell-switch-to-shell` is mostly used to get code executed and get the result back (I might be wrong), so no need for completion, history, and all this fancy stuff. But if that's the case, we can likely rely on a much, much simpler interface than PTK. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/221999935",
    "html_url": "https://github.com/ipython/ipython/pull/9399#issuecomment-221999935",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9399",
    "id": 221999935,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMTk5OTkzNQ==",
    "user": {
      "login": "tacaswell",
      "id": 199813,
      "node_id": "MDQ6VXNlcjE5OTgxMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/199813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tacaswell",
      "html_url": "https://github.com/tacaswell",
      "followers_url": "https://api.github.com/users/tacaswell/followers",
      "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
      "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
      "organizations_url": "https://api.github.com/users/tacaswell/orgs",
      "repos_url": "https://api.github.com/users/tacaswell/repos",
      "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tacaswell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-26T21:27:30Z",
    "updated_at": "2016-05-26T21:27:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "And most importantly (from my point of view) the gui event-loop integration management.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/222001481",
    "html_url": "https://github.com/ipython/ipython/pull/9399#issuecomment-222001481",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9399",
    "id": 222001481,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjAwMTQ4MQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-26T21:34:05Z",
    "updated_at": "2016-05-26T21:34:05Z",
    "author_association": "MEMBER",
    "body": "Have a go with the environment variable `IPY_TEST_SIMPLE_PROMPT=1`, and see how that goes. The event-loop integration has all been rewritten (and greatly simplified) for prompt_toolkit, though, so the old inputhook machinery is part of what we'd really like to drop.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/222002332",
    "html_url": "https://github.com/ipython/ipython/pull/9399#issuecomment-222002332",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9399",
    "id": 222002332,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjAwMjMzMg==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-26T21:37:39Z",
    "updated_at": "2016-05-26T21:37:39Z",
    "author_association": "MEMBER",
    "body": "One option that might work for a community maintained package is to clean up jupyter_console 4.x, rename that and push it out for whoever's interested in maintaining it - that way it's built on a clearly defined interface (the messaging protocol), and it can take advantage of the event-loop integration in the kernel. jupyter_console 5.x is also based on prompt_toolkit, but 4.x uses readline.\n"
  }
]
