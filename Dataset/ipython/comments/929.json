[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2523266",
    "html_url": "https://github.com/ipython/ipython/pull/929#issuecomment-2523266",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/929",
    "id": 2523266,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MjMyNjY=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-25T21:23:07Z",
    "updated_at": "2011-10-25T21:23:07Z",
    "author_association": "MEMBER",
    "body": "Thanks! The new tests do pass on my Python 3.2.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2571939",
    "html_url": "https://github.com/ipython/ipython/pull/929#issuecomment-2571939",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/929",
    "id": 2571939,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzE5Mzk=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-30T22:22:34Z",
    "updated_at": "2011-10-30T22:22:34Z",
    "author_association": "MEMBER",
    "body": "We've also got a regression from 0.11 where consecutive duplicate entries are stored multiple times, so if you do:\n\n```\nIn [1]: a = 1\nIn [2]: b = 2\nIn [3]: b = 2\nIn [4]:\n```\n\nPressing up-arrow gets you `b = 2` twice before you see `a = 1`. By default, readline seems to condense these consecutive duplicates. I think we need to check `hlen > hlen_before_cell` before we call `add_history`.\n\nThanks to @antoine-levitt for spotting this in our discussion on #943.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2572096",
    "html_url": "https://github.com/ipython/ipython/pull/929#issuecomment-2572096",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/929",
    "id": 2572096,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzIwOTY=",
    "user": {
      "login": "juliantaylor",
      "id": 542663,
      "node_id": "MDQ6VXNlcjU0MjY2Mw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/542663?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/juliantaylor",
      "html_url": "https://github.com/juliantaylor",
      "followers_url": "https://api.github.com/users/juliantaylor/followers",
      "following_url": "https://api.github.com/users/juliantaylor/following{/other_user}",
      "gists_url": "https://api.github.com/users/juliantaylor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/juliantaylor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/juliantaylor/subscriptions",
      "organizations_url": "https://api.github.com/users/juliantaylor/orgs",
      "repos_url": "https://api.github.com/users/juliantaylor/repos",
      "events_url": "https://api.github.com/users/juliantaylor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/juliantaylor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-30T22:51:41Z",
    "updated_at": "2011-10-30T22:51:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "interesting I was not aware readline did this by default. In bash you have to explicitly enable it.\nchecking the length will not work for multi line entries. One would have to loop over hlen-hlen_before and compare the entries.\nOr is there a simpler way?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2572266",
    "html_url": "https://github.com/ipython/ipython/pull/929#issuecomment-2572266",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/929",
    "id": 2572266,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzIyNjY=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-30T23:23:20Z",
    "updated_at": "2011-10-30T23:23:20Z",
    "author_association": "MEMBER",
    "body": "I would have thought it would work for any cell - if readline detects a duplicate, I imagine it's simply not adding it to its history list, so `hlen == hlen_before_cell`. Although I guess it still falls over if the code in the cell has called raw_input(), because that would be added to readline history. I think the only reliable way to deal with that is to rejig the readline history before we run the cell.\n\nI thought it had always ignored duplicates in bash for me, but maybe it's only since I tweaked my .inputrc earlier this year.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2572291",
    "html_url": "https://github.com/ipython/ipython/pull/929#issuecomment-2572291",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/929",
    "id": 2572291,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzIyOTE=",
    "user": {
      "login": "juliantaylor",
      "id": 542663,
      "node_id": "MDQ6VXNlcjU0MjY2Mw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/542663?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/juliantaylor",
      "html_url": "https://github.com/juliantaylor",
      "followers_url": "https://api.github.com/users/juliantaylor/followers",
      "following_url": "https://api.github.com/users/juliantaylor/following{/other_user}",
      "gists_url": "https://api.github.com/users/juliantaylor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/juliantaylor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/juliantaylor/subscriptions",
      "organizations_url": "https://api.github.com/users/juliantaylor/orgs",
      "repos_url": "https://api.github.com/users/juliantaylor/repos",
      "events_url": "https://api.github.com/users/juliantaylor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/juliantaylor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-30T23:28:37Z",
    "updated_at": "2011-10-30T23:28:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "two equal two-line entries are are ABAB pattern for readline, but it only consecutive entries (AAA...) are skipped by it.\nOne could also chose to ignore the issue for multiline entries to keep the code simple, these are generally less often entered multiple times so it won't matter much.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2572340",
    "html_url": "https://github.com/ipython/ipython/pull/929#issuecomment-2572340",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/929",
    "id": 2572340,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzIzNDA=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-30T23:36:35Z",
    "updated_at": "2011-10-30T23:36:35Z",
    "author_association": "MEMBER",
    "body": "Oh, yes, I see. Although the most plausible way to repeat a multiline cell exactly is to recall it from readline history via up-arrow, in which case it hopefully would be picked up as a duplicate (assuming it compares it with the same list we modify in _replace_rlhist_multiline). I think it's fine not to merge duplicate multiline cells if the user has actually typed them out again.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2572458",
    "html_url": "https://github.com/ipython/ipython/pull/929#issuecomment-2572458",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/929",
    "id": 2572458,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzI0NTg=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-31T00:02:11Z",
    "updated_at": "2011-10-31T00:02:11Z",
    "author_association": "MEMBER",
    "body": "Yes, huge +1 to fixing the duplicate entries in readline history.  I only noticed it recently, but it's super annoying.  @takluyver, if it doesn't get fixed in this PR, could you open a separate issue for it then?  I suspect we'll hear a _lot_ of complains if we release 0.12 with that problem...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2572499",
    "html_url": "https://github.com/ipython/ipython/pull/929#issuecomment-2572499",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/929",
    "id": 2572499,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzI0OTk=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-31T00:15:20Z",
    "updated_at": "2011-10-31T00:15:20Z",
    "author_association": "MEMBER",
    "body": "I was just about to open an issue when I noticed this PR. I think it should be possible to resolve it here, but if not I'll remind everyone about it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2572518",
    "html_url": "https://github.com/ipython/ipython/pull/929#issuecomment-2572518",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/929",
    "id": 2572518,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzI1MTg=",
    "user": {
      "login": "juliantaylor",
      "id": 542663,
      "node_id": "MDQ6VXNlcjU0MjY2Mw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/542663?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/juliantaylor",
      "html_url": "https://github.com/juliantaylor",
      "followers_url": "https://api.github.com/users/juliantaylor/followers",
      "following_url": "https://api.github.com/users/juliantaylor/following{/other_user}",
      "gists_url": "https://api.github.com/users/juliantaylor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/juliantaylor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/juliantaylor/subscriptions",
      "organizations_url": "https://api.github.com/users/juliantaylor/orgs",
      "repos_url": "https://api.github.com/users/juliantaylor/repos",
      "events_url": "https://api.github.com/users/juliantaylor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/juliantaylor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-31T00:20:06Z",
    "updated_at": "2011-10-31T00:20:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "for the single line entries it can be resolved here with an extra length check.\nI did not change it to have no member state yet as at some point this must be refactored to allow third party applications to reuse it (e.g. accerciser, exaile and rabbitvcs are currently duplicating the interact code). removing the state would probably make the api more complicated. But I did not have time to look at this in detail.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2573081",
    "html_url": "https://github.com/ipython/ipython/pull/929#issuecomment-2573081",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/929",
    "id": 2573081,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzMwODE=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-31T02:55:58Z",
    "updated_at": "2011-10-31T02:55:58Z",
    "author_association": "MEMBER",
    "body": "@juliantaylor, it would be great if you can add the fix here, we can review the lot and merge this.  Thanks!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2657448",
    "html_url": "https://github.com/ipython/ipython/pull/929#issuecomment-2657448",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/929",
    "id": 2657448,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTc0NDg=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-07T18:38:19Z",
    "updated_at": "2011-11-07T18:38:19Z",
    "author_association": "MEMBER",
    "body": "Scope issue in the recent change:\n\nWhen I try to run without readline (`ipython --TerminalInteractiveShell.readline_use=False`), I get:\n\n```\n\n/path/to/IPython/frontend/terminal/interactiveshell.pyc in interact(self=<IPython.frontend.terminal.interactiveshell.TerminalInteractiveShell object>, display_banner=False)\n    325                      'IPython will resume normal operation.')\n    326             except:\n    327                 # exceptions here are VERY RARE, but they can be triggered\n    328                 # asynchronously by signal handlers, for example.\n    329                 self.showtraceback()\n    330             else:\n    331                 self.input_splitter.push(line)\n    332                 more = self.input_splitter.push_accepts_more()\n    333                 if (self.SyntaxTB.last_syntax_error and\n    334                     self.autoedit_syntax):\n    335                     self.edit_syntax_error()\n    336                 if not more:\n    337                     source_raw = self.input_splitter.source_raw_reset()[1]\n    338                     self.run_cell(source_raw, store_history=True)\n    339                     hlen_b4_cell = \\\n--> 340                         self._replace_rlhist_multiline(source_raw, hlen_b4_cell)\n    341 \n    342         # We are off again...\n    343         __builtin__.__dict__['__IPYTHON__active'] -= 1\n    344 \n    345         # Turn off the exit flag, so the mainloop can be restarted if desired\n    346         self.exit_now = False\n    347 \n    348     def raw_input(self, prompt=''):\n    349         \"\"\"Write a prompt and read a line.\n    350 \n    351         The returned line does not include the trailing newline.\n    352         When the user enters the EOF key sequence, EOFError is raised.\n    353 \n    354         Optional inputs:\n    355 \n\nUnboundLocalError: local variable 'hlen_b4_cell' referenced before assignment\n```\n\nafter my first execution.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2657531",
    "html_url": "https://github.com/ipython/ipython/pull/929#issuecomment-2657531",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/929",
    "id": 2657531,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTc1MzE=",
    "user": {
      "login": "juliantaylor",
      "id": 542663,
      "node_id": "MDQ6VXNlcjU0MjY2Mw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/542663?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/juliantaylor",
      "html_url": "https://github.com/juliantaylor",
      "followers_url": "https://api.github.com/users/juliantaylor/followers",
      "following_url": "https://api.github.com/users/juliantaylor/following{/other_user}",
      "gists_url": "https://api.github.com/users/juliantaylor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/juliantaylor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/juliantaylor/subscriptions",
      "organizations_url": "https://api.github.com/users/juliantaylor/orgs",
      "repos_url": "https://api.github.com/users/juliantaylor/repos",
      "events_url": "https://api.github.com/users/juliantaylor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/juliantaylor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-07T18:44:32Z",
    "updated_at": "2011-11-07T18:44:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "forgot to test without readline again ._.\nfixed\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2657990",
    "html_url": "https://github.com/ipython/ipython/pull/929#issuecomment-2657990",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/929",
    "id": 2657990,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTc5OTA=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-07T19:12:06Z",
    "updated_at": "2011-11-07T19:12:06Z",
    "author_association": "MEMBER",
    "body": "Awesome, thanks.  It's almost there.  The tests that set `multiline_history=True` should be skipped on Windows, where multi-line history doesn't work with pyreadline, due to missing `rl.remove_history_item()`.\n\nIn fact, we should probably even check for the existence of that method in `_replace_rlhist_multiline()`, to prevent users crashing IPython on Windows by setting `multiline_history=True`, where it won't work.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2658253",
    "html_url": "https://github.com/ipython/ipython/pull/929#issuecomment-2658253",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/929",
    "id": 2658253,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTgyNTM=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-07T19:28:38Z",
    "updated_at": "2011-11-07T19:28:38Z",
    "author_association": "MEMBER",
    "body": "On Mon, Nov 7, 2011 at 11:12 AM, Min RK\nreply@reply.github.com\nwrote:\n\n> In fact, we should probably even check for the existence of that method in `_replace_rlhist_multiline()`, to prevent users crashing IPython on Windows by setting `multiline_history=True`, where it won't work.\n\nGood idea: someone may actually share their ipython config between\nwindows and linux if they  have it on a shared filesystem.  I do that\nwhen I run in windows VMs that see my linux $HOME, so this is not just\nhypothetical.  It would be super annoying to have to change every\ntime.\n\nCheers,\n\nf\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2661285",
    "html_url": "https://github.com/ipython/ipython/pull/929#issuecomment-2661285",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/929",
    "id": 2661285,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjEyODU=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-07T23:02:45Z",
    "updated_at": "2011-11-07T23:02:45Z",
    "author_association": "MEMBER",
    "body": "tested, and apparently works on my Windows VM, and on OSX with/without readline.  merging.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2731172",
    "html_url": "https://github.com/ipython/ipython/pull/929#issuecomment-2731172",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/929",
    "id": 2731172,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MzExNzI=",
    "user": {
      "login": "antoine-levitt",
      "id": 88065,
      "node_id": "MDQ6VXNlcjg4MDY1",
      "avatar_url": "https://avatars2.githubusercontent.com/u/88065?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/antoine-levitt",
      "html_url": "https://github.com/antoine-levitt",
      "followers_url": "https://api.github.com/users/antoine-levitt/followers",
      "following_url": "https://api.github.com/users/antoine-levitt/following{/other_user}",
      "gists_url": "https://api.github.com/users/antoine-levitt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/antoine-levitt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/antoine-levitt/subscriptions",
      "organizations_url": "https://api.github.com/users/antoine-levitt/orgs",
      "repos_url": "https://api.github.com/users/antoine-levitt/repos",
      "events_url": "https://api.github.com/users/antoine-levitt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/antoine-levitt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-14T14:47:22Z",
    "updated_at": "2011-11-14T14:47:22Z",
    "author_association": "NONE",
    "body": "I'm still seeing duplicate lines in ipython's own history (the readline history in one session is fine, but upon restarting ipython, duplicates are present)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2731347",
    "html_url": "https://github.com/ipython/ipython/pull/929#issuecomment-2731347",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/929",
    "id": 2731347,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MzEzNDc=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-14T15:02:31Z",
    "updated_at": "2011-11-14T15:02:31Z",
    "author_association": "MEMBER",
    "body": "@antione-levitt: I think that's a separate issue (and I can replicate it on 0.11, before any of this). I've made issue #1000 so we don't forget it.\n\nAs an aside: that makes 1000 issues in a bit over a year, minus however many were transferred over from Launchpad.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2750905",
    "html_url": "https://github.com/ipython/ipython/pull/929#issuecomment-2750905",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/929",
    "id": 2750905,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTA5MDU=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-15T20:37:59Z",
    "updated_at": "2011-11-15T20:37:59Z",
    "author_association": "MEMBER",
    "body": "On Mon, Nov 14, 2011 at 7:02 AM, Thomas\nreply@reply.github.com\nwrote:\n\n> As an aside: that makes 1000 issues in a bit over a year, minus however many were transferred over from Launchpad.\n\nAnd it makes you the proud winner of a Scipy 2009 T-Shirt and a Scipy\nIndia 2010 one!   I have a few T-shirts on my desk from old\nconferences and I'd decided to give two to the submitter of #1000 :)\nGlad it's you, since you've done more than your fair share to earn\nthem!\n\nEmail me your home address at my Berkeley email and I'll post them :)\n\nCheers,\n\nf\n"
  }
]
