[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/236242",
    "html_url": "https://github.com/ipython/ipython/issues/100#issuecomment-236242",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/100",
    "id": 236242,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjI0Mg==",
    "user": {
      "login": "ipython",
      "id": 230453,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjIzMDQ1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/230453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ipython",
      "html_url": "https://github.com/ipython",
      "followers_url": "https://api.github.com/users/ipython/followers",
      "following_url": "https://api.github.com/users/ipython/following{/other_user}",
      "gists_url": "https://api.github.com/users/ipython/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ipython/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ipython/subscriptions",
      "organizations_url": "https://api.github.com/users/ipython/orgs",
      "repos_url": "https://api.github.com/users/ipython/repos",
      "events_url": "https://api.github.com/users/ipython/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ipython/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2010-05-10T09:40:42Z",
    "updated_at": "2010-05-10T09:40:42Z",
    "author_association": "COLLABORATOR",
    "body": "[ LP comment 1 by: Jon Guyer, on 2009-09-09 19:15:26.909552+00:00 ]\n\nA user just brought a related issue to our attention. We have an example that uses Python string substitution to build up a command for an external program (gmsh). See http://matforge.org/fipy/browser/branches/version-2_0/examples/diffusion/circle.py#L70.\n\nWhen these lines are pasted into ipython, although everything seems to work, the string is garbled by %magic, and ultimately a very confusing error is thrown by our gmsh interpreter. For instance:\n\nIn [14]: s = \"\"\"\n   ....: %(radius)g;\n   ....: \"\"\" % locals()\n\nIn [15]: s\nOut[15]: '\\n_ip.magic(\"1; \")\\n'\n\nwhereas:\n\nIn [12]: s = \"%(radius)g\" % locals()\n\nIn [13]: s\nOut[13]: '1'\n\nIs there any way to get Python string substitution syntax to override %magic commands in multiline strings?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/236243",
    "html_url": "https://github.com/ipython/ipython/issues/100#issuecomment-236243",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/100",
    "id": 236243,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjI0Mw==",
    "user": {
      "login": "ipython",
      "id": 230453,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjIzMDQ1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/230453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ipython",
      "html_url": "https://github.com/ipython",
      "followers_url": "https://api.github.com/users/ipython/followers",
      "following_url": "https://api.github.com/users/ipython/following{/other_user}",
      "gists_url": "https://api.github.com/users/ipython/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ipython/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ipython/subscriptions",
      "organizations_url": "https://api.github.com/users/ipython/orgs",
      "repos_url": "https://api.github.com/users/ipython/repos",
      "events_url": "https://api.github.com/users/ipython/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ipython/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2010-05-10T09:40:43Z",
    "updated_at": "2010-05-10T09:40:43Z",
    "author_association": "COLLABORATOR",
    "body": "[ LP comment 2 by: Fernando Perez, on 2009-09-10 06:27:26+00:00 ]\n\nHi Jon,\n\nOn Wed, Sep 9, 2009 at 12:15 PM, Jon Guyer guyer@nist.gov wrote:\n\n> A user just brought a related issue to our attention. We have an example\n> that uses Python string substitution to build up a command for an\n> external program (gmsh). See\n> http://matforge.org/fipy/browser/branches/version-2_0/examples/diffusion/circle.py#L70.\n> \n> When these lines are pasted into ipython, although everything seems to\n> work, the string is garbled by %magic, and ultimately a very confusing\n> error is thrown by our gmsh interpreter. For instance:\n> \n> In [14]: s = \"\"\"\n>   ....: %(radius)g;\n>   ....: \"\"\" % locals()\n> \n> In [15]: s\n> Out[15]: '\\n_ip.magic(\"1; \")\\n'\n> \n> whereas:\n> \n> In [12]: s = \"%(radius)g\" % locals()\n> \n> In [13]: s\n> Out[13]: '1'\n> \n> Is there any way to get Python string substitution syntax to override\n> %magic commands in multiline strings?\n\nI think we should make the magic system smarter, but in the meantime,\nyou can eliminate the problem by disabling magics and other special\nsyntax in multiline statements.  Simply set the config option\n\nmulti_line_specials 0\n\nin your ~/.ipython/ipythonrc  file.  If you are using the\nipy_user_conf.py config file instead, set\n\nip.options.multiline_specials = 0\n\nLet me know how this works.\n\nCheers,\n\nf\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/236244",
    "html_url": "https://github.com/ipython/ipython/issues/100#issuecomment-236244",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/100",
    "id": 236244,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjI0NA==",
    "user": {
      "login": "ipython",
      "id": 230453,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjIzMDQ1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/230453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ipython",
      "html_url": "https://github.com/ipython",
      "followers_url": "https://api.github.com/users/ipython/followers",
      "following_url": "https://api.github.com/users/ipython/following{/other_user}",
      "gists_url": "https://api.github.com/users/ipython/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ipython/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ipython/subscriptions",
      "organizations_url": "https://api.github.com/users/ipython/orgs",
      "repos_url": "https://api.github.com/users/ipython/repos",
      "events_url": "https://api.github.com/users/ipython/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ipython/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2010-05-10T09:40:44Z",
    "updated_at": "2010-05-10T09:40:44Z",
    "author_association": "COLLABORATOR",
    "body": "[ LP comment 3 by: Jon Guyer, on 2009-09-14 15:26:16.685303+00:00 ]\n\nThat does the trick, thanks. \n\nI guess it's too late in the game to choose some other magic character that doesn't conflict with Python.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/236245",
    "html_url": "https://github.com/ipython/ipython/issues/100#issuecomment-236245",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/100",
    "id": 236245,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjI0NQ==",
    "user": {
      "login": "ipython",
      "id": 230453,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjIzMDQ1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/230453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ipython",
      "html_url": "https://github.com/ipython",
      "followers_url": "https://api.github.com/users/ipython/followers",
      "following_url": "https://api.github.com/users/ipython/following{/other_user}",
      "gists_url": "https://api.github.com/users/ipython/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ipython/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ipython/subscriptions",
      "organizations_url": "https://api.github.com/users/ipython/orgs",
      "repos_url": "https://api.github.com/users/ipython/repos",
      "events_url": "https://api.github.com/users/ipython/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ipython/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2010-05-10T09:40:44Z",
    "updated_at": "2010-05-10T09:40:44Z",
    "author_association": "COLLABORATOR",
    "body": "[ LP comment 4 by: Fernando Perez, on 2009-09-14 20:59:22+00:00 ]\n\nOn Mon, Sep 14, 2009 at 8:26 AM, Jon Guyer guyer@nist.gov wrote:\n\n> That does the trick, thanks.\n> \n> I guess it's too late in the game to choose some other magic character\n> that doesn't conflict with Python.\n\nWell, the good thing is that in python 3.x, they are going to\ndeprecate % formatting in favor of the new style using {} placeholders\nand a .format() method for strings.  So this issue will fade away as\nwe transition to 3.x in the long run.\n\nHowever, I'm keeping this bug open because we may also be able to make\nipython smarter so the magic rewriting does not kick in for multiline\nstrings.  It's still our bug, and we should fix it.\n\nBut I'm glad to be able to have a workaround for now.\n\nCheers,\n\nf\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/853856",
    "html_url": "https://github.com/ipython/ipython/issues/100#issuecomment-853856",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/100",
    "id": 853856,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1Mzg1Ng==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-03-09T23:10:36Z",
    "updated_at": "2011-03-09T23:10:36Z",
    "author_association": "MEMBER",
    "body": "This is not a problem (as far as I can tell) on 0.11\n"
  }
]
