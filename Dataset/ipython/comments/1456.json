[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4249851",
    "html_url": "https://github.com/ipython/ipython/issues/1456#issuecomment-4249851",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1456",
    "id": 4249851,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDk4NTE=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-03-01T00:10:48Z",
    "updated_at": "2012-03-01T00:10:48Z",
    "author_association": "MEMBER",
    "body": "Aha, this rings a bell...does re-enabling the monkeypatch that was disabled in 1cd5a5815064ce992f200c103108f2470dde9508 fix it?\n\nCan you provide steps to reproduce this?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4250122",
    "html_url": "https://github.com/ipython/ipython/issues/1456#issuecomment-4250122",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1456",
    "id": 4250122,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTAxMjI=",
    "user": {
      "login": "mwiebe",
      "id": 399551,
      "node_id": "MDQ6VXNlcjM5OTU1MQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/399551?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mwiebe",
      "html_url": "https://github.com/mwiebe",
      "followers_url": "https://api.github.com/users/mwiebe/followers",
      "following_url": "https://api.github.com/users/mwiebe/following{/other_user}",
      "gists_url": "https://api.github.com/users/mwiebe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mwiebe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mwiebe/subscriptions",
      "organizations_url": "https://api.github.com/users/mwiebe/orgs",
      "repos_url": "https://api.github.com/users/mwiebe/repos",
      "events_url": "https://api.github.com/users/mwiebe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mwiebe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-03-01T00:30:48Z",
    "updated_at": "2012-03-01T00:30:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "It happened in a context with a lot of Qt, OpenGL, and PyCUDA going on. There was a bug in my code causing an exception inside the prtparam setter, which was defined like this:\n\n```\n\n    @property\n    def prtparam(self):\n        return self._prtparam\n\n    @prtparam.setter\n    def prtparam(self, newprtparam):\n        if self._prtparam != None:\n            self._prtparam.close()\n        self._prtparam = newprtparam\n        self.prt_view_widget.prtparam = newprtparam\n```\n\nLikely the error was raised from the close() call, which was calling both OpenGL and PyCUDA functions. I was able to repeat it in a few fresh runs, but if I run it with the bug in there now, it produces the perfectly reasonable\n\n```\n\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\nD:\\Develop\\notebooks\\<ipython-input-15-dec90c4997b5> in <module>()\n      1 # Switch to NumPy\n----> 2 pw.prtparam = p\n\nD:\\Develop\\scripts\\particle_window.py in prtparam(self, newprtparam)\n     53     def prtparam(self, newprtparam):\n     54         if self._prtparam != None:\n---> 55             self._prtparam.close()\n     56         self._prtparam = newprtparam\n\nD:\\Develop\\scripts\\cuda_prt.pyc in close(self)\n    142     def close(self):\n    143         # Free the particle VBO\n--> 144         self.prt = None\n    145         # Free the CUDA context\n    146         if self._context != None:\n\nD:\\Develop\\scripts\\cuda_prt.pyc in prt(self, newprt)\n     59         self.selected_particles = None\n     60         # Make sure the GL context is set\n---> 61         self._gl_context_fn()\n     62 \n     63         # Free the existing particle VBO\n\nTypeError: 'NoneType' object is not callable\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4250499",
    "html_url": "https://github.com/ipython/ipython/issues/1456#issuecomment-4250499",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1456",
    "id": 4250499,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTA0OTk=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-03-01T01:00:50Z",
    "updated_at": "2012-03-01T01:00:50Z",
    "author_association": "MEMBER",
    "body": "Hmmm, so you can no longer reproduce it? Looking at the traceback when it was failing, though, it is failing at the point that our monkeypatch was intended to resolve.\n\nThe error is that it's getting a line number beyond the end of the file. I think that might occur if you're changing the file  while the module is loaded, so that the loaded line numbers don't match those on disk.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4250889",
    "html_url": "https://github.com/ipython/ipython/issues/1456#issuecomment-4250889",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1456",
    "id": 4250889,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTA4ODk=",
    "user": {
      "login": "mwiebe",
      "id": 399551,
      "node_id": "MDQ6VXNlcjM5OTU1MQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/399551?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mwiebe",
      "html_url": "https://github.com/mwiebe",
      "followers_url": "https://api.github.com/users/mwiebe/followers",
      "following_url": "https://api.github.com/users/mwiebe/following{/other_user}",
      "gists_url": "https://api.github.com/users/mwiebe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mwiebe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mwiebe/subscriptions",
      "organizations_url": "https://api.github.com/users/mwiebe/orgs",
      "repos_url": "https://api.github.com/users/mwiebe/repos",
      "events_url": "https://api.github.com/users/mwiebe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mwiebe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-03-01T01:37:13Z",
    "updated_at": "2012-03-01T01:37:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "No, it's not happening now, but your thought about changing the file makes good sense. The close() function is at the very end of cuda_prt.py, and I've done \n\n```\n%load_ext autoreload\n%autoreload 2\n```\n\nso that it automatically updates when I change stuff.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4255622",
    "html_url": "https://github.com/ipython/ipython/issues/1456#issuecomment-4255622",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1456",
    "id": 4255622,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTU2MjI=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-03-01T10:18:47Z",
    "updated_at": "2012-03-01T10:18:47Z",
    "author_association": "MEMBER",
    "body": "OK, perhaps we have to re-enable the monkeypatch. I'd prefer to catch the error when it reaches our own code, so we benefit from upstream changes to `inspect`. I'll play around and see if I can reproduce it by editing files.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7037974",
    "html_url": "https://github.com/ipython/ipython/issues/1456#issuecomment-7037974",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1456",
    "id": 7037974,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwMzc5NzQ=",
    "user": {
      "login": "nealmcb",
      "id": 119472,
      "node_id": "MDQ6VXNlcjExOTQ3Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/119472?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nealmcb",
      "html_url": "https://github.com/nealmcb",
      "followers_url": "https://api.github.com/users/nealmcb/followers",
      "following_url": "https://api.github.com/users/nealmcb/following{/other_user}",
      "gists_url": "https://api.github.com/users/nealmcb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nealmcb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nealmcb/subscriptions",
      "organizations_url": "https://api.github.com/users/nealmcb/orgs",
      "repos_url": "https://api.github.com/users/nealmcb/repos",
      "events_url": "https://api.github.com/users/nealmcb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nealmcb/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-17T15:07:26Z",
    "updated_at": "2012-07-17T15:07:26Z",
    "author_association": "NONE",
    "body": "I got the same error in Ubuntu 12.04 (precise) with ipython 0.12.1+dfsg-0ubuntu1  when repeatedly editing a python file and running it in ipython sort of like this:\n\nIn [423]: run aiclass22_nlp.py\n\nIn [424]: p = main()\n\n# edit... edit...\n\nIn [425]: run aiclass22_nlp.py\n\nIn [426]: p = main()\nERROR: Internal Python error in the inspect module.\nBelow is the traceback from this internal error.\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/dist-packages/IPython/core/ultratb.py\", line 756, in structured_traceback\n    records = _fixed_getinnerframes(etb, context, tb_offset)\n  File \"/usr/lib/python2.7/dist-packages/IPython/core/ultratb.py\", line 242, in _fixed_getinnerframes\n    records  = fix_frame_records_filenames(inspect.getinnerframes(etb, context))\n  File \"/usr/lib/python2.7/inspect.py\", line 1043, in getinnerframes\n    framelist.append((tb.tb_frame,) + getframeinfo(tb, context))\n  File \"/usr/lib/python2.7/inspect.py\", line 1007, in getframeinfo\n    lines, lnum = findsource(frame)\n  File \"/usr/lib/python2.7/inspect.py\", line 580, in findsource\n    if pat.match(lines[lnum]): break\nIndexError: list index out of range\n\nUnfortunately, your original traceback can not be constructed.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7038458",
    "html_url": "https://github.com/ipython/ipython/issues/1456#issuecomment-7038458",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1456",
    "id": 7038458,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwMzg0NTg=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-17T15:21:19Z",
    "updated_at": "2012-07-17T15:21:19Z",
    "author_association": "MEMBER",
    "body": "I've assigned this to myself to try to reproduce the error.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7425955",
    "html_url": "https://github.com/ipython/ipython/issues/1456#issuecomment-7425955",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1456",
    "id": 7425955,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MjU5NTU=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-01T12:27:11Z",
    "updated_at": "2012-08-01T12:27:11Z",
    "author_association": "MEMBER",
    "body": "OK, I've got a reproducible case - Create a file test.py with:\n\n```\n1\n2\n3\ndef f():\n    1/0\n```\n\nThen %run or import it in IPython, and call `f()` to get the ZeroDivisionError.\n\nNow edit the file to remove the 1 2 3 lines, and without re-running/re-importing, call `f()` _twice_ more in IPython, which results in this:\n\n```\nIn [5]: f()\n---------------------------------------------------------------------------\nZeroDivisionError                         Traceback (most recent call last)\n<ipython-input-5-0ec059b9bfe1> in <module>()\n----> 1 f()\n\n/home/thomas/scratch/test.py in f()\n      3 \n\nZeroDivisionError: integer division or modulo by zero\n\nIn [6]: f()\nERROR: Internal Python error in the inspect module.\nBelow is the traceback from this internal error.\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/dist-packages/IPython/core/ultratb.py\", line 756, in structured_traceback\n    records = _fixed_getinnerframes(etb, context, tb_offset)\n  File \"/usr/lib/python2.7/dist-packages/IPython/core/ultratb.py\", line 242, in _fixed_getinnerframes\n    records  = fix_frame_records_filenames(inspect.getinnerframes(etb, context))\n  File \"/usr/lib/python2.7/inspect.py\", line 1043, in getinnerframes\n    framelist.append((tb.tb_frame,) + getframeinfo(tb, context))\n  File \"/usr/lib/python2.7/inspect.py\", line 1007, in getframeinfo\n    lines, lnum = findsource(frame)\n  File \"/usr/lib/python2.7/inspect.py\", line 580, in findsource\n    if pat.match(lines[lnum]): break\nIndexError: list index out of range\n\nUnfortunately, your original traceback can not be constructed.\n```\n\nWhy it's only the second call that fails, I don't know. I'll try to work up a proper test case for this, and then a fix.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/9507938",
    "html_url": "https://github.com/ipython/ipython/issues/1456#issuecomment-9507938",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1456",
    "id": 9507938,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk1MDc5Mzg=",
    "user": {
      "login": "rainwoodman",
      "id": 138060,
      "node_id": "MDQ6VXNlcjEzODA2MA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/138060?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rainwoodman",
      "html_url": "https://github.com/rainwoodman",
      "followers_url": "https://api.github.com/users/rainwoodman/followers",
      "following_url": "https://api.github.com/users/rainwoodman/following{/other_user}",
      "gists_url": "https://api.github.com/users/rainwoodman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rainwoodman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rainwoodman/subscriptions",
      "organizations_url": "https://api.github.com/users/rainwoodman/orgs",
      "repos_url": "https://api.github.com/users/rainwoodman/repos",
      "events_url": "https://api.github.com/users/rainwoodman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rainwoodman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-10-16T21:37:22Z",
    "updated_at": "2012-10-16T21:37:22Z",
    "author_association": "NONE",
    "body": "On a freshly installed 0.13, I am able to reproduce the bug with the following code:\n\nL = {}\neval(compile(\n\"\"\"\ndef func():\n  1 / 0\n\"\"\", '', 'exec', 0, True), L)\n\nf = L['func']\nf()\n\nThe problem is that the filename supplied to the compile function is an empty string, and inspect.getfile doesn't like an empty filename. If I use '<>' as the filename the backtrace in ipython is fine.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/9522331",
    "html_url": "https://github.com/ipython/ipython/issues/1456#issuecomment-9522331",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1456",
    "id": 9522331,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk1MjIzMzE=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-10-17T10:14:56Z",
    "updated_at": "2012-10-17T10:14:56Z",
    "author_association": "MEMBER",
    "body": "@rainwoodman That sounds like a related but different bug. If you can reproduce it in master, can you open a new issue for it?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/46872452",
    "html_url": "https://github.com/ipython/ipython/issues/1456#issuecomment-46872452",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1456",
    "id": 46872452,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODcyNDUy",
    "user": {
      "login": "merwok",
      "id": 635179,
      "node_id": "MDQ6VXNlcjYzNTE3OQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/635179?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/merwok",
      "html_url": "https://github.com/merwok",
      "followers_url": "https://api.github.com/users/merwok/followers",
      "following_url": "https://api.github.com/users/merwok/following{/other_user}",
      "gists_url": "https://api.github.com/users/merwok/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/merwok/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/merwok/subscriptions",
      "organizations_url": "https://api.github.com/users/merwok/orgs",
      "repos_url": "https://api.github.com/users/merwok/repos",
      "events_url": "https://api.github.com/users/merwok/events{/privacy}",
      "received_events_url": "https://api.github.com/users/merwok/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-23T17:03:17Z",
    "updated_at": "2014-06-23T17:03:17Z",
    "author_association": "NONE",
    "body": "This sounds like it could be related to the use of linecache in the inspect module.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/266852227",
    "html_url": "https://github.com/ipython/ipython/issues/1456#issuecomment-266852227",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1456",
    "id": 266852227,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2Njg1MjIyNw==",
    "user": {
      "login": "jhallard",
      "id": 7551586,
      "node_id": "MDQ6VXNlcjc1NTE1ODY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/7551586?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jhallard",
      "html_url": "https://github.com/jhallard",
      "followers_url": "https://api.github.com/users/jhallard/followers",
      "following_url": "https://api.github.com/users/jhallard/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhallard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jhallard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhallard/subscriptions",
      "organizations_url": "https://api.github.com/users/jhallard/orgs",
      "repos_url": "https://api.github.com/users/jhallard/repos",
      "events_url": "https://api.github.com/users/jhallard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jhallard/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-13T20:27:51Z",
    "updated_at": "2016-12-13T20:27:51Z",
    "author_association": "NONE",
    "body": "Did this ever get fixed?  I just saw this start to pop up randomly in an application I'm working on. Partial stack-trace below, removing functions/data that I'm not at liberty to share.\r\n\r\n\r\n```python\r\n      File \"safelog.py\", line 133, in <lambda>\r\n        return (lambda text, *args: self.writelog(name, text, args))\r\n      File \"safelog.py\", line 56, in writelog\r\n        calframe = inspect.getouterframes(inspect.currentframe())\r\n      File \"/usr/lib/python2.7/inspect.py\", line 1038, in getouterframes\r\n        framelist.append((frame,) + getframeinfo(frame, context))\r\n      File \"/usr/lib/python2.7/inspect.py\", line 1013, in getframeinfo\r\n        lines, lnum = findsource(frame)\r\n      File \"/usr/lib/python2.7/inspect.py\", line 580, in findsource\r\n        if pat.match(lines[lnum]): break\r\n    IndexError: list index out of range\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/266923886",
    "html_url": "https://github.com/ipython/ipython/issues/1456#issuecomment-266923886",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1456",
    "id": 266923886,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjkyMzg4Ng==",
    "user": {
      "login": "xtknight",
      "id": 350525,
      "node_id": "MDQ6VXNlcjM1MDUyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/350525?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xtknight",
      "html_url": "https://github.com/xtknight",
      "followers_url": "https://api.github.com/users/xtknight/followers",
      "following_url": "https://api.github.com/users/xtknight/following{/other_user}",
      "gists_url": "https://api.github.com/users/xtknight/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xtknight/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xtknight/subscriptions",
      "organizations_url": "https://api.github.com/users/xtknight/orgs",
      "repos_url": "https://api.github.com/users/xtknight/repos",
      "events_url": "https://api.github.com/users/xtknight/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xtknight/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-14T02:21:00Z",
    "updated_at": "2016-12-14T06:07:12Z",
    "author_association": "NONE",
    "body": "Actually I just got it too when using the wide and deep learning example code with TensorFlow using CUDA. I made a code modification to using training and testing data from the local FS and removed the maybe_download function and saved the py file fast, running the script again. It happened at that point. I thought maybe somehow the file system was out of sync and Python got a handle of an old file and couldn't find the line number. It only happened once so far.\r\n\r\n    Traceback (most recent call last):\r\n      File \"wide_n_deep_tutorial.py\", line 207, in <module>\r\n      File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/platform/app.py\", line 43, in run\r\n        sys.exit(main(sys.argv[:1] + flags_passthrough))\r\n      File \"wide_n_deep_tutorial.py\", line 203, in main\r\n      File \"wide_n_deep_tutorial.py\", line 197, in train_and_eval\r\n      File \"/usr/local/lib/python3.5/dist-packages/tensorflow/contrib/learn/python/learn/estimators/dnn_linear_combined.py\", line 725, in evaluate\r\n        steps=steps, metrics=metrics, name=name)\r\n      File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/util/deprecation.py\", line 189, in new_func\r\n        _call_location(), decorator_utils.get_qualified_name(func),\r\n      File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/util/deprecation.py\", line 61, in _call_location\r\n        stack = inspect.stack()\r\n      File \"/usr/lib/python3.5/inspect.py\", line 1464, in stack\r\n        return getouterframes(sys._getframe(1), context)\r\n      File \"/usr/lib/python3.5/inspect.py\", line 1441, in getouterframes\r\n        frameinfo = (frame,) + getframeinfo(frame, context)\r\n      File \"/usr/lib/python3.5/inspect.py\", line 1414, in getframeinfo\r\n        lines, lnum = findsource(frame)\r\n      File \"/usr/lib/python3.5/inspect.py\", line 804, in findsource\r\n        if pat.match(lines[lnum]): break\r\n    IndexError: list index out of range\r\n\r\nEdit: there's a chance I accidentally saved the script while a previous one was running and the error was from the previous execution. This is what happened when it occurred again."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/467904859",
    "html_url": "https://github.com/ipython/ipython/issues/1456#issuecomment-467904859",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1456",
    "id": 467904859,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzkwNDg1OQ==",
    "user": {
      "login": "EPedrotti",
      "id": 44090731,
      "node_id": "MDQ6VXNlcjQ0MDkwNzMx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/44090731?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/EPedrotti",
      "html_url": "https://github.com/EPedrotti",
      "followers_url": "https://api.github.com/users/EPedrotti/followers",
      "following_url": "https://api.github.com/users/EPedrotti/following{/other_user}",
      "gists_url": "https://api.github.com/users/EPedrotti/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/EPedrotti/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/EPedrotti/subscriptions",
      "organizations_url": "https://api.github.com/users/EPedrotti/orgs",
      "repos_url": "https://api.github.com/users/EPedrotti/repos",
      "events_url": "https://api.github.com/users/EPedrotti/events{/privacy}",
      "received_events_url": "https://api.github.com/users/EPedrotti/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-27T15:24:55Z",
    "updated_at": "2019-02-27T15:24:55Z",
    "author_association": "NONE",
    "body": "Was this ever fixed? Is there a way around this problem? "
  }
]
