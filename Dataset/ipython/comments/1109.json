[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3035560",
    "html_url": "https://github.com/ipython/ipython/issues/1109#issuecomment-3035560",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1109",
    "id": 3035560,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzU1NjA=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-06T17:34:51Z",
    "updated_at": "2011-12-06T17:34:51Z",
    "author_association": "MEMBER",
    "body": "Unfortunately this seems to be a bug in python itself, not ours:\n\n```\nIn [18]: import shlex\n\nIn [19]: lex = shlex.shlex(' (\"a \")', posix=False)\n\nIn [20]: lex.whitespace_split = True\n\nIn [21]: list(lex)\n# Produces the same error here.\n```\n\nSince this is a fairly odd edge case (timeit is not meant to be called with parens anyway, since it's a magic function), I'd rather see the bug fixed in Python than add clunky workarounds in ipython.  We do add workarounds for Python bugs when they really cause major problems for all users, but in scenarios as this it's better to report the bug where it can be fixed upstream, so everyone ultimately benefits and we don't end up carrying a bunch of ugly hacks for a long time.\n\nSo I'd suggest reporting it to Python itself with the above snippet, where someone can hopefully work on it and fix it for good.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3039869",
    "html_url": "https://github.com/ipython/ipython/issues/1109#issuecomment-3039869",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1109",
    "id": 3039869,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzk4Njk=",
    "user": {
      "login": "jonovik",
      "id": 608322,
      "node_id": "MDQ6VXNlcjYwODMyMg==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/608322?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonovik",
      "html_url": "https://github.com/jonovik",
      "followers_url": "https://api.github.com/users/jonovik/followers",
      "following_url": "https://api.github.com/users/jonovik/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonovik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonovik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonovik/subscriptions",
      "organizations_url": "https://api.github.com/users/jonovik/orgs",
      "repos_url": "https://api.github.com/users/jonovik/repos",
      "events_url": "https://api.github.com/users/jonovik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonovik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-06T22:24:01Z",
    "updated_at": "2011-12-06T22:36:05Z",
    "author_association": "NONE",
    "body": "Thanks for the analysis. I have reported it as http://bugs.python.org/issue13543.\n\nRegarding the assertion that\n\n> this is a fairly odd edge case (timeit is not meant to be called with parens anyway, since it's a magic function)\n\nplease consider `timeit \"this is a bug\".count(\" \")` which is similar to my original use case (in reference to [a question on Stackoverflow](http://stackoverflow.com/questions/8403460/python-fastest-list-index-operation-using-is-not-i-e-by-reference)). In fact, most of my uses of timeit involve function calls. This bug precludes the use of \" \" as a function argument when using timeit. A workaround is to define `space = \" \"`, then e.g. `timeit \"this is a bug\".count(space)`.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3040583",
    "html_url": "https://github.com/ipython/ipython/issues/1109#issuecomment-3040583",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1109",
    "id": 3040583,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDA1ODM=",
    "user": {
      "login": "jonovik",
      "id": 608322,
      "node_id": "MDQ6VXNlcjYwODMyMg==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/608322?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonovik",
      "html_url": "https://github.com/jonovik",
      "followers_url": "https://api.github.com/users/jonovik/followers",
      "following_url": "https://api.github.com/users/jonovik/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonovik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonovik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonovik/subscriptions",
      "organizations_url": "https://api.github.com/users/jonovik/orgs",
      "repos_url": "https://api.github.com/users/jonovik/repos",
      "events_url": "https://api.github.com/users/jonovik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonovik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-06T23:15:17Z",
    "updated_at": "2011-12-06T23:15:17Z",
    "author_association": "NONE",
    "body": "Fernando, could you please comment on http://bugs.python.org/issue13543#msg148942, which asks \"Why do you consider this to be a bug?\" I'm not familiar enough with the `shlex` module to answer that.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3044369",
    "html_url": "https://github.com/ipython/ipython/issues/1109#issuecomment-3044369",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1109",
    "id": 3044369,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDQzNjk=",
    "user": {
      "login": "jonovik",
      "id": 608322,
      "node_id": "MDQ6VXNlcjYwODMyMg==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/608322?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonovik",
      "html_url": "https://github.com/jonovik",
      "followers_url": "https://api.github.com/users/jonovik/followers",
      "following_url": "https://api.github.com/users/jonovik/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonovik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonovik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonovik/subscriptions",
      "organizations_url": "https://api.github.com/users/jonovik/orgs",
      "repos_url": "https://api.github.com/users/jonovik/repos",
      "events_url": "https://api.github.com/users/jonovik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonovik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-07T08:01:17Z",
    "updated_at": "2011-12-07T08:01:17Z",
    "author_association": "NONE",
    "body": "I tried to look into the use of the shlex module, but do not understand its options. It may be that it is indeed working as documented, and that it is simply tricky to parse statements correctly for %timeit. Consider the following examples:\n\n```\nIn [1]: %doctest_mode\nException reporting mode: Plain\nDoctest mode is: ON\n>>> def f(*args, **kwargs):\n...     print args, kwargs\n...\n>>> f(1, \" \")\n(1, ' ') {}\n>>> f(\" \", 1)\n(' ', 1) {}\n>>> timeit -r1 -n1 f(1, \" \")\n(1, ' ') {}\n1 loops, best of 1: 1.16 ms per loop\n>>> timeit -r1 -n1 f(\" \", 1)\nTraceback (most recent call last):\nValueError: No closing quotation\n\n>>> timeit -r1 -n1 f(1, \" \", 2)\n(1, ' ', 2) {}\n1 loops, best of 1: 1.32 ms per loop\n>>> timeit -r1 -n1 f(1, \" \", 2, \" \")\n(1, ' ', 2, ' ') {}\n1 loops, best of 1: 1.08 ms per loop\n>>> timeit -r1 -n1 f(\" \", 1, \" \", 2, \" \")\nTraceback (most recent call last):\nValueError: No closing quotation\n>>> timeit -r1 -n1 (\"a \" + \"b\")\n1 loops, best of 1: 1.28 us per loop\n>>> timeit -r1 -n1 f(\"a \" + \"b\")\n('a  b',) {}\n1 loops, best of 1: 1.87 ms per loop\n>>> timeit -r1 -n1 f(\"a \" + \"b \")\nTraceback (most recent call last):\nValueError: No closing quotation\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3071470",
    "html_url": "https://github.com/ipython/ipython/issues/1109#issuecomment-3071470",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1109",
    "id": 3071470,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzE0NzA=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-08T22:48:52Z",
    "updated_at": "2011-12-08T22:48:52Z",
    "author_association": "MEMBER",
    "body": "The problem appears to be that Python source obviously doesn't sit well with non-posix whitespace-split shlex.\n\nquotation marks can connect blobs, but _only_ if they start a block:\n\n``` python\nlex = shlex.shlex('blob f(\" \")', posix=False)\nlex.whitespace_split=True\nfor s in lex:\n    print repr(s)\n'blob'\n'f(\"'\nValueError\n```\n\nThe remaining blob is `\")`, an unterminated quotation.\n\nHowever, if we protect the quotes, so they are always led by whitespace:\n\n``` python\nlex = shlex.shlex('blob f( \" \")', posix=False)\nlex.whitespace_split=True\nfor s in lex:\n    print repr(s)\n'blob'\n'f('\n'\" \"'\n')'\n```\n\nThen the whole thing is split safely.  \n\nSo if you lead all your open-quotes with whitespace, you should be fine (works for all given examples, at least).\n\nI have no idea whether this is a Python bug or not, since I don't know what the reference standard is, but this is definitely an IPython bug.  We should not be trying to use shlex to parse Python code as if it were command-line arguments.\n\nFWIW, here is a real shlex bug (as far as I know), related to #1123:\n\n```\nshlex.split(\"'it\\\\'s' valid\")\n```\n\nApparently shlex can't handle escaped quotes.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3071899",
    "html_url": "https://github.com/ipython/ipython/issues/1109#issuecomment-3071899",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1109",
    "id": 3071899,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzE4OTk=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-08T23:16:32Z",
    "updated_at": "2011-12-08T23:16:32Z",
    "author_association": "MEMBER",
    "body": "hm, turns out I was wrong about the shlex bug - in posix, you can't escape quotes inside a single-quoted string, but you _can_ escape them in double-quoted strings.  I always forget that the world outside Python doesn't treat single and double quotes the same.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3072571",
    "html_url": "https://github.com/ipython/ipython/issues/1109#issuecomment-3072571",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1109",
    "id": 3072571,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzI1NzE=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-08T23:52:15Z",
    "updated_at": "2011-12-08T23:52:15Z",
    "author_association": "MEMBER",
    "body": "PR #1130 should fix this particular issue, though we should consider a cleaner fix in the long term, where we aren't trying to parse Python code with shlex.\n"
  }
]
