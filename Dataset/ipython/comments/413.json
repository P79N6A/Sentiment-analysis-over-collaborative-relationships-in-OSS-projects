[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1099181",
    "html_url": "https://github.com/ipython/ipython/pull/413#issuecomment-1099181",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/413",
    "id": 1099181,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwOTkxODE=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-05-04T10:54:29Z",
    "updated_at": "2011-05-04T10:54:29Z",
    "author_association": "MEMBER",
    "body": "I added `Client.resubmit([msg_ids])` for re-running previously finished, failed, or aborted tasks.  This could also be used, to some degree, for resuming the queue of a crashed or shutdown cluster (assuming db backend in use):\n\n``` python\n# < start fresh Controller >\nrc = Client()\n # fetch all unfinished tasks (just IDs and timestamps)\nunfinished = rc.db_query(dict(completed=None), keys=['msg_id', 'submitted'])\n # restore submission order\nreordered = sorted(unfinished, key=lambda d: d['submitted'])\n # resubmit by msg_id\nrc.resubmit([ d['msg_id'] for d in reordered ])\n```\n\nresubmit, like db_query, is a Client method, not a View method. I could easily be persuaded that Views should see this as well.  \n\nCurrently, this enforces that the resubmitted task is _identical_ to the original, and only submitted via the load-balanced scheduler. It is feasible that one would want to make some kind of alteration to the header, or support resubmit of MUX operations, particularly with the goal of restoring cluster state.\n\nThis should address #411\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1102634",
    "html_url": "https://github.com/ipython/ipython/pull/413#issuecomment-1102634",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/413",
    "id": 1102634,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMDI2MzQ=",
    "user": {
      "login": "kaazoo",
      "id": 357935,
      "node_id": "MDQ6VXNlcjM1NzkzNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/357935?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kaazoo",
      "html_url": "https://github.com/kaazoo",
      "followers_url": "https://api.github.com/users/kaazoo/followers",
      "following_url": "https://api.github.com/users/kaazoo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kaazoo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kaazoo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kaazoo/subscriptions",
      "organizations_url": "https://api.github.com/users/kaazoo/orgs",
      "repos_url": "https://api.github.com/users/kaazoo/repos",
      "events_url": "https://api.github.com/users/kaazoo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kaazoo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-05-04T22:30:35Z",
    "updated_at": "2011-05-04T23:44:18Z",
    "author_association": "NONE",
    "body": "When I manually try to resubmit a task with the following code, I get an error message in ipcontroller. However, the task seems to be run again.\n\n``` python\nfrom IPython.parallel import Client\nrc = Client()\nrc.session.session = \"job98\"\nrc.resubmit('99ef4117-dc9c-42b1-bad1-2ba44e1e9896')\n```\n\n``` python\n[IPControllerApp] client::client '45e8113c-156a-42dc-9f35-71db2671ad84' requested 'resubmit_request'\n[IPControllerApp] conflicting initial state for record: 99ef4117-dc9c-42b1-bad1-2ba44e1e9896:a762a146-a47b-4a18-9f49-8a383079cbf6 <> [u'45e8113c-156a-42dc-9f35-71db2671ad84']\n[IPControllerApp] conflicting initial state for record: 99ef4117-dc9c-42b1-bad1-2ba44e1e9896:2011-05-05 00:50:30.171437 <> 2011-05-05 00:50:30.171000\n[IPControllerApp] conflicting initial state for record: 99ef4117-dc9c-42b1-bad1-2ba44e1e9896:{\"msg_ids\":[\"99ef4117-dc9c-42b1-bad1-2ba44e1e9896\"]} <> {}\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1102992",
    "html_url": "https://github.com/ipython/ipython/pull/413#issuecomment-1102992",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/413",
    "id": 1102992,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMDI5OTI=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-05-05T00:07:10Z",
    "updated_at": "2011-05-05T00:07:10Z",
    "author_association": "MEMBER",
    "body": "Ah, that's what I get for only testing with SQLite.  Should work with mongodb now.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1103206",
    "html_url": "https://github.com/ipython/ipython/pull/413#issuecomment-1103206",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/413",
    "id": 1103206,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMDMyMDY=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-05-05T01:13:23Z",
    "updated_at": "2011-05-05T01:13:23Z",
    "author_association": "MEMBER",
    "body": "I think I fixed that conflicting state issue just now, and a couple small related issues.\n\nI see that you are doing the session override even on resubmits.  Note that this will have no effect at all on the resubmitted tasks - they will be identical to the original in their headers, etc. which contain that information.  The only information that changes is the result (potentially), the associated client_id, and information related to where/when it runs.\n\nIf you are doing that to make sure it's the same as before, that's unnecessary, and if you want it to be different, that's not possible (I can make it possible, but it isn't currently).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1108491",
    "html_url": "https://github.com/ipython/ipython/pull/413#issuecomment-1108491",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/413",
    "id": 1108491,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMDg0OTE=",
    "user": {
      "login": "kaazoo",
      "id": 357935,
      "node_id": "MDQ6VXNlcjM1NzkzNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/357935?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kaazoo",
      "html_url": "https://github.com/kaazoo",
      "followers_url": "https://api.github.com/users/kaazoo/followers",
      "following_url": "https://api.github.com/users/kaazoo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kaazoo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kaazoo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kaazoo/subscriptions",
      "organizations_url": "https://api.github.com/users/kaazoo/orgs",
      "repos_url": "https://api.github.com/users/kaazoo/repos",
      "events_url": "https://api.github.com/users/kaazoo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kaazoo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-05-05T22:03:06Z",
    "updated_at": "2011-05-05T22:03:06Z",
    "author_association": "NONE",
    "body": "Yes, you are right. Setting the session again makes no sense.\n\nI did some testing with my wrapper methods to create a DrQueue job (IPython session) and some tasks. See https://github.com/kaazoo/DrQueueIPython/blob/master/DrQueue/client.py for details.\n\nFirst step: create tasks of job\n\n``` bash\npython2.6 sendjob_ipython.py -s 1 -e 5 -b 1 -r blender -f /usr/local/drqueue/tmp/icetest.blend -n \"job032\" -o \"{'rendertype':'animation'}\" --owner \"foobar\"\n```\n\nHave a look on them. They are pending:\n\n``` bash\npython2.6 listjobs_ipython.py\nTasks of job job032:\nmsg_id                                 status    owner       completed at\n0a348798-77ce-480e-a264-a726aa8d3c37   pending   foobar      2011-05-05 23:35:47\n5e60e1ed-c531-4477-80e5-0ae7c760cc57   pending   foobar      2011-05-05 23:35:47\n01915017-fcee-4b28-8e90-e50a364e8f96   pending   foobar      2011-05-05 23:35:47\nf2158540-c58a-44b7-8e81-e47d6e828ece   pending   foobar      2011-05-05 23:35:47\n4358e073-5641-49e4-b273-b58ed39e3d00   pending   foobar      2011-05-05 23:35:47\n```\n\nWait a while. Now they are completed:\n\n``` bash\npython2.6 listjobs_ipython.py\nTasks of job job032:\nmsg_id                                 status    owner       completed at\n0a348798-77ce-480e-a264-a726aa8d3c37   ok        foobar      2011-05-05 23:42:19\n5e60e1ed-c531-4477-80e5-0ae7c760cc57   ok        foobar      2011-05-05 23:42:19\n01915017-fcee-4b28-8e90-e50a364e8f96   ok        foobar      2011-05-05 23:42:45\nf2158540-c58a-44b7-8e81-e47d6e828ece   ok        foobar      2011-05-05 23:42:45\n4358e073-5641-49e4-b273-b58ed39e3d00   ok        foobar      2011-05-05 23:42:58\n```\n\nSecond step: requeue all tasks of job\n\n``` bash\npython2.6 controljob_ipython.py -r -n job032\nrequeuing 0a348798-77ce-480e-a264-a726aa8d3c37\nrequeuing 5e60e1ed-c531-4477-80e5-0ae7c760cc57\nrequeuing 01915017-fcee-4b28-8e90-e50a364e8f96\nrequeuing f2158540-c58a-44b7-8e81-e47d6e828ece\nrequeuing 4358e073-5641-49e4-b273-b58ed39e3d00\nJob job032 is running another time.\n```\n\nHave a look again. They are pending:\n\n``` bash\npython2.6 listjobs_ipython.py\nTasks of job job032:\nmsg_id                                 status    owner       completed at\n0a348798-77ce-480e-a264-a726aa8d3c37   pending   foobar      2011-05-05 23:35:47\n5e60e1ed-c531-4477-80e5-0ae7c760cc57   pending   foobar      2011-05-05 23:35:47\n01915017-fcee-4b28-8e90-e50a364e8f96   pending   foobar      2011-05-05 23:35:47\nf2158540-c58a-44b7-8e81-e47d6e828ece   pending   foobar      2011-05-05 23:35:47\n4358e073-5641-49e4-b273-b58ed39e3d00   pending   foobar      2011-05-05 23:35:47\n```\n\nWait a while. Hhhmm, one task isn't ready but the engines are idle:\n\n``` bash\npython2.6 listjobs_ipython.py\nTasks of job job032:\nmsg_id                                 status    owner       completed at\n0a348798-77ce-480e-a264-a726aa8d3c37   ok        foobar      2011-05-05 23:45:33\n5e60e1ed-c531-4477-80e5-0ae7c760cc57   ok        foobar      2011-05-05 23:45:33\n01915017-fcee-4b28-8e90-e50a364e8f96   ok        foobar      2011-05-05 23:45:58\nf2158540-c58a-44b7-8e81-e47d6e828ece   ok        foobar      2011-05-05 23:45:58\n4358e073-5641-49e4-b273-b58ed39e3d00   pending   foobar      2011-05-05 23:45:58\n```\n\nThird step: requeue again\n\n``` bash\npython2.6 controljob_ipython.py -r -n job032\nrequeuing 0a348798-77ce-480e-a264-a726aa8d3c37\nrequeuing 5e60e1ed-c531-4477-80e5-0ae7c760cc57\nrequeuing 01915017-fcee-4b28-8e90-e50a364e8f96\nrequeuing f2158540-c58a-44b7-8e81-e47d6e828ece\nTraceback (most recent call last):\n  File \"controljob_ipython.py\", line 62, in <module>\n    main()\n  File \"controljob_ipython.py\", line 53, in main\n    client.job_rerun(options.name)\n  File \"/Users/kaazoo/Documents/Entwicklung/drqueue-entwicklung/drqueue-zmq/DrQueue/client.py\", line 217, in job_rerun\n    self.task_requeue(task['msg_id'])\n  File \"/Users/kaazoo/Documents/Entwicklung/drqueue-entwicklung/drqueue-zmq/DrQueue/client.py\", line 198, in task_requeue\n    self.ip_client.resubmit(task_id)\n  File \"<string>\", line 2, in resubmit\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/IPython/parallel/client/client.py\", line 48, in spin_first\n    return f(self, *args, **kwargs)\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/IPython/parallel/client/client.py\", line 1098, in resubmit\n    raise self._unwrap_exception(content)\nIPython.parallel.error.RemoteError: ValueError(Task u'4358e073-5641-49e4-b273-b58ed39e3d00' appears to be inflight)\nTraceback (most recent call last):\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/IPython/parallel/controller/hub.py\", line 1133, in resubmit_task\n    raise ValueError(\"Task %r appears to be inflight\"%(msg_id))\nValueError: Task u'4358e073-5641-49e4-b273-b58ed39e3d00' appears to be inflight\n```\n\nWhat could be the couse of this? There's a pending task that can't be run by an engine and can't be requeued.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1108971",
    "html_url": "https://github.com/ipython/ipython/pull/413#issuecomment-1108971",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/413",
    "id": 1108971,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMDg5NzE=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-05-06T00:16:09Z",
    "updated_at": "2011-05-06T00:16:09Z",
    "author_association": "MEMBER",
    "body": "Is this consistently reproducible?\n\nThe 'can't be run' and 'can't be requeued' are really one issue.  If a job is listed as 'pending', it's not allowed to be resubmitted, because that would allow a race condition on the result, so if it's stuck in 'pending', it will stay that way, and it's a bug (probably in the Scheduler).  You can specify a timeout on tasks, which should prevent it from getting stuck, at least.\n\nDoes it have any dependencies? Can you do a db query on the task and post it here (excluding buffers)?\n\nDoes the controller log show that it arrived on an engine?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1157395",
    "html_url": "https://github.com/ipython/ipython/pull/413#issuecomment-1157395",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/413",
    "id": 1157395,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNTczOTU=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-05-13T21:12:16Z",
    "updated_at": "2011-05-13T21:12:16Z",
    "author_association": "MEMBER",
    "body": "@kaazoo any updates on log output or patterns?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1231790",
    "html_url": "https://github.com/ipython/ipython/pull/413#issuecomment-1231790",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/413",
    "id": 1231790,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMzE3OTA=",
    "user": {
      "login": "kaazoo",
      "id": 357935,
      "node_id": "MDQ6VXNlcjM1NzkzNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/357935?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kaazoo",
      "html_url": "https://github.com/kaazoo",
      "followers_url": "https://api.github.com/users/kaazoo/followers",
      "following_url": "https://api.github.com/users/kaazoo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kaazoo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kaazoo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kaazoo/subscriptions",
      "organizations_url": "https://api.github.com/users/kaazoo/orgs",
      "repos_url": "https://api.github.com/users/kaazoo/repos",
      "events_url": "https://api.github.com/users/kaazoo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kaazoo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-05-24T22:09:15Z",
    "updated_at": "2011-05-24T22:09:15Z",
    "author_association": "NONE",
    "body": "I tried it again today after pulling from https://github.com/ipython/ipython.git which already had your last commits in connection to this topic. The error situation as described above doesn't seem to happen anymore. Thanks.\n"
  }
]
