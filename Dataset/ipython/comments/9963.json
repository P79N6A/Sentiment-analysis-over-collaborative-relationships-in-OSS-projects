[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/248390813",
    "html_url": "https://github.com/ipython/ipython/issues/9963#issuecomment-248390813",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9963",
    "id": 248390813,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODM5MDgxMw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-20T18:32:08Z",
    "updated_at": "2016-09-20T18:32:08Z",
    "author_association": "MEMBER",
    "body": "Pinging @jonathanslenders . Here's the last couple of frames from the traceback, for convenience:\n\n```\n/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/prompt_toolkit/layout/margins.pyc in create_margin(self=<prompt_toolkit.layout.margins.ConditionalMargin object>, cli=<prompt_toolkit.interface.CommandLineInterface object>, window_render_info=<prompt_toolkit.layout.containers.WindowRenderInfo object>, width=8, height=2)\n    124     \"\"\"\n    125     def __init__(self, margin, filter):\n    126         assert isinstance(margin, Margin)\n    127 \n    128         self.margin = margin\n    129         self.filter = to_cli_filter(filter)\n    130 \n    131     def get_width(self, cli, ui_content):\n    132         if self.filter(cli):\n    133             return self.margin.get_width(cli, ui_content)\n    134         else:\n    135             return 0\n    136 \n    137     def create_margin(self, cli, window_render_info, width, height):\n    138         if width and self.filter(cli):\n--> 139             return self.margin.create_margin(cli, window_render_info, width, height)\n        self.margin.create_margin = <bound method PromptMargin.create_margin of <prompt_toolkit.layout.margins.PromptMargin object at 0x10d7291d0>>\n        cli = <prompt_toolkit.interface.CommandLineInterface object at 0x10d792f50>\n        window_render_info = <prompt_toolkit.layout.containers.WindowRenderInfo object at 0x1114b9c90>\n        width = 8\n        height = 2\n    140         else:\n    141             return []\n    142 \n    143 \n    144 class ScrollbarMargin(Margin):\n    145     \"\"\"\n    146     Margin displaying a scrollbar.\n    147 \n    148     :param display_arrows: Display scroll up/down arrows.\n    149     \"\"\"\n    150     def __init__(self, display_arrows=False):\n    151         self.display_arrows = to_cli_filter(display_arrows)\n    152 \n    153     def get_width(self, cli, ui_content):\n    154         return 1\n\n/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/prompt_toolkit/layout/margins.pyc in create_margin(self=<prompt_toolkit.layout.margins.PromptMargin object>, cli=<prompt_toolkit.interface.CommandLineInterface object>, window_render_info=<prompt_toolkit.layout.containers.WindowRenderInfo object>, width=8, height=2)\n    232         # Next lines. (Show line numbering when numbering is enabled.)\n    233         if self.get_continuation_tokens:\n    234             tokens2 = self.get_continuation_tokens(cli, width)\n    235         else:\n    236             tokens2 = []\n    237 \n    238         show_numbers = self.show_numbers(cli)\n    239         last_y = None\n    240 \n    241         for y in window_render_info.displayed_lines[1:]:\n    242             tokens.append((Token, '\\n'))\n    243             if show_numbers:\n    244                 if y != last_y:\n    245                     tokens.append((Token.LineNumber, ('%i ' % (y + 1)).rjust(width)))\n    246             else:\n--> 247                 tokens.extend(tokens2)\n        tokens.extend = <built-in method extend of list object at 0x1114bf128>\n        tokens2 = None\n    248             last_y = y\n    249 \n    250         return tokens\n\nTypeError: 'NoneType' object is not iterable\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/248521187",
    "html_url": "https://github.com/ipython/ipython/issues/9963#issuecomment-248521187",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9963",
    "id": 248521187,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODUyMTE4Nw==",
    "user": {
      "login": "jonathanslenders",
      "id": 216638,
      "node_id": "MDQ6VXNlcjIxNjYzOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/216638?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonathanslenders",
      "html_url": "https://github.com/jonathanslenders",
      "followers_url": "https://api.github.com/users/jonathanslenders/followers",
      "following_url": "https://api.github.com/users/jonathanslenders/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonathanslenders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonathanslenders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonathanslenders/subscriptions",
      "organizations_url": "https://api.github.com/users/jonathanslenders/orgs",
      "repos_url": "https://api.github.com/users/jonathanslenders/repos",
      "events_url": "https://api.github.com/users/jonathanslenders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonathanslenders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-21T06:14:27Z",
    "updated_at": "2016-09-21T06:14:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "That's a bug. I'm not sure what's going on, but I'll debug asap.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/250023999",
    "html_url": "https://github.com/ipython/ipython/issues/9963#issuecomment-250023999",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9963",
    "id": 250023999,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDAyMzk5OQ==",
    "user": {
      "login": "arahlin",
      "id": 5911612,
      "node_id": "MDQ6VXNlcjU5MTE2MTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5911612?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arahlin",
      "html_url": "https://github.com/arahlin",
      "followers_url": "https://api.github.com/users/arahlin/followers",
      "following_url": "https://api.github.com/users/arahlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/arahlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arahlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arahlin/subscriptions",
      "organizations_url": "https://api.github.com/users/arahlin/orgs",
      "repos_url": "https://api.github.com/users/arahlin/repos",
      "events_url": "https://api.github.com/users/arahlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arahlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-27T23:00:37Z",
    "updated_at": "2016-09-27T23:00:37Z",
    "author_association": "NONE",
    "body": "Any luck with this? I'm happy to provide more data for debugging if you need.\n\nFWIW I've now tried running iPython in both iTerm2 v3.0.8 and the native OSX Terminal app (v2.4), and I see the same behavior each time I input a line that's too long.  If I add the following below line 234 in `prompt_toolkit/layout/margins.py` then I no longer get a crash:\n\n```\nif tokens2 is None:\n    tokens2 = []\n```\n\nHowever, I'm not sure why the `get_continuation_tokens` function that returns `tokens2` is returning `None` in the first place, so I'm not convinced this is an acceptable fix.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/263377968",
    "html_url": "https://github.com/ipython/ipython/issues/9963#issuecomment-263377968",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9963",
    "id": 263377968,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzM3Nzk2OA==",
    "user": {
      "login": "arahlin",
      "id": 5911612,
      "node_id": "MDQ6VXNlcjU5MTE2MTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5911612?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arahlin",
      "html_url": "https://github.com/arahlin",
      "followers_url": "https://api.github.com/users/arahlin/followers",
      "following_url": "https://api.github.com/users/arahlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/arahlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arahlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arahlin/subscriptions",
      "organizations_url": "https://api.github.com/users/arahlin/orgs",
      "repos_url": "https://api.github.com/users/arahlin/repos",
      "events_url": "https://api.github.com/users/arahlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arahlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-28T20:02:09Z",
    "updated_at": "2016-11-28T20:02:09Z",
    "author_association": "NONE",
    "body": "Pinging again.  Worth my submitting the above fix as a pull request?"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/263540561",
    "html_url": "https://github.com/ipython/ipython/issues/9963#issuecomment-263540561",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9963",
    "id": 263540561,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzU0MDU2MQ==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-29T11:00:02Z",
    "updated_at": "2016-11-29T11:00:02Z",
    "author_association": "MEMBER",
    "body": "@arahlin please do!"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/263718097",
    "html_url": "https://github.com/ipython/ipython/issues/9963#issuecomment-263718097",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9963",
    "id": 263718097,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzcxODA5Nw==",
    "user": {
      "login": "jonathanslenders",
      "id": 216638,
      "node_id": "MDQ6VXNlcjIxNjYzOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/216638?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonathanslenders",
      "html_url": "https://github.com/jonathanslenders",
      "followers_url": "https://api.github.com/users/jonathanslenders/followers",
      "following_url": "https://api.github.com/users/jonathanslenders/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonathanslenders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonathanslenders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonathanslenders/subscriptions",
      "organizations_url": "https://api.github.com/users/jonathanslenders/orgs",
      "repos_url": "https://api.github.com/users/jonathanslenders/repos",
      "events_url": "https://api.github.com/users/jonathanslenders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonathanslenders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-29T22:18:09Z",
    "updated_at": "2016-11-29T22:18:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi everyone, I forgot about this issue.\r\nThis appears to be a bug in the ``get_continuation_tokens`` function that is passed to prompt_toolkit. This function is supposed to always return a list. An empty list is fine as well. None is not a valid return value.\r\n\r\n@arahlin, @minrk: Do you have a custom IPython configuration that changes anything to how the prompt is displayed? Could you share it somewhere? I am not able to reproduce this with a default configuration."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/263722484",
    "html_url": "https://github.com/ipython/ipython/issues/9963#issuecomment-263722484",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9963",
    "id": 263722484,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzcyMjQ4NA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-29T22:35:26Z",
    "updated_at": "2016-11-29T22:35:26Z",
    "author_association": "MEMBER",
    "body": "For reference, here's the function which provides the continuation prompt tokens normally, if the user hasn't configured different prompts:\r\n\r\nhttps://github.com/ipython/ipython/blob/5.1.0/IPython/terminal/prompts.py#L25"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/263728560",
    "html_url": "https://github.com/ipython/ipython/issues/9963#issuecomment-263728560",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9963",
    "id": 263728560,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzcyODU2MA==",
    "user": {
      "login": "arahlin",
      "id": 5911612,
      "node_id": "MDQ6VXNlcjU5MTE2MTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5911612?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arahlin",
      "html_url": "https://github.com/arahlin",
      "followers_url": "https://api.github.com/users/arahlin/followers",
      "following_url": "https://api.github.com/users/arahlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/arahlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arahlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arahlin/subscriptions",
      "organizations_url": "https://api.github.com/users/arahlin/orgs",
      "repos_url": "https://api.github.com/users/arahlin/repos",
      "events_url": "https://api.github.com/users/arahlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arahlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-29T23:01:49Z",
    "updated_at": "2016-11-29T23:01:49Z",
    "author_association": "NONE",
    "body": "Oh wow, apologies folks: looks like the trouble was on my end all along... Thanks for the catch @jonathanslenders! I'd forgotten that I had set up a custom prompt, and it seems I'd snuck in an indentation error in the config file.  My custom prompt was indeed returning `None` when it shouldn't be.\r\n\r\nMight still be worth adding the above check for the value of `tokens2`, maybe with a useful warning?  I'd rather have a slightly odd looking prompt over losing the whole session... I can certainly submit a pull request if deemed sensible.\r\n\r\nSorry again for the runaround!"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/263822971",
    "html_url": "https://github.com/ipython/ipython/issues/9963#issuecomment-263822971",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9963",
    "id": 263822971,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzgyMjk3MQ==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-30T09:19:39Z",
    "updated_at": "2016-11-30T09:19:39Z",
    "author_association": "MEMBER",
    "body": "IPython in general should try to be resilient against anything user-configurable. One simple option is we could run the prompt once ourselves at startup to validate it."
  }
]
