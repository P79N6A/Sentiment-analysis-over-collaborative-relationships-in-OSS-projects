[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2572507",
    "html_url": "https://github.com/ipython/ipython/pull/953#issuecomment-2572507",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/953",
    "id": 2572507,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzI1MDc=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-31T00:16:29Z",
    "updated_at": "2011-10-31T00:16:29Z",
    "author_association": "MEMBER",
    "body": "Minor suggestions, otherwise looks good.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2572521",
    "html_url": "https://github.com/ipython/ipython/pull/953#issuecomment-2572521",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/953",
    "id": 2572521,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzI1MjE=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-31T00:20:36Z",
    "updated_at": "2011-10-31T00:20:36Z",
    "author_association": "MEMBER",
    "body": "Done and done, compromising a bit on PEP-8 because those functions are clearly related, so one blank line feels nicer than two.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2572582",
    "html_url": "https://github.com/ipython/ipython/pull/953#issuecomment-2572582",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/953",
    "id": 2572582,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzI1ODI=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-31T00:35:08Z",
    "updated_at": "2011-10-31T00:35:08Z",
    "author_association": "MEMBER",
    "body": "I am -1 on this being in IPython proper.  The original module was added back when IPython was sort of a dumping ground for lots of things.  I feel that in order for an extension to be shipped with IPython are couple of conditions should be satisfied:\n- They need to have broad appeal that a significant fraction of IPython users would want.\n- One of the core devs need to commit to their maint.  \n- No dependencies or ones that are completely common.  The Scientific package does not fall into this category in my mind.\n\nHere is an alternate model for extensions that I think we should pursue and encourage:\n- Extensions are shipped with the packages they apply to.  Thus the existing sympy extension should ship with sympy.  A numpy extensions should ship with numpy, etc.  The extension under review here should ship with Scientific.\n- We should improve our extensions loading API to make it easier to load extensions that are in other projects.\n\nHow does that sound?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2572603",
    "html_url": "https://github.com/ipython/ipython/pull/953#issuecomment-2572603",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/953",
    "id": 2572603,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzI2MDM=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-31T00:42:38Z",
    "updated_at": "2011-10-31T00:42:38Z",
    "author_association": "MEMBER",
    "body": "On Sun, Oct 30, 2011 at 5:35 PM, Brian E. Granger\nreply@reply.github.com\nwrote:\n\n> How does that sound?\n\nI'm OK with that idea; it's true that having extensions with slightly\nobscure dependencies (Scientific is _much_ less commonly used than\nnumpy/scipy) rises dramatically the likelihood of code rot again in\nthe future, as they won't be tested automatically.\n\nIn the meantime, it might be better for this simply to live in a gist\nlinked to from the Cookbook recipe with a clear explanation on how to\nturn it on.\n\nThat would make it easiest for anyone to find it and use it with just\none or two copy/paste actions, while allowing the code to evolve in\nversion control.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2572642",
    "html_url": "https://github.com/ipython/ipython/pull/953#issuecomment-2572642",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/953",
    "id": 2572642,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzI2NDI=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-31T00:54:58Z",
    "updated_at": "2011-10-31T00:55:30Z",
    "author_association": "MEMBER",
    "body": "I agree in the general case, but I'd be inclined to include this one, because:\n- It has fairly broad appeal, particularly as a casual thing (i.e. potential users are less likely to put up with downloading and installing it separately)\n- It's not very complex, so it shouldn't be too much effort to maintain.\n- ScientificPython doesn't seem to be actively updated any more, so it's unlikely that it will ship as part of that in the near future. I don't know of any clear alternative package for what this uses. On the plus side, no updates means no API breakage from that side.\n\nIf we do want to leave it as a separate thing, Georg already has it in a [bitbucket repo](https://bitbucket.org/birkenfeld/ipython-physics/). But I really think it will be a lot more use if you can turn it on with one command. We should probably give a clear error message if Scientific isn't installed, though.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2572729",
    "html_url": "https://github.com/ipython/ipython/pull/953#issuecomment-2572729",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/953",
    "id": 2572729,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzI3Mjk=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-31T01:24:37Z",
    "updated_at": "2011-10-31T01:24:37Z",
    "author_association": "MEMBER",
    "body": "If ScientificPython is not being maintained, that is even more reason to _not_ include the extension in IPython.  As Fernando said, someone should maintain it as a gist or on github/bitbucket and we can provide a link in our list of IPython extensions.  I guess the bitbucket repo Georg has would work fine.\n\nBut we should open up a ticket to improve the extension loading syntax/API.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2573079",
    "html_url": "https://github.com/ipython/ipython/pull/953#issuecomment-2573079",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/953",
    "id": 2573079,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzMwNzk=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-31T02:55:26Z",
    "updated_at": "2011-10-31T02:55:26Z",
    "author_association": "MEMBER",
    "body": "Despite the fact that I have a very soft spot for this extension, I think in this case Brian's conservative approach is wise: for one thing, we should have test coverage also for extensions, with an eye towards (in the hopefully not too distant future) having a buildbot.  Having extensions that require somewhat exotic packages will make it that much harder to ensure that buildbots across platforms execute the full test suite (e.g., getting a windows buildbot with Scientific installed may or may not be trivial...).\n\nAn alternative approach would be to have an 'ipython-goodies' (perhaps with a better name) repo that _we_ host, and that is independent from the main repo.  For example on Debian/ubuntu, Emacs ships a simlar package with a ton of useful stuff on top of the core package.\n\nSuch a repo could contain more specialized extensions, extra magics and profiles, etc.  Along with an easy command to do a _user_ installation of the lot, I could see it being very useful.  In the long run I would like upstream packages to adopt ipython extensions themselves, but I'm pretty sure there will always be useful, user-contributed things that upstream may (for whatever reason) decide not to package themselves.  Such a repo would be a perfect area to maintain such tools and make them easily available to users; if upstream decides to adopt a tool we can always stop carrying it there, but if it doesn't adopt it our repo would provide it to users.\n\nWe'd have to think a little bit about the layout of such a repo, because ideally it should be possible for users to simply `git clone` it somewhere, and  have IPython find things in there without requiring a separate manual re-installation every time they update via `git pull`.  Basically we want to make it possible to have a workflow akin to what you get with `setup.py develop` or manual symlinking of a source tree.\n\n@takluyver, how does this idea sound for the longer term?  I think it's ultimately a more sustainable approach, and it also would be something where users would be more likely to contribute new tools that's easier than digging into the core.  Basically, think of this as a version-controlled, installable repository of the best of the cookbook...\n\nOne caveat: if we go for this, I'd like to table the discussion for a bit so we can focus on closing the hard PRs and critical bugs we have left.  I've been trying super hard to stay on top of new PRs, but if we keep putting out new features and ideas, we're never going to release 0.12 :)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2573887",
    "html_url": "https://github.com/ipython/ipython/pull/953#issuecomment-2573887",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/953",
    "id": 2573887,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzM4ODc=",
    "user": {
      "login": "birkenfeld",
      "id": 144359,
      "node_id": "MDQ6VXNlcjE0NDM1OQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/144359?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/birkenfeld",
      "html_url": "https://github.com/birkenfeld",
      "followers_url": "https://api.github.com/users/birkenfeld/followers",
      "following_url": "https://api.github.com/users/birkenfeld/following{/other_user}",
      "gists_url": "https://api.github.com/users/birkenfeld/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/birkenfeld/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/birkenfeld/subscriptions",
      "organizations_url": "https://api.github.com/users/birkenfeld/orgs",
      "repos_url": "https://api.github.com/users/birkenfeld/repos",
      "events_url": "https://api.github.com/users/birkenfeld/events{/privacy}",
      "received_events_url": "https://api.github.com/users/birkenfeld/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-31T06:17:06Z",
    "updated_at": "2011-10-31T06:17:06Z",
    "author_association": "NONE",
    "body": "Coming a bit late to the discussion; I won't shed too many tears if the extension isn't included in IPython itself, but the ScientificPython question can be answered quite easily: the module that's used from there is as good as standalone and has 800 lines, many of which are unit definitions; it could easily be put into the extension source. For me, this wouldn't be code duplication in the common sense because the original code isn't maintained anymore anyway. (It would also do away with the monkey-patching, and I could conceivable also make it a bit prettier.)\n\nIf the removal of the dependency is seen as a good thing, I'll do it and push to my bitbucket repo.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2575495",
    "html_url": "https://github.com/ipython/ipython/pull/953#issuecomment-2575495",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/953",
    "id": 2575495,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzU0OTU=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-31T10:56:16Z",
    "updated_at": "2011-10-31T10:56:16Z",
    "author_association": "MEMBER",
    "body": "OK, I can see I'm not going to get my way on this one. I'll withdraw the PR.\n\nI think the best way forwards is to add an %install_ext magic, that will download a file and put it in the extensions directory. Then at least it's just two commands to start using this (%install_ext, %load_ext). We can keep other extensions in gists or whatever seems best. I guess this is the sort of thing to leave until after 0.12 now, though.\n\n@birkenfeld: I made some changes here to drop the variables from the user namespace when the extension is unloaded. The relevant method isn't in 0.11, but once 0.12 is widespread, you might want to reuse the changes. (One upside of bundling it: we know what IPython version we're targeting)\n"
  }
]
