[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/768069",
    "html_url": "https://github.com/ipython/ipython/issues/269#issuecomment-768069",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/269",
    "id": 768069,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2ODA2OQ==",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-02-13T18:08:29Z",
    "updated_at": "2011-02-13T18:08:29Z",
    "author_association": "MEMBER",
    "body": "Part of the challenge of this is that different people enter our older API at different locations.  Some through Shell, but others through the ipmaker stuff.  But this pretty annoying though that these old things don't work (like isympy).  Minimally, we should have a clear entry point for our new API.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/768467",
    "html_url": "https://github.com/ipython/ipython/issues/269#issuecomment-768467",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/269",
    "id": 768467,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2ODQ2Nw==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-02-13T21:32:15Z",
    "updated_at": "2011-02-13T21:32:15Z",
    "author_association": "MEMBER",
    "body": "Yes, it's not a pretty situation. But I think the start().mainloop() form is likely the most common entry point, I've seen it used in several high-profile tools, including gedit.  So if we can at least cover that one, it will be a good help.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1438431",
    "html_url": "https://github.com/ipython/ipython/issues/269#issuecomment-1438431",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/269",
    "id": 1438431,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0Mzg0MzE=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-06-25T16:55:36Z",
    "updated_at": "2011-06-25T16:55:36Z",
    "author_association": "MEMBER",
    "body": "Is the `embed` function useful for this?  I'm not particularly familiar with starting IPython from other situations in the old code.\n\nThe easiest way to start a terminal IPython is:\n\n``` python\nfrom IPython.frontend.terminal import ipapp\napp = ipapp.TerminalIPythonApp.instance() # or just ...App() to prevent constructing global instance\napp.initialize(argv)\napp.start()\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1438553",
    "html_url": "https://github.com/ipython/ipython/issues/269#issuecomment-1438553",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/269",
    "id": 1438553,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0Mzg1NTM=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-06-25T17:38:17Z",
    "updated_at": "2011-06-25T17:38:17Z",
    "author_association": "MEMBER",
    "body": "The biggest question is what people expect to happen when they call this API.  Are config files parsed?  Are commend line arguments read?  Are things like exec_files, exec_lines, gui support/pylab initialized?  The code Min provides does all of that, but embed (as I remember) does not.  We could provide the old `IPython.Shell().start().mainloop()` API, but I have a feeling it will cause more problems than it solves.  The reason is the many of these usage cases involve (like isympy) situations where additional customization is wanted.  Keeping `IPython.Shell().start().mainloop()` around falsely suggests that if you grab the resulting `Shell()` object, that it will have the same old APIs for customization, which of course it does not.   Forcing people to adapt their code to use the new API from the start makes it clear that _everything_ is different.  I realize this is a pain for projects that use IPython in this manner though.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1438812",
    "html_url": "https://github.com/ipython/ipython/issues/269#issuecomment-1438812",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/269",
    "id": 1438812,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0Mzg4MTI=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-06-25T18:55:42Z",
    "updated_at": "2011-06-25T18:55:42Z",
    "author_association": "MEMBER",
    "body": "The `start()` call does process `sys.argv` automatically.  Since all of that has changed so much, the sanest approach is probably indeed to simply document the suggested API for initialization.  We should also in there, explain to users how the out-of-process kernel works, since some projects may opt instead to write their own client and communicate with a kernel, now that they have the option to do so.\n\nIn summary: let's not get dragged into the potential madness of attempting to provide compatibility when we really can't.  That effort will be better spent just documenting the way forward...\n\nMin, if you can drop your example above into the docs about embedding, that will already be a good start for now :)\n\nThanks!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1440464",
    "html_url": "https://github.com/ipython/ipython/issues/269#issuecomment-1440464",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/269",
    "id": 1440464,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDA0NjQ=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-06-26T09:13:21Z",
    "updated_at": "2011-06-26T09:13:21Z",
    "author_association": "MEMBER",
    "body": "Sure, I'll add a note somewhere.\n\nWhile trying to find the logical place, I noticed that the [interactive reference doc](https://github.com/ipython/ipython/blob/master/docs/source/interactive/reference.txt), and the embed examples all refer to the old code, so they need lots of updating. Even the 'new-embed' example which uses the new embed function doesn't work because the embed call signature is wrong.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1444750",
    "html_url": "https://github.com/ipython/ipython/issues/269#issuecomment-1444750",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/269",
    "id": 1444750,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDQ3NTA=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-06-27T01:18:29Z",
    "updated_at": "2011-06-27T01:18:29Z",
    "author_association": "MEMBER",
    "body": "Marking as critical and docs, because this is now principally a documentation issue, and one that really needs to be fixed.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1457248",
    "html_url": "https://github.com/ipython/ipython/issues/269#issuecomment-1457248",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/269",
    "id": 1457248,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTcyNDg=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-06-28T17:13:24Z",
    "updated_at": "2011-06-28T17:13:24Z",
    "author_association": "MEMBER",
    "body": "This can be closed when  0d369cf067802420119b is merged, as part of the docs branch, which needs lots of work.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1959158",
    "html_url": "https://github.com/ipython/ipython/issues/269#issuecomment-1959158",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/269",
    "id": 1959158,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTkxNTg=",
    "user": {
      "login": "gregglind",
      "id": 163983,
      "node_id": "MDQ6VXNlcjE2Mzk4Mw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/163983?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gregglind",
      "html_url": "https://github.com/gregglind",
      "followers_url": "https://api.github.com/users/gregglind/followers",
      "following_url": "https://api.github.com/users/gregglind/following{/other_user}",
      "gists_url": "https://api.github.com/users/gregglind/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gregglind/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gregglind/subscriptions",
      "organizations_url": "https://api.github.com/users/gregglind/orgs",
      "repos_url": "https://api.github.com/users/gregglind/repos",
      "events_url": "https://api.github.com/users/gregglind/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gregglind/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-08-31T16:37:49Z",
    "updated_at": "2011-08-31T16:37:49Z",
    "author_association": "NONE",
    "body": "So what is the suggested solution for replacing:\n\nalias ipython='python -c '\\''import IPython; IPython.Shell.IPShell().mainloop()'\\'''\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1959523",
    "html_url": "https://github.com/ipython/ipython/issues/269#issuecomment-1959523",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/269",
    "id": 1959523,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTk1MjM=",
    "user": {
      "login": "gregglind",
      "id": 163983,
      "node_id": "MDQ6VXNlcjE2Mzk4Mw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/163983?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gregglind",
      "html_url": "https://github.com/gregglind",
      "followers_url": "https://api.github.com/users/gregglind/followers",
      "following_url": "https://api.github.com/users/gregglind/following{/other_user}",
      "gists_url": "https://api.github.com/users/gregglind/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gregglind/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gregglind/subscriptions",
      "organizations_url": "https://api.github.com/users/gregglind/orgs",
      "repos_url": "https://api.github.com/users/gregglind/repos",
      "events_url": "https://api.github.com/users/gregglind/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gregglind/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-08-31T17:11:44Z",
    "updated_at": "2011-08-31T17:11:44Z",
    "author_association": "NONE",
    "body": "Solved my own problem here!  Here is my new alias for this, which handles both.\n\nalias ipython='python -c \"python -c \"from IPython import embed; embed()\" 2>/dev/null || import IPython; IPython.Shell.IPShell().mainloop()\"'\n\n(http://writeonly.wordpress.com/2011/08/31/updated-bash-ipython-alias-that-works-for-0-10-and-0-11/)\n"
  }
]
