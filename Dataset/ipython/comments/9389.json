[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/208827980",
    "html_url": "https://github.com/ipython/ipython/issues/9389#issuecomment-208827980",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9389",
    "id": 208827980,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODgyNzk4MA==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-12T10:03:07Z",
    "updated_at": "2016-04-12T10:03:07Z",
    "author_association": "MEMBER",
    "body": "I don't think it's you, I think we just haven't thought of this. We could make `%matplotlib arg`, for instance. I'm not sure it would do anything other than call `matplotlib.use('agg')`, though.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/208837286",
    "html_url": "https://github.com/ipython/ipython/issues/9389#issuecomment-208837286",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9389",
    "id": 208837286,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODgzNzI4Ng==",
    "user": {
      "login": "akhmerov",
      "id": 2069677,
      "node_id": "MDQ6VXNlcjIwNjk2Nzc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2069677?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/akhmerov",
      "html_url": "https://github.com/akhmerov",
      "followers_url": "https://api.github.com/users/akhmerov/followers",
      "following_url": "https://api.github.com/users/akhmerov/following{/other_user}",
      "gists_url": "https://api.github.com/users/akhmerov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/akhmerov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/akhmerov/subscriptions",
      "organizations_url": "https://api.github.com/users/akhmerov/orgs",
      "repos_url": "https://api.github.com/users/akhmerov/repos",
      "events_url": "https://api.github.com/users/akhmerov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/akhmerov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-12T10:29:10Z",
    "updated_at": "2016-04-12T10:29:10Z",
    "author_association": "MEMBER",
    "body": "Just calling `matplotlib.use('agg')` doesn't switch off the effects of `%matplotlib inline`. I didn't dive into the source, but I assume the inline backend is based on agg and adds some jupyter-specific post-processing (keeping track of created figures and showing them).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/209285633",
    "html_url": "https://github.com/ipython/ipython/issues/9389#issuecomment-209285633",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9389",
    "id": 209285633,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwOTI4NTYzMw==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-13T07:41:10Z",
    "updated_at": "2016-04-13T07:41:10Z",
    "author_association": "MEMBER",
    "body": "Indeed, there's a few specific hooks that get added.  If you dig a bit into the code, it should be easy to add a `%matplotlib off` call that unregisters the post-processing to leave things back the way they were before (other than obviously matplotlib having been imported).\n\nIt should be clear that this can't undo global actions like initializing a GUI event loop, but it could help some valid use cases...\n\nCare to make a PR?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/209571961",
    "html_url": "https://github.com/ipython/ipython/issues/9389#issuecomment-209571961",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9389",
    "id": 209571961,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwOTU3MTk2MQ==",
    "user": {
      "login": "akhmerov",
      "id": 2069677,
      "node_id": "MDQ6VXNlcjIwNjk2Nzc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2069677?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/akhmerov",
      "html_url": "https://github.com/akhmerov",
      "followers_url": "https://api.github.com/users/akhmerov/followers",
      "following_url": "https://api.github.com/users/akhmerov/following{/other_user}",
      "gists_url": "https://api.github.com/users/akhmerov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/akhmerov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/akhmerov/subscriptions",
      "organizations_url": "https://api.github.com/users/akhmerov/orgs",
      "repos_url": "https://api.github.com/users/akhmerov/repos",
      "events_url": "https://api.github.com/users/akhmerov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/akhmerov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-13T18:06:17Z",
    "updated_at": "2016-04-13T18:06:17Z",
    "author_association": "MEMBER",
    "body": "> Care to make a PR?\n\nLooked at the code, and the amount of involved machinery is beyond something I can understand and modify within reasonable time, sorry.\n\nOverall IPython here doesn't behave more irreversible than matplotlib itself, so obviously it's not an important issue.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/210077490",
    "html_url": "https://github.com/ipython/ipython/issues/9389#issuecomment-210077490",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9389",
    "id": 210077490,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDA3NzQ5MA==",
    "user": {
      "login": "tacaswell",
      "id": 199813,
      "node_id": "MDQ6VXNlcjE5OTgxMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/199813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tacaswell",
      "html_url": "https://github.com/tacaswell",
      "followers_url": "https://api.github.com/users/tacaswell/followers",
      "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
      "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
      "organizations_url": "https://api.github.com/users/tacaswell/orgs",
      "repos_url": "https://api.github.com/users/tacaswell/repos",
      "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tacaswell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-14T17:57:34Z",
    "updated_at": "2016-04-14T17:57:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "You can kill off any existing event loops and de-register the `PyOS_INPUTHOOK`.\n"
  }
]
