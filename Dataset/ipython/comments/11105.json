[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/384898607",
    "html_url": "https://github.com/ipython/ipython/issues/11105#issuecomment-384898607",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11105",
    "id": 384898607,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDg5ODYwNw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-27T08:11:44Z",
    "updated_at": "2018-04-27T08:11:44Z",
    "author_association": "MEMBER",
    "body": "Timeit does something like this:\r\n\r\n```python\r\n(setup_code)\r\nstart = time()\r\nfor n in range(10000):\r\n    (timed_code)\r\nduration = (time() - start) / 10000\r\n```\r\n\r\nCan you see how this will go wrong with your code? :-)"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/384900764",
    "html_url": "https://github.com/ipython/ipython/issues/11105#issuecomment-384900764",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11105",
    "id": 384900764,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDkwMDc2NA==",
    "user": {
      "login": "sho-87",
      "id": 5199715,
      "node_id": "MDQ6VXNlcjUxOTk3MTU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5199715?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sho-87",
      "html_url": "https://github.com/sho-87",
      "followers_url": "https://api.github.com/users/sho-87/followers",
      "following_url": "https://api.github.com/users/sho-87/following{/other_user}",
      "gists_url": "https://api.github.com/users/sho-87/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sho-87/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sho-87/subscriptions",
      "organizations_url": "https://api.github.com/users/sho-87/orgs",
      "repos_url": "https://api.github.com/users/sho-87/repos",
      "events_url": "https://api.github.com/users/sho-87/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sho-87/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-27T08:21:01Z",
    "updated_at": "2018-04-27T08:21:01Z",
    "author_association": "NONE",
    "body": "ah I see. I was hoping it did something like this:\r\n\r\n```\r\nfor n in range(10000):\r\n    (setup_code)\r\n    start = time()\r\n    (timed_code)\r\n    duration = (time() - start) / 10000\r\n\r\n# and then store and average the duration values across all runs\r\n```\r\n\r\nso is there no way to re-run the setup code for each iteration, but not have it timed?\r\n\r\notherwise id have to include my setup code in the actual timed code, and if I wanted to only time something like `pop` that would bias my timings to be higher than they should be"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/384931061",
    "html_url": "https://github.com/ipython/ipython/issues/11105#issuecomment-384931061",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11105",
    "id": 384931061,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDkzMTA2MQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-27T10:25:38Z",
    "updated_at": "2018-04-27T10:26:00Z",
    "author_association": "MEMBER",
    "body": "The purpose of that loop is to make the timing more accurate. There's some unavoidable overhead in timing, so you want the thing being timed to last long enough that it swamps the timing overhead. We actually step the loop variable up until it takes at least 2 seconds to run.\r\n\r\nThere is a second, outer loop that does what you are thinking of - take multiple readings and take an average. So when you get a result from %%timeit, it gives you mean and standard deviation. (This is controversial, there's an argument that the best time is more interesting than the mean).\r\n\r\nYou can control the two loops with the options `-n` (inner loop) and `-r` (outer loop, 'repetitions'). I always have to look up which way they go. So `%%timeit -n1` runs the inner loop just once, so your timed code always follows your setup code.\r\n\r\nHowever, popping from a list is too fast to get an accurate result like that. You need to get creative. E.g. time making a list and popping from it, time making a list, and subtract."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/384932328",
    "html_url": "https://github.com/ipython/ipython/issues/11105#issuecomment-384932328",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11105",
    "id": 384932328,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDkzMjMyOA==",
    "user": {
      "login": "sho-87",
      "id": 5199715,
      "node_id": "MDQ6VXNlcjUxOTk3MTU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5199715?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sho-87",
      "html_url": "https://github.com/sho-87",
      "followers_url": "https://api.github.com/users/sho-87/followers",
      "following_url": "https://api.github.com/users/sho-87/following{/other_user}",
      "gists_url": "https://api.github.com/users/sho-87/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sho-87/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sho-87/subscriptions",
      "organizations_url": "https://api.github.com/users/sho-87/orgs",
      "repos_url": "https://api.github.com/users/sho-87/repos",
      "events_url": "https://api.github.com/users/sho-87/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sho-87/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-27T10:31:48Z",
    "updated_at": "2018-04-27T10:31:48Z",
    "author_association": "NONE",
    "body": "I see. any pitfalls to always using `-n1 -r100000`, besides overall slower timing runs as the setup code is being run more often?"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/384933640",
    "html_url": "https://github.com/ipython/ipython/issues/11105#issuecomment-384933640",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11105",
    "id": 384933640,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDkzMzY0MA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-27T10:38:31Z",
    "updated_at": "2018-04-27T10:38:31Z",
    "author_association": "MEMBER",
    "body": "That's what I was talking about - it will give you very inaccurate timings for anything that runs quickly. E.g. here's the difference with using `-n1` on a simple example on my computer:\r\n\r\n```\r\nIn [1]: %%timeit a = 1\r\n   ...: a + 3\r\n   ...: \r\n25 ns ± 1.29 ns per loop (mean ± std. dev. of 7 runs, 10000000 loops each)\r\n\r\nIn [2]: %%timeit -n1 a = 1\r\n   ...: a + 3\r\n   ...: \r\n264 ns ± 186 ns per loop (mean ± std. dev. of 7 runs, 1 loop each)\r\n```"
  }
]
