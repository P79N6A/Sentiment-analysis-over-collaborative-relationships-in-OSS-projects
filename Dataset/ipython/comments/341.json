[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/975498",
    "html_url": "https://github.com/ipython/ipython/issues/341#issuecomment-975498",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/341",
    "id": 975498,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk3NTQ5OA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-08T20:14:23Z",
    "updated_at": "2011-04-08T20:14:23Z",
    "author_association": "MEMBER",
    "body": "Yes, the chain of calls for executing user code now goes run_cell ->\nrun_ast_nodes -> run_code. I think it's run_cell that you'll need to set up\na modified version of - that's the only one that expects code as a string.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/975600",
    "html_url": "https://github.com/ipython/ipython/issues/341#issuecomment-975600",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/341",
    "id": 975600,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk3NTYwMA==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-08T20:39:56Z",
    "updated_at": "2011-04-08T20:39:56Z",
    "author_association": "MEMBER",
    "body": "On Fri, Apr 8, 2011 at 12:26 PM, minrk\nreply@reply.github.com\nwrote:\n\n> Also, %autopx is now broken, I believe due to the recent AST merge. Â %autopx hijacked run_source, but as far as I can tell, that's never called anymore.\n\nI think you can use run_cell now.  It didn't exist before but it's\nactually much more robust than run_source.  That should do the trick.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/975894",
    "html_url": "https://github.com/ipython/ipython/issues/341#issuecomment-975894",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/341",
    "id": 975894,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk3NTg5NA==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-08T21:47:28Z",
    "updated_at": "2011-04-08T21:47:28Z",
    "author_association": "MEMBER",
    "body": "Thanks, I think I've figured it out enough for interactive use.  However, it doesn't work from inside `%run` or `irunner`.\n\nIf I have a script containing:\n\n<pre>\n%autopx\na=5\n%autopx\n</pre>\n\n\n`%autopx` should hijack execution until `%autopx` is called again, but this doesn't happen.  I believe this is because the whole file gets run inside a single run_cell.  Is there not a way to hijack individual lines anymore?\n\nIt looks like hijacking `run_code` is my only option, but I'm pretty sure I need the source, not the code objects.\n\nThis is a general issue.  I expect there are several behaviors no longer consistent between %run/irunner and interactive execution, when manipulating the ipython object.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/976313",
    "html_url": "https://github.com/ipython/ipython/issues/341#issuecomment-976313",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/341",
    "id": 976313,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk3NjMxMw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-08T23:56:23Z",
    "updated_at": "2011-04-08T23:56:23Z",
    "author_association": "MEMBER",
    "body": "Yes, I think it is because it's all getting run in one call. Although I\ndon't think that's just a result of the AST stuff - we were already grouping\ntogether blocks to send to run_source. When we're %run-ing a script, we\nreally need to treat each node as a separate cell, so that they affect the\nexecution of nodes after them. Can you send AST nodes over the wire? A quick\ntest suggests that they are pickle-able. Unfortunately, I think the\nalternative is to resurrect split_blocks...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/976328",
    "html_url": "https://github.com/ipython/ipython/issues/341#issuecomment-976328",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/341",
    "id": 976328,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk3NjMyOA==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-09T00:02:47Z",
    "updated_at": "2011-04-09T00:02:47Z",
    "author_association": "MEMBER",
    "body": "If they are pickleable, then I think I should be fine.  Of course, it also requires that I can execute code that would raise NameErrors locally.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/976336",
    "html_url": "https://github.com/ipython/ipython/issues/341#issuecomment-976336",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/341",
    "id": 976336,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk3NjMzNg==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-09T00:06:33Z",
    "updated_at": "2011-04-09T00:06:33Z",
    "author_association": "MEMBER",
    "body": "OK, so then you (hopefully) just need to override run_ast_nodes. We can\ngenerate nodes regardless of the names in the code. I'll have a think about\nthe best way to get .ipy scripts running line-by-line.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/978781",
    "html_url": "https://github.com/ipython/ipython/issues/341#issuecomment-978781",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/341",
    "id": 978781,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk3ODc4MQ==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-10T03:01:28Z",
    "updated_at": "2011-04-10T03:01:28Z",
    "author_association": "MEMBER",
    "body": "Splitting run_ast_nodes so that it calls run_code for each node, rather than for the whole set, seems to fix much of the issue.  Then, all I need to do is override run_code, and it works.\n\nSee here:\nhttps://github.com/minrk/ipython/compare/ipython:master...minrk:parallelmagic#diff-0\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/985344",
    "html_url": "https://github.com/ipython/ipython/issues/341#issuecomment-985344",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/341",
    "id": 985344,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk4NTM0NA==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-11T19:01:27Z",
    "updated_at": "2011-04-11T19:01:27Z",
    "author_association": "MEMBER",
    "body": "closed by e68cf3acfde04fb1164c\n"
  }
]
