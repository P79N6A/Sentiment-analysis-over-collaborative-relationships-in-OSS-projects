[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4083036",
    "html_url": "https://github.com/ipython/ipython/issues/1428#issuecomment-4083036",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1428",
    "id": 4083036,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwODMwMzY=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-21T19:27:30Z",
    "updated_at": "2012-02-21T19:27:30Z",
    "author_association": "MEMBER",
    "body": "For the record, I don't see it on linux...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4103855",
    "html_url": "https://github.com/ipython/ipython/issues/1428#issuecomment-4103855",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1428",
    "id": 4103855,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDM4NTU=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-22T13:30:05Z",
    "updated_at": "2012-02-22T13:30:05Z",
    "author_association": "MEMBER",
    "body": "This is magic argument parsing again. I think after 0.13 we'll need to think up a better solution to this whole thing.\n\n@jstenar : You may have seen recently that @Carreau set up a Mac to run the test suite overnight (discussed on #1328). If you've got a Windows machine running overnight that has some spare time, it would be great to have this for Windows as well. It just needs a script that will pull from github, install into a virtualenv, run iptest with some options, zip up the result files and put them on the web where they can easily be downloaded.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4111644",
    "html_url": "https://github.com/ipython/ipython/issues/1428#issuecomment-4111644",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1428",
    "id": 4111644,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTE2NDQ=",
    "user": {
      "login": "jstenar",
      "id": 281420,
      "node_id": "MDQ6VXNlcjI4MTQyMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/281420?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jstenar",
      "html_url": "https://github.com/jstenar",
      "followers_url": "https://api.github.com/users/jstenar/followers",
      "following_url": "https://api.github.com/users/jstenar/following{/other_user}",
      "gists_url": "https://api.github.com/users/jstenar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jstenar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jstenar/subscriptions",
      "organizations_url": "https://api.github.com/users/jstenar/orgs",
      "repos_url": "https://api.github.com/users/jstenar/repos",
      "events_url": "https://api.github.com/users/jstenar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jstenar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-22T18:05:10Z",
    "updated_at": "2012-02-22T18:05:10Z",
    "author_association": "MEMBER",
    "body": "Thomas skrev 2012-02-22 14:30:\n\n> This is magic argument parsing again. I think after 0.13 we'll need to think up a better solution to this whole thing.\n> \n> @jstenar : You may have seen recently that @Carreau set up a Mac to run the test suite overnight (discussed on #1328). If you've got a Windows machine running overnight that has some spare time, it would be great to have this for Windows as well. It just needs a script that will pull from github, install into a virtualenv, run iptest with some options, zip up the result files and put them on the web where they can easily be downloaded.\n\nI don't have a machine that is always running but I could have a script \nthat runs those evenings I have the machine running.\n\nDo you have a suggestion for where I can upload it? Is it not possible \nto upload directly to shiningpanda?\n\n/JÃ¶rgen\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4116746",
    "html_url": "https://github.com/ipython/ipython/issues/1428#issuecomment-4116746",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1428",
    "id": 4116746,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTY3NDY=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-22T19:22:23Z",
    "updated_at": "2012-02-22T19:22:23Z",
    "author_association": "MEMBER",
    "body": "Annoyingly, although Jenkins allows triggering a build from a script, and it allows uploading a file for a build, it doesn't allow both together: you have to upload the file manually via a web form.\n\nMaybe @fperez would let us use a bit of space on the server that hosts the wiki and the archive. Fernando, the zip file is a bit over 100KB at present, and it would be uploaded and downloaded once per day. Hopefully there's an easy way to do something like scp from Windows.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4118003",
    "html_url": "https://github.com/ipython/ipython/issues/1428#issuecomment-4118003",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1428",
    "id": 4118003,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTgwMDM=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-22T19:40:34Z",
    "updated_at": "2012-02-22T19:40:34Z",
    "author_association": "MEMBER",
    "body": "Of course!  The hosting plan I use is 'unlimited' both in bandwidth and storage, so unless we're talking about terabytes, you don't even have to ask :)  Just go for it.  @jstenar, if you need to be the one doing the uploading, email me your public SSH key and I'll add it to the server.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4143673",
    "html_url": "https://github.com/ipython/ipython/issues/1428#issuecomment-4143673",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1428",
    "id": 4143673,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDM2NzM=",
    "user": {
      "login": "jstenar",
      "id": 281420,
      "node_id": "MDQ6VXNlcjI4MTQyMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/281420?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jstenar",
      "html_url": "https://github.com/jstenar",
      "followers_url": "https://api.github.com/users/jstenar/followers",
      "following_url": "https://api.github.com/users/jstenar/following{/other_user}",
      "gists_url": "https://api.github.com/users/jstenar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jstenar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jstenar/subscriptions",
      "organizations_url": "https://api.github.com/users/jstenar/orgs",
      "repos_url": "https://api.github.com/users/jstenar/repos",
      "events_url": "https://api.github.com/users/jstenar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jstenar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-23T19:48:06Z",
    "updated_at": "2012-02-23T19:48:06Z",
    "author_association": "MEMBER",
    "body": "Fernando Perez skrev 2012-02-22 20:40:\n\n> Of course!  The hosting plan I use is 'unlimited' both in bandwidth and storage, so unless we're talking about terabytes, you don't even have to ask :)  Just go for it.  @jstenar, if you need to be the one doing the uploading, email me your public SSH key and I'll add it to the server.\n\nI can log in to the machine now. Where do you want me to put the testlogs?\n\nI will try to set up a testscript over the weekend.\n\n/JÃ¶rgen\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4144499",
    "html_url": "https://github.com/ipython/ipython/issues/1428#issuecomment-4144499",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1428",
    "id": 4144499,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDQ0OTk=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-23T20:30:00Z",
    "updated_at": "2012-02-23T20:30:00Z",
    "author_association": "MEMBER",
    "body": "I'll let @takluyver answer that, as he's the one who will be handling their integration with Shining Panda.  Thanks to everyone for this!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4145031",
    "html_url": "https://github.com/ipython/ipython/issues/1428#issuecomment-4145031",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1428",
    "id": 4145031,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDUwMzE=",
    "user": {
      "login": "jstenar",
      "id": 281420,
      "node_id": "MDQ6VXNlcjI4MTQyMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/281420?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jstenar",
      "html_url": "https://github.com/jstenar",
      "followers_url": "https://api.github.com/users/jstenar/followers",
      "following_url": "https://api.github.com/users/jstenar/following{/other_user}",
      "gists_url": "https://api.github.com/users/jstenar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jstenar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jstenar/subscriptions",
      "organizations_url": "https://api.github.com/users/jstenar/orgs",
      "repos_url": "https://api.github.com/users/jstenar/repos",
      "events_url": "https://api.github.com/users/jstenar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jstenar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-23T20:55:50Z",
    "updated_at": "2012-02-23T20:55:50Z",
    "author_association": "MEMBER",
    "body": "Thomas skrev 2012-02-22 14:30:\n\n> This is magic argument parsing again. I think after 0.13 we'll need to think up a better solution to this whole thing.\n> \n> @jstenar : You may have seen recently that @Carreau set up a Mac to run the test suite overnight (discussed on #1328). If you've got a Windows machine running overnight that has some spare time, it would be great to have this for Windows as well. It just needs a script that will pull from github, install into a virtualenv, run iptest with some options, zip up the result files and put them on the web where they can easily be downloaded.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/issues/1428#issuecomment-4103855\n\n@Carreau could you share the script you use to run the testsuite. I \nwon't be able to use it as is but at least it will show me one way of \ndoing this.\n\n@Thomas when using a virutalenv what is the best way to install ipython \nso it can be unistalled cleanly?\n\n/JÃ¶rgen\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4147829",
    "html_url": "https://github.com/ipython/ipython/issues/1428#issuecomment-4147829",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1428",
    "id": 4147829,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDc4Mjk=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-23T23:12:52Z",
    "updated_at": "2012-02-23T23:12:52Z",
    "author_association": "MEMBER",
    "body": "The script that we use on ShiningPanda is below (I sent @Carreau this, so I think he adapted it for Mac). It runs with the virtualenv active, and a fresh checkout of github master as the working directory.\n\nIf you just install IPython inside the virtualenv (python setup.py install), it shouldn't interfere with your normal installation at all, so it's safe to leave it. If you need to remove it, you can delete the folder the virtualenv is based in, or call `pip uninstall ipython` with the virtualenv active.\n\nUpload location: if you can put it somewhere on archive.ipython.org - maybe make a new testresults folder, and call it testresults-win-latest.zip. I'll set ShiningPanda up so that you make an HTTP request when you've uploaded the file, which will trigger it to download and add the results.\n\n```\nexport LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/home/slave/local/lib\nexport ZMQ_DIR=/home/slave/local\npip install nose coverage\npip install pyzmq\npip install readline\n\nrm -rf build/\npython setup.py install\n\nmkdir -p results\ncd results\nrm -f *.xunit.xml\nrm -f *.coverage.xml\niptest --with-xml-coverage --with-xunit\n```\n\nThis will create *.xunit.xml and *.coverage.xml files, which you can zip and upload.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4154305",
    "html_url": "https://github.com/ipython/ipython/issues/1428#issuecomment-4154305",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1428",
    "id": 4154305,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTQzMDU=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-24T09:53:26Z",
    "updated_at": "2012-02-24T09:53:26Z",
    "author_association": "MEMBER",
    "body": "Le 23 fvr. 2012  21:55, Jrgen Stenarson a crit :\n\n> Thomas skrev 2012-02-22 14:30:\n> \n> > This is magic argument parsing again. I think after 0.13 we'll need to think up a better solution to this whole thing.\n> > \n> > @jstenar : You may have seen recently that @Carreau set up a Mac to run the test suite overnight (discussed on #1328). If you've got a Windows machine running overnight that has some spare time, it would be great to have this for Windows as well. It just needs a script that will pull from github, install into a virtualenv, run iptest with some options, zip up the result files and put them on the web where they can easily be downloaded.\n> > \n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/ipython/ipython/issues/1428#issuecomment-4103855\n> \n> @Carreau could you share the script you use to run the testsuite. I \n> won't be able to use it as is but at least it will show me one way of \n> doing this.\n\nSure, put them as a attachement.\n\nYou can surely improve them.\nweekly-ipython totally remove the virtualenv and rebuild it.\ndaily-ipython try to clean as few files as possible to limit bandwidth usage and time reinstalling all python package.\nthe only catch I had was that cron need a passwordless sshkey to login.\n\n## As a side note, the build failed for an unknown reason this morning (xml files where not created.) but is working again so don't take today's Shining Panda test into account.\n\nMatthias\n\n> @Thomas when using a virutalenv what is the best way to install ipython \n> so it can be unistalled cleanly?\n> \n> /Jrgen\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/issues/1428#issuecomment-4145031\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4154760",
    "html_url": "https://github.com/ipython/ipython/issues/1428#issuecomment-4154760",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1428",
    "id": 4154760,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTQ3NjA=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-24T10:30:10Z",
    "updated_at": "2012-02-24T10:30:10Z",
    "author_association": "MEMBER",
    "body": "Let us know if that failure happens again, @Carreau , and we'll see if we can work it out.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4164273",
    "html_url": "https://github.com/ipython/ipython/issues/1428#issuecomment-4164273",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1428",
    "id": 4164273,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjQyNzM=",
    "user": {
      "login": "jstenar",
      "id": 281420,
      "node_id": "MDQ6VXNlcjI4MTQyMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/281420?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jstenar",
      "html_url": "https://github.com/jstenar",
      "followers_url": "https://api.github.com/users/jstenar/followers",
      "following_url": "https://api.github.com/users/jstenar/following{/other_user}",
      "gists_url": "https://api.github.com/users/jstenar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jstenar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jstenar/subscriptions",
      "organizations_url": "https://api.github.com/users/jstenar/orgs",
      "repos_url": "https://api.github.com/users/jstenar/repos",
      "events_url": "https://api.github.com/users/jstenar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jstenar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-24T20:13:57Z",
    "updated_at": "2012-02-24T20:13:57Z",
    "author_association": "MEMBER",
    "body": "Thomas skrev 2012-02-24 00:12:\n\n> iptest --with-xml-coverage --with-xunit\n> \n> ```\n> This will create *.xunit.xml and *.coverage.xml files, which you can zip and upload.\n> ```\n\nI have trouble getting the coverage to work. All tests fail.\nI have coverage 3.5.1 installed\n\n(Py26) C:\\python\\ipydevel\\VENV\\ipython\\results> iptest --with-xml-coverage\n\n---\n\nIPython test group: IPython.config\nno such option: -u\nUse 'coverage help' for help.\nNo data to report.\n.\n.\nSNIP\n.\n.\n\n---\n\nTest suite completed for system with the following information:\n{'commit_hash': 'cea9772',\n  'commit_source': 'installation',\n  'ipython_path': \n'C:\\python\\ipydevel\\VENV\\Py26\\lib\\site-packages\\ipython-0.13.dev-py2.6.egg\\IPython',\n  'ipython_version': '0.13.dev',\n  'os_name': 'nt',\n  'platform': 'Windows-7-6.1.7601-SP1',\n  'sys_executable': 'C:\\python\\ipydevel\\VENV\\Py26\\Scripts\\python.exe',\n  'sys_platform': 'win32',\n  'sys_version': '2.6.6 (r266:84297, Aug 24 2010, 18:46:32) [MSC v.1500 \n32 bit (Intel)]'}\n\nTools and libraries available at test time:\n    sqlite3 zmq\n\nTools and libraries NOT available at test time:\n    curses matplotlib pexpect pymongo qt tornado wx wx.aui\n\nRan 10 test groups in 2.581s\n\nStatus:\n\n## ERROR - 10 out of 10 test groups failed.\n\nRunner failed: IPython.config\nYou may wish to rerun this one individually, with:\ncoverage run --source=IPython.config -u \nC:\\python\\ipydevel\\VENV\\Py26\\lib\\site-packages\\ipython-0.13.dev-py2.6.egg\\IPython\\testing\\iptest.py \nIPython.config\n.\n.\n.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4164451",
    "html_url": "https://github.com/ipython/ipython/issues/1428#issuecomment-4164451",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1428",
    "id": 4164451,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjQ0NTE=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-24T20:24:14Z",
    "updated_at": "2012-02-24T20:24:14Z",
    "author_association": "MEMBER",
    "body": "It looks like the `-u` is a Python flag, introduced in IPython.utils.process, line 103. That talks about twisted, so maybe it's no longer necessary - can you try taking it out and rerunning the tests?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4164843",
    "html_url": "https://github.com/ipython/ipython/issues/1428#issuecomment-4164843",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1428",
    "id": 4164843,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjQ4NDM=",
    "user": {
      "login": "jstenar",
      "id": 281420,
      "node_id": "MDQ6VXNlcjI4MTQyMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/281420?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jstenar",
      "html_url": "https://github.com/jstenar",
      "followers_url": "https://api.github.com/users/jstenar/followers",
      "following_url": "https://api.github.com/users/jstenar/following{/other_user}",
      "gists_url": "https://api.github.com/users/jstenar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jstenar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jstenar/subscriptions",
      "organizations_url": "https://api.github.com/users/jstenar/orgs",
      "repos_url": "https://api.github.com/users/jstenar/repos",
      "events_url": "https://api.github.com/users/jstenar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jstenar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-24T20:48:24Z",
    "updated_at": "2012-02-24T20:48:24Z",
    "author_association": "MEMBER",
    "body": "Thomas skrev 2012-02-24 21:24:\n\n> It looks like the `-u` is a Python flag, introduced in IPython.utils.process, line 103. That talks about twisted, so maybe it's no longer necessary - can you try taking it out and rerunning the tests?\n\nNow it works!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4164981",
    "html_url": "https://github.com/ipython/ipython/issues/1428#issuecomment-4164981",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1428",
    "id": 4164981,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjQ5ODE=",
    "user": {
      "login": "jstenar",
      "id": 281420,
      "node_id": "MDQ6VXNlcjI4MTQyMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/281420?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jstenar",
      "html_url": "https://github.com/jstenar",
      "followers_url": "https://api.github.com/users/jstenar/followers",
      "following_url": "https://api.github.com/users/jstenar/following{/other_user}",
      "gists_url": "https://api.github.com/users/jstenar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jstenar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jstenar/subscriptions",
      "organizations_url": "https://api.github.com/users/jstenar/orgs",
      "repos_url": "https://api.github.com/users/jstenar/repos",
      "events_url": "https://api.github.com/users/jstenar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jstenar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-24T20:56:30Z",
    "updated_at": "2012-02-24T20:56:30Z",
    "author_association": "MEMBER",
    "body": "Thomas skrev 2012-02-24 21:24:\n\n> It looks like the `-u` is a Python flag, introduced in IPython.utils.process, line 103. That talks about twisted, so maybe it's no longer necessary - can you try taking it out and rerunning the tests?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/issues/1428#issuecomment-4164451\n\nI tried running the tests for python3.2 but it seems a bunch of examples \nare not converted by 2to3. I see several errors like the one below \nduring python setup.py install. Is this something you see as well?\n\n   File \n\"c:\\python\\ipydevel\\venv\\py32\\lib\\site-packages\\ipython-0.13.dev-py3.2.egg\\share\\doc\\ipython\\examples\\parallel\\wa\nve2D\\RectPartitioner.py\", line 49\n     print 'The input global_num_cells is not ok!'\n                                                 ^\nSyntaxError: invalid syntax\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4165152",
    "html_url": "https://github.com/ipython/ipython/issues/1428#issuecomment-4165152",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1428",
    "id": 4165152,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjUxNTI=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-24T21:06:35Z",
    "updated_at": "2012-02-24T21:06:35Z",
    "author_association": "MEMBER",
    "body": "Yes, I keep meaning to go and work out what's causing them - we solved it before, but when we unified `setup.py`, they came back. The installation seems to succeed despite the syntax errors, which is why I've not got round to looking at them yet.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4165171",
    "html_url": "https://github.com/ipython/ipython/issues/1428#issuecomment-4165171",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1428",
    "id": 4165171,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjUxNzE=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-24T21:07:48Z",
    "updated_at": "2012-02-24T21:07:48Z",
    "author_association": "MEMBER",
    "body": "Thanks for getting this set up, by the way. I'll e-mail you the URL you need to trigger ShiningPanda (it contains a 'secret' token).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4173992",
    "html_url": "https://github.com/ipython/ipython/issues/1428#issuecomment-4173992",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1428",
    "id": 4173992,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzM5OTI=",
    "user": {
      "login": "jstenar",
      "id": 281420,
      "node_id": "MDQ6VXNlcjI4MTQyMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/281420?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jstenar",
      "html_url": "https://github.com/jstenar",
      "followers_url": "https://api.github.com/users/jstenar/followers",
      "following_url": "https://api.github.com/users/jstenar/following{/other_user}",
      "gists_url": "https://api.github.com/users/jstenar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jstenar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jstenar/subscriptions",
      "organizations_url": "https://api.github.com/users/jstenar/orgs",
      "repos_url": "https://api.github.com/users/jstenar/repos",
      "events_url": "https://api.github.com/users/jstenar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jstenar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-25T16:43:26Z",
    "updated_at": "2012-02-25T16:43:26Z",
    "author_association": "MEMBER",
    "body": "When I run the testsuite with the --with-xml-coverage option I get one more error than when I run it without. See output from test run below, it is the \"Test safe_execfile with non-ascii path\" that I don't get when running without the coverage option:\n\n```\nIPython test group: IPython.core\n.........................................K..............................................................................\n....................................................................E................S.............F....................\n...................................................................................................................SS...\n.......KS..S....\n======================================================================\nERROR: Test safe_execfile with non-ascii path\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\python\\ipydevel\\VENV\\Py27\\lib\\site-packages\\ipython-0.13.dev-py2.7.egg\\IPython\\core\\tests\\test_interactiveshe\nll.py\", line 264, in test_1\n    _ip.shell.safe_execfile(self.fname, {}, raise_exceptions=True)\n  File \"C:\\python\\ipydevel\\VENV\\Py27\\lib\\site-packages\\ipython-0.13.dev-py2.7.egg\\IPython\\core\\interactiveshell.py\", lin\ne 2333, in safe_execfile\n    py3compat.execfile(fname,*where)\n  File \"C:\\python\\ipydevel\\VENV\\Py27\\lib\\site-packages\\ipython-0.13.dev-py2.7.egg\\IPython\\utils\\py3compat.py\", line 168,\n in execfile\n    exec compile(scripttext, filename, 'exec') in glob, loc\n  File \"C:\\python\\ipydevel\\VENV\\Py27\\lib\\site-packages\\coverage\\control.py\", line 249, in _should_trace\n    canonical = self.file_locator.canonical_filename(filename)\n  File \"C:\\python\\ipydevel\\VENV\\Py27\\lib\\site-packages\\coverage\\files.py\", line 48, in canonical_filename\n    g = os.path.join(path, f)\n  File \"C:\\python\\ipydevel\\VENV\\Py27\\lib\\ntpath.py\", line 108, in join\n    path += \"\\\\\" + b\nUnicodeDecodeError: 'ascii' codec can't decode byte 0x86 in position 1: ordinal not in range(128)\n\n======================================================================\nFAIL: Test that prun does not clobber string escapes (GH #1302)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\python\\ipydevel\\VENV\\Py27\\lib\\site-packages\\nose\\case.py\", line 197, in runTest\n    self.test(*self.arg)\n  File \"C:\\python\\ipydevel\\VENV\\Py27\\lib\\site-packages\\ipython-0.13.dev-py2.7.egg\\IPython\\testing\\decorators.py\", line 2\n28, in skipper_func\n    return f(*args, **kwargs)\n  File \"C:\\python\\ipydevel\\VENV\\Py27\\lib\\site-packages\\ipython-0.13.dev-py2.7.egg\\IPython\\core\\tests\\test_magic.py\", lin\ne 396, in test_prun_quotes\n    nt.assert_equal(_ip.user_ns['x'], '\\t')\nAssertionError: ' ' != '\\t'\n    \"' ' != '\\\\t'\" = '%s != %s' % (safe_repr(' '), safe_repr('\\t'))\n    \"' ' != '\\\\t'\" = self._formatMessage(\"' ' != '\\\\t'\", \"' ' != '\\\\t'\")\n>>  raise self.failureException(\"' ' != '\\\\t'\")\n\n\n----------------------------------------------------------------------\nRan 380 tests in 4.498s\n\nFAILED (KNOWNFAIL=2, SKIP=5, errors=1, failures=1)\n**********************************************************************\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4174277",
    "html_url": "https://github.com/ipython/ipython/issues/1428#issuecomment-4174277",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1428",
    "id": 4174277,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzQyNzc=",
    "user": {
      "login": "jstenar",
      "id": 281420,
      "node_id": "MDQ6VXNlcjI4MTQyMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/281420?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jstenar",
      "html_url": "https://github.com/jstenar",
      "followers_url": "https://api.github.com/users/jstenar/followers",
      "following_url": "https://api.github.com/users/jstenar/following{/other_user}",
      "gists_url": "https://api.github.com/users/jstenar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jstenar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jstenar/subscriptions",
      "organizations_url": "https://api.github.com/users/jstenar/orgs",
      "repos_url": "https://api.github.com/users/jstenar/repos",
      "events_url": "https://api.github.com/users/jstenar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jstenar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-25T17:14:52Z",
    "updated_at": "2012-02-25T17:14:52Z",
    "author_association": "MEMBER",
    "body": "Shouldn't these two ways of doing prun give the same result?\n\n```\nIn [4]: ip.magic(\"prun -q x = '\\t'\")\n\nIn [5]: x\nOut[5]: ' '\n\nIn [6]: prun -q x = '\\t'\n\nIn [7]: x\nOut[7]: '\\t'\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4175461",
    "html_url": "https://github.com/ipython/ipython/issues/1428#issuecomment-4175461",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1428",
    "id": 4175461,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzU0NjE=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-25T19:34:08Z",
    "updated_at": "2012-02-25T19:34:08Z",
    "author_association": "MEMBER",
    "body": "I'm not sure without looking in to how we handle escaping. Let's get the tests uploading to ShiningPanda, then make sure we've got issues open for anything that's failing.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4176122",
    "html_url": "https://github.com/ipython/ipython/issues/1428#issuecomment-4176122",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1428",
    "id": 4176122,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzYxMjI=",
    "user": {
      "login": "jstenar",
      "id": 281420,
      "node_id": "MDQ6VXNlcjI4MTQyMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/281420?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jstenar",
      "html_url": "https://github.com/jstenar",
      "followers_url": "https://api.github.com/users/jstenar/followers",
      "following_url": "https://api.github.com/users/jstenar/following{/other_user}",
      "gists_url": "https://api.github.com/users/jstenar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jstenar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jstenar/subscriptions",
      "organizations_url": "https://api.github.com/users/jstenar/orgs",
      "repos_url": "https://api.github.com/users/jstenar/repos",
      "events_url": "https://api.github.com/users/jstenar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jstenar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-25T20:58:30Z",
    "updated_at": "2012-02-25T20:58:30Z",
    "author_association": "MEMBER",
    "body": "I believe the error when using --with-xml-coverage is caused by inserting a unicode string in sys.path somewhere in the test. I'm not sure if we should consider this a bug in our code or in coverage.py\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6254541",
    "html_url": "https://github.com/ipython/ipython/issues/1428#issuecomment-6254541",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1428",
    "id": 6254541,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNTQ1NDE=",
    "user": {
      "login": "jstenar",
      "id": 281420,
      "node_id": "MDQ6VXNlcjI4MTQyMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/281420?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jstenar",
      "html_url": "https://github.com/jstenar",
      "followers_url": "https://api.github.com/users/jstenar/followers",
      "following_url": "https://api.github.com/users/jstenar/following{/other_user}",
      "gists_url": "https://api.github.com/users/jstenar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jstenar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jstenar/subscriptions",
      "organizations_url": "https://api.github.com/users/jstenar/orgs",
      "repos_url": "https://api.github.com/users/jstenar/repos",
      "events_url": "https://api.github.com/users/jstenar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jstenar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-11T20:06:13Z",
    "updated_at": "2012-06-11T20:06:13Z",
    "author_association": "MEMBER",
    "body": "This is now our only failing test on windows. I'm trying to understand what the test is doing.\n\nThis is the line I'm tryin to understand:\n\n  _ip.magic(\"prun -q x = '\\t'\")\n\nI interpret it as being equivalent to a %prun command at the command line where there is an actual tab-character inside the single quotes. Is that something we want to test for? Shouldn't that line be:\n\n_ip.magic(r\"prun -q x = '\\t'\")\n\nAt least that fixes the error for me on windows.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6254864",
    "html_url": "https://github.com/ipython/ipython/issues/1428#issuecomment-6254864",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1428",
    "id": 6254864,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNTQ4NjQ=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-11T20:19:41Z",
    "updated_at": "2012-06-11T20:19:41Z",
    "author_association": "MEMBER",
    "body": "I think you're right, @jstenar...  Go ahead with that change and we'll run test_pr quickly on it to check all is OK on linux with python2/3.  If so, we can then get back to a fully passing Windows test suite, that would make me very happy.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6254914",
    "html_url": "https://github.com/ipython/ipython/issues/1428#issuecomment-6254914",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1428",
    "id": 6254914,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNTQ5MTQ=",
    "user": {
      "login": "jstenar",
      "id": 281420,
      "node_id": "MDQ6VXNlcjI4MTQyMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/281420?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jstenar",
      "html_url": "https://github.com/jstenar",
      "followers_url": "https://api.github.com/users/jstenar/followers",
      "following_url": "https://api.github.com/users/jstenar/following{/other_user}",
      "gists_url": "https://api.github.com/users/jstenar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jstenar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jstenar/subscriptions",
      "organizations_url": "https://api.github.com/users/jstenar/orgs",
      "repos_url": "https://api.github.com/users/jstenar/repos",
      "events_url": "https://api.github.com/users/jstenar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jstenar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-11T20:22:32Z",
    "updated_at": "2012-06-11T20:22:32Z",
    "author_association": "MEMBER",
    "body": "Done in PR #1913\n"
  }
]
