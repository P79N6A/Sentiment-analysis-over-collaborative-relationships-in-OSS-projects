[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/46033968",
    "html_url": "https://github.com/ipython/ipython/issues/5982#issuecomment-46033968",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5982",
    "id": 46033968,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDMzOTY4",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-13T16:50:07Z",
    "updated_at": "2014-06-13T16:50:07Z",
    "author_association": "MEMBER",
    "body": "It is a safe assumption in that test, because that's the class it's testing.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/46103772",
    "html_url": "https://github.com/ipython/ipython/issues/5982#issuecomment-46103772",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5982",
    "id": 46103772,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTAzNzcy",
    "user": {
      "login": "andreabedini",
      "id": 69135,
      "node_id": "MDQ6VXNlcjY5MTM1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/69135?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andreabedini",
      "html_url": "https://github.com/andreabedini",
      "followers_url": "https://api.github.com/users/andreabedini/followers",
      "following_url": "https://api.github.com/users/andreabedini/following{/other_user}",
      "gists_url": "https://api.github.com/users/andreabedini/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andreabedini/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andreabedini/subscriptions",
      "organizations_url": "https://api.github.com/users/andreabedini/orgs",
      "repos_url": "https://api.github.com/users/andreabedini/repos",
      "events_url": "https://api.github.com/users/andreabedini/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andreabedini/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-15T01:03:53Z",
    "updated_at": "2014-06-15T01:03:53Z",
    "author_association": "NONE",
    "body": "Well, not really. `TestNotebookManager` actually instantiates a `FileNotebookManager` class because it needs a full implementation of the `NotebookManager` interface. But `notebook_dir` is only defined in `FileNotebookManager` and not in `NotebookManager`. So, in some sense, it's testing the wrong class.\n\nTo provide more context, NotebookManager is an interface for a pluggable service. I'm porting @rgbkrk bookstore to IPython 2 and it doesn't have the notebook_dir because it doesn't make sense in that context. Also I'm trying to use directly `TestNotebookManager` to test bookstore `NotebookManager` implementation and it would work if it were not for the calls to make_dir and os.mkdir (which I commented out in my tests).\n\nThird thing, if I may. The notebook manager API is a REST API to communicate to a storage. Bookstore's job is to take those calls and pass them to an openstack object storage, which has again a REST API. That makes me think, can't we skip the middle man and plug directly into the html notebook so that it calls the object storage directly? Is there any plan in this direction I'm not aware of?\n\ncheers\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/46105502",
    "html_url": "https://github.com/ipython/ipython/issues/5982#issuecomment-46105502",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5982",
    "id": 46105502,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTA1NTAy",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-15T03:08:05Z",
    "updated_at": "2014-06-15T03:08:05Z",
    "author_association": "MEMBER",
    "body": ">  I'm trying to use directly TestNotebookManager\n\nI would start from a copy, rather than re-using the tests. We have to know something about the underlying storage to perform the tests (e.g. creating files via mechanisms other than the API, in order to test the behavior of the API).\n\n>  can't we skip the middle man and plug directly into the html notebook so that it calls the object storage directly? Is there any plan in this direction I'm not aware of?\n\nThere is no plan in this direction.\n"
  }
]
