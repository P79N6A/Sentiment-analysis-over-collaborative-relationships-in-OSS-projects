[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/283990563",
    "html_url": "https://github.com/ipython/ipython/issues/10376#issuecomment-283990563",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10376",
    "id": 283990563,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4Mzk5MDU2Mw==",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-03T15:52:47Z",
    "updated_at": "2017-03-03T15:52:47Z",
    "author_association": "MEMBER",
    "body": "This *seems* to work, but does anyone have a solution for a better way?\r\n\r\n```python\r\nimport matplotlib.pyplot as plt\r\nfrom ipywidgets import interact\r\nfrom ipykernel.pylab.backend_inline import flush_figures\r\n\r\n%matplotlib inline\r\nx = [1,2,5,4,3]\r\n@interact(n=(2,5))\r\ndef f(n):\r\n    plt.plot(x[:n])\r\n    flush_figures()\r\n```\r\n\r\nCC @minrk, who worked on the inline mpl backend.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/284020134",
    "html_url": "https://github.com/ipython/ipython/issues/10376#issuecomment-284020134",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10376",
    "id": 284020134,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDAyMDEzNA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-03T17:40:44Z",
    "updated_at": "2017-03-03T17:40:44Z",
    "author_association": "MEMBER",
    "body": "I don't think there is much we can do. \r\n\r\nWhat heuristic would you use for displaying a figure ? You can't do it at all figures update as many code reuse figures, but it's common to have animation. \r\n\r\nSpecial casing  `@interact` to flush after each operation ?"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/284036014",
    "html_url": "https://github.com/ipython/ipython/issues/10376#issuecomment-284036014",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10376",
    "id": 284036014,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDAzNjAxNA==",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-03T18:43:41Z",
    "updated_at": "2017-03-03T19:16:46Z",
    "author_association": "MEMBER",
    "body": "> Special casing @interact to flush after each operation ?\r\n\r\nGood point, thanks for the suggestion. It doesn't feel very clean to do it (to special case one specific backend for matplotlib). Maybe I'll wait to see if it's a huge problem for users to explicitly flush output like in the above example.  I mean, explicit is better than implicit and all that...\r\n\r\n*Edit: to summarize, I think I agree that there isn't much we can (or should) do...*"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/284172885",
    "html_url": "https://github.com/ipython/ipython/issues/10376#issuecomment-284172885",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10376",
    "id": 284172885,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDE3Mjg4NQ==",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-04T18:57:22Z",
    "updated_at": "2017-03-04T18:57:22Z",
    "author_association": "MEMBER",
    "body": "It turns out that this is all much easier than I thought - I must have done something wrong when I tried testing this earlier. We don't need to call flush_figures, it's enough to just call the standard plt.show:\r\n\r\n```python\r\nimport matplotlib.pyplot as plt\r\nfrom ipywidgets import interact\r\n\r\n%matplotlib inline\r\nx = [1,2,5,4,3]\r\n@interact(n=(2,5))\r\ndef f(n):\r\n    plt.plot(x[:n])\r\n    plt.show()\r\n```\r\n\r\nI think that's perfectly reasonable to ask people to insert a show() command in their interact, so I'm closing this."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/284172950",
    "html_url": "https://github.com/ipython/ipython/issues/10376#issuecomment-284172950",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10376",
    "id": 284172950,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDE3Mjk1MA==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-04T18:58:24Z",
    "updated_at": "2017-03-04T18:58:24Z",
    "author_association": "MEMBER",
    "body": "If we want to keep this behavior (and other potential post-execute outputs), perhaps the post-X hooks could be invoked explicitly in interact before output capturing is finished? In general, my expectation of calling a function via interact is that it behaves exactly the same as if I had called the function once in a cell.\r\n\r\nI would expect people to be surprised by all of the interact-with-matplotlib examples to stop showing figures, since 'interactive' matplotlib generally means plt.show is unnecessary. Putting it in an interactive function probably shouldn't change that.\r\n\r\nIt reminds me a bit of requiring `sys.stdout.flush()` to see output, before the IOThread was introduced. It made sense *why* it was required when you thought about how things worked, but that didn't make it any less surprising because it didn't behave how people expected."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/284173230",
    "html_url": "https://github.com/ipython/ipython/issues/10376#issuecomment-284173230",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10376",
    "id": 284173230,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDE3MzIzMA==",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-04T19:02:24Z",
    "updated_at": "2017-03-04T19:02:24Z",
    "author_association": "MEMBER",
    "body": "I don't think we should execute all post-execute handlers automatically (who knows what they will do - maybe lots of stuff!). How about having a `flush_display` hook? We'd flush it before starting the interact, and the flush it again just before ending it. That way it is exactly analogous to flushing stdout/stdin."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/284173638",
    "html_url": "https://github.com/ipython/ipython/issues/10376#issuecomment-284173638",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10376",
    "id": 284173638,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDE3MzYzOA==",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-04T19:08:51Z",
    "updated_at": "2017-03-04T19:08:51Z",
    "author_association": "MEMBER",
    "body": "Well, or on the other hand, maybe it does make sense to call the post-execute, if we think of an interact really acting like a single cell all its own. But then we'd probably want to call post-execute *before* the interact was run as well as after, just in case the interact was in a cell with other stuff."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/284173663",
    "html_url": "https://github.com/ipython/ipython/issues/10376#issuecomment-284173663",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10376",
    "id": 284173663,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDE3MzY2Mw==",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-04T19:09:17Z",
    "updated_at": "2017-03-04T19:09:17Z",
    "author_association": "MEMBER",
    "body": "Reopening, since the conversation isn't closed yet..."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/284173828",
    "html_url": "https://github.com/ipython/ipython/issues/10376#issuecomment-284173828",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10376",
    "id": 284173828,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDE3MzgyOA==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-04T19:11:38Z",
    "updated_at": "2017-03-04T19:11:38Z",
    "author_association": "MEMBER",
    "body": "I like the idea of a flush_display hook, and it would work in theory, though it would require coordinated releases of ipython and ipykernel and ipywidgets to define a new hook and switch the backend to using it.\r\n\r\n> if we think of an interact really acting like a single cell all its own\r\n\r\nI think this is they key, and it's a big 'if'. It is how *I* think of it, but I'm not everyone (yet)."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/284176060",
    "html_url": "https://github.com/ipython/ipython/issues/10376#issuecomment-284176060",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10376",
    "id": 284176060,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDE3NjA2MA==",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-04T19:46:17Z",
    "updated_at": "2017-03-04T19:46:17Z",
    "author_association": "MEMBER",
    "body": "> f we think of an interact really acting like a single cell all its own\r\n> I think this is they key, and it's a big 'if'. It is how I think of it, but I'm not everyone (yet).\r\n\r\nA confusing thing about this is that if we had a cell with code, then an interact run, then some more code, the cell would actually be executed like three cells (i.e., post-execute run three different times). I think the flush_display makes more sense in that case."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/284184184",
    "html_url": "https://github.com/ipython/ipython/issues/10376#issuecomment-284184184",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10376",
    "id": 284184184,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDE4NDE4NA==",
    "user": {
      "login": "willingc",
      "id": 2680980,
      "node_id": "MDQ6VXNlcjI2ODA5ODA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2680980?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/willingc",
      "html_url": "https://github.com/willingc",
      "followers_url": "https://api.github.com/users/willingc/followers",
      "following_url": "https://api.github.com/users/willingc/following{/other_user}",
      "gists_url": "https://api.github.com/users/willingc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/willingc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/willingc/subscriptions",
      "organizations_url": "https://api.github.com/users/willingc/orgs",
      "repos_url": "https://api.github.com/users/willingc/repos",
      "events_url": "https://api.github.com/users/willingc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/willingc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-04T21:31:57Z",
    "updated_at": "2017-03-04T21:31:57Z",
    "author_association": "MEMBER",
    "body": "Additional question: would mirrored output in JLab work?"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/284184356",
    "html_url": "https://github.com/ipython/ipython/issues/10376#issuecomment-284184356",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10376",
    "id": 284184356,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDE4NDM1Ng==",
    "user": {
      "login": "SylvainCorlay",
      "id": 2397974,
      "node_id": "MDQ6VXNlcjIzOTc5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2397974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylvainCorlay",
      "html_url": "https://github.com/SylvainCorlay",
      "followers_url": "https://api.github.com/users/SylvainCorlay/followers",
      "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions",
      "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs",
      "repos_url": "https://api.github.com/users/SylvainCorlay/repos",
      "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-04T21:34:14Z",
    "updated_at": "2017-03-04T21:34:14Z",
    "author_association": "MEMBER",
    "body": "@willingc widgets work with mirrored output."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/284184560",
    "html_url": "https://github.com/ipython/ipython/issues/10376#issuecomment-284184560",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10376",
    "id": 284184560,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDE4NDU2MA==",
    "user": {
      "login": "willingc",
      "id": 2680980,
      "node_id": "MDQ6VXNlcjI2ODA5ODA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2680980?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/willingc",
      "html_url": "https://github.com/willingc",
      "followers_url": "https://api.github.com/users/willingc/followers",
      "following_url": "https://api.github.com/users/willingc/following{/other_user}",
      "gists_url": "https://api.github.com/users/willingc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/willingc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/willingc/subscriptions",
      "organizations_url": "https://api.github.com/users/willingc/orgs",
      "repos_url": "https://api.github.com/users/willingc/repos",
      "events_url": "https://api.github.com/users/willingc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/willingc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-04T21:37:43Z",
    "updated_at": "2017-03-04T21:37:43Z",
    "author_association": "MEMBER",
    "body": "@SylvainCorlay I know they work now, and folks in Ann Arbor love it. My question was would it work if changes are made as discussed above."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/284184643",
    "html_url": "https://github.com/ipython/ipython/issues/10376#issuecomment-284184643",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10376",
    "id": 284184643,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDE4NDY0Mw==",
    "user": {
      "login": "SylvainCorlay",
      "id": 2397974,
      "node_id": "MDQ6VXNlcjIzOTc5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2397974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylvainCorlay",
      "html_url": "https://github.com/SylvainCorlay",
      "followers_url": "https://api.github.com/users/SylvainCorlay/followers",
      "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions",
      "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs",
      "repos_url": "https://api.github.com/users/SylvainCorlay/repos",
      "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-04T21:39:04Z",
    "updated_at": "2017-03-04T21:39:04Z",
    "author_association": "MEMBER",
    "body": "gotcha sorry for the noise."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/284187745",
    "html_url": "https://github.com/ipython/ipython/issues/10376#issuecomment-284187745",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10376",
    "id": 284187745,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDE4Nzc0NQ==",
    "user": {
      "login": "SylvainCorlay",
      "id": 2397974,
      "node_id": "MDQ6VXNlcjIzOTc5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2397974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylvainCorlay",
      "html_url": "https://github.com/SylvainCorlay",
      "followers_url": "https://api.github.com/users/SylvainCorlay/followers",
      "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions",
      "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs",
      "repos_url": "https://api.github.com/users/SylvainCorlay/repos",
      "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-04T22:01:32Z",
    "updated_at": "2017-03-04T22:01:32Z",
    "author_association": "MEMBER",
    "body": "In the long run, I think that an approach that should work better is the ipympl widgets backend to matplotlib.\r\n\r\nHowever, we will need to make all of this more easily installed with the conf.d etc..."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/284188953",
    "html_url": "https://github.com/ipython/ipython/issues/10376#issuecomment-284188953",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10376",
    "id": 284188953,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDE4ODk1Mw==",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-04T22:20:57Z",
    "updated_at": "2017-03-04T22:20:57Z",
    "author_association": "MEMBER",
    "body": "Yes, the mirrored output should work with the changed discussed above. Thanks for making sure!"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/284197933",
    "html_url": "https://github.com/ipython/ipython/issues/10376#issuecomment-284197933",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10376",
    "id": 284197933,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDE5NzkzMw==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-05T01:28:33Z",
    "updated_at": "2017-03-05T01:28:33Z",
    "author_association": "MEMBER",
    "body": "> A confusing thing about this is that if we had a cell with code, then an interact run, then some more code, the cell would actually be executed like three cells (i.e., post-execute run three different times).\r\n\r\nIndeed, that would be a bit weird. Wouldn't it be two times, though? One for the cell as a whole and one for the first invocation of interact? Depending on how you think about it, this also makes sense: with `@interact`, you have two executions: one for the declaration, and another execution for the first invocation of the interacted-with function.\r\n\r\nI don't think you would have more than one if you used `@interact_manual`, for instance (I'm not sure)."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/284529043",
    "html_url": "https://github.com/ipython/ipython/issues/10376#issuecomment-284529043",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10376",
    "id": 284529043,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDUyOTA0Mw==",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-06T20:54:24Z",
    "updated_at": "2017-03-06T20:54:24Z",
    "author_association": "MEMBER",
    "body": "> Wouldn't it be two times, though? One for the cell as a whole and one for the first invocation of interact?\r\n\r\nConsider this code:\r\n\r\n```python\r\nplt.plot([1,2,3])\r\n@interact(n=(1,10))\r\ndef f(n):\r\n    plt.plot([1,n])\r\nplt.plot([4,5,6])\r\n```\r\nSince the plotting is cumulative, and you want to treat the interact as a separate cell unto itself, you need to flush the figure before the interact runs, then flush the figure inside the interact, and then once again at the end of the cell. This is exactly what we do with flushing stdout too.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/284529434",
    "html_url": "https://github.com/ipython/ipython/issues/10376#issuecomment-284529434",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10376",
    "id": 284529434,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDUyOTQzNA==",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-06T20:55:52Z",
    "updated_at": "2017-03-06T20:55:52Z",
    "author_association": "MEMBER",
    "body": "Actually, I'm not sure what the user expects in the example above. What would you expect?"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/285678449",
    "html_url": "https://github.com/ipython/ipython/issues/10376#issuecomment-285678449",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10376",
    "id": 285678449,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTY3ODQ0OQ==",
    "user": {
      "login": "myyc",
      "id": 5025392,
      "node_id": "MDQ6VXNlcjUwMjUzOTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5025392?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/myyc",
      "html_url": "https://github.com/myyc",
      "followers_url": "https://api.github.com/users/myyc/followers",
      "following_url": "https://api.github.com/users/myyc/following{/other_user}",
      "gists_url": "https://api.github.com/users/myyc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/myyc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/myyc/subscriptions",
      "organizations_url": "https://api.github.com/users/myyc/orgs",
      "repos_url": "https://api.github.com/users/myyc/repos",
      "events_url": "https://api.github.com/users/myyc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/myyc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-10T14:12:38Z",
    "updated_at": "2017-03-10T14:12:38Z",
    "author_association": "NONE",
    "body": "Just a thought: the example above isn't very logical; personally I would expect three plots where only one changes dynamically but if I were to do something like that I would do all the plot calls inside `@interact`.\r\n\r\nIs there any reason *not* to call `flush_figures` after each `.plot()`?"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/285678846",
    "html_url": "https://github.com/ipython/ipython/issues/10376#issuecomment-285678846",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10376",
    "id": 285678846,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTY3ODg0Ng==",
    "user": {
      "login": "SylvainCorlay",
      "id": 2397974,
      "node_id": "MDQ6VXNlcjIzOTc5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2397974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylvainCorlay",
      "html_url": "https://github.com/SylvainCorlay",
      "followers_url": "https://api.github.com/users/SylvainCorlay/followers",
      "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions",
      "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs",
      "repos_url": "https://api.github.com/users/SylvainCorlay/repos",
      "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-10T14:14:18Z",
    "updated_at": "2017-03-10T14:14:18Z",
    "author_association": "MEMBER",
    "body": "@myyc it is a significant semantic change of the behavior. `plot` adds items on the plot...."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/285679737",
    "html_url": "https://github.com/ipython/ipython/issues/10376#issuecomment-285679737",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10376",
    "id": 285679737,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTY3OTczNw==",
    "user": {
      "login": "myyc",
      "id": 5025392,
      "node_id": "MDQ6VXNlcjUwMjUzOTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5025392?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/myyc",
      "html_url": "https://github.com/myyc",
      "followers_url": "https://api.github.com/users/myyc/followers",
      "following_url": "https://api.github.com/users/myyc/following{/other_user}",
      "gists_url": "https://api.github.com/users/myyc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/myyc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/myyc/subscriptions",
      "organizations_url": "https://api.github.com/users/myyc/orgs",
      "repos_url": "https://api.github.com/users/myyc/repos",
      "events_url": "https://api.github.com/users/myyc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/myyc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-10T14:18:06Z",
    "updated_at": "2017-03-10T14:18:53Z",
    "author_association": "NONE",
    "body": "I meant in the specific `ipython` inline behaviour, as opposed to matplotlib.\r\n\r\n**edit**: I am sure it is a more common use case to have one interact per cell with that as \"the only plotting function\", as opposed to the case described above ..."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/285680540",
    "html_url": "https://github.com/ipython/ipython/issues/10376#issuecomment-285680540",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10376",
    "id": 285680540,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTY4MDU0MA==",
    "user": {
      "login": "SylvainCorlay",
      "id": 2397974,
      "node_id": "MDQ6VXNlcjIzOTc5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2397974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylvainCorlay",
      "html_url": "https://github.com/SylvainCorlay",
      "followers_url": "https://api.github.com/users/SylvainCorlay/followers",
      "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions",
      "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs",
      "repos_url": "https://api.github.com/users/SylvainCorlay/repos",
      "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-10T14:21:29Z",
    "updated_at": "2017-03-10T14:22:20Z",
    "author_association": "MEMBER",
    "body": "I understand. Although I don't think that this should have a so different behavior.\r\n\r\nThe proper approach in the future will probably be to use the notebook backend or ipympl and edit the figure.\r\n\r\nImplementing matplotlib-specific workarounds for the inline backend in ipywidgets' interact does not seem right.\r\n\r\nIn the code given by jason:\r\n\r\n```python\r\nplt.plot([1,2,3])\r\n@interact(n=(1,10))\r\ndef f(n):\r\n    plt.plot([1,n])\r\nplt.plot([4,5,6])\r\n```\r\n\r\nthe expected output is a figure with a lot of lines.."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/285681864",
    "html_url": "https://github.com/ipython/ipython/issues/10376#issuecomment-285681864",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10376",
    "id": 285681864,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTY4MTg2NA==",
    "user": {
      "login": "myyc",
      "id": 5025392,
      "node_id": "MDQ6VXNlcjUwMjUzOTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5025392?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/myyc",
      "html_url": "https://github.com/myyc",
      "followers_url": "https://api.github.com/users/myyc/followers",
      "following_url": "https://api.github.com/users/myyc/following{/other_user}",
      "gists_url": "https://api.github.com/users/myyc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/myyc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/myyc/subscriptions",
      "organizations_url": "https://api.github.com/users/myyc/orgs",
      "repos_url": "https://api.github.com/users/myyc/repos",
      "events_url": "https://api.github.com/users/myyc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/myyc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-10T14:27:03Z",
    "updated_at": "2017-03-10T15:30:20Z",
    "author_association": "NONE",
    "body": "Yes I completely agree. ~~I temporarily fixed it that way (overriding pandas plotting methods) in my local setup, \"waiting for a fix\" :)~~ Disregard that, it introduces a bunch of awful side effects.\r\n\r\nI've seen this issue being bounced around a variety of github projects so I'm wondering what the best resolution path should be.\r\n\r\n**edit**: why not write it this way then, way more explicit?\r\n\r\n    @interact(n=(1,10))\r\n    def f(n):\r\n        plt.plot([1,2,3])\r\n        plt.plot([1,n])\r\n        plt.plot([4,5,6])"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/285683371",
    "html_url": "https://github.com/ipython/ipython/issues/10376#issuecomment-285683371",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10376",
    "id": 285683371,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTY4MzM3MQ==",
    "user": {
      "login": "SylvainCorlay",
      "id": 2397974,
      "node_id": "MDQ6VXNlcjIzOTc5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2397974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylvainCorlay",
      "html_url": "https://github.com/SylvainCorlay",
      "followers_url": "https://api.github.com/users/SylvainCorlay/followers",
      "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions",
      "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs",
      "repos_url": "https://api.github.com/users/SylvainCorlay/repos",
      "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-10T14:33:21Z",
    "updated_at": "2017-03-10T14:49:54Z",
    "author_association": "MEMBER",
    "body": "You can check out the ipympl package (https://github.com/matplotlib/jupyter-matplotlib), which is the matplotlib widget. ipympl is still pretty early stage, but should have a faster release schedule than matplotlib core, and earlier support for jupyterlab etc..."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/285698307",
    "html_url": "https://github.com/ipython/ipython/issues/10376#issuecomment-285698307",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10376",
    "id": 285698307,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTY5ODMwNw==",
    "user": {
      "login": "myyc",
      "id": 5025392,
      "node_id": "MDQ6VXNlcjUwMjUzOTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5025392?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/myyc",
      "html_url": "https://github.com/myyc",
      "followers_url": "https://api.github.com/users/myyc/followers",
      "following_url": "https://api.github.com/users/myyc/following{/other_user}",
      "gists_url": "https://api.github.com/users/myyc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/myyc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/myyc/subscriptions",
      "organizations_url": "https://api.github.com/users/myyc/orgs",
      "repos_url": "https://api.github.com/users/myyc/repos",
      "events_url": "https://api.github.com/users/myyc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/myyc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-10T15:29:50Z",
    "updated_at": "2017-03-10T15:29:50Z",
    "author_association": "NONE",
    "body": "OK turns out that the override is a terrible idea. I'll look forward to a fix upstream :)"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/286526517",
    "html_url": "https://github.com/ipython/ipython/issues/10376#issuecomment-286526517",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10376",
    "id": 286526517,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjUyNjUxNw==",
    "user": {
      "login": "ketch",
      "id": 697763,
      "node_id": "MDQ6VXNlcjY5Nzc2Mw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/697763?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ketch",
      "html_url": "https://github.com/ketch",
      "followers_url": "https://api.github.com/users/ketch/followers",
      "following_url": "https://api.github.com/users/ketch/following{/other_user}",
      "gists_url": "https://api.github.com/users/ketch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ketch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ketch/subscriptions",
      "organizations_url": "https://api.github.com/users/ketch/orgs",
      "repos_url": "https://api.github.com/users/ketch/repos",
      "events_url": "https://api.github.com/users/ketch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ketch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-14T19:01:25Z",
    "updated_at": "2017-03-14T19:01:25Z",
    "author_association": "NONE",
    "body": "Just to contribute an uneducated user viewpoint: after updating to ipywidgets 6.0, I found that much of my widget code didn't work (due to the issue discussed here).  I was able to fix it by adding calls to `plt.show()`, but I've also found that I have to be very careful about where I add such calls; it seems that sometimes calling this too soon causes later plots not to appear (even if `plt.show()` is called again).  I haven't hunted this down enough to create a minimal example, but the current behavior seems unintuitive to me -- I am programming by trial and error to get around it."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/287158536",
    "html_url": "https://github.com/ipython/ipython/issues/10376#issuecomment-287158536",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10376",
    "id": 287158536,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzE1ODUzNg==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-16T19:00:00Z",
    "updated_at": "2017-03-16T19:00:00Z",
    "author_association": "MEMBER",
    "body": "What exact change in ipywidgets actually caused the new behavior? Are the post-execute hooks not being invoked at all, or are they still being invoked but their output is now discarded because the widget is being particular about which outputs are owned by the widget? If it's the latter, then it seems like isolating captured output to during the body of the function is not the right thing to do."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/287511336",
    "html_url": "https://github.com/ipython/ipython/issues/10376#issuecomment-287511336",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10376",
    "id": 287511336,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzUxMTMzNg==",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-18T02:48:42Z",
    "updated_at": "2017-03-18T02:48:42Z",
    "author_association": "MEMBER",
    "body": "The post-execute hooks are being invoked (I'm pretty sure) - you can see this from doing:\r\n```\r\nimport matplotlib.pyplot as plt\r\nfrom ipywidgets import interact\r\n%matplotlib inline\r\n\r\n@interact(n=(0,10))\r\ndef f(n):\r\n    plt.plot([0,n])\r\n```\r\nand moving the slider. The plots will be appended to the cell - the post execute hooks are sending the display-data messages. The interact executions indeed are being particular about only capturing output happening during the function invocation. I think that's the right thing to do. For example, two different interacts might share the exact same slider instance:\r\n```python\r\nimport matplotlib.pyplot as plt\r\nfrom ipywidgets import interact, IntSlider\r\n%matplotlib inline\r\n\r\nx = IntSlider()\r\n@interact(n=x)\r\ndef f(n):\r\n    plt.plot([0,n])\r\n    plt.show()\r\n@interact(n=x)\r\ndef f(n):\r\n    plt.plot([0,n,0,n])\r\n    plt.show()\r\n```\r\nWhen the single slider is tweaked (in either UI), both interacts would show the slider moving and both interact functions would run in the same execution call. It would be wrong for both interacts to be trying to capture any output from a post-execute hook. I think the flaw here is that we are using post-execute to generate output, and that's just too coarse of a hammer. We should have a finer-grained method for flushing output generated in a block of code, which may be called multiple times in a single execution."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/287511405",
    "html_url": "https://github.com/ipython/ipython/issues/10376#issuecomment-287511405",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10376",
    "id": 287511405,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzUxMTQwNQ==",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-18T02:50:18Z",
    "updated_at": "2017-03-18T02:50:18Z",
    "author_association": "MEMBER",
    "body": "> We should have a finer-grained method for flushing output generated in a block of code\r\n\r\nFor the matplotlib plotting, this flushing happens when doing `plt.show`"
  }
]
