[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3822129",
    "html_url": "https://github.com/ipython/ipython/issues/1378#issuecomment-3822129",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1378",
    "id": 3822129,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MjIxMjk=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-06T00:22:18Z",
    "updated_at": "2012-02-06T00:22:18Z",
    "author_association": "MEMBER",
    "body": "Thanks for the summary, this is indeed useful to track as it's a fairly self-contained question we've already discussed a fair bit.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3835075",
    "html_url": "https://github.com/ipython/ipython/issues/1378#issuecomment-3835075",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1378",
    "id": 3835075,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MzUwNzU=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-06T19:32:45Z",
    "updated_at": "2012-02-06T19:32:45Z",
    "author_association": "MEMBER",
    "body": "Yes, I think the basic features above would work fine for a first go.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5565421",
    "html_url": "https://github.com/ipython/ipython/issues/1378#issuecomment-5565421",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1378",
    "id": 5565421,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NjU0MjE=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-08T01:35:49Z",
    "updated_at": "2012-05-08T01:35:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "Some points I couldn't find in the threads (Just quickly read them. Sorry if I miss something):\n1. Auto save file must be easier to ignore by .gitignore or .hgignore. To ignore `.foo_notebook.ipynb` you need `.*.ipynb`. Well, that's fine.\n2. What happens when you open multiple clients? Can other client can overwrite the auto save file?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5566513",
    "html_url": "https://github.com/ipython/ipython/issues/1378#issuecomment-5566513",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1378",
    "id": 5566513,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NjY1MTM=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-08T03:16:03Z",
    "updated_at": "2012-05-08T03:16:03Z",
    "author_association": "MEMBER",
    "body": "On Mon, May 7, 2012 at 6:35 PM, Takafumi Arakaki\nreply@reply.github.com\nwrote:\n\n> Some points I couldn't find in the threads (Just quickly read them. Sorry if I miss something):\n> 1. Auto save file must be easier to ignore by .gitignore or .hgignore. To ignore `.foo_notebook.ipynb` you need `.*.ipynb`. Well, that's fine.\n\nWe are not even sure we want to use hidden files like this.  Not too\nfond of cluttering the file system.\n\n> 1. What happens when you open multiple clients? Can other client can overwrite the auto save file?\n\nCurrently yes, this is unavoidable.\n\n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/issues/1378#issuecomment-5565421\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5582811",
    "html_url": "https://github.com/ipython/ipython/issues/1378#issuecomment-5582811",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1378",
    "id": 5582811,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODI4MTE=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-08T18:41:57Z",
    "updated_at": "2012-05-08T18:41:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "> > 1. What happens when you open multiple clients? Can other client can overwrite the auto save file?\n> \n> Currently yes, this is unavoidable.\n\nJust an idea.  How about append the session id to the auto save file?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5582899",
    "html_url": "https://github.com/ipython/ipython/issues/1378#issuecomment-5582899",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1378",
    "id": 5582899,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODI4OTk=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-08T18:45:23Z",
    "updated_at": "2012-05-08T18:45:23Z",
    "author_association": "MEMBER",
    "body": "On Tue, May 8, 2012 at 11:41 AM, Takafumi Arakaki\nreply@reply.github.com\nwrote:\n\n> > > 1. What happens when you open multiple clients? Can other client can overwrite the auto save file?\n> > \n> > Currently yes, this is unavoidable.\n> \n> Just an idea.  How about append the session id to the auto save file?\n\nThat is the problem though = we don't have any notion of sessions or\nusers currently.  We will have to grow that before we can properly\nhandle these things.  Part of the reason we are moving slow of these\nthings is that there are numerous complex design problems that are all\ninterrelated.\n\n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/issues/1378#issuecomment-5582811\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5583008",
    "html_url": "https://github.com/ipython/ipython/issues/1378#issuecomment-5583008",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1378",
    "id": 5583008,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODMwMDg=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-08T18:49:22Z",
    "updated_at": "2012-05-08T18:49:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Can't we use Kernel.session_id?\n\nhttps://github.com/ipython/ipython/blob/2b6643e2c09b5dff9d45f0cb51f065111a816729/IPython/frontend/html/notebook/static/js/kernel.js#L23\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5583178",
    "html_url": "https://github.com/ipython/ipython/issues/1378#issuecomment-5583178",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1378",
    "id": 5583178,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODMxNzg=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-08T18:55:30Z",
    "updated_at": "2012-05-08T18:55:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ah, maybe you want to separate kernel stuff from notebook.  In that case, you will need \"client id\".  But I guess defining it in client side and sending it to server won't be too hard.  Well, if you want some more sophisticated session/user control it will be hard though.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5583526",
    "html_url": "https://github.com/ipython/ipython/issues/1378#issuecomment-5583526",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1378",
    "id": 5583526,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODM1MjY=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-08T19:09:55Z",
    "updated_at": "2012-05-08T19:09:55Z",
    "author_association": "MEMBER",
    "body": "On Tue, May 8, 2012 at 11:55 AM, Takafumi Arakaki\nreply@reply.github.com\nwrote:\n\n> Ah, maybe you want to separate kernel stuff from notebook.  In that case, you will need \"client id\".  But I guess defining it in client side and sending it to server won't be too hard.  Well, if you want some more sophisticated session/user control it will be hard though.\n\nYes, the important session information is that of the notebook client,\nnot the kernel.  The kernel is not involved in the synching in any\nway.  The notebook client session will have to be coupled with the\nuser at some level, so other users can see who is editing the notebook\ncurrently.  Again, not simple.\n\n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/issues/1378#issuecomment-5583178\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6233363",
    "html_url": "https://github.com/ipython/ipython/issues/1378#issuecomment-6233363",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1378",
    "id": 6233363,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMzMzNjM=",
    "user": {
      "login": "tmbdev",
      "id": 333887,
      "node_id": "MDQ6VXNlcjMzMzg4Nw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/333887?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tmbdev",
      "html_url": "https://github.com/tmbdev",
      "followers_url": "https://api.github.com/users/tmbdev/followers",
      "following_url": "https://api.github.com/users/tmbdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/tmbdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tmbdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tmbdev/subscriptions",
      "organizations_url": "https://api.github.com/users/tmbdev/orgs",
      "repos_url": "https://api.github.com/users/tmbdev/repos",
      "events_url": "https://api.github.com/users/tmbdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tmbdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-11T00:30:50Z",
    "updated_at": "2012-06-11T00:46:32Z",
    "author_association": "NONE",
    "body": "I can only speak for UNIX/Linux, but on those systems, there is a long tradition and a lot of experience with how editors handle this. GNU Emacs started the conventions, but a lot of programs follow them now.\n\nBased on my experience, automatic backups, crash recovery, and source control are three different issues.  Source control systems are not a replacement for backup or crash recovery files (otherwise people would have stopped using the latter long ago).\n\nThere are conventions for how to do this, namely crash recovery files are of the form '#*#\", and backup files are of the form \"*~\" or \"something.~1~\".  There are reasons for this.  '#something#' is hard to remove or even access accidentally and it sorts first in a directory listing. Using \"*~\" and/or \"*.~1~\" for backup means that the backup files follow directly the files they back up, and they can be removed easily with commands like \"rm mynotebook.ipynb*\" or moved in bulk with \"mv mynotebook.ipynb* ../new-project\".  You can remove all backup files with \"rm *~\".  Furthermore, because these conventions change the extension, people won't accidentally open a backup file and start working on it, which is a really important feature. People know where to look for these files, tools like \"ls\" understand them, and to experienced users, dealing with them is pretty much reflexive.  People set up cron jobs to clean them up, set up \"ls\" and file managers not to show them, and have revision control and indexing programs ignore them.  And just as importantly, lots of tools know not to use file names like those for anything else.\n\nYou may find these conventions ugly, and I might even agree, but it's both common usage, and it's a compromise between conflicting design goals.  If you come up with your own convention, people won't know where to look for backup files, they won't know what the files are that you are leaving around, and they'll have to set up all their tools to deal with a different convention yet again.  You also run the risk of breaking something; for example, using \".foo.ipynb\" as a backup for \"foo.ipynb\" is potentially dangerous.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6233455",
    "html_url": "https://github.com/ipython/ipython/issues/1378#issuecomment-6233455",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1378",
    "id": 6233455,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMzM0NTU=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-11T00:40:17Z",
    "updated_at": "2012-06-11T00:40:17Z",
    "author_association": "MEMBER",
    "body": "@tmbdev, thanks for that comment; having used these features on *nix/emacs for over 15 years, I'd never given much thought to how they actually reflect a careful design process.  Indeed a bit ugly filesystem-wise, but certainly not accidental.\n\nIt's worth keeping this in mind, because if we want to break away from these conventions, at least we should do so aware of it and of the changes we introduce.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6233531",
    "html_url": "https://github.com/ipython/ipython/issues/1378#issuecomment-6233531",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1378",
    "id": 6233531,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMzM1MzE=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-11T00:51:07Z",
    "updated_at": "2012-06-11T00:51:07Z",
    "author_association": "MEMBER",
    "body": "I'd favour something more like how LibreOffice saves recovery files - out of the way, but readily accessible through the application (and presumably documented somewhere - we should document our location, anyway). Like us, it's a cross platform app, and Unix conventions don't necessarily work so well on Windows.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6233611",
    "html_url": "https://github.com/ipython/ipython/issues/1378#issuecomment-6233611",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1378",
    "id": 6233611,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMzM2MTE=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-11T01:03:37Z",
    "updated_at": "2012-06-11T01:03:37Z",
    "author_association": "MEMBER",
    "body": "As long as it's not as nagging as the libreoffice one is, that quite often has false positives that attempt recovery of non-existent stuff, and drives me nuts :)\n\nI'm not saying we must follow the *nix approach, just that this design background was very useful so we can keep them in mind as we approach the problem, and try to offer solutions to all the problem spectrum (even if our solutions end up being different today).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6233659",
    "html_url": "https://github.com/ipython/ipython/issues/1378#issuecomment-6233659",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1378",
    "id": 6233659,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMzM2NTk=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-11T01:10:59Z",
    "updated_at": "2012-06-11T01:10:59Z",
    "author_association": "MEMBER",
    "body": "I think the main annoyance with the LO design is that it's a modal dialog when it launches. I imagine something integrated with the file list, so if the autosave file was more recent than the saved version, it would offer:\n\n```\nMy notebook title (saved 12:31)\n  - autosave from 12:38\n```\n\nSo you can click the title for the last saved version, or the autosave line for the autosaved version. Obviously it would take a bit of tweaking to work out what's clearest - e.g. we might make the title line refer to the autosave, because 95% of the time that's what you want.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6346417",
    "html_url": "https://github.com/ipython/ipython/issues/1378#issuecomment-6346417",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1378",
    "id": 6346417,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNDY0MTc=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-14T23:44:26Z",
    "updated_at": "2012-06-14T23:44:26Z",
    "author_association": "MEMBER",
    "body": "For the current file based storage system we are currently using for notebooks, I actually like using something like \"~\" files in that directory.  I agree that it is not pretty, but it is dead simple and matches the current philosophy of the notebook server that has absolutely no special databases or directories.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6346479",
    "html_url": "https://github.com/ipython/ipython/issues/1378#issuecomment-6346479",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1378",
    "id": 6346479,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNDY0Nzk=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-14T23:48:17Z",
    "updated_at": "2012-06-14T23:48:17Z",
    "author_association": "MEMBER",
    "body": "If we can confirm that send2trash really works like is claims to I think we should put this in externals (we need to also check py3 compat) and use it instead of deleting files.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/6346999",
    "html_url": "https://github.com/ipython/ipython/issues/1378#issuecomment-6346999",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1378",
    "id": 6346999,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNDY5OTk=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-15T00:26:22Z",
    "updated_at": "2012-06-15T00:26:22Z",
    "author_association": "MEMBER",
    "body": "send2trash appears to have gone for separate python 2/3 codebases:\n\nhttp://pypi.python.org/pypi/Send2Trash3k\n\nAlthough it looks like most of the changes could be handled by 2to3:\n\nhttp://hg.hardcoded.net/send2trash/compare/py2k..default\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10295930",
    "html_url": "https://github.com/ipython/ipython/issues/1378#issuecomment-10295930",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1378",
    "id": 10295930,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjk1OTMw",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-12T17:17:15Z",
    "updated_at": "2012-11-12T17:18:09Z",
    "author_association": "MEMBER",
    "body": "Since we've been discussing this lately on the list, I figured I'd post here the easy python/JS solutions for user-driven autosave, for those who do want a regular autosave:\n\nOne can enable autosave by putting this into the ipython startup file:\n\n``` python\ndef autosave(interval=5):\n    \"\"\"Autosave the notebook every interval (in minutes)\"\"\"\n    from IPython.core.display import Javascript\n    interval *= 60*1000 # JS wants intervals in miliseconds\n    tpl = 'setInterval ( \"IPython.notebook.save_notebook()\", %i );'\n    return Javascript(tpl % interval)\n```\n\nand call it anywhere in the notebook to activate it.\n\nAlternately, just put this (in this case, using 5 minutes):\n\n``` javascript\n<script type=\"text/javascript\">\nsetInterval ( \"IPython.notebook.save_notebook()\", 5*60*1000 );\n</script>\n```\n\nin the first cell of a notebook and make it a markdown cell.  Done, autosave is on for that notebook every time you open it.  \n\n@shazow may be able to give us some tips on how to plug this into the browser saving machinery.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10296085",
    "html_url": "https://github.com/ipython/ipython/issues/1378#issuecomment-10296085",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1378",
    "id": 10296085,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjk2MDg1",
    "user": {
      "login": "shazow",
      "id": 6292,
      "node_id": "MDQ6VXNlcjYyOTI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shazow",
      "html_url": "https://github.com/shazow",
      "followers_url": "https://api.github.com/users/shazow/followers",
      "following_url": "https://api.github.com/users/shazow/following{/other_user}",
      "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
      "organizations_url": "https://api.github.com/users/shazow/orgs",
      "repos_url": "https://api.github.com/users/shazow/repos",
      "events_url": "https://api.github.com/users/shazow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shazow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-12T17:21:18Z",
    "updated_at": "2012-11-12T17:22:12Z",
    "author_association": "NONE",
    "body": "My suggestion would be this: Implement the notebook auto-saving in the browser, and keep writing to a disk file on-demand. Here's how I'd do it:\n\nAdd a little snippet of JavaScript which basically writes the current state of the notebook into the browser's LocalStorage every so often (assuming anything has changed). Not sure what the best way to dump the state is, could write the entire notebook JSON into a LocalStorage value blob—could even store revisions based on a timestamp key.\n\nIf the browser crashes, we should still be able to recover the latest auto-saved version from LocalStorage and load the browser state accordingly. Then the user can manually save to a disk file as normal.\n\nThoughts?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10296260",
    "html_url": "https://github.com/ipython/ipython/issues/1378#issuecomment-10296260",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1378",
    "id": 10296260,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjk2MjYw",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-12T17:25:54Z",
    "updated_at": "2012-11-12T17:25:54Z",
    "author_association": "MEMBER",
    "body": "Just be carefull that what Fernando gives this will overwrite you current saved file. \nIf you delete a cell and it autosaves, you are screwed. (not anymore on dev which have cell deletion undoing now) \nTo have a regular backup file with different extension (no need to put anything in md cell) \nUse what is after my signature in custom.js (0.13+) \n\n## \n\nMatthias\n\n// ~/.ipython/profile_default/static/js/custom.js\nvar make_backup = function(){\n    var json = IPython.notebook.toJSON();\n    json.nbformat=3;\n    json.nbformat_minor=0;\n    var s = JSON.stringify(json)\n    var settings = {\n                    processData : false,\n                    cache : false,\n                    type : 'POST',\n                    dataType : 'json',\n                    data : s,\n                    headers : {'Content-Type': 'application/json' },\n                    success : function (data, status, xhr) {\n                                console.log('save success');\n                            }\n    };\n\n```\nvar qs = $.param({name:IPython.notebook.notebook_name+'.bkp', format:'json'});\nvar url = $('body').data('baseProjectUrl') + 'notebooks?' + qs;\nconsole.log(settings);\n$.ajax(url, settings);\n```\n\n}\nvar seconde = 1000\nvar minute = 60*seconde\n\n// comment following line to disable.\nsetTimeout(make_backup,5*minute)\n\nLe 12 nov. 2012 à 18:17, Fernando Perez a écrit :\n\n> Since we've been discussing this lately on the list, I figured I'd post here the easy python/JS solutions for user-driven autosave, for those who do want a regular autosave:\n> \n> Fortunately, the OP can have autosave right now, just put this in your\n> startup file:\n> \n> def autosave(interval=5):\n> \n> \"\"\"Autosave the notebook every interval (in minutes)\"\"\"\n> \n> from IPython.core.display import Javascript\n> \n> interval _= 60_1000 # JS wants intervals in miliseconds\n> \n> tpl = 'setInterval ( \"IPython.notebook.save_notebook()\", %i );'\n> \n> return Javascript(tpl % interval)\n> and call it anywhere in your notebook to activate it.\n> \n> Alternately, just put this (in this case, using 5 minutes):\n> \n> <script type=\"text/javascript\">\n> setInterval ( \"IPython.notebook.save_notebook()\", 5*60*1000 );\n> </script>\n> \n> in the first cell of your notebook and make it a markdown cell.\n> You're done, autosave is on for that notebook everytime you open it. @shazow may be able to give us some tips on how to plug this into the browser saving machinery.\n> \n> —\n> Reply to this email directly or view it on GitHub.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10296638",
    "html_url": "https://github.com/ipython/ipython/issues/1378#issuecomment-10296638",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1378",
    "id": 10296638,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjk2NjM4",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-12T17:37:05Z",
    "updated_at": "2012-11-12T17:37:05Z",
    "author_association": "MEMBER",
    "body": "Having autosave purely in the client avoids the potential for conflicts\nwhen different frontends are autosaving, but I think it might get confusing\nfor the user that saving happens in two different places.\n\nE.g. I'm working on a notebook at work, when my computer locks up. I recall\nthat it has autosaved, do a hard shutdown, and go home for the evening.\nLoading up the notebook, I find that it's still an old version - looks like\nthe autosave didn't work. I spend a while redoing some of the bits I\nremember, taking care to save manually. The next morning, my work computer\ncan see both the autosaved version from before the crash, and the notebook\nas I'd saved it from home.\n\nI also see that the limits of localStorage are 2.5-10 MB, depending on the\nbrowser. So we'd have to take some care about what we save, as people build\nmore and larger notebooks.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10303237",
    "html_url": "https://github.com/ipython/ipython/issues/1378#issuecomment-10303237",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1378",
    "id": 10303237,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzAzMjM3",
    "user": {
      "login": "shazow",
      "id": 6292,
      "node_id": "MDQ6VXNlcjYyOTI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shazow",
      "html_url": "https://github.com/shazow",
      "followers_url": "https://api.github.com/users/shazow/followers",
      "following_url": "https://api.github.com/users/shazow/following{/other_user}",
      "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
      "organizations_url": "https://api.github.com/users/shazow/orgs",
      "repos_url": "https://api.github.com/users/shazow/repos",
      "events_url": "https://api.github.com/users/shazow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shazow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-12T20:37:09Z",
    "updated_at": "2012-11-12T20:37:09Z",
    "author_association": "NONE",
    "body": "@takluyver, that's a good example, thank you. That is indeed confusing. Though perhaps better than losing your data altogether?\n\nThe LocalStorage limits can be increased at the prompt of the user.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10305504",
    "html_url": "https://github.com/ipython/ipython/issues/1378#issuecomment-10305504",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1378",
    "id": 10305504,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzA1NTA0",
    "user": {
      "login": "tmbdev",
      "id": 333887,
      "node_id": "MDQ6VXNlcjMzMzg4Nw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/333887?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tmbdev",
      "html_url": "https://github.com/tmbdev",
      "followers_url": "https://api.github.com/users/tmbdev/followers",
      "following_url": "https://api.github.com/users/tmbdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/tmbdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tmbdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tmbdev/subscriptions",
      "organizations_url": "https://api.github.com/users/tmbdev/orgs",
      "repos_url": "https://api.github.com/users/tmbdev/repos",
      "events_url": "https://api.github.com/users/tmbdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tmbdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-12T21:40:33Z",
    "updated_at": "2012-11-12T21:40:33Z",
    "author_association": "NONE",
    "body": "\"Having autosave purely in the client avoids the potential for conflicts when\ndifferent frontends are autosaving\"\n\nAs far as I can tell, that case is already not working: saving in one\nclient overwrites changes previously saved in another one.\n\nThe two choices for dealing with this are either to keep all the windows in\nsync in real time, or to lock all but one; as far as I can tell, iPython\nhas neither mechanism.\n\nTom\n\nOn Tue, Nov 13, 2012 at 2:37 AM, Thomas Kluyver notifications@github.comwrote:\n\n> Having autosave purely in the client avoids the potential for conflicts\n> when different frontends are autosaving, but I think it might get confusing\n> for the user that saving happens in two different places.\n> \n> E.g. I'm working on a notebook at work, when my computer locks up. I recall\n> that it has autosaved, do a hard shutdown, and go home for the evening.\n> Loading up the notebook, I find that it's still an old version - looks like\n> the autosave didn't work. I spend a while redoing some of the bits I\n> remember, taking care to save manually. The next morning, my work computer\n> can see both the autosaved version from before the crash, and the notebook\n> as I'd saved it from home.\n> \n> I also see that the limits of localStorage are 2.5-10 MB, depending on the\n> browser. So we'd have to take some care about what we save, as people build\n> more and larger notebooks.\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/issues/1378#issuecomment-10296638.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10306052",
    "html_url": "https://github.com/ipython/ipython/issues/1378#issuecomment-10306052",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1378",
    "id": 10306052,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzA2MDUy",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-12T21:57:13Z",
    "updated_at": "2012-11-12T21:57:13Z",
    "author_association": "MEMBER",
    "body": "@tmbdev, what @shazow meant was saving in the _client's private storage area_, which is a browser-local storage.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10307494",
    "html_url": "https://github.com/ipython/ipython/issues/1378#issuecomment-10307494",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1378",
    "id": 10307494,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzA3NDk0",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-12T22:40:26Z",
    "updated_at": "2012-11-12T22:40:26Z",
    "author_association": "MEMBER",
    "body": "@tmbdev: Agreed, we don't do anything to deal with such conflicts at present. But the problem would be more acute with autosaves. Imagine you left a notebook open on another computer (or even in another tab - I often have so many open that I forget some), and both the copy you're working on and the unedited copy have a naive autosave firing every minute. If you do suffer a crash/powercut/meteorite strike, it's pot luck whether the one you want got the last autosave.\n\nCome to think of it, using local storage actually wouldn't solve the case with two tabs open in the same browser. But maybe the solution to that is for me to pay attention to my tabs. ;-)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10321616",
    "html_url": "https://github.com/ipython/ipython/issues/1378#issuecomment-10321616",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1378",
    "id": 10321616,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzIxNjE2",
    "user": {
      "login": "tmbdev",
      "id": 333887,
      "node_id": "MDQ6VXNlcjMzMzg4Nw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/333887?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tmbdev",
      "html_url": "https://github.com/tmbdev",
      "followers_url": "https://api.github.com/users/tmbdev/followers",
      "following_url": "https://api.github.com/users/tmbdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/tmbdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tmbdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tmbdev/subscriptions",
      "organizations_url": "https://api.github.com/users/tmbdev/orgs",
      "repos_url": "https://api.github.com/users/tmbdev/repos",
      "events_url": "https://api.github.com/users/tmbdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tmbdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-13T10:23:18Z",
    "updated_at": "2012-11-13T10:23:18Z",
    "author_association": "NONE",
    "body": "With multiple windows open, the autosave would alternate between one and\nthe other. That doesn't seem like a big problem. You could append a random\nnumber derived from each window to the autosave file (it's only temporary\nanyway) to prevent even that (the same trick works with local storage).\n\nData loss from multiple browser windows however is a real problem, that's\nwhy almost every common app implements either locking or real-time\nsync. \"Paying attention\" isn't a solution, because it remains a support\nproblem when you use the tool with students and researchers.\n\nOn Tue, Nov 13, 2012 at 7:44 AM, Thomas Kluyver notifications@github.comwrote:\n\n> @tmbdev https://github.com/tmbdev: Agreed, we don't do anything to deal\n> with such conflicts at present. But the problem would be more acute with\n> autosaves. Imagine you left a notebook open on another computer (or even in\n> another tab - I often have so many open that I forget some), and both the\n> copy you're working on and the unedited copy have a naive autosave firing\n> every minute. If you do suffer a crash/powercut/meteorite strike, it's pot\n> luck whether the one you want got the last autosave.\n> \n> Come to think of it, using local storage actually wouldn't solve the case\n> with two tabs open in the same browser. But maybe the solution to that is\n> for me to pay attention to my tabs. ;-)\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/issues/1378#issuecomment-10307494.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10321946",
    "html_url": "https://github.com/ipython/ipython/issues/1378#issuecomment-10321946",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1378",
    "id": 10321946,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzIxOTQ2",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-13T10:35:54Z",
    "updated_at": "2012-11-13T10:35:54Z",
    "author_association": "MEMBER",
    "body": "We will get to live syncing between browser/user. It is just not strait forward.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/10337412",
    "html_url": "https://github.com/ipython/ipython/issues/1378#issuecomment-10337412",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1378",
    "id": 10337412,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzM3NDEy",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-13T18:38:41Z",
    "updated_at": "2012-11-13T18:38:41Z",
    "author_association": "MEMBER",
    "body": "I think we do need a simple autosave approach that will work for now.  But,\nonce we have live multi-sure notebook syncing, the server will always have\nthe latest state of the notebook and autosave will possibly look very\ndifferent.\n\nOn Tue, Nov 13, 2012 at 2:35 AM, Bussonnier Matthias <\nnotifications@github.com> wrote:\n\n> We will get to live syncing between browser/user. It is just not strait\n> forward.\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/issues/1378#issuecomment-10321946.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12867154",
    "html_url": "https://github.com/ipython/ipython/issues/1378#issuecomment-12867154",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1378",
    "id": 12867154,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyODY3MTU0",
    "user": {
      "login": "drevicko",
      "id": 1086081,
      "node_id": "MDQ6VXNlcjEwODYwODE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1086081?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/drevicko",
      "html_url": "https://github.com/drevicko",
      "followers_url": "https://api.github.com/users/drevicko/followers",
      "following_url": "https://api.github.com/users/drevicko/following{/other_user}",
      "gists_url": "https://api.github.com/users/drevicko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/drevicko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/drevicko/subscriptions",
      "organizations_url": "https://api.github.com/users/drevicko/orgs",
      "repos_url": "https://api.github.com/users/drevicko/repos",
      "events_url": "https://api.github.com/users/drevicko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/drevicko/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-30T00:28:24Z",
    "updated_at": "2013-01-30T00:28:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm new to iPython Notebooks and am very pleased with what I find - again I am indebted to an open source community - many thanks!\n\nFor what it's worth, I have to agree with @tmbdev 's sentiments in #2553 - there is a conceptual simplicity with approaches like GoogleDocs and Dropbox: you are dealing with ONE virtual object, the same one wherever and however you access it. An important feature is the ability to rollback. This solves the issues around multiple versions and how/where to autosave as discussed here (both design complexity and confusion for the user).\n\nThe traditional model of \"don't hit save until you feel it's ready\" is more suited to a version control paradigm like git (eg: @minrk's [comment](https://github.com/ipython/ipython/issues/977#issuecomment-2705221) mentioned that 'save' could do a `git add && commit`)\n\nThankyou @fperez for a way to [set up autosave](https://github.com/ipython/ipython/issues/1378#issuecomment-10295930) for those who want it now.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12872591",
    "html_url": "https://github.com/ipython/ipython/issues/1378#issuecomment-12872591",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1378",
    "id": 12872591,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyODcyNTkx",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-30T03:32:07Z",
    "updated_at": "2013-01-30T03:32:07Z",
    "author_association": "MEMBER",
    "body": "Indeed, and there's even an [extension](https://github.com/minrk/ipython_extensions/blob/master/autosave.py) I use regularly, so in my notebooks I just do:\n\n```\n%load_ext autosave\n%autosave 300\n```\n\nto autosave every five minutes. It's quite trivial.\n"
  }
]
