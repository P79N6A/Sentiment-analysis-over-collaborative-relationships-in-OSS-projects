[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22884651",
    "html_url": "https://github.com/ipython/ipython/pull/4060#issuecomment-22884651",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4060",
    "id": 22884651,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyODg0NjUx",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-19T16:27:59Z",
    "updated_at": "2013-08-19T16:27:59Z",
    "author_association": "MEMBER",
    "body": "I think this is closer to what we were doing before, but we changed it because quite a few people, faced with an example like this:\n\n```\n>>> def f(a):\n...     b = a * 2\n...     return b + 1\n```\n\nwill copy from immediately after the initial prompt, so we get something like this pasted:\n\n```\ndef f(a):\n...     b = a * 2\n...     return b + 1\n```\n\nI think this case is rather more common than having the ellipsis singleton as the first element on the second line of the block (we already leave it if there isn't something that looks like a prompt in the first two lines).\n\nWe could make it slightly more specific by checking the first line only for the initial `>>>` prompt, not the `...` continuation prompt. But there are also times when you want to copy and paste code from the middle of a function definition or a loop, in which case it may start with a `...` prompt.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23371725",
    "html_url": "https://github.com/ipython/ipython/pull/4060#issuecomment-23371725",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4060",
    "id": 23371725,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzcxNzI1",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-27T21:18:48Z",
    "updated_at": "2013-08-27T21:18:48Z",
    "author_association": "MEMBER",
    "body": "Logic updated after discussion with @takluyver:\n1. two expressions: `prompt_re` and `initial_re`, with initial being optional, and defaulting to the same as `prompt`\n2. `prompt` should match _any_ prompt, not just continuation (unchanged from master)\n3. `initial` is checked against the first line only, so that continuation prompts will not be stripped from the first line of the cell.\n4. Any prompt will be stripped from the second line of the cell\n5. If any prompt is found on the first two lines of the cell, prompts will be stripped from the rest of the cell.\n\nMostly the logic is unchanged - the only change being the addition of the smaller `initial_re` for checking only the first line, which allows us to avoid stripping `...` in the first line.\n\nThere are still some cases that will fail, which I think is inevitable given the ambiguity.  But I think the affected cases are rare enough and easy enough to workaround that this is at least an improvement over master:\n1. paste a block only consisting of continuation prompts (works in master, fails with this PR)\n2. line starting with intentional ellipsis _only on the second line of the cell_ (no change from master)\n\nworkaround for 1. is to use initial prompt or no prompt on the first line.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23372509",
    "html_url": "https://github.com/ipython/ipython/pull/4060#issuecomment-23372509",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4060",
    "id": 23372509,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzcyNTA5",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-27T21:29:24Z",
    "updated_at": "2013-08-27T21:29:24Z",
    "author_association": "MEMBER",
    "body": ":+1: I agree with the behaviour, and the implementation looks good. We'll give it a day or two in case anyone wants to discuss the behaviour more.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23373197",
    "html_url": "https://github.com/ipython/ipython/pull/4060#issuecomment-23373197",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4060",
    "id": 23373197,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzczMTk3",
    "user": {
      "login": "asmeurer",
      "id": 71486,
      "node_id": "MDQ6VXNlcjcxNDg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmeurer",
      "html_url": "https://github.com/asmeurer",
      "followers_url": "https://api.github.com/users/asmeurer/followers",
      "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
      "organizations_url": "https://api.github.com/users/asmeurer/orgs",
      "repos_url": "https://api.github.com/users/asmeurer/repos",
      "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmeurer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-27T21:40:01Z",
    "updated_at": "2013-08-27T21:40:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "This seems like as good of a workaround as I can think of. You can probably be smarter in the qtconsole, but that's your decision if you want to implement the different logic there. \n"
  }
]
