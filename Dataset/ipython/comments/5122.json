[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/35011891",
    "html_url": "https://github.com/ipython/ipython/pull/5122#issuecomment-35011891",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5122",
    "id": 35011891,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDExODkx",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-13T18:52:34Z",
    "updated_at": "2014-02-13T18:52:34Z",
    "author_association": "MEMBER",
    "body": "I haven't tested this yet, (changing OS first, this one doesn't have matplotlib on it).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/35012777",
    "html_url": "https://github.com/ipython/ipython/pull/5122#issuecomment-35012777",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5122",
    "id": 35012777,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDEyNzc3",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-13T19:00:53Z",
    "updated_at": "2014-02-13T19:00:53Z",
    "author_association": "MEMBER",
    "body": "Cool, seems to work! \n\nNow I can naively run the following:\n\n``` python\n@interact\ndef test(n=(2,10)):\n    plot(rand(n))\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/35015469",
    "html_url": "https://github.com/ipython/ipython/pull/5122#issuecomment-35015469",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5122",
    "id": 35015469,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDE1NDY5",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-13T19:26:15Z",
    "updated_at": "2014-02-13T19:26:15Z",
    "author_association": "MEMBER",
    "body": "Looking at the code change, this feels not quite right:\n- `post_execute` functions aren't called when we do a silent execute request, which is a way to execute some code without incrementing the execution count, but they are called when code executes from widgets, which arguably serves quite a similar purpose. I think this comes back to #5006 - we need to define more carefully the context where comm code runs.\n- Using `get_ipython()` in our own code is code smell - anywhere that needs a handle on the shell object should get one when it's called/created.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/35016122",
    "html_url": "https://github.com/ipython/ipython/pull/5122#issuecomment-35016122",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5122",
    "id": 35016122,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDE2MTIy",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-13T19:32:08Z",
    "updated_at": "2014-02-13T19:32:08Z",
    "author_association": "MEMBER",
    "body": "+1 to @takluyver's points.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/35016172",
    "html_url": "https://github.com/ipython/ipython/pull/5122#issuecomment-35016172",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5122",
    "id": 35016172,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDE2MTcy",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-13T19:32:32Z",
    "updated_at": "2014-02-13T19:32:32Z",
    "author_association": "MEMBER",
    "body": "> which is a way to execute some code without incrementing the execution count\n\nYeah it would definitely be weird to increase the execution count for each widget msg...  Maybe I should just call the matplotlib related callbacks for now?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/35016852",
    "html_url": "https://github.com/ipython/ipython/pull/5122#issuecomment-35016852",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5122",
    "id": 35016852,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDE2ODUy",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-13T19:38:38Z",
    "updated_at": "2014-02-13T19:38:38Z",
    "author_association": "MEMBER",
    "body": "This will need to be replaced too.  https://github.com/jdfreder/ipython/blob/ad803d72eaa33635955d355ec09ba80f49d37614/IPython/html/widgets/widget.py#L37\n\nI don't see how how `get_ipython` can be avoided without requiring it in the constructor of every widget.  I could get it from the comm but the comm just calls get_ipython too...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/35018116",
    "html_url": "https://github.com/ipython/ipython/pull/5122#issuecomment-35018116",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5122",
    "id": 35018116,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDE4MTE2",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-13T19:50:20Z",
    "updated_at": "2014-02-13T19:50:20Z",
    "author_association": "MEMBER",
    "body": "I think we need to think more carefully about what executing code in response to a comm actually means. Should pre/post execute hooks fire? Should we ignore SystemExit as we do when running a cell? Should custom exception hooks be wired up?\n\nOur machinery is built around the idea that there is code that's part of IPython, and code that the user has explicitly executed by hitting return/shift-return on the topmost level of it. 'silent' execution was kind of a special case that allowed us to do a few useful things. Now there's a third category: code that's being executed in response to a user action other than explicitly running code, such as dragging a slider. We need to rethink our model to fit that in.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/35018192",
    "html_url": "https://github.com/ipython/ipython/pull/5122#issuecomment-35018192",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5122",
    "id": 35018192,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDE4MTky",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-13T19:50:58Z",
    "updated_at": "2014-02-13T19:50:58Z",
    "author_association": "MEMBER",
    "body": "As for get_ipython - I don't much like that the Comm class uses it either, but let's try to avoid adding it in any more places.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/35018389",
    "html_url": "https://github.com/ipython/ipython/pull/5122#issuecomment-35018389",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5122",
    "id": 35018389,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDE4Mzg5",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-13T19:52:42Z",
    "updated_at": "2014-02-13T19:52:42Z",
    "author_association": "MEMBER",
    "body": "It seems to me that comm handlers map 1:1 to silent execution:\n- it shouldn't affect the history\n- no displayhook\n- it should call post_execute (I think it's wrong that we don't right now)\n- the scope boiler plate, setting raw_input, parent headers, etc. should all be identical\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/35018454",
    "html_url": "https://github.com/ipython/ipython/pull/5122#issuecomment-35018454",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5122",
    "id": 35018454,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDE4NDU0",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-13T19:53:20Z",
    "updated_at": "2014-02-13T19:53:20Z",
    "author_association": "MEMBER",
    "body": "I don't actually see a problem with using get_ipython, but it's easy enough to add a `shell` trait to Widgets and Comms.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/35125962",
    "html_url": "https://github.com/ipython/ipython/pull/5122#issuecomment-35125962",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5122",
    "id": 35125962,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTI1OTYy",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-14T21:20:35Z",
    "updated_at": "2014-02-14T21:20:35Z",
    "author_association": "MEMBER",
    "body": "I removed the call to `get_ipython` and instead use the comm's `.shell` trait.  \n\nI looked at the execution machinery some more, specifically `run_cell`.  The code seems strongly coupled with `raw_cell` as a code string.  I don't think anything other than `post_execute` is general enough that it would apply to a callback handle (which is what is available via the comm/widget path).  Even the preprocessing logic doesn't apply since it's solely `prefilters`...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/35126196",
    "html_url": "https://github.com/ipython/ipython/pull/5122#issuecomment-35126196",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5122",
    "id": 35126196,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTI2MTk2",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-14T21:24:06Z",
    "updated_at": "2014-02-14T21:24:06Z",
    "author_association": "MEMBER",
    "body": "> I removed the call to get_ipython and instead use the comm's .shell trait.\n\nIncorrectly... Making a couple more changes...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/35126639",
    "html_url": "https://github.com/ipython/ipython/pull/5122#issuecomment-35126639",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5122",
    "id": 35126639,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTI2NjM5",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-14T21:30:06Z",
    "updated_at": "2014-02-14T21:30:06Z",
    "author_association": "MEMBER",
    "body": "Better\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/35132228",
    "html_url": "https://github.com/ipython/ipython/pull/5122#issuecomment-35132228",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5122",
    "id": 35132228,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTMyMjI4",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-14T22:40:09Z",
    "updated_at": "2014-02-14T22:40:09Z",
    "author_association": "MEMBER",
    "body": "preprocessing certainly doesn't make sense, but I think we should add some more callback hooks. Currently we have `post_execute` functions which are run after a cell, and `pre_run_code_hook` which is called before each statement is run. We could have callbacks before and after any or all of:\n1. Code is executed in response to user action - i.e. cells are run or comm messages received\n2. User code is executed by running a non-silent cell\n3. Each statement (technically, each top-level AST node) in user code is run\n\nI think 1 and 2 make sense (both before and after), but I'd only leave [before 3] in for backwards compatibility. Does this sound sensible? If so, I can work on adding those callbacks.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/35164463",
    "html_url": "https://github.com/ipython/ipython/pull/5122#issuecomment-35164463",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5122",
    "id": 35164463,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTY0NDYz",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-15T19:01:16Z",
    "updated_at": "2014-02-15T19:01:16Z",
    "author_association": "MEMBER",
    "body": "That sounds sensible to me.  \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/35165254",
    "html_url": "https://github.com/ipython/ipython/pull/5122#issuecomment-35165254",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5122",
    "id": 35165254,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTY1MjU0",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-15T19:28:04Z",
    "updated_at": "2014-02-15T19:28:04Z",
    "author_association": "MEMBER",
    "body": "Yes, it sounds sensible for me too... it would be nice to have those callbacks.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/35165605",
    "html_url": "https://github.com/ipython/ipython/pull/5122#issuecomment-35165605",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5122",
    "id": 35165605,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTY1NjA1",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-15T19:40:02Z",
    "updated_at": "2014-02-15T19:40:02Z",
    "author_association": "MEMBER",
    "body": "As we discussed yesterday afternoon, I think your proposal makes sense, with the following hooks:\n- pre_execute (pre-transform, pre-everything)\n- post_execute\n\nAnd then allow these to decide whether they should do anything, based on silent. Either pass it as an arg to the callback every time, or make it an arg to the registration method.\n\nI would deprecate the each-statement hook, as it looks like we only have it by accident, and I can't think of a good reason to keep it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/35683261",
    "html_url": "https://github.com/ipython/ipython/pull/5122#issuecomment-35683261",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5122",
    "id": 35683261,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjgzMjYx",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-20T23:39:53Z",
    "updated_at": "2014-02-20T23:39:53Z",
    "author_association": "MEMBER",
    "body": "There's a potential problem with that: existing post_execute callbacks only expect to be called when silent=False. My backcall project can wrap them to ignore the extra parameter, but they will still be running in situations which the author may not have intended.\n\nDo we want to have separate hooks for post_execute, working as it currently does, and a more general one which covers silent and widget execution, in order to preserve backwards compatibility? Or should we pass `silent` and possibly cause some callbacks that ignore it to do the wrong thing?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/38640669",
    "html_url": "https://github.com/ipython/ipython/pull/5122#issuecomment-38640669",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5122",
    "id": 38640669,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjQwNjY5",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-26T01:16:05Z",
    "updated_at": "2014-03-26T01:16:05Z",
    "author_association": "MEMBER",
    "body": "Fixed by #5188\n"
  }
]
