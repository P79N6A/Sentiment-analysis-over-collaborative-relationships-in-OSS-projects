[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/77735842",
    "html_url": "https://github.com/ipython/ipython/pull/7997#issuecomment-77735842",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7997",
    "id": 77735842,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NzM1ODQy",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-08T06:37:15Z",
    "updated_at": "2015-03-08T06:37:15Z",
    "author_association": "MEMBER",
    "body": "That won't work, anchor in markdown cell will scroll behind the header. We tried the approach with a fixed div. See among others #7517.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/77737912",
    "html_url": "https://github.com/ipython/ipython/pull/7997#issuecomment-77737912",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7997",
    "id": 77737912,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NzM3OTEy",
    "user": {
      "login": "rsmith31415",
      "id": 599274,
      "node_id": "MDQ6VXNlcjU5OTI3NA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/599274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rsmith31415",
      "html_url": "https://github.com/rsmith31415",
      "followers_url": "https://api.github.com/users/rsmith31415/followers",
      "following_url": "https://api.github.com/users/rsmith31415/following{/other_user}",
      "gists_url": "https://api.github.com/users/rsmith31415/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rsmith31415/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rsmith31415/subscriptions",
      "organizations_url": "https://api.github.com/users/rsmith31415/orgs",
      "repos_url": "https://api.github.com/users/rsmith31415/repos",
      "events_url": "https://api.github.com/users/rsmith31415/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rsmith31415/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-08T07:58:02Z",
    "updated_at": "2015-03-08T07:58:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Carreau Thank you. I didn't notice this problem before. In the SO question you linked to, there is a [reference](https://css-tricks.com/hash-tag-links-padding/) to CSS tricks with several approaches to solve this issue. I like the idea of using a pseudo-element placed before the fixed header. It looks promising.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/77787931",
    "html_url": "https://github.com/ipython/ipython/pull/7997#issuecomment-77787931",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7997",
    "id": 77787931,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3Nzg3OTMx",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-09T01:31:17Z",
    "updated_at": "2015-03-09T01:31:17Z",
    "author_association": "MEMBER",
    "body": "The problem is that we don't control all the html generated. ids are set by markdown renderer, which would maybe not that tricky to get right. But many people will actually generate html with ids to reference. So it would be nice if it coud work on all cases even those where we don't control html. There might be other issues, but I'm not sure why. Feel free to experiment of course, and keep up informed of the results  ! \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/77793008",
    "html_url": "https://github.com/ipython/ipython/pull/7997#issuecomment-77793008",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7997",
    "id": 77793008,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NzkzMDA4",
    "user": {
      "login": "rsmith31415",
      "id": 599274,
      "node_id": "MDQ6VXNlcjU5OTI3NA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/599274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rsmith31415",
      "html_url": "https://github.com/rsmith31415",
      "followers_url": "https://api.github.com/users/rsmith31415/followers",
      "following_url": "https://api.github.com/users/rsmith31415/following{/other_user}",
      "gists_url": "https://api.github.com/users/rsmith31415/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rsmith31415/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rsmith31415/subscriptions",
      "organizations_url": "https://api.github.com/users/rsmith31415/orgs",
      "repos_url": "https://api.github.com/users/rsmith31415/repos",
      "events_url": "https://api.github.com/users/rsmith31415/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rsmith31415/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-09T02:51:22Z",
    "updated_at": "2015-03-09T02:51:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Carreau Yes, you're absolutely right. That was a bad idea. However, using a bit of Javascript, the markdown issue will be fixed. \n\nI will share the changes in an hour or so.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/77797832",
    "html_url": "https://github.com/ipython/ipython/pull/7997#issuecomment-77797832",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7997",
    "id": 77797832,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3Nzk3ODMy",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-09T04:11:59Z",
    "updated_at": "2015-03-09T04:11:59Z",
    "author_association": "MEMBER",
    "body": "I don't think anyone's happy with how we are accomplishing the scrolling. The fixed header is cleaner in many ways, but introduced significant problems we didn't know how to fix without going back to a scrolling div. The scrolling div works more reliably, but in an uglier, slower way. It's definitely helpful to have people working on this stuff, thanks @rsmith31415.\n\nYou'll need to make sure that:\n- clicking markdown header links scrolls properly\n- tooltips are located correctly, and scroll properly\n- interacting with the menu or toolbar doesn't result in any scrolling or focus problems in the notebook div (at least not regressions from master)\n\nThose are the issues that I can recall the previous fixed header causing.\n\nIt's also probably not a good idea for the scrolling to be handled differently on the notebook page and the others, but I'm not quite certain about that.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/77806251",
    "html_url": "https://github.com/ipython/ipython/pull/7997#issuecomment-77806251",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7997",
    "id": 77806251,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3ODA2MjUx",
    "user": {
      "login": "rsmith31415",
      "id": 599274,
      "node_id": "MDQ6VXNlcjU5OTI3NA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/599274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rsmith31415",
      "html_url": "https://github.com/rsmith31415",
      "followers_url": "https://api.github.com/users/rsmith31415/followers",
      "following_url": "https://api.github.com/users/rsmith31415/following{/other_user}",
      "gists_url": "https://api.github.com/users/rsmith31415/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rsmith31415/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rsmith31415/subscriptions",
      "organizations_url": "https://api.github.com/users/rsmith31415/orgs",
      "repos_url": "https://api.github.com/users/rsmith31415/repos",
      "events_url": "https://api.github.com/users/rsmith31415/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rsmith31415/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-09T06:30:17Z",
    "updated_at": "2015-03-09T06:30:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "The new commit fixes the issue with anchor links:\n\n![output](https://cloud.githubusercontent.com/assets/599274/6550541/e1765f0c-c5ef-11e4-8fc7-768d636a2b57.gif)\n\nAs you can see, it works in titles that generate a link and a heading tag. It also works in local links created manually such as `[This](#goto)` when you add a link `<a id=\"goto\">Go here</a>` somewhere else. Finally, it also responds correctly to pages that contain a hashtag in the URL, although I think that part needs more attention.\n\nThe code was taken from a [fiddle](http://jsfiddle.net/ianclark001/aShQL/) and after some digging, I found that it was written by Ian Clark in [this](http://stackoverflow.com/a/13067009/460147) SO question.\n\n@minrk I will review the issues you described. I quickly tested the toolbar and didn't see anything wrong. However, it would be better to change or remove the `#`'s in the menus. For example,  the option \"Insert Cell Above\" has the link `<a href=\"#\">Insert Cell Above</a>`. Maybe this should be a button or `javascript:void(0)`, although I don't remember what is considered better practice nowadays. In any case, I don't think there are issues due to a single hashtag in the `href` property.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/77808643",
    "html_url": "https://github.com/ipython/ipython/pull/7997#issuecomment-77808643",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7997",
    "id": 77808643,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3ODA4NjQz",
    "user": {
      "login": "rsmith31415",
      "id": 599274,
      "node_id": "MDQ6VXNlcjU5OTI3NA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/599274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rsmith31415",
      "html_url": "https://github.com/rsmith31415",
      "followers_url": "https://api.github.com/users/rsmith31415/followers",
      "following_url": "https://api.github.com/users/rsmith31415/following{/other_user}",
      "gists_url": "https://api.github.com/users/rsmith31415/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rsmith31415/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rsmith31415/subscriptions",
      "organizations_url": "https://api.github.com/users/rsmith31415/orgs",
      "repos_url": "https://api.github.com/users/rsmith31415/repos",
      "events_url": "https://api.github.com/users/rsmith31415/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rsmith31415/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-09T07:05:02Z",
    "updated_at": "2015-03-09T07:05:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "@minrk \n\n> tooltips are located correctly, and scroll properly\n\nAre there specific issues about the location and scrolling of tooltips? I can't see anything wrong right now.  The only obvious imperfection would be that the tooltip overlaps the fixed header when scrolling. However, this is easily solved changing the z-index values. `#header` currently has `z-index: 100` and `.ipython_tooltip` has z-index: 1000.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/77966987",
    "html_url": "https://github.com/ipython/ipython/pull/7997#issuecomment-77966987",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7997",
    "id": 77966987,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3OTY2OTg3",
    "user": {
      "login": "rsmith31415",
      "id": 599274,
      "node_id": "MDQ6VXNlcjU5OTI3NA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/599274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rsmith31415",
      "html_url": "https://github.com/rsmith31415",
      "followers_url": "https://api.github.com/users/rsmith31415/followers",
      "following_url": "https://api.github.com/users/rsmith31415/following{/other_user}",
      "gists_url": "https://api.github.com/users/rsmith31415/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rsmith31415/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rsmith31415/subscriptions",
      "organizations_url": "https://api.github.com/users/rsmith31415/orgs",
      "repos_url": "https://api.github.com/users/rsmith31415/repos",
      "events_url": "https://api.github.com/users/rsmith31415/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rsmith31415/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-09T23:30:38Z",
    "updated_at": "2015-03-09T23:30:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "Last commit includes a change in the z-index to avoid tooltips overlapping the header and a media query to keep the same behavior as before (without a big top margin in the `#site` element) when printing.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/78217459",
    "html_url": "https://github.com/ipython/ipython/pull/7997#issuecomment-78217459",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7997",
    "id": 78217459,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MjE3NDU5",
    "user": {
      "login": "rsmith31415",
      "id": 599274,
      "node_id": "MDQ6VXNlcjU5OTI3NA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/599274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rsmith31415",
      "html_url": "https://github.com/rsmith31415",
      "followers_url": "https://api.github.com/users/rsmith31415/followers",
      "following_url": "https://api.github.com/users/rsmith31415/following{/other_user}",
      "gists_url": "https://api.github.com/users/rsmith31415/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rsmith31415/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rsmith31415/subscriptions",
      "organizations_url": "https://api.github.com/users/rsmith31415/orgs",
      "repos_url": "https://api.github.com/users/rsmith31415/repos",
      "events_url": "https://api.github.com/users/rsmith31415/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rsmith31415/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-11T07:39:30Z",
    "updated_at": "2015-03-11T07:39:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "Changed `position: absolute;` to `position: fixed;` in the User Interface Tour to keep the tooltips over the header even after scrolling.\n\nI reported in #8018 a couple of issues that are still occurring here.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/78426512",
    "html_url": "https://github.com/ipython/ipython/pull/7997#issuecomment-78426512",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7997",
    "id": 78426512,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NDI2NTEy",
    "user": {
      "login": "rsmith31415",
      "id": 599274,
      "node_id": "MDQ6VXNlcjU5OTI3NA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/599274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rsmith31415",
      "html_url": "https://github.com/rsmith31415",
      "followers_url": "https://api.github.com/users/rsmith31415/followers",
      "following_url": "https://api.github.com/users/rsmith31415/following{/other_user}",
      "gists_url": "https://api.github.com/users/rsmith31415/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rsmith31415/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rsmith31415/subscriptions",
      "organizations_url": "https://api.github.com/users/rsmith31415/orgs",
      "repos_url": "https://api.github.com/users/rsmith31415/repos",
      "events_url": "https://api.github.com/users/rsmith31415/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rsmith31415/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-12T05:34:42Z",
    "updated_at": "2015-03-12T05:34:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "@minrk @Carreau \n\nI found a very annoying edge case in Firefox. If you write a URL with a fragment identifier, the page scrolls to the correct location. However, let's say you want to reload again the same page with the same fragment identifier by clicking on the address bar and pressing Enter. Then that event is not detected and the header hides the anchor. Every other action works correctly:\n1. If instead of using Enter, you click on the refresh button, then the page reloads and the scrolling works okay. \n2. Changing the fragment identifier and pressing Enter or clicking on refresh works as expected (because the event `onhashchange` is detected).\n\nI read the events available in mozilla's documentation and I couldn't find out one that is triggered after visiting the same URL with the same fragment identifier. Chrome doesn't have this problem because it always reloads the page.\n\nIdeas?\n\nBy the way, I haven't seen other issues with tooltips, toolbar or menus other than the very small fixes I have made.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/78426735",
    "html_url": "https://github.com/ipython/ipython/pull/7997#issuecomment-78426735",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7997",
    "id": 78426735,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NDI2NzM1",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-12T05:37:59Z",
    "updated_at": "2015-03-12T05:37:59Z",
    "author_association": "MEMBER",
    "body": "that might be considered a bug in firefox. We are still in meeting until this friday, and after wa can try to re-take more time to review things in details. Sorry for the lack of feedback theses days.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/78738883",
    "html_url": "https://github.com/ipython/ipython/pull/7997#issuecomment-78738883",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7997",
    "id": 78738883,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NzM4ODgz",
    "user": {
      "login": "rsmith31415",
      "id": 599274,
      "node_id": "MDQ6VXNlcjU5OTI3NA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/599274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rsmith31415",
      "html_url": "https://github.com/rsmith31415",
      "followers_url": "https://api.github.com/users/rsmith31415/followers",
      "following_url": "https://api.github.com/users/rsmith31415/following{/other_user}",
      "gists_url": "https://api.github.com/users/rsmith31415/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rsmith31415/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rsmith31415/subscriptions",
      "organizations_url": "https://api.github.com/users/rsmith31415/orgs",
      "repos_url": "https://api.github.com/users/rsmith31415/repos",
      "events_url": "https://api.github.com/users/rsmith31415/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rsmith31415/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-13T01:40:02Z",
    "updated_at": "2015-03-13T01:40:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "It could be considered a bug, but I was expecting an event similar to `onhashchange` that could help in this case.\n\nI noticed a couple of hours ago that I need to change the `href=\"#\"` properties of many anchors and probably fix the `/edit` page because there is a calculation similar to the one I changed in `/notebook` to determine the height of the `#site` element.  Hopefully, I will get it done tomorrow.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/79547705",
    "html_url": "https://github.com/ipython/ipython/pull/7997#issuecomment-79547705",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7997",
    "id": 79547705,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5NTQ3NzA1",
    "user": {
      "login": "rsmith31415",
      "id": 599274,
      "node_id": "MDQ6VXNlcjU5OTI3NA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/599274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rsmith31415",
      "html_url": "https://github.com/rsmith31415",
      "followers_url": "https://api.github.com/users/rsmith31415/followers",
      "following_url": "https://api.github.com/users/rsmith31415/following{/other_user}",
      "gists_url": "https://api.github.com/users/rsmith31415/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rsmith31415/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rsmith31415/subscriptions",
      "organizations_url": "https://api.github.com/users/rsmith31415/orgs",
      "repos_url": "https://api.github.com/users/rsmith31415/repos",
      "events_url": "https://api.github.com/users/rsmith31415/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rsmith31415/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-14T00:04:59Z",
    "updated_at": "2015-03-16T20:43:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "Last commit fixes several issues:\n1. I changed `href=\"#\"` to `javascript:void(0)` to avoid scrolling to the top now that there is a fixed header. As a personal preference, I think it is better to use buttons but that is going to break a lot of things, so I decided to keep the anchor tags. Another option would be to remove the `href` property but the current CSS reset doesn't have the necessary rules to allow this change easily.\n2. Since I was targeting all the links with a fragment identifier to fix the markdown issue, the tabs \"Files\", \"Running\" and \"Clusters\" in `/tree` didn't work at all. So I simply modified  `scroll_if_anchor`  a bit to work only on notebook pages (using the pathname `/notebooks/`).\n3. The fixed header also broke the `/edit` page, which relied on a calculation to determine the height of several elements. I removed the Javascript and added some CSS rules to produce the same effect. This is how it looks now:\n\n![screenshot from 2015-03-13 17 59 25](https://cloud.githubusercontent.com/assets/599274/6649206/c364b590-c9aa-11e4-93fe-d34e19820eb6.png)\n\nThere are a couple of annoyances:\n\nI wasn't able to change the property `href=\"#\"` in the Javascript that generates checkpoints in the menu \"Revert to Checkpoint\". I didn't find the corresponding file.\n\nThere is an interesting behavior with the Bootstrap modals in Firefox. They usually remove the scrollbars:\n\n![screenshot from 2015-03-13 17 48 12](https://cloud.githubusercontent.com/assets/599274/6649146/4325dcc0-c9a9-11e4-9e3b-5ce66c4839e8.png)\n\nand this moves the content (`#site` and `#header`) 15 pixels or so to the right. This in itself is not a big disruption, but when you have a fixed header, it leads to some unwanted effects. For example, when I closed the modal, the header may disappear and reappear. This only happens in Firefox and is a bit random. An easy solution is to override the `modal-open` class that Bootstrap adds to the body element. The side effect is that now the scrollbars are not removed when the modal is activated:\n\n![screenshot from 2015-03-13 17 56 54](https://cloud.githubusercontent.com/assets/599274/6649188/6a7e56f2-c9aa-11e4-958f-ba463134a981.png)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/81466772",
    "html_url": "https://github.com/ipython/ipython/pull/7997#issuecomment-81466772",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7997",
    "id": 81466772,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxNDY2Nzcy",
    "user": {
      "login": "rsmith31415",
      "id": 599274,
      "node_id": "MDQ6VXNlcjU5OTI3NA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/599274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rsmith31415",
      "html_url": "https://github.com/rsmith31415",
      "followers_url": "https://api.github.com/users/rsmith31415/followers",
      "following_url": "https://api.github.com/users/rsmith31415/following{/other_user}",
      "gists_url": "https://api.github.com/users/rsmith31415/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rsmith31415/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rsmith31415/subscriptions",
      "organizations_url": "https://api.github.com/users/rsmith31415/orgs",
      "repos_url": "https://api.github.com/users/rsmith31415/repos",
      "events_url": "https://api.github.com/users/rsmith31415/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rsmith31415/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-16T07:36:54Z",
    "updated_at": "2015-03-16T07:36:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Last commit fixes an issue I found in the pager.\n\nWhen you scroll down (or up) in the pager until you reach the bottom (or the top), the \"correct\" behavior is to propagate the scrolling event to the parent element. However, this is rarely what the user intended. This is how it looks:\n\n![output](https://cloud.githubusercontent.com/assets/599274/6661865/fece2e16-cb78-11e4-8ba6-f94ac0387686.gif)\n\nCurrently, Ipython avoids this issue in an interesting way. Every time the pager is activated, the height of the `#site` element is recalculated in order to add an empty div at the bottom (that lets the user scroll down to the last cell.) As a consequence of this, the `#site` element needs to have scrollbars of its own and that, for some reason, makes the scrolling of the pager and the `#site` independent of each other:\n\n![output2](https://cloud.githubusercontent.com/assets/599274/6661946/6d0e76b4-cb7a-11e4-9879-a25cf6b6a6ef.gif)\n\nWell, now that I added a fixed header, the scrollbar of the `#site` element is not required and we get the \"correct\" behavior again. The last commit adds a custom scrolling to obtain the previous behavior:\n\n![output3](https://cloud.githubusercontent.com/assets/599274/6662079/92e311c2-cb7c-11e4-94fe-3c00b3f4af80.gif)\n\nNotice that we keep the scrollbar from the body element, not from `#site`.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/87455128",
    "html_url": "https://github.com/ipython/ipython/pull/7997#issuecomment-87455128",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7997",
    "id": 87455128,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NDU1MTI4",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-29T18:53:15Z",
    "updated_at": "2015-03-29T18:53:15Z",
    "author_association": "MEMBER",
    "body": "This stuff is super difficult to get right - it is almost certain to introduce new problems while trying to fix others. We will soon be reconsidering our entire page layout using phosphor, which I think will help a lot of these questions as it uses a much more powerful non-css based layout approach. I think we should defer these things until then. Can we fix the image overspill issues without changing the overall page layout?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/87466782",
    "html_url": "https://github.com/ipython/ipython/pull/7997#issuecomment-87466782",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7997",
    "id": 87466782,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NDY2Nzgy",
    "user": {
      "login": "rsmith31415",
      "id": 599274,
      "node_id": "MDQ6VXNlcjU5OTI3NA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/599274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rsmith31415",
      "html_url": "https://github.com/rsmith31415",
      "followers_url": "https://api.github.com/users/rsmith31415/followers",
      "following_url": "https://api.github.com/users/rsmith31415/following{/other_user}",
      "gists_url": "https://api.github.com/users/rsmith31415/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rsmith31415/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rsmith31415/subscriptions",
      "organizations_url": "https://api.github.com/users/rsmith31415/orgs",
      "repos_url": "https://api.github.com/users/rsmith31415/repos",
      "events_url": "https://api.github.com/users/rsmith31415/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rsmith31415/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-29T20:05:49Z",
    "updated_at": "2015-03-29T20:05:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ellisonbg \n\n> Can we fix the image overspill issues without changing the overall page layout?\n\nI think that issue is almost solved in #8062.\n\nThe idea of using a fixed header now is more about replacing the \"scrolling div\" solution that is much more complicated. Sorry, I forgot to update the original post to reflect that.\n\nA fixed header leads to a simpler UI and is likely to generate fewer issues than a javascript-based solution. \n\nI'm not sure what is the time frame you have in mind for rewriting the whole UI and refactor the javascript, but I think this change is worthwhile to clean-up a bit the front-end code in the meanwhile.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/87467982",
    "html_url": "https://github.com/ipython/ipython/pull/7997#issuecomment-87467982",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7997",
    "id": 87467982,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NDY3OTgy",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-29T20:15:00Z",
    "updated_at": "2015-03-29T20:15:00Z",
    "author_association": "MEMBER",
    "body": "I think a fixed header is definitely what we want. It's just that we introduced a lot of problems that we weren't able to figure out the last time we tried it, so we fell back to the scrolling div that we had used before. I'll try to go through the various problems fixed header caused before, and hopefully this can fix them.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/87469494",
    "html_url": "https://github.com/ipython/ipython/pull/7997#issuecomment-87469494",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7997",
    "id": 87469494,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NDY5NDk0",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-29T20:27:35Z",
    "updated_at": "2015-03-29T20:27:35Z",
    "author_association": "MEMBER",
    "body": "@jasongrout et al. area already working on porting the notebook UI objects\nto phosphor. The initial parts of these changes are going to start hitting\nmaster immediately after the 4.0 release/big split. I think we will benefit\ngreatly from using phosphor for layout, even on the main notebook page (not\nusing the whole dock/panel system). The reason is that even the existing\nfixed header/menu/toolbar + scrollable notebook area + split pager is\ncomplex enough that a simple fixed header becomes really difficult to do\nwith plain CSS. Doing this type of layout with phosphor is trivial and\nsolve all of the performance problems by confining page renders to only\ndivs that need it. Confining scrolling to the notebook div is also\nnecessary to be able to embed that div in other pages (as we plan on doing\neventually).\n\nIn general, I agree that fixed headers are preferred for basic web pages.\nBut for complex layouts, it is too simplistic and CSS begins to show its\nlimitations.\n\nOn Sun, Mar 29, 2015 at 1:15 PM, Min RK notifications@github.com wrote:\n\n> I think a fixed header is definitely what we want. It's just that we\n> introduced a lot of problems that we weren't able to figure out the last\n> time we tried it, so we fell back to the scrolling div that we had used\n> before. I'll try to go through the various problems fixed header caused\n> before, and hopefully this can fix them.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/pull/7997#issuecomment-87467982.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\n@ellisonbg on Twitter and GitHub\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/87481191",
    "html_url": "https://github.com/ipython/ipython/pull/7997#issuecomment-87481191",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7997",
    "id": 87481191,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NDgxMTkx",
    "user": {
      "login": "rsmith31415",
      "id": 599274,
      "node_id": "MDQ6VXNlcjU5OTI3NA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/599274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rsmith31415",
      "html_url": "https://github.com/rsmith31415",
      "followers_url": "https://api.github.com/users/rsmith31415/followers",
      "following_url": "https://api.github.com/users/rsmith31415/following{/other_user}",
      "gists_url": "https://api.github.com/users/rsmith31415/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rsmith31415/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rsmith31415/subscriptions",
      "organizations_url": "https://api.github.com/users/rsmith31415/orgs",
      "repos_url": "https://api.github.com/users/rsmith31415/repos",
      "events_url": "https://api.github.com/users/rsmith31415/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rsmith31415/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-29T21:13:46Z",
    "updated_at": "2015-03-29T21:13:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ellisonbg I don't know how phosphor works (actually, due to its lack of documentation, I don't know anything about it), but if the main idea is that CSS is not flexible enough to create something like the current IPython notebook, that's a very bad reason to rewrite the whole notebook. The current layout has a very nice structure that is extremely simple to do in pure CSS. To be honest, I don't think there are reasonable layouts that wouldn't be easy to do in CSS and the currrent layout is not complex at all. \n\nThe problem is that, as with any project that grows, there will be features that interfere with each other, requirements that don't fit very well into the current structure and hacks here and there that complicate things in the long run. The trick is to keep things simple and remove things that are not necessary. CSS is not a problem to be solved.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/87485014",
    "html_url": "https://github.com/ipython/ipython/pull/7997#issuecomment-87485014",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7997",
    "id": 87485014,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NDg1MDE0",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-29T21:39:18Z",
    "updated_at": "2015-03-29T21:39:18Z",
    "author_association": "MEMBER",
    "body": "Hi, yeah phosphor is a very new project and it would be very difficult to tel what it was about by a look at its GitHub repo. The API docs for phosphor are _fantastic_, but you have to checkout the repo, install node and some deps and build the docs using gulp and typedoc. If you are feeling adventurous, I encourage you to try that and also run the dockarea example to see where we are heading...\n\nphosphor is a few things:\n- A high performance paneled/tabbed/docked layout system. There is truly nothing else out there like this right now.\n- A react.js like component system that designed for content inside that layout system. It would be simple enough to also use react.js components inside the phosphor layout logic as well. I will let @sccolbert (phosphors creator) describe the differences between phosphor.js and react.js from the component perspective.\n\nWhy would IPython go this route?\n- We want to be able to allow users to have _much_ more complex layouts, with multiple tabbed notebooks, side-by-side with a terminal and tabbed text editors.\n- We want the different notebook components to be embeddable into other (3rd party) web pages that people are building.\n- We have been building the IPython interactive widgets with separate technology from the rest of our UI. We want these widgets to be \"components\" just like everything else - this will enable folks to put widgets into non-notebook layouts as well.\n- We plan on building other components (interactive debugger, etc.) that will plug into this architecture.\n\nThere are other, independent reasons we are doing a major rewrite of the frontend code:\n- We are building real time collaboration into the notebook/text editor. This requires a much better separation of our Model and View objects (they are currently one object).\n- Our JavaScript classes were written very early on and are very strongly coupled. We need to move to a more scalable approach from a software engineering perspective. For that we will be using TypeScript.\n- We want different parts of the notebook to be more easily customizable by 3rd parties and users. A user might want to plug in their own CodeCell object for example.\n- We have serious performance problems with the notebook that we need to fix.\n\nIn case you are not in the mood to checkout and build phosphor, here is a screenshot of the dockarea example:\n\n![screen shot 2015-03-29 at 2 37 47 pm](https://cloud.githubusercontent.com/assets/27600/6887869/4349f626-d621-11e4-8c71-1b4076229c39.png)\n\nAll panel areas can be resized and subdivided, all tabs can be reordered or dragged elsewhere. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/87491695",
    "html_url": "https://github.com/ipython/ipython/pull/7997#issuecomment-87491695",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7997",
    "id": 87491695,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NDkxNjk1",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-29T22:45:11Z",
    "updated_at": "2015-03-29T22:45:11Z",
    "author_association": "MEMBER",
    "body": "> To be honest, I don't think there are reasonable layouts that wouldn't be easy to do in CSS\n\nFrom our experience, that is very much not the case. Or at least, you can do things in CSS, but when you do one thing, it breaks something else, and you fix that, and soon you're playing whack-a-mole with all kinds of UI interaction details that it's almost impossible to write tests for.\n\nI don't think any of us consider ourselves CSS gurus, and we're certainly picking up quite a few things we didn't know before (`calc` came to our attention a couple of weeks back), but we've really reached one of those \"there has to be a better way\" points. That's why we're looking so keenly at Phosphor. We've spent some time talking to @sccolbert - he really knows about this stuff, and Phosphor is also being used internally at his company, so even though it's a pretty new project, we feel fairly confident that it won't be neglected.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/87492022",
    "html_url": "https://github.com/ipython/ipython/pull/7997#issuecomment-87492022",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7997",
    "id": 87492022,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NDkyMDIy",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-29T22:52:30Z",
    "updated_at": "2015-03-29T22:52:30Z",
    "author_association": "MEMBER",
    "body": "Just discovered calc today myself - very cool - feels dangerous :)\n\nOn Sun, Mar 29, 2015 at 3:45 PM, Thomas Kluyver notifications@github.com\nwrote:\n\n> To be honest, I don't think there are reasonable layouts that wouldn't be\n> easy to do in CSS\n> \n> From our experience, that is very much not the case. Or at least, you can\n> do things in CSS, but when you do one thing, it breaks something else, and\n> you fix that, and soon you're playing whack-a-mole with all kinds of UI\n> interaction details that it's almost impossible to write tests for.\n> \n> I don't think any of us consider ourselves CSS gurus, and we're certainly\n> picking up quite a few things we didn't know before (calc came to our\n> attention a couple of weeks back), but we've really reached one of those\n> \"there has to be a better way\" points. That's why we're looking so keenly\n> at Phosphor. We've spent some time talking to @sccolbert\n> https://github.com/sccolbert - he really knows about this stuff, and\n> Phosphor is also being used internally at his company, so even though it's\n> a pretty new project, we feel fairly confident that it won't be neglected.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/pull/7997#issuecomment-87491695.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\n@ellisonbg on Twitter and GitHub\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/87528424",
    "html_url": "https://github.com/ipython/ipython/pull/7997#issuecomment-87528424",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7997",
    "id": 87528424,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NTI4NDI0",
    "user": {
      "login": "rsmith31415",
      "id": 599274,
      "node_id": "MDQ6VXNlcjU5OTI3NA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/599274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rsmith31415",
      "html_url": "https://github.com/rsmith31415",
      "followers_url": "https://api.github.com/users/rsmith31415/followers",
      "following_url": "https://api.github.com/users/rsmith31415/following{/other_user}",
      "gists_url": "https://api.github.com/users/rsmith31415/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rsmith31415/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rsmith31415/subscriptions",
      "organizations_url": "https://api.github.com/users/rsmith31415/orgs",
      "repos_url": "https://api.github.com/users/rsmith31415/repos",
      "events_url": "https://api.github.com/users/rsmith31415/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rsmith31415/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-30T03:18:53Z",
    "updated_at": "2015-03-30T03:18:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ellisonbg Thank you for your very nice exposition of phosphor. I had searched the project two or three times before and trying to watch one of your talks online, but I didn't find anything. By the way, you may want to paste your explanation in a wiki document, because I think most people interested would be grateful to find that introduction easily available.\n\nAfter building the examples, I think I understand what is going on. Basically, it is a bit of help to build the layout using basic blocks such as tabs and panels as abstractions on top of TypeScript. However, everything you can do in phosphor is possible in CSS and Javascript (I just wanted to reiterate the obvious because when you said that there is nothing like this right now, I thought it was something entirely different.)\n\nIf you want to reproduce the current functionality of the notebook in a phosphor tab, the performance is going to be about the same because the problem is not the layout but the Javascript code. The abstractions would help a bit to organize better the code, but there is nothing that you can do using phosphor that is impossible to do in vanilla Javascript and CSS. Now, a tabbed interface for several notebooks and a terminal in another tab is pushing too much the possibilities using the current code base. I know that is the reason why refactoring is badly needed, but refactoring is needed right now with or without phosphor. \n\nI agree with the fact that a separation of Model and View (and Controller?) would be nice to have. That's something backbone, ember.js, angular.js, react.js, etc are able to provide.\n\n> We have serious performance problems with the notebook that we need to fix.\n\nI believe this is the most important thing of the list and that should be the main focus. The issue here is that there are many good ideas, but TypeScript or phosphor are not going to solve the performance issues at all. I would be much more interested in building a single, fast, usable notebook because that's what is needed right now. A layout full of notebooks is an extra feature that would be nice to have, but I don't think it is the main purpose of a scientific notebook and yet, there is too much emphasis on that right now. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/87529841",
    "html_url": "https://github.com/ipython/ipython/pull/7997#issuecomment-87529841",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7997",
    "id": 87529841,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NTI5ODQx",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-30T03:31:49Z",
    "updated_at": "2015-03-30T03:31:49Z",
    "author_association": "MEMBER",
    "body": "@sccolbert can you clarify the reasons why the phosphor layout stuff can't\nbe done in CSS? (I know you told us multiple times, but I don't keep that\nstuff in my head :)\n\nOn Sun, Mar 29, 2015 at 8:19 PM, rsmith31415 notifications@github.com\nwrote:\n\n> @ellisonbg https://github.com/ellisonbg Thank you for your very nice\n> exposition of phosphor. I had searched the project two or three times\n> before and trying to watch one of your talks online, but I didn't find\n> anything. By the way, you may want to paste your explanation in a wiki\n> document, because I think most people interested would be grateful to find\n> that introduction easily available.\n> \n> After building the examples, I think I understand what is going on.\n> Basically, it is a bit of help to build the layout using basic blocks such\n> as tabs and panels as abstractions on top of TypeScript. However,\n> everything you can do in phosphor is possible in CSS and Javascript (I just\n> wanted to reiterate the obvious because when you said that there is nothing\n> like this right now, I thought it was something entirely different.)\n> \n> If you want to reproduce the current functionality of the notebook in a\n> phosphor tab, the performance is going to be about the same because the\n> problem is not the layout but the Javascript code. The abstractions would\n> help a bit to organize better the code, but there is nothing that you can\n> do using phosphor that is impossible to do in vanilla Javascript and CSS.\n> Now, a tabbed interface for several notebooks and a terminal in another tab\n> is pushing too much the possibilities using the current code base. I know\n> that is the reason why refactoring is badly needed, but refactoring is\n> needed right now with or without phosphor.\n> \n> I agree with the fact that a separation of Model and View (and\n> Controller?) would be nice to have. That's something backbone, ember.js,\n> angular.js, react.js, etc are able to provide.\n> \n> We have serious performance problems with the notebook that we need to fix.\n> \n> I believe this is the most important thing of the list and that should be\n> the main focus. The issue here is that there are many good ideas, but\n> TypeScript or phosphor are not going to solve the performance issues at\n> all. I would be much more interested in building a single, fast, usable\n> notebook because that's what is needed right now. A layout full of\n> notebooks is an extra feature that would be nice to have, but I don't think\n> it is the main purpose of a scientific notebook and yet, there is too much\n> emphasis on that right now.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/pull/7997#issuecomment-87528424.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\n@ellisonbg on Twitter and GitHub\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/87550522",
    "html_url": "https://github.com/ipython/ipython/pull/7997#issuecomment-87550522",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7997",
    "id": 87550522,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NTUwNTIy",
    "user": {
      "login": "rsmith31415",
      "id": 599274,
      "node_id": "MDQ6VXNlcjU5OTI3NA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/599274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rsmith31415",
      "html_url": "https://github.com/rsmith31415",
      "followers_url": "https://api.github.com/users/rsmith31415/followers",
      "following_url": "https://api.github.com/users/rsmith31415/following{/other_user}",
      "gists_url": "https://api.github.com/users/rsmith31415/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rsmith31415/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rsmith31415/subscriptions",
      "organizations_url": "https://api.github.com/users/rsmith31415/orgs",
      "repos_url": "https://api.github.com/users/rsmith31415/repos",
      "events_url": "https://api.github.com/users/rsmith31415/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rsmith31415/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-30T05:18:10Z",
    "updated_at": "2015-03-30T05:18:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ellisonbg Notice I said \"CSS and Javascript\". Obviously you need Javascript to manage user interaction (e.g. the resizable divs). \n\nYou can see the source code in TypeScript in `phosphor/dist/phosphor.d.ts` that compiles to `phosphor.js`.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/87561750",
    "html_url": "https://github.com/ipython/ipython/pull/7997#issuecomment-87561750",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7997",
    "id": 87561750,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NTYxNzUw",
    "user": {
      "login": "rsmith31415",
      "id": 599274,
      "node_id": "MDQ6VXNlcjU5OTI3NA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/599274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rsmith31415",
      "html_url": "https://github.com/rsmith31415",
      "followers_url": "https://api.github.com/users/rsmith31415/followers",
      "following_url": "https://api.github.com/users/rsmith31415/following{/other_user}",
      "gists_url": "https://api.github.com/users/rsmith31415/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rsmith31415/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rsmith31415/subscriptions",
      "organizations_url": "https://api.github.com/users/rsmith31415/orgs",
      "repos_url": "https://api.github.com/users/rsmith31415/repos",
      "events_url": "https://api.github.com/users/rsmith31415/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rsmith31415/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-30T06:14:38Z",
    "updated_at": "2015-03-30T06:14:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "@takluyver \n\n> From our experience, that is very much not the case. Or at least, you can do things in CSS, but when you do one thing, it breaks something else, and you fix that, and soon you're playing whack-a-mole with all kinds of UI interaction details that it's almost impossible to write tests for.\n\nWell, the problem is that when you mix a bit of Javascript here and there to fix something quickly instead of pursuing a CSS-based solution or restructuring your HTML, then the issue you describe happens (e.g. jquery-ui resizer complicating a simple CSS solution) . That is the reason why Javascript should only be used to solve layout issues in situations in which no other available solution is possible.\n\n> I don't think any of us consider ourselves CSS gurus, and we're certainly picking up quite a few things we didn't know before (calc came to our attention a couple of weeks back), but we've really reached one of those \"there has to be a better way\" points. That's why we're looking so keenly at Phosphor. We've spent some time talking to @sccolbert - he really knows about this stuff, and Phosphor is also being used internally at his company, so even though it's a pretty new project, we feel fairly confident that it won't be neglected.\n\nI understand your frustration, but phosphor is not going to eliminate those annoyances. It is an abstraction to manage tabs and panels. Unfortunately, there is not an easy solution for those issues and the only thing that works is trying to make things simpler. \n\nBy the way, `calc()` is very nice but remember that is still under consideration: `The following features are at-risk and may be dropped during the CR period: ‘calc()’, ‘toggle()’, ‘attr()’.` [Source](http://www.w3.org/TR/css3-values/#calc) and listed as experimental in MDN.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/87666483",
    "html_url": "https://github.com/ipython/ipython/pull/7997#issuecomment-87666483",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7997",
    "id": 87666483,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NjY2NDgz",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-30T12:54:24Z",
    "updated_at": "2015-03-30T12:55:03Z",
    "author_association": "MEMBER",
    "body": "@rsmith31415: you said that all of phosphor stuff could be done with js and css.  Of course that's technically correct: phosphor itself is \"just\" some js and css.  And of course we need to write a performant notebook, and refactoring the javascript to make things more modular and better organized is also an important step in maintainability for the code.\n\nOne of the things phosphor offers is an abstraction where a lot of the low-level css and js where an ide-like tabbed/splitter interface with menus, etc., are written for you (and are very performant and fluid, I might add).   Another thing it offers is a clear, reasoned system to assemble components to make an application (and swap them out with your own custom components whenever you want).\n\nSeparate from the adoption of phosphor, Typescript offers type-checking, which helps us write more maintainable javascript and catches errors more quickly in the process.  Documentation is also another huge boon of using types.  And since Typescript compiles down to very readable javascript, and the syntax is (as a goal) plain javascript with typing information, we still have compatibility with javascript code.\n\nI can see above this discussion is at a pretty high level.  I think it would be much more productive if we discussed specific technical details.  It seems that you have done css and js programming before.  Awesome!  We need, as you say, to write a fast, usable notebook component.  Do you have specific ideas about what to do to accomplish that?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/87759916",
    "html_url": "https://github.com/ipython/ipython/pull/7997#issuecomment-87759916",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7997",
    "id": 87759916,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NzU5OTE2",
    "user": {
      "login": "rsmith31415",
      "id": 599274,
      "node_id": "MDQ6VXNlcjU5OTI3NA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/599274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rsmith31415",
      "html_url": "https://github.com/rsmith31415",
      "followers_url": "https://api.github.com/users/rsmith31415/followers",
      "following_url": "https://api.github.com/users/rsmith31415/following{/other_user}",
      "gists_url": "https://api.github.com/users/rsmith31415/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rsmith31415/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rsmith31415/subscriptions",
      "organizations_url": "https://api.github.com/users/rsmith31415/orgs",
      "repos_url": "https://api.github.com/users/rsmith31415/repos",
      "events_url": "https://api.github.com/users/rsmith31415/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rsmith31415/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-30T17:24:15Z",
    "updated_at": "2015-03-30T17:24:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jasongrout Exactly. Actually, I emphasized that point (that phosphor is just CSS and Javascript) because @ellisonbg was describing it as something completely different, as a different technology and a new architecture, but that's not really correct. \n\nThe performance of phosphor is okay (not bad, not surprisingly good), The main issue with that abstraction is that you don't need it. For example, Chris Coyier built [CodePen](http://codepen.io/hone/pen/azMYQw) a couple of years ago and the site contains many of the elements that you want from phosphor (resizable divs, embeddable in third-party sites, interface with menu). Did he use phosphor? Of course not. That type of functionality doesn't need a big abstraction layer.\n\nI'm more interested in the idea of TypeScript. I have heard good things about it and that might be a welcomed change. Type-checking is nice but most errors are not due to type-checking and I don't want people to think that they can stop worrying about writing tests. In any case, I'm open to the idea.\n\n> We need, as you say, to write a fast, usable notebook component. Do you have specific ideas about what to do to accomplish that?\n\nI would like to see a MVC separation of concerns. I think there was a discussion about that topic before but was discarded in favor of phosphor+(react.js, I guess.) Changing to a MVC pattern shouldn't be too drastic. However, the tricky issue here is improving the Javascript code. A couple of weeks ago, @takluyver asked if anyone had an idea on how to improve the codebase. The problem is that there are so many features that it is hard to go there for people who didn't write it in the first place. I suggest to start identifying chunks of code that are problematic (things that are slow or you're not too happy about)  and submit them for code review on a regular basis. I think that is the most reasonable measure right now. I know it doesn't sound too exciting compared to adopting a new library, but at least we would be addressing the main issues.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/87789714",
    "html_url": "https://github.com/ipython/ipython/pull/7997#issuecomment-87789714",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7997",
    "id": 87789714,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3Nzg5NzE0",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-30T18:52:21Z",
    "updated_at": "2015-03-30T18:55:57Z",
    "author_association": "MEMBER",
    "body": "> @jasongrout Exactly. Actually, I emphasized that point (that phosphor is just CSS and Javascript) because @ellisonbg was describing it as something completely different, as a different technology and a new architecture, but that's not really correct.\n> \n> The performance of phosphor is okay (not bad, not surprisingly good), \n\nPlease be specific here - @sccolbert is pretty keen on getting the best performance possible.  If you have specific suggestions for making things more performant, definitely let Chris know.\n\n> The main issue with that abstraction is that you don't need it. For example, Chris Coyier built CodePen a couple of years ago and the site contains many of the elements that you want from phosphor (resizable divs, embeddable in third-party sites, interface with menu). Did he use phosphor? Of course not. That type of functionality doesn't need a big abstraction layer.\n\nIt depends on what you want to do with it, of course.  Here, we are hoping to make the notebook extensible, so different people can plug in their own implementations of various components.  And make the codebase maintainable.  I have no idea about CodePen; I haven't looked at their code.  We'd of course love to hear what specific lessons you can bring from your experience with that codebase.\n\n> I'm more interested in the idea of TypeScript. I have heard good things about it and that might be a welcomed change. Type-checking is nice but most errors are not due to type-checking and I don't want people to think that they can stop worrying about writing tests. In any case, I'm open to the idea.\n\nMany errors can be caught with type-checking, but possibly the bigger thing we get from it is very clear automatically-generated documentation about the javascript API for the notebook application.  I don't think anyone is thinking that we can stop writing tests.\n\n> We need, as you say, to write a fast, usable notebook component. Do you have specific ideas about what to do to accomplish that?\n> I would like to see a MVC separation of concerns. I think there was a discussion about that topic before but was discarded in favor of phosphor+(react.js, I guess.) Changing to a MVC pattern shouldn't be too drastic. However, the tricky issue here is improving the Javascript code. A couple of weeks ago, @takluyver asked if anyone had an idea on how to improve the codebase. The problem is that there are so many features that it is hard to go there for people who didn't write it in the first place. I suggest to start identifying chunks of code that are problematic (things that are slow or you're not too happy about) and submit them for code review on a regular basis. I think that is the most reasonable measure right now. I know it doesn't sound too exciting compared to adopting a new library, but at least we would be addressing the main issues.\n\nGreat!  My plan is to work on componentizing the notebook and making those components work in the phosphor plugin architecture.  I think the most productive way to move forward at this point is to have actual code discussions (concrete discussions, not just general discussions about architecture).  For example, Kester Tong wrote an initial toy demo in react.js to experiment with it and let other people experiment with it.  We'd absolutely love it if you took parts of the notebook and addressed some of the concerns you bring up above and \"submitted it for code review on a regular basis\" too!  The more hands helping in the work, the better.\n\nIn a few weeks, I'll be working on this a lot (not a lot until then, though).  If you'd like to work together to identify pieces of the code that can be refactored and made more modular, that would be great.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/87804604",
    "html_url": "https://github.com/ipython/ipython/pull/7997#issuecomment-87804604",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7997",
    "id": 87804604,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3ODA0NjA0",
    "user": {
      "login": "rsmith31415",
      "id": 599274,
      "node_id": "MDQ6VXNlcjU5OTI3NA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/599274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rsmith31415",
      "html_url": "https://github.com/rsmith31415",
      "followers_url": "https://api.github.com/users/rsmith31415/followers",
      "following_url": "https://api.github.com/users/rsmith31415/following{/other_user}",
      "gists_url": "https://api.github.com/users/rsmith31415/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rsmith31415/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rsmith31415/subscriptions",
      "organizations_url": "https://api.github.com/users/rsmith31415/orgs",
      "repos_url": "https://api.github.com/users/rsmith31415/repos",
      "events_url": "https://api.github.com/users/rsmith31415/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rsmith31415/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-30T19:47:15Z",
    "updated_at": "2015-03-30T20:01:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Please be specific here - @sccolbert is pretty keen on getting the best performance possible. If you have specific suggestions for making things more performant, definitely let Chris know.\n\nI didn't mean to say it is slow or anything but since @ellisonbg said it was high performance layout, I was expecting something remarkable in terms of speed. I'm not sure if you should focus on the speed of a layout, though. Never heard of that concern before. That's never going to be your bottleneck.\n\n> It depends on what you want to do with it, of course. Here, we are hoping to make the notebook extensible, so different people can plug in their own implementations of various components. And make the codebase maintainable. I have no idea about CodePen; I haven't looked at their code. We'd of course love to hear what specific lessons you can bring from your experience with that codebase.\n\nI understand, but in my view, you are putting the cart before the horse. As I said, adding more notebooks in a tabbed layout is a feature. It shouldn't change the main goals of the project to the point that a complete rewrite is needed. The question when you adopt an abstraction is always what you get in return. In this case, you're getting very little. Everything can be coded easily and with more flexibility without requiring that abstraction. Let me be clear, the abstraction is not bad in itself. However, it is not needed for the notebook. At the very least, this feature is not urgent. \n\nBy the way, I'm not affiliated to CodePen in any way. It is only an example to show that you don't need phosphor to create a tabbed interface. Building the interface should be the least of your worries.\n\n> I don't think anyone is thinking that we can stop writing tests.\n\nGreat. That is one of the misconceptions that people may have. They don't put so much effort in writing tests because they have type-checking.\n\n> Great! My plan is to work on componentizing the notebook and making those components work in the phosphor plugin architecture. I think the most productive way to move forward at this point is to have actual code discussions (concrete discussions, not just general discussions about architecture). For example, Kester Tong wrote an initial toy demo in react.js to experiment with it and let other people experiment with it. We'd absolutely love it if you took parts of the notebook and addressed some of the concerns you bring up above and \"submitted it for code review on a regular basis\" too! The more hands helping in the work, the better.\n\nI think it is better to step back a little and think hard whether this abstraction is actually needed. You know you can't get two notebooks in a single tab and get good performance right now. I propose the following: If after a thorough refactoring the performance is so good that a tabbed interface is possible, then it will be sensible to talk about interfaces.\n"
  }
]
