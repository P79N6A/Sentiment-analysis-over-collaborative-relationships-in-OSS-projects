[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/90971417",
    "html_url": "https://github.com/ipython/ipython/issues/8278#issuecomment-90971417",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8278",
    "id": 90971417,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwOTcxNDE3",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-08T16:45:07Z",
    "updated_at": "2015-04-08T16:45:07Z",
    "author_association": "MEMBER",
    "body": "Hi Olga,\n\nAre you at PyCon this year ? \n\nThe widget in core IPython are the minimally viable ones, so chances of having something complex like you asked will probably not happen, though, you can create library that have your custom widget, and add it in place of your dropdown. \n\nThe code might be a little more verbose, as you will have to explicitly set the class to your dropdown.\n\nI'll Ping @SylvainCorlay, @jasongrout  and @jdfreder that will probably like the idea. \n\nI'm marking as no-action as this will probably not go into the core itself, but is an interesting usecase. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/153898248",
    "html_url": "https://github.com/ipython/ipython/issues/8278#issuecomment-153898248",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8278",
    "id": 153898248,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1Mzg5ODI0OA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-04T23:06:14Z",
    "updated_at": "2015-11-04T23:06:14Z",
    "author_association": "MEMBER",
    "body": "ping @stefanv\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/153901273",
    "html_url": "https://github.com/ipython/ipython/issues/8278#issuecomment-153901273",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8278",
    "id": 153901273,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzkwMTI3Mw==",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-04T23:18:10Z",
    "updated_at": "2015-11-04T23:18:10Z",
    "author_association": "MEMBER",
    "body": "I think this is out of scope, like @Carreau suggests.  Doing it right would require ipywidgets to depend on something like typeahead, which I'm not ready to commit too.  Also, it's unclear to me whether the right thing would be to just typeahead on the text widget, text widget + combo box, and just a user provided list, or a more complicated callback setup for typeahead.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/153902414",
    "html_url": "https://github.com/ipython/ipython/issues/8278#issuecomment-153902414",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8278",
    "id": 153902414,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzkwMjQxNA==",
    "user": {
      "login": "SylvainCorlay",
      "id": 2397974,
      "node_id": "MDQ6VXNlcjIzOTc5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2397974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylvainCorlay",
      "html_url": "https://github.com/SylvainCorlay",
      "followers_url": "https://api.github.com/users/SylvainCorlay/followers",
      "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions",
      "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs",
      "repos_url": "https://api.github.com/users/SylvainCorlay/repos",
      "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-04T23:23:04Z",
    "updated_at": "2015-11-04T23:23:10Z",
    "author_association": "MEMBER",
    "body": "I have a typeahead-based implementation of this, and also a tagsinputs widgets. I would be happy to open a PR to ipywidgets if you are fine with the typeahead dependency. I think that it was deemed out of scope a few months ago ago for same reason.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/153907519",
    "html_url": "https://github.com/ipython/ipython/issues/8278#issuecomment-153907519",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8278",
    "id": 153907519,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzkwNzUxOQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-04T23:49:33Z",
    "updated_at": "2015-11-04T23:49:33Z",
    "author_association": "MEMBER",
    "body": "I'll abstain to use my vote on ipywidgets, I dont' use or contribute enough to deserve a vote. \n\nA tip to use `@interact(Select(options=...))` in docs or docstring would be sufficient for me. If your typeahead is in it's own library I'm fine to have a link to it in the docs. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/153908189",
    "html_url": "https://github.com/ipython/ipython/issues/8278#issuecomment-153908189",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8278",
    "id": 153908189,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzkwODE4OQ==",
    "user": {
      "login": "stefanv",
      "id": 45071,
      "node_id": "MDQ6VXNlcjQ1MDcx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/45071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stefanv",
      "html_url": "https://github.com/stefanv",
      "followers_url": "https://api.github.com/users/stefanv/followers",
      "following_url": "https://api.github.com/users/stefanv/following{/other_user}",
      "gists_url": "https://api.github.com/users/stefanv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stefanv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stefanv/subscriptions",
      "organizations_url": "https://api.github.com/users/stefanv/orgs",
      "repos_url": "https://api.github.com/users/stefanv/repos",
      "events_url": "https://api.github.com/users/stefanv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stefanv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-04T23:53:44Z",
    "updated_at": "2015-11-04T23:53:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "Why not switch to a scrollable dropdown when the list reaches a certain length?  This is the same pattern followed elsewhere (e.g., output handling).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/153908352",
    "html_url": "https://github.com/ipython/ipython/issues/8278#issuecomment-153908352",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8278",
    "id": 153908352,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzkwODM1Mg==",
    "user": {
      "login": "SylvainCorlay",
      "id": 2397974,
      "node_id": "MDQ6VXNlcjIzOTc5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2397974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylvainCorlay",
      "html_url": "https://github.com/SylvainCorlay",
      "followers_url": "https://api.github.com/users/SylvainCorlay/followers",
      "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions",
      "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs",
      "repos_url": "https://api.github.com/users/SylvainCorlay/repos",
      "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-04T23:54:41Z",
    "updated_at": "2015-11-04T23:54:41Z",
    "author_association": "MEMBER",
    "body": "@stefanv good point.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/153908475",
    "html_url": "https://github.com/ipython/ipython/issues/8278#issuecomment-153908475",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8278",
    "id": 153908475,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzkwODQ3NQ==",
    "user": {
      "login": "SylvainCorlay",
      "id": 2397974,
      "node_id": "MDQ6VXNlcjIzOTc5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2397974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylvainCorlay",
      "html_url": "https://github.com/SylvainCorlay",
      "followers_url": "https://api.github.com/users/SylvainCorlay/followers",
      "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions",
      "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs",
      "repos_url": "https://api.github.com/users/SylvainCorlay/repos",
      "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-04T23:55:22Z",
    "updated_at": "2015-11-04T23:55:22Z",
    "author_association": "MEMBER",
    "body": "@Carreau doesn't notebook come with typeahead now?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/153908574",
    "html_url": "https://github.com/ipython/ipython/issues/8278#issuecomment-153908574",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8278",
    "id": 153908574,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzkwODU3NA==",
    "user": {
      "login": "olgabot",
      "id": 806256,
      "node_id": "MDQ6VXNlcjgwNjI1Ng==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/806256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/olgabot",
      "html_url": "https://github.com/olgabot",
      "followers_url": "https://api.github.com/users/olgabot/followers",
      "following_url": "https://api.github.com/users/olgabot/following{/other_user}",
      "gists_url": "https://api.github.com/users/olgabot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/olgabot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/olgabot/subscriptions",
      "organizations_url": "https://api.github.com/users/olgabot/orgs",
      "repos_url": "https://api.github.com/users/olgabot/repos",
      "events_url": "https://api.github.com/users/olgabot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/olgabot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-04T23:56:02Z",
    "updated_at": "2015-11-04T23:56:02Z",
    "author_association": "NONE",
    "body": "this would be AMAZING.. I have widgets with autogenerated content that are\n200+ elements long\n\nOn Wed, Nov 4, 2015 at 3:55 PM Sylvain Corlay notifications@github.com\nwrote:\n\n> @stefanv https://github.com/stefanv good point.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/issues/8278#issuecomment-153908352.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/153911702",
    "html_url": "https://github.com/ipython/ipython/issues/8278#issuecomment-153911702",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8278",
    "id": 153911702,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzkxMTcwMg==",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-05T00:11:24Z",
    "updated_at": "2015-11-05T00:11:24Z",
    "author_association": "MEMBER",
    "body": "> Why not switch to a scrollable dropdown when the list reaches a certain length? This is the same pattern followed elsewhere (e.g., output handling).\n\nThis is very do-able for our next release, I'll open an issue in ipywidgets pointing back at this issue. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/153911981",
    "html_url": "https://github.com/ipython/ipython/issues/8278#issuecomment-153911981",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8278",
    "id": 153911981,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzkxMTk4MQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-05T00:12:32Z",
    "updated_at": "2015-11-05T00:12:32Z",
    "author_association": "MEMBER",
    "body": "It's not typeahead, it's another library, typeahead was too annoying for I\ndont' remember which reason.\n\nOn Wed, Nov 4, 2015 at 3:56 PM, Olga Botvinnik notifications@github.com\nwrote:\n\n> this would be AMAZING.. I have widgets with autogenerated content that are\n> 200+ elements long\n> \n> On Wed, Nov 4, 2015 at 3:55 PM Sylvain Corlay notifications@github.com\n> wrote:\n> \n> > @stefanv https://github.com/stefanv good point.\n> > \n> > —\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/ipython/ipython/issues/8278#issuecomment-153908352.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/issues/8278#issuecomment-153908574.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/153912580",
    "html_url": "https://github.com/ipython/ipython/issues/8278#issuecomment-153912580",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8278",
    "id": 153912580,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzkxMjU4MA==",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-05T00:15:45Z",
    "updated_at": "2015-11-05T00:15:45Z",
    "author_association": "MEMBER",
    "body": "> typeahead was too annoying for I\n> dont' remember which reason.\n\nI don't remember either, but the last time I tried using it the API was a bit heavy for something that needed a simple array based autocompletion, so I ended up using an alternative too.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/153914221",
    "html_url": "https://github.com/ipython/ipython/issues/8278#issuecomment-153914221",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8278",
    "id": 153914221,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzkxNDIyMQ==",
    "user": {
      "login": "SylvainCorlay",
      "id": 2397974,
      "node_id": "MDQ6VXNlcjIzOTc5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2397974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylvainCorlay",
      "html_url": "https://github.com/SylvainCorlay",
      "followers_url": "https://api.github.com/users/SylvainCorlay/followers",
      "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions",
      "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs",
      "repos_url": "https://api.github.com/users/SylvainCorlay/repos",
      "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-05T00:25:35Z",
    "updated_at": "2015-11-05T00:25:35Z",
    "author_association": "MEMBER",
    "body": "The usecase that I have takes advantage of some non-trivial features.\n\nI used a form of tagsinputs to create filters on different levels of a pandas multi-index.\n\nYou can choose what is displayed for each proposal, what field to match etc...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/441418193",
    "html_url": "https://github.com/ipython/ipython/issues/8278#issuecomment-441418193",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8278",
    "id": 441418193,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTQxODE5Mw==",
    "user": {
      "login": "ketch",
      "id": 697763,
      "node_id": "MDQ6VXNlcjY5Nzc2Mw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/697763?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ketch",
      "html_url": "https://github.com/ketch",
      "followers_url": "https://api.github.com/users/ketch/followers",
      "following_url": "https://api.github.com/users/ketch/following{/other_user}",
      "gists_url": "https://api.github.com/users/ketch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ketch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ketch/subscriptions",
      "organizations_url": "https://api.github.com/users/ketch/orgs",
      "repos_url": "https://api.github.com/users/ketch/repos",
      "events_url": "https://api.github.com/users/ketch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ketch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-25T06:14:49Z",
    "updated_at": "2018-11-25T06:14:49Z",
    "author_association": "NONE",
    "body": "@SylvainCorlay Would you be willing to share your implementation?  I understand that the ipywidgets devs don't want to include this as a core feature, so it would be great to be able to use what you've created."
  }
]
