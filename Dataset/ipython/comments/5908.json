[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/44445233",
    "html_url": "https://github.com/ipython/ipython/pull/5908#issuecomment-44445233",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5908",
    "id": 44445233,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NDQ1MjMz",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-28T18:20:20Z",
    "updated_at": "2014-05-28T18:20:20Z",
    "author_association": "MEMBER",
    "body": "Thanks for this PR, priority is a much requested feature. A few points on the PR:\n- Please avoid large whitespace changes. Please rebase to remove these changes.\n- Priority should only be associated with individual tasks, not clients.\n- Each session ID should not get its own queue - I shouldn't be able to jump to the head of the line, just by creating a new Client object. There should only be a single queue per priority level.\n- It's probably better to use larger numbers for the priority (e.g. 10, 20 instead of 1, 2), so there's space to fill in.\n\nI'll make a few more comments in-line.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/44539317",
    "html_url": "https://github.com/ipython/ipython/pull/5908#issuecomment-44539317",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5908",
    "id": 44539317,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NTM5MzE3",
    "user": {
      "login": "dusans",
      "id": 875020,
      "node_id": "MDQ6VXNlcjg3NTAyMA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/875020?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dusans",
      "html_url": "https://github.com/dusans",
      "followers_url": "https://api.github.com/users/dusans/followers",
      "following_url": "https://api.github.com/users/dusans/following{/other_user}",
      "gists_url": "https://api.github.com/users/dusans/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dusans/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dusans/subscriptions",
      "organizations_url": "https://api.github.com/users/dusans/orgs",
      "repos_url": "https://api.github.com/users/dusans/repos",
      "events_url": "https://api.github.com/users/dusans/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dusans/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-29T14:43:34Z",
    "updated_at": "2014-05-29T14:43:34Z",
    "author_association": "NONE",
    "body": "If we have a separated queue for each job we can execute them in parallel. \nI implemented it in a way that is known to me (Data-warehousing - Netezza DB server)\nhttp://pic.dhe.ibm.com/infocenter/ntz/v7r0m3/index.jsp?topic=%2Fcom.ibm.nz.adm.doc%2Fc_sysadm_pqe.html\n\nIn my practical experience u have jobs that run for weeks/days/hours. And if a user submits a new job that he knows takes only a few minutes he doesn't want to wait. U can't have a task that runs for days block all the others.\n\nUsing priorities should only be used in rare cases. The scheduler should take care of executing jobs in parallel that will make most of the users happy. Having to many priorities doesn't help i think. \nIn a real world environment u can't have the user decide what should be the priority of his job. This is a job for an admin. Because if u have 20 users each user thinks that his job is critical.\n\nOne feature i was thinking about for another PR is that if the scheduler knows that a job will actually take only a few minutes put that job in front of the jobs that are already running for hours. This is called Short query bias in Netezza.\n\nhttp://pic.dhe.ibm.com/infocenter/ntz/v7r0m3/index.jsp?topic=%2Fcom.ibm.nz.adm.doc%2Fc_sysadm_pqe.html\n\nI don't know if this model fits to IPython-parallel. \nhttp://pic.dhe.ibm.com/infocenter/ntz/v7r0m3/index.jsp?topic=%2Fcom.ibm.nz.adm.doc%2Fc_sysadm_pqe.html\nWhat do u think? :)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/44572223",
    "html_url": "https://github.com/ipython/ipython/pull/5908#issuecomment-44572223",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5908",
    "id": 44572223,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NTcyMjIz",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-29T19:14:03Z",
    "updated_at": "2014-05-29T19:14:03Z",
    "author_association": "MEMBER",
    "body": "> If we have a separated queue for each job we can execute them in parallel. \n\nI don't know what you mean by parallel here. The number of queues doesn't affect how many jobs can be run simultaneously, it only affects the order in which tasks are assigned.\n\n> And if a user submits a new job that he knows takes only a few minutes he doesn't want to wait.\n\nIf I have submitted 100 tasks that take 10 minutes, then an hour later you submit two tasks that take 5 days, your tasks will run before mine – just as fast tasks from different Clients will preempt slow ones, slow ones will preempt fast ones.\n\n> In a real world environment u can't have the user decide what should be the priority of his job.\n\nIn IPython.parallel, the admin of the scheduler and the submitter of jobs are generally the same user.\n\nThe IPython scheduler is not aimed at similar use cases to large scale batch schedulers like PBS. IPython.parallel is not a multi-user environment.  Note that all tasks have access to the memory of all other tasks in IPython.parallel.  The use case for IPython.parallel in a cluster context is one IPython controller/engines per PBS/SGE job – one user, relatively short-lived.  There are not multiple users to attempt to satisfy. Multiple users on one cluster should have multiple IPython schedulers - one per user.\n\n> One feature i was thinking about for another PR is that if the scheduler knows that a job will actually take only a few minutes put that job in front of the jobs that are already running for hours. This is called Short query bias in Netezza.\n\nIt will not be possible to preempt already running tasks, but it will be able to jump to the head of the line of those that are waiting. I'm not sure if this is appropriate or not for IPython, but I'm guessing that it is not.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/44579731",
    "html_url": "https://github.com/ipython/ipython/pull/5908#issuecomment-44579731",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5908",
    "id": 44579731,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NTc5NzMx",
    "user": {
      "login": "dusans",
      "id": 875020,
      "node_id": "MDQ6VXNlcjg3NTAyMA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/875020?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dusans",
      "html_url": "https://github.com/dusans",
      "followers_url": "https://api.github.com/users/dusans/followers",
      "following_url": "https://api.github.com/users/dusans/following{/other_user}",
      "gists_url": "https://api.github.com/users/dusans/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dusans/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dusans/subscriptions",
      "organizations_url": "https://api.github.com/users/dusans/orgs",
      "repos_url": "https://api.github.com/users/dusans/repos",
      "events_url": "https://api.github.com/users/dusans/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dusans/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-29T20:18:19Z",
    "updated_at": "2014-05-29T20:18:19Z",
    "author_association": "NONE",
    "body": "> I don't know what you mean by parallel here. The number of queues doesn't affect how many jobs can be run simultaneously, it only affects the order in which tasks are assigned.\n\nIf u have only one queue for priority normal and \n- U submit 1000 tasks (20 min for one task)\n- and i submit 10 tasks (5 min for one task)\n\nMy tasks are appended into the queue behind your 1000. That means all my 10 tasks have to wait for your 1000 tasks to poped out of the queue.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/44583728",
    "html_url": "https://github.com/ipython/ipython/pull/5908#issuecomment-44583728",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5908",
    "id": 44583728,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NTgzNzI4",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-29T20:54:11Z",
    "updated_at": "2014-05-29T20:54:11Z",
    "author_association": "MEMBER",
    "body": "> My tasks are appended into the queue behind your 1000. That means all my 10 tasks have to wait for your 1000 tasks to popped out of the queue.\n\nRight, it's a single queue. I'm not sure it makes sense for creating a new Client object to be able to jump ahead of prior submissions, just because it's a different Client object. Under normal circumstances, different users will not share a controller, so both Client objects will be me, just at different points in time. I would expect that to just be queued.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/44586575",
    "html_url": "https://github.com/ipython/ipython/pull/5908#issuecomment-44586575",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5908",
    "id": 44586575,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NTg2NTc1",
    "user": {
      "login": "dusans",
      "id": 875020,
      "node_id": "MDQ6VXNlcjg3NTAyMA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/875020?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dusans",
      "html_url": "https://github.com/dusans",
      "followers_url": "https://api.github.com/users/dusans/followers",
      "following_url": "https://api.github.com/users/dusans/following{/other_user}",
      "gists_url": "https://api.github.com/users/dusans/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dusans/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dusans/subscriptions",
      "organizations_url": "https://api.github.com/users/dusans/orgs",
      "repos_url": "https://api.github.com/users/dusans/repos",
      "events_url": "https://api.github.com/users/dusans/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dusans/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-29T21:19:27Z",
    "updated_at": "2014-05-29T21:19:27Z",
    "author_association": "NONE",
    "body": "Yes my direction was wrong in this PR. This isn't how ipython-parallel was designed to be used. \n\nI was implementing all this for multiple users in mind.  Since this is what we need.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/44587703",
    "html_url": "https://github.com/ipython/ipython/pull/5908#issuecomment-44587703",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5908",
    "id": 44587703,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NTg3NzAz",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-29T21:29:17Z",
    "updated_at": "2014-05-29T21:29:17Z",
    "author_association": "MEMBER",
    "body": "Can you describe your use case in more detail?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/44638434",
    "html_url": "https://github.com/ipython/ipython/pull/5908#issuecomment-44638434",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5908",
    "id": 44638434,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjM4NDM0",
    "user": {
      "login": "dusans",
      "id": 875020,
      "node_id": "MDQ6VXNlcjg3NTAyMA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/875020?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dusans",
      "html_url": "https://github.com/dusans",
      "followers_url": "https://api.github.com/users/dusans/followers",
      "following_url": "https://api.github.com/users/dusans/following{/other_user}",
      "gists_url": "https://api.github.com/users/dusans/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dusans/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dusans/subscriptions",
      "organizations_url": "https://api.github.com/users/dusans/orgs",
      "repos_url": "https://api.github.com/users/dusans/repos",
      "events_url": "https://api.github.com/users/dusans/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dusans/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-30T10:51:43Z",
    "updated_at": "2014-05-30T10:51:43Z",
    "author_association": "NONE",
    "body": "We have around 20 users (I'm one of the admins) that run simulations on 300 cores. These take days maybe weeks.  \n\nSometimes about an hour for quick tests. \n\nI'm testing if we can also use ipython in our environment. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/44818460",
    "html_url": "https://github.com/ipython/ipython/pull/5908#issuecomment-44818460",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5908",
    "id": 44818460,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODE4NDYw",
    "user": {
      "login": "dusans",
      "id": 875020,
      "node_id": "MDQ6VXNlcjg3NTAyMA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/875020?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dusans",
      "html_url": "https://github.com/dusans",
      "followers_url": "https://api.github.com/users/dusans/followers",
      "following_url": "https://api.github.com/users/dusans/following{/other_user}",
      "gists_url": "https://api.github.com/users/dusans/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dusans/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dusans/subscriptions",
      "organizations_url": "https://api.github.com/users/dusans/orgs",
      "repos_url": "https://api.github.com/users/dusans/repos",
      "events_url": "https://api.github.com/users/dusans/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dusans/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-02T09:38:52Z",
    "updated_at": "2014-06-02T09:41:02Z",
    "author_association": "NONE",
    "body": "I can implement your suggestions to finish up the PR. \n\nBut i think its also for a single user version of benefit having jobs executed in parallel (inside one priority). This would make the users work easier, since he would have to always set a priority when running jobs in parallel.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/45007521",
    "html_url": "https://github.com/ipython/ipython/pull/5908#issuecomment-45007521",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5908",
    "id": 45007521,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDA3NTIx",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-03T19:12:18Z",
    "updated_at": "2014-06-03T19:12:18Z",
    "author_association": "MEMBER",
    "body": "If you want to finish up this PR, that would be great. If so, I do think multiple queues per priority should be removed.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/53462196",
    "html_url": "https://github.com/ipython/ipython/pull/5908#issuecomment-53462196",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5908",
    "id": 53462196,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNDYyMTk2",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-26T17:55:41Z",
    "updated_at": "2014-08-26T17:55:41Z",
    "author_association": "MEMBER",
    "body": "Closing as dormant. Feel free to open a new PR, if you want to finish addressing the review.\n"
  }
]
