[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/393234247",
    "html_url": "https://github.com/ipython/ipython/issues/11163#issuecomment-393234247",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11163",
    "id": 393234247,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzIzNDI0Nw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-30T16:51:39Z",
    "updated_at": "2018-05-30T16:51:39Z",
    "author_association": "MEMBER",
    "body": "It's not really intended to work in a plain Python environment,  because Python doesn't really have any concept of rich output by itself. You'd have to dig into the code to figure out how rich output capture works, how the inline backend for matplotlib works, and enable them both."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/393338313",
    "html_url": "https://github.com/ipython/ipython/issues/11163#issuecomment-393338313",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11163",
    "id": 393338313,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzMzODMxMw==",
    "user": {
      "login": "mwouts",
      "id": 29915202,
      "node_id": "MDQ6VXNlcjI5OTE1MjAy",
      "avatar_url": "https://avatars2.githubusercontent.com/u/29915202?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mwouts",
      "html_url": "https://github.com/mwouts",
      "followers_url": "https://api.github.com/users/mwouts/followers",
      "following_url": "https://api.github.com/users/mwouts/following{/other_user}",
      "gists_url": "https://api.github.com/users/mwouts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mwouts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mwouts/subscriptions",
      "organizations_url": "https://api.github.com/users/mwouts/orgs",
      "repos_url": "https://api.github.com/users/mwouts/repos",
      "events_url": "https://api.github.com/users/mwouts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mwouts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-30T22:19:54Z",
    "updated_at": "2018-05-30T22:19:54Z",
    "author_association": "NONE",
    "body": "Ok thanks, I see. I did some research, and I learnt that changing the backend to jupyter's one is done with\r\n```\r\nimport matplotlib\r\nmatplotlib.use('module://ipykernel.pylab.backend_inline')\r\n```\r\nThen the above script (in plain python) does capture something, but only... the text representation of the plot, which is not very useful yet. I guess that's what you meant when you said that I would have to enable the rich output capture as well (any further clue is welcome !)\r\n\r\nFinally, I quoted matplotlib, but I am actually interested in intercepting rich displays of images and pdf (and also javascript, json, etc), not only matplotlib plots. Say, for instance:\r\n```\r\nfrom IPython.utils import capture\r\nfrom IPython.display import Image, display\r\n\r\nwith capture.capture_output() as cap:\r\n    display(Image(filename='image.png'))\r\n```\r\nor even\r\n```\r\nfrom IPython.utils import capture\r\nimport plotly\r\n\r\nwith capture.capture_output() as cap:\r\n    plotly.offline.iplot([plotly.graph_objs.Bar(y=[2,1,3])])\r\n```\r\nIn this setting, capture works both in jupyter and ipython terminal (already better than the matplotlib example), but not in the plain python terminal. Do you expect the capture would be easier to configure in one of these examples ?\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/393641084",
    "html_url": "https://github.com/ipython/ipython/issues/11163#issuecomment-393641084",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11163",
    "id": 393641084,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzY0MTA4NA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-31T18:57:52Z",
    "updated_at": "2018-05-31T18:57:52Z",
    "author_association": "MEMBER",
    "body": "Here's the code that captures rich outputs:\r\n\r\nhttps://github.com/ipython/ipython/blob/2284ccfeed23cb6f83a2103f7e485bd9b9d10812/IPython/utils/capture.py#L155-L160\r\n\r\nI think the `display()` function also assumes that it's run inside IPython, and gets a reference to the IPython shell object. But that would be the place to start digging."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/393641516",
    "html_url": "https://github.com/ipython/ipython/issues/11163#issuecomment-393641516",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11163",
    "id": 393641516,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzY0MTUxNg==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-31T18:59:20Z",
    "updated_at": "2018-05-31T18:59:20Z",
    "author_association": "MEMBER",
    "body": "You might be able to make it work by instantiating an InteractiveShell object so that this machinery thinks it's inside IPython. But instantiating an InteractiveShell may do a bunch of other stuff that you don't want."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/393995207",
    "html_url": "https://github.com/ipython/ipython/issues/11163#issuecomment-393995207",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11163",
    "id": 393995207,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5Mzk5NTIwNw==",
    "user": {
      "login": "mwouts",
      "id": 29915202,
      "node_id": "MDQ6VXNlcjI5OTE1MjAy",
      "avatar_url": "https://avatars2.githubusercontent.com/u/29915202?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mwouts",
      "html_url": "https://github.com/mwouts",
      "followers_url": "https://api.github.com/users/mwouts/followers",
      "following_url": "https://api.github.com/users/mwouts/following{/other_user}",
      "gists_url": "https://api.github.com/users/mwouts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mwouts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mwouts/subscriptions",
      "organizations_url": "https://api.github.com/users/mwouts/orgs",
      "repos_url": "https://api.github.com/users/mwouts/repos",
      "events_url": "https://api.github.com/users/mwouts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mwouts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-01T20:07:34Z",
    "updated_at": "2018-06-01T20:07:34Z",
    "author_association": "NONE",
    "body": "Thanks @takluyver. That was very helpful. Indeed the capture relies on the shell, obtained with `get_ipython`, which is `None` unless I execute:\r\n```\r\nfrom IPython.core.interactiveshell import InteractiveShell\r\nInteractiveShell().instance()\r\n```\r\nWith this, the capture of rich outputs created with `display` work in plain python. I have [tested](https://github.com/mwouts/notebooks/blob/master/reticulate%20and%20capture.Rmd) it with png images, plotly javascript and json rich outputs. For matplotlib plots however I do get the side effects you  mentioned, probably because mpl does not rely exclusively on rich outputs. Anyway I think I got sufficient coverage for now, so I'm closing this issue. Thank you a lot !"
  }
]
