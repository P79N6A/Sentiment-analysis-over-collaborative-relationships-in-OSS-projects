[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/449976491",
    "html_url": "https://github.com/ipython/ipython/issues/11530#issuecomment-449976491",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11530",
    "id": 449976491,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0OTk3NjQ5MQ==",
    "user": {
      "login": "mimakaev",
      "id": 9454715,
      "node_id": "MDQ6VXNlcjk0NTQ3MTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/9454715?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mimakaev",
      "html_url": "https://github.com/mimakaev",
      "followers_url": "https://api.github.com/users/mimakaev/followers",
      "following_url": "https://api.github.com/users/mimakaev/following{/other_user}",
      "gists_url": "https://api.github.com/users/mimakaev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mimakaev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mimakaev/subscriptions",
      "organizations_url": "https://api.github.com/users/mimakaev/orgs",
      "repos_url": "https://api.github.com/users/mimakaev/repos",
      "events_url": "https://api.github.com/users/mimakaev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mimakaev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-26T14:49:08Z",
    "updated_at": "2018-12-26T14:49:08Z",
    "author_association": "NONE",
    "body": "I have the same issue, ipython 7.2.0. \r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/459334982",
    "html_url": "https://github.com/ipython/ipython/issues/11530#issuecomment-459334982",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11530",
    "id": 459334982,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTMzNDk4Mg==",
    "user": {
      "login": "jvanheugten",
      "id": 12444498,
      "node_id": "MDQ6VXNlcjEyNDQ0NDk4",
      "avatar_url": "https://avatars0.githubusercontent.com/u/12444498?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jvanheugten",
      "html_url": "https://github.com/jvanheugten",
      "followers_url": "https://api.github.com/users/jvanheugten/followers",
      "following_url": "https://api.github.com/users/jvanheugten/following{/other_user}",
      "gists_url": "https://api.github.com/users/jvanheugten/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jvanheugten/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jvanheugten/subscriptions",
      "organizations_url": "https://api.github.com/users/jvanheugten/orgs",
      "repos_url": "https://api.github.com/users/jvanheugten/repos",
      "events_url": "https://api.github.com/users/jvanheugten/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jvanheugten/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-31T12:59:00Z",
    "updated_at": "2019-01-31T12:59:00Z",
    "author_association": "NONE",
    "body": "Downgrading to ipython==7.1.1 seemed to work as a fix for me."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/464431694",
    "html_url": "https://github.com/ipython/ipython/issues/11530#issuecomment-464431694",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11530",
    "id": 464431694,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDQzMTY5NA==",
    "user": {
      "login": "vityas",
      "id": 12552690,
      "node_id": "MDQ6VXNlcjEyNTUyNjkw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/12552690?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vityas",
      "html_url": "https://github.com/vityas",
      "followers_url": "https://api.github.com/users/vityas/followers",
      "following_url": "https://api.github.com/users/vityas/following{/other_user}",
      "gists_url": "https://api.github.com/users/vityas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vityas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vityas/subscriptions",
      "organizations_url": "https://api.github.com/users/vityas/orgs",
      "repos_url": "https://api.github.com/users/vityas/repos",
      "events_url": "https://api.github.com/users/vityas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vityas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-17T09:07:38Z",
    "updated_at": "2019-02-17T09:11:12Z",
    "author_association": "NONE",
    "body": "Could someone share if enabling `jedi` helped their workflow, and if it did, I would like to know how?\r\n\r\nIt certainly made my life much harder: no multi-level completion, no folder completion, nor can I use autocompletion before running the cell (`df = pd.DataFrame(); df.val<TAB>` fails)\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/465259827",
    "html_url": "https://github.com/ipython/ipython/issues/11530#issuecomment-465259827",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11530",
    "id": 465259827,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTI1OTgyNw==",
    "user": {
      "login": "rainwoodman",
      "id": 138060,
      "node_id": "MDQ6VXNlcjEzODA2MA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/138060?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rainwoodman",
      "html_url": "https://github.com/rainwoodman",
      "followers_url": "https://api.github.com/users/rainwoodman/followers",
      "following_url": "https://api.github.com/users/rainwoodman/following{/other_user}",
      "gists_url": "https://api.github.com/users/rainwoodman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rainwoodman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rainwoodman/subscriptions",
      "organizations_url": "https://api.github.com/users/rainwoodman/orgs",
      "repos_url": "https://api.github.com/users/rainwoodman/repos",
      "events_url": "https://api.github.com/users/rainwoodman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rainwoodman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-19T18:45:47Z",
    "updated_at": "2019-02-19T18:45:47Z",
    "author_association": "NONE",
    "body": "The bug certainly has made my life much harder as well.\r\n\r\nauto-completion is probably one of the most important feature of an interactive shell. Is there a way jedi and path auto-completion can coexist?\r\nSome very simple heuristics in deciding to use jedi or the legacy completion will help a long way: if one is in a string, then it is unlikely one wants names from the current namespace.\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/467990645",
    "html_url": "https://github.com/ipython/ipython/issues/11530#issuecomment-467990645",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11530",
    "id": 467990645,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2Nzk5MDY0NQ==",
    "user": {
      "login": "michaelsilverstein",
      "id": 22639569,
      "node_id": "MDQ6VXNlcjIyNjM5NTY5",
      "avatar_url": "https://avatars0.githubusercontent.com/u/22639569?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelsilverstein",
      "html_url": "https://github.com/michaelsilverstein",
      "followers_url": "https://api.github.com/users/michaelsilverstein/followers",
      "following_url": "https://api.github.com/users/michaelsilverstein/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelsilverstein/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelsilverstein/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelsilverstein/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelsilverstein/orgs",
      "repos_url": "https://api.github.com/users/michaelsilverstein/repos",
      "events_url": "https://api.github.com/users/michaelsilverstein/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelsilverstein/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-27T19:09:06Z",
    "updated_at": "2019-02-27T19:09:06Z",
    "author_association": "NONE",
    "body": "For those who have run into issues with downgrading, I found @ivirshup's comment to be most helpful - to disable `jedi` autocomplete in the ipython config. If you haven't already, you can generate an `ipython_config.py` with:\r\n```bash\r\n# Generate config\r\nipython profile create\r\n# Edit config file in vim\r\nvim .ipython/profile_default/ipython_kernel_config.py \r\n```\r\nAnd change `c.IPCompleter.use_jedi = False` in `ipython_config.py`"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/474283558",
    "html_url": "https://github.com/ipython/ipython/issues/11530#issuecomment-474283558",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11530",
    "id": 474283558,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDI4MzU1OA==",
    "user": {
      "login": "flying-sheep",
      "id": 291575,
      "node_id": "MDQ6VXNlcjI5MTU3NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/291575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/flying-sheep",
      "html_url": "https://github.com/flying-sheep",
      "followers_url": "https://api.github.com/users/flying-sheep/followers",
      "following_url": "https://api.github.com/users/flying-sheep/following{/other_user}",
      "gists_url": "https://api.github.com/users/flying-sheep/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/flying-sheep/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/flying-sheep/subscriptions",
      "organizations_url": "https://api.github.com/users/flying-sheep/orgs",
      "repos_url": "https://api.github.com/users/flying-sheep/repos",
      "events_url": "https://api.github.com/users/flying-sheep/events{/privacy}",
      "received_events_url": "https://api.github.com/users/flying-sheep/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-19T10:11:57Z",
    "updated_at": "2019-03-19T10:14:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "> [The jedi completer] certainly made my life much harder: no multi-level completion, no folder completion, […]\r\n\r\nNonono. It’s not the jedi completer that does that. There’s multiple completers and you’re describing that the wrong completer is selected because the completer selection code is broken. And touching the list of completers by enabling jedi uncovered that bug. @takluyver describes the problem in https://github.com/ipython/ipython/pull/10996#issuecomment-378288569.\r\n\r\nDisabling jedi again is a temporary workaround, but actually fixing the completer selection code (#11064 I think) would of course be a much better solution."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/477150494",
    "html_url": "https://github.com/ipython/ipython/issues/11530#issuecomment-477150494",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11530",
    "id": 477150494,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NzE1MDQ5NA==",
    "user": {
      "login": "martinRenou",
      "id": 21197331,
      "node_id": "MDQ6VXNlcjIxMTk3MzMx",
      "avatar_url": "https://avatars0.githubusercontent.com/u/21197331?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinRenou",
      "html_url": "https://github.com/martinRenou",
      "followers_url": "https://api.github.com/users/martinRenou/followers",
      "following_url": "https://api.github.com/users/martinRenou/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinRenou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinRenou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinRenou/subscriptions",
      "organizations_url": "https://api.github.com/users/martinRenou/orgs",
      "repos_url": "https://api.github.com/users/martinRenou/repos",
      "events_url": "https://api.github.com/users/martinRenou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinRenou/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-27T13:20:54Z",
    "updated_at": "2019-03-27T13:41:05Z",
    "author_association": "NONE",
    "body": "My understanding is that all the completers are working at the same time. Completers are defined [here](https://github.com/ipython/ipython/blob/master/IPython/core/completer.py#L1128-L1141), and they are all used [at the same time](https://github.com/ipython/ipython/blob/master/IPython/core/completer.py#L2041-L2044). The `matches` list (the result of the auto-completion) will contain the concatenation of all the completers results, and the `file_matches` completer is still part of it. \r\n\r\nSo the path/file name completion is not \"broken\" when jedi is enabled, it is just that there is so many results (coming from jedi) that you can't see your file path matching anymore.\r\n\r\nMy first idea for a fix would be to disable jedi auto-completion when typing in a string? Would that work? \r\nThe only thing which would not work is auto-completion when executing code with `eval` or `exec`, but I think we cannot fix every single use case. And it looks like some people like the file path auto-completion.\r\n\r\n**EDIT:** Reading the other issue you linked to @flying-sheep #11064, I understand that there is already a logic for not using jedi when typing in a string, but it is broken?"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/477153058",
    "html_url": "https://github.com/ipython/ipython/issues/11530#issuecomment-477153058",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11530",
    "id": 477153058,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NzE1MzA1OA==",
    "user": {
      "login": "martinRenou",
      "id": 21197331,
      "node_id": "MDQ6VXNlcjIxMTk3MzMx",
      "avatar_url": "https://avatars0.githubusercontent.com/u/21197331?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinRenou",
      "html_url": "https://github.com/martinRenou",
      "followers_url": "https://api.github.com/users/martinRenou/followers",
      "following_url": "https://api.github.com/users/martinRenou/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinRenou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinRenou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinRenou/subscriptions",
      "organizations_url": "https://api.github.com/users/martinRenou/orgs",
      "repos_url": "https://api.github.com/users/martinRenou/repos",
      "events_url": "https://api.github.com/users/martinRenou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinRenou/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-27T13:26:42Z",
    "updated_at": "2019-03-27T13:30:41Z",
    "author_association": "NONE",
    "body": "Just to illustrate what I'm saying. Both screenshots were taken using jedi, you see that the path auto-completion still works, you just need to type a bit more because there are more matches.\r\n![test1](https://user-images.githubusercontent.com/21197331/55079373-51435c00-509c-11e9-8c17-a4e42ee67df9.png)\r\n![test2](https://user-images.githubusercontent.com/21197331/55079374-51435c00-509c-11e9-97c6-39e62f96b2b3.png)\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/477169089",
    "html_url": "https://github.com/ipython/ipython/issues/11530#issuecomment-477169089",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11530",
    "id": 477169089,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NzE2OTA4OQ==",
    "user": {
      "login": "mimakaev",
      "id": 9454715,
      "node_id": "MDQ6VXNlcjk0NTQ3MTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/9454715?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mimakaev",
      "html_url": "https://github.com/mimakaev",
      "followers_url": "https://api.github.com/users/mimakaev/followers",
      "following_url": "https://api.github.com/users/mimakaev/following{/other_user}",
      "gists_url": "https://api.github.com/users/mimakaev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mimakaev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mimakaev/subscriptions",
      "organizations_url": "https://api.github.com/users/mimakaev/orgs",
      "repos_url": "https://api.github.com/users/mimakaev/repos",
      "events_url": "https://api.github.com/users/mimakaev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mimakaev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-27T14:02:14Z",
    "updated_at": "2019-03-27T14:02:14Z",
    "author_association": "NONE",
    "body": "That is generally my problem: typing a bit helps, but it is not always an option if you don't know the first letter of the file. Even if you clearly started typing a path, after each \"/\" the completer \"resets\" to the default mode of showing me abs(), all() and other builtins. \r\n![image](https://user-images.githubusercontent.com/9454715/55081753-331b3300-507f-11e9-991e-db74cdfe74a1.png)\r\n\r\nIt is a big problem if you have long paths with a few nested folders. Bash autocompletion would just add things on \"tab\".  With current ipython autocomplete you have to remember the first letter or a few of each folder/file, type it, and then still go around a few builtins before you find your file/folder. "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/477172110",
    "html_url": "https://github.com/ipython/ipython/issues/11530#issuecomment-477172110",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11530",
    "id": 477172110,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NzE3MjExMA==",
    "user": {
      "login": "mimakaev",
      "id": 9454715,
      "node_id": "MDQ6VXNlcjk0NTQ3MTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/9454715?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mimakaev",
      "html_url": "https://github.com/mimakaev",
      "followers_url": "https://api.github.com/users/mimakaev/followers",
      "following_url": "https://api.github.com/users/mimakaev/following{/other_user}",
      "gists_url": "https://api.github.com/users/mimakaev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mimakaev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mimakaev/subscriptions",
      "organizations_url": "https://api.github.com/users/mimakaev/orgs",
      "repos_url": "https://api.github.com/users/mimakaev/repos",
      "events_url": "https://api.github.com/users/mimakaev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mimakaev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-27T14:08:50Z",
    "updated_at": "2019-03-27T14:09:03Z",
    "author_association": "NONE",
    "body": "If there were a way to remove all builtins from autocompletion, and all ipython magic - it would be already much better! \r\n\r\nI know how to type 'abs', and most of us can type it in several times faster than selecting it from autocompletion list. I'm not sure there is a good reason for it, and other 3-4 letter long builtins, to be there in a first place! Ideally, if there were a way to edit the list of builtins, I would just leave a few long names that I use, like DepercationWarning, and get rid of everything else. "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/477313944",
    "html_url": "https://github.com/ipython/ipython/issues/11530#issuecomment-477313944",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11530",
    "id": 477313944,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NzMxMzk0NA==",
    "user": {
      "login": "rainwoodman",
      "id": 138060,
      "node_id": "MDQ6VXNlcjEzODA2MA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/138060?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rainwoodman",
      "html_url": "https://github.com/rainwoodman",
      "followers_url": "https://api.github.com/users/rainwoodman/followers",
      "following_url": "https://api.github.com/users/rainwoodman/following{/other_user}",
      "gists_url": "https://api.github.com/users/rainwoodman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rainwoodman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rainwoodman/subscriptions",
      "organizations_url": "https://api.github.com/users/rainwoodman/orgs",
      "repos_url": "https://api.github.com/users/rainwoodman/repos",
      "events_url": "https://api.github.com/users/rainwoodman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rainwoodman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-27T19:26:30Z",
    "updated_at": "2019-03-27T19:26:30Z",
    "author_association": "NONE",
    "body": "Just look at the use case in the image: Why would I want to type a Python object name inside of a string literal? "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/477327644",
    "html_url": "https://github.com/ipython/ipython/issues/11530#issuecomment-477327644",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11530",
    "id": 477327644,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NzMyNzY0NA==",
    "user": {
      "login": "martinRenou",
      "id": 21197331,
      "node_id": "MDQ6VXNlcjIxMTk3MzMx",
      "avatar_url": "https://avatars0.githubusercontent.com/u/21197331?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinRenou",
      "html_url": "https://github.com/martinRenou",
      "followers_url": "https://api.github.com/users/martinRenou/followers",
      "following_url": "https://api.github.com/users/martinRenou/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinRenou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinRenou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinRenou/subscriptions",
      "organizations_url": "https://api.github.com/users/martinRenou/orgs",
      "repos_url": "https://api.github.com/users/martinRenou/repos",
      "events_url": "https://api.github.com/users/martinRenou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinRenou/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-27T20:08:06Z",
    "updated_at": "2019-03-27T20:08:06Z",
    "author_association": "NONE",
    "body": "I can find a simple use case: \r\n```python\r\nexec(\"print(abs(-3))\", [globals()])\r\n```\r\nMaybe it is a less common use case, but it can happen. I would agree that path completion is more important than this use case for most of the users."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/477330614",
    "html_url": "https://github.com/ipython/ipython/issues/11530#issuecomment-477330614",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11530",
    "id": 477330614,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NzMzMDYxNA==",
    "user": {
      "login": "mimakaev",
      "id": 9454715,
      "node_id": "MDQ6VXNlcjk0NTQ3MTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/9454715?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mimakaev",
      "html_url": "https://github.com/mimakaev",
      "followers_url": "https://api.github.com/users/mimakaev/followers",
      "following_url": "https://api.github.com/users/mimakaev/following{/other_user}",
      "gists_url": "https://api.github.com/users/mimakaev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mimakaev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mimakaev/subscriptions",
      "organizations_url": "https://api.github.com/users/mimakaev/orgs",
      "repos_url": "https://api.github.com/users/mimakaev/repos",
      "events_url": "https://api.github.com/users/mimakaev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mimakaev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-27T20:16:48Z",
    "updated_at": "2019-03-27T20:16:48Z",
    "author_association": "NONE",
    "body": "Yeah, it is a possibility, and some people rely on exec a lot. \r\n\r\nIdeally, autocomplete should detect that it is in a filename mode, and from there on function like a normal bash tab completion. A good proxy is starting with \"/\", \"./\" or \"C:\" \"D:\" etc. \r\n\r\nIt is even less likely that string starting with these variables would contain valid python expressions. \r\n\r\nI'm sure one can make an example of  `a = \"C:print(abs(-3))\";  exec(a[2:])`  but that's very unlikely. "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/477332313",
    "html_url": "https://github.com/ipython/ipython/issues/11530#issuecomment-477332313",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11530",
    "id": 477332313,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NzMzMjMxMw==",
    "user": {
      "login": "martinRenou",
      "id": 21197331,
      "node_id": "MDQ6VXNlcjIxMTk3MzMx",
      "avatar_url": "https://avatars0.githubusercontent.com/u/21197331?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinRenou",
      "html_url": "https://github.com/martinRenou",
      "followers_url": "https://api.github.com/users/martinRenou/followers",
      "following_url": "https://api.github.com/users/martinRenou/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinRenou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinRenou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinRenou/subscriptions",
      "organizations_url": "https://api.github.com/users/martinRenou/orgs",
      "repos_url": "https://api.github.com/users/martinRenou/repos",
      "events_url": "https://api.github.com/users/martinRenou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinRenou/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-27T20:22:04Z",
    "updated_at": "2019-03-27T20:22:52Z",
    "author_association": "NONE",
    "body": "Yeah, actually the code is supposed to skip jedi completion when you are typing a string. See this line: https://github.com/ipython/ipython/blob/65778adec13a65f82c5d2bab123e7a63516702c8/IPython/core/completer.py#L1375 \r\nAnd it relies on jedi internal parsing logic for trying to figure it out if we are in a string or not.\r\nI tested this code a bit and it turns out that it is a bit broken, for example when typing `path = \"` it will see that you are in a string, but not with `path = \"./`. I guess we can come up with a better solution using [tokenize](https://docs.python.org/3.7/library/tokenize.html)."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/477333895",
    "html_url": "https://github.com/ipython/ipython/issues/11530#issuecomment-477333895",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11530",
    "id": 477333895,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NzMzMzg5NQ==",
    "user": {
      "login": "rainwoodman",
      "id": 138060,
      "node_id": "MDQ6VXNlcjEzODA2MA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/138060?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rainwoodman",
      "html_url": "https://github.com/rainwoodman",
      "followers_url": "https://api.github.com/users/rainwoodman/followers",
      "following_url": "https://api.github.com/users/rainwoodman/following{/other_user}",
      "gists_url": "https://api.github.com/users/rainwoodman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rainwoodman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rainwoodman/subscriptions",
      "organizations_url": "https://api.github.com/users/rainwoodman/orgs",
      "repos_url": "https://api.github.com/users/rainwoodman/repos",
      "events_url": "https://api.github.com/users/rainwoodman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rainwoodman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-27T20:26:26Z",
    "updated_at": "2019-03-27T20:26:26Z",
    "author_association": "NONE",
    "body": "Is it because Jedi doesn't think it is an ErrorLeaf, or is it because going back by two nodes is insufficient?\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/477336009",
    "html_url": "https://github.com/ipython/ipython/issues/11530#issuecomment-477336009",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11530",
    "id": 477336009,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NzMzNjAwOQ==",
    "user": {
      "login": "martinRenou",
      "id": 21197331,
      "node_id": "MDQ6VXNlcjIxMTk3MzMx",
      "avatar_url": "https://avatars0.githubusercontent.com/u/21197331?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinRenou",
      "html_url": "https://github.com/martinRenou",
      "followers_url": "https://api.github.com/users/martinRenou/followers",
      "following_url": "https://api.github.com/users/martinRenou/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinRenou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinRenou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinRenou/subscriptions",
      "organizations_url": "https://api.github.com/users/martinRenou/orgs",
      "repos_url": "https://api.github.com/users/martinRenou/repos",
      "events_url": "https://api.github.com/users/martinRenou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinRenou/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-27T20:32:38Z",
    "updated_at": "2019-03-27T20:33:01Z",
    "author_association": "NONE",
    "body": "I'm not sure, and I quickly switched my mind to `tokenize` because I didn't like the fact that it relies on internal jedi stuff (private API)."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/477352390",
    "html_url": "https://github.com/ipython/ipython/issues/11530#issuecomment-477352390",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11530",
    "id": 477352390,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NzM1MjM5MA==",
    "user": {
      "login": "rainwoodman",
      "id": 138060,
      "node_id": "MDQ6VXNlcjEzODA2MA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/138060?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rainwoodman",
      "html_url": "https://github.com/rainwoodman",
      "followers_url": "https://api.github.com/users/rainwoodman/followers",
      "following_url": "https://api.github.com/users/rainwoodman/following{/other_user}",
      "gists_url": "https://api.github.com/users/rainwoodman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rainwoodman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rainwoodman/subscriptions",
      "organizations_url": "https://api.github.com/users/rainwoodman/orgs",
      "repos_url": "https://api.github.com/users/rainwoodman/repos",
      "events_url": "https://api.github.com/users/rainwoodman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rainwoodman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-27T21:21:23Z",
    "updated_at": "2019-03-27T21:21:23Z",
    "author_association": "NONE",
    "body": "tokenize has its problem too. What if the cell raises an IndentationError or SyntaxError before the string opening?\r\n\r\nYou may need to backtrack lines gradually, but then you are always expecting an error near the cursor due to the incomplete string declaration?"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/477494311",
    "html_url": "https://github.com/ipython/ipython/issues/11530#issuecomment-477494311",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11530",
    "id": 477494311,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NzQ5NDMxMQ==",
    "user": {
      "login": "martinRenou",
      "id": 21197331,
      "node_id": "MDQ6VXNlcjIxMTk3MzMx",
      "avatar_url": "https://avatars0.githubusercontent.com/u/21197331?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinRenou",
      "html_url": "https://github.com/martinRenou",
      "followers_url": "https://api.github.com/users/martinRenou/followers",
      "following_url": "https://api.github.com/users/martinRenou/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinRenou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinRenou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinRenou/subscriptions",
      "organizations_url": "https://api.github.com/users/martinRenou/orgs",
      "repos_url": "https://api.github.com/users/martinRenou/repos",
      "events_url": "https://api.github.com/users/martinRenou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinRenou/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-28T08:18:58Z",
    "updated_at": "2019-03-28T08:19:35Z",
    "author_association": "NONE",
    "body": "With tokenize I'm thinking of a simple logic like it is done in [`inputtransformer2.py`](https://github.com/ipython/ipython/blob/a37e39f79a6a30eb4c461783db74913590da80df/IPython/core/inputtransformer2.py#L478). There is some logic for knowing if the user is typing a list or a dictionary in the terminal, so that when pressing `enter` you do not execute the code, you put a new line:\r\n![test1](https://user-images.githubusercontent.com/21197331/55141165-13951080-513a-11e9-906a-51abd2176e49.png)\r\n![test2](https://user-images.githubusercontent.com/21197331/55141166-13951080-513a-11e9-8f25-601e757e1f87.png)\r\nMaybe we can try something equivalent with the `\"` and `'` characters (I can try to come up with a PR).\r\n\r\nAlso another idea could be to use regexp, I would be useless in this case though :P"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/477497296",
    "html_url": "https://github.com/ipython/ipython/issues/11530#issuecomment-477497296",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11530",
    "id": 477497296,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NzQ5NzI5Ng==",
    "user": {
      "login": "martinRenou",
      "id": 21197331,
      "node_id": "MDQ6VXNlcjIxMTk3MzMx",
      "avatar_url": "https://avatars0.githubusercontent.com/u/21197331?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinRenou",
      "html_url": "https://github.com/martinRenou",
      "followers_url": "https://api.github.com/users/martinRenou/followers",
      "following_url": "https://api.github.com/users/martinRenou/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinRenou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinRenou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinRenou/subscriptions",
      "organizations_url": "https://api.github.com/users/martinRenou/orgs",
      "repos_url": "https://api.github.com/users/martinRenou/repos",
      "events_url": "https://api.github.com/users/martinRenou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinRenou/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-28T08:28:50Z",
    "updated_at": "2019-03-28T08:28:50Z",
    "author_association": "NONE",
    "body": "> tokenize has its problem too. What if the cell raises an IndentationError or SyntaxError before the string opening\r\n\r\nI guess it would just not complete... What is the current behavior? Does the autocompletion still work when you have a SyntaxError in your code? We should check"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/477630620",
    "html_url": "https://github.com/ipython/ipython/issues/11530#issuecomment-477630620",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11530",
    "id": 477630620,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NzYzMDYyMA==",
    "user": {
      "login": "YubinXie",
      "id": 16257776,
      "node_id": "MDQ6VXNlcjE2MjU3Nzc2",
      "avatar_url": "https://avatars1.githubusercontent.com/u/16257776?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YubinXie",
      "html_url": "https://github.com/YubinXie",
      "followers_url": "https://api.github.com/users/YubinXie/followers",
      "following_url": "https://api.github.com/users/YubinXie/following{/other_user}",
      "gists_url": "https://api.github.com/users/YubinXie/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YubinXie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YubinXie/subscriptions",
      "organizations_url": "https://api.github.com/users/YubinXie/orgs",
      "repos_url": "https://api.github.com/users/YubinXie/repos",
      "events_url": "https://api.github.com/users/YubinXie/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YubinXie/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-28T14:55:20Z",
    "updated_at": "2019-03-28T14:55:20Z",
    "author_association": "NONE",
    "body": "Same issue after updating to 7.3.0."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/477703080",
    "html_url": "https://github.com/ipython/ipython/issues/11530#issuecomment-477703080",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11530",
    "id": 477703080,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NzcwMzA4MA==",
    "user": {
      "login": "rainwoodman",
      "id": 138060,
      "node_id": "MDQ6VXNlcjEzODA2MA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/138060?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rainwoodman",
      "html_url": "https://github.com/rainwoodman",
      "followers_url": "https://api.github.com/users/rainwoodman/followers",
      "following_url": "https://api.github.com/users/rainwoodman/following{/other_user}",
      "gists_url": "https://api.github.com/users/rainwoodman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rainwoodman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rainwoodman/subscriptions",
      "organizations_url": "https://api.github.com/users/rainwoodman/orgs",
      "repos_url": "https://api.github.com/users/rainwoodman/repos",
      "events_url": "https://api.github.com/users/rainwoodman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rainwoodman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-28T17:48:05Z",
    "updated_at": "2019-03-28T17:48:47Z",
    "author_association": "NONE",
    "body": "Yes it does work when you have a SyntaxError.\r\n\r\n\r\n![Screenshot from 2019-03-28 10-48-20](https://user-images.githubusercontent.com/138060/55180556-0d596100-5147-11e9-8618-50738ffd1461.png)\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/477715050",
    "html_url": "https://github.com/ipython/ipython/issues/11530#issuecomment-477715050",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11530",
    "id": 477715050,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NzcxNTA1MA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-28T18:19:56Z",
    "updated_at": "2019-03-28T18:19:56Z",
    "author_association": "MEMBER",
    "body": "IIRC `tokenize` is fairly robust about syntax errors - the kind of snippet you show can still be tokenised fine, the error would only come when you try to make sense of the tokens.\r\n\r\nI'm not sure what it would do with something like an unterminated string on the line before, which might be a syntax error at the tokenisation level."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/477889189",
    "html_url": "https://github.com/ipython/ipython/issues/11530#issuecomment-477889189",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/11530",
    "id": 477889189,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3Nzg4OTE4OQ==",
    "user": {
      "login": "Nicholas-Mitchell",
      "id": 12820901,
      "node_id": "MDQ6VXNlcjEyODIwOTAx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12820901?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Nicholas-Mitchell",
      "html_url": "https://github.com/Nicholas-Mitchell",
      "followers_url": "https://api.github.com/users/Nicholas-Mitchell/followers",
      "following_url": "https://api.github.com/users/Nicholas-Mitchell/following{/other_user}",
      "gists_url": "https://api.github.com/users/Nicholas-Mitchell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Nicholas-Mitchell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Nicholas-Mitchell/subscriptions",
      "organizations_url": "https://api.github.com/users/Nicholas-Mitchell/orgs",
      "repos_url": "https://api.github.com/users/Nicholas-Mitchell/repos",
      "events_url": "https://api.github.com/users/Nicholas-Mitchell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Nicholas-Mitchell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-29T06:51:33Z",
    "updated_at": "2019-03-29T06:51:33Z",
    "author_association": "NONE",
    "body": "Similar issues with the latest conda installation:\r\n```\r\npython                    3.7.3\r\nipykernel                 5.1.0              \r\nipython                   7.4.0           \r\n```\r\n\r\nI actually get **no** tab completion at all. Only within a function (shift+double-tab) do I get the docstring completion. No method completion on objects at all. Typing paths within strings does work as expected i.e. no global variables listed."
  }
]
