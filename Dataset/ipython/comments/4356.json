[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25836932",
    "html_url": "https://github.com/ipython/ipython/pull/4356#issuecomment-25836932",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4356",
    "id": 25836932,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODM2OTMy",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-07T19:19:03Z",
    "updated_at": "2013-10-07T19:19:03Z",
    "author_association": "MEMBER",
    "body": "First, thank @pelson for your work here...\n\nOK, some ideas about this PR:\n1. I do not think that the `\"-\"` type behaviour is actually a bug... When we develop the slide types, the `\"-\"` was conceived to mark a `do nothing cell`... and `do nothing` means that the cell marked as `\"-\"` has to be render when the slide containing it appears... no matter the \"status\" of the other cells. `fragments` lives at the cell level scope... if we want to make `fragment` more \"bigger\" (containing multiples cells), we have two possibilities: change the current design to incorporate a new \"meta-level\" (over the cells but under the subslides) or make a lot of change to get a workaround to read this new \"meta-level\", which point me to the next point...\n2. Here you are paying a lot of cost for little fix to a bug (which some of us probably do not consider it in that way)... I mean, you are doing a big refactor, with a lot of changes, just to have the new \"meta-level\"... and with this path the things get really complex... Just note than you need to introduce a way to encompass the slides, subslides, etc... that in the current implementation is very easily done with a few lines and jinja templating inheritance. When, we develop this feature, we previously developed a version very similar to the approach you are suggesting, and later when we see the other alternative, we switch to the simpler one for obvious reasons.\n3. I think there are very valuable ideas in this PR, but I also think that if we have to \"fix\" the `\"-\"` issue (we need to decide this first), we have to find a way which match better with the current design, keeping the simplicity of the implementation.\n\nObviously, my ideas can be biased, so I think it would be nice to listen to the other developers, and get a more comprehensive look (and decision) about this PR... pinging @Carreau @minrk \n\nAnd as final note, @pelson, if I sound \"rude\" is because I am just \"awful\" writing in English. I just want to give you my sincere feedback because you worked a lot in this PR. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25884401",
    "html_url": "https://github.com/ipython/ipython/pull/4356#issuecomment-25884401",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4356",
    "id": 25884401,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODg0NDAx",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-08T12:13:47Z",
    "updated_at": "2013-10-08T12:13:47Z",
    "author_association": "MEMBER",
    "body": "I completely understand the both point of view. And IIRC, that was one of the main point of disagreement on the first implementation of reveal JS, and is still a difference between live slideshow and reveal one. \n\nIndeed, it is hard in live slideshow to have the current fragment not shown, but still taking the space it should.\n\nLooking at original demo of reveal.js on [hakim-lab](http://lab.hakim.se/reveal-js/#/19/1), it feel like `-` should already be shown when the prefious `fragment` appear.\n\nAnd from a feature point of view, it is easier to do : \n- fragment\n- fragment \n- `-`\n\nand click 3 time on next \n\nThan dooing\n- fragment \n- `-`\n- `I want this slide to be show immediately before the previous fragment`\n\nBut I personally don't use reveal enought. \n\nWhat do you think of the following : \nNbconvert support dotted object name, to be imported, could you try to turn this into a proper package, \nand have it woking with nbconvert only through configuration ? This would be a perfect test of nbconvert API. \nIf some things are too complicated to do, then we can probably patch IPython to make configurability easier. \n\nIf we see that there is a strong user preference for the behavior of `-`, then we can consider making this the default.\n\nThought ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25980390",
    "html_url": "https://github.com/ipython/ipython/pull/4356#issuecomment-25980390",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4356",
    "id": 25980390,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTgwMzkw",
    "user": {
      "login": "dhirschfeld",
      "id": 881019,
      "node_id": "MDQ6VXNlcjg4MTAxOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/881019?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhirschfeld",
      "html_url": "https://github.com/dhirschfeld",
      "followers_url": "https://api.github.com/users/dhirschfeld/followers",
      "following_url": "https://api.github.com/users/dhirschfeld/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhirschfeld/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhirschfeld/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhirschfeld/subscriptions",
      "organizations_url": "https://api.github.com/users/dhirschfeld/orgs",
      "repos_url": "https://api.github.com/users/dhirschfeld/repos",
      "events_url": "https://api.github.com/users/dhirschfeld/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhirschfeld/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-09T15:26:28Z",
    "updated_at": "2013-10-09T15:26:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just a note from a user - I was going to report this \"bug\" myself when I came across this PR. The behaviour I would like is for \"-\" slides to be associated with the last fragment.\n\nIs seems to me that the current behaviour changes the order of appearance of the slides which I don't think is desirable and it prevents you from having more than one cell in a fragment. If you did want the current behaviour you could still get it by putting the slides in the order you want them to appear - i.e. put the \"-\" slide at the start, before the fragments. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/25995629",
    "html_url": "https://github.com/ipython/ipython/pull/4356#issuecomment-25995629",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4356",
    "id": 25995629,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTk1NjI5",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-09T18:26:01Z",
    "updated_at": "2013-10-09T18:26:01Z",
    "author_association": "MEMBER",
    "body": "> What do you think of the following : \n> Nbconvert support dotted object name, to be imported, could you try to turn this into a proper package, \n> and have it woking with nbconvert only through configuration ? This would be a perfect test of nbconvert API. \n> If some things are too complicated to do, then we can probably patch IPython to make configurability easier.\n\nIt seems a good path to do it... in the meantime I will try to think another way to do this following the design of the current implementation... to avoid paying too much with the complexity added... \n\n> If we see that there is a strong user preference for the behavior of -, then we can consider making this the default.\n\nYep, if lot of user ask for it, we have to consider this...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26587487",
    "html_url": "https://github.com/ipython/ipython/pull/4356#issuecomment-26587487",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4356",
    "id": 26587487,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTg3NDg3",
    "user": {
      "login": "pelson",
      "id": 810663,
      "node_id": "MDQ6VXNlcjgxMDY2Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/810663?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pelson",
      "html_url": "https://github.com/pelson",
      "followers_url": "https://api.github.com/users/pelson/followers",
      "following_url": "https://api.github.com/users/pelson/following{/other_user}",
      "gists_url": "https://api.github.com/users/pelson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pelson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pelson/subscriptions",
      "organizations_url": "https://api.github.com/users/pelson/orgs",
      "repos_url": "https://api.github.com/users/pelson/repos",
      "events_url": "https://api.github.com/users/pelson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pelson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-18T11:05:08Z",
    "updated_at": "2013-10-18T11:05:08Z",
    "author_association": "MEMBER",
    "body": "Hi @damianavila and @Carreau, thank you both for your responses. Sorry I've been quiet on this issue - I was landed with writing and delivering a numpy/matplotlib/cartopy/iris course with a fortnights lead time which I successfully delivered yesterday thanks to the incredible notebook (In the end the deadline was so tight that I didn't use the slide mode anyway, but this course was the reason I made the changes you see in this PR).\n\n>  if I sound \"rude\" is because I am just \"awful\" writing in English.\n\nNo problem @damianavila - I didn't take it as rude, I took it as passionate and keen to make sure the reveal implementation is the best it can possibly be.\n\nOn that front, I must start by saying that because the notebook is very linear (we all read from the top down after all) having a fragment cell followed by another non-fragment cell rendered in a different order with the reveal.js output is entirely counter-intuitive and I cannot imagine a situation where one would expect that to be the default behaviour. If you really want that functionality it should be possible (and is by putting in your own divs in the notebook itself) but I stand by the statement that the current implementation, whilst it may have been intentional, is a logical bug for the vast majority of use cases.\n\nIn response to the concern about the number of changes needed in this PR, I agree with your concerns, but in principle the change means that the \"what's a slide/fragment etc.\" logic is in the pre-processor, rather than in the templates. In practice this means that the templates have all of the necessary information to decide how they implement those pre-processed decisions (and they could still choose to implement their own logic if the format that they want to write to is archaic and irregular). What this means is that it is now even easier than it was before to create your own template for any automatic presentation generation, and so I believe the benefits of this re-factor outweigh the review/churn costs.\n\nFinally, there are other bugs with the reveal.js implementation which I've avoided addressing in this PR as I believe they will be far easier to fix once the pre-processor approach for slide identification is merged. (e.g. you can only have one \"notes\" section per slide currently).\n\nThanks for your time.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30558124",
    "html_url": "https://github.com/ipython/ipython/pull/4356#issuecomment-30558124",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4356",
    "id": 30558124,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTU4MTI0",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-14T02:45:23Z",
    "updated_at": "2013-12-14T02:45:23Z",
    "author_association": "MEMBER",
    "body": "Status ping on this PR - nothing's happened in a couple of months, and it has a merge conflict, so it would need a rebase. Is this about ready/needs more work/not such a good idea?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30559860",
    "html_url": "https://github.com/ipython/ipython/pull/4356#issuecomment-30559860",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4356",
    "id": 30559860,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTU5ODYw",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-14T04:09:25Z",
    "updated_at": "2013-12-14T04:09:25Z",
    "author_association": "MEMBER",
    "body": "I still think that the PR does not solve a \"real\" bug... It proposes another implementation of the slides which bring a lot of complexity to the slides codebase, for a little fix that some of us does not even see it as a \"fix\"...\n\nI also want to note that now reveal.js supports fragments indexing. So, the proposed \"bug\" could be easily fix using a custom converter which takes into account this index property... maybe it would be interesting to explore this new indexing possibility to be incorporated in the current implementation because it probably cost (a lot of) less than the implementation proposed by this PR.\n\nI thought about this PR a lot, taking into consideration all the points previously discussed... and I am still think in the same way I posted in the first answer...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30692558",
    "html_url": "https://github.com/ipython/ipython/pull/4356#issuecomment-30692558",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4356",
    "id": 30692558,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjkyNTU4",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-16T19:38:19Z",
    "updated_at": "2013-12-16T19:38:19Z",
    "author_association": "MEMBER",
    "body": "Thanks Damian. I'm going to close this PR for now - it doesn't currently merge cleanly, and you're mostly driving the slideshow stuff, so it's probably not going to go in if you're not happy with it.\n\n@pelson , @dhirschfeld : If there's still something you'd like to fix, please open an issue mentioning this PR to continue discussion of how best to approach it. Closing the PR doesn't delete the branch, so you can still refer to the changes here, and we can reopen if you convince @damianavila that it's the right approach after all. Thanks.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30842430",
    "html_url": "https://github.com/ipython/ipython/pull/4356#issuecomment-30842430",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4356",
    "id": 30842430,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwODQyNDMw",
    "user": {
      "login": "pelson",
      "id": 810663,
      "node_id": "MDQ6VXNlcjgxMDY2Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/810663?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pelson",
      "html_url": "https://github.com/pelson",
      "followers_url": "https://api.github.com/users/pelson/followers",
      "following_url": "https://api.github.com/users/pelson/following{/other_user}",
      "gists_url": "https://api.github.com/users/pelson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pelson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pelson/subscriptions",
      "organizations_url": "https://api.github.com/users/pelson/orgs",
      "repos_url": "https://api.github.com/users/pelson/repos",
      "events_url": "https://api.github.com/users/pelson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pelson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-18T13:47:57Z",
    "updated_at": "2013-12-18T13:47:57Z",
    "author_association": "MEMBER",
    "body": "Thanks for nudging @takluyver. I'm obviously disappointed that we weren't able to find a happy medium where the re-factoring that this change introduced couldn't be found - the \"complexity\" of this PR is not that high, it is well tested, and the code changes introduce a grouping that would simplify the implementation for other exporters - but at the end of the day I know that if the code can't be merged, there is absolutely no benefit to having a PR sat around.\n\nFinding a balance between what people want and what people are prepared to actually write and maintain is hard in open source software - at the end of the day @damianavila and others have put a _huge_ amount of work into developing the `reveal.js` exporter and in my book that counts for an awful lot. I must say though that in this particular case @damianavila, the behaviour being fixed/addressed by this PR is either a bug, or highly counter intuitive design - if it is the latter then either there is a higher level IPython feature missing (perhaps meta-levels as you describe), or it might be that we could find a means to enable the behaviour that myself, @dhirschfeld and @astrofrog (and I suspect many others) were expecting.\n\nI wont delete the branch - if there is anybody who is using it, please let me know in this PR issue tracker.\n\nThank you all for your time.\n\nPhil\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30846106",
    "html_url": "https://github.com/ipython/ipython/pull/4356#issuecomment-30846106",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4356",
    "id": 30846106,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwODQ2MTA2",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-18T14:38:19Z",
    "updated_at": "2013-12-18T14:38:19Z",
    "author_association": "MEMBER",
    "body": "> I must say though that in this particular case @damianavila, the behaviour being fixed/addressed by this PR is either a bug, or highly counter intuitive design - if it is the latter then either there is a higher level IPython feature missing (perhaps meta-levels as you describe), or it might be that we could find a means to enable the behaviour that myself, @dhirschfeld and @astrofrog (and I suspect many others) were expecting.\n\n@pelson as I said before.. I am pretty concern about your needs in this \"bug/counter intituive design\", I just think that the proposed implementation is not the correct one (not about the code itself, which is very good)... I mean in terms of cost/benefit ratio... \nBUT, I want to let you know that I am working in a solution which will keep the current design BUT ALSO gives you the possibility to have your desired behaviour... Just I need a little time to get something enough solid to PR...\n\nThanks for your comments, it is always a pleasure to discuss with you (although we don't agree in this case :wink:).\n\nDamián.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/30852880",
    "html_url": "https://github.com/ipython/ipython/pull/4356#issuecomment-30852880",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4356",
    "id": 30852880,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwODUyODgw",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-18T15:55:31Z",
    "updated_at": "2013-12-18T15:55:31Z",
    "author_association": "MEMBER",
    "body": "> Finding a balance between what people want and what people are prepared to actually write and maintain is hard in open source software - at the end of the day @damianavila and others have put a huge amount of work into developing the reveal.js exporter and in my book that counts for an awful lot.\n\nAnd usually as core developer those are hard decision to take, we like some feature but try to keep IPython as minimal as possible and try to do things right even if it takes times. This is one of the reason I made the [contrib organisation](https://github.com/ipython-contrib) where the standard are much lower, but in the mean-time we do not guaranty that things will work out of the box. \n\nNotebook took 6 prototype to achieve what we have now, this is the second (even third if we count all the work @jdfreder as done after I re-did all from scratch) and I think it will not be the last. \n\nThings like what you did are definitively helpful in narrowing done was is not right with nbconvert.\n\nOne really usefull things would be to convert this into an extension (I'm sure it is possible) and write some docs at the same time on how to write a nbconvert extension.\n\nAs a side note, I think that right now with around ~40 opened PRs is is really difficult to give feedback and to review discussed all the PRs and that may be one supplemental factor. I hope we can squash most of them soon to get back into fast dev cycle. \n"
  }
]
