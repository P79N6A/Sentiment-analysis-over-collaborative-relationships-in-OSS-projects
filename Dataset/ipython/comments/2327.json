[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7948491",
    "html_url": "https://github.com/ipython/ipython/pull/2327#issuecomment-7948491",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2327",
    "id": 7948491,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5NDg0OTE=",
    "user": {
      "login": "travisbot",
      "id": 1516820,
      "node_id": "MDQ6VXNlcjE1MTY4MjA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1516820?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/travisbot",
      "html_url": "https://github.com/travisbot",
      "followers_url": "https://api.github.com/users/travisbot/followers",
      "following_url": "https://api.github.com/users/travisbot/following{/other_user}",
      "gists_url": "https://api.github.com/users/travisbot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/travisbot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/travisbot/subscriptions",
      "organizations_url": "https://api.github.com/users/travisbot/orgs",
      "repos_url": "https://api.github.com/users/travisbot/repos",
      "events_url": "https://api.github.com/users/travisbot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/travisbot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-22T20:37:20Z",
    "updated_at": "2012-08-22T20:37:20Z",
    "author_association": "NONE",
    "body": "This pull request [passes](http://travis-ci.org/ipython/ipython/builds/2205312) (merged e6b063b8 into 5308c36d).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7948494",
    "html_url": "https://github.com/ipython/ipython/pull/2327#issuecomment-7948494",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2327",
    "id": 7948494,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5NDg0OTQ=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-22T20:37:22Z",
    "updated_at": "2012-08-22T20:37:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Strangely, both of the following test routines raised an exception `RemoteError: NameError(global name 'a' is not defined)` but I can't figure out why.\n\n```\n        r = view.apply_sync(lambda : a.b)\n        self.assertEqual(r, 128)\n```\n\n```\n        r = view.apply_sync(lambda name: eval(name), 'a.b')\n        self.assertEqual(r, 128)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/7951412",
    "html_url": "https://github.com/ipython/ipython/pull/2327#issuecomment-7951412",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2327",
    "id": 7951412,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5NTE0MTI=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-22T21:08:17Z",
    "updated_at": "2012-08-22T21:08:17Z",
    "author_association": "MEMBER",
    "body": "@bfroehle it's the global namespace.  `globals` for those lambdas are the `test_view` module unless you decorate them with `@interactive` (equivalent to having typed them interactively).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8015917",
    "html_url": "https://github.com/ipython/ipython/pull/2327#issuecomment-8015917",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2327",
    "id": 8015917,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMTU5MTc=",
    "user": {
      "login": "thisch",
      "id": 206581,
      "node_id": "MDQ6VXNlcjIwNjU4MQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/206581?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thisch",
      "html_url": "https://github.com/thisch",
      "followers_url": "https://api.github.com/users/thisch/followers",
      "following_url": "https://api.github.com/users/thisch/following{/other_user}",
      "gists_url": "https://api.github.com/users/thisch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thisch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thisch/subscriptions",
      "organizations_url": "https://api.github.com/users/thisch/orgs",
      "repos_url": "https://api.github.com/users/thisch/repos",
      "events_url": "https://api.github.com/users/thisch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thisch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-24T21:52:29Z",
    "updated_at": "2012-08-24T21:52:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "@bfroehle this should fix your problem:\n\n``` diff\ndiff --git a/IPython/parallel/tests/test_view.py b/IPython/parallel/tests/test\nindex 3858d2c..67fbc10 100644\n--- a/IPython/parallel/tests/test_view.py\n+++ b/IPython/parallel/tests/test_view.py\n@@ -685,12 +685,12 @@ def test_nested_getitem_setitem(self):\n             ]), block=True)\n         ra = pmod.Reference('a')\n\n-        r = view.apply_sync(lambda x: x.b, ra)\n+        r = view.apply_sync(interactive(lambda x: x.b, ra))\n         self.assertEqual(r, 128)\n         self.assertEqual(view['a.b'], 128)\n\n         view['a.b'] = 0\n\n-        r = view.apply_sync(lambda x: x.b, ra)\n+        r = view.apply_sync(interactive(lambda x: x.b, ra))\n         self.assertEqual(r, 0)\n         self.assertEqual(view['a.b'], 0)\n```\n\nthx @minrk\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8016951",
    "html_url": "https://github.com/ipython/ipython/pull/2327#issuecomment-8016951",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2327",
    "id": 8016951,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMTY5NTE=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-24T22:44:34Z",
    "updated_at": "2012-08-24T22:44:34Z",
    "author_association": "MEMBER",
    "body": "@thisch you slightly misunderstood.  The code as it is works fine.  When you need the interactive wrapper is if you rely on module globals for name resolution.\n\nThere are two approaches:\n1. use `Reference`:\n   \n   ``` python\n   r = view.apply_sync(lambda x: x.b, Reference('a'))\n   ```\n2. use `@interactive`:\n   \n   ``` python\n   r = view.apply_sync(interactive(lambda : a.b))\n   ```\n\nOne does not need to use both (at least not to resolve the same name).\n"
  }
]
