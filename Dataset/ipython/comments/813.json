[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2155878",
    "html_url": "https://github.com/ipython/ipython/pull/813#issuecomment-2155878",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/813",
    "id": 2155878,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNTU4Nzg=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-21T13:29:11Z",
    "updated_at": "2011-09-21T13:29:11Z",
    "author_association": "MEMBER",
    "body": "Yes, the %autocall state is in the kernel, which isn't necessarily running Qt code. There was some discussion on PR #507 about publishing 'status change' messages from the kernel, which is what you'd need for this.\n\nThe length of the current session's history is `len(get_ipython().history_manager.input_hist_raw)`.\n\nWith respect to menus, recent versions of Ubuntu also have an OS X style menubar at the top of the screen. I don't know anything about the protocols used to pull it out, but it's worth bearing in mind. I can test if you don't have an Ubuntu machine handy.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2156838",
    "html_url": "https://github.com/ipython/ipython/pull/813#issuecomment-2156838",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/813",
    "id": 2156838,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNTY4Mzg=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-21T14:52:05Z",
    "updated_at": "2011-09-21T14:52:05Z",
    "author_association": "MEMBER",
    "body": "Thank you for history length, I'll also read #507 to see if I can grab more information.\n\nIf i'm not wrong, Ubuntu menubar is automatically put on the top of the screen, but I don't see an easy way to test if IPython run on ubuntu with unity, and IMHO having a menubar should be an configurable option.\n\nI'll be glad to have feedback with testing and first thought about the UI. Especially menu order. Does it feel natural, in the right place. For example, should the increase/decrease/restore font size be in a sub-menu...\n\nI'm hoping to have some people in my lab drop matlab for (I)Python, and I know that User Interface is a great deal for them, and should be as natural as possible.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2157194",
    "html_url": "https://github.com/ipython/ipython/pull/813#issuecomment-2157194",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/813",
    "id": 2157194,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNTcxOTQ=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-21T15:21:58Z",
    "updated_at": "2011-09-21T15:21:58Z",
    "author_association": "MEMBER",
    "body": "I'll knock out the platform test and have a go with the menubar later. If it's useful, it could make sense to enable it by default.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2160550",
    "html_url": "https://github.com/ipython/ipython/pull/813#issuecomment-2160550",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/813",
    "id": 2160550,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNjA1NTA=",
    "user": {
      "login": "epatters",
      "id": 316610,
      "node_id": "MDQ6VXNlcjMxNjYxMA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/316610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/epatters",
      "html_url": "https://github.com/epatters",
      "followers_url": "https://api.github.com/users/epatters/followers",
      "following_url": "https://api.github.com/users/epatters/following{/other_user}",
      "gists_url": "https://api.github.com/users/epatters/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/epatters/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/epatters/subscriptions",
      "organizations_url": "https://api.github.com/users/epatters/orgs",
      "repos_url": "https://api.github.com/users/epatters/repos",
      "events_url": "https://api.github.com/users/epatters/events{/privacy}",
      "received_events_url": "https://api.github.com/users/epatters/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-21T20:17:02Z",
    "updated_at": "2011-09-21T20:17:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Carreau, this is a great start. Thanks.\n\nThe actions that were added to ConsoleWidget and HistoryConsoleWidget need to be moved from the widget level to the application level. They could go into qtconsoleapp.py, but I think it would worth splitting the MainWindow class out of that file into, say, main_window.py, and then adding the actions there. This will prevent qtconsoleapp.py from growing too large.\n\nI apologize for being so anal about this, but it's important to understand that the Qt console is both a library component and an application. Every time you add a new feature, you should ask yourself: \"Is this feature core functionality that all developers using the widget will want, or is this feature application-specific and not something that all application builders will want?\" If the former, the relevant code should go into ConsoleWidget, FrontendWidget, etc. as appropriate; otherwise, it should go into the application-level code.\n\nThanks again for the work!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2165568",
    "html_url": "https://github.com/ipython/ipython/pull/813#issuecomment-2165568",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/813",
    "id": 2165568,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNjU1Njg=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-22T09:18:06Z",
    "updated_at": "2011-09-22T09:18:06Z",
    "author_association": "MEMBER",
    "body": "@epatters, \n\nYou're more involve in this than me, so you're better at knowing where to put the code, and I don't mind beeing corrected.\n\nI don't really have an scheme on inheritance in my head but my thought was not to implement an action in a widget if i'm not sure the  fonctionnality will be present.\n\n(sorry, I cant find exactly how to say it in english, so i'll give an example, and don't hesitate to correct me if some sentences are incorrect)\n\nAs I'm not sure `_frontend` in `MainWindow` does have an 'history' , so I thought putting everything dealing with history the highest in the hierarchy where I know it will exist (ie `HistoryConsoleWidget`) . Also, some code might start messing with class internals (eg `pasteMagic` call the private member `_keyboard_quit`) , and so I thought it might be better not to add all action in qapplication. Also if there is some internal changes, definig the actions inside the widget have less chance to break something.\n\nOf course, If you're concerned about interference with people using it as library; Maybe setting no shortcut with the action and disabling it by default might be a compromize. And those action will still be Availlable 'for free' if anyone subclass or need it.\n\nAnyway, i'll bend to your will if you think all the code should be moved inside `main_window.py`.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2167139",
    "html_url": "https://github.com/ipython/ipython/pull/813#issuecomment-2167139",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/813",
    "id": 2167139,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNjcxMzk=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-22T13:33:34Z",
    "updated_at": "2011-09-22T13:33:34Z",
    "author_association": "MEMBER",
    "body": "@takluyver, about history length (again sorry), \nwhen you are actually wrinting in a console you can get the history length by executing `len(get_ipython().history_manager.input_hist_raw)` \nbut my question was more :\nhow do I get a `IPython.zmq.zmqshell.ZMQInteractiveShell` reference when I am actually _in the code_ of the qt console (`IPython/frontend/qt/console/console_widget.py` for example)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2167239",
    "html_url": "https://github.com/ipython/ipython/pull/813#issuecomment-2167239",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/813",
    "id": 2167239,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNjcyMzk=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-22T13:46:35Z",
    "updated_at": "2011-09-22T13:46:35Z",
    "author_association": "MEMBER",
    "body": "You can't get a reference to the object, because the frontend is running in a separate process. You have to submit that expression to the kernel. You can use the `user_expressions` field on any execute_request. and interrogate the execute_reply. We might supply a more convenient way to do this in the future, but that's what should work now.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2171151",
    "html_url": "https://github.com/ipython/ipython/pull/813#issuecomment-2171151",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/813",
    "id": 2171151,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzExNTE=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-22T19:19:31Z",
    "updated_at": "2011-09-22T19:19:31Z",
    "author_association": "MEMBER",
    "body": "@takluyver,\nThank you, with your indication and the help of the documentation, I was able to fetch the history length, and by default save the whole session.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2190743",
    "html_url": "https://github.com/ipython/ipython/pull/813#issuecomment-2190743",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/813",
    "id": 2190743,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTA3NDM=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-25T12:27:39Z",
    "updated_at": "2011-09-25T12:27:39Z",
    "author_association": "MEMBER",
    "body": "about splitting qtConsoleApp and mainWIndow into 2 files, is there a clean way to 'explain' it to git for the merging/rebasing to append without glitch ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2192226",
    "html_url": "https://github.com/ipython/ipython/pull/813#issuecomment-2192226",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/813",
    "id": 2192226,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTIyMjY=",
    "user": {
      "login": "epatters",
      "id": 316610,
      "node_id": "MDQ6VXNlcjMxNjYxMA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/316610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/epatters",
      "html_url": "https://github.com/epatters",
      "followers_url": "https://api.github.com/users/epatters/followers",
      "following_url": "https://api.github.com/users/epatters/following{/other_user}",
      "gists_url": "https://api.github.com/users/epatters/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/epatters/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/epatters/subscriptions",
      "organizations_url": "https://api.github.com/users/epatters/orgs",
      "repos_url": "https://api.github.com/users/epatters/repos",
      "events_url": "https://api.github.com/users/epatters/events{/privacy}",
      "received_events_url": "https://api.github.com/users/epatters/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-25T18:27:35Z",
    "updated_at": "2011-09-25T18:27:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "Don't worry about Git. It will either mark one of the new files as renamed from the old one (with modifications) or show two new files and one deleted file, depending upon the extent of the changes. In any case, you do not have to do anything special.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2261022",
    "html_url": "https://github.com/ipython/ipython/pull/813#issuecomment-2261022",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/813",
    "id": 2261022,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNjEwMjI=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-02T08:35:45Z",
    "updated_at": "2011-10-02T08:35:45Z",
    "author_association": "MEMBER",
    "body": "Hi, \nStill working on the qtconsole. I'm trying to add tabs to it, but i've a question.\n`IPython.frontent.qt.console.frontend_widget` deal with `shutdown_request` adressed from another console attached to the same kernel by a `sys.exit(0)` ...which of course close all the tabs if you have several (and might close an application if it's using qtconsole as library ?)\n\nShould we change it to a hook and deal with it at a higher level ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2262749",
    "html_url": "https://github.com/ipython/ipython/pull/813#issuecomment-2262749",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/813",
    "id": 2262749,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNjI3NDk=",
    "user": {
      "login": "epatters",
      "id": 316610,
      "node_id": "MDQ6VXNlcjMxNjYxMA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/316610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/epatters",
      "html_url": "https://github.com/epatters",
      "followers_url": "https://api.github.com/users/epatters/followers",
      "following_url": "https://api.github.com/users/epatters/following{/other_user}",
      "gists_url": "https://api.github.com/users/epatters/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/epatters/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/epatters/subscriptions",
      "organizations_url": "https://api.github.com/users/epatters/orgs",
      "repos_url": "https://api.github.com/users/epatters/repos",
      "events_url": "https://api.github.com/users/epatters/events{/privacy}",
      "received_events_url": "https://api.github.com/users/epatters/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-02T16:21:23Z",
    "updated_at": "2011-10-02T16:21:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Carreau, you're absolutely right. `FrontendWidget` should not be implementing this logic, and it certainly shouldn't be calling `sys.exit`. We should move this to a higher level.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2330155",
    "html_url": "https://github.com/ipython/ipython/pull/813#issuecomment-2330155",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/813",
    "id": 2330155,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzAxNTU=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-08T02:05:09Z",
    "updated_at": "2011-10-08T02:05:09Z",
    "author_association": "MEMBER",
    "body": "Hey guys, just a quick note: I haven't followed the PR, but right now it doesn't merge cleanly anymore.  Sorry about that, there's been enough churn on master lately that some PRs fell behind.\n\nSo this one needs a rebase before we can proceed further, let us know if you need a hand with that.\n\nUnless you guys have decided you want to take a different approach altogether with a new PR, I'll leave that up to you.  I just want to give you a heads-up b/c I'm starting to map out the landscape to plan for an 0.12 release, and un-mergeable PRs will be obviously an issue there.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2330953",
    "html_url": "https://github.com/ipython/ipython/pull/813#issuecomment-2330953",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/813",
    "id": 2330953,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzA5NTM=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-08T07:48:08Z",
    "updated_at": "2011-10-08T07:48:08Z",
    "author_association": "MEMBER",
    "body": "Yep, i've seen, and i've a new rebased branch on the 'fixing trailing space commit'. I can force push it.\n\nI'm for now strugling with 'correct' tab management. \nlike for example if you have multiple tabs (1 master owning the kernel and N attached to the same) and close the owning tabs with all the attached tabs, it asks you N times \"do you want to restart the kernel\".\nOf course there are way, but then some other behaviour get strange and i'm thinking of reworking tab management by keeping in mainWindow a map between frontends/kernels and who is owning what.\n\nWon't have much time for now, but still thinking.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2331394",
    "html_url": "https://github.com/ipython/ipython/pull/813#issuecomment-2331394",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/813",
    "id": 2331394,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzEzOTQ=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-08T10:12:54Z",
    "updated_at": "2011-10-08T10:12:54Z",
    "author_association": "MEMBER",
    "body": "Off the top of my head, would it make sense to deal with a menubar for now, and look into adding tabs later?\n\nWhat would the use case be for having N tabs attached to one kernel?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2332689",
    "html_url": "https://github.com/ipython/ipython/pull/813#issuecomment-2332689",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/813",
    "id": 2332689,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzI2ODk=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-08T16:15:56Z",
    "updated_at": "2011-10-08T16:15:56Z",
    "author_association": "MEMBER",
    "body": "If you want the menubar for 0.12, it's easier. Adding tabs change a lot of code because you need to send the action to the correct frontend even if the action is the same in the menu. That's why I thought of doing it, even if tabs may be deactivated. It foces me to write a good code that has less chances to break while adding 'only' tabs.\n\nFor the N tabs, personaly I'm using it in the way that i've some data loded on one kernel. I have the plots on 1 tab. A tab where I do some test/try some commands, and a tab where I actually do calculation on the data. Then if i'm looking for something in my history I can visually scroll up in the right tab. I would like later to be able to export/save the content/history of only one of the tabs for later use versus the history/content of the whole session. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2336052",
    "html_url": "https://github.com/ipython/ipython/pull/813#issuecomment-2336052",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/813",
    "id": 2336052,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzYwNTI=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-09T10:33:25Z",
    "updated_at": "2011-10-09T10:33:25Z",
    "author_association": "MEMBER",
    "body": "Hi, i've done a force push of a rebased branch. \nIt should merge without issues with the latest master.\nI try my best not to change the current comportement  when not using tabs.\n\nThe issues is that the 'first' tabs is handeld separately as it depends on the command line options.\nA good idea might be to add a 'tab with custom flags' option and create it through this action.\nAnd it is also the only one to go through the init_color.\n\nI'm waiting for your feedback.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2341448",
    "html_url": "https://github.com/ipython/ipython/pull/813#issuecomment-2341448",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/813",
    "id": 2341448,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDE0NDg=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-09T22:11:07Z",
    "updated_at": "2011-10-09T22:11:07Z",
    "author_association": "MEMBER",
    "body": "Just a note here: if we end up deciding that the binary files are to be avoided, we'll want to rebase this PR before merging, wiping out those commits from the history.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2341759",
    "html_url": "https://github.com/ipython/ipython/pull/813#issuecomment-2341759",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/813",
    "id": 2341759,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDE3NTk=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-09T23:31:46Z",
    "updated_at": "2011-10-09T23:31:46Z",
    "author_association": "MEMBER",
    "body": "A bit more feedback, now that I got it running with pyside:\n- if I connect to an existing kernel, then new tabs stay with that kernel even if you request a new kernel.\n- the menu entries should have keyboard accelerators.\n- tabs should be named 'Kernel 0', 'kernel 1', etc, instead of 'no name 0'...\n- Ctrl pgup/pgdown should move between tabs, it's the standard web browser tab-navigation key binding.\n\nBut overall this is looking great! This may need more fine-tuning, but it's definitely looking excellent and useful.  Thanks for the great work, and with a bit more polish, as well as @epatters' guidance on the architecture, I'm sure it will be a great contribution.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2343479",
    "html_url": "https://github.com/ipython/ipython/pull/813#issuecomment-2343479",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/813",
    "id": 2343479,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDM0Nzk=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-10T06:56:32Z",
    "updated_at": "2011-10-10T06:56:32Z",
    "author_association": "MEMBER",
    "body": "1.) Right missed that, correction on it's way.\n2.) I'll do it, but I'm not sure it will be consistent with other program..\n3.) fix also on it's way.\n4.) i'll add that and maybe something like setting the new tab as active. same while closing.\n\nI'll also take a look at the qt resources files.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2347923",
    "html_url": "https://github.com/ipython/ipython/pull/813#issuecomment-2347923",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/813",
    "id": 2347923,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDc5MjM=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-10T14:41:28Z",
    "updated_at": "2011-10-10T14:41:28Z",
    "author_association": "MEMBER",
    "body": "Could you try 60cdd23 , I've issues with PyQt4/matplotlib on my side and can't test if it's really avoiding dependency on PySide.\n\nAlso Mac os doesn't have Keyboard Accelerator, So if you can test and tell me if it feel consistent with other applications.\n\nNote that for now, the last closing widget might not own the last existing kernel. \nDo you think we should allow the last frontend to be closed with kernels still running or prompt the user with a \"close all remainig kernel?\". Maybe add more kernel managing option from the menu bar when there are no more frontend attached to it ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2354510",
    "html_url": "https://github.com/ipython/ipython/pull/813#issuecomment-2354510",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/813",
    "id": 2354510,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTQ1MTA=",
    "user": {
      "login": "epatters",
      "id": 316610,
      "node_id": "MDQ6VXNlcjMxNjYxMA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/316610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/epatters",
      "html_url": "https://github.com/epatters",
      "followers_url": "https://api.github.com/users/epatters/followers",
      "following_url": "https://api.github.com/users/epatters/following{/other_user}",
      "gists_url": "https://api.github.com/users/epatters/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/epatters/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/epatters/subscriptions",
      "organizations_url": "https://api.github.com/users/epatters/orgs",
      "repos_url": "https://api.github.com/users/epatters/repos",
      "events_url": "https://api.github.com/users/epatters/events{/privacy}",
      "received_events_url": "https://api.github.com/users/epatters/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-11T01:36:46Z",
    "updated_at": "2011-10-11T01:36:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "This coming along nicely. Thanks @Carreau!\n\nI commented on the RC issue above, as well as a few other issues. My only other comment at this point is that you should try to avoid camel case names unless Qt requires that you use one.\n\nI still need to review the changes to the main application file, but I cannot at this moment. I will take a closer look soon.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2358211",
    "html_url": "https://github.com/ipython/ipython/pull/813#issuecomment-2358211",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/813",
    "id": 2358211,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTgyMTE=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-11T08:03:18Z",
    "updated_at": "2011-10-11T08:03:18Z",
    "author_association": "MEMBER",
    "body": "@epatters , I've change most of what you asked.\nand changed cammelCase to name_with_underscore in afew not-verry-descriptive commits. I just push as it is and re-work on it later.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2401815",
    "html_url": "https://github.com/ipython/ipython/pull/813#issuecomment-2401815",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/813",
    "id": 2401815,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDE4MTU=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-13T23:56:33Z",
    "updated_at": "2011-10-13T23:56:33Z",
    "author_association": "MEMBER",
    "body": "Hey @Carreau,\n\nsorry this is taking a while, but since it's effectively making a 'real app' out of the little terminal, we really want to spend some time polishing things so it's as good as can be.  We appreciate your patience with the feedback, I think this is going to be a big usability plus that will make both new and experienced users happy (as there's a litlte bit for each kind).  Some more comments, now in what I think is the homestretch of polish so we can merge:\n- The help menu currently doesn't do anything.  At the very least, it could offer the following entries:\n- Intro to IPython: basically call `?`, which shows a little intro in the pager.\n- IPython quick reference: call `%quickref`\n- IPython Qt console quick reference: call `%guiref`\n- IPython documentation: use the `webbrowser` module to open the IPython documentation url at http://ipython.org/ipython-doc/stable/index.html.\n- I'm not totally sold on the magic menu.  We have a ton of them, what's your design vision here?  To offer a subset of common/useful ones?  If so, what was your selection criterium for discarding some?\n- There should be a keybinding to hide/show the menubar itself, probably ctrl-m, along with a menu entry for it.  That's par for the course in terminals, as experienced users tend to be super-minimalistic and like their terminals very clean.\n- A screen clear is a good candidate for a menu entry.  `Ctrl-L` does it, but most people don't know this.  Probably in the window menu.\n- Entries to interrupt (ctrl-C) and restart (Ctrl-.) kernels.\n- The edit menu should have the various select/cut/copy options that are in the right-click menu.\n\nThinking more about the above, here's a suggestion for menu restructuring: \n- New top-level Kernel menu with the content of the current window menu (since those are really about starting/accessing kernels).  \n- Window menu: move the font stuff thre, as well as the menubar toggle and screen clear entries.\n- Font menu: remove.\n- Edit menu: add shortcuts as indicated above.\n- Help menu: see above.\n- Magic menu: see discussion above.\n\nIf you think you can do this, it would be _awesome_.  And as far as I'm concerned, we'd be good to go.  I will however hold off for the final OK from @epatters on the Qt code architecture, as I'm not really qualified to review that code at this point.\n\nThanks again for this great work!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2401860",
    "html_url": "https://github.com/ipython/ipython/pull/813#issuecomment-2401860",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/813",
    "id": 2401860,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDE4NjA=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-14T00:01:54Z",
    "updated_at": "2011-10-14T00:01:54Z",
    "author_association": "MEMBER",
    "body": "Oops: I have no idea why, but at least on my system, with this branch, the resulting consoles don't close anymore.  Whether I type `exit` or try to close the window, nothing happens.  I can only kill it by going to the starting terminal and killing the process.  At that point, I see the terminal is being flooded with messages like that say `QCoreApplication::exec: The event loop is already running`.  Once I interrupt, the traceback is:\n\n<pre>\nKeyboardInterrupt                         Traceback (most recent call last)\n/home/fperez/usr/lib/python2.6/site-packages/IPython/zmq/ipkernel.pyc in do_one_iteration(self=<IPython.zmq.ipkernel.QtKernel object>)\n    120             self.handlers[msg_type] = getattr(self, msg_type)\n    121 \n--> 122     def do_one_iteration(self):\n        global d = undefined\n        global i = undefined\n        global t = undefined\n    123         \"\"\"Do one iteration of the kernel's evaluation loop.\n    124         \"\"\"\n\nKeyboardInterrupt: \n</pre>\n\n\nSo there's definitely a problem here at the moment...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2405280",
    "html_url": "https://github.com/ipython/ipython/pull/813#issuecomment-2405280",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/813",
    "id": 2405280,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDUyODA=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-14T10:35:39Z",
    "updated_at": "2011-10-14T10:35:39Z",
    "author_association": "MEMBER",
    "body": "@fperez,\n\n> The help menu currently doesn't do anything. At the very least, it could offer the following entries:\n> Intro to IPython: basically call ?, which shows a little intro in the pager.\n> IPython quick reference: call %quickref\n> IPython Qt console quick reference: call %guiref\n\nI'll do it \n\n> IPython documentation: use the webbrowser module to open the IPython documentation url at http://ipython.org/ipython-doc/stable/index.html.\n\nThat's a mistake there is an `_open_online_help()`, but i've put it on  darwin only, I'll fixe.\n\n> I'm not totally sold on the magic menu. We have a ton of them, what's your design vision here? To offer a subset of common/useful ones? If so, what was your selection criterium for discarding some?\n\nI was thinking of using '%ls_magic' to fetch everything availlable and 'build' an \"other magic\" menu \nwith maybe a filtering of specially handled magic, with shortcut etc... but i'm not sure how to do it.\nI'm stuck on the fact that the action in menu should not trigger an action on a widget, but on the 'current' widget\n\n> There should be a keybinding to hide/show the menubar itself, probably ctrl-m, along with a menu entry for it. That's par >for the course in terminals, as experienced users tend to be super-minimalistic and like their terminals very clean.\n\nI totally agree\n\n> A screen clear is a good candidate for a menu entry. Ctrl-L does it, but most people don't know this. Probably in the >window menu.\n\nshould decide of the how to handle all magic before\n\n> Entries to interrupt (ctrl-C) and restart (Ctrl-.) kernels.\n> The edit menu should have the various select/cut/copy options that are in the right-click menu.\n\nI agree also\n\n> Thinking more about the above, here's a suggestion for menu restructuring:\n> New top-level Kernel menu with the content of the current window menu (since those are really about starting/accessing kernels).\n\nI've plan for kernel, not sure how now, but I should keep track of 'orphan' kernel and give a way to reattach console ok kill them\n\n> Window menu: move the font stuff thre, as well as the menubar toggle and screen clear entries.\n> Font menu: remove.\n> Edit menu: add shortcuts as indicated above.\n> Help menu: see above.\n\nWill add some conditionnal code for mac at least\n\n> Magic menu: see discussion above.\n> \n> If you think you can do this, it would be awesome. And as far as I'm concerned, we'd be good to go. I will however hold >off for the final OK from @epatters on the Qt code architecture, as I'm not really qualified to review that code at this point.\n\nI'll do my best, but i'm not sure i'll find the right way to do things. especially for '%ls_magic' to generate a menu.\n\n> Thanks again for this great work!\n\nabout your exiting problem. the only things I see can affect the behaviour is in `frontend_widget.py` where i change the `exit_request()` and `sys.exit()` by `exit_request(*self*)`\n\n@epatters,\ntry/except might be from the time when there wasn't any tabs... will try to see if it is still necessary and why it was.\n\nWill patch/comment on other message later\n--\nMatthias\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2408955",
    "html_url": "https://github.com/ipython/ipython/pull/813#issuecomment-2408955",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/813",
    "id": 2408955,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDg5NTU=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-14T17:08:30Z",
    "updated_at": "2011-10-14T17:08:30Z",
    "author_association": "MEMBER",
    "body": "This is looking good!  I was worried that it would conflict with recently merged PR #847, but in fact it still merges cleanly.\n\nA few changes would need to be made, as KernelManagers are now created a little bit differently (via connection files instead  of specifying all the addresses, and the KernelManager has one ip and a set of ports, rather than a collection of ip/port addresses).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2414576",
    "html_url": "https://github.com/ipython/ipython/pull/813#issuecomment-2414576",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/813",
    "id": 2414576,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTQ1NzY=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-15T08:24:34Z",
    "updated_at": "2011-10-15T08:24:34Z",
    "author_association": "MEMBER",
    "body": "Hi, \nCould someone test showing/hiding menubar as it can't be hidden on mac ? \nAre shortcut still availlable when hidden ?\n\nI've also not yet assigned shortcut to interupt/restart kernel, because Ctrl+C is used for both Interrupting end Copy. I need to test if it's preventing one or the other event to go through if assigned. And if it is the case find a better way to handle it.\n\nI suppose I can retrieve the content of `%lsmagic` by using  `user_expressions`, is there a better way ? like dirrectly all magic strings in a list ? \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2414638",
    "html_url": "https://github.com/ipython/ipython/pull/813#issuecomment-2414638",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/813",
    "id": 2414638,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTQ2Mzg=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-15T08:42:01Z",
    "updated_at": "2011-10-15T08:42:01Z",
    "author_association": "MEMBER",
    "body": "On Sat, Oct 15, 2011 at 1:24 AM, Bussonnier Matthias\nreply@reply.github.com\nwrote:\n\n> I suppose I can retrieve the content of `%lsmagic` by using  `user_expressions`, is there a better way ? like dirrectly all magic strings in a list ?\n\n%lsmagic is just a thin wrapper for printing around\n\nget_ipython().lsmagic()\n\nwhich does return a list.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2418258",
    "html_url": "https://github.com/ipython/ipython/pull/813#issuecomment-2418258",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/813",
    "id": 2418258,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTgyNTg=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-15T23:30:32Z",
    "updated_at": "2011-10-15T23:30:32Z",
    "author_association": "MEMBER",
    "body": "just have been robed, all my laptop stolen... won't be back for a while...\ngood luck\n"
  }
]
