[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8028346",
    "html_url": "https://github.com/ipython/ipython/pull/2340#issuecomment-8028346",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2340",
    "id": 8028346,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMjgzNDY=",
    "user": {
      "login": "travisbot",
      "id": 1516820,
      "node_id": "MDQ6VXNlcjE1MTY4MjA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1516820?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/travisbot",
      "html_url": "https://github.com/travisbot",
      "followers_url": "https://api.github.com/users/travisbot/followers",
      "following_url": "https://api.github.com/users/travisbot/following{/other_user}",
      "gists_url": "https://api.github.com/users/travisbot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/travisbot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/travisbot/subscriptions",
      "organizations_url": "https://api.github.com/users/travisbot/orgs",
      "repos_url": "https://api.github.com/users/travisbot/repos",
      "events_url": "https://api.github.com/users/travisbot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/travisbot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-25T23:05:17Z",
    "updated_at": "2012-08-25T23:05:17Z",
    "author_association": "NONE",
    "body": "This pull request [passes](http://travis-ci.org/ipython/ipython/builds/2238326) (merged 41d3f075 into f4616c97).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8138581",
    "html_url": "https://github.com/ipython/ipython/pull/2340#issuecomment-8138581",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2340",
    "id": 8138581,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxMzg1ODE=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-29T19:49:09Z",
    "updated_at": "2012-08-29T19:49:09Z",
    "author_association": "MEMBER",
    "body": "Can you tweak it so that purge_hub_results and purge_local_results are called by `local/remote` switches in `purge_results`?  That way there can be a single call for dropping everything, and a single docstring for people to look at for discarding unused data, whether it be on the Client or on the Hub.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8139245",
    "html_url": "https://github.com/ipython/ipython/pull/2340#issuecomment-8139245",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2340",
    "id": 8139245,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxMzkyNDU=",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-29T20:09:33Z",
    "updated_at": "2012-08-29T20:09:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "I would argue against this: it would be confusing to have two different \"interfaces\" (hub \"results\" and client \"cache\") merged into in here and that replacing the original one:\n\nWhat would `purge_results(local=True, hub=False, jobs=[msg_ids...])` do? Or remove some kwargs, so that's only a switch between purge everything local and everything on the hub? Would this mean errors for users who update? \n\nI would be more in favor to add a deprecation warning to the old `purge_results` method (I've actually looked if there are any `deprecated`decorators used in IPython, but couldn't find anything).\n\nAnyway: If you want to have a certain interface I have no problem implementing it. :-)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8141593",
    "html_url": "https://github.com/ipython/ipython/pull/2340#issuecomment-8141593",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2340",
    "id": 8141593,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxNDE1OTM=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-29T21:19:48Z",
    "updated_at": "2012-08-29T21:19:48Z",
    "author_association": "MEMBER",
    "body": "There are two reasons for this:\n1. users are already calling purge_results as it is now, expecting it to do the the functionality you are adding here, and being disappointed.\n2. purging the local cache should absolutely support purging _subsets_, just like the remote purge does.  The local cache purge should support everything the remote one does (by ID, by engine ID, dump all).\n\nSo the choice is either\n\nA) two methods with identical signatures for purging local and remote result caches\nB) one method that does both / either based on args.\n\nHonestly, I think both, where the existing `purge_results()` wraps the local/remote methods with default args that reproduces current behavior) makes the most sense.  Further, the two names should reflect that they are simply remote/local versions of the same call (`purge_results_on_hub` and `purge_client_caches` do not accurately reflect this symmetry, perhaps `purge_local_results` and `purge_hub_results`).\n\nThe Hub is a cache of finished results, just like the local dict.  It just happens to be remote.\n\nPurging results is really just saying \"I'm done with this data, and I don't want it taking up resources anymore\".  It's only a question of whose resources you want to stop taking up.  The Client's, the Hub's, or both?  I can think of no reason that dealing with the two should be different.\n\n> What would purge_results(local=True, hub=False, jobs=[msg_ids...]) do?\n\nIt should remove just those IDs from the local cache.\n\nIf you want to keep the current call (purge local cache, history and all) as something like `client.forget_everything()`, that's fine too.  I imagine it is something people will want often enough to get its own call (I certainly want it when I do long running benchmarks).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8142232",
    "html_url": "https://github.com/ipython/ipython/pull/2340#issuecomment-8142232",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2340",
    "id": 8142232,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxNDIyMzI=",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-29T21:40:54Z",
    "updated_at": "2012-08-29T21:40:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, will do.\n\nAfter trying to understand the client-controller connections I would actually rename `purge_hub_results()` to  `purge_controller_results()` so that the terminology \"hub\" (or scheduler) doesn't even show up: you use a cluster with a controller and engines and the client connects to the controller.\n\nSo my idea would be \n- `client.purge_all_caches()` # purges local and remote result caches and the history, no arguments\n- `client.purge_local_results(...all or per ids...)` # like the current purge_results interface\n- `client.purge_controller_results(...all or per ids)` # just a rename\n- `client.purge_results(...all or per ids...)` # convenience method for deleting both on local and on remote -> API Change as it deletes from local too.\n\nAlso change the docstrings to \"purge the _cached_ results\" so that it is clear that it is a cache of already computed results.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8142603",
    "html_url": "https://github.com/ipython/ipython/pull/2340#issuecomment-8142603",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2340",
    "id": 8142603,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxNDI2MDM=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-29T21:54:05Z",
    "updated_at": "2012-08-29T21:54:05Z",
    "author_association": "MEMBER",
    "body": "On Wed, Aug 29, 2012 at 2:40 PM, JanSchulz notifications@github.com wrote:\n\n> Ok, will do.\n> \n> After trying to understand the client-controller connections I would\n> actually rename purge_hub_results() to purge_controller_results() so that\n> the terminology \"hub\" (or scheduler) doesn't even show up: you use a\n> cluster with a controller and engines and the client connects to the\n> controller.\n> \n> I don't agree on this one.  The Controller is really a deprecated notion\n> from the old Twisted days.  What we used to call a 'controller' is really a\n> collection of loosely associated processes - one Hub and several\n> Schedulers.  The coupling of Hub/Scheduler lives _entirely_ in the\n> ipcontroller startup script.  Ultimately, it will be possible to add and\n> remove schedulers, which will be necessary for scaling to large numbers of\n> engines, and implementing better broadcast.  I think the 'Controller' term\n> is actively detrimental to understanding the IPython cluster, and is what\n> should go away, not Hub.\n> \n> So my idea would be\n> - client.purge_all_caches() # purges local and remote result caches\n>   and the history, no arguments\n> - client.purge_local_results(...all or per ids...) # like the current\n>   purge_results interface\n> - client.purge_controller_results(...all or per ids) # just a rename\n> - client.purge_results(...all or per ids...) # convenience method for\n>   deleting both on local and on remote -> API Change as it deletes from local\n>   too.\n> \n> Also change the docstrings to \"purge the _cached_ results\" so that it is\n> clear that it is a cache of already computed results.\n> \n> Sounds good, with two minor adjustments:\n1. s/controller/hub\n2. rename `purge_all_caches` to something more generic/destructive like\n   `purge_everything`.  'caches' is not accurate because it purges _more_ than\n   caches.  It's actually removing the history and disabling a security\n   feature, neither of which are accurately described as caches.\n\n>  —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/pull/2340#issuecomment-8142232.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/8437462",
    "html_url": "https://github.com/ipython/ipython/pull/2340#issuecomment-8437462",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2340",
    "id": 8437462,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0Mzc0NjI=",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-10T20:36:50Z",
    "updated_at": "2012-09-10T21:40:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "All Tests which access the hub history fail with an error. I've no idea why :-(\n\n```\n======================================================================\nERROR: test_purge_hub_results (IPython.parallel.tests.test_client.TestClient)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\data\\jschulz\\workspace\\ipython\\IPython\\parallel\\tests\\test_client.py\", line 412, in test_purge_hub_results\n    hist = self.client.hub_history()\n  File \"<string>\", line 2, in hub_history\n  File \"C:\\data\\jschulz\\workspace\\ipython\\IPython\\parallel\\client\\client.py\", line 70, in spin_first\n    return f(self, *args, **kwargs)\n  File \"C:\\data\\jschulz\\workspace\\ipython\\IPython\\parallel\\client\\client.py\", line 1776, in hub_history\n    raise self._unwrap_exception(content)\nRemoteError: TypeError(can't compare datetime.datetime to NoneType)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/9013648",
    "html_url": "https://github.com/ipython/ipython/pull/2340#issuecomment-9013648",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2340",
    "id": 9013648,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwMTM2NDg=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-30T13:28:57Z",
    "updated_at": "2012-09-30T13:28:57Z",
    "author_association": "MEMBER",
    "body": "I think we haven't seen you posted a commit that fixed the test. \nPinging @minrk as he already reviewed the first part.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/9014428",
    "html_url": "https://github.com/ipython/ipython/pull/2340#issuecomment-9014428",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2340",
    "id": 9014428,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwMTQ0Mjg=",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-30T15:09:36Z",
    "updated_at": "2012-09-30T15:09:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "From my understanding the error comes from something in the hub history lookup code on the hub side, not from something in the client code: the exception is also in untouched codepaths (by this patches) and before any new code is called during this test case (side effect from other test cases due to \"recycling\" of the hub side?)\n\nUnfortunately I have no idea how to debug this as I can't see where this error is raised. :-( Is there any way to get at the stacktrace of the exception on the hub side?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11912577",
    "html_url": "https://github.com/ipython/ipython/pull/2340#issuecomment-11912577",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2340",
    "id": 11912577,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExOTEyNTc3",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-05T10:43:03Z",
    "updated_at": "2013-01-05T10:43:03Z",
    "author_association": "MEMBER",
    "body": "Trying to revive old PRs.\n\nShould we do something in particular with this one ? assign someone ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11920671",
    "html_url": "https://github.com/ipython/ipython/pull/2340#issuecomment-11920671",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2340",
    "id": 11920671,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExOTIwNjcx",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-05T22:04:18Z",
    "updated_at": "2013-01-05T22:04:18Z",
    "author_association": "MEMBER",
    "body": "I'll pick up review in a week or so, just wrapping some things up right now.  Assigning to myself.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12247202",
    "html_url": "https://github.com/ipython/ipython/pull/2340#issuecomment-12247202",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2340",
    "id": 12247202,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMjQ3MjAy",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-15T00:10:39Z",
    "updated_at": "2013-01-15T00:10:39Z",
    "author_association": "MEMBER",
    "body": "This looks good to me, thanks for your patience @JanSchulz!\nSince I can't reproduce the RemoteError you mention,\nand it is in a code path you didn't touch, I don't think we need to worry about it here.\nI expect I know where it is (sorting / date comparisons in the Hub, or the Hub's DB object),\nso I can have a look at that myself.\n\n@JanSchulz if you don't have anything more to add here,\nI will go ahead and merge.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/12257275",
    "html_url": "https://github.com/ipython/ipython/pull/2340#issuecomment-12257275",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/2340",
    "id": 12257275,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMjU3Mjc1",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-15T08:12:59Z",
    "updated_at": "2013-01-15T08:12:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm fine. Thanks for your help and comments with this PR!\n"
  }
]
