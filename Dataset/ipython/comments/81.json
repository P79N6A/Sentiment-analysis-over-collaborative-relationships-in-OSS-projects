[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/236206",
    "html_url": "https://github.com/ipython/ipython/issues/81#issuecomment-236206",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/81",
    "id": 236206,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjIwNg==",
    "user": {
      "login": "ipython",
      "id": 230453,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjIzMDQ1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/230453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ipython",
      "html_url": "https://github.com/ipython",
      "followers_url": "https://api.github.com/users/ipython/followers",
      "following_url": "https://api.github.com/users/ipython/following{/other_user}",
      "gists_url": "https://api.github.com/users/ipython/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ipython/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ipython/subscriptions",
      "organizations_url": "https://api.github.com/users/ipython/orgs",
      "repos_url": "https://api.github.com/users/ipython/repos",
      "events_url": "https://api.github.com/users/ipython/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ipython/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2010-05-10T09:38:33Z",
    "updated_at": "2011-11-30T07:38:20Z",
    "author_association": "COLLABORATOR",
    "body": "[ LP comment 1 by: Fernando Perez, on 2010-04-25 01:48:04.569902+00:00 ]\n\nNo, see this comment in the code:\n\n```\n# RegExp to exclude strings with this start from autocalling.  In\n# particular, all binary operators should be excluded, so that if foo is\n# callable, foo OP bar doesn't become foo(OP bar), which is invalid.\n```\n\nSince any callable X could potentially also implement arithmetic, so that\n\n```\nX+1\n```\n\nis as valid as (and different from!):\n\n```\nX(1)\n```\n\nWe can't autocall on _any_ binary operator.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/236207",
    "html_url": "https://github.com/ipython/ipython/issues/81#issuecomment-236207",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/81",
    "id": 236207,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjIwNw==",
    "user": {
      "login": "ipython",
      "id": 230453,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjIzMDQ1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/230453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ipython",
      "html_url": "https://github.com/ipython",
      "followers_url": "https://api.github.com/users/ipython/followers",
      "following_url": "https://api.github.com/users/ipython/following{/other_user}",
      "gists_url": "https://api.github.com/users/ipython/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ipython/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ipython/subscriptions",
      "organizations_url": "https://api.github.com/users/ipython/orgs",
      "repos_url": "https://api.github.com/users/ipython/repos",
      "events_url": "https://api.github.com/users/ipython/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ipython/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2010-05-10T09:38:34Z",
    "updated_at": "2010-05-10T09:38:34Z",
    "author_association": "COLLABORATOR",
    "body": "[ LP comment 2 by: Dirk Muders, on 2010-04-26 07:54:38.604015+00:00 ]\n\nI understand that argument. In our application we have created a user CLI based on IPython, partially because of being able to omit the parentheses. This makes it easier for users who are unfamiliar with Python but who have used other interfaces that do not need the parentheses. The case with signs (of course mostly the \"-\" sign) as first characters often occurs in our interface, hence the default IPython behavior breaks the general behavior of our interface and is thus undesirable. We are working with a locally modified version of IPython, but it would be nice to have an \"official\" switch to choose between the two options. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/236208",
    "html_url": "https://github.com/ipython/ipython/issues/81#issuecomment-236208",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/81",
    "id": 236208,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjIwOA==",
    "user": {
      "login": "ipython",
      "id": 230453,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjIzMDQ1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/230453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ipython",
      "html_url": "https://github.com/ipython",
      "followers_url": "https://api.github.com/users/ipython/followers",
      "following_url": "https://api.github.com/users/ipython/following{/other_user}",
      "gists_url": "https://api.github.com/users/ipython/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ipython/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ipython/subscriptions",
      "organizations_url": "https://api.github.com/users/ipython/orgs",
      "repos_url": "https://api.github.com/users/ipython/repos",
      "events_url": "https://api.github.com/users/ipython/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ipython/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2010-05-10T09:38:35Z",
    "updated_at": "2011-11-30T07:38:33Z",
    "author_association": "COLLABORATOR",
    "body": "[ LP comment 3 by: Fernando Perez, on 2010-04-26 19:21:31.005203+00:00 ]\n\nWell, if you are embedding IPython yourselves, you can try doing something like (this is code for trunk, the imports will be slightly different for 0.10):\n\n```\nimport re\nfrom IPython.core import prefilter\n\nprefilter.re_exclude_auto = re.compile('your regexp here')\n\n# rest of your code...\n```\n\nLet me know if this works for you.  If it does what you need OK, you have a workaround for now, and I'll then refactor the code to have an official API for this.\n\nI've reopened the bug so it stays tracked.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/236209",
    "html_url": "https://github.com/ipython/ipython/issues/81#issuecomment-236209",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/81",
    "id": 236209,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjIwOQ==",
    "user": {
      "login": "ipython",
      "id": 230453,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjIzMDQ1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/230453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ipython",
      "html_url": "https://github.com/ipython",
      "followers_url": "https://api.github.com/users/ipython/followers",
      "following_url": "https://api.github.com/users/ipython/following{/other_user}",
      "gists_url": "https://api.github.com/users/ipython/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ipython/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ipython/subscriptions",
      "organizations_url": "https://api.github.com/users/ipython/orgs",
      "repos_url": "https://api.github.com/users/ipython/repos",
      "events_url": "https://api.github.com/users/ipython/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ipython/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2010-05-10T09:38:36Z",
    "updated_at": "2010-05-10T09:38:36Z",
    "author_association": "COLLABORATOR",
    "body": "[ LP comment 4 by: Dirk Muders, on 2010-04-27 07:23:54.060105+00:00 ]\n\nWe are using IPython directly and we are currently working with a version that we edited in prefilter.py. Next time we upgrade IPython we would have to re-introduce this modification. For the time being we can work this way.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/236210",
    "html_url": "https://github.com/ipython/ipython/issues/81#issuecomment-236210",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/81",
    "id": 236210,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjIxMA==",
    "user": {
      "login": "ipython",
      "id": 230453,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjIzMDQ1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/230453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ipython",
      "html_url": "https://github.com/ipython",
      "followers_url": "https://api.github.com/users/ipython/followers",
      "following_url": "https://api.github.com/users/ipython/following{/other_user}",
      "gists_url": "https://api.github.com/users/ipython/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ipython/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ipython/subscriptions",
      "organizations_url": "https://api.github.com/users/ipython/orgs",
      "repos_url": "https://api.github.com/users/ipython/repos",
      "events_url": "https://api.github.com/users/ipython/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ipython/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "created_at": "2010-05-10T09:38:37Z",
    "updated_at": "2010-05-10T09:38:37Z",
    "author_association": "COLLABORATOR",
    "body": "[ LP comment 5 by: Fernando Perez, on 2010-04-27 18:08:52+00:00 ]\n\nOK.  Since the upcoming 0.11 release is going to be somewhat of a\n'tech preview' (many apis will change), when we put it out we're going\nto ask for a lot of feedback from anyone making embedded uses of it.\nAt that point, we can look at a good api for this (and possibly other\nfiltering-related things).\n\nDo ping us to remind us when the discussion on api requests comes up,\nwe want feedback from embedded users on all possible needs.\n\nCheers,\n\nf\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3022880",
    "html_url": "https://github.com/ipython/ipython/issues/81#issuecomment-3022880",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/81",
    "id": 3022880,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjI4ODA=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-05T20:35:43Z",
    "updated_at": "2011-12-05T20:35:43Z",
    "author_association": "MEMBER",
    "body": "@fperez, from reading the discussion, it seems like this is a 'working as intended' thing.  Or do we want to keep it open as a feature request for optional disabling of autocall protection of binary operators?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5586806",
    "html_url": "https://github.com/ipython/ipython/issues/81#issuecomment-5586806",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/81",
    "id": 5586806,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODY4MDY=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-08T21:22:22Z",
    "updated_at": "2012-05-08T21:22:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sounds like this should just get closed, although I did whip up a proof-of-concept which makes the regular expression configurable.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5586895",
    "html_url": "https://github.com/ipython/ipython/issues/81#issuecomment-5586895",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/81",
    "id": 5586895,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODY4OTU=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-08T21:26:04Z",
    "updated_at": "2012-05-08T21:26:04Z",
    "author_association": "MEMBER",
    "body": "I'm not opposed to making that  a configurable.  Just the regexp pattern, which is simply a string, can be configurable by the users.  If they pass a messed-up regexp that leads to non-sensical behavior, it's their own fault.  I expect very few people would use this, but for some such as the OP, it could be a useful knob to tweak without having to monkeypatch us.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5587051",
    "html_url": "https://github.com/ipython/ipython/issues/81#issuecomment-5587051",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/81",
    "id": 5587051,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODcwNTE=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-08T21:32:02Z",
    "updated_at": "2012-05-08T21:32:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "Should I open a pull request for https://github.com/bfroehle/ipython/compare/_81_autocall_exclude_configurable ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5614840",
    "html_url": "https://github.com/ipython/ipython/issues/81#issuecomment-5614840",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/81",
    "id": 5614840,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MTQ4NDA=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-09T23:46:20Z",
    "updated_at": "2012-05-09T23:46:20Z",
    "author_association": "MEMBER",
    "body": "This will be closed by #1713, in the sense that users are now able to _configure_ this behavior.  We won't change our defaults, but now it's a trivial user-facing change.\n"
  }
]
