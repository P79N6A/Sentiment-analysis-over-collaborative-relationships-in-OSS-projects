[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/75831524",
    "html_url": "https://github.com/ipython/ipython/issues/7845#issuecomment-75831524",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7845",
    "id": 75831524,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1ODMxNTI0",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-24T19:49:26Z",
    "updated_at": "2015-02-24T19:49:26Z",
    "author_association": "MEMBER",
    "body": "Culprit is here: https://github.com/ipython/ipython/blob/18f0eb2e6e1c706e8b4a7ac84578665f322f1dbc/IPython/core/formatters.py#L614\n\nIn order to make float formatting configurable, we format floats using a format string stored in a traitlet. Since this is working with text, it uses a Unicode traitlet. The result is that all floats are formatted as unicode strings, but then when they're in a container with something that has a non-ascii bytes repr (like this example), it fails to concatenate them together. In master, the traceback shows the problem better:\n\n```\n---------------------------------------------------------------------------\nUnicodeDecodeError                        Traceback (most recent call last)\n/home/takluyver/.local/lib/python2.7/site-packages/IPython/core/formatters.py in __call__(self, obj)\n    696             printer.flush()\n    697             print('--', stream.buflist)\n--> 698             return stream.getvalue()\n    699 \n    700 \n\n/usr/lib/python2.7/StringIO.pyc in getvalue(self)\n    269         _complain_ifclosed(self.closed)\n    270         if self.buflist:\n--> 271             self.buf += ''.join(self.buflist)\n    272             self.buflist = []\n    273         return self.buf\n\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xd1 in position 0: ordinal not in range(128)\n```\n\nThe proper fix would be to make `IPython.lib.pretty` unicode aware throughout. A dirty fix would probably be to force floats back to bytes on Python 2.\n\nThis won't be top of my priority list. If non-ascii reprs are really important to you, I'd strongly recommend using Python 3.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/75852193",
    "html_url": "https://github.com/ipython/ipython/issues/7845#issuecomment-75852193",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7845",
    "id": 75852193,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1ODUyMTkz",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-24T21:40:05Z",
    "updated_at": "2015-02-24T21:40:05Z",
    "author_association": "MEMBER",
    "body": "I took a stab at this one earlier in #7853. Not sure it's a complete fix, though.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/75908491",
    "html_url": "https://github.com/ipython/ipython/issues/7845#issuecomment-75908491",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7845",
    "id": 75908491,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1OTA4NDkx",
    "user": {
      "login": "maximvl",
      "id": 949890,
      "node_id": "MDQ6VXNlcjk0OTg5MA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/949890?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maximvl",
      "html_url": "https://github.com/maximvl",
      "followers_url": "https://api.github.com/users/maximvl/followers",
      "following_url": "https://api.github.com/users/maximvl/following{/other_user}",
      "gists_url": "https://api.github.com/users/maximvl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maximvl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maximvl/subscriptions",
      "organizations_url": "https://api.github.com/users/maximvl/orgs",
      "repos_url": "https://api.github.com/users/maximvl/repos",
      "events_url": "https://api.github.com/users/maximvl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maximvl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-25T05:37:40Z",
    "updated_at": "2015-02-25T05:37:40Z",
    "author_association": "NONE",
    "body": "@takluyver thank you for fast answer, looks like the time to try python 3 has come.\n"
  }
]
