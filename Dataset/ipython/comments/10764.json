[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/326094539",
    "html_url": "https://github.com/ipython/ipython/issues/10764#issuecomment-326094539",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10764",
    "id": 326094539,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjA5NDUzOQ==",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-30T19:29:39Z",
    "updated_at": "2017-08-31T17:20:49Z",
    "author_association": "MEMBER",
    "body": "Thank you for your report. We are not currently clearing out system modules via a `%reset`. Following a `%reset -f` you can verify that `import sys; sys.modules['dummy_mem']` will still show your modules. \r\n\r\nSome of this stemmed from a lack of support for unloading of modules in Python2 (see [this Python bug report](http://bugs.python.org/issue9072)), but we may be able to revisit this now that only Python 3 is supported, though I don't know what the current status is for unloading modules after they were imported in Python. I recall that completely unloading C-extensions was impossible, so here a numpy example may be subject to that."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/326101995",
    "html_url": "https://github.com/ipython/ipython/issues/10764#issuecomment-326101995",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10764",
    "id": 326101995,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjEwMTk5NQ==",
    "user": {
      "login": "arman00",
      "id": 23243866,
      "node_id": "MDQ6VXNlcjIzMjQzODY2",
      "avatar_url": "https://avatars2.githubusercontent.com/u/23243866?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arman00",
      "html_url": "https://github.com/arman00",
      "followers_url": "https://api.github.com/users/arman00/followers",
      "following_url": "https://api.github.com/users/arman00/following{/other_user}",
      "gists_url": "https://api.github.com/users/arman00/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arman00/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arman00/subscriptions",
      "organizations_url": "https://api.github.com/users/arman00/orgs",
      "repos_url": "https://api.github.com/users/arman00/repos",
      "events_url": "https://api.github.com/users/arman00/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arman00/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-30T19:59:26Z",
    "updated_at": "2017-08-30T19:59:26Z",
    "author_association": "NONE",
    "body": "I see. Thank you a lot for clearly explaining the current situation."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/326104072",
    "html_url": "https://github.com/ipython/ipython/issues/10764#issuecomment-326104072",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10764",
    "id": 326104072,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjEwNDA3Mg==",
    "user": {
      "login": "AraHaan",
      "id": 15173749,
      "node_id": "MDQ6VXNlcjE1MTczNzQ5",
      "avatar_url": "https://avatars0.githubusercontent.com/u/15173749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AraHaan",
      "html_url": "https://github.com/AraHaan",
      "followers_url": "https://api.github.com/users/AraHaan/followers",
      "following_url": "https://api.github.com/users/AraHaan/following{/other_user}",
      "gists_url": "https://api.github.com/users/AraHaan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AraHaan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AraHaan/subscriptions",
      "organizations_url": "https://api.github.com/users/AraHaan/orgs",
      "repos_url": "https://api.github.com/users/AraHaan/repos",
      "events_url": "https://api.github.com/users/AraHaan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AraHaan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-30T20:07:42Z",
    "updated_at": "2017-08-30T21:20:09Z",
    "author_association": "NONE",
    "body": "~~Actually unloading modules should be possible including C extensions on windows if you use ``importlib.unload``. Not sure if ``importlib.unload`` would call the ``FreeLibrary`` in Windows though.~~\r\n\r\nI think loading the C extensions call ``LoadLibrary`` but I would definately think importlib can call the ``FreeLibrary`` on it. https://msdn.microsoft.com/en-us/library/windows/desktop/ms683152(v=vs.85).aspx\r\n\r\nThe way to know for sure is asking someone who worked on making importlib the way it is currently. Maybe they might know for sure. Or better try to read importlib's implementation. I think some of importlib was implemented in C itself.\r\n\r\nEdit: Unloading modules is currently not possible under importlib."
  }
]
