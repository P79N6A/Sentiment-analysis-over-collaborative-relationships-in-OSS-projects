[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/49914871",
    "html_url": "https://github.com/ipython/ipython/pull/6192#issuecomment-49914871",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6192",
    "id": 49914871,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTE0ODcx",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-23T18:27:58Z",
    "updated_at": "2014-07-23T18:27:58Z",
    "author_association": "MEMBER",
    "body": "I'm not entirely convinced by this. I feel like there will be lots of cases where just passing a single value to a constructor isn't what you want, and lots more where it will accept something of the wrong type but then behave in unexpected ways, thus defeating the point of having traitlets checking types in the first place.\n\nWhat are you actually trying to achieve?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/49915798",
    "html_url": "https://github.com/ipython/ipython/pull/6192#issuecomment-49915798",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6192",
    "id": 49915798,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTE1Nzk4",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-23T18:35:07Z",
    "updated_at": "2014-07-23T18:35:07Z",
    "author_association": "MEMBER",
    "body": "I sort of agree with @takluyver - the entire point of traits is type strictness. I am fine having casting traits, but the low validation barrier in this case is way too liberal and I think would lead to more problems (wrong type accepted) that not.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/49915864",
    "html_url": "https://github.com/ipython/ipython/pull/6192#issuecomment-49915864",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6192",
    "id": 49915864,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTE1ODY0",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-23T18:35:39Z",
    "updated_at": "2014-07-23T18:35:39Z",
    "author_association": "MEMBER",
    "body": "also agree with @takluyver - what is the usage case for this? Maybe there is a better way of getting the same effect.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/49932277",
    "html_url": "https://github.com/ipython/ipython/pull/6192#issuecomment-49932277",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6192",
    "id": 49932277,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTMyMjc3",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-23T20:43:07Z",
    "updated_at": "2014-07-23T20:48:01Z",
    "author_association": "MEMBER",
    "body": "A use case, for example, is a numpy instance trait, where you want to easily support assigning a nested list as well as an actual numpy array.  Another use case would be Sage Integers or RealNumber objects, for example (where there is a natural conversion from ints and floats).\n\n@takluyver, there are lots of situations where there is a natural way to convert a single value, and this helps, exactly as having CInt and CFloat traits helps take the user burden and annoyance factor down.  \n\n@ellisonbg: the validation barrier is exactly as high as the klass constructor makes it, or as the `_cast` function makes it.  We leave it to the class designer or trait designer (when overriding `_cast`) to be as strict or as loose as they want.  They can probably do a better job making the decision in their use case than we can not knowing their use case.\n\nI'm happy keeping this in my own codebase rather than trying to push it upstream if you'd rather not have it in the base traits machinery.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/49933937",
    "html_url": "https://github.com/ipython/ipython/pull/6192#issuecomment-49933937",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6192",
    "id": 49933937,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTMzOTM3",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-23T20:55:08Z",
    "updated_at": "2014-07-23T20:55:08Z",
    "author_association": "MEMBER",
    "body": "To date, however, not many class designers think about traits APIs when designing their class constructors.\n\nI can see the use of it for things like an Integer class, but I'm not convinced that it's general enough to warrant inclusion\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/49934398",
    "html_url": "https://github.com/ipython/ipython/pull/6192#issuecomment-49934398",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6192",
    "id": 49934398,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTM0Mzk4",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-23T20:58:09Z",
    "updated_at": "2014-07-23T21:02:14Z",
    "author_association": "MEMBER",
    "body": "@takluyver: that's why `_cast` is overridable.\n\nBut, take it or leave it.  I'll not force it on you guys.  The thing is that with the widgets machinery, I bet interest in traitlets and constructing different types of traitlets will go up.  This change is meant to make it easier for people to implement custom traitlets.  I think it's a general enough idea to warrant inclusion in the base traitlets class, but it's your call.\n\nLet me know if you want to accept this, and then I'll write some tests for it. Otherwise, close the pull request, and I won't be offended :smile:.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/49935374",
    "html_url": "https://github.com/ipython/ipython/pull/6192#issuecomment-49935374",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6192",
    "id": 49935374,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTM1Mzc0",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-23T21:04:45Z",
    "updated_at": "2014-07-23T21:04:45Z",
    "author_association": "MEMBER",
    "body": "I can certainly imagine there will be more interest in traitlets, and maybe as we pick up more use cases, this will turn out to be a good generalisation. But at present, I'm not convinced that it is.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/49936358",
    "html_url": "https://github.com/ipython/ipython/pull/6192#issuecomment-49936358",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6192",
    "id": 49936358,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTM2MzU4",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-23T21:12:04Z",
    "updated_at": "2014-07-23T21:12:04Z",
    "author_association": "MEMBER",
    "body": "I am all for casting traits in general. But I am hesitant to have a `CInstance` with a default implementation that blindly tries to cast as this does. In this case, I would prefer folks to implement their own subclass that has custom casting logic. I would be more open to this if `CInstance` were an ABC-like entity with no default casting behavior.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/49941938",
    "html_url": "https://github.com/ipython/ipython/pull/6192#issuecomment-49941938",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6192",
    "id": 49941938,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTQxOTM4",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-23T21:56:37Z",
    "updated_at": "2014-07-23T21:56:37Z",
    "author_association": "MEMBER",
    "body": "That's fine.  Like I said, close the PR if you want; I won't be offended in the least.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/50042129",
    "html_url": "https://github.com/ipython/ipython/pull/6192#issuecomment-50042129",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6192",
    "id": 50042129,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMDQyMTI5",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-24T16:24:04Z",
    "updated_at": "2014-07-24T16:24:04Z",
    "author_association": "MEMBER",
    "body": "@ellisonbg: are you saying that you'd be fine if I changed it so that `_cast` raised a NotImplementedError?  I'm fine with that change.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/50045530",
    "html_url": "https://github.com/ipython/ipython/pull/6192#issuecomment-50045530",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6192",
    "id": 50045530,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMDQ1NTMw",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-24T16:50:41Z",
    "updated_at": "2014-07-24T16:50:41Z",
    "author_association": "MEMBER",
    "body": "To my mind, if you have to define a new traitlet class anyway to use it, there's not a whole lot of point - it will take more effort to understand the use of the parent class than it would to just implement a casting whatever traitlet from scratch. But I don't feel strongly about any of this.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/50191950",
    "html_url": "https://github.com/ipython/ipython/pull/6192#issuecomment-50191950",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6192",
    "id": 50191950,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTkxOTUw",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-25T19:11:03Z",
    "updated_at": "2014-07-25T19:11:03Z",
    "author_association": "MEMBER",
    "body": "I think that @takluyver 's last thought about the need to subclass still convinces me. I think we should close this and just have users do the casting by hand in their subclass.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/50344668",
    "html_url": "https://github.com/ipython/ipython/pull/6192#issuecomment-50344668",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6192",
    "id": 50344668,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMzQ0NjY4",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-28T14:23:22Z",
    "updated_at": "2014-07-28T14:23:22Z",
    "author_association": "MEMBER",
    "body": "I was writing my subclasses, but then refactored to pull out this class in this PR.  But I'm happy you guys made a decision on it.\n"
  }
]
