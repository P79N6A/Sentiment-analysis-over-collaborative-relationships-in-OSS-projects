[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21267640",
    "html_url": "https://github.com/ipython/ipython/pull/3695#issuecomment-21267640",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3695",
    "id": 21267640,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjY3NjQw",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-19T18:20:49Z",
    "updated_at": "2013-07-19T18:20:49Z",
    "author_association": "MEMBER",
    "body": "Looks good to me.  I can open a PR later adding Win support.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21268688",
    "html_url": "https://github.com/ipython/ipython/pull/3695#issuecomment-21268688",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3695",
    "id": 21268688,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjY4Njg4",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-19T18:37:00Z",
    "updated_at": "2013-07-19T18:38:13Z",
    "author_association": "MEMBER",
    "body": "You could have waited a little before merging this...\n\nAdding this kind of things was exactly what I was hopping to avoid.\nThe display data priority should match 1 to 1 with the mimetype of the notebook. \nIf we add PDF, for latex, then why not add : \n- tif\n- gif\n- bmp\n- ps\n- dvi\n- ...\n\nThis was **the** point of the configurability of ext-map that @ellisonbg wanted to remove. The png/jpg/latex/text/... block should insert into the template the name of the **converted** figure not the name of the original figure.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21270333",
    "html_url": "https://github.com/ipython/ipython/pull/3695#issuecomment-21270333",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3695",
    "id": 21270333,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjcwMzMz",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-19T19:02:36Z",
    "updated_at": "2013-07-19T19:02:36Z",
    "author_association": "MEMBER",
    "body": "it is a bug that the notebook doesn't support\narbitrary mine types, that is mainly a result \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21270408",
    "html_url": "https://github.com/ipython/ipython/pull/3695#issuecomment-21270408",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3695",
    "id": 21270408,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjcwNDA4",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-19T19:03:59Z",
    "updated_at": "2013-07-19T19:03:59Z",
    "author_association": "MEMBER",
    "body": "So you basically thing we should have almost infinite kind of `_repr_mimetype_` ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21270460",
    "html_url": "https://github.com/ipython/ipython/pull/3695#issuecomment-21270460",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3695",
    "id": 21270460,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjcwNDYw",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-19T19:04:41Z",
    "updated_at": "2013-07-19T19:04:41Z",
    "author_association": "MEMBER",
    "body": "mainly a result of a poor decision in the JavaScript, where we convert mine type keys in the display protocol to short keys. We will remove this transform in the next nbformat, thus adding support for _all_ mine types to the notebook document.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21270569",
    "html_url": "https://github.com/ipython/ipython/pull/3695#issuecomment-21270569",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3695",
    "id": 21270569,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjcwNTY5",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-19T19:06:27Z",
    "updated_at": "2013-07-19T19:06:27Z",
    "author_association": "MEMBER",
    "body": "> So you basically thing we should have almost infinite kind of _repr_mimetype_ ?\n\nThe display protocol and display formatted are already extensible to support this. it's just a bug in the notebook document spec that it doesn't reflect this.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21270733",
    "html_url": "https://github.com/ipython/ipython/pull/3695#issuecomment-21270733",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3695",
    "id": 21270733,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjcwNzMz",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-19T19:09:13Z",
    "updated_at": "2013-07-19T19:09:13Z",
    "author_association": "MEMBER",
    "body": "A possible solution for the scenario with infinite mime-types would be to add another transformer, one that performed the same mapping functionality @Carreau implemented in the original extract figure transformer.  Maybe a FileRenameTransformer...  Like @minrk said, something else will be required in 2.0\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21270738",
    "html_url": "https://github.com/ipython/ipython/pull/3695#issuecomment-21270738",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3695",
    "id": 21270738,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjcwNzM4",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-19T19:09:16Z",
    "updated_at": "2013-07-19T19:09:16Z",
    "author_association": "MEMBER",
    "body": "Hum I don't quite see how this works from end to end, But we'll have the wek to discuss that then. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21271179",
    "html_url": "https://github.com/ipython/ipython/pull/3695#issuecomment-21271179",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3695",
    "id": 21271179,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjcxMTc5",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-19T19:16:59Z",
    "updated_at": "2013-07-19T19:16:59Z",
    "author_association": "MEMBER",
    "body": "For now, we can call the writing the new key in the notebook structure instead of resources for the transforms a sub-optimal implementation, and next week we can discuss how we want to deal with the fact that the notebook can contain arbitrary mime-types in 2.0.\n"
  }
]
