[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/974620",
    "html_url": "https://github.com/ipython/ipython/issues/297#issuecomment-974620",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/297",
    "id": 974620,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk3NDYyMA==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-08T16:50:02Z",
    "updated_at": "2011-04-08T16:50:02Z",
    "author_association": "MEMBER",
    "body": "Yes, I'll work on this.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1096307",
    "html_url": "https://github.com/ipython/ipython/issues/297#issuecomment-1096307",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/297",
    "id": 1096307,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwOTYzMDc=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-05-03T20:42:03Z",
    "updated_at": "2011-05-03T20:42:03Z",
    "author_association": "MEMBER",
    "body": "@fperez: Have you had a chance to look at this? Is it worth blocking 0.11 on it?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1096416",
    "html_url": "https://github.com/ipython/ipython/issues/297#issuecomment-1096416",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/297",
    "id": 1096416,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwOTY0MTY=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-05-03T21:02:53Z",
    "updated_at": "2011-05-03T21:02:53Z",
    "author_association": "MEMBER",
    "body": "This is a pretty big deal for people who use shell escapes to terminal programs that accept input (less/more, vi, emacs, etc.), which is now completely broken.\n\nThough it's possible we can bump it to 0.12 if we want to hasten the 0.11 release as a tech preview.  It depends on how many people rely on this, and would be super angry if it broke in a released version of IPython.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1096443",
    "html_url": "https://github.com/ipython/ipython/issues/297#issuecomment-1096443",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/297",
    "id": 1096443,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwOTY0NDM=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-05-03T21:08:00Z",
    "updated_at": "2011-05-03T21:08:00Z",
    "author_association": "MEMBER",
    "body": "Do we have a feel for how difficult it's likely to be to fix it?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1206165",
    "html_url": "https://github.com/ipython/ipython/issues/297#issuecomment-1206165",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/297",
    "id": 1206165,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMDYxNjU=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-05-19T20:33:22Z",
    "updated_at": "2011-05-19T20:33:22Z",
    "author_association": "MEMBER",
    "body": "It's super easy to fix.  There just needs to be a configurable that selects the call made by `InteractiveShell.system`, and points it to `os.system` instead of the pexpecty `utils.process.system` (or the configurable updates `utils.process.system` itself).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1206307",
    "html_url": "https://github.com/ipython/ipython/issues/297#issuecomment-1206307",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/297",
    "id": 1206307,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMDYzMDc=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-05-19T20:54:45Z",
    "updated_at": "2011-05-19T20:54:45Z",
    "author_association": "MEMBER",
    "body": "So what's the reason we're using pexpect for this in the first place? What can we do with it that we can't with `os.system`?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1206410",
    "html_url": "https://github.com/ipython/ipython/issues/297#issuecomment-1206410",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/297",
    "id": 1206410,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMDY0MTA=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-05-19T21:09:52Z",
    "updated_at": "2011-05-19T21:09:52Z",
    "author_association": "MEMBER",
    "body": "forwarding stdout/err over the wire is the main reason, I think.\n\nFor example, do `os.system('ls')` in the qt console. The output will be in the launching terminal window.  You need to use Popen/pexpect or some such in order to get redirection of stdout.  Of course, in a single-process terminal IPython redirection is irrelevant, so `os.system` is fine.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1206493",
    "html_url": "https://github.com/ipython/ipython/issues/297#issuecomment-1206493",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/297",
    "id": 1206493,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMDY0OTM=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-05-19T21:20:28Z",
    "updated_at": "2011-05-19T21:20:28Z",
    "author_association": "MEMBER",
    "body": "Ah, I see. So would it make sense to have the method in the core interactiveshell simply call `os.system`, and then override it in zmqshell with the pexpect/Popen method we need there?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1206588",
    "html_url": "https://github.com/ipython/ipython/issues/297#issuecomment-1206588",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/297",
    "id": 1206588,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMDY1ODg=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-05-19T21:37:06Z",
    "updated_at": "2011-05-19T21:37:06Z",
    "author_association": "MEMBER",
    "body": "I don't think there's a reason to override the method, because then changing behavior depends on subclassing.  A simple configurable would cover it just fine.  That way code that embeds an InteractiveShell can decide whether it should use os.system or utils.process.system without needing a subclass.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1206652",
    "html_url": "https://github.com/ipython/ipython/issues/297#issuecomment-1206652",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/297",
    "id": 1206652,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMDY2NTI=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-05-19T21:51:18Z",
    "updated_at": "2011-05-19T21:51:18Z",
    "author_association": "MEMBER",
    "body": "But it's not really a configuration issue, is it? Where we're running in-process, os.system is more capable. Where we're talking to a kernel, we need pexpect/Popen to redirect the output. I think making it configurable is just adding complexity.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1206691",
    "html_url": "https://github.com/ipython/ipython/issues/297#issuecomment-1206691",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/297",
    "id": 1206691,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMDY2OTE=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-05-19T22:01:20Z",
    "updated_at": "2011-05-19T22:01:20Z",
    "author_association": "MEMBER",
    "body": "Except it's _less_ complex than having to subclass if you want different behavior...\n\nFor instance, what if you have an InteractiveShell, and you want to capture _all_ output (e.g. for testing, or embedded use)?  os.system can't work for that, so you would have to subclass.\n\nIt's also true that the utils.process.system on Windows does some extra things, so it would likely be a preferable default there.  We certainly shouldn't be using different classes on Windows, just because their defaults might differ, right?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1206806",
    "html_url": "https://github.com/ipython/ipython/issues/297#issuecomment-1206806",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/297",
    "id": 1206806,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMDY4MDY=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-05-19T22:21:12Z",
    "updated_at": "2011-05-19T22:21:12Z",
    "author_association": "MEMBER",
    "body": "If I'm writing an application to embed IPython, I think I'd find it easier to subclass (which works as any Python programmer would expect) than to work out how to interface with our config system. You don't even need to subclass, you can just reassign the method: `myip.system = myip.system_piped` (hypothetically). To me, the question for config is: would the user (the one typing commands in) ever want to change this?\n\nAs for Windows: it would be easy enough to set things up so that the command was run inside that config manager either way.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1206934",
    "html_url": "https://github.com/ipython/ipython/issues/297#issuecomment-1206934",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/297",
    "id": 1206934,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMDY5MzQ=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-05-19T22:45:12Z",
    "updated_at": "2011-05-19T22:45:12Z",
    "author_association": "MEMBER",
    "body": "'interfacing with our config system' is a matter of setting an attribute value.  'myshell.use_os_system=True' is not exactly complex, and certainly less complex than subclassing.  You don't have to understand how configurables work (or even know that they exist) to use it.\n\nI see it another way - if one object is trivially configurable to cover multiple cases (as is the case here), why add the artificially cumbersome requirement of subclassing to change behavior?\n\nIf we do go the subclass route, it's actually going to be the case that the current behavior should be the default, and the single-process terminal should override (only on posix), and select os.system.  Because right now we have a variety of ways to launch kernels, and every single one requires that stdout be captured and/or forwarded except for the single-process terminal.\n\nNote that simply overriding `shell.system=os.system` is _not_ exactly the same, because the IPython shell escape also does an `expand_vars` on the command, allowing variables, etc.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1206968",
    "html_url": "https://github.com/ipython/ipython/issues/297#issuecomment-1206968",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/297",
    "id": 1206968,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMDY5Njg=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-05-19T22:59:08Z",
    "updated_at": "2011-05-19T22:59:08Z",
    "author_association": "MEMBER",
    "body": "But why set an attribute to tell it to change another attribute, when you can simply change the attribute directly?\n\nI'm not suggesting simply replacing `myshell.system=os.system`. I'm suggesting that we have methods for \"piped system\" and \"raw system\", which can be assigned to myshell.system. We don't need a configurable variable to control toggling them if we can just switch the method directly.\n\nWe have a variety of ways to launch kernels, but shouldn't they all be using the IPython.zmq.zmqshell.ZMQInteractiveShell class?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1207177",
    "html_url": "https://github.com/ipython/ipython/issues/297#issuecomment-1207177",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/297",
    "id": 1207177,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMDcxNzc=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-05-19T23:48:02Z",
    "updated_at": "2011-05-19T23:48:02Z",
    "author_association": "MEMBER",
    "body": "Ah, fair enough.  So we should implement it just like having a configurable (the system method, in this case), but don't actually have it be a configurable.\n\nThat seems clean enough to me, I'll make a PR following your proposal.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1208994",
    "html_url": "https://github.com/ipython/ipython/issues/297#issuecomment-1208994",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/297",
    "id": 1208994,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMDg5OTQ=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-05-20T09:38:15Z",
    "updated_at": "2011-05-20T09:38:15Z",
    "author_association": "MEMBER",
    "body": "OK, thanks. I look forward to reviewing it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/1242154",
    "html_url": "https://github.com/ipython/ipython/issues/297#issuecomment-1242154",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/297",
    "id": 1242154,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNDIxNTQ=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-05-26T13:13:15Z",
    "updated_at": "2011-05-26T13:13:15Z",
    "author_association": "MEMBER",
    "body": "(See Min's PR #459)\n"
  }
]
