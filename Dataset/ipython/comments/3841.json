[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21812045",
    "html_url": "https://github.com/ipython/ipython/issues/3841#issuecomment-21812045",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3841",
    "id": 21812045,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODEyMDQ1",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-30T18:30:40Z",
    "updated_at": "2013-07-30T18:30:40Z",
    "author_association": "MEMBER",
    "body": "This is typically the use case why we made nbconvert templates and transformers configurable as well as `custom.js`to inject javascript. This is not too hard to do, and we expect user script to appear on the web to do that. \n\nIf you want to try to write it, please ask we will give you hint and guide you, but I'm not sure that is something we want into the core.\n\nMy estimate, less than 40 line of javascript and 30 lines of nbconvert templates/transformer.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21812871",
    "html_url": "https://github.com/ipython/ipython/issues/3841#issuecomment-21812871",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3841",
    "id": 21812871,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODEyODcx",
    "user": {
      "login": "groakat",
      "id": 3419702,
      "node_id": "MDQ6VXNlcjM0MTk3MDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3419702?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/groakat",
      "html_url": "https://github.com/groakat",
      "followers_url": "https://api.github.com/users/groakat/followers",
      "following_url": "https://api.github.com/users/groakat/following{/other_user}",
      "gists_url": "https://api.github.com/users/groakat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/groakat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/groakat/subscriptions",
      "organizations_url": "https://api.github.com/users/groakat/orgs",
      "repos_url": "https://api.github.com/users/groakat/repos",
      "events_url": "https://api.github.com/users/groakat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/groakat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-30T18:41:34Z",
    "updated_at": "2013-07-30T18:41:34Z",
    "author_association": "NONE",
    "body": "Ok I can give it a try. But I have to say that I am by no means a javascript or ipython expert.\n\nWhere do I start reading?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21817093",
    "html_url": "https://github.com/ipython/ipython/issues/3841#issuecomment-21817093",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3841",
    "id": 21817093,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODE3MDkz",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-30T19:41:43Z",
    "updated_at": "2013-07-30T19:43:21Z",
    "author_association": "MEMBER",
    "body": "> Ok I can give it a try. But I have to say that I am by no means a javascript or ipython expert.\n\nDon't worry, neither am I. I wrote my first line of JS 2 years ago for the notebook.\n\nI would suggest having a look at [thoses files](https://github.com/ipython/ipython/tree/master/IPython/html/static/notebook/js/celltoolbarpresets) `defaults.js` is probably the more complicated one soo feel free to skip it. And [the doc](http://elacave.lmdb.eu/~carreau/yui/classes/IPython.CellToolbar.html) which might be out of date but should help you. \n\nThis will show you how to make a custom UI  in the toolbar for each cell and attach metadata to each cell. \n\nOnce this is done you could kind of try to understand nbconvert for reveal. You car read [this](http://nbviewer.ipython.org/urls/raw.github.com/Carreau/posts/master/06-NBconvert-Doc-Draft.ipynb), but highly out of date, but give you soem ideas of the inner working and ping @damianavila who wrote the reveal part.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21817219",
    "html_url": "https://github.com/ipython/ipython/issues/3841#issuecomment-21817219",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3841",
    "id": 21817219,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODE3MjE5",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-30T19:43:33Z",
    "updated_at": "2013-07-30T19:43:33Z",
    "author_association": "MEMBER",
    "body": "Woops, mistyped. Ping @damianavila sorry.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21830680",
    "html_url": "https://github.com/ipython/ipython/issues/3841#issuecomment-21830680",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3841",
    "id": 21830680,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODMwNjgw",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-30T23:30:55Z",
    "updated_at": "2013-07-30T23:30:55Z",
    "author_association": "MEMBER",
    "body": "Some thoughts:\n@Carreau as far as I know, we have a sort of limitation in what @groakat wants to develop... I mean we are constrain with the metadata at the cell level... we have only metadata for each cells... and not for input and output **BUT**, we can make the UI more complex with two dropdowns menu, one for the input and the other for the output and store this tuple information in the same metadata slot at the cell level...\nThen it is only matter of playing with the templates and transformers to make it real... \nI don't know if this is something for the core... maybe in the future when the users can give us some more feedback about slides... I mean, making the UI more complex has a price, it is complex now... but it would be a great exercise or an independent extension...\n\nCheers.\n\nDamián\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21859819",
    "html_url": "https://github.com/ipython/ipython/issues/3841#issuecomment-21859819",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3841",
    "id": 21859819,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODU5ODE5",
    "user": {
      "login": "groakat",
      "id": 3419702,
      "node_id": "MDQ6VXNlcjM0MTk3MDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3419702?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/groakat",
      "html_url": "https://github.com/groakat",
      "followers_url": "https://api.github.com/users/groakat/followers",
      "following_url": "https://api.github.com/users/groakat/following{/other_user}",
      "gists_url": "https://api.github.com/users/groakat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/groakat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/groakat/subscriptions",
      "organizations_url": "https://api.github.com/users/groakat/orgs",
      "repos_url": "https://api.github.com/users/groakat/repos",
      "events_url": "https://api.github.com/users/groakat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/groakat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-31T13:03:12Z",
    "updated_at": "2013-07-31T13:03:12Z",
    "author_association": "NONE",
    "body": "@damianavila another dropdown menu on the output cells was what I had in mind. \n\nRegarding additional complexity of the interface: I do not think it will make it more complex at all. \n\nI made a presentation entirely in ipython notebook in the beginning of the week, and it is very intuitive as it is. Every new cell you add will be automatically on the same slide as the cell above. You have to actively change the value in the dropdown menu to get any other behaviour. \n\nThat means if we add a dropdown menu to the output cells as they are now implemented for the input cells, we would not change the behaviour of the interface. The current behaviour (if your input cell is a slide, the output will be on the same slide) will stay the same until you change the value in the dropdown menu of an output cell. The interface will also not get more cluttered. (Output cells will look similar as input cells)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21862209",
    "html_url": "https://github.com/ipython/ipython/issues/3841#issuecomment-21862209",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3841",
    "id": 21862209,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODYyMjA5",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-31T13:27:08Z",
    "updated_at": "2013-07-31T13:27:19Z",
    "author_association": "MEMBER",
    "body": "> I made a presentation entirely in ipython notebook in the beginning of the week, and it is very intuitive as it is\n\nIt is nice to hear that...\n\n> The current behaviour (if your input cell is a slide, the output will be on the same slide) will stay the same until you change the value in the dropdown menu of an output cell\n\nYeah, it is true...\n\nOK, I will try to do proof of concept and see how it feels... and I will let you know any advance... if not in the core, probably would be a nice extension... and maybe feasible for integration if a lot of users claim for it ;-)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21948886",
    "html_url": "https://github.com/ipython/ipython/issues/3841#issuecomment-21948886",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3841",
    "id": 21948886,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTQ4ODg2",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-01T16:20:23Z",
    "updated_at": "2013-08-01T16:20:23Z",
    "author_association": "MEMBER",
    "body": "I am -1 on the idea of adding separate toolbars for output.  Even the\nper-cell toolbar is pushes the limit of UI complexity when you start to\nwork with it heavily.\n\nOn Wed, Jul 31, 2013 at 6:03 AM, groakat notifications@github.com wrote:\n\n> @damianavila https://github.com/damianavila another dropdown menu on\n> the output cells was what I had in mind.\n> \n> Regarding additional complexity of the interface: I do not think it will\n> make it more complex at all.\n> \n> I made a presentation entirely in ipython notebook in the beginning of the\n> week, and it is very intuitive as it is. Every new cell you add will be\n> automatically on the same slide as the cell above. You have to actively\n> change the value in the dropdown menu to get any other behaviour.\n> \n> That means if we add a dropdown menu to the output cells as they are now\n> implemented for the input cells, we would not change the behaviour of the\n> interface. The current behaviour (if your input cell is a slide, the output\n> will be on the same slide) will stay the same until you change the value in\n> the dropdown menu of an output cell. The interface will also not get more\n> cluttered. (Output cells will look similar as input cells)\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/issues/3841#issuecomment-21859819\n> .\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21950096",
    "html_url": "https://github.com/ipython/ipython/issues/3841#issuecomment-21950096",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3841",
    "id": 21950096,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTUwMDk2",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-01T16:37:15Z",
    "updated_at": "2013-08-01T16:37:15Z",
    "author_association": "MEMBER",
    "body": "> I am -1 on the idea of adding separate toolbars for output.  Even the\n> per-cell toolbar is pushes the limit of UI complexity when you start to\n> work with it heavily.\n\nThis are the thing I worried about the complexity in the UI. \nClearly, it seems to be a wide array of tolerance for complexity, I mean... for some people it is complex and for others not... probably the feedback of lot of users can give us a better sense of the degree of complexity we can achieve at last... \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22116047",
    "html_url": "https://github.com/ipython/ipython/issues/3841#issuecomment-22116047",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3841",
    "id": 22116047,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMTE2MDQ3",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-05T16:00:01Z",
    "updated_at": "2013-08-05T16:00:01Z",
    "author_association": "MEMBER",
    "body": "I think that having a second dropdown menu with \n\n`show output`:\n- with code\n- alone\n- before code\n- after code\n\nwould make sens as an extension.\n\n> Even the per-cell toolbar is pushes the limit of UI complexity when you start to work with it heavily.\n\nBut the issue with the global toolbar is it works only with currently selected cell, which slow works a lot. \nBut I agree that it shoudl be possible to have almost the same APi to have actin register in celltoolbar  to apply only on selected cell with UI in global toolbar.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22288278",
    "html_url": "https://github.com/ipython/ipython/issues/3841#issuecomment-22288278",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3841",
    "id": 22288278,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjg4Mjc4",
    "user": {
      "login": "groakat",
      "id": 3419702,
      "node_id": "MDQ6VXNlcjM0MTk3MDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3419702?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/groakat",
      "html_url": "https://github.com/groakat",
      "followers_url": "https://api.github.com/users/groakat/followers",
      "following_url": "https://api.github.com/users/groakat/following{/other_user}",
      "gists_url": "https://api.github.com/users/groakat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/groakat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/groakat/subscriptions",
      "organizations_url": "https://api.github.com/users/groakat/orgs",
      "repos_url": "https://api.github.com/users/groakat/repos",
      "events_url": "https://api.github.com/users/groakat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/groakat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-07T22:09:47Z",
    "updated_at": "2013-08-07T22:09:47Z",
    "author_association": "NONE",
    "body": "GUI-wise I would give the output box exactly the same dropdown menu as the input cell has at the moment. I dont think it makes sense to have the output before the input. \n\nI'll make a mock-up tomorrow. I just need to go home now ;)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22305303",
    "html_url": "https://github.com/ipython/ipython/issues/3841#issuecomment-22305303",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3841",
    "id": 22305303,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzA1MzAz",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-08T06:32:52Z",
    "updated_at": "2013-08-08T06:32:52Z",
    "author_association": "MEMBER",
    "body": "> GUI-wise I would give the output box exactly the same dropdown menu as the input cell has at the moment\n\nDo you mean another toolbar ? Or another dropdown menu in the current Cell-toolbar ?\n\n>  I dont think it makes sense to have the output before the input.\n\nWhat I ment is still input above output, but in front of student I would like to be able to show a result without showing the code and have the code appear after to let them think. This can kind of be done in reveal, but not in live mode. \n\n@damianavila can we in reveal do \n    - fragment 1\n    - fragment 3\n    - fragment 2 \n(with number: order in which they appear)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22305797",
    "html_url": "https://github.com/ipython/ipython/issues/3841#issuecomment-22305797",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3841",
    "id": 22305797,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzA1Nzk3",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-08T06:48:57Z",
    "updated_at": "2013-08-08T06:48:57Z",
    "author_association": "MEMBER",
    "body": "> @damianavila can we in reveal do \n> - fragment 1\n> - fragment 3\n> - fragment 2 \n>   (with number: order in which they appear\n\nYes, reveal can do it... we have to think how make easy to understand at the UI...\nMaybe another dropdown menu when the fragment is selected where you can select the order of appear...\nor maybe another way... but reveal can do it... is just a minor tweak of the template and the UI to do it...\n\nOK I go to bed now... is it 3:48 am here... ;-) I asked something in the dev list... See you tomorrow...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22316386",
    "html_url": "https://github.com/ipython/ipython/issues/3841#issuecomment-22316386",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3841",
    "id": 22316386,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzE2Mzg2",
    "user": {
      "login": "groakat",
      "id": 3419702,
      "node_id": "MDQ6VXNlcjM0MTk3MDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3419702?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/groakat",
      "html_url": "https://github.com/groakat",
      "followers_url": "https://api.github.com/users/groakat/followers",
      "following_url": "https://api.github.com/users/groakat/following{/other_user}",
      "gists_url": "https://api.github.com/users/groakat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/groakat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/groakat/subscriptions",
      "organizations_url": "https://api.github.com/users/groakat/orgs",
      "repos_url": "https://api.github.com/users/groakat/repos",
      "events_url": "https://api.github.com/users/groakat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/groakat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-08T11:05:07Z",
    "updated_at": "2013-08-08T11:05:07Z",
    "author_association": "NONE",
    "body": "Voila. \n\nI still think it would not clutter the GUI at all.\n\n![ipython-interface-proposal](https://f.cloud.github.com/assets/3419702/930894/411050be-001a-11e3-9ebe-2e9b59589668.png)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22319839",
    "html_url": "https://github.com/ipython/ipython/issues/3841#issuecomment-22319839",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3841",
    "id": 22319839,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzE5ODM5",
    "user": {
      "login": "groakat",
      "id": 3419702,
      "node_id": "MDQ6VXNlcjM0MTk3MDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3419702?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/groakat",
      "html_url": "https://github.com/groakat",
      "followers_url": "https://api.github.com/users/groakat/followers",
      "following_url": "https://api.github.com/users/groakat/following{/other_user}",
      "gists_url": "https://api.github.com/users/groakat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/groakat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/groakat/subscriptions",
      "organizations_url": "https://api.github.com/users/groakat/orgs",
      "repos_url": "https://api.github.com/users/groakat/repos",
      "events_url": "https://api.github.com/users/groakat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/groakat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-08T12:26:56Z",
    "updated_at": "2013-08-08T12:29:59Z",
    "author_association": "NONE",
    "body": "Some more comments, because I was a bit inactive the last days.\n\n> Even the per-cell toolbar is pushes the limit of UI complexity when you start to\n> work with it heavily.\n\nDo you mean that it is now already too complex for a long/complex presentation?\n\nThe illustration above would not introduce any usability changes for anyone who does not want to alter the current behaivour. Because the drop-down boxes show [ - ] as a standard, which means that this cell will be included in the previous slide/fragment. \n\n> > I dont think it makes sense to have the output before the input.\n> \n> What I ment is still input above output, but in front of student I would like to be able to show a result without showing the code and have the code appear after to let them think. This can kind of be done in reveal, but not in live mode\n\nI said this, without properly explaining my reasoning. Sorry for that. The reason for my statement was that I thought that a similar behaviour could be produced with the simple GUI change I illustrated in the comment above:\n\nWhat you have to do is to [skip] your original input cell, make the output cell a [fragment] or [slide] and then paste the input code again into the next input cell and set this as fragment:\n\nIn [1]: print \"bla\"   [ skip ]\nOut [1]: bla          [ slide ]\nIn [2]: print \"bla\"   [ fragment ]\n\nMaking the fragment appear before or after the previous input slide by the means of an additional control element is indeed bringing up the danger of making the GUI more complicated.\n\nAn idea I could throw in the discussion would be a button that appears on the cell that is a slide or subslide as soon as the next cell is set as a fragment. This button would open a window thingy (similar to the help context thing). In this window there would show numbered boxes. One box for each successive cell selected as fragment. Then you have to arrange the boxes in the order you want to have the fragments to appear. The default behaviour would make the fragments appear in the order they have in the document. Therefore again for the default behaviour noone needs to deal with that button. It would also hide that functionality in some why from beginners who might otherwise be confused with the number of options they have.\n\nWhat is the behaviour of:\n\n> > @damianavila can we in reveal do \n> > fragment 1\n> > fragment 3\n> > fragment 2 (with number: order in which they appear\n> \n> Yes, reveal can do it... we have to think how make easy to understand at the UI...\n\nDo the fragments appear in the order they were selected but placed based on their order in the document? I.e. would the Input cell appear above the output cell even though it appears later?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22324633",
    "html_url": "https://github.com/ipython/ipython/issues/3841#issuecomment-22324633",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3841",
    "id": 22324633,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzI0NjMz",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-08T13:51:06Z",
    "updated_at": "2013-08-08T13:51:19Z",
    "author_association": "MEMBER",
    "body": "@groakat do you have the js code available somewhere, I am interesting on how do you achieve the dropdown menu in the cell output... Previously I was thinking in other UI with both dropdown menus at the header of the cell input... but your implementation is more intuitive...\n\n> Do the fragments appear in the order they were selected but placed based on their order in the document? I.e. would the Input cell appear above the output cell even though it appears later?\n\nin the current implementation the fragments appear based in the order of the document... but potentially, we can do some things to make it appear in a pre-selected order, but with some cost in the complexity of the UI.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22326575",
    "html_url": "https://github.com/ipython/ipython/issues/3841#issuecomment-22326575",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3841",
    "id": 22326575,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzI2NTc1",
    "user": {
      "login": "groakat",
      "id": 3419702,
      "node_id": "MDQ6VXNlcjM0MTk3MDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3419702?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/groakat",
      "html_url": "https://github.com/groakat",
      "followers_url": "https://api.github.com/users/groakat/followers",
      "following_url": "https://api.github.com/users/groakat/following{/other_user}",
      "gists_url": "https://api.github.com/users/groakat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/groakat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/groakat/subscriptions",
      "organizations_url": "https://api.github.com/users/groakat/orgs",
      "repos_url": "https://api.github.com/users/groakat/repos",
      "events_url": "https://api.github.com/users/groakat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/groakat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-08T14:20:37Z",
    "updated_at": "2013-08-08T14:20:37Z",
    "author_association": "NONE",
    "body": "Well, I made it up (_mockup_ ;)) in gimp to illustrate my idea.\n\nTechnically, I do not know how the ipython notebook rendering works. The only thing I know is that the outputs are saved in the _Out_ list, as inputs are saved in the _In_ list. Therefore I would hope that the visualization/ rendering procedure for input and output cells is somehow similar. \n\nNaively I would copy the visualization routines for the input cells and use them for the output cells as well and see what happens. If that works then its probably more of a CSS thing and tiny adjustments.\n\nTiny remark: I just had a look in a ipynb file and actually the entire [Input - Output] construct is a _cell_ dictionary. Each cell has an _input_ key (list of strings?) and an _outputs_ key (list of dicts). So copy and paste will probably not work directly, but with minor adjustments (selecting what part of _outputs_ should be rendered) it might be possible.\n\nI do not have time to dig in the code today or tomorrow. I can spend time on this only during weekends, but I would be happy to give it a serious try at Saturday.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22328446",
    "html_url": "https://github.com/ipython/ipython/issues/3841#issuecomment-22328446",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3841",
    "id": 22328446,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzI4NDQ2",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-08T14:46:49Z",
    "updated_at": "2013-08-08T14:46:49Z",
    "author_association": "MEMBER",
    "body": "> Tiny remark: I just had a look in a ipynb file and actually the entire [Input - Output] construct is a cell dictionary. Each cell has an input key (list of strings?) and an outputs key (list of dicts). So copy and paste will probably not work directly, but with minor adjustments (selecting what part of outputs should be rendered) it might be possible.\n\nThere is a big conceptual difference in the fact that output does not support metadata in the same way that cell support metadata. and actually a (cell = input+outputs) and the current toolbar is attached to \"cell\" not \"input\". \n\nThe question of editing the metadata of the outputs for the cell is more complicated than _just_ a toolbar as you can have many output. So even if the mockup look nice, I think it will be confusing to use, and we should think of it more before jumping into the code.\n\nThe following seem enough for me for the time beeing.\n\n![capture decran 2013-08-08 a 16 43 49](https://f.cloud.github.com/assets/335567/932035/bdd8e174-0038-11e3-9b1c-59d13fd2933d.png)\n![capture decran 2013-08-08 a 16 43 56](https://f.cloud.github.com/assets/335567/932036/bddb71f0-0038-11e3-914f-db26a03b5da2.png)\n\nStill you might find that the location of the CellToolBar is confusing, would something more like the following (sorry for ugly CSS, live editing HTML) more reflect the fact that cell toolbar apply to input **and** output ?\n\n![capture decran 2013-08-08 a 16 47 30](https://f.cloud.github.com/assets/335567/932065/2c1b92a8-0039-11e3-903c-cb271c7d1238.png)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22328695",
    "html_url": "https://github.com/ipython/ipython/issues/3841#issuecomment-22328695",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3841",
    "id": 22328695,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzI4Njk1",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-08T14:50:02Z",
    "updated_at": "2013-08-08T14:50:02Z",
    "author_association": "MEMBER",
    "body": "> I made it up (_mockup_ ;)) in gimp to illustrate my idea.\n\nI knew it ;-)  hehe... the current implementation of cell tool bar does not support the user interfase at the input and output levels... it is a property of the cell\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22328909",
    "html_url": "https://github.com/ipython/ipython/issues/3841#issuecomment-22328909",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3841",
    "id": 22328909,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzI4OTA5",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-08T14:52:59Z",
    "updated_at": "2013-08-08T14:52:59Z",
    "author_association": "MEMBER",
    "body": "And @Carreau has explained better than me... sorry I did not see you answer before writing mine...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22329949",
    "html_url": "https://github.com/ipython/ipython/issues/3841#issuecomment-22329949",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3841",
    "id": 22329949,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzI5OTQ5",
    "user": {
      "login": "groakat",
      "id": 3419702,
      "node_id": "MDQ6VXNlcjM0MTk3MDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3419702?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/groakat",
      "html_url": "https://github.com/groakat",
      "followers_url": "https://api.github.com/users/groakat/followers",
      "following_url": "https://api.github.com/users/groakat/following{/other_user}",
      "gists_url": "https://api.github.com/users/groakat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/groakat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/groakat/subscriptions",
      "organizations_url": "https://api.github.com/users/groakat/orgs",
      "repos_url": "https://api.github.com/users/groakat/repos",
      "events_url": "https://api.github.com/users/groakat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/groakat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-08T15:06:23Z",
    "updated_at": "2013-08-08T15:32:39Z",
    "author_association": "NONE",
    "body": "@Carreau \n\nSuch a drop box is great as well. However, then it is not possible to switch off the _input_ and only showing the _output_ which might be often the case and which was my motivation to start the issue.\n\nIf I understand it correct, the nbconvert reads the metadata of the cells rather than of _input_ and _outputs_.\n\nMaybe a solution would be a modification of the \"slide_type\" metadata in the ipynb. If that would be not a simple string but a dictionary (for sake of extensions later) with \"in\" and \"out\" keywords, then it would be possible for the nbconvert to process input and output seperately.\n\nThe notebook on the other hand has to be adjusted to write the slides option into  \"slide_type\"->\"in\" and  \"slide_type\"->\"out\" rather than straight into \"slide_type\".\n\nAgain, I do not know how those converters work and how easy it is to adjust them so that they can \"ignore\" either _input_ or _output_ part of the cell. \n\n[edit] Because if they can ignore either of the parts, you can just let it run twice, once ignoring output (same as now if there is no output to the input) and once ignoring input\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22330193",
    "html_url": "https://github.com/ipython/ipython/issues/3841#issuecomment-22330193",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3841",
    "id": 22330193,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzMwMTkz",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-08T15:09:42Z",
    "updated_at": "2013-08-08T15:09:42Z",
    "author_association": "MEMBER",
    "body": "@Carreau I was thinking exactly in something like you have described... a dual dropdown menu... I still believe it is a little harder for the user to understand this UI, but I would be useful for some user as an extension...\nBTW, the name of the output are not very intuitive for me, maybe other names or other arrangement... and we have \"notes\" in the current implementation, what is the meaning of this \"notes\" in the output?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22330538",
    "html_url": "https://github.com/ipython/ipython/issues/3841#issuecomment-22330538",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3841",
    "id": 22330538,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzMwNTM4",
    "user": {
      "login": "groakat",
      "id": 3419702,
      "node_id": "MDQ6VXNlcjM0MTk3MDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3419702?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/groakat",
      "html_url": "https://github.com/groakat",
      "followers_url": "https://api.github.com/users/groakat/followers",
      "following_url": "https://api.github.com/users/groakat/following{/other_user}",
      "gists_url": "https://api.github.com/users/groakat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/groakat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/groakat/subscriptions",
      "organizations_url": "https://api.github.com/users/groakat/orgs",
      "repos_url": "https://api.github.com/users/groakat/repos",
      "events_url": "https://api.github.com/users/groakat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/groakat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-08T15:14:46Z",
    "updated_at": "2013-08-08T15:14:46Z",
    "author_association": "NONE",
    "body": "notes is fine, because you can create notes instead of slides/ fragments/ etc for reveal\n\nI, however, agree that if that is going to be implemented, \"Output in Slides\" might be difficult to understand if you dont know what it is about.\n\nMaybe \"include Output in slides as:\"\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22331894",
    "html_url": "https://github.com/ipython/ipython/issues/3841#issuecomment-22331894",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3841",
    "id": 22331894,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzMxODk0",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-08T15:32:27Z",
    "updated_at": "2013-08-08T15:32:27Z",
    "author_association": "MEMBER",
    "body": "My mockup was just editting the html on a live notebook in the developper tool (yes you can drag and drop `div`s), So I just copy and pasted the DOM of the \"slide type\" implementation (hence the 'notes', it was not functionnal, and  it is now evaporated into thin air...\n\nThe UI can be much more than just a drop down you could pop full dialog if needed. We stayed simple for this one but my first implementation had much more value, and no concept of fragment. IIRC the options where\n- In & out\n- In then out\n- In\n- Out\n- Out then In\n\nIt is just a question of defining the metadata structure and do the code behind. Is is fully pluggable, so easy to do as an extension.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22332222",
    "html_url": "https://github.com/ipython/ipython/issues/3841#issuecomment-22332222",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3841",
    "id": 22332222,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzMyMjIy",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-08T15:37:16Z",
    "updated_at": "2013-08-08T15:37:16Z",
    "author_association": "MEMBER",
    "body": "> It is just a question of defining the metadata structure and do the code behind. Is is fully pluggable, so easy to do as an extension.\n\nI agree ;-)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22332863",
    "html_url": "https://github.com/ipython/ipython/issues/3841#issuecomment-22332863",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3841",
    "id": 22332863,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzMyODYz",
    "user": {
      "login": "groakat",
      "id": 3419702,
      "node_id": "MDQ6VXNlcjM0MTk3MDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3419702?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/groakat",
      "html_url": "https://github.com/groakat",
      "followers_url": "https://api.github.com/users/groakat/followers",
      "following_url": "https://api.github.com/users/groakat/following{/other_user}",
      "gists_url": "https://api.github.com/users/groakat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/groakat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/groakat/subscriptions",
      "organizations_url": "https://api.github.com/users/groakat/orgs",
      "repos_url": "https://api.github.com/users/groakat/repos",
      "events_url": "https://api.github.com/users/groakat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/groakat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-08T15:46:12Z",
    "updated_at": "2013-08-08T15:46:12Z",
    "author_association": "NONE",
    "body": "So whatever solution there will be, the Metadata will have to be modified. From what you argue, is it not possible to place a drop down menu in the input part but not on the output part? Is that correct? Because if that would be in my opinion still the most concise way. It would also allow to chose all kind of different slide_types independently. I would perhaps extend my proposal with a checkbox on the output cell: \"display output before input\" [ ]\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22333590",
    "html_url": "https://github.com/ipython/ipython/issues/3841#issuecomment-22333590",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3841",
    "id": 22333590,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzMzNTkw",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-08T15:55:16Z",
    "updated_at": "2013-08-08T15:55:16Z",
    "author_association": "MEMBER",
    "body": "> So whatever solution there will be, the Metadata will have to be modified.\n\nModified or things added, it's a free playground, you can store anything you want. You could have a 'extend_slideshow_attributes' dict if it please you.\n\n> From what you argue, is it possible to place a drop down menu in the input part but not on the output part? Is that correct? \n\nWithout modifying the core, no it is not possible. Even so you would have conflict as the 2 could try to modify at the same time the same the same dict. It would be extra work for people writing extensions, us, and probably will lead to confusing extension for users.\n\n> Because if that would be in my opinion still the most concise way. It would also allow to chose all kind of different slide_types independently. I would perhaps extend my proposal with a checkbox on the output cell: \"display output before input\" [ ]\n\nFor the time beeing, I think it is better to keep UI element in current Celltoolbar. I keep the idea of Output toolbar, but with work on JSWidget that will add some other UI in output, a toolbar on output area will become really confusing in december.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22334477",
    "html_url": "https://github.com/ipython/ipython/issues/3841#issuecomment-22334477",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3841",
    "id": 22334477,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzM0NDc3",
    "user": {
      "login": "groakat",
      "id": 3419702,
      "node_id": "MDQ6VXNlcjM0MTk3MDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3419702?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/groakat",
      "html_url": "https://github.com/groakat",
      "followers_url": "https://api.github.com/users/groakat/followers",
      "following_url": "https://api.github.com/users/groakat/following{/other_user}",
      "gists_url": "https://api.github.com/users/groakat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/groakat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/groakat/subscriptions",
      "organizations_url": "https://api.github.com/users/groakat/orgs",
      "repos_url": "https://api.github.com/users/groakat/repos",
      "events_url": "https://api.github.com/users/groakat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/groakat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-08T16:06:17Z",
    "updated_at": "2013-08-08T16:06:17Z",
    "author_association": "NONE",
    "body": "ok that makes sense for me. thanks for the patience :)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22364544",
    "html_url": "https://github.com/ipython/ipython/issues/3841#issuecomment-22364544",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3841",
    "id": 22364544,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzY0NTQ0",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-08T22:57:53Z",
    "updated_at": "2013-08-08T22:57:53Z",
    "author_association": "MEMBER",
    "body": "I agree with @Carreau that we should keep the current celltoolbar and not have a separate toolbar for each output.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/22561934",
    "html_url": "https://github.com/ipython/ipython/issues/3841#issuecomment-22561934",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3841",
    "id": 22561934,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTYxOTM0",
    "user": {
      "login": "dpsanders",
      "id": 191822,
      "node_id": "MDQ6VXNlcjE5MTgyMg==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/191822?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dpsanders",
      "html_url": "https://github.com/dpsanders",
      "followers_url": "https://api.github.com/users/dpsanders/followers",
      "following_url": "https://api.github.com/users/dpsanders/following{/other_user}",
      "gists_url": "https://api.github.com/users/dpsanders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dpsanders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dpsanders/subscriptions",
      "organizations_url": "https://api.github.com/users/dpsanders/orgs",
      "repos_url": "https://api.github.com/users/dpsanders/repos",
      "events_url": "https://api.github.com/users/dpsanders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dpsanders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-13T12:44:50Z",
    "updated_at": "2013-08-13T12:44:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "I find the current UI for the dropdowns very unintuitive.\nThe fact that it comes above the cell itself seems to make the dropdown the most important part. Then there is the fact that so much space is wasted with a basically blank line in the notebook.\n\nA solution would be to put the dropdown _horizontally_ adjacent to the cell.\n(I am always fighting _against_ reducing my vertical space, and _for_ using my wasted horizontal space!)\n\nAlso, currently there is far too much visual noise caused by writing \"Slide Type:\" all over the place -- this is unnecessary and should be removed (and moved to the documentation!). Similarly, the actual visual impact could be reduced by only showing `S`, `s`, `F`, `K`, `N` or whatever, instead of `Slide`, `Sub-slide`. However, when the dropdown is activated, of course the whole word should be shown. \n\nNaturally, there should also be keyboard shortcuts for changing these things. E.g. Ctrl-m, s, 3  to change the slide type to F. (Ctrl-m s  is still available!!)\n\nSimilarly with @Carreau 's \"In & Out\" etc. (very good idea), just show a number from 1 to 5.\n\nThus the visual noise would be reduced to, e.g., `S | 3`, but clicking on the drop down shows everything in detail.\n\nOn the other hand, the implementation of ordering (which fragment gets shown in what order) in Keynote is via a popout, and there is consequently _no_ visual information about this -- this goes too far in the other direction.\nThe ordering should also be displayed in a reduced way and chosen by a dropdown, I guess.\n"
  }
]
