[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2772584",
    "html_url": "https://github.com/ipython/ipython/pull/1007#issuecomment-2772584",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1007",
    "id": 2772584,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NzI1ODQ=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-17T06:10:23Z",
    "updated_at": "2011-11-17T06:10:23Z",
    "author_association": "MEMBER",
    "body": "@stefanv, could you have a quick look and see if this fixes correctly the cases you'd seen?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2778362",
    "html_url": "https://github.com/ipython/ipython/pull/1007#issuecomment-2778362",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1007",
    "id": 2778362,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NzgzNjI=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-17T16:44:13Z",
    "updated_at": "2011-11-17T16:44:13Z",
    "author_association": "MEMBER",
    "body": "This is looking pretty good to me.  One general question - `store_or_execute()` and `rerun_pasted()` are functions whose first argument is always the object that calls them, making them perfectly identical to instance methods in terms of implementation.  What benefit does this approach have over them just being methods?\n\nIn this way, every single method of an object could be made a function.  For future reference, which ones should be functions, and which should be methods?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2779047",
    "html_url": "https://github.com/ipython/ipython/pull/1007#issuecomment-2779047",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1007",
    "id": 2779047,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NzkwNDc=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-17T17:34:56Z",
    "updated_at": "2011-11-17T17:34:56Z",
    "author_association": "MEMBER",
    "body": "They were actually methods, and you are totally correct that by this token we could completely strip the object down :)  I don't have a hard rule yet and I'm just feeling my way through this, but it seems to me that our main interactive shell objects have become gigantic and unwieldy, so I was trying to reduce their method footprint and API a little bit.\n\nSince these were little pieces of functionality only used by the terminal application, it seemed like a cleaner solution to just refactor them out into separate standalone functions.  That would also make it much easier to test them in isolation with mock objects that only provide one or two methods, something harder to do when they are methods of the main thing.\n\nI'm not trying to go and rip out everything from the main shell object, but these didn't really feel like 'core' functionality (in fact they were `_private` in the previous implementation).  So it's really mostly an instinct design call, and one that I'd love feedback on.  Do you agree in general with trying to (when reasonably easy and non-disruptive as was the case here) simplify a little bit the official public API of our big Shell object, and with this approach?  I mostly want us to find a good design balance for this that will make the overall use and maintenance of the code easier...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2781264",
    "html_url": "https://github.com/ipython/ipython/pull/1007#issuecomment-2781264",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1007",
    "id": 2781264,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODEyNjQ=",
    "user": {
      "login": "stefanv",
      "id": 45071,
      "node_id": "MDQ6VXNlcjQ1MDcx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/45071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stefanv",
      "html_url": "https://github.com/stefanv",
      "followers_url": "https://api.github.com/users/stefanv/followers",
      "following_url": "https://api.github.com/users/stefanv/following{/other_user}",
      "gists_url": "https://api.github.com/users/stefanv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stefanv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stefanv/subscriptions",
      "organizations_url": "https://api.github.com/users/stefanv/orgs",
      "repos_url": "https://api.github.com/users/stefanv/repos",
      "events_url": "https://api.github.com/users/stefanv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stefanv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-17T20:15:41Z",
    "updated_at": "2011-11-17T20:15:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "E-mail pasting no longer works, e.g.\n\n```\n>> def foo(x):\n>>     return x\n```\n\nAlso, some valid Python causes confusion:\n\n```\n>>> def foo(x): return 1 \\\n...     > 1\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2781718",
    "html_url": "https://github.com/ipython/ipython/pull/1007#issuecomment-2781718",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1007",
    "id": 2781718,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODE3MTg=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-17T20:46:16Z",
    "updated_at": "2011-11-17T20:46:16Z",
    "author_association": "MEMBER",
    "body": "@fperez - I agree that we should move in a direction of more functions and fewer methods, but these seem like they really are methods, since copying/pasting them into the Class scope would require no internal changes at all (aside from changing invocation back from `f(self` to `self.f(`).  They are still highly stateful, depending on and affecting the active state of the shell instance and various members.  I'm not sure that anything that calls `shell.run_cell()` is better off being split off into a function.\n\nI don't feel strongly and I don't know where the line should be drawn, but my first inclination is that if you have to provide the shell instance itself, rather than some of its members, it's probably a method.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2803357",
    "html_url": "https://github.com/ipython/ipython/pull/1007#issuecomment-2803357",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1007",
    "id": 2803357,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDMzNTc=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-20T10:54:47Z",
    "updated_at": "2011-11-20T10:54:47Z",
    "author_association": "MEMBER",
    "body": "Just rebased to sort out a conflict and force-pushed.   Too tired now to work any more on this, will get back to it in a couple of days.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2880688",
    "html_url": "https://github.com/ipython/ipython/pull/1007#issuecomment-2880688",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1007",
    "id": 2880688,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODA2ODg=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-26T09:10:43Z",
    "updated_at": "2011-11-26T09:10:43Z",
    "author_association": "MEMBER",
    "body": "@stefanv, I fixed the email case and added some tests for that kind of format, let me know if this looks OK now.\n\n@minrk, here's how I view the ones in this particular case: while I agree with you that those are basically methods in all but name right now, I hope that soon we'll be able to refactor our magic system into standalone objects.  And in this case, those methods are really utilities of the paste/cpaste magics, not of the shell itself.  If those magics were in a separate object (say one added by a user in an extension), they would never modify the shell as methods, they'd simply pass it as an argument.  So I think that leaving them as standalone functions now is the right thing to do, in anticipation for an eventual refactoring into a new object, a Magic, that would put them together with paste/cpaste.\n\nIf you guys agree with this, I'll go ahead and merge.  Thanks for the review!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2882894",
    "html_url": "https://github.com/ipython/ipython/pull/1007#issuecomment-2882894",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1007",
    "id": 2882894,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODI4OTQ=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-26T17:57:31Z",
    "updated_at": "2011-11-26T17:57:31Z",
    "author_association": "MEMBER",
    "body": "@fperez - I think this is fine.  It does seem a bit odd to pull methods out into functions, with the ultimate goal that they become methods of a different object in the future.  I do appreciate the desire to pull things off of the Shell, so it makes sense.\n\nIf @stefanv's says his cases work, go for it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2883479",
    "html_url": "https://github.com/ipython/ipython/pull/1007#issuecomment-2883479",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1007",
    "id": 2883479,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODM0Nzk=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-26T19:43:08Z",
    "updated_at": "2011-11-26T19:43:08Z",
    "author_association": "MEMBER",
    "body": "Thanks, @minrk.  I did add  a comment around them to try and clarify the intent of the somewhat odd refactoring.  I hope to find the time soon to draft my ideas on the magics and post them on the dev list for feedback.\n\n@stefanv, note that I fixed email pasting, but not that very odd corner case you found.  The logic for handling continuation lines gets pretty complicated if we want to mix in automatic removal of special characters, so I think it's OK if the pasting utilities don't cover them.  I don't want them to become overly complex.  As long as we handle that code in the normal input prompt, I think that's an acceptable compromise.  What do you think?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2884456",
    "html_url": "https://github.com/ipython/ipython/pull/1007#issuecomment-2884456",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1007",
    "id": 2884456,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODQ0NTY=",
    "user": {
      "login": "stefanv",
      "id": 45071,
      "node_id": "MDQ6VXNlcjQ1MDcx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/45071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stefanv",
      "html_url": "https://github.com/stefanv",
      "followers_url": "https://api.github.com/users/stefanv/followers",
      "following_url": "https://api.github.com/users/stefanv/following{/other_user}",
      "gists_url": "https://api.github.com/users/stefanv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stefanv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stefanv/subscriptions",
      "organizations_url": "https://api.github.com/users/stefanv/orgs",
      "repos_url": "https://api.github.com/users/stefanv/repos",
      "events_url": "https://api.github.com/users/stefanv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stefanv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-26T22:49:05Z",
    "updated_at": "2011-11-26T22:49:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "@fperez Thanks, the e-mail case is the most common one I deal with.  Dealing with all the corner cases cleanly may be very hard, so I'm be happy with the current behaviour.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2884498",
    "html_url": "https://github.com/ipython/ipython/pull/1007#issuecomment-2884498",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1007",
    "id": 2884498,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODQ0OTg=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-26T22:55:36Z",
    "updated_at": "2011-11-26T22:55:36Z",
    "author_association": "MEMBER",
    "body": "Great, merging and closing.  Thanks for the feedback!\n"
  }
]
