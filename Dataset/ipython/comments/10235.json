[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/278107337",
    "html_url": "https://github.com/ipython/ipython/issues/10235#issuecomment-278107337",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10235",
    "id": 278107337,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODEwNzMzNw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-07T19:07:54Z",
    "updated_at": "2017-02-07T19:07:54Z",
    "author_association": "MEMBER",
    "body": "Hum, `types` and deeprelaod are pretty dark magic. We likely need to blacklist some modules.\r\n\r\nDo you want to attempt a PR ?"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/278112554",
    "html_url": "https://github.com/ipython/ipython/issues/10235#issuecomment-278112554",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10235",
    "id": 278112554,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODExMjU1NA==",
    "user": {
      "login": "Perlence",
      "id": 1044300,
      "node_id": "MDQ6VXNlcjEwNDQzMDA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1044300?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Perlence",
      "html_url": "https://github.com/Perlence",
      "followers_url": "https://api.github.com/users/Perlence/followers",
      "following_url": "https://api.github.com/users/Perlence/following{/other_user}",
      "gists_url": "https://api.github.com/users/Perlence/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Perlence/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Perlence/subscriptions",
      "organizations_url": "https://api.github.com/users/Perlence/orgs",
      "repos_url": "https://api.github.com/users/Perlence/repos",
      "events_url": "https://api.github.com/users/Perlence/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Perlence/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-07T19:25:53Z",
    "updated_at": "2017-02-07T19:25:53Z",
    "author_association": "NONE",
    "body": "> Do you want to attempt a PR ?\r\n\r\nSorry, I have no idea what's going on there."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/278138719",
    "html_url": "https://github.com/ipython/ipython/issues/10235#issuecomment-278138719",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10235",
    "id": 278138719,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODEzODcxOQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-07T21:01:52Z",
    "updated_at": "2017-02-07T21:01:52Z",
    "author_association": "MEMBER",
    "body": "> Sorry, I have no idea what's going on there.\r\n\r\nNo worries. We'll have a look ! Thanks. "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/329126208",
    "html_url": "https://github.com/ipython/ipython/issues/10235#issuecomment-329126208",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10235",
    "id": 329126208,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTEyNjIwOA==",
    "user": {
      "login": "tillahoffmann",
      "id": 966348,
      "node_id": "MDQ6VXNlcjk2NjM0OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/966348?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tillahoffmann",
      "html_url": "https://github.com/tillahoffmann",
      "followers_url": "https://api.github.com/users/tillahoffmann/followers",
      "following_url": "https://api.github.com/users/tillahoffmann/following{/other_user}",
      "gists_url": "https://api.github.com/users/tillahoffmann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tillahoffmann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tillahoffmann/subscriptions",
      "organizations_url": "https://api.github.com/users/tillahoffmann/orgs",
      "repos_url": "https://api.github.com/users/tillahoffmann/repos",
      "events_url": "https://api.github.com/users/tillahoffmann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tillahoffmann/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-13T10:27:11Z",
    "updated_at": "2017-09-13T10:27:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Carreau, I am still seeing this issue in 6.1.0 even though `types` should have been excluded explicitly as in your #10318. Any thoughts? My python version is 3.6.2."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/335052092",
    "html_url": "https://github.com/ipython/ipython/issues/10235#issuecomment-335052092",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10235",
    "id": 335052092,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTA1MjA5Mg==",
    "user": {
      "login": "astromme",
      "id": 126986,
      "node_id": "MDQ6VXNlcjEyNjk4Ng==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/126986?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/astromme",
      "html_url": "https://github.com/astromme",
      "followers_url": "https://api.github.com/users/astromme/followers",
      "following_url": "https://api.github.com/users/astromme/following{/other_user}",
      "gists_url": "https://api.github.com/users/astromme/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/astromme/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/astromme/subscriptions",
      "organizations_url": "https://api.github.com/users/astromme/orgs",
      "repos_url": "https://api.github.com/users/astromme/repos",
      "events_url": "https://api.github.com/users/astromme/events{/privacy}",
      "received_events_url": "https://api.github.com/users/astromme/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-09T01:13:50Z",
    "updated_at": "2017-10-09T01:13:50Z",
    "author_association": "NONE",
    "body": "I'm also seeing this still in 6.2.1"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/335228064",
    "html_url": "https://github.com/ipython/ipython/issues/10235#issuecomment-335228064",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10235",
    "id": 335228064,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTIyODA2NA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-09T17:36:07Z",
    "updated_at": "2017-10-09T17:36:07Z",
    "author_association": "MEMBER",
    "body": "Hum, happy to reopen, but I can't reproduce on a fresh install, so I'll have issues to debug : \r\n```\r\n$ ipython\r\nPython 3.6.3 | packaged by conda-forge | (default, Oct  5 2017, 19:18:17)\r\nType 'copyright', 'credits' or 'license' for more information\r\nIPython 6.2.1 -- An enhanced Interactive Python. Type '?' for help.\r\n\r\nIn [1]: import types\r\n\r\nIn [2]: from IPython.lib.deepreload import reload\r\n\r\nIn [3]: reload(types)\r\nOut[3]: <module 'types' from '/Users/bussonniermatthias/anaconda/lib/python3.6/types.py'>\r\n```\r\n\r\nDo you both have the exact same traceback ? "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/335253132",
    "html_url": "https://github.com/ipython/ipython/issues/10235#issuecomment-335253132",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10235",
    "id": 335253132,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTI1MzEzMg==",
    "user": {
      "login": "tillahoffmann",
      "id": 966348,
      "node_id": "MDQ6VXNlcjk2NjM0OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/966348?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tillahoffmann",
      "html_url": "https://github.com/tillahoffmann",
      "followers_url": "https://api.github.com/users/tillahoffmann/followers",
      "following_url": "https://api.github.com/users/tillahoffmann/following{/other_user}",
      "gists_url": "https://api.github.com/users/tillahoffmann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tillahoffmann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tillahoffmann/subscriptions",
      "organizations_url": "https://api.github.com/users/tillahoffmann/orgs",
      "repos_url": "https://api.github.com/users/tillahoffmann/repos",
      "events_url": "https://api.github.com/users/tillahoffmann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tillahoffmann/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-09T18:49:11Z",
    "updated_at": "2017-10-09T18:49:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "The example you provide actually works fine for me. However, I can't reload other packages (e.g. `json`):\r\n\r\n```\r\nPython 3.6.2 (default, Jul 24 2017, 19:47:39) \r\nType 'copyright', 'credits' or 'license' for more information\r\nIPython 6.2.1 -- An enhanced Interactive Python. Type '?' for help.\r\n\r\nIn [1]: import json\r\n\r\nIn [2]: from IPython.lib.deepreload import reload\r\n\r\nIn [3]: reload(json)\r\nReloading json.decoder\r\nReloading re\r\nReloading enum\r\nReloading types\r\nReloading functools\r\nReloading _functools\r\nReloading abc\r\nReloading _weakrefset\r\nReloading _weakref\r\nReloading collections\r\nReloading _collections_abc\r\nReloading operator\r\nReloading _operator\r\nReloading keyword\r\nReloading heapq\r\nReloading _heapq\r\nReloading importlib\r\nReloading _imp\r\nReloading _frozen_importlib\r\nReloading _frozen_importlib_external\r\nReloading warnings\r\n---------------------------------------------------------------------------\r\nNotImplementedError                       Traceback (most recent call last)\r\n<ipython-input-3-9009d350791b> in <module>()\r\n----> 1 reload(json)\r\n\r\n/usr/local/lib/python3.6/site-packages/IPython/lib/deepreload.py in reload(module, exclude)\r\n    343     try:\r\n    344         with replace_import_hook(deep_import_hook):\r\n--> 345             return deep_reload_hook(module)\r\n    346     finally:\r\n    347         found_now = {}\r\n\r\n/usr/local/lib/python3.6/site-packages/IPython/lib/deepreload.py in deep_reload_hook(m)\r\n    315 \r\n    316     try:\r\n--> 317         newm = imp.load_module(name, fp, filename, stuff)\r\n    318     except:\r\n    319          # load_module probably removed name from modules because of\r\n\r\n/usr/local/lib/python3.6/imp.py in load_module(name, file, filename, details)\r\n    242             return load_dynamic(name, filename, file)\r\n    243     elif type_ == PKG_DIRECTORY:\r\n--> 244         return load_package(name, filename)\r\n    245     elif type_ == C_BUILTIN:\r\n    246         return init_builtin(name)\r\n\r\n/usr/local/lib/python3.6/imp.py in load_package(name, path)\r\n    212                                         submodule_search_locations=[])\r\n    213     if name in sys.modules:\r\n--> 214         return _exec(spec, sys.modules[name])\r\n    215     else:\r\n    216         return _load(spec)\r\n\r\n/usr/local/lib/python3.6/importlib/_bootstrap.py in _exec(spec, module)\r\n\r\n/usr/local/lib/python3.6/importlib/_bootstrap_external.py in exec_module(self, module)\r\n\r\n/usr/local/lib/python3.6/importlib/_bootstrap.py in _call_with_frames_removed(f, *args, **kwds)\r\n\r\n/usr/local/lib/python3.6/json/__init__.py in <module>()\r\n    104 __author__ = 'Bob Ippolito <bob@redivi.com>'\r\n    105 \r\n--> 106 from .decoder import JSONDecoder, JSONDecodeError\r\n    107 from .encoder import JSONEncoder\r\n    108 import codecs\r\n\r\n/usr/local/lib/python3.6/site-packages/IPython/lib/deepreload.py in deep_import_hook(name, globals, locals, fromlist, level)\r\n    250     parent, buf = get_parent(globals, level)\r\n    251 \r\n--> 252     head, name, buf = load_next(parent, None if level < 0 else parent, name, buf)\r\n    253 \r\n    254     tail = head\r\n\r\n/usr/local/lib/python3.6/site-packages/IPython/lib/deepreload.py in load_next(mod, altmod, name, buf)\r\n    153     buf += subname\r\n    154 \r\n--> 155     result = import_submodule(mod, subname, buf)\r\n    156     if result is None and mod != altmod:\r\n    157         result = import_submodule(altmod, subname, subname)\r\n\r\n/usr/local/lib/python3.6/site-packages/IPython/lib/deepreload.py in import_submodule(mod, subname, fullname)\r\n    199 \r\n    200         try:\r\n--> 201             m = imp.load_module(fullname, fp, filename, stuff)\r\n    202         except:\r\n    203             # load_module probably removed name from modules because of\r\n\r\n/usr/local/lib/python3.6/imp.py in load_module(name, file, filename, details)\r\n    232         raise ValueError(msg)\r\n    233     elif type_ == PY_SOURCE:\r\n--> 234         return load_source(name, filename, file)\r\n    235     elif type_ == PY_COMPILED:\r\n    236         return load_compiled(name, filename, file)\r\n\r\n/usr/local/lib/python3.6/imp.py in load_source(name, pathname, file)\r\n    168     spec = util.spec_from_file_location(name, pathname, loader=loader)\r\n    169     if name in sys.modules:\r\n--> 170         module = _exec(spec, sys.modules[name])\r\n    171     else:\r\n    172         module = _load(spec)\r\n\r\n/usr/local/lib/python3.6/importlib/_bootstrap.py in _exec(spec, module)\r\n\r\n/usr/local/lib/python3.6/importlib/_bootstrap_external.py in exec_module(self, module)\r\n\r\n/usr/local/lib/python3.6/importlib/_bootstrap.py in _call_with_frames_removed(f, *args, **kwds)\r\n\r\n/usr/local/lib/python3.6/json/decoder.py in <module>()\r\n      1 \"\"\"Implementation of JSONDecoder\r\n      2 \"\"\"\r\n----> 3 import re\r\n      4 \r\n      5 from json import scanner\r\n\r\n/usr/local/lib/python3.6/site-packages/IPython/lib/deepreload.py in deep_import_hook(name, globals, locals, fromlist, level)\r\n    250     parent, buf = get_parent(globals, level)\r\n    251 \r\n--> 252     head, name, buf = load_next(parent, None if level < 0 else parent, name, buf)\r\n    253 \r\n    254     tail = head\r\n\r\n/usr/local/lib/python3.6/site-packages/IPython/lib/deepreload.py in load_next(mod, altmod, name, buf)\r\n    153     buf += subname\r\n    154 \r\n--> 155     result = import_submodule(mod, subname, buf)\r\n    156     if result is None and mod != altmod:\r\n    157         result = import_submodule(altmod, subname, subname)\r\n\r\n/usr/local/lib/python3.6/site-packages/IPython/lib/deepreload.py in import_submodule(mod, subname, fullname)\r\n    199 \r\n    200         try:\r\n--> 201             m = imp.load_module(fullname, fp, filename, stuff)\r\n    202         except:\r\n    203             # load_module probably removed name from modules because of\r\n\r\n/usr/local/lib/python3.6/imp.py in load_module(name, file, filename, details)\r\n    232         raise ValueError(msg)\r\n    233     elif type_ == PY_SOURCE:\r\n--> 234         return load_source(name, filename, file)\r\n    235     elif type_ == PY_COMPILED:\r\n    236         return load_compiled(name, filename, file)\r\n\r\n/usr/local/lib/python3.6/imp.py in load_source(name, pathname, file)\r\n    168     spec = util.spec_from_file_location(name, pathname, loader=loader)\r\n    169     if name in sys.modules:\r\n--> 170         module = _exec(spec, sys.modules[name])\r\n    171     else:\r\n    172         module = _load(spec)\r\n\r\n/usr/local/lib/python3.6/importlib/_bootstrap.py in _exec(spec, module)\r\n\r\n/usr/local/lib/python3.6/importlib/_bootstrap_external.py in exec_module(self, module)\r\n\r\n/usr/local/lib/python3.6/importlib/_bootstrap.py in _call_with_frames_removed(f, *args, **kwds)\r\n\r\n/usr/local/lib/python3.6/re.py in <module>()\r\n    120 \"\"\"\r\n    121 \r\n--> 122 import enum\r\n    123 import sre_compile\r\n    124 import sre_parse\r\n\r\n/usr/local/lib/python3.6/site-packages/IPython/lib/deepreload.py in deep_import_hook(name, globals, locals, fromlist, level)\r\n    250     parent, buf = get_parent(globals, level)\r\n    251 \r\n--> 252     head, name, buf = load_next(parent, None if level < 0 else parent, name, buf)\r\n    253 \r\n    254     tail = head\r\n\r\n/usr/local/lib/python3.6/site-packages/IPython/lib/deepreload.py in load_next(mod, altmod, name, buf)\r\n    153     buf += subname\r\n    154 \r\n--> 155     result = import_submodule(mod, subname, buf)\r\n    156     if result is None and mod != altmod:\r\n    157         result = import_submodule(altmod, subname, subname)\r\n\r\n/usr/local/lib/python3.6/site-packages/IPython/lib/deepreload.py in import_submodule(mod, subname, fullname)\r\n    199 \r\n    200         try:\r\n--> 201             m = imp.load_module(fullname, fp, filename, stuff)\r\n    202         except:\r\n    203             # load_module probably removed name from modules because of\r\n\r\n/usr/local/lib/python3.6/imp.py in load_module(name, file, filename, details)\r\n    232         raise ValueError(msg)\r\n    233     elif type_ == PY_SOURCE:\r\n--> 234         return load_source(name, filename, file)\r\n    235     elif type_ == PY_COMPILED:\r\n    236         return load_compiled(name, filename, file)\r\n\r\n/usr/local/lib/python3.6/imp.py in load_source(name, pathname, file)\r\n    168     spec = util.spec_from_file_location(name, pathname, loader=loader)\r\n    169     if name in sys.modules:\r\n--> 170         module = _exec(spec, sys.modules[name])\r\n    171     else:\r\n    172         module = _load(spec)\r\n\r\n/usr/local/lib/python3.6/importlib/_bootstrap.py in _exec(spec, module)\r\n\r\n/usr/local/lib/python3.6/importlib/_bootstrap_external.py in exec_module(self, module)\r\n\r\n/usr/local/lib/python3.6/importlib/_bootstrap.py in _call_with_frames_removed(f, *args, **kwds)\r\n\r\n/usr/local/lib/python3.6/enum.py in <module>()\r\n      1 import sys\r\n----> 2 from types import MappingProxyType, DynamicClassAttribute\r\n      3 from functools import reduce\r\n      4 from operator import or_ as _or_\r\n      5 \r\n\r\n/usr/local/lib/python3.6/site-packages/IPython/lib/deepreload.py in deep_import_hook(name, globals, locals, fromlist, level)\r\n    250     parent, buf = get_parent(globals, level)\r\n    251 \r\n--> 252     head, name, buf = load_next(parent, None if level < 0 else parent, name, buf)\r\n    253 \r\n    254     tail = head\r\n\r\n/usr/local/lib/python3.6/site-packages/IPython/lib/deepreload.py in load_next(mod, altmod, name, buf)\r\n    153     buf += subname\r\n    154 \r\n--> 155     result = import_submodule(mod, subname, buf)\r\n    156     if result is None and mod != altmod:\r\n    157         result = import_submodule(altmod, subname, subname)\r\n\r\n/usr/local/lib/python3.6/site-packages/IPython/lib/deepreload.py in import_submodule(mod, subname, fullname)\r\n    199 \r\n    200         try:\r\n--> 201             m = imp.load_module(fullname, fp, filename, stuff)\r\n    202         except:\r\n    203             # load_module probably removed name from modules because of\r\n\r\n/usr/local/lib/python3.6/imp.py in load_module(name, file, filename, details)\r\n    232         raise ValueError(msg)\r\n    233     elif type_ == PY_SOURCE:\r\n--> 234         return load_source(name, filename, file)\r\n    235     elif type_ == PY_COMPILED:\r\n    236         return load_compiled(name, filename, file)\r\n\r\n/usr/local/lib/python3.6/imp.py in load_source(name, pathname, file)\r\n    168     spec = util.spec_from_file_location(name, pathname, loader=loader)\r\n    169     if name in sys.modules:\r\n--> 170         module = _exec(spec, sys.modules[name])\r\n    171     else:\r\n    172         module = _load(spec)\r\n\r\n/usr/local/lib/python3.6/importlib/_bootstrap.py in _exec(spec, module)\r\n\r\n/usr/local/lib/python3.6/importlib/_bootstrap_external.py in exec_module(self, module)\r\n\r\n/usr/local/lib/python3.6/importlib/_bootstrap.py in _call_with_frames_removed(f, *args, **kwds)\r\n\r\n/usr/local/lib/python3.6/types.py in <module>()\r\n    169 \r\n    170 \r\n--> 171 import functools as _functools\r\n    172 import collections.abc as _collections_abc\r\n    173 \r\n\r\n/usr/local/lib/python3.6/site-packages/IPython/lib/deepreload.py in deep_import_hook(name, globals, locals, fromlist, level)\r\n    250     parent, buf = get_parent(globals, level)\r\n    251 \r\n--> 252     head, name, buf = load_next(parent, None if level < 0 else parent, name, buf)\r\n    253 \r\n    254     tail = head\r\n\r\n/usr/local/lib/python3.6/site-packages/IPython/lib/deepreload.py in load_next(mod, altmod, name, buf)\r\n    153     buf += subname\r\n    154 \r\n--> 155     result = import_submodule(mod, subname, buf)\r\n    156     if result is None and mod != altmod:\r\n    157         result = import_submodule(altmod, subname, subname)\r\n\r\n/usr/local/lib/python3.6/site-packages/IPython/lib/deepreload.py in import_submodule(mod, subname, fullname)\r\n    199 \r\n    200         try:\r\n--> 201             m = imp.load_module(fullname, fp, filename, stuff)\r\n    202         except:\r\n    203             # load_module probably removed name from modules because of\r\n\r\n/usr/local/lib/python3.6/imp.py in load_module(name, file, filename, details)\r\n    232         raise ValueError(msg)\r\n    233     elif type_ == PY_SOURCE:\r\n--> 234         return load_source(name, filename, file)\r\n    235     elif type_ == PY_COMPILED:\r\n    236         return load_compiled(name, filename, file)\r\n\r\n/usr/local/lib/python3.6/imp.py in load_source(name, pathname, file)\r\n    168     spec = util.spec_from_file_location(name, pathname, loader=loader)\r\n    169     if name in sys.modules:\r\n--> 170         module = _exec(spec, sys.modules[name])\r\n    171     else:\r\n    172         module = _load(spec)\r\n\r\n/usr/local/lib/python3.6/importlib/_bootstrap.py in _exec(spec, module)\r\n\r\n/usr/local/lib/python3.6/importlib/_bootstrap_external.py in exec_module(self, module)\r\n\r\n/usr/local/lib/python3.6/importlib/_bootstrap.py in _call_with_frames_removed(f, *args, **kwds)\r\n\r\n/usr/local/lib/python3.6/functools.py in <module>()\r\n     19     pass\r\n     20 from abc import get_cache_token\r\n---> 21 from collections import namedtuple\r\n     22 from types import MappingProxyType\r\n     23 from weakref import WeakKeyDictionary\r\n\r\n/usr/local/lib/python3.6/site-packages/IPython/lib/deepreload.py in deep_import_hook(name, globals, locals, fromlist, level)\r\n    250     parent, buf = get_parent(globals, level)\r\n    251 \r\n--> 252     head, name, buf = load_next(parent, None if level < 0 else parent, name, buf)\r\n    253 \r\n    254     tail = head\r\n\r\n/usr/local/lib/python3.6/site-packages/IPython/lib/deepreload.py in load_next(mod, altmod, name, buf)\r\n    153     buf += subname\r\n    154 \r\n--> 155     result = import_submodule(mod, subname, buf)\r\n    156     if result is None and mod != altmod:\r\n    157         result = import_submodule(altmod, subname, subname)\r\n\r\n/usr/local/lib/python3.6/site-packages/IPython/lib/deepreload.py in import_submodule(mod, subname, fullname)\r\n    199 \r\n    200         try:\r\n--> 201             m = imp.load_module(fullname, fp, filename, stuff)\r\n    202         except:\r\n    203             # load_module probably removed name from modules because of\r\n\r\n/usr/local/lib/python3.6/imp.py in load_module(name, file, filename, details)\r\n    242             return load_dynamic(name, filename, file)\r\n    243     elif type_ == PKG_DIRECTORY:\r\n--> 244         return load_package(name, filename)\r\n    245     elif type_ == C_BUILTIN:\r\n    246         return init_builtin(name)\r\n\r\n/usr/local/lib/python3.6/imp.py in load_package(name, path)\r\n    212                                         submodule_search_locations=[])\r\n    213     if name in sys.modules:\r\n--> 214         return _exec(spec, sys.modules[name])\r\n    215     else:\r\n    216         return _load(spec)\r\n\r\n/usr/local/lib/python3.6/importlib/_bootstrap.py in _exec(spec, module)\r\n\r\n/usr/local/lib/python3.6/importlib/_bootstrap_external.py in exec_module(self, module)\r\n\r\n/usr/local/lib/python3.6/importlib/_bootstrap.py in _call_with_frames_removed(f, *args, **kwds)\r\n\r\n/usr/local/lib/python3.6/collections/__init__.py in <module>()\r\n     27 from keyword import iskeyword as _iskeyword\r\n     28 import sys as _sys\r\n---> 29 import heapq as _heapq\r\n     30 from _weakref import proxy as _proxy\r\n     31 from itertools import repeat as _repeat, chain as _chain, starmap as _starmap\r\n\r\n/usr/local/lib/python3.6/site-packages/IPython/lib/deepreload.py in deep_import_hook(name, globals, locals, fromlist, level)\r\n    250     parent, buf = get_parent(globals, level)\r\n    251 \r\n--> 252     head, name, buf = load_next(parent, None if level < 0 else parent, name, buf)\r\n    253 \r\n    254     tail = head\r\n\r\n/usr/local/lib/python3.6/site-packages/IPython/lib/deepreload.py in load_next(mod, altmod, name, buf)\r\n    153     buf += subname\r\n    154 \r\n--> 155     result = import_submodule(mod, subname, buf)\r\n    156     if result is None and mod != altmod:\r\n    157         result = import_submodule(altmod, subname, subname)\r\n\r\n/usr/local/lib/python3.6/site-packages/IPython/lib/deepreload.py in import_submodule(mod, subname, fullname)\r\n    199 \r\n    200         try:\r\n--> 201             m = imp.load_module(fullname, fp, filename, stuff)\r\n    202         except:\r\n    203             # load_module probably removed name from modules because of\r\n\r\n/usr/local/lib/python3.6/imp.py in load_module(name, file, filename, details)\r\n    232         raise ValueError(msg)\r\n    233     elif type_ == PY_SOURCE:\r\n--> 234         return load_source(name, filename, file)\r\n    235     elif type_ == PY_COMPILED:\r\n    236         return load_compiled(name, filename, file)\r\n\r\n/usr/local/lib/python3.6/imp.py in load_source(name, pathname, file)\r\n    168     spec = util.spec_from_file_location(name, pathname, loader=loader)\r\n    169     if name in sys.modules:\r\n--> 170         module = _exec(spec, sys.modules[name])\r\n    171     else:\r\n    172         module = _load(spec)\r\n\r\n/usr/local/lib/python3.6/importlib/_bootstrap.py in _exec(spec, module)\r\n\r\n/usr/local/lib/python3.6/importlib/_bootstrap_external.py in exec_module(self, module)\r\n\r\n/usr/local/lib/python3.6/importlib/_bootstrap.py in _call_with_frames_removed(f, *args, **kwds)\r\n\r\n/usr/local/lib/python3.6/heapq.py in <module>()\r\n    585 # If available, use C implementation\r\n    586 try:\r\n--> 587     from _heapq import *\r\n    588 except ImportError:\r\n    589     pass\r\n\r\n/usr/local/lib/python3.6/site-packages/IPython/lib/deepreload.py in deep_import_hook(name, globals, locals, fromlist, level)\r\n    250     parent, buf = get_parent(globals, level)\r\n    251 \r\n--> 252     head, name, buf = load_next(parent, None if level < 0 else parent, name, buf)\r\n    253 \r\n    254     tail = head\r\n\r\n/usr/local/lib/python3.6/site-packages/IPython/lib/deepreload.py in load_next(mod, altmod, name, buf)\r\n    153     buf += subname\r\n    154 \r\n--> 155     result = import_submodule(mod, subname, buf)\r\n    156     if result is None and mod != altmod:\r\n    157         result = import_submodule(altmod, subname, subname)\r\n\r\n/usr/local/lib/python3.6/site-packages/IPython/lib/deepreload.py in import_submodule(mod, subname, fullname)\r\n    199 \r\n    200         try:\r\n--> 201             m = imp.load_module(fullname, fp, filename, stuff)\r\n    202         except:\r\n    203             # load_module probably removed name from modules because of\r\n\r\n/usr/local/lib/python3.6/imp.py in load_module(name, file, filename, details)\r\n    240                 return load_dynamic(name, filename, opened_file)\r\n    241         else:\r\n--> 242             return load_dynamic(name, filename, file)\r\n    243     elif type_ == PKG_DIRECTORY:\r\n    244         return load_package(name, filename)\r\n\r\n/usr/local/lib/python3.6/imp.py in load_dynamic(name, path, file)\r\n    333         Load an extension module.\r\n    334         \"\"\"\r\n--> 335         import importlib.machinery\r\n    336         loader = importlib.machinery.ExtensionFileLoader(name, path)\r\n    337 \r\n\r\n/usr/local/lib/python3.6/site-packages/IPython/lib/deepreload.py in deep_import_hook(name, globals, locals, fromlist, level)\r\n    250     parent, buf = get_parent(globals, level)\r\n    251 \r\n--> 252     head, name, buf = load_next(parent, None if level < 0 else parent, name, buf)\r\n    253 \r\n    254     tail = head\r\n\r\n/usr/local/lib/python3.6/site-packages/IPython/lib/deepreload.py in load_next(mod, altmod, name, buf)\r\n    153     buf += subname\r\n    154 \r\n--> 155     result = import_submodule(mod, subname, buf)\r\n    156     if result is None and mod != altmod:\r\n    157         result = import_submodule(altmod, subname, subname)\r\n\r\n/usr/local/lib/python3.6/site-packages/IPython/lib/deepreload.py in import_submodule(mod, subname, fullname)\r\n    199 \r\n    200         try:\r\n--> 201             m = imp.load_module(fullname, fp, filename, stuff)\r\n    202         except:\r\n    203             # load_module probably removed name from modules because of\r\n\r\n/usr/local/lib/python3.6/imp.py in load_module(name, file, filename, details)\r\n    242             return load_dynamic(name, filename, file)\r\n    243     elif type_ == PKG_DIRECTORY:\r\n--> 244         return load_package(name, filename)\r\n    245     elif type_ == C_BUILTIN:\r\n    246         return init_builtin(name)\r\n\r\n/usr/local/lib/python3.6/imp.py in load_package(name, path)\r\n    212                                         submodule_search_locations=[])\r\n    213     if name in sys.modules:\r\n--> 214         return _exec(spec, sys.modules[name])\r\n    215     else:\r\n    216         return _load(spec)\r\n\r\n/usr/local/lib/python3.6/importlib/_bootstrap.py in _exec(spec, module)\r\n\r\n/usr/local/lib/python3.6/importlib/_bootstrap_external.py in exec_module(self, module)\r\n\r\n/usr/local/lib/python3.6/importlib/_bootstrap.py in _call_with_frames_removed(f, *args, **kwds)\r\n\r\n/usr/local/lib/python3.6/importlib/__init__.py in <module>()\r\n     56 \r\n     57 import types\r\n---> 58 import warnings\r\n     59 \r\n     60 \r\n\r\n/usr/local/lib/python3.6/site-packages/IPython/lib/deepreload.py in deep_import_hook(name, globals, locals, fromlist, level)\r\n    250     parent, buf = get_parent(globals, level)\r\n    251 \r\n--> 252     head, name, buf = load_next(parent, None if level < 0 else parent, name, buf)\r\n    253 \r\n    254     tail = head\r\n\r\n/usr/local/lib/python3.6/site-packages/IPython/lib/deepreload.py in load_next(mod, altmod, name, buf)\r\n    153     buf += subname\r\n    154 \r\n--> 155     result = import_submodule(mod, subname, buf)\r\n    156     if result is None and mod != altmod:\r\n    157         result = import_submodule(altmod, subname, subname)\r\n\r\n/usr/local/lib/python3.6/site-packages/IPython/lib/deepreload.py in import_submodule(mod, subname, fullname)\r\n    199 \r\n    200         try:\r\n--> 201             m = imp.load_module(fullname, fp, filename, stuff)\r\n    202         except:\r\n    203             # load_module probably removed name from modules because of\r\n\r\n/usr/local/lib/python3.6/imp.py in load_module(name, file, filename, details)\r\n    232         raise ValueError(msg)\r\n    233     elif type_ == PY_SOURCE:\r\n--> 234         return load_source(name, filename, file)\r\n    235     elif type_ == PY_COMPILED:\r\n    236         return load_compiled(name, filename, file)\r\n\r\n/usr/local/lib/python3.6/imp.py in load_source(name, pathname, file)\r\n    168     spec = util.spec_from_file_location(name, pathname, loader=loader)\r\n    169     if name in sys.modules:\r\n--> 170         module = _exec(spec, sys.modules[name])\r\n    171     else:\r\n    172         module = _load(spec)\r\n\r\n/usr/local/lib/python3.6/importlib/_bootstrap.py in _exec(spec, module)\r\n\r\n/usr/local/lib/python3.6/importlib/_bootstrap.py in _init_module_attrs(spec, module, override)\r\n\r\n/usr/local/lib/python3.6/importlib/_bootstrap.py in cached(self)\r\n\r\nNotImplementedError: \r\n```"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/335260863",
    "html_url": "https://github.com/ipython/ipython/issues/10235#issuecomment-335260863",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10235",
    "id": 335260863,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTI2MDg2Mw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-09T19:21:02Z",
    "updated_at": "2017-10-09T19:21:02Z",
    "author_association": "MEMBER",
    "body": "I think we'll have to be smarter and auto exclude modules we can't deep reload  and warn users they were not deep reloaded. "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/353787863",
    "html_url": "https://github.com/ipython/ipython/issues/10235#issuecomment-353787863",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10235",
    "id": 353787863,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Mzc4Nzg2Mw==",
    "user": {
      "login": "acandreani",
      "id": 6622130,
      "node_id": "MDQ6VXNlcjY2MjIxMzA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6622130?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/acandreani",
      "html_url": "https://github.com/acandreani",
      "followers_url": "https://api.github.com/users/acandreani/followers",
      "following_url": "https://api.github.com/users/acandreani/following{/other_user}",
      "gists_url": "https://api.github.com/users/acandreani/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/acandreani/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/acandreani/subscriptions",
      "organizations_url": "https://api.github.com/users/acandreani/orgs",
      "repos_url": "https://api.github.com/users/acandreani/repos",
      "events_url": "https://api.github.com/users/acandreani/events{/privacy}",
      "received_events_url": "https://api.github.com/users/acandreani/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-24T14:40:18Z",
    "updated_at": "2017-12-24T15:04:10Z",
    "author_association": "NONE",
    "body": "temporary solution: add deep level control to recursion. Use this code in startup folder, on linux is: ~/.ipython/profile_default/startup/\r\n```from types import ModuleType\r\nfrom autoreload import reload as r\r\n\r\ndef reload(module,level=0):\r\n    \"\"\"Recursively reload modules.\"\"\"\r\n    r(module)\r\n    if level>0:\r\n        for attribute_name in dir(module):\r\n            attribute = getattr(module, attribute_name)\r\n            if type(attribute) is ModuleType:\r\n                reload(attribute,level-1)\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/395619894",
    "html_url": "https://github.com/ipython/ipython/issues/10235#issuecomment-395619894",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10235",
    "id": 395619894,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTYxOTg5NA==",
    "user": {
      "login": "AlJohri",
      "id": 2790092,
      "node_id": "MDQ6VXNlcjI3OTAwOTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2790092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AlJohri",
      "html_url": "https://github.com/AlJohri",
      "followers_url": "https://api.github.com/users/AlJohri/followers",
      "following_url": "https://api.github.com/users/AlJohri/following{/other_user}",
      "gists_url": "https://api.github.com/users/AlJohri/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AlJohri/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AlJohri/subscriptions",
      "organizations_url": "https://api.github.com/users/AlJohri/orgs",
      "repos_url": "https://api.github.com/users/AlJohri/repos",
      "events_url": "https://api.github.com/users/AlJohri/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AlJohri/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-08T01:48:39Z",
    "updated_at": "2018-06-08T01:48:39Z",
    "author_association": "NONE",
    "body": "I just ran into this issue as well while trying to use `deepreload.reload`"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/396252041",
    "html_url": "https://github.com/ipython/ipython/issues/10235#issuecomment-396252041",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10235",
    "id": 396252041,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjI1MjA0MQ==",
    "user": {
      "login": "Vict0rSch",
      "id": 9283470,
      "node_id": "MDQ6VXNlcjkyODM0NzA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/9283470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Vict0rSch",
      "html_url": "https://github.com/Vict0rSch",
      "followers_url": "https://api.github.com/users/Vict0rSch/followers",
      "following_url": "https://api.github.com/users/Vict0rSch/following{/other_user}",
      "gists_url": "https://api.github.com/users/Vict0rSch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Vict0rSch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Vict0rSch/subscriptions",
      "organizations_url": "https://api.github.com/users/Vict0rSch/orgs",
      "repos_url": "https://api.github.com/users/Vict0rSch/repos",
      "events_url": "https://api.github.com/users/Vict0rSch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Vict0rSch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-11T13:56:28Z",
    "updated_at": "2018-06-11T13:56:28Z",
    "author_association": "NONE",
    "body": "Same here (`NotImplementedError` on reloading `types`)\r\n\r\n    Python 3.6.4\r\n    IPython 6.4.0\r\n    macOS 10.13.2  "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/416030392",
    "html_url": "https://github.com/ipython/ipython/issues/10235#issuecomment-416030392",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/10235",
    "id": 416030392,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjAzMDM5Mg==",
    "user": {
      "login": "bmintz",
      "id": 538336,
      "node_id": "MDQ6VXNlcjUzODMzNg==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/538336?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bmintz",
      "html_url": "https://github.com/bmintz",
      "followers_url": "https://api.github.com/users/bmintz/followers",
      "following_url": "https://api.github.com/users/bmintz/following{/other_user}",
      "gists_url": "https://api.github.com/users/bmintz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bmintz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bmintz/subscriptions",
      "organizations_url": "https://api.github.com/users/bmintz/orgs",
      "repos_url": "https://api.github.com/users/bmintz/repos",
      "events_url": "https://api.github.com/users/bmintz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bmintz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-26T11:01:51Z",
    "updated_at": "2018-08-26T11:01:51Z",
    "author_association": "NONE",
    "body": "I cannot reproduce this with `types`, but I can reproduce this by reloading `deepreload` itself.\r\nUbuntu 18.04.1 LTS\r\nCPython 3.6.5\r\nIPython 6.5.0"
  }
]
