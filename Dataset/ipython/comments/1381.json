[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3827414",
    "html_url": "https://github.com/ipython/ipython/issues/1381#issuecomment-3827414",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1381",
    "id": 3827414,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4Mjc0MTQ=",
    "user": {
      "login": "v923z",
      "id": 1310472,
      "node_id": "MDQ6VXNlcjEzMTA0NzI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1310472?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/v923z",
      "html_url": "https://github.com/v923z",
      "followers_url": "https://api.github.com/users/v923z/followers",
      "following_url": "https://api.github.com/users/v923z/following{/other_user}",
      "gists_url": "https://api.github.com/users/v923z/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/v923z/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/v923z/subscriptions",
      "organizations_url": "https://api.github.com/users/v923z/orgs",
      "repos_url": "https://api.github.com/users/v923z/repos",
      "events_url": "https://api.github.com/users/v923z/events{/privacy}",
      "received_events_url": "https://api.github.com/users/v923z/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-06T12:02:51Z",
    "updated_at": "2012-02-06T12:27:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "This issue is not related to eqnarray as such. This code also fails, while this is just a simple one-line equation.\n\n```\n$V^{PP}_{\\mathbf{k},\\mathbf{k'},\\mathbf{q}} = \\left[ AX_{\\mathbf{k+q}}X_{\\mathbf{k'}} + B\\right]$\n```\n\nBy escaping some of the underscores, the expression is rendered properly. What is really odd is that it is enough to escape only one or two underscores, but not all. \n\nThis was first raised in this issue, if it is of any relevance: #1275 In the link in #1275, there seems to be a fix via some configuration of MathJax. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3911241",
    "html_url": "https://github.com/ipython/ipython/issues/1381#issuecomment-3911241",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1381",
    "id": 3911241,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTEyNDE=",
    "user": {
      "login": "tburnett",
      "id": 1407165,
      "node_id": "MDQ6VXNlcjE0MDcxNjU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1407165?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tburnett",
      "html_url": "https://github.com/tburnett",
      "followers_url": "https://api.github.com/users/tburnett/followers",
      "following_url": "https://api.github.com/users/tburnett/following{/other_user}",
      "gists_url": "https://api.github.com/users/tburnett/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tburnett/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tburnett/subscriptions",
      "organizations_url": "https://api.github.com/users/tburnett/orgs",
      "repos_url": "https://api.github.com/users/tburnett/repos",
      "events_url": "https://api.github.com/users/tburnett/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tburnett/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-10T18:11:08Z",
    "updated_at": "2012-02-10T18:11:32Z",
    "author_association": "NONE",
    "body": "Same with the matrix construction, where double -\\ is used to delimit rows.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3970160",
    "html_url": "https://github.com/ipython/ipython/issues/1381#issuecomment-3970160",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1381",
    "id": 3970160,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzAxNjA=",
    "user": {
      "login": "v923z",
      "id": 1310472,
      "node_id": "MDQ6VXNlcjEzMTA0NzI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1310472?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/v923z",
      "html_url": "https://github.com/v923z",
      "followers_url": "https://api.github.com/users/v923z/followers",
      "following_url": "https://api.github.com/users/v923z/following{/other_user}",
      "gists_url": "https://api.github.com/users/v923z/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/v923z/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/v923z/subscriptions",
      "organizations_url": "https://api.github.com/users/v923z/orgs",
      "repos_url": "https://api.github.com/users/v923z/repos",
      "events_url": "https://api.github.com/users/v923z/events{/privacy}",
      "received_events_url": "https://api.github.com/users/v923z/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-14T21:36:24Z",
    "updated_at": "2012-02-14T21:36:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "As it turns out, this problem is not limited to markdown. The following also produces faulty results: \n\nipython notebook --profile=sympy\n\n```\nIn [1]: eps = Symbol('\\epsilon')\nIn [2]: eps\n```\n\nworks (I can't write the output here, because it is a Greek letter:), but \n\n```\nIn [1]: alpha = Symbol('\\alpha')\nIn [2]: alpha\nOut [3]: lpha\n```\n\nHowever, \n\n```\nIn [1]: alpha = Symbol('\\\\alpha')\nIn [2]: alpha\n```\n\nprints a Greek alpha. Now, the question is whether this is really a parsing issue in the front end. It seems that some backslashes disappear, but then I don't see why this never happens in a standard python statement. I have never had problems with something like this\n\n```\nIn []: print 'foo\\nbar'\n        foo\n        bar\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3974586",
    "html_url": "https://github.com/ipython/ipython/issues/1381#issuecomment-3974586",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1381",
    "id": 3974586,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzQ1ODY=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-15T03:47:36Z",
    "updated_at": "2012-02-15T03:47:36Z",
    "author_association": "MEMBER",
    "body": "No @v923z , that last one is a different story: you need to either escape your backslashes, or use python raw strings. If you want to produce the latex command for the greek letter alpha in a python string, the two valid ways of spelling that are `r'\\alpha'` or `'\\\\alpha'`, that's it.\n\nThe bug is on the javascript handling of markdown, your last point is a misunderstanding of how python handles backslashes in strings.\n"
  }
]
