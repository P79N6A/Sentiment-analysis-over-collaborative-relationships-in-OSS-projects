[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61726643",
    "html_url": "https://github.com/ipython/ipython/issues/6856#issuecomment-61726643",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6856",
    "id": 61726643,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNzI2NjQz",
    "user": {
      "login": "ssanderson",
      "id": 1588357,
      "node_id": "MDQ6VXNlcjE1ODgzNTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1588357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssanderson",
      "html_url": "https://github.com/ssanderson",
      "followers_url": "https://api.github.com/users/ssanderson/followers",
      "following_url": "https://api.github.com/users/ssanderson/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssanderson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssanderson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssanderson/subscriptions",
      "organizations_url": "https://api.github.com/users/ssanderson/orgs",
      "repos_url": "https://api.github.com/users/ssanderson/repos",
      "events_url": "https://api.github.com/users/ssanderson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssanderson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-04T22:27:31Z",
    "updated_at": "2014-11-04T22:27:31Z",
    "author_association": "MEMBER",
    "body": "Modulo documentation and tests, I think https://github.com/ipython/ipython/pull/6858 provides a working implementation of this.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61738386",
    "html_url": "https://github.com/ipython/ipython/issues/6856#issuecomment-61738386",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6856",
    "id": 61738386,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNzM4Mzg2",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-05T00:05:52Z",
    "updated_at": "2014-11-05T00:05:52Z",
    "author_association": "MEMBER",
    "body": "We need to figure out what config stuff will follow the notebook in the Jupyter transition, and what will remain specific to the IPython kernel. For instance, we want to _remove_ the ability to put anything other than custom.js / custom.css in profile/static, and we may even leave the whole concept of profiles as something specific to the IPython kernel, that's not inherited by the notebook server.\n\nMaking custom templates work better than they do is a good idea, but I'm not sure we should bake a custom templates dir into all profiles.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61740837",
    "html_url": "https://github.com/ipython/ipython/issues/6856#issuecomment-61740837",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6856",
    "id": 61740837,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNzQwODM3",
    "user": {
      "login": "ssanderson",
      "id": 1588357,
      "node_id": "MDQ6VXNlcjE1ODgzNTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1588357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssanderson",
      "html_url": "https://github.com/ssanderson",
      "followers_url": "https://api.github.com/users/ssanderson/followers",
      "following_url": "https://api.github.com/users/ssanderson/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssanderson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssanderson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssanderson/subscriptions",
      "organizations_url": "https://api.github.com/users/ssanderson/orgs",
      "repos_url": "https://api.github.com/users/ssanderson/repos",
      "events_url": "https://api.github.com/users/ssanderson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssanderson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-05T00:31:14Z",
    "updated_at": "2014-11-05T01:01:56Z",
    "author_association": "MEMBER",
    "body": "> For instance, we want to remove the ability to put anything other than custom.js / custom.css in profile/static\n\nIs this because you don't want to support overriding static assets in general, or because you specifically don't want to support overriding of static assets **via the mechanism of profiles**?  I'd buy the latter, but I'd be a bit surprised at the former given that the notebook also accepts arguments like `extra_static_paths`.\n\nFor what it's worth, my current use-case would be sufficiently supported by having the ability to pass something like `--extra_template_paths=['/path/to/templates']`, which would prepend that path to the one passed to the tornado app.  Using the profile infrastructure seemed like a solution that was more in line with how static assets are treated, but if that infrastructure is on the chopping block, or if there's a compelling reason to treat templates differently than static assets, I'd be fine with a more modest option.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61745337",
    "html_url": "https://github.com/ipython/ipython/issues/6856#issuecomment-61745337",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6856",
    "id": 61745337,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNzQ1MzM3",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-05T01:21:21Z",
    "updated_at": "2014-11-05T01:21:21Z",
    "author_association": "MEMBER",
    "body": "We're wary of overriding pieces like this, because all the frontend stuff is still changing pretty rapidly, and any component that's overridden is likely to get broken pretty quickly as the other pieces it touches move around. It's useful for people to fiddle around with things individually, but third party code shouldn't be relying on it.\n\nOut of interest, can you tell us what you're doing with overridden templates? It may be that there's a better way we can expose the necessary customisability so it's not necessary.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61751921",
    "html_url": "https://github.com/ipython/ipython/issues/6856#issuecomment-61751921",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6856",
    "id": 61751921,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNzUxOTIx",
    "user": {
      "login": "ssanderson",
      "id": 1588357,
      "node_id": "MDQ6VXNlcjE1ODgzNTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1588357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssanderson",
      "html_url": "https://github.com/ssanderson",
      "followers_url": "https://api.github.com/users/ssanderson/followers",
      "following_url": "https://api.github.com/users/ssanderson/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssanderson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssanderson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssanderson/subscriptions",
      "organizations_url": "https://api.github.com/users/ssanderson/orgs",
      "repos_url": "https://api.github.com/users/ssanderson/repos",
      "events_url": "https://api.github.com/users/ssanderson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssanderson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-05T02:46:32Z",
    "updated_at": "2014-11-05T02:46:32Z",
    "author_association": "MEMBER",
    "body": "The specific project that this is being used for is a finance-focused version of IPython Notebook that's going to be embedded in [Quantopian](http://www.quantopian.com).  Two of our main design goals for the project are:\n1. Make the notebook feel like a natural part of the application, rather than something that's just been dropped into the middle of an existing UI.\n2. Make the notebook less daunting to beginners who are new to the tool.  In some cases, this means moving or hiding advanced features like the Parallel tab or features we don't plan to support like the kernel picker (our environment is entirely python-centric).\n\nThe main things we've changed in the templates that we couldn't easily do with pure javascript are the layout of the dropdown menus and toolbars on the main notebook page, and the removing extra tabs on the main notebook page.  Neither of these particularly feel like features that you guys would be interested in supporting in the main IPython project.  Initially we were making these changes directly in the source of our fork, but my hope is that we can retain merge compatibility as much as we can so that it's easy for us to contribute changes upstream when it makes sense to do so.  Being able to specify our changes as template overrides makes that easier.\n\nWe **have** made a bunch of javascript changes that I think might make sense for the notebook at large.  These involve things things like triggering events for \"NotebookList loaded\" or \"Cell executed\" and being able to control whether a new notebook launches in a new tab or in the same tab.\n\nHere's a semi-recent example of the kinds of changes we've been making: you'll notice we've collapsed the toolbars and made them full screen-width, we've re-grouped some of the buttons, and we've added a \"back\" button that brings you back out to the directory containing the notebook.  (Disclaimer: I am very much not a designer; the HTML/CSS work here was done by @TimShawver.)\n![image](https://cloud.githubusercontent.com/assets/1588357/4911736/ba62a86c-6492-11e4-914a-3f8d699e8978.png)  \nWe've made more extensive changes to the notebook list page, but I don't have a recent screenshot of that handy.\n\nWith regard to the overridden templates breaking, we fully expect that we'll have to do work to integrate our changes when we upgrade versions.  Maybe that's an argument for just making changes directly in source, since at least then we'll get merge conflicts telling us when things change, and we can always maintain a mirror branch of the base IPython.  On the other hand, we're in pretty early alpha right now, so it's somewhat expected for us to have breakage while we're pegging ourselves to the bleeding-edge dev releases. I expect that IPython 3.0 will have a stable release by the time we're reaching general availability, at which point we'll probably peg ourselves to a stable release and then worry about upgrading only on point releases.  Given a target release of IPython, it seems less crazy to me to override specific template files.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61759983",
    "html_url": "https://github.com/ipython/ipython/issues/6856#issuecomment-61759983",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6856",
    "id": 61759983,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNzU5OTgz",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-05T04:57:05Z",
    "updated_at": "2014-11-05T04:57:32Z",
    "author_association": "MEMBER",
    "body": "> Is this because you don't want to support overriding static assets in general, or because you specifically don't want to support overriding of static assets via the mechanism of profiles? \n\nSpecifically the profiles, I don't have a problem with template_path being as configurable as static_files_path. I think adding templates to profiles by default puts them on the same level as `profile/static` dir, which I think was a mistake, or at the very least should be phased out, even if it was useful during the development of things like IJulia.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61761830",
    "html_url": "https://github.com/ipython/ipython/issues/6856#issuecomment-61761830",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6856",
    "id": 61761830,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNzYxODMw",
    "user": {
      "login": "ssanderson",
      "id": 1588357,
      "node_id": "MDQ6VXNlcjE1ODgzNTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1588357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssanderson",
      "html_url": "https://github.com/ssanderson",
      "followers_url": "https://api.github.com/users/ssanderson/followers",
      "following_url": "https://api.github.com/users/ssanderson/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssanderson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssanderson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssanderson/subscriptions",
      "organizations_url": "https://api.github.com/users/ssanderson/orgs",
      "repos_url": "https://api.github.com/users/ssanderson/repos",
      "events_url": "https://api.github.com/users/ssanderson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssanderson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-05T05:29:11Z",
    "updated_at": "2014-11-05T05:29:11Z",
    "author_association": "MEMBER",
    "body": "Fair enough.  I've opened https://github.com/ipython/ipython/pull/6861 as an alternative implementation that adds `extra_template_paths` in a manner analogous to the implementation of `extra_static_paths`.  Based on the discussion here, it sounds like I should close #6858?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61766189",
    "html_url": "https://github.com/ipython/ipython/issues/6856#issuecomment-61766189",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6856",
    "id": 61766189,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNzY2MTg5",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-05T06:41:58Z",
    "updated_at": "2014-11-05T06:41:58Z",
    "author_association": "MEMBER",
    "body": "I don't want to oversell my opinion as the position of everyone else, but I like #6861. I'd like to hear from @ellisonbg and @Carreau, who have both thought about custom templates.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61767099",
    "html_url": "https://github.com/ipython/ipython/issues/6856#issuecomment-61767099",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6856",
    "id": 61767099,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNzY3MDk5",
    "user": {
      "login": "ssanderson",
      "id": 1588357,
      "node_id": "MDQ6VXNlcjE1ODgzNTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1588357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssanderson",
      "html_url": "https://github.com/ssanderson",
      "followers_url": "https://api.github.com/users/ssanderson/followers",
      "following_url": "https://api.github.com/users/ssanderson/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssanderson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssanderson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssanderson/subscriptions",
      "organizations_url": "https://api.github.com/users/ssanderson/orgs",
      "repos_url": "https://api.github.com/users/ssanderson/repos",
      "events_url": "https://api.github.com/users/ssanderson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssanderson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-05T06:55:26Z",
    "updated_at": "2014-11-05T06:55:26Z",
    "author_association": "MEMBER",
    "body": "Ok.  I'll leave #6858 open for a bit to provide a discussion counterpoint.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61768062",
    "html_url": "https://github.com/ipython/ipython/issues/6856#issuecomment-61768062",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6856",
    "id": 61768062,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNzY4MDYy",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-05T07:10:14Z",
    "updated_at": "2014-11-05T07:10:14Z",
    "author_association": "MEMBER",
    "body": "I'm on my way to the airport,\nThere is a trick so that you can inherit a template with a file of the same name, otherwise you need to copy and past full template.\n\n## Can you assign to me to get a look when I'm back in 10 days ?\n\nM\n\nEnvoyé de mon iPhone\n\n> Le 5 nov. 2014 à 07:42, Min RK notifications@github.com a écrit :\n> \n> I don't want to oversell my opinion as the position of everyone else, but I like #6861. I'd like to hear from @ellisonbg and @Carreau, who have both thought about custom templates.\n> \n> —\n> Reply to this email directly or view it on GitHub.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61842093",
    "html_url": "https://github.com/ipython/ipython/issues/6856#issuecomment-61842093",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6856",
    "id": 61842093,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxODQyMDkz",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-05T16:58:02Z",
    "updated_at": "2014-11-05T16:58:02Z",
    "author_association": "MEMBER",
    "body": "@Carreau - are you asking if there is a trick to do that, or are you saying there definitely is such a trick?  I'm stuck on that issue right now.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61852756",
    "html_url": "https://github.com/ipython/ipython/issues/6856#issuecomment-61852756",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6856",
    "id": 61852756,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxODUyNzU2",
    "user": {
      "login": "ssanderson",
      "id": 1588357,
      "node_id": "MDQ6VXNlcjE1ODgzNTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1588357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssanderson",
      "html_url": "https://github.com/ssanderson",
      "followers_url": "https://api.github.com/users/ssanderson/followers",
      "following_url": "https://api.github.com/users/ssanderson/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssanderson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssanderson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssanderson/subscriptions",
      "organizations_url": "https://api.github.com/users/ssanderson/orgs",
      "repos_url": "https://api.github.com/users/ssanderson/repos",
      "events_url": "https://api.github.com/users/ssanderson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssanderson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-05T18:02:48Z",
    "updated_at": "2014-11-05T18:02:48Z",
    "author_association": "MEMBER",
    "body": "I updated the issue title and main post to make it clearer that there are currently two implementation proposals.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61855774",
    "html_url": "https://github.com/ipython/ipython/issues/6856#issuecomment-61855774",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6856",
    "id": 61855774,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxODU1Nzc0",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-05T18:22:31Z",
    "updated_at": "2014-11-05T18:22:31Z",
    "author_association": "MEMBER",
    "body": "@jasongrout there is a trick, it's adding both the templates and the parent directory to the template path, so you can have your own template extend the base:\n\n``` python\ntemplate_path = ['custom_templates', '...html/templates', '...html']\n```\n\nso you can have notebook.html in custom_templates that extends IPython's notebook.html:\n\n```\n{% extends 'templates/notebook.html' %}\n\nsmaller changes rather that copy/paste\n```\n\nIt's not great, but it works.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61858025",
    "html_url": "https://github.com/ipython/ipython/issues/6856#issuecomment-61858025",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6856",
    "id": 61858025,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxODU4MDI1",
    "user": {
      "login": "ssanderson",
      "id": 1588357,
      "node_id": "MDQ6VXNlcjE1ODgzNTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1588357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssanderson",
      "html_url": "https://github.com/ssanderson",
      "followers_url": "https://api.github.com/users/ssanderson/followers",
      "following_url": "https://api.github.com/users/ssanderson/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssanderson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssanderson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssanderson/subscriptions",
      "organizations_url": "https://api.github.com/users/ssanderson/orgs",
      "repos_url": "https://api.github.com/users/ssanderson/repos",
      "events_url": "https://api.github.com/users/ssanderson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssanderson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-05T18:36:41Z",
    "updated_at": "2014-11-05T18:44:07Z",
    "author_association": "MEMBER",
    "body": "@minrk I updated https://github.com/ipython/ipython/pull/6861 to automatically add IPython.html to the default path in addition to IPython.html.templates.  This actually makes it really easy to override just a single block of a template by putting something like\n\n```\n{% extends templates/error.html %}\n\n{%block site %}\nfoobar\n{{super()}}\n{% endblock %}\n```\n\nin a file called \"error.html\" that's in your override directory.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61859477",
    "html_url": "https://github.com/ipython/ipython/issues/6856#issuecomment-61859477",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6856",
    "id": 61859477,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxODU5NDc3",
    "user": {
      "login": "ssanderson",
      "id": 1588357,
      "node_id": "MDQ6VXNlcjE1ODgzNTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1588357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssanderson",
      "html_url": "https://github.com/ssanderson",
      "followers_url": "https://api.github.com/users/ssanderson/followers",
      "following_url": "https://api.github.com/users/ssanderson/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssanderson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssanderson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssanderson/subscriptions",
      "organizations_url": "https://api.github.com/users/ssanderson/orgs",
      "repos_url": "https://api.github.com/users/ssanderson/repos",
      "events_url": "https://api.github.com/users/ssanderson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssanderson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-05T18:45:49Z",
    "updated_at": "2014-11-05T18:45:49Z",
    "author_association": "MEMBER",
    "body": "Would it be worth adding a symlink from `IPython/html/templates` to something like `IPython/html/base_templates` to make this idiom a bit clearer?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/62038765",
    "html_url": "https://github.com/ipython/ipython/issues/6856#issuecomment-62038765",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6856",
    "id": 62038765,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDM4NzY1",
    "user": {
      "login": "ssanderson",
      "id": 1588357,
      "node_id": "MDQ6VXNlcjE1ODgzNTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1588357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssanderson",
      "html_url": "https://github.com/ssanderson",
      "followers_url": "https://api.github.com/users/ssanderson/followers",
      "following_url": "https://api.github.com/users/ssanderson/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssanderson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssanderson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssanderson/subscriptions",
      "organizations_url": "https://api.github.com/users/ssanderson/orgs",
      "repos_url": "https://api.github.com/users/ssanderson/repos",
      "events_url": "https://api.github.com/users/ssanderson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssanderson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-06T19:43:13Z",
    "updated_at": "2014-11-06T19:43:13Z",
    "author_association": "MEMBER",
    "body": "Having thought more about this, I'm now pretty strongly of the opinion that https://github.com/ipython/ipython/pull/6861 is the right way to do this.  If you want to associate a templates directory with a profile, you can always do so by passing the path to your profile from its `ipython_notebook_config` file, so https://github.com/ipython/ipython/pull/6861 is pretty much strictly more powerful than https://github.com/ipython/ipython/pull/6858.  I'm going to close #6858 unless someone wants to make a strong case for profile-based templates by default.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/62040810",
    "html_url": "https://github.com/ipython/ipython/issues/6856#issuecomment-62040810",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6856",
    "id": 62040810,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDQwODEw",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-06T19:56:10Z",
    "updated_at": "2014-11-06T19:56:10Z",
    "author_association": "MEMBER",
    "body": "I'm on board with that. Go ahead and close #6858. If someone feels strongly that a profile templates dir should be on the path by default, it doesn't preclude the more general approach in #6861, and can be added later.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/62845320",
    "html_url": "https://github.com/ipython/ipython/issues/6856#issuecomment-62845320",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6856",
    "id": 62845320,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyODQ1MzIw",
    "user": {
      "login": "ssanderson",
      "id": 1588357,
      "node_id": "MDQ6VXNlcjE1ODgzNTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1588357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssanderson",
      "html_url": "https://github.com/ssanderson",
      "followers_url": "https://api.github.com/users/ssanderson/followers",
      "following_url": "https://api.github.com/users/ssanderson/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssanderson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssanderson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssanderson/subscriptions",
      "organizations_url": "https://api.github.com/users/ssanderson/orgs",
      "repos_url": "https://api.github.com/users/ssanderson/repos",
      "events_url": "https://api.github.com/users/ssanderson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssanderson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-13T05:53:27Z",
    "updated_at": "2014-11-13T05:53:27Z",
    "author_association": "MEMBER",
    "body": "This was closed by https://github.com/ipython/ipython/pull/6861.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/63166313",
    "html_url": "https://github.com/ipython/ipython/issues/6856#issuecomment-63166313",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6856",
    "id": 63166313,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTY2MzEz",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-15T09:32:43Z",
    "updated_at": "2014-11-15T09:32:43Z",
    "author_association": "MEMBER",
    "body": "Happy you solved this while I was away. \n\n@ssanderson I like the [quantopian theme](https://github.com/ipython/ipython/issues/6856#issuecomment-61751921), take much less vertical space. I would like @ellisonbg to have a look. I appreciate in particular the fact that cell toolbar button have much less visual clutter around them by being \"just\" the icon.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/63186030",
    "html_url": "https://github.com/ipython/ipython/issues/6856#issuecomment-63186030",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6856",
    "id": 63186030,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTg2MDMw",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-15T19:46:25Z",
    "updated_at": "2014-11-15T19:46:25Z",
    "author_association": "MEMBER",
    "body": "> @ssanderson I like the quantopian theme, take much less vertical space\n\nI agree on this... I really like it...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/63226214",
    "html_url": "https://github.com/ipython/ipython/issues/6856#issuecomment-63226214",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6856",
    "id": 63226214,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjI2MjE0",
    "user": {
      "login": "ssanderson",
      "id": 1588357,
      "node_id": "MDQ6VXNlcjE1ODgzNTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1588357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssanderson",
      "html_url": "https://github.com/ssanderson",
      "followers_url": "https://api.github.com/users/ssanderson/followers",
      "following_url": "https://api.github.com/users/ssanderson/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssanderson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssanderson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssanderson/subscriptions",
      "organizations_url": "https://api.github.com/users/ssanderson/orgs",
      "repos_url": "https://api.github.com/users/ssanderson/repos",
      "events_url": "https://api.github.com/users/ssanderson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssanderson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-16T16:34:58Z",
    "updated_at": "2014-11-16T16:34:58Z",
    "author_association": "MEMBER",
    "body": "@Carreau @damianavila thanks; the visual work was all done by @TimShawver.  If you think you guys would be interested in moving the main design in that direction, we could certainly help out with that.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/63266734",
    "html_url": "https://github.com/ipython/ipython/issues/6856#issuecomment-63266734",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6856",
    "id": 63266734,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjY2NzM0",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-17T06:57:55Z",
    "updated_at": "2014-11-17T06:57:55Z",
    "author_association": "MEMBER",
    "body": "let's keep that in mind, I'l open an issue on jupyter/design that reference this.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/63387964",
    "html_url": "https://github.com/ipython/ipython/issues/6856#issuecomment-63387964",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6856",
    "id": 63387964,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMzg3OTY0",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-17T22:25:39Z",
    "updated_at": "2014-11-17T22:25:39Z",
    "author_association": "MEMBER",
    "body": "Lots to like here :) We definitely have a lot of areas we can improve the UI and would love help on it. Some comments about the above design:\n- I have long thought we needed to make the topmost horizontal area a true \"site header\" that has no page specific content. IOW, move the notebook name and such out of that area. As we move towards jupyterhub and people start to deploy the notebook in other contexts I think that will be more and more important. Strongly +1 on that, even for 3.0.\n- I like having the second row with the Notebook name on the L and menus on the R, although I wonder about having the menus to the L and name to the R. This is because the menus will be used much more than the name and this arrangement splits the main areas of mouse activity to the L (toolbar) and R (menu). Not clear to me though - we probably just have to explore the options.\n- Overall I like the visual treatment of the toolbar in getting rid of the actual button'y look of everything. We should look into reducing the number of greys in our design. I can see how this looks really good with the \"sharper\" overall look that Quantopian has (square corners) compared to our design (rounded corners on everything). I am fine moving away from the rounded corners, but I think it would be better to not mix the two approaches too much.\n\n@ssanderson how do you want to proceed on visual/UI work? I also realize that there is value for Quantopian to have a custom notebook style...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/63412063",
    "html_url": "https://github.com/ipython/ipython/issues/6856#issuecomment-63412063",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6856",
    "id": 63412063,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNDEyMDYz",
    "user": {
      "login": "ssanderson",
      "id": 1588357,
      "node_id": "MDQ6VXNlcjE1ODgzNTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1588357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssanderson",
      "html_url": "https://github.com/ssanderson",
      "followers_url": "https://api.github.com/users/ssanderson/followers",
      "following_url": "https://api.github.com/users/ssanderson/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssanderson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssanderson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssanderson/subscriptions",
      "organizations_url": "https://api.github.com/users/ssanderson/orgs",
      "repos_url": "https://api.github.com/users/ssanderson/repos",
      "events_url": "https://api.github.com/users/ssanderson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssanderson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-18T02:14:39Z",
    "updated_at": "2014-11-18T02:14:39Z",
    "author_association": "MEMBER",
    "body": "@ellisonbg glad to hear you like the design.  FWIW the screenshot up above is about 3 weeks out of date now.  The latest looks like this:\n![image](https://cloud.githubusercontent.com/assets/1588357/5081312/11074d54-6e9c-11e4-80e4-19f0ce627c8e.png)\n\nIt also now has a mode that collapses both the IPython toolbars and our Quantopian header using some iframe magic:\n![image](https://cloud.githubusercontent.com/assets/1588357/5081326/3d222abc-6e9c-11e4-924d-7d766336fbb7.png)\n\nAs far as upstreaming changes go, I'm not really sure how that process would work for something like this.  We're making these changes in kind of a hodgepodge way at the moment:  we have a big custom.css file that's partially shared with the Rails app that runs the rest of our site; we're overriding some jinja templates to remove, add, or otherwise shuffle around page content; we're using a combination of monkey patching and full-file replacement to change existing javascript behavior (we hope to get rid of the full-file replacement soon; the only place where we're still doing that is to add javascript events that would probably make sense for the general notebook), and we're using a couple nbextensions to add analytics and control interaction with the surrounding iframe environment.  Some of the above probably makes sense to upstream eventually, and some of it likely doesn't.\n\nMy gut feeling is that things are changing quickly enough for us right now that it's not worth investing a lot in directly contributing our style tweaks, but we'd be interested in being a part of design conversations about the layout of the notebook and about the future for visual customization of the notebook moving forward.  In particular, I've been thinking a fair amount lately about the idea of using Jinja template blocks as a design analog of IPython's various overridable classes and communication protocols.  I don't know if you guys feel like the notebook structure is stable enough yet for this sort of conversation, but I could imagine a world where the notebook HTML templates were broken out into a much more abstract block-based structure and IPython provided a specification for what page elements were required within each block.  Then third parties could make changes by overriding specific pieces in a manner analogous to subclassing a particular IPython manager and have some reasonable guarantees that if their changes met some skeleton then they wouldn't break existing functionality.  \"Document structure as API\" feels very much in line to me with the direction that IPython/Jupyter is moving.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/63470472",
    "html_url": "https://github.com/ipython/ipython/issues/6856#issuecomment-63470472",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6856",
    "id": 63470472,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNDcwNDcy",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-18T13:29:17Z",
    "updated_at": "2014-11-18T13:29:17Z",
    "author_association": "MEMBER",
    "body": "> It also now has a mode that collapses both the IPython toolbars and our Quantopian header using some iframe magic:\n\nAre your notebooks in iframes ? Otherwise why the iframes magics ? \n\n> [lots of big hacks]\n\nPlease tell us in what point we can help you/ like what pieces of templates needs blocks... etc\n\n> using a couple nbextensions to add analytics\n\nCan we ask what types of analytics. We would love to collect some of user interaction even on local install environment (with user consent, for us), so any step toward that is welcomed. \nJust for precision, we like to know if user use buttons or menu action a lot or not at all to know \nif button should be remove, or menu action deserved toolbar button... etc.\n\n> My gut feeling is that things are changing quickly enough for us right now that it's not worth investing a lot in directly contributing our style tweaks, but we'd be interested in being a part of design conversations about the layout of the notebook and about the future for visual customization of the notebook moving forward.\n\nWe would be really happy to help you with that. One of the main things is that we don't know how people are customizing, so it's tough to know what decision we made right or not. One thing we want to do is prefixed all our classes with 'jpy-' or something like that. \n\nThe last part make me think a lot about the movement of javascript toward components and shadow dom (angular, react, flux, buzzword1, buzzword2, gnagnagna ....). We are trying to go this way but we are not js developers, this tech is still young, and IMHO there is a certain reticence for some js tech.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/63481294",
    "html_url": "https://github.com/ipython/ipython/issues/6856#issuecomment-63481294",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6856",
    "id": 63481294,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNDgxMjk0",
    "user": {
      "login": "ssanderson",
      "id": 1588357,
      "node_id": "MDQ6VXNlcjE1ODgzNTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1588357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssanderson",
      "html_url": "https://github.com/ssanderson",
      "followers_url": "https://api.github.com/users/ssanderson/followers",
      "following_url": "https://api.github.com/users/ssanderson/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssanderson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssanderson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssanderson/subscriptions",
      "organizations_url": "https://api.github.com/users/ssanderson/orgs",
      "repos_url": "https://api.github.com/users/ssanderson/repos",
      "events_url": "https://api.github.com/users/ssanderson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssanderson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-18T14:49:08Z",
    "updated_at": "2014-11-18T14:49:08Z",
    "author_association": "MEMBER",
    "body": "> Are your notebooks in iframes ? Otherwise why the iframes magics ?\n\nYep.  This is partially for security reasons (so that code running in the notebook can't use authentication cookies acquired by being logged in to the rest of the app), and partially because the rest of our frontend is written in Ruby on Rails, so actually embedding the notebook in the page natively would be a fair amount tougher.\n\n> Please tell us in what point we can help you/ like what pieces of templates needs blocks... etc\n\nNoted.  The main thing that comes to mind is the toolbar/menubar section of `notebook.html`.  Pretty much everything else that's displayed in the notebook is created dynamically, so you can customize it by customizing javascript,  but the toolbar is more or less a giant block of static html that could be broken up into more granular units.  \n\nThe other thing that would be helpful in the long run would be some sort of specification for what page elements IPython expects in various places.  This would make it easier for us to write tests and figure out what we need to change when things break.\n\n> Can we ask what types of analytics.\n\nWe added some events that fire on cell execution, on load of the notebooklist, and maybe one or two other places I can't remember right now.  We use those to trigger analytics events.  If you guys wanted to be tracking this, you could pretty easily add hooks from something like https://developers.google.com/analytics/devguides/collection/analyticsjs/ that are only triggered if you explicitly pass a flag like `NotebookApp.enable_google_analytics = True`.\n\n> The last part make me think a lot about the movement of javascript toward components and shadow dom \n\nI was actually thinking more about the raw page content than the javascript pieces; so far we haven't needed to change too much of the actual core javascript logic, though that may change.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/63519063",
    "html_url": "https://github.com/ipython/ipython/issues/6856#issuecomment-63519063",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6856",
    "id": 63519063,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNTE5MDYz",
    "user": {
      "login": "TimShawver",
      "id": 5055866,
      "node_id": "MDQ6VXNlcjUwNTU4NjY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5055866?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TimShawver",
      "html_url": "https://github.com/TimShawver",
      "followers_url": "https://api.github.com/users/TimShawver/followers",
      "following_url": "https://api.github.com/users/TimShawver/following{/other_user}",
      "gists_url": "https://api.github.com/users/TimShawver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TimShawver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TimShawver/subscriptions",
      "organizations_url": "https://api.github.com/users/TimShawver/orgs",
      "repos_url": "https://api.github.com/users/TimShawver/repos",
      "events_url": "https://api.github.com/users/TimShawver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TimShawver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-18T18:23:55Z",
    "updated_at": "2014-11-18T18:23:55Z",
    "author_association": "NONE",
    "body": "@ellisonbg just so you guys know I got a bunch of ideas for the design changes from the Google docs UI, so that might be a good place to look for inspiration.\n\n> I like having the second row with the Notebook name on the L and menus on the R, although I wonder about having the menus to the L and name to the R.\n\nGood point about the potential inconvenience of having the menus on the right.  I had some similar concerns when I was trying to decide how to consolidate the three rows of tools into two.  It made sense for us to keep the notebook title on the left because that's typically where we show the \"page title\" in the Quantopian UI, so it would have seemed inconsistent to move it to the right.  Also I think in general the top left is where people look when they first open a page to figure out what they're looking at, and I feel like that's where I'm used to seeing it.  \n\nThat being said you're right that there's a tradeoff to moving frequently used tools out of that premium real estate.  Google docs solves this problem by positioning the menus in a thin row right below the document title, but that made the layout of the page feel lopsided (too much stuff on the left) when I tried applying it to the IPython notebook UI.\n\n![screen shot 2014-11-18 at 1 17 05 pm](https://cloud.githubusercontent.com/assets/5055866/5093324/4392bd60-6f25-11e4-969c-b7cb86686d48.png)\n\n> I can see how this looks really good with the \"sharper\" overall look that Quantopian has (square corners) compared to our design (rounded corners on everything).\n\nYou're right that this change was also made for consistency sake.  I'm intending on re-styling the cell type and cell toolbar dropdowns as well but I haven't gotten around to it yet.  The default style in the latest version of bootstrap is round corners so that look might be more \"in-style\" these days.\n"
  }
]
