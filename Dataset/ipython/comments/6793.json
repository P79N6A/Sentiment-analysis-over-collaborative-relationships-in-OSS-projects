[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/60476666",
    "html_url": "https://github.com/ipython/ipython/pull/6793#issuecomment-60476666",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6793",
    "id": 60476666,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNDc2NjY2",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-25T09:08:49Z",
    "updated_at": "2014-10-25T09:08:49Z",
    "author_association": "MEMBER",
    "body": "+1, seem reasonable.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/60477763",
    "html_url": "https://github.com/ipython/ipython/pull/6793#issuecomment-60477763",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6793",
    "id": 60477763,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNDc3NzYz",
    "user": {
      "login": "blink1073",
      "id": 2096628,
      "node_id": "MDQ6VXNlcjIwOTY2Mjg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2096628?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blink1073",
      "html_url": "https://github.com/blink1073",
      "followers_url": "https://api.github.com/users/blink1073/followers",
      "following_url": "https://api.github.com/users/blink1073/following{/other_user}",
      "gists_url": "https://api.github.com/users/blink1073/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blink1073/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blink1073/subscriptions",
      "organizations_url": "https://api.github.com/users/blink1073/orgs",
      "repos_url": "https://api.github.com/users/blink1073/repos",
      "events_url": "https://api.github.com/users/blink1073/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blink1073/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-25T10:00:27Z",
    "updated_at": "2014-10-25T10:00:27Z",
    "author_association": "MEMBER",
    "body": "+1 as a kernel provider.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/60480511",
    "html_url": "https://github.com/ipython/ipython/pull/6793#issuecomment-60480511",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6793",
    "id": 60480511,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNDgwNTEx",
    "user": {
      "login": "dsblank",
      "id": 168568,
      "node_id": "MDQ6VXNlcjE2ODU2OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/168568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsblank",
      "html_url": "https://github.com/dsblank",
      "followers_url": "https://api.github.com/users/dsblank/followers",
      "following_url": "https://api.github.com/users/dsblank/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsblank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsblank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsblank/subscriptions",
      "organizations_url": "https://api.github.com/users/dsblank/orgs",
      "repos_url": "https://api.github.com/users/dsblank/repos",
      "events_url": "https://api.github.com/users/dsblank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsblank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-25T12:02:07Z",
    "updated_at": "2014-10-25T12:02:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "Looks good to this kernel provider. \n\nShould anything happen if you load the notebook with the associated kernel, and the language_info details don't match exactly? I understand that this isn't a set of \"dependencies\" but just wondering how we can better support \"reproducible results\"... \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/60485054",
    "html_url": "https://github.com/ipython/ipython/pull/6793#issuecomment-60485054",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6793",
    "id": 60485054,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNDg1MDU0",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-25T14:45:08Z",
    "updated_at": "2014-10-25T14:45:08Z",
    "author_association": "MEMBER",
    "body": "When the kernel starts, the language info from that kernel will replace\nthat in notebook metadata. The idea is that updates to the kernel might add\nor refine information, and the changes will take effect on existing\nnotebooks when they next have a running kernel.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/60487525",
    "html_url": "https://github.com/ipython/ipython/pull/6793#issuecomment-60487525",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6793",
    "id": 60487525,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNDg3NTI1",
    "user": {
      "login": "dsblank",
      "id": 168568,
      "node_id": "MDQ6VXNlcjE2ODU2OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/168568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsblank",
      "html_url": "https://github.com/dsblank",
      "followers_url": "https://api.github.com/users/dsblank/followers",
      "following_url": "https://api.github.com/users/dsblank/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsblank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsblank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsblank/subscriptions",
      "organizations_url": "https://api.github.com/users/dsblank/orgs",
      "repos_url": "https://api.github.com/users/dsblank/repos",
      "events_url": "https://api.github.com/users/dsblank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsblank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-25T16:06:52Z",
    "updated_at": "2014-10-25T16:06:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "@takluyver I understand. But my point is that if a notebook was created under kernel Language X version 1.0, and you open it up with kernel Language X version 16.5, then should something happen? Possibilities: a log warning, a dialog warning, etc. \n\nIt could also be the case when then notebook is opened and the kernel is asked for kernel_info, the server could provide the cached kernel_info so that some handshaking could happen. For example, the kernel_info could respond with the equivalent of \"Sorry: Your are trying to run a Language X version 1.0 notebook with a Language X version 16.5 kernel. Please see this website... for info on updating your notebook.\"\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/60487799",
    "html_url": "https://github.com/ipython/ipython/pull/6793#issuecomment-60487799",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6793",
    "id": 60487799,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNDg3Nzk5",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-25T16:14:41Z",
    "updated_at": "2014-10-25T16:14:41Z",
    "author_association": "MEMBER",
    "body": "I don't really see how using a later version of the same kernel would be a\nproblem. If the language or the kernel changes in a seriously incompatible\nway, I would just give the kernel a different name, as we have already done\nfor Python 3. If this isn't sufficient for some reason, let's cross that\nbridge when we come to it. I don't feel like there's a clear problem yet to\nsolve there.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/60488739",
    "html_url": "https://github.com/ipython/ipython/pull/6793#issuecomment-60488739",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6793",
    "id": 60488739,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNDg4NzM5",
    "user": {
      "login": "dsblank",
      "id": 168568,
      "node_id": "MDQ6VXNlcjE2ODU2OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/168568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsblank",
      "html_url": "https://github.com/dsblank",
      "followers_url": "https://api.github.com/users/dsblank/followers",
      "following_url": "https://api.github.com/users/dsblank/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsblank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsblank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsblank/subscriptions",
      "organizations_url": "https://api.github.com/users/dsblank/orgs",
      "repos_url": "https://api.github.com/users/dsblank/repos",
      "events_url": "https://api.github.com/users/dsblank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsblank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-25T16:41:54Z",
    "updated_at": "2014-10-25T16:41:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "So Python 2 and Python 3 have exactly this problem, and you solved it by making a kernel for each, that can run side-by-side. So, looking forward, language kernel designers should think how this will work if there are backward-incompatible changes in their language or libraries. Ok, fair enough. Just making sure that this won't create chaos as languages continue to change. Thanks!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61031623",
    "html_url": "https://github.com/ipython/ipython/pull/6793#issuecomment-61031623",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6793",
    "id": 61031623,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMDMxNjIz",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-30T01:10:30Z",
    "updated_at": "2014-10-30T01:10:30Z",
    "author_association": "MEMBER",
    "body": "I got a couple of +1s on this, so I'm going to merge it tomorrow unless anyone wants more time to review it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61057401",
    "html_url": "https://github.com/ipython/ipython/pull/6793#issuecomment-61057401",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6793",
    "id": 61057401,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMDU3NDAx",
    "user": {
      "login": "mattpap",
      "id": 27475,
      "node_id": "MDQ6VXNlcjI3NDc1",
      "avatar_url": "https://avatars2.githubusercontent.com/u/27475?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattpap",
      "html_url": "https://github.com/mattpap",
      "followers_url": "https://api.github.com/users/mattpap/followers",
      "following_url": "https://api.github.com/users/mattpap/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattpap/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattpap/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattpap/subscriptions",
      "organizations_url": "https://api.github.com/users/mattpap/orgs",
      "repos_url": "https://api.github.com/users/mattpap/repos",
      "events_url": "https://api.github.com/users/mattpap/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattpap/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-30T08:12:21Z",
    "updated_at": "2014-10-30T08:12:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "> So Python 2 and Python 3 have exactly this problem\n\nSimilar problem is visible in IScala, where to support Scala 2.10 and 2.11 (binary incompatible), you have to compile IScala twice producing 2.10 and 2.11 kernels (`IScala_2.xx.jar`).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61057746",
    "html_url": "https://github.com/ipython/ipython/pull/6793#issuecomment-61057746",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6793",
    "id": 61057746,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMDU3NzQ2",
    "user": {
      "login": "mattpap",
      "id": 27475,
      "node_id": "MDQ6VXNlcjI3NDc1",
      "avatar_url": "https://avatars2.githubusercontent.com/u/27475?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattpap",
      "html_url": "https://github.com/mattpap",
      "followers_url": "https://api.github.com/users/mattpap/followers",
      "following_url": "https://api.github.com/users/mattpap/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattpap/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattpap/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattpap/subscriptions",
      "organizations_url": "https://api.github.com/users/mattpap/orgs",
      "repos_url": "https://api.github.com/users/mattpap/repos",
      "events_url": "https://api.github.com/users/mattpap/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattpap/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-30T08:16:42Z",
    "updated_at": "2014-10-30T08:16:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "@takluyver, this is a very desired change, +1. Perhaps in future this could be extended, e.g. allowing kernels to provide their own syntax modes for CodeMirror.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/61058509",
    "html_url": "https://github.com/ipython/ipython/pull/6793#issuecomment-61058509",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6793",
    "id": 61058509,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMDU4NTA5",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-30T08:26:17Z",
    "updated_at": "2014-10-30T08:26:17Z",
    "author_association": "MEMBER",
    "body": "You  will be able to do so with custom.js that register a mode for codemirror (julia do that) . But in the end modes should be sent upstream to codemirror repo itself.\n"
  }
]
