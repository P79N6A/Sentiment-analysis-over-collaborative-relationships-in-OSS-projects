[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/35762760",
    "html_url": "https://github.com/ipython/ipython/pull/5183#issuecomment-35762760",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5183",
    "id": 35762760,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzYyNzYw",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-21T19:13:00Z",
    "updated_at": "2014-02-21T19:13:00Z",
    "author_association": "MEMBER",
    "body": "I really like the idea of add and remove class working before the widgets are inserted into the DOM; however, it will need to remember the order that the add/remove calls were made with respect to each other.  The resultant state (of which elements have which DOM classes) is path dependent because of the CSS selectors.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/35764810",
    "html_url": "https://github.com/ipython/ipython/pull/5183#issuecomment-35764810",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5183",
    "id": 35764810,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzY0ODEw",
    "user": {
      "login": "Zaharid",
      "id": 5675858,
      "node_id": "MDQ6VXNlcjU2NzU4NTg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5675858?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zaharid",
      "html_url": "https://github.com/Zaharid",
      "followers_url": "https://api.github.com/users/Zaharid/followers",
      "following_url": "https://api.github.com/users/Zaharid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zaharid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zaharid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zaharid/subscriptions",
      "organizations_url": "https://api.github.com/users/Zaharid/orgs",
      "repos_url": "https://api.github.com/users/Zaharid/repos",
      "events_url": "https://api.github.com/users/Zaharid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zaharid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-21T19:33:26Z",
    "updated_at": "2014-02-21T19:33:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "As for now, added classes are stored in an (ordered) list for each selector. Remove calls remove items from these lists and fail silently if they can't (may be that there are classes not synced with python that you want to remove).  \n\nIs this OK?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/35768654",
    "html_url": "https://github.com/ipython/ipython/pull/5183#issuecomment-35768654",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5183",
    "id": 35768654,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzY4NjU0",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-21T20:12:00Z",
    "updated_at": "2014-02-21T20:12:35Z",
    "author_association": "MEMBER",
    "body": "> Is this OK?\n\nIf I'm understanding what you are describing, I don't think that's okay.\n\nHere's why, same code executed in different orders, all three outputs are different:\n\n![image](https://f.cloud.github.com/assets/3292874/2234168/2addb13c-9b34-11e3-93b3-dcb78e383cb2.png)\n\nFor the full notebook: https://gist.github.com/jdfreder/9142458\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/35769300",
    "html_url": "https://github.com/ipython/ipython/pull/5183#issuecomment-35769300",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5183",
    "id": 35769300,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzY5MzAw",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-21T20:18:53Z",
    "updated_at": "2014-02-21T20:18:53Z",
    "author_association": "MEMBER",
    "body": "Also something to note, the selectors used in all three lines in the above are different.  Maintaining a single list of selectors and classes wouldn't be reasonable here since we would have to intelligently parse the selectors.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/35777972",
    "html_url": "https://github.com/ipython/ipython/pull/5183#issuecomment-35777972",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5183",
    "id": 35777972,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Nzc3OTcy",
    "user": {
      "login": "Zaharid",
      "id": 5675858,
      "node_id": "MDQ6VXNlcjU2NzU4NTg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5675858?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zaharid",
      "html_url": "https://github.com/Zaharid",
      "followers_url": "https://api.github.com/users/Zaharid/followers",
      "following_url": "https://api.github.com/users/Zaharid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zaharid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zaharid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zaharid/subscriptions",
      "organizations_url": "https://api.github.com/users/Zaharid/orgs",
      "repos_url": "https://api.github.com/users/Zaharid/repos",
      "events_url": "https://api.github.com/users/Zaharid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zaharid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-21T21:56:22Z",
    "updated_at": "2014-02-21T21:56:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Now it's simpler and works for this case. \n\nNote that right now it's not the same to add classes before or after the widget is displayed. In the first case subsequent calls to dispay(widget) will apply the same classes, where in the second they wont. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/35789489",
    "html_url": "https://github.com/ipython/ipython/pull/5183#issuecomment-35789489",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5183",
    "id": 35789489,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Nzg5NDg5",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-22T01:01:10Z",
    "updated_at": "2014-02-22T01:01:10Z",
    "author_association": "MEMBER",
    "body": "> Note that right now it's not the same to add classes before or after the widget is displayed. In the first case subsequent calls to dispay(widget) will apply the same classes, where in the second they wont.\n\nThat makes sense, @ellisonbg what do you think of this PR and the idea of caching calls to add and remove class before a widget has been displayed?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/35799995",
    "html_url": "https://github.com/ipython/ipython/pull/5183#issuecomment-35799995",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5183",
    "id": 35799995,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Nzk5OTk1",
    "user": {
      "login": "Zaharid",
      "id": 5675858,
      "node_id": "MDQ6VXNlcjU2NzU4NTg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5675858?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zaharid",
      "html_url": "https://github.com/Zaharid",
      "followers_url": "https://api.github.com/users/Zaharid/followers",
      "following_url": "https://api.github.com/users/Zaharid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zaharid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zaharid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zaharid/subscriptions",
      "organizations_url": "https://api.github.com/users/Zaharid/orgs",
      "repos_url": "https://api.github.com/users/Zaharid/repos",
      "events_url": "https://api.github.com/users/Zaharid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zaharid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-22T10:55:19Z",
    "updated_at": "2014-02-22T10:55:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "Notice that the cases where the user has pressed the close button are not handled (as there is no python event for them).\n\nAlso the \"displayed\" and \"closed\" properties should probably track somehow the number of instances in the DOM (or allow only one instance).\n\nRegards.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36411075",
    "html_url": "https://github.com/ipython/ipython/pull/5183#issuecomment-36411075",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5183",
    "id": 36411075,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDExMDc1",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-01T01:15:56Z",
    "updated_at": "2014-03-01T01:15:56Z",
    "author_association": "MEMBER",
    "body": "The current model for the add & remove class methods is that they are completely stateless.  After discussing this with @ellisonbg in detail, we decided that we should not change this stateless model.  This PR only makes the add & remove class calls statefull prior to widget display (as you mention), which is strange.  If we wanted to make this work for widgets not yet displayed, we would have to cache all calls to add/remove class.  For applications where add/remove class is used to toggle classes on items, the cache would grow N times for N calls to add/remove (it would behave like a memory leak).\n\nAs a workaround, users can register callbacks using `on_displayed` and then apply the CSS in the callback.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36422561",
    "html_url": "https://github.com/ipython/ipython/pull/5183#issuecomment-36422561",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5183",
    "id": 36422561,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDIyNTYx",
    "user": {
      "login": "Zaharid",
      "id": 5675858,
      "node_id": "MDQ6VXNlcjU2NzU4NTg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5675858?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zaharid",
      "html_url": "https://github.com/Zaharid",
      "followers_url": "https://api.github.com/users/Zaharid/followers",
      "following_url": "https://api.github.com/users/Zaharid/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zaharid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zaharid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zaharid/subscriptions",
      "organizations_url": "https://api.github.com/users/Zaharid/orgs",
      "repos_url": "https://api.github.com/users/Zaharid/repos",
      "events_url": "https://api.github.com/users/Zaharid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zaharid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-01T11:34:17Z",
    "updated_at": "2014-03-01T11:34:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "How about this?:\n-Forget about remove class and selectors before display.\n-Have the default css classes of a DOM widget be a python (string) property: `default_classes` or something like that.\n-These are the classes that get sent on display. \n\nFor example for a ContainerWidget the `default_classes` would be either `\"widget-container vbox\"` or just `\"vbox\"`, allowing to easily change it.\n\nThis way there are no inconsistencies and a lot of boilerplate code can be avoided when creating a layout with containers and children.\n"
  }
]
