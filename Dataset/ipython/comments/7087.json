[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/66036713",
    "html_url": "https://github.com/ipython/ipython/pull/7087#issuecomment-66036713",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7087",
    "id": 66036713,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2MDM2NzEz",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-08T08:24:00Z",
    "updated_at": "2014-12-08T08:24:00Z",
    "author_association": "MEMBER",
    "body": "Hi, thanks, sorry for the time to respond. \n\nThe behavior of creating new cells at then end seem sensible to me, though I'd like the decision of the rest of the team. \n\nFrom code perspective, we try to avoid merging master into PR branches, as (among many reasons) most of our tool rely on the merge commits to autowrite changelogs, but we can deal with that later.\n\nI'm not sure we want a shortcut for that. Do you plan on changing it a lot ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/66166562",
    "html_url": "https://github.com/ipython/ipython/pull/7087#issuecomment-66166562",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7087",
    "id": 66166562,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2MTY2NTYy",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-08T18:59:40Z",
    "updated_at": "2014-12-08T18:59:40Z",
    "author_association": "MEMBER",
    "body": "I definitely think this shouldn't get a shortcut. I also don't think that adding cells at the end is the right way to go, and I'm not sure that adding cells at all is right. Doesn't at the current cursor make more sense than at the end?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/66195653",
    "html_url": "https://github.com/ipython/ipython/pull/7087#issuecomment-66195653",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7087",
    "id": 66195653,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2MTk1NjUz",
    "user": {
      "login": "nheijermans",
      "id": 1709740,
      "node_id": "MDQ6VXNlcjE3MDk3NDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1709740?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nheijermans",
      "html_url": "https://github.com/nheijermans",
      "followers_url": "https://api.github.com/users/nheijermans/followers",
      "following_url": "https://api.github.com/users/nheijermans/following{/other_user}",
      "gists_url": "https://api.github.com/users/nheijermans/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nheijermans/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nheijermans/subscriptions",
      "organizations_url": "https://api.github.com/users/nheijermans/orgs",
      "repos_url": "https://api.github.com/users/nheijermans/repos",
      "events_url": "https://api.github.com/users/nheijermans/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nheijermans/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-08T21:59:42Z",
    "updated_at": "2014-12-08T21:59:42Z",
    "author_association": "NONE",
    "body": "Thanks for the feedback. Here's what I see as the options for displaying the output.\n- Location\n  - At current cursor position.\n  - At the end of the notebook.\n  - Hidden until activity occurs in the notebook (like the console apps work right now).\n- Grouping\n  - Each execute_request/execute_response gets its own cell in the notebook.\n  - Multiple requests/responses get merged together somehow, displayed elsewhere. Where should this be? A single cell dedicated to output from other clients, akin to the help pane?\n\nFor my personal use cases, the main reasons I would be using this are to (1) avoid needing to write code in a web browser. I'm more productive using a text editor, and (2) to let me see rendered graphics or HTML in my browser that wouldn't be as easily accessible from within a console or text editor. I don't really care if this makes the notebook longer; I don't use them much for collaboration. If I did, my preference would probably be different.\n\nI also had a question about making this a configurable option; is there any way to get options all the way from the profile configuration into the web client? (I was hopeful that some of the ConfigManager changes would allow that, hence the merges from master. I'm willing to create another PR if that simplifies things for you all; let me know.)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/66197361",
    "html_url": "https://github.com/ipython/ipython/pull/7087#issuecomment-66197361",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7087",
    "id": 66197361,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2MTk3MzYx",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-08T22:10:58Z",
    "updated_at": "2014-12-08T22:10:58Z",
    "author_association": "MEMBER",
    "body": "> Hidden until activity occurs in the notebook (like the console apps work right now).\n\nI don't think there's a reason to copy that - it's a limitation of the console that we don't have a good way to insert text before the current prompt - so we wait until we're making a new prompt, and then display it.\n\n> is there any way to get options all the way from the profile configuration into the web client?\n\nThere is a separate config system for frontend stuff, designed to be accessed and updated from JS code - that's what my recent work has focussed on.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/66248691",
    "html_url": "https://github.com/ipython/ipython/pull/7087#issuecomment-66248691",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7087",
    "id": 66248691,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2MjQ4Njkx",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-09T08:23:52Z",
    "updated_at": "2014-12-09T08:23:52Z",
    "author_association": "MEMBER",
    "body": "I'm affraid that appending at the cursor or after selected cell will lead to weird behavior.\nalways appending at the end is consistent and surpriseless.\nAlso make sens in a multi-user/0 user environment where you can have many/0 cursors/selected cells.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/66677870",
    "html_url": "https://github.com/ipython/ipython/pull/7087#issuecomment-66677870",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7087",
    "id": 66677870,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2Njc3ODcw",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-11T19:54:56Z",
    "updated_at": "2014-12-11T19:54:56Z",
    "author_association": "MEMBER",
    "body": "From the [dev meeting](https://ipython.hackpad.com/2014-IPython-Weekly-Development-Meetings-part-2-bxJTQTtMzh0#:h=December-11) for 3.0 we will just add the API to register a callback, so that nbextensions can hook to do whatever they like. \n\nDo you want to take a shot at it and trim this PR ?  We can give you some help if you want. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/66690357",
    "html_url": "https://github.com/ipython/ipython/pull/7087#issuecomment-66690357",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7087",
    "id": 66690357,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NjkwMzU3",
    "user": {
      "login": "nheijermans",
      "id": 1709740,
      "node_id": "MDQ6VXNlcjE3MDk3NDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1709740?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nheijermans",
      "html_url": "https://github.com/nheijermans",
      "followers_url": "https://api.github.com/users/nheijermans/followers",
      "following_url": "https://api.github.com/users/nheijermans/following{/other_user}",
      "gists_url": "https://api.github.com/users/nheijermans/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nheijermans/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nheijermans/subscriptions",
      "organizations_url": "https://api.github.com/users/nheijermans/orgs",
      "repos_url": "https://api.github.com/users/nheijermans/repos",
      "events_url": "https://api.github.com/users/nheijermans/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nheijermans/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-11T21:17:26Z",
    "updated_at": "2014-12-11T21:17:26Z",
    "author_association": "NONE",
    "body": "That sounds like a good compromise. I'll take a stab at it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/66804624",
    "html_url": "https://github.com/ipython/ipython/pull/7087#issuecomment-66804624",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7087",
    "id": 66804624,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2ODA0NjI0",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-12T17:24:50Z",
    "updated_at": "2014-12-12T17:24:50Z",
    "author_association": "MEMBER",
    "body": "> That sounds like a good compromise. I'll take a stab at it.\n\nGreat !\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/67142059",
    "html_url": "https://github.com/ipython/ipython/pull/7087#issuecomment-67142059",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7087",
    "id": 67142059,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MTQyMDU5",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-16T10:50:51Z",
    "updated_at": "2014-12-16T10:50:51Z",
    "author_association": "MEMBER",
    "body": "Seems good, I relaunched the test that were due to unrelated faillure. \n\nI'll have a comment on https://github.com/nheijermans/nbexts.git on the else branch of [update UI](https://github.com/nheijermans/nbexts/blob/master/ext_client_ui.js#L36-L49) I don't see in what case you would have a unsolicited input that does not come from the notebook and belong to a notebook cell...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/67430040",
    "html_url": "https://github.com/ipython/ipython/pull/7087#issuecomment-67430040",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7087",
    "id": 67430040,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NDMwMDQw",
    "user": {
      "login": "nheijermans",
      "id": 1709740,
      "node_id": "MDQ6VXNlcjE3MDk3NDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1709740?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nheijermans",
      "html_url": "https://github.com/nheijermans",
      "followers_url": "https://api.github.com/users/nheijermans/followers",
      "following_url": "https://api.github.com/users/nheijermans/following{/other_user}",
      "gists_url": "https://api.github.com/users/nheijermans/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nheijermans/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nheijermans/subscriptions",
      "organizations_url": "https://api.github.com/users/nheijermans/orgs",
      "repos_url": "https://api.github.com/users/nheijermans/repos",
      "events_url": "https://api.github.com/users/nheijermans/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nheijermans/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-18T01:53:00Z",
    "updated_at": "2014-12-18T01:53:00Z",
    "author_association": "NONE",
    "body": "The else branch handles output messages that don't have any registered JS callbacks (the [early return in Kernel.prototype._handle_output_message](https://github.com/nheijermans/ipython/blob/master/IPython/html/static/services/kernels/kernel.js#L1001-1006)). Since the code execution wasn't kicked off from a codecell's `execute` function, the cell that was created for the `execute_input` message doesn't have any callbacks registered, hence the need to search for the matching message IDs rather than relying on the callbacks.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/67454517",
    "html_url": "https://github.com/ipython/ipython/pull/7087#issuecomment-67454517",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7087",
    "id": 67454517,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NDU0NTE3",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-18T08:19:41Z",
    "updated_at": "2014-12-18T08:19:41Z",
    "author_association": "MEMBER",
    "body": "> The else branch handles output messages that don't have any registered JS callbacks (the early return in Kernel.prototype._handle_output_message). Since the code execution wasn't kicked off from a codecell's execute function, the cell that was created for the execute_input message doesn't have any callbacks registered, hence the need to search for the matching message IDs rather than relying on the callbacks.\n\nAh, yes today that make perfect sens. \nLet's try like that we can improve further if needed ! Thanks ! \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/160359262",
    "html_url": "https://github.com/ipython/ipython/pull/7087#issuecomment-160359262",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7087",
    "id": 160359262,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDM1OTI2Mg==",
    "user": {
      "login": "pablocobelli",
      "id": 6529031,
      "node_id": "MDQ6VXNlcjY1MjkwMzE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6529031?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pablocobelli",
      "html_url": "https://github.com/pablocobelli",
      "followers_url": "https://api.github.com/users/pablocobelli/followers",
      "following_url": "https://api.github.com/users/pablocobelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/pablocobelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pablocobelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pablocobelli/subscriptions",
      "organizations_url": "https://api.github.com/users/pablocobelli/orgs",
      "repos_url": "https://api.github.com/users/pablocobelli/repos",
      "events_url": "https://api.github.com/users/pablocobelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pablocobelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-29T01:55:53Z",
    "updated_at": "2015-11-29T01:55:53Z",
    "author_association": "NONE",
    "body": "Enabling jupiter notebooks to display messages from other clients would be a great feature. From reading the comments I don't get whether this was implemented or not. Is it possible to do it? If yes, how would one accomplish that? Thanks in advance.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/160772057",
    "html_url": "https://github.com/ipython/ipython/pull/7087#issuecomment-160772057",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7087",
    "id": 160772057,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDc3MjA1Nw==",
    "user": {
      "login": "pablocobelli",
      "id": 6529031,
      "node_id": "MDQ6VXNlcjY1MjkwMzE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6529031?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pablocobelli",
      "html_url": "https://github.com/pablocobelli",
      "followers_url": "https://api.github.com/users/pablocobelli/followers",
      "following_url": "https://api.github.com/users/pablocobelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/pablocobelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pablocobelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pablocobelli/subscriptions",
      "organizations_url": "https://api.github.com/users/pablocobelli/orgs",
      "repos_url": "https://api.github.com/users/pablocobelli/repos",
      "events_url": "https://api.github.com/users/pablocobelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pablocobelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-30T21:47:47Z",
    "updated_at": "2015-11-30T21:47:47Z",
    "author_association": "NONE",
    "body": "I'll answer my own question since I found the answer (it was just a matter of properly reading the previous exchange, though). This capability was developed by nheijermans as an extension for the Jupyter Notebook; it's available for download at https://github.com/nheijermans/nbexts. Thanks again and sorry for the noise.\n"
  }
]
