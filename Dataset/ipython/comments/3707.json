[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21307948",
    "html_url": "https://github.com/ipython/ipython/issues/3707#issuecomment-21307948",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3707",
    "id": 21307948,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMzA3OTQ4",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-21T10:20:26Z",
    "updated_at": "2013-07-21T10:20:26Z",
    "author_association": "MEMBER",
    "body": "It's quite easy to write code that won't work if you just strip out IPython special syntax - e.g. use `files = !ls` and then refer to files.\n\nI think we should save the transformed code, which will always be syntactically valid Python, but will need to be run in IPython if you've used any IPython special features.\n\nAnd no, it's not a bug that ipython chokes on magic commands in a .py file, because it expects those to be valid Python. It can handle magic commands in `.ipy` files.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21314513",
    "html_url": "https://github.com/ipython/ipython/issues/3707#issuecomment-21314513",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3707",
    "id": 21314513,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMzE0NTEz",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-21T18:33:08Z",
    "updated_at": "2013-07-21T18:33:08Z",
    "author_association": "MEMBER",
    "body": "@takluyver is right - they should not just be stripped.  We should do one of two things (or both, possibly):\n1. call the output \"IPython\", since it is a valid IPython script, and give it the extension `.ipy`\n2. apply our input transforms, so that it is indeed valid Python - it still may not work in the absence of IPython,\n   depending on what is used, but it would at least be a Python script.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21315677",
    "html_url": "https://github.com/ipython/ipython/issues/3707#issuecomment-21315677",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3707",
    "id": 21315677,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMzE1Njc3",
    "user": {
      "login": "dpsanders",
      "id": 191822,
      "node_id": "MDQ6VXNlcjE5MTgyMg==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/191822?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dpsanders",
      "html_url": "https://github.com/dpsanders",
      "followers_url": "https://api.github.com/users/dpsanders/followers",
      "following_url": "https://api.github.com/users/dpsanders/following{/other_user}",
      "gists_url": "https://api.github.com/users/dpsanders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dpsanders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dpsanders/subscriptions",
      "organizations_url": "https://api.github.com/users/dpsanders/orgs",
      "repos_url": "https://api.github.com/users/dpsanders/repos",
      "events_url": "https://api.github.com/users/dpsanders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dpsanders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-21T19:47:10Z",
    "updated_at": "2013-07-21T19:48:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "The `.ipy` solution seems like a good solution.\nThen we can provide a simple script to remove the magics if necessary:\n\n`remove_magic` script contains:\n\n```\nawk 'substr($0,1,1) != \"%\"' $1 > $1\n```\n\nIsn't `awk` amazing :)\n\nOh, have to remove the `!` stuff too; I guess that's harder and does need transformers.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21315700",
    "html_url": "https://github.com/ipython/ipython/issues/3707#issuecomment-21315700",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3707",
    "id": 21315700,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMzE1NzAw",
    "user": {
      "login": "dpsanders",
      "id": 191822,
      "node_id": "MDQ6VXNlcjE5MTgyMg==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/191822?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dpsanders",
      "html_url": "https://github.com/dpsanders",
      "followers_url": "https://api.github.com/users/dpsanders/followers",
      "following_url": "https://api.github.com/users/dpsanders/following{/other_user}",
      "gists_url": "https://api.github.com/users/dpsanders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dpsanders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dpsanders/subscriptions",
      "organizations_url": "https://api.github.com/users/dpsanders/orgs",
      "repos_url": "https://api.github.com/users/dpsanders/repos",
      "events_url": "https://api.github.com/users/dpsanders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dpsanders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-21T19:48:49Z",
    "updated_at": "2013-07-21T19:49:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "So we need two separate formats; I propose `--format=ipy` and `--format=py`.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21316444",
    "html_url": "https://github.com/ipython/ipython/issues/3707#issuecomment-21316444",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3707",
    "id": 21316444,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMzE2NDQ0",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-21T20:30:07Z",
    "updated_at": "2013-07-22T00:51:05Z",
    "author_association": "MEMBER",
    "body": "that awk solution isn't actually general - you will learn that input transforms are _much_ more complicated than that.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21316700",
    "html_url": "https://github.com/ipython/ipython/issues/3707#issuecomment-21316700",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3707",
    "id": 21316700,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMzE2NzAw",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-21T20:45:05Z",
    "updated_at": "2013-07-21T20:45:05Z",
    "author_association": "MEMBER",
    "body": "I'd leave the name `--format=python` for the transformed commands.\n\nWe could add an 'ipy' output format, but I don't think .ipy files are widely used, and we've never particularly promoted them. It's also not completely trivial, because we'd need to take blank lines out of things like cell magics, so that it could work out where they finished. In some cases, removing blank lines could change the effect of a cell magic.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21323627",
    "html_url": "https://github.com/ipython/ipython/issues/3707#issuecomment-21323627",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3707",
    "id": 21323627,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMzIzNjI3",
    "user": {
      "login": "dpsanders",
      "id": 191822,
      "node_id": "MDQ6VXNlcjE5MTgyMg==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/191822?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dpsanders",
      "html_url": "https://github.com/dpsanders",
      "followers_url": "https://api.github.com/users/dpsanders/followers",
      "following_url": "https://api.github.com/users/dpsanders/following{/other_user}",
      "gists_url": "https://api.github.com/users/dpsanders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dpsanders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dpsanders/subscriptions",
      "organizations_url": "https://api.github.com/users/dpsanders/orgs",
      "repos_url": "https://api.github.com/users/dpsanders/repos",
      "events_url": "https://api.github.com/users/dpsanders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dpsanders/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-22T03:50:01Z",
    "updated_at": "2013-07-22T03:50:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK, it certainly sounds like a can of worms.\n\nBut the main point to fix right now is that we _claim_, implicitly or\nexplicitly, that the output is a pure Python script which can be executed\nwith `python`, whereas actually both `python` and `ipython` choke on the\noutput if there are magics (which there will be in a large percentage of\nuse cases, due to `%matplotlib`). We are actually outputting an unusable\nscript.\n\nSince, on the other hand, it suddenly becomes usable if the extension is\nchanged to `.ipy` and run with `ipython`,  perhaps now is a good moment to\n_start_  promoting this idiom. In this case, `%matplotlib inline` should\nautomatically have the `inline` removed.\n\nOn Sun, Jul 21, 2013 at 3:45 PM, Thomas Kluyver notifications@github.comwrote:\n\n> I'd leave the name --format=python for the transformed commands.\n> \n> We could add an 'ipy' output format, but I don't think .ipy files are\n> widely used, and we've never particularly promoted them. It's also not\n> completely trivial, because we'd need to take blank lines out of things\n> like cell magics, so that it could work out where they finished. In some\n> cases, removing blank lines could change the effect of a cell magic.\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/issues/3707#issuecomment-21316700\n> .\n\n## \n\nDr. David P. Sanders\n\nProfesor Titular \"A\" / Associate Professor\nDepartamento de Física, Facultad de Ciencias\nUniversidad Nacional Autónoma de México (UNAM)\n\ndpsanders@gmail.com\nhttp://sistemas.fciencias.unam.mx/~dsanders\n\nCubículo / office: #414, 4o. piso del Depto. de Física\n\nTel.: +52 55 5622 4965\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21324129",
    "html_url": "https://github.com/ipython/ipython/issues/3707#issuecomment-21324129",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3707",
    "id": 21324129,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMzI0MTI5",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-22T04:19:59Z",
    "updated_at": "2013-07-22T04:19:59Z",
    "author_association": "MEMBER",
    "body": "> But the main point to fix right now is that we _claim_, implicitly or \n> explicitly, that the output is a pure Python script which can be executed \n> with `python`, whereas actually both `python` and `ipython` choke on the \n> output if there are magics (which there will be in a large percentage of \n> use cases, due to `%matplotlib`). We are actually outputting an unusable \n> script. \n\nThat the reason why nbconvert is in **tech preview**, there are many things at which nbconvert will not be good at, and that we will need to change. The export to `.py` (even without nbconvert) has always had quirks, but with the nice nbconvert api it should be easier to fix.\n\nI guess be can have a `ipy2py` cell filter it will help, but I don't think promoting `.ipy` files is a good idea.\nThey are convenient but will never replace pure python script as the same way translated magic are just\na nice hack but shouldn't be used in production. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21332769",
    "html_url": "https://github.com/ipython/ipython/issues/3707#issuecomment-21332769",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3707",
    "id": 21332769,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMzMyNzY5",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-22T09:14:38Z",
    "updated_at": "2013-07-22T09:14:38Z",
    "author_association": "MEMBER",
    "body": "Also, one of the main reasons to export a .py file is so you can use it as\nan importable module. That doesn't work for .ipy files.\n\nFurther, I don't know of any editor that will recognise a .ipy extension,\nso you lose file associations, syntax highlighting etc. by saving it as\nthat.\n\nOn 22 July 2013 05:20, Matthias Bussonnier notifications@github.com wrote:\n\n> But the main point to fix right now is that we _claim_, implicitly or\n> explicitly, that the output is a pure Python script which can be executed\n> with python, whereas actually both python and ipython choke on the\n> output if there are magics (which there will be in a large percentage of\n> use cases, due to %matplotlib). We are actually outputting an unusable\n> script.\n> \n>  That the reason why nbconvert is in _tech preview_, there are many\n> things at which nbconvert will not be good at, and that we will need to\n> change. The export to .py (even without nbconvert) has always had quirks,\n> but with the nice nbconvert api it should be easier to fix.\n> \n> I guess be can have a ipy2py cell filter it will help, but I don't think\n> promoting .ipy files is a good idea.\n> They are convenient but will never replace pure python script as the same\n> way translated magic are just\n> a nice hack but shouldn't be used in production.\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/issues/3707#issuecomment-21324129\n> .\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21342722",
    "html_url": "https://github.com/ipython/ipython/issues/3707#issuecomment-21342722",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3707",
    "id": 21342722,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMzQyNzIy",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-22T13:13:08Z",
    "updated_at": "2013-07-22T13:13:08Z",
    "author_association": "MEMBER",
    "body": "I am biased towards the filter/transform solution (`ipy2py`)... I do not think it would be a good idea to follow the path of a new `.ipy` format file, essentially, because all the things @takluyver has pointed out.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/33557705",
    "html_url": "https://github.com/ipython/ipython/issues/3707#issuecomment-33557705",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3707",
    "id": 33557705,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTU3NzA1",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-29T05:26:59Z",
    "updated_at": "2014-01-29T05:26:59Z",
    "author_association": "MEMBER",
    "body": "We do now perform input transforms in the Python template.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/327971946",
    "html_url": "https://github.com/ipython/ipython/issues/3707#issuecomment-327971946",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3707",
    "id": 327971946,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzk3MTk0Ng==",
    "user": {
      "login": "jclosure",
      "id": 343099,
      "node_id": "MDQ6VXNlcjM0MzA5OQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/343099?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jclosure",
      "html_url": "https://github.com/jclosure",
      "followers_url": "https://api.github.com/users/jclosure/followers",
      "following_url": "https://api.github.com/users/jclosure/following{/other_user}",
      "gists_url": "https://api.github.com/users/jclosure/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jclosure/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jclosure/subscriptions",
      "organizations_url": "https://api.github.com/users/jclosure/orgs",
      "repos_url": "https://api.github.com/users/jclosure/repos",
      "events_url": "https://api.github.com/users/jclosure/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jclosure/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-08T01:11:41Z",
    "updated_at": "2017-09-08T01:11:41Z",
    "author_association": "NONE",
    "body": "There are still a few wrinkles that can crop up from the literal input transforms of certain magics, i.e. `%pylab notebook` or `%matplotlib notebook`.  Since I use the notebook backend in jupyter notebooks, when these are converted with **--to python**, the output gets converted to:\r\n\r\n```get_ipython().magic(u'pylab notebook')```\r\n\r\nThis is problematic in ipython and python, because the notebook backend is only available in jupyter.  It's possible to modify this pattern in postprocessing to something like:\r\n\r\n```get_ipython().magic(u'pylab auto')```\r\n\r\nThis works in ipython, but _get_ipython()_ is only available in ipython, so it won't work in python.\r\n\r\nSince I want the converted .py scripts to be runnable in python, the best option was to create a filter and a template to comment out these magics all together.\r\n\r\nFilter:\r\n```python\r\nimport re\r\n\r\n# This is a list of magics that we do not want in our output scripts\r\nmagics_regexs = [\r\n    r\"get_ipython\\(\\).magic\\(u\\'pylab .*\\'\\)\",\r\n    r\"get_ipython\\(\\).magic\\(u\\'matplotlib .*\\'\\)\"\r\n]\r\n\r\ndef comment_magics(input, **kwargs):\r\n    lines = input.splitlines(True)\r\n    output = \"\"\r\n    for line in lines:\r\n        new_line = \"\"\r\n        for regex in magics_regexs:\r\n            if re.match(regex, line):\r\n                new_line = new_line + \"#\" + line\r\n        if new_line:\r\n            output = output + new_line\r\n        else:\r\n            output = output + line\r\n    return output\r\n```\r\n\r\nTemplate:\r\n```\r\n{% extends 'python.tpl'%}\r\n{% block input %}\r\n  {{ super() | comment_magics }}\r\n{% endblock input %}\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/374785762",
    "html_url": "https://github.com/ipython/ipython/issues/3707#issuecomment-374785762",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3707",
    "id": 374785762,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDc4NTc2Mg==",
    "user": {
      "login": "NicWayand",
      "id": 1117224,
      "node_id": "MDQ6VXNlcjExMTcyMjQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1117224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicWayand",
      "html_url": "https://github.com/NicWayand",
      "followers_url": "https://api.github.com/users/NicWayand/followers",
      "following_url": "https://api.github.com/users/NicWayand/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicWayand/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicWayand/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicWayand/subscriptions",
      "organizations_url": "https://api.github.com/users/NicWayand/orgs",
      "repos_url": "https://api.github.com/users/NicWayand/repos",
      "events_url": "https://api.github.com/users/NicWayand/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicWayand/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-20T22:58:44Z",
    "updated_at": "2018-03-20T22:58:44Z",
    "author_association": "NONE",
    "body": "@jclosure Can you provide an example of how to apply that filter to a .py file? (sorry not familiar with templates). Thanks!"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/414813848",
    "html_url": "https://github.com/ipython/ipython/issues/3707#issuecomment-414813848",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3707",
    "id": 414813848,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDgxMzg0OA==",
    "user": {
      "login": "shett044",
      "id": 8699674,
      "node_id": "MDQ6VXNlcjg2OTk2NzQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/8699674?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shett044",
      "html_url": "https://github.com/shett044",
      "followers_url": "https://api.github.com/users/shett044/followers",
      "following_url": "https://api.github.com/users/shett044/following{/other_user}",
      "gists_url": "https://api.github.com/users/shett044/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shett044/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shett044/subscriptions",
      "organizations_url": "https://api.github.com/users/shett044/orgs",
      "repos_url": "https://api.github.com/users/shett044/repos",
      "events_url": "https://api.github.com/users/shett044/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shett044/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-21T20:38:02Z",
    "updated_at": "2018-08-21T20:38:02Z",
    "author_association": "NONE",
    "body": "Found a better way @dpsanders and @nickweseman :\r\n\r\n- Create a template file named \"simplepython.tpl\". Copy the below statements. \r\n\r\n```\r\n {% extends 'python.tpl'%}\r\n## Comments magic statement\r\n {% block codecell %}\r\n {{  super().replace('get_ipython','#get_ipython') if \"get_ipython\" in super() else super() }}\r\n {% endblock codecell %}\r\n```\r\n\r\n- Save simplepython.tpl.\r\n- Type in command line: \r\n>jupyter nbconvert --to python 'IPY Notebook' --template=simplepython.tpl --stdout\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/414816051",
    "html_url": "https://github.com/ipython/ipython/issues/3707#issuecomment-414816051",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3707",
    "id": 414816051,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDgxNjA1MQ==",
    "user": {
      "login": "NicWayand",
      "id": 1117224,
      "node_id": "MDQ6VXNlcjExMTcyMjQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1117224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicWayand",
      "html_url": "https://github.com/NicWayand",
      "followers_url": "https://api.github.com/users/NicWayand/followers",
      "following_url": "https://api.github.com/users/NicWayand/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicWayand/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicWayand/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicWayand/subscriptions",
      "organizations_url": "https://api.github.com/users/NicWayand/orgs",
      "repos_url": "https://api.github.com/users/NicWayand/repos",
      "events_url": "https://api.github.com/users/NicWayand/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicWayand/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-21T20:45:50Z",
    "updated_at": "2018-08-21T20:45:50Z",
    "author_association": "NONE",
    "body": "FWIW I wrapped @jclosure's filter to a command line executable https://github.com/NicWayand/hacks/blob/master/pyconvert.sh"
  }
]
