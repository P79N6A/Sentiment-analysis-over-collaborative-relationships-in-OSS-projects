[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21004641",
    "html_url": "https://github.com/ipython/ipython/issues/3646#issuecomment-21004641",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3646",
    "id": 21004641,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDA0NjQx",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-15T21:18:36Z",
    "updated_at": "2013-07-15T21:18:36Z",
    "author_association": "MEMBER",
    "body": "can you add more details? this is pretty cryptic\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21004676",
    "html_url": "https://github.com/ipython/ipython/issues/3646#issuecomment-21004676",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3646",
    "id": 21004676,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDA0Njc2",
    "user": {
      "login": "remram44",
      "id": 426784,
      "node_id": "MDQ6VXNlcjQyNjc4NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/426784?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/remram44",
      "html_url": "https://github.com/remram44",
      "followers_url": "https://api.github.com/users/remram44/followers",
      "following_url": "https://api.github.com/users/remram44/following{/other_user}",
      "gists_url": "https://api.github.com/users/remram44/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/remram44/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/remram44/subscriptions",
      "organizations_url": "https://api.github.com/users/remram44/orgs",
      "repos_url": "https://api.github.com/users/remram44/repos",
      "events_url": "https://api.github.com/users/remram44/events{/privacy}",
      "received_events_url": "https://api.github.com/users/remram44/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-15T21:19:22Z",
    "updated_at": "2013-07-15T21:19:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Wow, I didn't expect you to read this so fast! Here are the details.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21004769",
    "html_url": "https://github.com/ipython/ipython/issues/3646#issuecomment-21004769",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3646",
    "id": 21004769,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDA0NzY5",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-15T21:20:52Z",
    "updated_at": "2013-07-15T21:20:52Z",
    "author_association": "MEMBER",
    "body": "pinging @minrk since this involves parallel\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21006624",
    "html_url": "https://github.com/ipython/ipython/issues/3646#issuecomment-21006624",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3646",
    "id": 21006624,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDA2NjI0",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-15T21:51:54Z",
    "updated_at": "2013-07-15T21:51:54Z",
    "author_association": "MEMBER",
    "body": "`get_dict` doesn't make much sense outside of multi-engine DirectView, but it's an easy fix.  See #3649 for fix and tests.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21007126",
    "html_url": "https://github.com/ipython/ipython/issues/3646#issuecomment-21007126",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3646",
    "id": 21007126,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDA3MTI2",
    "user": {
      "login": "remram44",
      "id": 426784,
      "node_id": "MDQ6VXNlcjQyNjc4NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/426784?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/remram44",
      "html_url": "https://github.com/remram44",
      "followers_url": "https://api.github.com/users/remram44/followers",
      "following_url": "https://api.github.com/users/remram44/following{/other_user}",
      "gists_url": "https://api.github.com/users/remram44/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/remram44/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/remram44/subscriptions",
      "organizations_url": "https://api.github.com/users/remram44/orgs",
      "repos_url": "https://api.github.com/users/remram44/repos",
      "events_url": "https://api.github.com/users/remram44/events{/privacy}",
      "received_events_url": "https://api.github.com/users/remram44/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-15T22:00:04Z",
    "updated_at": "2013-07-15T22:00:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "I disagree, of course. Having to check how many engines are in the view before calling is extremely annoying, and also makes for a race condition.\n\nThanks for the fix!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21007704",
    "html_url": "https://github.com/ipython/ipython/issues/3646#issuecomment-21007704",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3646",
    "id": 21007704,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDA3NzA0",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-15T22:09:48Z",
    "updated_at": "2013-07-15T22:09:48Z",
    "author_association": "MEMBER",
    "body": "How could it possibly make for a race condition?  Single-engine-ness cannot change without explicit user intervention, and generally doesn't (and shouldn't) happen without creating a new View.\n\nCan I ask in what context you ran into this issue? I'm always interesting in how people are using IPython.parallel.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21009601",
    "html_url": "https://github.com/ipython/ipython/issues/3646#issuecomment-21009601",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3646",
    "id": 21009601,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDA5NjAx",
    "user": {
      "login": "remram44",
      "id": 426784,
      "node_id": "MDQ6VXNlcjQyNjc4NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/426784?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/remram44",
      "html_url": "https://github.com/remram44",
      "followers_url": "https://api.github.com/users/remram44/followers",
      "following_url": "https://api.github.com/users/remram44/following{/other_user}",
      "gists_url": "https://api.github.com/users/remram44/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/remram44/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/remram44/subscriptions",
      "organizations_url": "https://api.github.com/users/remram44/orgs",
      "repos_url": "https://api.github.com/users/remram44/repos",
      "events_url": "https://api.github.com/users/remram44/events{/privacy}",
      "received_events_url": "https://api.github.com/users/remram44/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-15T22:50:40Z",
    "updated_at": "2013-07-15T22:50:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Single-engine-ness cannot change without explicit user intervention, and generally doesn't (and shouldn't) happen without creating a new View.\n\nDirectView is fine, but a LoadBalancedView targeting all engines will make use of new engines without the need to get recreate it. This means that engines can register (or die) before you submit the request. But anyway.\n\n---\n\nI'm using IPython inside an application ([VisTrails](http://www.vistrails.org/), although this particular work is not public yet) that provides a GUI for using IPython; the particular piece of code that triggered the issue is one that gets some basic info from the engines:\n\n``` python\nwith client.direct_view() as dview:\n    engines = dview.apply_async(\n            eval,\n            '(os.getpid(), platform.system(), socket.getfqdn())'\n    ).get_dict()\n    print \"engines:\\n\\tid\\tsystem\\tPID\\tnode FQDN\"\n    for ip_id, (pid, system, fqdn) in engines:\n        print \"\\t%d\\t%s\\t%d\\t%s\" % (ip_id, system, pid, fqdn)\n```\n\nI'm also using [a wrapper for Client](https://gist.github.com/remram44/5902529) to provide callbacks for AsyncResults, and thread-safety; I think we discussed that before?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21010969",
    "html_url": "https://github.com/ipython/ipython/issues/3646#issuecomment-21010969",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3646",
    "id": 21010969,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDEwOTY5",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-15T23:19:31Z",
    "updated_at": "2013-07-15T23:19:31Z",
    "author_association": "MEMBER",
    "body": "> DirectView is fine, but a LoadBalancedView targeting all engines will make use of new engines without the need to get recreate it.\n\nA load-balanced view is _always_ a single-engine view in the way that matters for `get_dict`.  Single-engine-ness only means that when you call `AsyncResult.get()`, you will get the actual result rather than a list of length one.  This is always true of LoadBalancedViews and DirectViews created via `engine = client[N]`, and not true otherwise.\n\nI don't see how the code you pasted could be what triggered the issue, because `direct_view()` will not create single-engine views unless you pass the argument `targets=<integer>`. If it did, there is another bug I need to track down.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21015368",
    "html_url": "https://github.com/ipython/ipython/issues/3646#issuecomment-21015368",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3646",
    "id": 21015368,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDE1MzY4",
    "user": {
      "login": "remram44",
      "id": 426784,
      "node_id": "MDQ6VXNlcjQyNjc4NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/426784?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/remram44",
      "html_url": "https://github.com/remram44",
      "followers_url": "https://api.github.com/users/remram44/followers",
      "following_url": "https://api.github.com/users/remram44/following{/other_user}",
      "gists_url": "https://api.github.com/users/remram44/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/remram44/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/remram44/subscriptions",
      "organizations_url": "https://api.github.com/users/remram44/orgs",
      "repos_url": "https://api.github.com/users/remram44/repos",
      "events_url": "https://api.github.com/users/remram44/events{/privacy}",
      "received_events_url": "https://api.github.com/users/remram44/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-16T01:15:12Z",
    "updated_at": "2013-07-16T01:15:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "> `direct_view()` will not create single-engine views unless you pass the argument targets=<integer>. If it did, there is another bug I need to track down.\n\nPassing `targets='all'` will get you such a view if there is only one engine. I can't reproduce the bug through slicing (i.e. `rc[:]` works but `rc.direct_view()` will exhibit the problem).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21018420",
    "html_url": "https://github.com/ipython/ipython/issues/3646#issuecomment-21018420",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3646",
    "id": 21018420,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDE4NDIw",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-16T03:00:09Z",
    "updated_at": "2013-07-16T03:00:09Z",
    "author_association": "MEMBER",
    "body": "> Passing targets='all' will get you such a view if there is only one engine.\n\nThanks, this is most certainly a bug.  Will fix shortly.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/21020502",
    "html_url": "https://github.com/ipython/ipython/issues/3646#issuecomment-21020502",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3646",
    "id": 21020502,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDIwNTAy",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-16T04:24:55Z",
    "updated_at": "2013-07-16T04:24:55Z",
    "author_association": "MEMBER",
    "body": "#3654 should fix the issue of `targets='all'` behaving like `targets=client.ids[0]` when only one engine is present.\n"
  }
]
