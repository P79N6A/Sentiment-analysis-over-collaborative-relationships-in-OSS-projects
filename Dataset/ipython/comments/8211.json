[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/88201670",
    "html_url": "https://github.com/ipython/ipython/issues/8211#issuecomment-88201670",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8211",
    "id": 88201670,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg4MjAxNjcw",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-31T18:35:40Z",
    "updated_at": "2015-03-31T18:35:40Z",
    "author_association": "MEMBER",
    "body": "It looks like a ZMQ socket, or something which has a reference to one, is ending up as a parameter value in the lmfit model, and then deepcopy is failing. I don't think anything with a reference to a ZMQ socket should be a model parameter. Is it possible that something is scraping the global namespace to make parameters?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/88204379",
    "html_url": "https://github.com/ipython/ipython/issues/8211#issuecomment-88204379",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8211",
    "id": 88204379,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg4MjA0Mzc5",
    "user": {
      "login": "tritemio",
      "id": 4156237,
      "node_id": "MDQ6VXNlcjQxNTYyMzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4156237?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tritemio",
      "html_url": "https://github.com/tritemio",
      "followers_url": "https://api.github.com/users/tritemio/followers",
      "following_url": "https://api.github.com/users/tritemio/following{/other_user}",
      "gists_url": "https://api.github.com/users/tritemio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tritemio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tritemio/subscriptions",
      "organizations_url": "https://api.github.com/users/tritemio/orgs",
      "repos_url": "https://api.github.com/users/tritemio/repos",
      "events_url": "https://api.github.com/users/tritemio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tritemio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-31T18:44:22Z",
    "updated_at": "2015-03-31T18:44:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "It don't think there is any global name scraping (there shouldn't be). We now have a much simpler example that reproduces the error:\n\n```\nimport lmfit\nprint('lmfit version: %s' % lmfit.__version__)\nfrom copy import deepcopy\nfrom lmfit import Parameters\npars = Parameters()\npars.add('x', 1.0)\nc = deepcopy(pars)\n```\n\nThe puzzling thing is that the above example works in python an ipython text terminal (with no GUI).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/88213831",
    "html_url": "https://github.com/ipython/ipython/issues/8211#issuecomment-88213831",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8211",
    "id": 88213831,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg4MjEzODMx",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-31T19:14:50Z",
    "updated_at": "2015-03-31T19:14:50Z",
    "author_association": "MEMBER",
    "body": "That's not especially puzzling - neither of those have ZMQ sockets, so I wouldn't expect them to hit this bug.\n\nIt looks like the trouble is with asteval, and I do see some namespace scraping going on there:\nhttps://github.com/lmfit/lmfit-py/blob/master/lmfit/asteval.py#L88\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/88217511",
    "html_url": "https://github.com/ipython/ipython/issues/8211#issuecomment-88217511",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8211",
    "id": 88217511,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg4MjE3NTEx",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-31T19:22:42Z",
    "updated_at": "2015-03-31T19:22:42Z",
    "author_association": "MEMBER",
    "body": "Try sticking a `print(key)` in just before this line:\n\nhttps://github.com/lmfit/lmfit-py/blob/master/lmfit/parameter.py#L48\n\nThat should indicate what's causing the problem.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/88238609",
    "html_url": "https://github.com/ipython/ipython/issues/8211#issuecomment-88238609",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8211",
    "id": 88238609,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg4MjM4NjA5",
    "user": {
      "login": "tritemio",
      "id": 4156237,
      "node_id": "MDQ6VXNlcjQxNTYyMzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4156237?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tritemio",
      "html_url": "https://github.com/tritemio",
      "followers_url": "https://api.github.com/users/tritemio/followers",
      "following_url": "https://api.github.com/users/tritemio/following{/other_user}",
      "gists_url": "https://api.github.com/users/tritemio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tritemio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tritemio/subscriptions",
      "organizations_url": "https://api.github.com/users/tritemio/orgs",
      "repos_url": "https://api.github.com/users/tritemio/repos",
      "events_url": "https://api.github.com/users/tritemio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tritemio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-31T20:44:29Z",
    "updated_at": "2015-03-31T20:44:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "@takluyver, thanks, I'm not familiar with the asteval code, @newville may have more insights.\n\nFor the record, adding the print you suggested I get:\n\n```\n...\nBytesWarning\nspacing\nprint\n```\n\n followed by the error.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/88240766",
    "html_url": "https://github.com/ipython/ipython/issues/8211#issuecomment-88240766",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8211",
    "id": 88240766,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg4MjQwNzY2",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-31T20:53:16Z",
    "updated_at": "2015-03-31T20:53:16Z",
    "author_association": "MEMBER",
    "body": "Looking at the code, print refers to [Interpreter._printer](https://github.com/lmfit/lmfit-py/blob/master/lmfit/asteval.py#L477). So by deep copying that, you will copy the entire `lmfit.asteval.Interpreter` instance, which has a reference to `sys.stdout` as `self.writer`. In IPython, `sys.stdout` is replaced with an object which sends output over ZMQ to the frontend.\n\nI doubt lmfit intends to be deepcopying that much.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/88244810",
    "html_url": "https://github.com/ipython/ipython/issues/8211#issuecomment-88244810",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8211",
    "id": 88244810,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg4MjQ0ODEw",
    "user": {
      "login": "newville",
      "id": 304251,
      "node_id": "MDQ6VXNlcjMwNDI1MQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/304251?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/newville",
      "html_url": "https://github.com/newville",
      "followers_url": "https://api.github.com/users/newville/followers",
      "following_url": "https://api.github.com/users/newville/following{/other_user}",
      "gists_url": "https://api.github.com/users/newville/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/newville/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/newville/subscriptions",
      "organizations_url": "https://api.github.com/users/newville/orgs",
      "repos_url": "https://api.github.com/users/newville/repos",
      "events_url": "https://api.github.com/users/newville/events{/privacy}",
      "received_events_url": "https://api.github.com/users/newville/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-31T21:01:31Z",
    "updated_at": "2015-03-31T21:01:31Z",
    "author_association": "NONE",
    "body": "@tritemio @takluyver I haven't looked at this in great detail, but I agree that the basic problem is zmq vs whatever asteval has in it symbol table.  It's certainly believable that a dumb \"copy everything\" is not actually needed. Then again, we absolutely did not ask for zmq to be involved in the process at all. \n\nIn fact, it looks to me like zmq is just plain broken. Probably by design.  I sure we can make it so that lmfit and asteval work around this deep bug in IPython, but the problem is square and undeniably there, not with either asteval or lmfit. \n\nIf a script works in Python and not IPython, the problem is clearly with IPython.   \n\nAre you going to fix it, or do you expect a work-around from us?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/88252322",
    "html_url": "https://github.com/ipython/ipython/issues/8211#issuecomment-88252322",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8211",
    "id": 88252322,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg4MjUyMzIy",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-31T21:14:48Z",
    "updated_at": "2015-03-31T21:14:48Z",
    "author_association": "MEMBER",
    "body": "I don't think you can assume that deep copying arbitrary things (like sys.stdout, which it's common to replace in order to capture or redirect output) is safe. I'd be inclined to say this is a bug in lmfit, in that it shouldn't be trying to deep copy objects it doesn't know about. It's up to @minrk whether a fix in zmq is appropriate - I'm pretty sure there's nothing we can do in IPython.\n\n> If a script works in Python and not IPython, the problem is clearly with IPython. \n\nI don't think that's necessarily true. The things that we do can expose bugs in other code that wouldn't otherwise show up. That doesn't happen very often, but we do see it. We've even uncovered one or two problems in Python itself, I think. If my website worked in one browser but not another, there's a good chance that it's my HTML at fault, not the browser.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/88264987",
    "html_url": "https://github.com/ipython/ipython/issues/8211#issuecomment-88264987",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8211",
    "id": 88264987,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg4MjY0OTg3",
    "user": {
      "login": "newville",
      "id": 304251,
      "node_id": "MDQ6VXNlcjMwNDI1MQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/304251?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/newville",
      "html_url": "https://github.com/newville",
      "followers_url": "https://api.github.com/users/newville/followers",
      "following_url": "https://api.github.com/users/newville/following{/other_user}",
      "gists_url": "https://api.github.com/users/newville/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/newville/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/newville/subscriptions",
      "organizations_url": "https://api.github.com/users/newville/orgs",
      "repos_url": "https://api.github.com/users/newville/repos",
      "events_url": "https://api.github.com/users/newville/events{/privacy}",
      "received_events_url": "https://api.github.com/users/newville/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-31T21:57:45Z",
    "updated_at": "2015-03-31T21:57:45Z",
    "author_association": "NONE",
    "body": "@takluyver   Well, we can almost certainly make lmfit work around this issue, but if zmq or IPython breaks `deepcopy(sys.stdout)` because it monkey-patched `sys.stdout`,  we're definitely working around a problem we did not create.   \n\nThat is, one _can_ `deepcopy(sys.stdout)`.  If some library or application replaces `sys.stdout` with something than cannot be deepcopy()'ed, the replacement is flawed.\n\nThe analogy with HTML is not relevant. The code in question works in Python.  If using some additional library breaks that (because, perhaps, it has replaced a function in the `sys` module with something that does not support the functionality of the original), the library is at fault.  You can't just replace `sys.stdout` with `None` and then say that any script that expects `print()` to work is broken.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/88265724",
    "html_url": "https://github.com/ipython/ipython/issues/8211#issuecomment-88265724",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8211",
    "id": 88265724,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg4MjY1NzI0",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-31T22:01:45Z",
    "updated_at": "2015-03-31T22:01:45Z",
    "author_association": "MEMBER",
    "body": "If anything, the problem is not in IPython, but zmq, a dependency of IPython.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/88265874",
    "html_url": "https://github.com/ipython/ipython/issues/8211#issuecomment-88265874",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8211",
    "id": 88265874,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg4MjY1ODc0",
    "user": {
      "login": "ssanderson",
      "id": 1588357,
      "node_id": "MDQ6VXNlcjE1ODgzNTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1588357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssanderson",
      "html_url": "https://github.com/ssanderson",
      "followers_url": "https://api.github.com/users/ssanderson/followers",
      "following_url": "https://api.github.com/users/ssanderson/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssanderson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssanderson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssanderson/subscriptions",
      "organizations_url": "https://api.github.com/users/ssanderson/orgs",
      "repos_url": "https://api.github.com/users/ssanderson/repos",
      "events_url": "https://api.github.com/users/ssanderson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssanderson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-31T22:02:40Z",
    "updated_at": "2015-03-31T22:02:40Z",
    "author_association": "MEMBER",
    "body": "FWIW, `sys.stdout` is **not** deepcopy-able in Python3.4:\n\n```\nPython 3.4.0 (default, Apr 11 2014, 13:05:11)\n[GCC 4.8.2] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> from sys import stdout\n>>> from copy import deepcopy\n>>> deepcopy(stdout)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/home/ssanderson/.virtualenvs/research/lib/python3.4/copy.py\", line 174, in deepcopy\n    rv = reductor(2)\nTypeError: cannot serialize '_io.TextIOWrapper' object\n```\n\ncompare to Python 2.7, where it is deepcopyable:\n\n```\nPython 2.7.6 (default, Mar 22 2014, 22:59:56)\n[GCC 4.8.2] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> from copy import deepcopy\n>>> from sys import stdout\n>>> deepcopy(stdout)\n<closed file '<uninitialized file>', mode '<uninitialized file>' at 0x7f2e40026540>\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/88265875",
    "html_url": "https://github.com/ipython/ipython/issues/8211#issuecomment-88265875",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8211",
    "id": 88265875,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg4MjY1ODc1",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-31T22:02:40Z",
    "updated_at": "2015-03-31T22:02:40Z",
    "author_association": "MEMBER",
    "body": "Quite a few of the functions and objects in `sys` are intended to be set to other objects, and sys.stdout is absolutely something you should expect to be replaced. Test code does that all the time, and anything which wants output to go somewhere other than a terminal, like IPython or IDLE, will do it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/88266305",
    "html_url": "https://github.com/ipython/ipython/issues/8211#issuecomment-88266305",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8211",
    "id": 88266305,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg4MjY2MzA1",
    "user": {
      "login": "ssanderson",
      "id": 1588357,
      "node_id": "MDQ6VXNlcjE1ODgzNTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1588357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssanderson",
      "html_url": "https://github.com/ssanderson",
      "followers_url": "https://api.github.com/users/ssanderson/followers",
      "following_url": "https://api.github.com/users/ssanderson/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssanderson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssanderson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssanderson/subscriptions",
      "organizations_url": "https://api.github.com/users/ssanderson/orgs",
      "repos_url": "https://api.github.com/users/ssanderson/repos",
      "events_url": "https://api.github.com/users/ssanderson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssanderson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-31T22:04:33Z",
    "updated_at": "2015-03-31T22:04:47Z",
    "author_association": "MEMBER",
    "body": "@takluyver I think the argument isn't that it's unreasonable to replace sys.stdout, it's that the object you replace sys.stdout with should meet the same interface as sys.stdout.  Whether or not you should consider being deepcopyable part of the public interface of sys.stdout is maybe debatable, but I think as @newville points out, it would justifiably be a bug in IPython if you replaced stdout with `None`.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/88267585",
    "html_url": "https://github.com/ipython/ipython/issues/8211#issuecomment-88267585",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8211",
    "id": 88267585,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg4MjY3NTg1",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-31T22:07:31Z",
    "updated_at": "2015-03-31T22:07:31Z",
    "author_association": "MEMBER",
    "body": "If your code could run in a Windows GUI environment, it should be able to handle `sys.stdout` being None. That's admittedly unusual, but not unheard of.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/88267671",
    "html_url": "https://github.com/ipython/ipython/issues/8211#issuecomment-88267671",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8211",
    "id": 88267671,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg4MjY3Njcx",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-31T22:07:50Z",
    "updated_at": "2015-03-31T22:08:04Z",
    "author_association": "MEMBER",
    "body": "Devil advocate, we can still implement a `__depcopy__` on ZMQ stream, couldn't we ?  \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/88268095",
    "html_url": "https://github.com/ipython/ipython/issues/8211#issuecomment-88268095",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8211",
    "id": 88268095,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg4MjY4MDk1",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-31T22:10:25Z",
    "updated_at": "2015-03-31T22:10:25Z",
    "author_association": "MEMBER",
    "body": "We could monkeypatch to get around bugs in dependencies, or we could just report bugs to those dependencies. Since I'm the maintainer of the upstream project, there's no reason for us to be doing any monkeypatching.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/88269364",
    "html_url": "https://github.com/ipython/ipython/issues/8211#issuecomment-88269364",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8211",
    "id": 88269364,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg4MjY5MzY0",
    "user": {
      "login": "ssanderson",
      "id": 1588357,
      "node_id": "MDQ6VXNlcjE1ODgzNTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1588357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssanderson",
      "html_url": "https://github.com/ssanderson",
      "followers_url": "https://api.github.com/users/ssanderson/followers",
      "following_url": "https://api.github.com/users/ssanderson/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssanderson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssanderson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssanderson/subscriptions",
      "organizations_url": "https://api.github.com/users/ssanderson/orgs",
      "repos_url": "https://api.github.com/users/ssanderson/repos",
      "events_url": "https://api.github.com/users/ssanderson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssanderson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-31T22:16:28Z",
    "updated_at": "2015-03-31T22:16:28Z",
    "author_association": "MEMBER",
    "body": "@minrk I opened https://github.com/zeromq/pyzmq/issues/661 and linked back here.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/88280605",
    "html_url": "https://github.com/ipython/ipython/issues/8211#issuecomment-88280605",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8211",
    "id": 88280605,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg4MjgwNjA1",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-31T23:20:42Z",
    "updated_at": "2015-03-31T23:20:42Z",
    "author_association": "MEMBER",
    "body": "Fixed by zeromq/pyzmq#662\n"
  }
]
