[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/144029055",
    "html_url": "https://github.com/ipython/ipython/issues/8848#issuecomment-144029055",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8848",
    "id": 144029055,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDAyOTA1NQ==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-29T11:13:01Z",
    "updated_at": "2015-09-29T11:13:01Z",
    "author_association": "MEMBER",
    "body": "Reset just clears IPython's own state (interactive namespace, input/output cache, etc.). It has no way of clearing all state from the entire interpreter without restarting the whole process.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/144039788",
    "html_url": "https://github.com/ipython/ipython/issues/8848#issuecomment-144039788",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8848",
    "id": 144039788,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDAzOTc4OA==",
    "user": {
      "login": "RafalSkolasinski",
      "id": 10928117,
      "node_id": "MDQ6VXNlcjEwOTI4MTE3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10928117?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RafalSkolasinski",
      "html_url": "https://github.com/RafalSkolasinski",
      "followers_url": "https://api.github.com/users/RafalSkolasinski/followers",
      "following_url": "https://api.github.com/users/RafalSkolasinski/following{/other_user}",
      "gists_url": "https://api.github.com/users/RafalSkolasinski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RafalSkolasinski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RafalSkolasinski/subscriptions",
      "organizations_url": "https://api.github.com/users/RafalSkolasinski/orgs",
      "repos_url": "https://api.github.com/users/RafalSkolasinski/repos",
      "events_url": "https://api.github.com/users/RafalSkolasinski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RafalSkolasinski/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-29T12:11:19Z",
    "updated_at": "2015-09-29T12:11:19Z",
    "author_association": "NONE",
    "body": "But when function is defined in the notebook it has effect and cache is cleared. Shouldn't it work the same when function is imported from external module?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/144043211",
    "html_url": "https://github.com/ipython/ipython/issues/8848#issuecomment-144043211",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8848",
    "id": 144043211,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDA0MzIxMQ==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-29T12:21:12Z",
    "updated_at": "2015-09-29T12:21:12Z",
    "author_association": "MEMBER",
    "body": "In the case of `@lru_cache`, the cache is stored in an attribute on the function itself. When the function lives in the interactive namespace, reset deletes the function object, and thus its class. When the function lives in a module, reset deletes the _reference_ to the module function, if any, but it does not delete the original function in the module.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/144047271",
    "html_url": "https://github.com/ipython/ipython/issues/8848#issuecomment-144047271",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8848",
    "id": 144047271,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDA0NzI3MQ==",
    "user": {
      "login": "RafalSkolasinski",
      "id": 10928117,
      "node_id": "MDQ6VXNlcjEwOTI4MTE3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10928117?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RafalSkolasinski",
      "html_url": "https://github.com/RafalSkolasinski",
      "followers_url": "https://api.github.com/users/RafalSkolasinski/followers",
      "following_url": "https://api.github.com/users/RafalSkolasinski/following{/other_user}",
      "gists_url": "https://api.github.com/users/RafalSkolasinski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RafalSkolasinski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RafalSkolasinski/subscriptions",
      "organizations_url": "https://api.github.com/users/RafalSkolasinski/orgs",
      "repos_url": "https://api.github.com/users/RafalSkolasinski/repos",
      "events_url": "https://api.github.com/users/RafalSkolasinski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RafalSkolasinski/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-29T12:44:09Z",
    "updated_at": "2015-09-29T12:44:09Z",
    "author_association": "NONE",
    "body": "I see. Is there any way to achieve this which would not require hitting `Kernel -> Restart`?\nAnd also is it possible to that on remote engines without shutting them down and starting ipcluster again?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/144050855",
    "html_url": "https://github.com/ipython/ipython/issues/8848#issuecomment-144050855",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8848",
    "id": 144050855,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDA1MDg1NQ==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-29T12:59:47Z",
    "updated_at": "2015-09-29T12:59:47Z",
    "author_association": "MEMBER",
    "body": "You can clear f's cache explicitly:\n\n``` python\nf.cache_clear()\n```\n\nBut there isn't a totally general way to clear an interpreter's state without restarting the process. And I am afraid that engines cannot be restarted, only killed.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/144052857",
    "html_url": "https://github.com/ipython/ipython/issues/8848#issuecomment-144052857",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/8848",
    "id": 144052857,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDA1Mjg1Nw==",
    "user": {
      "login": "RafalSkolasinski",
      "id": 10928117,
      "node_id": "MDQ6VXNlcjEwOTI4MTE3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10928117?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RafalSkolasinski",
      "html_url": "https://github.com/RafalSkolasinski",
      "followers_url": "https://api.github.com/users/RafalSkolasinski/followers",
      "following_url": "https://api.github.com/users/RafalSkolasinski/following{/other_user}",
      "gists_url": "https://api.github.com/users/RafalSkolasinski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RafalSkolasinski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RafalSkolasinski/subscriptions",
      "organizations_url": "https://api.github.com/users/RafalSkolasinski/orgs",
      "repos_url": "https://api.github.com/users/RafalSkolasinski/repos",
      "events_url": "https://api.github.com/users/RafalSkolasinski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RafalSkolasinski/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-29T13:06:12Z",
    "updated_at": "2015-09-29T13:06:12Z",
    "author_association": "NONE",
    "body": "I was concert about situation when f would be imported by some function, not in global namespace. But anyway thanks for clarification.\n"
  }
]
