[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/18472815",
    "html_url": "https://github.com/ipython/ipython/pull/3350#issuecomment-18472815",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3350",
    "id": 18472815,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDcyODE1",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-27T00:20:04Z",
    "updated_at": "2013-05-27T00:20:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "I see that the `longlist` command already appears in the Python 3 version of `pdb`.  This version seems to add pretty printing and Python 2 support, which is good.\n\nFirst, as mentioned inline the docstring needs to be updated to include text which is useful to the end user.\n\nSecond, there seems to be an error when debugging somewhere in the module scope:\n\n```\nIn [1]: %pycat test.py\ndef f(x):\n    print(x)\n\nassert False\n\ng = 1\n\nIn [2]: import test\n...\nIn [3]: %debug\n...\nipdb> ll\n      1 def f(x):\n      2     print(x)\n      3\n----> 4 assert False\n      5\n```\n\nNotice that the `g = 1` line is not displayed.  This is in contrast to the `do_longlist` already present in `pdb` in Python 3 which will display all of the lines of the module.\n\nIdeally we should also include a few tests for this support in `IPython/core/tests/test_debugger.py`\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/18502535",
    "html_url": "https://github.com/ipython/ipython/pull/3350#issuecomment-18502535",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3350",
    "id": 18502535,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NTAyNTM1",
    "user": {
      "login": "lweberk",
      "id": 896038,
      "node_id": "MDQ6VXNlcjg5NjAzOA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/896038?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lweberk",
      "html_url": "https://github.com/lweberk",
      "followers_url": "https://api.github.com/users/lweberk/followers",
      "following_url": "https://api.github.com/users/lweberk/following{/other_user}",
      "gists_url": "https://api.github.com/users/lweberk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lweberk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lweberk/subscriptions",
      "organizations_url": "https://api.github.com/users/lweberk/orgs",
      "repos_url": "https://api.github.com/users/lweberk/repos",
      "events_url": "https://api.github.com/users/lweberk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lweberk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-27T14:58:55Z",
    "updated_at": "2013-05-27T14:58:55Z",
    "author_association": "NONE",
    "body": "As for the line swallowing problem... tinkered around a little and discovered, that while debugging in the module scope, the parameters of first and last in print_list_lines have no effect at all. Have to dive deeper and no time for it today. Coming back to it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/19504279",
    "html_url": "https://github.com/ipython/ipython/pull/3350#issuecomment-19504279",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3350",
    "id": 19504279,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTA0Mjc5",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-15T22:07:44Z",
    "updated_at": "2013-06-15T22:07:44Z",
    "author_association": "MEMBER",
    "body": "Any progress on this one?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/19590567",
    "html_url": "https://github.com/ipython/ipython/pull/3350#issuecomment-19590567",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3350",
    "id": 19590567,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTkwNTY3",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-18T04:40:30Z",
    "updated_at": "2013-06-18T04:40:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "I had a bit more time to look at this patch.  It needs some more work before inclusion.  The biggest issue is actually that this would shadow the existing `longlist` support in Python 3 which behaves as \n\n```\nlonglist | ll\nList the whole source code for the current function or frame.\n```\n\nAs far as I can tell, this would actually change the behavior to instead print the whole source code for the current function on frame as well as all later content in the file.  So at a minimum this should also gain a `if not PY3` type-block to prevent overriding the existing function in Python 3.  More desirable would be to fix the patch so that it behaves in a similar way to Python 3, perhaps by mimicking the same tokenizing logic (`inspect.getblock`).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/20219187",
    "html_url": "https://github.com/ipython/ipython/pull/3350#issuecomment-20219187",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3350",
    "id": 20219187,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMjE5MTg3",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-28T23:03:22Z",
    "updated_at": "2013-06-28T23:03:22Z",
    "author_association": "MEMBER",
    "body": "Thanks a lot for the review, @bfroehle! @lweberk, do you think you'll have a chance to work on this soon? We're gearing up for 1.0, so this will likely not be merged for 1.0 unless you can wrap it up extremely soon.\n\nThat doesn't mean we won't merge it if you don't have the time to do it now, just that we would do it after 1.0.  Thanks for your contribution!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/23061227",
    "html_url": "https://github.com/ipython/ipython/pull/3350#issuecomment-23061227",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/3350",
    "id": 23061227,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMDYxMjI3",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-22T00:38:10Z",
    "updated_at": "2013-08-22T00:38:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "Closed for inactivity, tracking with issue #4093.  Thanks.\n"
  }
]
