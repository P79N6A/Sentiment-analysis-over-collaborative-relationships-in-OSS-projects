[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5271505",
    "html_url": "https://github.com/ipython/ipython/pull/1644#issuecomment-5271505",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1644",
    "id": 5271505,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzE1MDU=",
    "user": {
      "login": "jdmarch",
      "id": 278873,
      "node_id": "MDQ6VXNlcjI3ODg3Mw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/278873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdmarch",
      "html_url": "https://github.com/jdmarch",
      "followers_url": "https://api.github.com/users/jdmarch/followers",
      "following_url": "https://api.github.com/users/jdmarch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdmarch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdmarch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdmarch/subscriptions",
      "organizations_url": "https://api.github.com/users/jdmarch/orgs",
      "repos_url": "https://api.github.com/users/jdmarch/repos",
      "events_url": "https://api.github.com/users/jdmarch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdmarch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-22T21:44:49Z",
    "updated_at": "2012-04-22T21:44:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "Otherwise, looks clean.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5271917",
    "html_url": "https://github.com/ipython/ipython/pull/1644#issuecomment-5271917",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1644",
    "id": 5271917,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzE5MTc=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-22T22:42:58Z",
    "updated_at": "2012-04-22T22:42:58Z",
    "author_association": "MEMBER",
    "body": "Thanks, looks good enough for me.\n\nAside @fperez - Is there any better way that we can express this so we don't have to change the copyright dates in every file every year? That seems incredibly pointless.  Something like `(C) IPython Development Team`, and let dates derive from git log?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5272046",
    "html_url": "https://github.com/ipython/ipython/pull/1644#issuecomment-5272046",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1644",
    "id": 5272046,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzIwNDY=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-22T23:02:25Z",
    "updated_at": "2012-04-22T23:04:52Z",
    "author_association": "MEMBER",
    "body": "I really don't know: I've always seen copyright notices with explicit years, though we obviously let them lapse occasionally and it's no big deal.  I've simply followed the tradition I've seen.  But looking up online a bit just now, [revealed this](http://www.contentious.com/2007/01/07/copyright-notice-is-the-year-really-necessary).  Citing the relevant section here from the US Copyright Office in case that link goes down:\n\n```\nVisually Perceptible Copies\n\nThe notice for visually perceptible copies should contain three elements. They should appear together or in close proximity on the copies. The elements are:\n\n    The symbol © (the letter C in a circle), or the word “Copyright,�? or the abbreviation “Copr.�?; and\n    The year of first publication. If the work is a derivative work or a compilation incorporating previously published material, the year date of first publication of the derivative work or compilation is sufficient. Examples of derivative works are translations or dramatizations; an example of a compilation is an anthology. The year may be omitted when a pictorial, graphic, or sculptural work, with accompanying textual matter, if any, is reproduced in or on greeting cards, postcards, stationery, jewelry, dolls, toys, or useful articles; and\n    The name of the owner of copyright in the work, or an abbreviation by which the name can be recognized, or a generally known alternative designation of the owner. Example: © 2004 Jane Doe\n```\n\nBased on that information, we could instead remove all _ending_ dates from _all_ notices, and leave only the beginning years.  That would actually be nice, since it would mean never updating these things again :)\n\nI'm +1 for changing things to removing the end years from every notice, based on this.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5272250",
    "html_url": "https://github.com/ipython/ipython/pull/1644#issuecomment-5272250",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1644",
    "id": 5272250,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzIyNTA=",
    "user": {
      "login": "jdmarch",
      "id": 278873,
      "node_id": "MDQ6VXNlcjI3ODg3Mw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/278873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdmarch",
      "html_url": "https://github.com/jdmarch",
      "followers_url": "https://api.github.com/users/jdmarch/followers",
      "following_url": "https://api.github.com/users/jdmarch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdmarch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdmarch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdmarch/subscriptions",
      "organizations_url": "https://api.github.com/users/jdmarch/orgs",
      "repos_url": "https://api.github.com/users/jdmarch/repos",
      "events_url": "https://api.github.com/users/jdmarch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdmarch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-22T23:31:05Z",
    "updated_at": "2012-04-22T23:31:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "Verging on bike-shedding, but FWIW -- first publication _of what_? \n\nMy lay interpretation of this, and longtime practice, has been that the copyright year in a source file is updated when and only when the source is modified. Thus 2008-2012 would mean that the file contains some code first published in 2008, some code first published in 2012, and possibly some code first published in between.\n\nIt seems unlikely that a revision constitutes a \"derivative work\" or \"compilation\".\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5272675",
    "html_url": "https://github.com/ipython/ipython/pull/1644#issuecomment-5272675",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1644",
    "id": 5272675,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzI2NzU=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-23T00:34:52Z",
    "updated_at": "2012-04-23T00:34:52Z",
    "author_association": "MEMBER",
    "body": "I suspect in a strict interpretation you're right, @jdmarch. But given that copyright exists regardless of registration, we're probably OK if we only put the year of file creation and let things be after that...  In reality, the ultimate arbiter of copyright in an open source project would have to be the version control log.  I'd be comfortable with leaving only the first year on the files, which has the advantage of being vastly simpler to maintain in the long run.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5272740",
    "html_url": "https://github.com/ipython/ipython/pull/1644#issuecomment-5272740",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1644",
    "id": 5272740,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzI3NDA=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-23T00:45:13Z",
    "updated_at": "2012-04-23T00:45:13Z",
    "author_association": "MEMBER",
    "body": "I think @jdmarch is right, that the dates are _all_ start dates - for the various parts of the file (i.e. it should not say 2012 on a file that hasn't been edited this year).\n\nBut the copyright is not actually affected in any way by what we write in the notice, so I would just keep _at most_ the file creation year, and let people ask git about the individual snippets, which are necessarily newer than that date.  Otherwise, I would leave the date out altogether, and put a single X-Y date in a top-level file.\n\nI think individual file copyright/license is a stupid practice in general - it's like putting copyright notice on every page of a book, but it is standard.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5272825",
    "html_url": "https://github.com/ipython/ipython/pull/1644#issuecomment-5272825",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1644",
    "id": 5272825,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzI4MjU=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-23T00:59:24Z",
    "updated_at": "2012-04-23T00:59:24Z",
    "author_association": "MEMBER",
    "body": "So if we're all OK with the idea of leaving only _start_ dates everywhere, then we should instead close this PR (sorry @Carreau :)  and have one that _removes_ the `-END` parts from all files, if somebody wants to spend the time...  And as we said above, for anybody who is genuinely curious, there's always `git log`.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5273463",
    "html_url": "https://github.com/ipython/ipython/pull/1644#issuecomment-5273463",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1644",
    "id": 5273463,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzM0NjM=",
    "user": {
      "login": "jdmarch",
      "id": 278873,
      "node_id": "MDQ6VXNlcjI3ODg3Mw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/278873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdmarch",
      "html_url": "https://github.com/jdmarch",
      "followers_url": "https://api.github.com/users/jdmarch/followers",
      "following_url": "https://api.github.com/users/jdmarch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdmarch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdmarch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdmarch/subscriptions",
      "organizations_url": "https://api.github.com/users/jdmarch/orgs",
      "repos_url": "https://api.github.com/users/jdmarch/repos",
      "events_url": "https://api.github.com/users/jdmarch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdmarch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-23T02:34:16Z",
    "updated_at": "2012-04-23T02:34:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "Legal squinting aside, start year sounds good to me.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5274593",
    "html_url": "https://github.com/ipython/ipython/pull/1644#issuecomment-5274593",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1644",
    "id": 5274593,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzQ1OTM=",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-23T05:33:34Z",
    "updated_at": "2012-04-23T05:33:34Z",
    "author_association": "MEMBER",
    "body": "i'm -1 on making sweeping changing like this across the whole codebase in one go. I'd prefer it if we slowly integrate the  start-year-only proposal into individual files as we work on them for _other_ reasons. If a file hasn't been touched for a long time, there's no reason to update its copyright now. This, to me, is similar to not having commits that just PEP8 the entire codebase in a bunch of places as one giant commit - whereas fixing PEP8-related things in a particular file of that you're changing in order to fix a bug or add a new feature is totally fine.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5274629",
    "html_url": "https://github.com/ipython/ipython/pull/1644#issuecomment-5274629",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1644",
    "id": 5274629,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzQ2Mjk=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-23T05:39:59Z",
    "updated_at": "2012-04-23T05:39:59Z",
    "author_association": "MEMBER",
    "body": "@ivanov's proposal sounds sensible to me:\n\nIf you touch a file, feel free to edit the copyright to include this _first year only_ copyright edit, if it has X-Y format.\n\nA sweeping copyright fix is less problematic than pep8, because it doesn't touch the _code_ with meaningless changes, but it does touch the file's history in general.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5274673",
    "html_url": "https://github.com/ipython/ipython/pull/1644#issuecomment-5274673",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1644",
    "id": 5274673,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzQ2NzM=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-23T05:48:09Z",
    "updated_at": "2012-04-23T05:48:09Z",
    "author_association": "MEMBER",
    "body": "+1 on that too.  I agree that big commits that touch everything tend to create more noise than they're worth (and they often make things like rebases and cherry-picks trickier).  So let's close this one and go with the above approach moving forward.\n"
  }
]
