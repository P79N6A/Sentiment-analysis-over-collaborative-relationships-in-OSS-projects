[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/72332432",
    "html_url": "https://github.com/ipython/ipython/issues/7647#issuecomment-72332432",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7647",
    "id": 72332432,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMzMyNDMy",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-31T19:33:23Z",
    "updated_at": "2015-01-31T19:33:23Z",
    "author_association": "MEMBER",
    "body": "I think we made it wait for the kernel to be idle before it decided that the kernel had started. Which is problematic in the case you describe.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/72543731",
    "html_url": "https://github.com/ipython/ipython/issues/7647#issuecomment-72543731",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7647",
    "id": 72543731,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNTQzNzMx",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-02T21:40:38Z",
    "updated_at": "2015-02-02T21:40:38Z",
    "author_association": "MEMBER",
    "body": "@takluyver does the kernel run in a separate process (or real thread) than the web server?  If so, I'd think we could make it so the web server knew that the kernel exists and is busy- then it could relay that to the front-end which should fix this problem.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/72546481",
    "html_url": "https://github.com/ipython/ipython/issues/7647#issuecomment-72546481",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7647",
    "id": 72546481,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNTQ2NDgx",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-02T21:55:57Z",
    "updated_at": "2015-02-02T21:55:57Z",
    "author_association": "MEMBER",
    "body": "@jdfreder you haven't completely forgotten our architecture, have you? Yes, kernels are separate processes from the web server.\n\nAs I remember, we made a deliberate decision that the frontend should wait for the kernel to be connected and idle before showing that it had started, so we could be sure it was ready to receive messages. In most cases, that makes sense, but it doesn't if you have a long-running function and you reconnect to a notebook.\n\n@minrk probably recalls this stuff better than I do.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/72547845",
    "html_url": "https://github.com/ipython/ipython/issues/7647#issuecomment-72547845",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7647",
    "id": 72547845,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNTQ3ODQ1",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-02T22:03:36Z",
    "updated_at": "2015-02-02T22:03:36Z",
    "author_association": "MEMBER",
    "body": "Maybe @minrk can shed some light on why keeping track of the kernel's state in the web server is a bad idea.  It seems like it would be an 'easy' solution... \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/72548104",
    "html_url": "https://github.com/ipython/ipython/issues/7647#issuecomment-72548104",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7647",
    "id": 72548104,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNTQ4MTA0",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-02T22:05:11Z",
    "updated_at": "2015-02-02T22:05:11Z",
    "author_association": "MEMBER",
    "body": "The server never disconnect from the kernel and act only as a zmq-websocket bridge at this stage. \nadding knowledge of kernel state to the server would break the all API/design.\n\nThe other thing that it won't help with is that disconnection browser and reopen won't forward output. \nAll that should be solve once we have notebook state on the server, OT, and browser beeing only a view of the server model.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/72548889",
    "html_url": "https://github.com/ipython/ipython/issues/7647#issuecomment-72548889",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7647",
    "id": 72548889,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNTQ4ODg5",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-02T22:09:32Z",
    "updated_at": "2015-02-02T22:09:32Z",
    "author_association": "MEMBER",
    "body": "I think there are two separate ways in which we wait for kernel_info:\n1. on the server, we wait for kernel_info reply before opening the websocket. We only do this the first time someone connects to the kernel. We do this one, because we need to wait to do msg spec adaptation before any messages can be processed.\n2. In the Javascript, we use a kernel_info ping to ensure that the initial busy state is correct.\n\nI think the problem is caused here by the fact that we set the 'starting...' notification after finishing the websocket connection, which we did before the websocket connection waited for the kernel_info reply before opening. I think a small, but careful readjustments of kernel events and notifications should fix this one.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/72551065",
    "html_url": "https://github.com/ipython/ipython/issues/7647#issuecomment-72551065",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7647",
    "id": 72551065,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNTUxMDY1",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-02T22:21:55Z",
    "updated_at": "2015-02-02T22:21:55Z",
    "author_association": "MEMBER",
    "body": "As @Carreau points out, the actual issue here is the 'lost output on reconnect' (#4140), but the current notification situation is misleading, and can be fixed.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/72551470",
    "html_url": "https://github.com/ipython/ipython/issues/7647#issuecomment-72551470",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7647",
    "id": 72551470,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNTUxNDcw",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-02T22:24:26Z",
    "updated_at": "2015-02-02T22:24:26Z",
    "author_association": "MEMBER",
    "body": "#7664 should address the bad notifications. Closing this as duplicate of #4140.\n"
  }
]
