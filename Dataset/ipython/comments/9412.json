[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/212589673",
    "html_url": "https://github.com/ipython/ipython/issues/9412#issuecomment-212589673",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9412",
    "id": 212589673,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjU4OTY3Mw==",
    "user": {
      "login": "dwf",
      "id": 60206,
      "node_id": "MDQ6VXNlcjYwMjA2",
      "avatar_url": "https://avatars1.githubusercontent.com/u/60206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dwf",
      "html_url": "https://github.com/dwf",
      "followers_url": "https://api.github.com/users/dwf/followers",
      "following_url": "https://api.github.com/users/dwf/following{/other_user}",
      "gists_url": "https://api.github.com/users/dwf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dwf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dwf/subscriptions",
      "organizations_url": "https://api.github.com/users/dwf/orgs",
      "repos_url": "https://api.github.com/users/dwf/repos",
      "events_url": "https://api.github.com/users/dwf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dwf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-20T20:27:06Z",
    "updated_at": "2016-04-20T20:27:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "I should note that somehow removing `~/.ipython` doesn't fix it, which is distressing.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/212595316",
    "html_url": "https://github.com/ipython/ipython/issues/9412#issuecomment-212595316",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9412",
    "id": 212595316,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjU5NTMxNg==",
    "user": {
      "login": "dwf",
      "id": 60206,
      "node_id": "MDQ6VXNlcjYwMjA2",
      "avatar_url": "https://avatars1.githubusercontent.com/u/60206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dwf",
      "html_url": "https://github.com/dwf",
      "followers_url": "https://api.github.com/users/dwf/followers",
      "following_url": "https://api.github.com/users/dwf/following{/other_user}",
      "gists_url": "https://api.github.com/users/dwf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dwf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dwf/subscriptions",
      "organizations_url": "https://api.github.com/users/dwf/orgs",
      "repos_url": "https://api.github.com/users/dwf/repos",
      "events_url": "https://api.github.com/users/dwf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dwf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-20T20:36:13Z",
    "updated_at": "2016-04-20T20:43:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "One other detail: `/u/wardefar` is a shared NFS home directory. In the past I've seen this problem fixed by having the machine rebooted, but I don't have physical access to it so this is a big impediment.\n\n(Managed to work around it for the time being with IPYTHONDIR=$TMPDIR/.ipython so that it's definitely on local disk...)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/212652654",
    "html_url": "https://github.com/ipython/ipython/issues/9412#issuecomment-212652654",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9412",
    "id": 212652654,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjY1MjY1NA==",
    "user": {
      "login": "dwf",
      "id": 60206,
      "node_id": "MDQ6VXNlcjYwMjA2",
      "avatar_url": "https://avatars1.githubusercontent.com/u/60206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dwf",
      "html_url": "https://github.com/dwf",
      "followers_url": "https://api.github.com/users/dwf/followers",
      "following_url": "https://api.github.com/users/dwf/following{/other_user}",
      "gists_url": "https://api.github.com/users/dwf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dwf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dwf/subscriptions",
      "organizations_url": "https://api.github.com/users/dwf/orgs",
      "repos_url": "https://api.github.com/users/dwf/repos",
      "events_url": "https://api.github.com/users/dwf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dwf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-20T23:38:11Z",
    "updated_at": "2016-04-20T23:38:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "So I just happened upon [this](https://github.com/ipython/ipython/blob/af1c39e08f1c395b947fb3663249549eabbbbe1d/IPython/core/history.py#L137-L142) with some help from our local IT guys, so I guess it's a known failure case. I wonder whether anything can be done to short-circuit the ridiculous traceback I got and _maybe_ point the user in the right direction a little quicker.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/212894558",
    "html_url": "https://github.com/ipython/ipython/issues/9412#issuecomment-212894558",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9412",
    "id": 212894558,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjg5NDU1OA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-21T12:27:08Z",
    "updated_at": "2016-04-21T12:27:08Z",
    "author_association": "MEMBER",
    "body": "Hi @dwf! Yep, SQLite plus NFS is a known failure case - unfortunately I don't know of a good way to detect that situation. You're right that this shouldn't be infinitely recursing, though - if moving the database and recreating it once doesn't help, it should probably just disable persistent history entirely and show a warning.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/212899632",
    "html_url": "https://github.com/ipython/ipython/issues/9412#issuecomment-212899632",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9412",
    "id": 212899632,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjg5OTYzMg==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-21T12:38:04Z",
    "updated_at": "2016-04-22T11:46:00Z",
    "author_association": "MEMBER",
    "body": "Note that's plus _certain NFS configurations/implementations_. I've used IPython on an NFS filesystem for many years without issues. Unfortunately, I have no idea what actual settings cause the problems.\n\nYou can set just the history file in your `ipython_config.py`:\n\n```\nc.HistoryAccessor.hist_file = '/path/to/local-scratch/ipython-history.sqlite'\n```\n\nI don't think we can detect NFS reasonably, but I think we _can_ detect multiple failures of init_db in a row, and fallback to in-memory (no persisted history).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/212965720",
    "html_url": "https://github.com/ipython/ipython/issues/9412#issuecomment-212965720",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9412",
    "id": 212965720,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjk2NTcyMA==",
    "user": {
      "login": "dwf",
      "id": 60206,
      "node_id": "MDQ6VXNlcjYwMjA2",
      "avatar_url": "https://avatars1.githubusercontent.com/u/60206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dwf",
      "html_url": "https://github.com/dwf",
      "followers_url": "https://api.github.com/users/dwf/followers",
      "following_url": "https://api.github.com/users/dwf/following{/other_user}",
      "gists_url": "https://api.github.com/users/dwf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dwf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dwf/subscriptions",
      "organizations_url": "https://api.github.com/users/dwf/orgs",
      "repos_url": "https://api.github.com/users/dwf/repos",
      "events_url": "https://api.github.com/users/dwf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dwf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-21T15:13:45Z",
    "updated_at": "2016-04-21T15:13:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Note that's plus certain NFS configurations/implementations. I've used IPython on an NFS filesystem for many years without issues.\n\nDitto. Not sure what changed about our configuration recently.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/213406738",
    "html_url": "https://github.com/ipython/ipython/issues/9412#issuecomment-213406738",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9412",
    "id": 213406738,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMzQwNjczOA==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-22T12:34:06Z",
    "updated_at": "2016-04-22T12:34:06Z",
    "author_association": "MEMBER",
    "body": "#9418 cuts off the infinite retries (at 2) and falls back to :memory: in that case.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/279894706",
    "html_url": "https://github.com/ipython/ipython/issues/9412#issuecomment-279894706",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9412",
    "id": 279894706,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTg5NDcwNg==",
    "user": {
      "login": "allanruin",
      "id": 1366627,
      "node_id": "MDQ6VXNlcjEzNjY2Mjc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1366627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/allanruin",
      "html_url": "https://github.com/allanruin",
      "followers_url": "https://api.github.com/users/allanruin/followers",
      "following_url": "https://api.github.com/users/allanruin/following{/other_user}",
      "gists_url": "https://api.github.com/users/allanruin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/allanruin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/allanruin/subscriptions",
      "organizations_url": "https://api.github.com/users/allanruin/orgs",
      "repos_url": "https://api.github.com/users/allanruin/repos",
      "events_url": "https://api.github.com/users/allanruin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/allanruin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-15T01:52:20Z",
    "updated_at": "2017-02-15T01:52:20Z",
    "author_association": "NONE",
    "body": "I just want to say I have been using jupyter/ipython for years on a cluster that share a NFS storage without problems. However, after some power off accidentally, all ipython in cluster machines are broken due to NFS sqlite issue. I cannot open previous notebooks , and cannot create new ones.\r\n I upgraded ipython to 5.1.0, at least the sqlite db issue get detected and switch to memory db. \r\nI was amazed by sqlite db locking issue appearin just after a reboot. Orz"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/279896692",
    "html_url": "https://github.com/ipython/ipython/issues/9412#issuecomment-279896692",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9412",
    "id": 279896692,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTg5NjY5Mg==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-15T02:05:34Z",
    "updated_at": "2017-02-15T02:05:34Z",
    "author_association": "MEMBER",
    "body": "Sorry about that. We should find a better way but that is relatively hard without a massive refactoring.\r\nDo you still have problems ? Because opening notebooks should be unrelated to IPython itself. The notebook might be using a DB though, and this one you should be able to configure. "
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/279938893",
    "html_url": "https://github.com/ipython/ipython/issues/9412#issuecomment-279938893",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9412",
    "id": 279938893,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTkzODg5Mw==",
    "user": {
      "login": "allanruin",
      "id": 1366627,
      "node_id": "MDQ6VXNlcjEzNjY2Mjc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1366627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/allanruin",
      "html_url": "https://github.com/allanruin",
      "followers_url": "https://api.github.com/users/allanruin/followers",
      "following_url": "https://api.github.com/users/allanruin/following{/other_user}",
      "gists_url": "https://api.github.com/users/allanruin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/allanruin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/allanruin/subscriptions",
      "organizations_url": "https://api.github.com/users/allanruin/orgs",
      "repos_url": "https://api.github.com/users/allanruin/repos",
      "events_url": "https://api.github.com/users/allanruin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/allanruin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-15T07:41:29Z",
    "updated_at": "2017-02-15T11:04:33Z",
    "author_association": "NONE",
    "body": "@Carreau  Thank you for your quick reply, ipython is a excellent tool, I really appreciate your effort.\r\n\r\nFor future comecrossers, if you are using anconda's jupyter/ipython, and find that you cannot open previous notebooks as well as not able to create new notebook, then is not cause only by the ipython configurations. For example, \r\n\r\n```\r\n[E 10:27:54.767 NotebookApp] Error while saving file: Untitled.ipynb database is locked\r\n    Traceback (most recent call last):\r\n      File \"/data/home/zrc/anaconda2/lib/python2.7/site-packages/notebook/services/contents/filemanager.py\", line 387, in save\r\n        self.check_and_sign(nb, path)\r\n      File \"/data/home/zrc/anaconda2/lib/python2.7/site-packages/notebook/services/contents/manager.py\", line 431, in check_and_sign\r\n        self.notary.sign(nb)\r\n      File \"/data/home/zrc/anaconda2/lib/python2.7/site-packages/nbformat/sign.py\", line 246, in sign\r\n        self.store_signature(signature, nb)\r\n      File \"/data/home/zrc/anaconda2/lib/python2.7/site-packages/nbformat/sign.py\", line 249, in store_signature\r\n        if self.db is None:\r\n      File \"/data/home/zrc/anaconda2/lib/python2.7/site-packages/traitlets/traitlets.py\", line 439, in __get__\r\n        value = self._validate(obj, dynamic_default())\r\n      File \"/data/home/zrc/anaconda2/lib/python2.7/site-packages/nbformat/sign.py\", line 127, in _db_default\r\n        self.init_db(db)\r\n      File \"/data/home/zrc/anaconda2/lib/python2.7/site-packages/nbformat/sign.py\", line 139, in init_db\r\n        )\"\"\")\r\n    OperationalError: database is locked\r\n```\r\n\r\nabove log is cause by ipython, which is unable to lock sqlite file.\r\n\r\nhowever, below error is cause by jupyter that is not able to lock `nbsignatures`.\r\n```\r\nThe signatures database cannot be opened; maybe it is corrupted or encrypted.  You may need to\r\nrerun your notebooks to ensure that they are trusted to run Javascript.  The old signatures database\r\nhas been renamed to /data/home/zrc/.local/share/jupyter/nbsignatures.db.bak and a new one has\r\nbeen created.\r\nNo answer for 5s: resuming operation...\r\n[W 14:46:29.996 NotebookApp] Failed commiting signatures database to disk.  You may need to move\r\nthe database file to a non-networked file system, using config option `NotebookNotary.db_file`.  Using\r\nin-memory signatures database for the remainder of this session.\r\n\r\n[IPKernelApp] ERROR | Failed to open SQLite history :memory (database is locked).\r\n[IPKernelApp] ERROR | History file was moved to :memory-corrupt and a new file created\r\n```\r\n\r\nto solved the problem,  you need to find your jupyter_notebook_config.py.(if you do not have such config file, generate it with **jupyter notebook --generate-config**, generally it will be inside ~/.jupyter/  directory),\r\nand change the `**NotebookNotary.db_file** ` to a local filesystem path(etc, /tmp/xxx-signatures)\r\n\r\nthen everything will be fine again. \r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/279982743",
    "html_url": "https://github.com/ipython/ipython/issues/9412#issuecomment-279982743",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/9412",
    "id": 279982743,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTk4Mjc0Mw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-15T11:08:26Z",
    "updated_at": "2017-02-15T11:08:26Z",
    "author_association": "MEMBER",
    "body": "Thanks for the defaulted follow up. For reference, the next version of nbformat is going to add a pluggable SignatureStore. The default will still be sqlite, but it should be easier to tell it to use another database for recording trusted notebooks."
  }
]
