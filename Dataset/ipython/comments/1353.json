[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3729597",
    "html_url": "https://github.com/ipython/ipython/pull/1353#issuecomment-3729597",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1353",
    "id": 3729597,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Mjk1OTc=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-30T22:48:05Z",
    "updated_at": "2012-01-30T22:48:05Z",
    "author_association": "MEMBER",
    "body": "A few other places we probably need to track this down:\n- There are other calls to open in the notebookmanager class.\n- In a variety of places in nbformat.v2 and nbformat.v3 (this PR should wait until #1331 has been merged - it defines the v2 nbformat).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3729690",
    "html_url": "https://github.com/ipython/ipython/pull/1353#issuecomment-3729690",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1353",
    "id": 3729690,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Mjk2OTA=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-30T22:53:47Z",
    "updated_at": "2012-01-30T22:53:47Z",
    "author_association": "MEMBER",
    "body": "Actually, this should be fixed at a lower level.  `json.dumps`, which is used by the other `writes` returns `str`.  The `writes` method for python scripts should also return `str` by using `py3compat.unicode_to_str` so the two (and all future) `writes` methods match in their return type.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3729866",
    "html_url": "https://github.com/ipython/ipython/pull/1353#issuecomment-3729866",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1353",
    "id": 3729866,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Mjk4NjY=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-30T23:04:26Z",
    "updated_at": "2012-01-30T23:06:08Z",
    "author_association": "MEMBER",
    "body": "Actually, I think this way is better than unicode_to_str. On Python 3, that will be a no-op, and it will be encoded by the text-mode file handle, which has a platform dependent default encoding ([docs](http://docs.python.org/py3k/library/functions.html#open)). But we hardcode the encoding comment to utf-8, so we should ensure that we're always encoding with utf-8.\n\nThe alternative would be to open a binary-mode file handle and encode it ourselves, but that lacks elegance. Conceptually, Python code is text, so it makes sense to write text.\n\nThere are probably other places that would benefit from using `io.open` - I wasn't aware of it when I wrote py3compat.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3729955",
    "html_url": "https://github.com/ipython/ipython/pull/1353#issuecomment-3729955",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1353",
    "id": 3729955,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Mjk5NTU=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-30T23:10:14Z",
    "updated_at": "2012-01-30T23:10:14Z",
    "author_association": "MEMBER",
    "body": "That's a fair point, but we _should_ ensure that both the `writes` methods do return the same type, which is the real bug here.  One or the other should change.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3730388",
    "html_url": "https://github.com/ipython/ipython/pull/1353#issuecomment-3730388",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1353",
    "id": 3730388,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzAzODg=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-30T23:34:48Z",
    "updated_at": "2012-01-30T23:34:48Z",
    "author_association": "MEMBER",
    "body": "I am fine with this approach - let's just make sure the other calls to open in the notebook writing code get updated as well.\n"
  }
]
