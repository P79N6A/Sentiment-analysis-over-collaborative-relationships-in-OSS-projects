[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26737599",
    "html_url": "https://github.com/ipython/ipython/issues/4408#issuecomment-26737599",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4408",
    "id": 26737599,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzM3NTk5",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-21T17:25:38Z",
    "updated_at": "2013-10-21T17:25:38Z",
    "author_association": "MEMBER",
    "body": "Pinging @davclark, who's working on moving the rmagic code to rpy2. Dav, assuming this change makes sense, can you ensure that it gets applied to each working copy of the code?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26738172",
    "html_url": "https://github.com/ipython/ipython/issues/4408#issuecomment-26738172",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4408",
    "id": 26738172,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzM4MTcy",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-21T17:32:10Z",
    "updated_at": "2013-10-21T17:32:10Z",
    "author_association": "MEMBER",
    "body": "It seems like using a context handler would be more natural for things like this:\n\n``` python\nwith rdev:\n    code\n```\n\nwhere the context handler exit would do the dev.off().\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26742668",
    "html_url": "https://github.com/ipython/ipython/issues/4408#issuecomment-26742668",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4408",
    "id": 26742668,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzQyNjY4",
    "user": {
      "login": "davclark",
      "id": 120710,
      "node_id": "MDQ6VXNlcjEyMDcxMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/120710?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davclark",
      "html_url": "https://github.com/davclark",
      "followers_url": "https://api.github.com/users/davclark/followers",
      "following_url": "https://api.github.com/users/davclark/following{/other_user}",
      "gists_url": "https://api.github.com/users/davclark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davclark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davclark/subscriptions",
      "organizations_url": "https://api.github.com/users/davclark/orgs",
      "repos_url": "https://api.github.com/users/davclark/repos",
      "events_url": "https://api.github.com/users/davclark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davclark/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-21T18:24:08Z",
    "updated_at": "2013-10-21T18:24:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "I agree that this sounds like a good choice for context handler. rpy2 is happily dropping support for 2.6.x and lower, so no worries there. I'm unsure of the version support for IPython, but with statements can be enabled in python 2.5, and are included in 2.6. If someone implements, please ping me on this! Also, probably worth keeping @lgautier (author of rpy2) in the loop.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26750445",
    "html_url": "https://github.com/ipython/ipython/issues/4408#issuecomment-26750445",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4408",
    "id": 26750445,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzUwNDQ1",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-21T19:55:36Z",
    "updated_at": "2013-10-21T19:55:36Z",
    "author_association": "MEMBER",
    "body": "We've already dropped support for 2.6 - master only support 2.7 and 3.3.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26771153",
    "html_url": "https://github.com/ipython/ipython/issues/4408#issuecomment-26771153",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4408",
    "id": 26771153,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzcxMTUz",
    "user": {
      "login": "lgautier",
      "id": 650866,
      "node_id": "MDQ6VXNlcjY1MDg2Ng==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/650866?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lgautier",
      "html_url": "https://github.com/lgautier",
      "followers_url": "https://api.github.com/users/lgautier/followers",
      "following_url": "https://api.github.com/users/lgautier/following{/other_user}",
      "gists_url": "https://api.github.com/users/lgautier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lgautier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lgautier/subscriptions",
      "organizations_url": "https://api.github.com/users/lgautier/orgs",
      "repos_url": "https://api.github.com/users/lgautier/repos",
      "events_url": "https://api.github.com/users/lgautier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lgautier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-22T01:30:23Z",
    "updated_at": "2013-10-22T01:30:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "(@davclark : thanks).\n\n@jasongrout : a context handler is an interesting idea, but R's graphical devices are strange beasts. They cannot be manipulated directly (There is an attempt at having \"graphical device\" objects in rpy2, but that currently only for custom devices). At first sight, I'd think that it would be difficult to have them without having something relatively brittle.\n\nThe R graphical devices behave like follows (R code)\n\n```\n# initially no opened devices\n> dev.list()\nNULL\n# create a device that outputs the figure into a PNG file\n> res <- png(\"foo.png\")\n# the function png() only has side effects (nothing returned)\n> res \nNULL\n# the result is now one device in the list of opened devices\n> dev.list()\npng\n2\n# let's open a second device\n> res <- png(\"bar.png\")\n# now we have two devices. the latest device opened is now the active plotting device\n> dev.list()\npng png\n    2     3\n# this can be checked by asking what the plotting device\n> dev.cur()\npng\n3\n# now you might thing that we have handle to device objects...\n# unfortunately this is not the case. dev.list() is only returning a \"named\" vector of integers\n> str(dev.list())\n Named int [1:2] 2 3\n - attr(*, \"names\")= chr [1:2] \"png\" \"png\"\n# changing the currently active graphical device can be achieved with either\n# dev.set(). It is cycling through the elements in the list\n# (when reaching the last element, the next element becomes the first one)\n> dev.next()\npng\n2\n> dev.set()\npng\n3\n```\n\nNow with a context manager we cannot not ensure that the device opened is the one we would be closing. The integers are recycled as devices are closed and created (see below). In other words, the context can change without having the manager quite aware of it. It is possible to achieve similarly pathological situations with a context manager in pure Python, but I'd argue that in that case this is the programmers own fault. Here 3rd party code (the R code run) could break everything.\n\n```\n> graphics.off() # close all graphics\n> png(\"foo.png\")\n> pdf(\"bar.pdf\")\n> dev.list()\npng pdf\n    2     3\n> # now plotting anything goes into #3 (pdf).\n> dev.close()\n> # now plotting goes into #2\n> png(\"bar.png\")\n> # now device #3 is the active plotting device, and it is a png\n```\n\nNothing definitive that cannot be discussed but, as much as this is a seducing idea, I think that a context manager for graphical devices for rpy2 would be more efforts (and potential issues) than it is worth it (unless one completely controls what the R side is doing... so not for general use in rpy2).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26793166",
    "html_url": "https://github.com/ipython/ipython/issues/4408#issuecomment-26793166",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4408",
    "id": 26793166,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzkzMTY2",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-22T10:51:08Z",
    "updated_at": "2013-10-22T10:52:38Z",
    "author_association": "MEMBER",
    "body": "@lgautier: my point was that the try/finally would probably be more \"pythonic\" as a context manager with an exit.  How is the situation improved with a try/finally over a context manager?  In the context exit, you can execute `self.r('dev.off()')`, just like in your finally statement, and R takes care of closing whatever is open.\n\nTo clarify, you're not using try to catch exceptions here, but just to make sure some code runs after a block of code.  That's exactly what context managers are for.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/26867188",
    "html_url": "https://github.com/ipython/ipython/issues/4408#issuecomment-26867188",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/4408",
    "id": 26867188,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2ODY3MTg4",
    "user": {
      "login": "davclark",
      "id": 120710,
      "node_id": "MDQ6VXNlcjEyMDcxMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/120710?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davclark",
      "html_url": "https://github.com/davclark",
      "followers_url": "https://api.github.com/users/davclark/followers",
      "following_url": "https://api.github.com/users/davclark/following{/other_user}",
      "gists_url": "https://api.github.com/users/davclark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davclark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davclark/subscriptions",
      "organizations_url": "https://api.github.com/users/davclark/orgs",
      "repos_url": "https://api.github.com/users/davclark/repos",
      "events_url": "https://api.github.com/users/davclark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davclark/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-23T00:01:14Z",
    "updated_at": "2013-10-23T00:01:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "Issue created here:\n\nhttps://bitbucket.org/lgautier/rpy2/issue/162/capture-results-of-ipython-issue-4408\n\nNote, this may be an issue best addressed in rpy2 (rmagic in ipython is meant for eventual deprecation, assuming we get it right in rpy2).\n"
  }
]
