[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36521840",
    "html_url": "https://github.com/ipython/ipython/issues/5256#issuecomment-36521840",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5256",
    "id": 36521840,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTIxODQw",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-03T15:40:20Z",
    "updated_at": "2014-03-03T15:40:20Z",
    "author_association": "MEMBER",
    "body": "We did discuss this option at the meeting, but we decided against it. I think the reasoning was just that we didn't want to have too many alternative ways to achieve the same thing.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36528045",
    "html_url": "https://github.com/ipython/ipython/issues/5256#issuecomment-36528045",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5256",
    "id": 36528045,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTI4MDQ1",
    "user": {
      "login": "rossant",
      "id": 1942359,
      "node_id": "MDQ6VXNlcjE5NDIzNTk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1942359?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rossant",
      "html_url": "https://github.com/rossant",
      "followers_url": "https://api.github.com/users/rossant/followers",
      "following_url": "https://api.github.com/users/rossant/following{/other_user}",
      "gists_url": "https://api.github.com/users/rossant/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rossant/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rossant/subscriptions",
      "organizations_url": "https://api.github.com/users/rossant/orgs",
      "repos_url": "https://api.github.com/users/rossant/repos",
      "events_url": "https://api.github.com/users/rossant/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rossant/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-03T16:31:23Z",
    "updated_at": "2014-03-03T16:31:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm not really convinced by this argument. Many magic commands are actually convenient shortcuts to things that can be done more tediously without magics. Think about `%%html`, `%%writefile`, etc.\n\nThe `interact` functionality is already a shortcut to a more complex API. It would be far easier to tell beginners to use `%%interact` rather than import some function in the IPython namespace, create a new function, etc. You've worked so hard on this awesome feature: why not making it _really_ easy to use? For more complex things, there's `@interact` or more likely the widgets API.\n\nI've already written several tutorials using `@interact`, and I can tell you that this boilerplate code really gets in my way. This is so much in contrast with the rest of IPython that tries hard to make life easier for users.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36534265",
    "html_url": "https://github.com/ipython/ipython/issues/5256#issuecomment-36534265",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5256",
    "id": 36534265,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTM0MjY1",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-03T17:24:38Z",
    "updated_at": "2014-03-03T17:24:38Z",
    "author_association": "MEMBER",
    "body": "Cyrille,\n\nA big part of our saying no to this right now is that with the widget\nstuff, we are dropping a _massive_ amount of new code on our users. The\nrisk of things like this is that we push out things that are over\nengineered, overly complex, overly simple, etc. - without being able to see\nhow people _actually_ use this stuff. This means that even in the midst of\nall this new code, we are trying to be conservative about what we\nadd/implement. For example, we used to allow *args to be passed to\ninteract. We asked ourselves - is interact useful without *args. Yep,\ncompletely. Thus we got rid of it. At this point, we are probably going to\nsay no to most new widget related things - at least until we get a better\nsense of how it is being used.\n\nThat is not to say we don't want feedback from users. That is _exactly_\nwhat we need right now. But we need better statistics. If 1 year from now a\nhuge number of users are asking for an %interact magic, then maybe we will\ndo it. But if few have asked for it, that tells us a lot. We simple need to\nwait and collect data for a while. One of my favorite quotes about this is\n\"make new features fight hard to be accepted...\"\n\nMy own feeling about the %interact magic is this. There should be one good\nway of doing something. Right now interact is a function that can be called\nexplicitly or used as a decorator (that is already pushing the limit of\nhaving one way to do something). This establishes a clean abstraction about\nwhat interact operates on: functions. Adding the %interact magic introduces\na second way of doing the same thing, giving the user too much choice, and\nconfuses the underlying abstraction of what interact works with (functions?\ncode blocks?). Abstraction breaking is always a red flag.\n\nOn Mon, Mar 3, 2014 at 6:16 AM, Cyrille Rossant notifications@github.comwrote:\n\n> Would it be sensible to have an %%interact cell magic to simplify the\n> process of creating a simple interactive widget? For example, instead of\n> doing:\n> \n> from IPython.html.widgets import interact@interactdef plot(n=(1, 30)):\n>     ...\n> \n> one could just do something like:\n> \n> %%interact n=(1, 30)...\n> \n> It would save the process of 1) importing interact, 2) encapsulating some\n> code in a function, 3) calling the decorator. It would really be a simple\n> shortcut.\n> \n> If so, I could do a PR.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/ipython/ipython/issues/5256\n> .\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36553478",
    "html_url": "https://github.com/ipython/ipython/issues/5256#issuecomment-36553478",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5256",
    "id": 36553478,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTUzNDc4",
    "user": {
      "login": "rossant",
      "id": 1942359,
      "node_id": "MDQ6VXNlcjE5NDIzNTk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1942359?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rossant",
      "html_url": "https://github.com/rossant",
      "followers_url": "https://api.github.com/users/rossant/followers",
      "following_url": "https://api.github.com/users/rossant/following{/other_user}",
      "gists_url": "https://api.github.com/users/rossant/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rossant/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rossant/subscriptions",
      "organizations_url": "https://api.github.com/users/rossant/orgs",
      "repos_url": "https://api.github.com/users/rossant/repos",
      "events_url": "https://api.github.com/users/rossant/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rossant/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-03T20:10:46Z",
    "updated_at": "2014-03-03T20:10:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi Brian,\n\nThanks for the explanations. I know how important this \"less features, more bugs\" argument is for you and I mostly agree with it. Now I'm more convinced by this problem of abstraction breaking. I agree that it may not be a good idea to make `interact` operate on code blocks where they currently operate on functions.\n\nI'm closing here, but let's keep in mind the idea of some widget magic... ;) (maybe not `interact` but something else)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/36562741",
    "html_url": "https://github.com/ipython/ipython/issues/5256#issuecomment-36562741",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5256",
    "id": 36562741,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTYyNzQx",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-03T21:35:44Z",
    "updated_at": "2014-03-03T21:35:44Z",
    "author_association": "MEMBER",
    "body": "Actually, I want to keep this open and tag it \"Wishlist\". That is what we do with feature requests that are in this state.\n"
  }
]
