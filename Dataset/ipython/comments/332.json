[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/956727",
    "html_url": "https://github.com/ipython/ipython/pull/332#issuecomment-956727",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/332",
    "id": 956727,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk1NjcyNw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-04T23:45:36Z",
    "updated_at": "2011-04-04T23:45:36Z",
    "author_association": "MEMBER",
    "body": "I should add that (at this point), the test suite passes, and IPython.core.inputsplitter still has 100% test coverage (although I've removed `split_blocks` and the tests that cover it).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/957559",
    "html_url": "https://github.com/ipython/ipython/pull/332#issuecomment-957559",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/332",
    "id": 957559,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk1NzU1OQ==",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-05T05:34:54Z",
    "updated_at": "2011-04-05T05:34:54Z",
    "author_association": "MEMBER",
    "body": "Can you say more about how these changes affect how IPython special\nsyntax is being handled?\n\nOn Mon, Apr 4, 2011 at 4:31 PM, takluyver\nreply@reply.github.com\nwrote:\n\n> I'm making a pull request as much so we can see the diff as for instant inclusion - I've modified quite a bit of the core stuff, so I imagine it might need some checking and polishing.\n> \n> So, in short, I've replaced our old technique of splitting input into blocks with a version that works with AST (abstract syntax tree) nodes. These are representations of pieces of Python code, and a node can be anything from an integer literal to an if-elif-else to a class definition. For our purposes, we work only with the top level of nodes we get when we parse some code; we don't consider the many child nodes of these.\n> \n> Specifically, run_cell will now:\n> - With single line input, run it all in interactive mode; so `2*4; 3*3` produces two sets of output.\n> - With multiline input, run only the last node in interactive mode. So if `2*4; 3*3` is the last line of a multiline cell, only the second result (`9`) is displayed.\n> \n> Along the way, I had to modify the CachingCompiler a bit, as it assumed that it would cache and compile source in one operation. It now has a `cache` method, which returns the cell name, (e.g. \"<ipython-input-1-15a9b1ff09e>\"), which is passed back to the compilation step. The compilation step now has a call signature matching the built in `compile` function.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/332\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/958144",
    "html_url": "https://github.com/ipython/ipython/pull/332#issuecomment-958144",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/332",
    "id": 958144,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk1ODE0NA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-05T09:13:03Z",
    "updated_at": "2011-04-05T09:13:03Z",
    "author_association": "MEMBER",
    "body": "It shouldn't change, as far as I'm aware. We call `prefilter_lines` on the cell before trying to run it, which should turn everything into valid Python syntax, and knows about the difference between multi-line and single line cells. The only difference is that I think prefilter_lines will do the dynamic transformations on the first line of a multi-line block. That's easily changed if we want.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/960018",
    "html_url": "https://github.com/ipython/ipython/pull/332#issuecomment-960018",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/332",
    "id": 960018,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk2MDAxOA==",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-05T16:58:11Z",
    "updated_at": "2011-04-05T16:58:11Z",
    "author_association": "MEMBER",
    "body": "> It shouldn't change, as far as I'm aware. We call `prefilter_lines` on the cell before trying to run it, which should turn everything into valid Python syntax, and knows about the difference between multi-line and single line cells. The only difference is that I think prefilter_lines will do the dynamic transformations on the first line of a multi-line block. That's easily changed if we want.\n\nOK, that clarifies the situation a bit.  But then maybe I don't\nunderstand the model to begin with.  prefilter_lines can only be\ncalled in the kernel.  IOW, the frontend, does not have that method as\nit uses the user_ns to introspect variables.  Thus, I can modify my\nquestion:\n\nHow does a frontend handle the IPython syntax?\nHow does your changes affect how a frontend works?\nDo we still do double transformations in both the frontend and kernel?\n\nI apologize for my ignorance.\n\nCheers,\n\nBrian\n\n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/332#issuecomment-958144\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/960110",
    "html_url": "https://github.com/ipython/ipython/pull/332#issuecomment-960110",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/332",
    "id": 960110,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk2MDExMA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-05T17:19:55Z",
    "updated_at": "2011-04-05T17:19:55Z",
    "author_association": "MEMBER",
    "body": "Don't worry about asking questions; apart from anything else, trying to explain what's going on often helps me understand it.\n\nThe frontends call two methods of the inputsplitter: `push` is designed to operate line by line, and returns whether or not the block of input is complete (as determined by codeop.CommandCompiler from the stdlib). `push_accepts_more` relies on the state from previous calls to push to determine whether to carry on entering code or to execute it now. I haven't changed this, except that push_accepts_more used to call `split_blocks`.\n\nStatic parts of the IPython syntax, which can be processed without the user namespace (like explicit %magic calls) are transformed by the `push` method into valid Python syntax for the frontend. Dynamic parts, like automagics (`run foo`) and macros, if they are not coincicdentally Python syntax as well, appear to the frontend as a SyntaxError, in which case it sends it to the kernel (which tries the dynamic transformations before rejecting it). So yes, there is a degree of duplication between inputsplitter and prefilter, which I've not tried to address.\n\nOur split_blocks implementation already depended on getting valid Python code: if it wasn't, an `except` clause simply returned the code as a single block. While I've removed `split_blocks`, I've left an `except` block in `push_accepts_more` so that that method behaves the same way with invalid Python syntax (that is, it will indicate that it should be sent for attempted execution).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/960307",
    "html_url": "https://github.com/ipython/ipython/pull/332#issuecomment-960307",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/332",
    "id": 960307,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk2MDMwNw==",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-05T17:57:11Z",
    "updated_at": "2011-04-05T17:57:11Z",
    "author_association": "MEMBER",
    "body": "> Don't worry about asking questions; apart from anything else, trying to explain what's going on often helps me understand it.\n\nThanks!\n\n> The frontends call two methods of the inputsplitter: `push` is designed to operate line by line, and returns whether or not the block of input is complete (as determined by codeop.CommandCompiler from the stdlib). `push_accepts_more` relies on the state from previous calls to push to determine whether to carry on entering code or to execute it now. I haven't changed this, except that push_accepts_more used to call `split_blocks`.\n\nOK this is now coming back to me.\n\n> Static parts of the IPython syntax, which can be processed without the user namespace (like explicit %magic calls) are transformed by the `push` method into valid Python syntax for the frontend. Dynamic parts, like automagics (`run foo`) and macros, if they are not coincicdentally Python syntax as well, appear to the frontend as a SyntaxError, in which case it sends it to the kernel (which tries the dynamic transformations before rejecting it). So yes, there is a degree of duplication between inputsplitter and prefilter, which I've not tried to address.\n\nOK, so we are still relying on the SytaxError -> just try it approach.\n That is fine.\n\n> Our split_blocks implementation already depended on getting valid Python code: if it wasn't, an `except` clause simply returned the code as a single block. While I've removed `split_blocks`, I've left an `except` block in `push_accepts_more` so that that method behaves the same way with invalid Python syntax (that is, it will indicate that it should be sent for attempted execution).\n\nOk, so really it is just modernizing the splitting of blocks.\n\nThe idea of this sounds fine.  I haven't done a details code review.\nFernando is probably best for that.\n\n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/332#issuecomment-960110\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/960457",
    "html_url": "https://github.com/ipython/ipython/pull/332#issuecomment-960457",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/332",
    "id": 960457,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk2MDQ1Nw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-05T18:23:37Z",
    "updated_at": "2011-04-05T18:23:37Z",
    "author_association": "MEMBER",
    "body": "Thanks, Brian. Let's tag Fernando (@fperez) so he knows you've suggested that he look at it (although I'm sure he will anyway before long).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/961636",
    "html_url": "https://github.com/ipython/ipython/pull/332#issuecomment-961636",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/332",
    "id": 961636,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk2MTYzNg==",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-05T22:43:49Z",
    "updated_at": "2011-04-05T22:43:49Z",
    "author_association": "MEMBER",
    "body": "Sounds great!\n\nOn Tue, Apr 5, 2011 at 11:23 AM, takluyver\nreply@reply.github.com\nwrote:\n\n> Thanks, Brian. Let's tag Fernando (@fperez) so he knows you've suggested that he look at it (although I'm sure he will anyway before long).\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/332#issuecomment-960457\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/962870",
    "html_url": "https://github.com/ipython/ipython/pull/332#issuecomment-962870",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/332",
    "id": 962870,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk2Mjg3MA==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-06T07:19:28Z",
    "updated_at": "2011-04-06T07:19:28Z",
    "author_association": "MEMBER",
    "body": "Hey Thomas, sorry for the silence, a bit swamped today with local life stuff.  I'll try to catch up as soon as I can, many thanks for this work!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/963324",
    "html_url": "https://github.com/ipython/ipython/pull/332#issuecomment-963324",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/332",
    "id": 963324,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk2MzMyNA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-06T09:50:22Z",
    "updated_at": "2011-04-06T09:50:22Z",
    "author_association": "MEMBER",
    "body": "Not to worry, Fernando, there's no rush.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/969359",
    "html_url": "https://github.com/ipython/ipython/pull/332#issuecomment-969359",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/332",
    "id": 969359,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk2OTM1OQ==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-07T15:22:59Z",
    "updated_at": "2011-04-07T15:22:59Z",
    "author_association": "MEMBER",
    "body": "I'll try to work on this later today, just wanted to note that we need to remember to close  #306 when this goes in.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/969899",
    "html_url": "https://github.com/ipython/ipython/pull/332#issuecomment-969899",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/332",
    "id": 969899,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk2OTg5OQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-07T17:16:12Z",
    "updated_at": "2011-04-07T17:16:12Z",
    "author_association": "MEMBER",
    "body": "Will do. And remove the 'known failure' decorator on its test. I branched just before the test for 306 got merged, but I could rebase, then tweak its test and mark the commit as closing the issue.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/970419",
    "html_url": "https://github.com/ipython/ipython/pull/332#issuecomment-970419",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/332",
    "id": 970419,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk3MDQxOQ==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-07T19:19:53Z",
    "updated_at": "2011-04-07T19:19:53Z",
    "author_association": "MEMBER",
    "body": "I'll start reviewing as-is, but feel free to do the rebase/fix so that gets closed automatically.  We'll make sure to wait for your rebase before actually merging.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/970791",
    "html_url": "https://github.com/ipython/ipython/pull/332#issuecomment-970791",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/332",
    "id": 970791,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk3MDc5MQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-07T20:48:38Z",
    "updated_at": "2011-04-07T20:48:38Z",
    "author_association": "MEMBER",
    "body": "Rebased, removed the known_failure decorator , and run the test suite run to check that it passes (which it does). The last commit should auto-close #306 as and when it's merged.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/971302",
    "html_url": "https://github.com/ipython/ipython/pull/332#issuecomment-971302",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/332",
    "id": 971302,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk3MTMwMg==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-07T22:58:54Z",
    "updated_at": "2011-04-07T22:58:54Z",
    "author_association": "MEMBER",
    "body": "Other than a very small comment I made inline, this is great work!  I ran the test suite, and have been playing with it for a while, and it looks very good to me.  Note: you should add your name to the authors list in those files, you've made so many changes. It's partly giving you proper credit (though that's mostly ensured by the git log), partly keeping a quick reference of the main hands that have gone into a file, in case somebody has a question later.\n\nI can't see any reason to hold this further: all the semantics we needed are preserved, the tests pass, and it's a major simplification of that ugly double-pass hack.\n\nStellar job!\n"
  }
]
