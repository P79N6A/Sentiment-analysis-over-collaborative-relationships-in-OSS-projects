[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/47774606",
    "html_url": "https://github.com/ipython/ipython/issues/6073#issuecomment-47774606",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6073",
    "id": 47774606,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3Nzc0NjA2",
    "user": {
      "login": "dsblank",
      "id": 168568,
      "node_id": "MDQ6VXNlcjE2ODU2OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/168568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsblank",
      "html_url": "https://github.com/dsblank",
      "followers_url": "https://api.github.com/users/dsblank/followers",
      "following_url": "https://api.github.com/users/dsblank/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsblank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsblank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsblank/subscriptions",
      "organizations_url": "https://api.github.com/users/dsblank/orgs",
      "repos_url": "https://api.github.com/users/dsblank/repos",
      "events_url": "https://api.github.com/users/dsblank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsblank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-02T13:22:31Z",
    "updated_at": "2014-07-02T13:22:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "This would be nice! Thinking about utility of the data, it would be nice for a future nbviewer to be able to render a bibliography reference for download/cu-n-paste in a couple of formats (eg, bibtex, MLA, APA). For completeness, I'd suggest just mirroring all of bibtex's fields.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/47782448",
    "html_url": "https://github.com/ipython/ipython/issues/6073#issuecomment-47782448",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6073",
    "id": 47782448,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NzgyNDQ4",
    "user": {
      "login": "FRidh",
      "id": 2129135,
      "node_id": "MDQ6VXNlcjIxMjkxMzU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2129135?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/FRidh",
      "html_url": "https://github.com/FRidh",
      "followers_url": "https://api.github.com/users/FRidh/followers",
      "following_url": "https://api.github.com/users/FRidh/following{/other_user}",
      "gists_url": "https://api.github.com/users/FRidh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/FRidh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FRidh/subscriptions",
      "organizations_url": "https://api.github.com/users/FRidh/orgs",
      "repos_url": "https://api.github.com/users/FRidh/repos",
      "events_url": "https://api.github.com/users/FRidh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/FRidh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-02T14:25:46Z",
    "updated_at": "2014-07-02T14:25:46Z",
    "author_association": "NONE",
    "body": "I hadn't thought of that, but indeed, I think it would be straightforward to implement a function then to take this meta data and print a limited `.bib` file entry or vCard's of the authors.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/47848088",
    "html_url": "https://github.com/ipython/ipython/issues/6073#issuecomment-47848088",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6073",
    "id": 47848088,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODQ4MDg4",
    "user": {
      "login": "dsblank",
      "id": 168568,
      "node_id": "MDQ6VXNlcjE2ODU2OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/168568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsblank",
      "html_url": "https://github.com/dsblank",
      "followers_url": "https://api.github.com/users/dsblank/followers",
      "following_url": "https://api.github.com/users/dsblank/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsblank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsblank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsblank/subscriptions",
      "organizations_url": "https://api.github.com/users/dsblank/orgs",
      "repos_url": "https://api.github.com/users/dsblank/repos",
      "events_url": "https://api.github.com/users/dsblank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsblank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-02T23:01:04Z",
    "updated_at": "2014-07-02T23:01:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "If this proposal was about a document metadata section, I would also suggest that we add: **license**, **license_logo**, and **license_text** (could include HTML). And that would also appear when editing or nbviewing the notebook.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/47984116",
    "html_url": "https://github.com/ipython/ipython/issues/6073#issuecomment-47984116",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6073",
    "id": 47984116,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTg0MTE2",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-03T20:59:02Z",
    "updated_at": "2014-07-03T20:59:02Z",
    "author_association": "MEMBER",
    "body": "In the past we have resisted adding this much formalized metadata to the\nnotebook format. Not sure we are ready to jump into this. There are also a\nnumber of other ways we have discussed adding this type of information\nwithout putting it into metadata.\n\nOn Wed, Jul 2, 2014 at 4:01 PM, Doug Blank notifications@github.com wrote:\n\n> If this proposal was about a document metadata section, I would also\n> suggest that we add: _license_, _license_logo_, and _license_text_ (could\n> include HTML). And that would also appear when editing or nbviewing the\n> notebook.\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/issues/6073#issuecomment-47848088.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\n@ellisonbg on Twitter and GitHub\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/48278979",
    "html_url": "https://github.com/ipython/ipython/issues/6073#issuecomment-48278979",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6073",
    "id": 48278979,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4Mjc4OTc5",
    "user": {
      "login": "FRidh",
      "id": 2129135,
      "node_id": "MDQ6VXNlcjIxMjkxMzU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2129135?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/FRidh",
      "html_url": "https://github.com/FRidh",
      "followers_url": "https://api.github.com/users/FRidh/followers",
      "following_url": "https://api.github.com/users/FRidh/following{/other_user}",
      "gists_url": "https://api.github.com/users/FRidh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/FRidh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FRidh/subscriptions",
      "organizations_url": "https://api.github.com/users/FRidh/orgs",
      "repos_url": "https://api.github.com/users/FRidh/repos",
      "events_url": "https://api.github.com/users/FRidh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/FRidh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-08T07:09:30Z",
    "updated_at": "2014-07-08T07:09:30Z",
    "author_association": "NONE",
    "body": "Do you happen to have any references to to mailings or issues here where that's discussed? I would really like to know why this was.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/57655290",
    "html_url": "https://github.com/ipython/ipython/issues/6073#issuecomment-57655290",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6073",
    "id": 57655290,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NjU1Mjkw",
    "user": {
      "login": "bgamari",
      "id": 1010174,
      "node_id": "MDQ6VXNlcjEwMTAxNzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1010174?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bgamari",
      "html_url": "https://github.com/bgamari",
      "followers_url": "https://api.github.com/users/bgamari/followers",
      "following_url": "https://api.github.com/users/bgamari/following{/other_user}",
      "gists_url": "https://api.github.com/users/bgamari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bgamari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bgamari/subscriptions",
      "organizations_url": "https://api.github.com/users/bgamari/orgs",
      "repos_url": "https://api.github.com/users/bgamari/repos",
      "events_url": "https://api.github.com/users/bgamari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bgamari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-02T16:18:05Z",
    "updated_at": "2014-10-02T16:18:05Z",
    "author_association": "NONE",
    "body": "@ellisonbg would you happen to have some references to discussion surrounding this issue? It appears to be a bit Google-resistant.\n\nOne idea might be to use the existing Markdown YAML metadata syntax (see, for instance, the implementation in [Pandoc's markdown](http://johnmacfarlane.net/pandoc/README.html#extension-yaml_metadata_block)). It's a bit unclear how one would deal with cases like multiple metadata-containing cells, however.\n\nEither way, metadata would be rather nice. The current recommended means of changing the document author leaves much to be desired.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/57832474",
    "html_url": "https://github.com/ipython/ipython/issues/6073#issuecomment-57832474",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6073",
    "id": 57832474,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3ODMyNDc0",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-03T18:08:48Z",
    "updated_at": "2014-10-03T18:08:48Z",
    "author_association": "MEMBER",
    "body": "Unfortunately, I think that most of these discussions have happened in\nperson and in our G+ dev meetings over a long period of time. So I am not\nsure there is a better discussion than this one.\n\nA short summary of some of the points:\n- This type of metadata is a rats nest of complexity. Many people have\n  invented ways of encoding this type of information and we don't want to\n  reinvent the wheel, but also  I am not sure there is a good standard.\n- It is not just in the metadata that we might want this information.\n  Eventually you would want to display this information, both in a live\n  notebook and in nbconvert (HTMl, PDF, etc.). What that UI looks like is\n  non-trivial.\n- Formats. The way you encode this type of data varys a lot with the\n  desired output format HTML, latex, etc.\n- Once we make a decision, folks will start to use it and we will have\n  invented a new standard! That means we need to get it roughly right the\n  first time.\n\nWe would love someone to look into these questions. But in areas where we\nare creating a standard, we move very slowly and conservatively. Cheers,\nBrian\n\nOn Thu, Oct 2, 2014 at 9:18 AM, Ben Gamari notifications@github.com wrote:\n\n> @ellisonbg https://github.com/ellisonbg would you happen to have some\n> references to discussion surrounding this issue? It appears to be a bit\n> Google-resistant.\n> \n> One idea might be to use the existing Markdown YAML metadata syntax (see,\n> for instance, the implementation in Pandoc's markdown\n> http://johnmacfarlane.net/pandoc/README.html#extension-yaml_metadata_block).\n> It's a bit unclear how one would deal with cases like multiple\n> metadata-containing cells, however.\n> \n> Either way, metadata would be rather nice. The current recommended means\n> of changing the document author leaves much to be desired.\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/issues/6073#issuecomment-57655290.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\n@ellisonbg on Twitter and GitHub\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/84523259",
    "html_url": "https://github.com/ipython/ipython/issues/6073#issuecomment-84523259",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6073",
    "id": 84523259,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0NTIzMjU5",
    "user": {
      "login": "bollwyvl",
      "id": 45380,
      "node_id": "MDQ6VXNlcjQ1Mzgw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/45380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bollwyvl",
      "html_url": "https://github.com/bollwyvl",
      "followers_url": "https://api.github.com/users/bollwyvl/followers",
      "following_url": "https://api.github.com/users/bollwyvl/following{/other_user}",
      "gists_url": "https://api.github.com/users/bollwyvl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bollwyvl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bollwyvl/subscriptions",
      "organizations_url": "https://api.github.com/users/bollwyvl/orgs",
      "repos_url": "https://api.github.com/users/bollwyvl/repos",
      "events_url": "https://api.github.com/users/bollwyvl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bollwyvl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-22T05:19:54Z",
    "updated_at": "2015-03-22T05:19:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "I propose treating, initially, every metadata block, but eventually, each entire notebook, as [JSON-LD](http://json-ld.org) documents. Basically, this means adding/fiating a [`@context`](http://json-ld.org/spec/ED/json-ld-syntax/20111016/#the-context) to every metadata block. Then adding some namespaces of linked data. Then starting to do useful stuff with it.\n\nJSON-LD provides a standards-based way to capture a much richer underlying structure to JSON data than JSON schema, for example. This \"linked data\" concept asserts that data has:\n- identity, `@id`\n- type, `@type`\n- as defined by a `@context`\n\nThe example above with the multiple affiliations is trivial, not only to write, but to actually do something with, as there exist parsers in most major languages. Further, the specific pidgen\n\nThe biggest initial win would be in selecting and promoting a few, existing, productive namespaces for 99% of the cases of metadata that someone might want.\n- The biggest player in this space is [dublin core](http://dublincore.org/). Scholarly. If I had to pick one, I'd probably just go with this.\n- The biggest challenger is [schema.org](http://schema.org), which is what powers, for example, Google Now, and that thing that lets you do stuff to github issues from inside gmail. For an SEO/internet citizenship point of view, this is very possibly the future.\n- The biggest vision is [W3C PROV](http://www.w3.org/TR/prov-primer/), which would actually contain the means to capture the complex relationship between multiple simultaneous users. and uses dublin core as a baseline.\n\nNow, the joke is that we could _claim_ that we are using all of them, as one can make their OWN term, then use ontology dark magic to claim the it is the same as other standards. For example, `jupyter:name` could be described to link to `rdfs:label`, `dc:title` and `schema:name`. However, i recommend against doing such a thing, aside from those places where we are really doing new things, i.e. ComputableDocument is a subclass of schema:CreativeWork. JupyterKernel is a subclass of schema:Software.\n\nLonger term, JSON-LD provides things like internationalization, out-of-band context and other features that would contribute substantially to the overall impact of the IPython/Jupyter ecosystem.\n\nSince the data-at-rest representation is still JSON, this introduces no real new challenges, but gives us a huge head start: we already have some great collections of concepts to pull in, rather than having to build the UI and the vocabulary at the same time.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/85647406",
    "html_url": "https://github.com/ipython/ipython/issues/6073#issuecomment-85647406",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6073",
    "id": 85647406,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1NjQ3NDA2",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-24T19:08:54Z",
    "updated_at": "2015-03-24T19:08:54Z",
    "author_association": "MEMBER",
    "body": "I think for the time being we need to be extremely conservative in not\nchanging the notebook format. The cost to the project and users in changing\nthe format is massive. That doesn't prevent others from playing around with\ndifferent things in metadata though in the meantime.\n\nCheers,\n\nBrian\n\nOn Sat, Mar 21, 2015 at 10:20 PM, bollwyvl notifications@github.com wrote:\n\n> I propose treating, initially, every metadata block, but eventually, each\n> entire notebook, as JSON-LD http://json-ld.org documents. Basically,\n> this means adding/fiating a @context\n> http://json-ld.org/spec/ED/json-ld-syntax/20111016/#the-context to\n> every metadata block. Then adding some namespaces of linked data. Then\n> starting to do useful stuff with it.\n> \n> JSON-LD provides a standards-based way to capture a much richer underlying\n> structure to JSON data than JSON schema, for example. This \"linked data\"\n> concept asserts that data has:\n> - identity, @id\n> - type, @type\n> - as defined by a @context\n> \n> The example above with the multiple affiliations is trivial, not only to\n> write, but to actually do something with, as there exist parsers in most\n> major languages. Further, the specific pidgen\n> \n> The biggest initial win would be in selecting and promoting a few,\n> existing, productive namespaces for 99% of the cases of metadata that\n> someone might want.\n> - The biggest player in this space is dublin core\n>   http://dublincore.org/. Scholarly. If I had to pick one, I'd\n>   probably just go with this.\n> - The biggest challenger is schema.org, which is what powers, for\n>   example, Google Now, and that thing that lets you do stuff to github issues\n>   from inside gmail. For an SEO/internet citizenship point of view, this is\n>   very possibly the future.\n> - The biggest vision is W3C PROV http://www.w3.org/TR/prov-primer/,\n>   which would actually contain the means to capture the complex relationship\n>   between multiple simultaneous users. and uses dublin core as a baseline.\n> \n> Now, the joke is that we could _claim_ that we are using all of them, as\n> one can make their OWN term, then use ontology dark magic to claim the it\n> is the same as other standards. For example, jupyter:name could be\n> described to link to rdfs:label, dc:title and schema:name. However, i\n> recommend against doing such a thing, aside from those places where we are\n> really doing new things, i.e. ComputableDocument is a subclass of\n> schema:CreativeWork. JupyterKernel is a subclass of schema:Software.\n> \n> Longer term, JSON-LD provides things like internationalization,\n> out-of-band context and other features that would contribute substantially\n> to the overall impact of the IPython/Jupyter ecosystem.\n> \n> Since the data-at-rest representation is still JSON, this introduces no\n> real new challenges, but gives us a huge head start: we already have some\n> great collections of concepts to pull in, rather than having to build the\n> UI and the vocabulary at the same time.\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/issues/6073#issuecomment-84523259.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\n@ellisonbg on Twitter and GitHub\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/85705663",
    "html_url": "https://github.com/ipython/ipython/issues/6073#issuecomment-85705663",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6073",
    "id": 85705663,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1NzA1NjYz",
    "user": {
      "login": "bollwyvl",
      "id": 45380,
      "node_id": "MDQ6VXNlcjQ1Mzgw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/45380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bollwyvl",
      "html_url": "https://github.com/bollwyvl",
      "followers_url": "https://api.github.com/users/bollwyvl/followers",
      "following_url": "https://api.github.com/users/bollwyvl/following{/other_user}",
      "gists_url": "https://api.github.com/users/bollwyvl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bollwyvl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bollwyvl/subscriptions",
      "organizations_url": "https://api.github.com/users/bollwyvl/orgs",
      "repos_url": "https://api.github.com/users/bollwyvl/repos",
      "events_url": "https://api.github.com/users/bollwyvl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bollwyvl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-24T21:42:37Z",
    "updated_at": "2015-03-24T21:42:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I think for the time being we need to be extremely conservative in not changing the notebook format.\n\nAgreed. That's one of the big advantages of JSON-LD: we can just _say_ that the notebook is now JSON-LD, as interpreted by a [particular context](http://nbviewer.ipython.org/gist/bollwyvl/6edda34649ba4b5cbaf9#A-lightweight-@context-for-Notebook-Format-4), and it is. But there is still a lot of information missing... my motivation here is the seemingly simple [nbviewer](/jupyter/nbviewer/issues/92) [issues](/jupyter/nbviewer/issues/164), and influenced by making it work with, for example, [google drive](/jupyter/nbviewer/issues/427).\n\nA ContentManager is, in the end, is responsible for giving the notebook a URL. Heck, I like the [index.ipynb](/jupyter/nbviewer/issues/181) suggestion. But this suggests that the filename is a thing for machines, that the human might not even control. What is the name for people? At present, google is nice enough to pull an `h1` out of the content of notebooks, but an empty title is really pretty bad for humans to find it.\n\nI'm saying that _when_ we add \"real\" metadata for metadata's sake (that some robot from outside the ecosystem would actually recognize as such), JSON-LD would be the right way to capture it.\n\nSo that _when_ we enable populating the title of notebooks on nbviewer, even if it is to fall back to the filename, that someone should be able to override it. And _when_ they provide it, and maybe still in `dialog.js`, not only as hand-edited JSON, but they should be able to pick from a collection of vocabularies that provide value beyond their current browser or nbviewer.\n\nMy preferred solution for the UI/UX challenge would be, however, to move the ~~meta~~ linked data out of a dark modal, and put it in the main UI, much like Lyx. Being able to point to a cell and promote it to The Title, or The Abstract, and then have real formatting applied to it (`.jumbotron`, `blockquote`) and know that that would show up in google as the link title and excerpt would be very powerful.\n\n## Endgame\n\nLonger term, as was discussed on the list, really thinking about the Notebook document from the ground up as linked data would be incredible, and allow things like:\n- slide remixing\n- copy/paste with attribution\n- multiple human languages\n- publishing of discoverable data along with notebooks\n- and eventually... being able to use the ecosystem of notebooks as something computable... along the lines of the wolfram language\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/245118954",
    "html_url": "https://github.com/ipython/ipython/issues/6073#issuecomment-245118954",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6073",
    "id": 245118954,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTExODk1NA==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-06T22:42:50Z",
    "updated_at": "2016-09-06T22:42:50Z",
    "author_association": "MEMBER",
    "body": "I'm going to resurrect this discussion over onto jupyter/nbformat.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/246441596",
    "html_url": "https://github.com/ipython/ipython/issues/6073#issuecomment-246441596",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6073",
    "id": 246441596,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjQ0MTU5Ng==",
    "user": {
      "login": "marivascruz",
      "id": 1304025,
      "node_id": "MDQ6VXNlcjEzMDQwMjU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1304025?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marivascruz",
      "html_url": "https://github.com/marivascruz",
      "followers_url": "https://api.github.com/users/marivascruz/followers",
      "following_url": "https://api.github.com/users/marivascruz/following{/other_user}",
      "gists_url": "https://api.github.com/users/marivascruz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marivascruz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marivascruz/subscriptions",
      "organizations_url": "https://api.github.com/users/marivascruz/orgs",
      "repos_url": "https://api.github.com/users/marivascruz/repos",
      "events_url": "https://api.github.com/users/marivascruz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marivascruz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-12T18:19:59Z",
    "updated_at": "2016-09-12T18:19:59Z",
    "author_association": "NONE",
    "body": "This may be a really silly question, but I cannot find the answer online: How can I display the metadata (title, author, affiliation) on the notebook? I see several options for displaying in PDF using Latex export. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/246473945",
    "html_url": "https://github.com/ipython/ipython/issues/6073#issuecomment-246473945",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6073",
    "id": 246473945,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjQ3Mzk0NQ==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-12T20:04:57Z",
    "updated_at": "2016-09-12T20:04:57Z",
    "author_association": "MEMBER",
    "body": "@marivascruz There is no standard metadata within the notebook for this - see https://github.com/jupyter/nbformat/issues/45 for a hopeful future revision of the notebook format.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/359593844",
    "html_url": "https://github.com/ipython/ipython/issues/6073#issuecomment-359593844",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6073",
    "id": 359593844,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTU5Mzg0NA==",
    "user": {
      "login": "p2ya",
      "id": 17534393,
      "node_id": "MDQ6VXNlcjE3NTM0Mzkz",
      "avatar_url": "https://avatars2.githubusercontent.com/u/17534393?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/p2ya",
      "html_url": "https://github.com/p2ya",
      "followers_url": "https://api.github.com/users/p2ya/followers",
      "following_url": "https://api.github.com/users/p2ya/following{/other_user}",
      "gists_url": "https://api.github.com/users/p2ya/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/p2ya/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/p2ya/subscriptions",
      "organizations_url": "https://api.github.com/users/p2ya/orgs",
      "repos_url": "https://api.github.com/users/p2ya/repos",
      "events_url": "https://api.github.com/users/p2ya/events{/privacy}",
      "received_events_url": "https://api.github.com/users/p2ya/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-22T22:34:22Z",
    "updated_at": "2018-01-22T22:34:22Z",
    "author_association": "NONE",
    "body": "@ellisonbg  How can I have access to notebook metadata within the notebook ?\r\nI need to rewrite some part of the metadata based on parameters which are generated after running notebook cells."
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/359623887",
    "html_url": "https://github.com/ipython/ipython/issues/6073#issuecomment-359623887",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6073",
    "id": 359623887,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTYyMzg4Nw==",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-23T00:22:38Z",
    "updated_at": "2018-01-23T00:22:38Z",
    "author_association": "MEMBER",
    "body": "that could be a bit complicated and I am probably not the best person for\nthe question. In principle you would need to write an nbextension that\nmodifies the notebook model, but that part of the code base is only a\nsemi-public API\n\nOn Mon, Jan 22, 2018 at 2:34 PM, p2ya <notifications@github.com> wrote:\n\n> @ellisonbg <https://github.com/ellisonbg> How can I have access to\n> notebook metadata within the notebook ?\n> I need to rewrite some part of the metadata based on parameters which are\n> generated after running notebook cells.\n>\n> â€”\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ipython/ipython/issues/6073#issuecomment-359593844>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABr0JlW_APX-A6QliOPNTAHgTqwqxUxks5tNQ0IgaJpZM4CJeEe>\n> .\n>\n\n\n\n-- \nBrian E. Granger\nAssociate Professor of Physics and Data Science\nCal Poly State University, San Luis Obispo\n@ellisonbg on Twitter and GitHub\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  }
]
