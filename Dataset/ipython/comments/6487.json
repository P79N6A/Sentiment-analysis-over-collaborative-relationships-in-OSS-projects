[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/55805999",
    "html_url": "https://github.com/ipython/ipython/pull/6487#issuecomment-55805999",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6487",
    "id": 55805999,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODA1OTk5",
    "user": {
      "login": "aswolf",
      "id": 2340371,
      "node_id": "MDQ6VXNlcjIzNDAzNzE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2340371?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aswolf",
      "html_url": "https://github.com/aswolf",
      "followers_url": "https://api.github.com/users/aswolf/followers",
      "following_url": "https://api.github.com/users/aswolf/following{/other_user}",
      "gists_url": "https://api.github.com/users/aswolf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aswolf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aswolf/subscriptions",
      "organizations_url": "https://api.github.com/users/aswolf/orgs",
      "repos_url": "https://api.github.com/users/aswolf/repos",
      "events_url": "https://api.github.com/users/aswolf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aswolf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-16T20:11:27Z",
    "updated_at": "2014-09-16T20:11:27Z",
    "author_association": "NONE",
    "body": "Thank you for acting so quickly to find a solution (funny that it was just an accidental call to wrap where none belonged)! So does this mean I need to wait until someone with write access merges your fix into the main ipython repo? (pardon my ignorance, I am a bit new to github) Then I should just clone the ipython repo and update to the newest version?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/55807373",
    "html_url": "https://github.com/ipython/ipython/pull/6487#issuecomment-55807373",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6487",
    "id": 55807373,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODA3Mzcz",
    "user": {
      "login": "aswolf",
      "id": 2340371,
      "node_id": "MDQ6VXNlcjIzNDAzNzE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2340371?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aswolf",
      "html_url": "https://github.com/aswolf",
      "followers_url": "https://api.github.com/users/aswolf/followers",
      "following_url": "https://api.github.com/users/aswolf/following{/other_user}",
      "gists_url": "https://api.github.com/users/aswolf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aswolf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aswolf/subscriptions",
      "organizations_url": "https://api.github.com/users/aswolf/orgs",
      "repos_url": "https://api.github.com/users/aswolf/repos",
      "events_url": "https://api.github.com/users/aswolf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aswolf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-16T20:21:36Z",
    "updated_at": "2014-09-16T20:21:36Z",
    "author_association": "NONE",
    "body": "I see that I can check out this branch from git-hub, if I am feeling impatient, but I am not sure how to compile it so that it is compatible with anaconda distribution of python. I imagine the same issue will hold true of the main distribution of ipython.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/55807500",
    "html_url": "https://github.com/ipython/ipython/pull/6487#issuecomment-55807500",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6487",
    "id": 55807500,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODA3NTAw",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-16T20:22:44Z",
    "updated_at": "2014-09-16T20:22:44Z",
    "author_association": "MEMBER",
    "body": "You have so many options!\n1. you can wait for someone to merge this, and then use IPython master\n2. before it's merged, you can just install this branch (minrk/md2md-nowrap)\n3. you can make a custom markdown template with the same patch, and use it with IPython 2.x:\n   \n   ```\n   # mymarkdown.tpl\n   {% extends \"markdown.tpl\" %}\n   {% block markdowncell scoped %}\n   {{ cell.source }}\n   {% endblock markdowncell %}\n   ```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/55809814",
    "html_url": "https://github.com/ipython/ipython/pull/6487#issuecomment-55809814",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6487",
    "id": 55809814,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODA5ODE0",
    "user": {
      "login": "aswolf",
      "id": 2340371,
      "node_id": "MDQ6VXNlcjIzNDAzNzE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2340371?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aswolf",
      "html_url": "https://github.com/aswolf",
      "followers_url": "https://api.github.com/users/aswolf/followers",
      "following_url": "https://api.github.com/users/aswolf/following{/other_user}",
      "gists_url": "https://api.github.com/users/aswolf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aswolf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aswolf/subscriptions",
      "organizations_url": "https://api.github.com/users/aswolf/orgs",
      "repos_url": "https://api.github.com/users/aswolf/repos",
      "events_url": "https://api.github.com/users/aswolf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aswolf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-16T20:39:24Z",
    "updated_at": "2014-09-16T20:39:24Z",
    "author_association": "NONE",
    "body": "Thanks for your response!\nI got option 3 working no problem, so that will work in the meantime. Though I would like to know what path variable to set so that it doesn't have to be copied into the working directory\n\nAlso, I'm curious about the first 2 options. I have cloned this repo locally, but now I'm not sure what to do to install it. I want to be sure that I am not screwing up the standard anaconda install. I imagined there would be a makefile that I could run and then add the binary location to my path above the anaconda directory (so that this version of ipython would be found first). But I don't know where the makefile is. What am I missing?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/55811669",
    "html_url": "https://github.com/ipython/ipython/pull/6487#issuecomment-55811669",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6487",
    "id": 55811669,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODExNjY5",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-16T20:51:48Z",
    "updated_at": "2014-09-16T20:51:48Z",
    "author_association": "MEMBER",
    "body": "There's no makefile - like most Python projects, you can install IPython by running `python setup.py install`. To avoid messing up your existing installation, create a new conda environment and activate it before installing IPython.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/55834958",
    "html_url": "https://github.com/ipython/ipython/pull/6487#issuecomment-55834958",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6487",
    "id": 55834958,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODM0OTU4",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-17T00:48:44Z",
    "updated_at": "2014-09-17T00:48:44Z",
    "author_association": "MEMBER",
    "body": "This PR now adds the ability to pass extra args down to pandoc, so you can get your desired `--no-wrap` behavior with:\n\n```\n{{ cell.source | markdown2latex(['--no-wrap']) }}\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/55844851",
    "html_url": "https://github.com/ipython/ipython/pull/6487#issuecomment-55844851",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6487",
    "id": 55844851,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODQ0ODUx",
    "user": {
      "login": "aswolf",
      "id": 2340371,
      "node_id": "MDQ6VXNlcjIzNDAzNzE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2340371?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aswolf",
      "html_url": "https://github.com/aswolf",
      "followers_url": "https://api.github.com/users/aswolf/followers",
      "following_url": "https://api.github.com/users/aswolf/following{/other_user}",
      "gists_url": "https://api.github.com/users/aswolf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aswolf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aswolf/subscriptions",
      "organizations_url": "https://api.github.com/users/aswolf/orgs",
      "repos_url": "https://api.github.com/users/aswolf/repos",
      "events_url": "https://api.github.com/users/aswolf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aswolf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-17T03:31:34Z",
    "updated_at": "2014-09-17T03:31:34Z",
    "author_association": "NONE",
    "body": "If only no-wrap in pandoc actually did what you expected... perhaps it will be fixed soon and now we are ready. Thanks so much for all your time and help!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56073976",
    "html_url": "https://github.com/ipython/ipython/pull/6487#issuecomment-56073976",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6487",
    "id": 56073976,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDczOTc2",
    "user": {
      "login": "jhamrick",
      "id": 83444,
      "node_id": "MDQ6VXNlcjgzNDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/83444?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jhamrick",
      "html_url": "https://github.com/jhamrick",
      "followers_url": "https://api.github.com/users/jhamrick/followers",
      "following_url": "https://api.github.com/users/jhamrick/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhamrick/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jhamrick/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhamrick/subscriptions",
      "organizations_url": "https://api.github.com/users/jhamrick/orgs",
      "repos_url": "https://api.github.com/users/jhamrick/repos",
      "events_url": "https://api.github.com/users/jhamrick/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jhamrick/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-18T17:31:14Z",
    "updated_at": "2014-09-18T17:31:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "Last night I ran into an issue where nbconvert was wrapping markdown lines, even in the middle of LaTeX, which in my opinion is pretty serious, e.g.:\n\n$$\nx + y + z + \\\nGamma\n$$\n\n(which would not actually render correctly, because there is a line break between the backslash and the Gamma).\n\nI am pretty sure this pull request fixes this issue -- I will test it out to be certain and report back -- but if it does, I would advocate that maybe `--no-wrap` should be the default? It's inconvenient to have paragraphs be all one line, but really bad for rendered math to break, in my opinion.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56074110",
    "html_url": "https://github.com/ipython/ipython/pull/6487#issuecomment-56074110",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6487",
    "id": 56074110,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDc0MTEw",
    "user": {
      "login": "jhamrick",
      "id": 83444,
      "node_id": "MDQ6VXNlcjgzNDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/83444?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jhamrick",
      "html_url": "https://github.com/jhamrick",
      "followers_url": "https://api.github.com/users/jhamrick/followers",
      "following_url": "https://api.github.com/users/jhamrick/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhamrick/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jhamrick/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhamrick/subscriptions",
      "organizations_url": "https://api.github.com/users/jhamrick/orgs",
      "repos_url": "https://api.github.com/users/jhamrick/repos",
      "events_url": "https://api.github.com/users/jhamrick/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jhamrick/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-18T17:32:10Z",
    "updated_at": "2014-09-18T17:32:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "But also maybe that is just an issue with pandoc, and should be fixed there. Hmm.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56075446",
    "html_url": "https://github.com/ipython/ipython/pull/6487#issuecomment-56075446",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6487",
    "id": 56075446,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDc1NDQ2",
    "user": {
      "login": "jhamrick",
      "id": 83444,
      "node_id": "MDQ6VXNlcjgzNDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/83444?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jhamrick",
      "html_url": "https://github.com/jhamrick",
      "followers_url": "https://api.github.com/users/jhamrick/followers",
      "following_url": "https://api.github.com/users/jhamrick/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhamrick/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jhamrick/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhamrick/subscriptions",
      "organizations_url": "https://api.github.com/users/jhamrick/orgs",
      "repos_url": "https://api.github.com/users/jhamrick/repos",
      "events_url": "https://api.github.com/users/jhamrick/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jhamrick/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-18T17:42:15Z",
    "updated_at": "2014-09-18T17:42:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, this does in fact fix the problem, and actually does so without needing to pass `--no-wrap` -- the source of the bug was IPython hard wrapping at 80 characters, I think. So nevermind about making `--no-wrap` the default, but definitely +1 on this!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/56534911",
    "html_url": "https://github.com/ipython/ipython/pull/6487#issuecomment-56534911",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6487",
    "id": 56534911,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTM0OTEx",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-23T15:09:29Z",
    "updated_at": "2014-09-23T15:09:29Z",
    "author_association": "MEMBER",
    "body": "LGTM, and seeing previous comment merging away.\n"
  }
]
