[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2076972",
    "html_url": "https://github.com/ipython/ipython/pull/776#issuecomment-2076972",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/776",
    "id": 2076972,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNzY5NzI=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-13T00:16:20Z",
    "updated_at": "2011-09-13T00:16:20Z",
    "author_association": "MEMBER",
    "body": "This looks fine to me, but the Qt code is mostly @epatters authorship, so I'd like to get his input on this PR before taking any action.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2077063",
    "html_url": "https://github.com/ipython/ipython/pull/776#issuecomment-2077063",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/776",
    "id": 2077063,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNzcwNjM=",
    "user": {
      "login": "epatters",
      "id": 316610,
      "node_id": "MDQ6VXNlcjMxNjYxMA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/316610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/epatters",
      "html_url": "https://github.com/epatters",
      "followers_url": "https://api.github.com/users/epatters/followers",
      "following_url": "https://api.github.com/users/epatters/following{/other_user}",
      "gists_url": "https://api.github.com/users/epatters/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/epatters/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/epatters/subscriptions",
      "organizations_url": "https://api.github.com/users/epatters/orgs",
      "repos_url": "https://api.github.com/users/epatters/repos",
      "events_url": "https://api.github.com/users/epatters/events{/privacy}",
      "received_events_url": "https://api.github.com/users/epatters/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-13T00:35:03Z",
    "updated_at": "2011-09-13T00:35:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks, @fperez. I meant to comment on this earlier, but it slipped through the cracks...\n\n@Carreau, Thanks for the contribution! This is a nice feature, but I have a couple comments about the implementation:\n1. Full-screen support is an application-level feature, not a widget-level one. As such, this should be implemented in `IPython.frontend.qt.console.qtconsoleapp`, not in the `ConsoleWidget` itself. Using a QShortcut is the simplest way to do this.\n2. I know that the if-then-else logic in the event handler is a bit convoluted. It's certainly the worst part of the Qt console code base and I hope to eventually replace it with a flexible and user-customizable keybinding system. For the time being, though, I'd prefer to keep it as is. It's quite well tested, but not unit-tested at all, so the cost of refactoring is high.\n3. You have merged the master branch into your feature branch several times. Unless there is a really compelling reason to do this, please avoid it, since it clutters up the commit history.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2077105",
    "html_url": "https://github.com/ipython/ipython/pull/776#issuecomment-2077105",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/776",
    "id": 2077105,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNzcxMDU=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-13T00:41:01Z",
    "updated_at": "2011-09-13T00:41:01Z",
    "author_association": "MEMBER",
    "body": "@epatters, many thanks for pitching in!  @Carreau, feel free to simply rebase and do a forced push on this branch to remove the master merges (I didn't read the commit log carefully enough, I should have pointed that issue right away!).  \n\nOnce you address the issues raised by @epatters, we should be able to move forward with this.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2079146",
    "html_url": "https://github.com/ipython/ipython/pull/776#issuecomment-2079146",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/776",
    "id": 2079146,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNzkxNDY=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-13T07:29:12Z",
    "updated_at": "2011-09-13T07:29:12Z",
    "author_association": "MEMBER",
    "body": "Hi, \nSorry if the implementation is not in the right place, i'll try to move where it belongs.\nI'll rebase and force push when possible.\n\nI'll try to find how to write unit-testing for the shortcut in qtconsole.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2083162",
    "html_url": "https://github.com/ipython/ipython/pull/776#issuecomment-2083162",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/776",
    "id": 2083162,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODMxNjI=",
    "user": {
      "login": "epatters",
      "id": 316610,
      "node_id": "MDQ6VXNlcjMxNjYxMA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/316610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/epatters",
      "html_url": "https://github.com/epatters",
      "followers_url": "https://api.github.com/users/epatters/followers",
      "following_url": "https://api.github.com/users/epatters/following{/other_user}",
      "gists_url": "https://api.github.com/users/epatters/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/epatters/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/epatters/subscriptions",
      "organizations_url": "https://api.github.com/users/epatters/orgs",
      "repos_url": "https://api.github.com/users/epatters/repos",
      "events_url": "https://api.github.com/users/epatters/events{/privacy}",
      "received_events_url": "https://api.github.com/users/epatters/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-13T15:46:59Z",
    "updated_at": "2011-09-13T15:46:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Carreau, generally you shouldn't have to worry about rebasing _or_ merging in the master branch, unless you actually need some new change from the master branch. For a small change like this one, a single merge once the PR is ready is usually sufficient, and GitHub handles this automatically.\n\nAlso, don't worry about trying to unit test this. I know we are deficient in this regard, but it's a larger project that will require some thought about how to effectively test a complex widget like this one.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2092294",
    "html_url": "https://github.com/ipython/ipython/pull/776#issuecomment-2092294",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/776",
    "id": 2092294,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwOTIyOTQ=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-14T11:46:24Z",
    "updated_at": "2011-09-14T11:46:53Z",
    "author_association": "MEMBER",
    "body": "So I unmerged the master branch, and put the code in `IPython.frontend.qt.console.qtconsoleapp` and connect it to `Ctrl+Meta+Space`.\n\nI've done the same  with `minimized (Ctrl+m)` and `maximized (Ctrl+Shift+M)`\n\nI forced-pushed the branch\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2094874",
    "html_url": "https://github.com/ipython/ipython/pull/776#issuecomment-2094874",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/776",
    "id": 2094874,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwOTQ4NzQ=",
    "user": {
      "login": "epatters",
      "id": 316610,
      "node_id": "MDQ6VXNlcjMxNjYxMA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/316610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/epatters",
      "html_url": "https://github.com/epatters",
      "followers_url": "https://api.github.com/users/epatters/followers",
      "following_url": "https://api.github.com/users/epatters/following{/other_user}",
      "gists_url": "https://api.github.com/users/epatters/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/epatters/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/epatters/subscriptions",
      "organizations_url": "https://api.github.com/users/epatters/orgs",
      "repos_url": "https://api.github.com/users/epatters/repos",
      "events_url": "https://api.github.com/users/epatters/events{/privacy}",
      "received_events_url": "https://api.github.com/users/epatters/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-14T16:18:15Z",
    "updated_at": "2011-09-14T16:18:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Great, this is almost ready for merge. Thank you for reworking this. A few minor comments:\n1. I'm on the fence about providing keybindings for maximize and minimize. Shouldn't this be the responsibility of the user's window manager? Many window managers will already have global keybindings for this. @fperez, what do you think about this?\n2. I hate to nitpick, but I will nonetheless: there are spaces before your colons, as well as some semicolons. Please try to avoid this.\n\nAlso, you should consider adding a note to the %guiref about the keybinding, so that other users have a hope of discovering your new feature. See:\n\nhttps://github.com/ipython/ipython/blob/master/IPython/core/usage.py#L375\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2096035",
    "html_url": "https://github.com/ipython/ipython/pull/776#issuecomment-2096035",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/776",
    "id": 2096035,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwOTYwMzU=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-14T17:56:09Z",
    "updated_at": "2011-09-14T17:56:09Z",
    "author_association": "MEMBER",
    "body": "Sory for 2. , i'll fix it. \nFor the keybinding for maximization/minimization, we can do it conditionnaly depending on the platform. But at least on Mac Os, the windows manager doesn't bind any shortcut to minimizing/maximizing.\ni'll add a note into the %guiref\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2096483",
    "html_url": "https://github.com/ipython/ipython/pull/776#issuecomment-2096483",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/776",
    "id": 2096483,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwOTY0ODM=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-14T18:37:25Z",
    "updated_at": "2011-09-14T18:37:25Z",
    "author_association": "MEMBER",
    "body": "re. min/maximizing: I think that should be left alone and for the OS to handle.  Sorry if some OSes don't expose keybindings for it, but I don't think individual applications should start messing with the job of the window manager.  It's bad enough that 'full screen' is already spelled in a million different ways from application to application, we shouldn't compound that problem by also making application-level bindings for other window management tasks.\n\nIn Gnome, it's easy enough to configure keybindings for those (I've done it).  There may be OSX extensions/apps that do it there too, but that's not our job.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2101448",
    "html_url": "https://github.com/ipython/ipython/pull/776#issuecomment-2101448",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/776",
    "id": 2101448,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDE0NDg=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-15T06:29:47Z",
    "updated_at": "2011-09-15T06:29:47Z",
    "author_association": "MEMBER",
    "body": "I agree that it _should_ be left to the os to handle.\n\nI'll remove all reference to Max/Min imizing and rebase to a have a clean commit.\n\nI'll put this Maximizing/Minimising function in a separate branch, but I think that we still should support it.\nIMHO having an application that works out-of-the-box the way you'r expecting it to do is a great deal for many user. Even if it is possible to configure keybinding for the windows manager\n\nWe can still have the same discussion about full-screen arguing that with most tilling manager you should be able to get full-screen application even if they doesn't support it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2105761",
    "html_url": "https://github.com/ipython/ipython/pull/776#issuecomment-2105761",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/776",
    "id": 2105761,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDU3NjE=",
    "user": {
      "login": "epatters",
      "id": 316610,
      "node_id": "MDQ6VXNlcjMxNjYxMA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/316610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/epatters",
      "html_url": "https://github.com/epatters",
      "followers_url": "https://api.github.com/users/epatters/followers",
      "following_url": "https://api.github.com/users/epatters/following{/other_user}",
      "gists_url": "https://api.github.com/users/epatters/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/epatters/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/epatters/subscriptions",
      "organizations_url": "https://api.github.com/users/epatters/orgs",
      "repos_url": "https://api.github.com/users/epatters/repos",
      "events_url": "https://api.github.com/users/epatters/events{/privacy}",
      "received_events_url": "https://api.github.com/users/epatters/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-15T15:45:20Z",
    "updated_at": "2011-09-15T15:45:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "This looks great, @Carreau. Thank you for your contribution!\n\nRegarding the minimize/maximize shortcuts, I'm not sure your comparison is fair. I'm aware of many applications that, for better or worse, include a shortcut for full screen mode, but none that include shortcuts for minimization and maximization. I think we should be trying to _conform_ to UI conventions rather an inventing our own.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2107257",
    "html_url": "https://github.com/ipython/ipython/pull/776#issuecomment-2107257",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/776",
    "id": 2107257,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDcyNTc=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-15T18:09:48Z",
    "updated_at": "2011-09-15T18:09:48Z",
    "author_association": "MEMBER",
    "body": "I totally agree that an application should _conform_ to UI convention for _every_ system it can be installed on.\nI just don't agree with the fact that we shouldn't do it on a application level if it's not handled by the window manager.\nI do think we have to try to do it in a way so that it conforms to the rest of the system shortcut, of course.\nI may have misunderstood the previous discusion, and might have not correctly explain my thought in english.\n\nSo speeking about UI,\n\nFor now, on OSX, IPython, with the Qt console look like any other python app, ie generic python icon on the task switcher and dock, the 'menu bar' on top of the screen doesn't have any action like closing and else, and the name of the app is just 'Python'\n\nIf I implement a conditional 'darwin' only UI modification to the qt console which for example map some shortcut to minimizing/maximizing and put an 'IP[y]:' icon on the task-switcher..etc. does it have a chance to be accepted ?\n\nI'm really happy to give a small contribution to IPython, and I hope i'll be able able to convert more people to it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2109856",
    "html_url": "https://github.com/ipython/ipython/pull/776#issuecomment-2109856",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/776",
    "id": 2109856,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDk4NTY=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-09-15T22:16:15Z",
    "updated_at": "2011-09-15T22:16:15Z",
    "author_association": "MEMBER",
    "body": "The qtconsole is not really an application - it's a widget with the thinnest possible QApplication wrapper to get it running.  A real app would add things like menu items, sensible platform icons/controls, etc. (e.g. a nice settings interface for configuration).\n\nWe certainly do want a _real_ QtConsole application, and this kind of work could be the beginning of that.  \n"
  }
]
