[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5340721",
    "html_url": "https://github.com/ipython/ipython/issues/1661#issuecomment-5340721",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1661",
    "id": 5340721,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNDA3MjE=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-25T19:51:56Z",
    "updated_at": "2012-04-25T19:51:56Z",
    "author_association": "MEMBER",
    "body": "The answer here would be to restore the original InteractiveShell.showindentationerror around `run_cell` in `magic_*paste`.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11774579",
    "html_url": "https://github.com/ipython/ipython/issues/1661#issuecomment-11774579",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1661",
    "id": 11774579,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNzc0NTc5",
    "user": {
      "login": "mrshu",
      "id": 461491,
      "node_id": "MDQ6VXNlcjQ2MTQ5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/461491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mrshu",
      "html_url": "https://github.com/mrshu",
      "followers_url": "https://api.github.com/users/mrshu/followers",
      "following_url": "https://api.github.com/users/mrshu/following{/other_user}",
      "gists_url": "https://api.github.com/users/mrshu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mrshu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mrshu/subscriptions",
      "organizations_url": "https://api.github.com/users/mrshu/orgs",
      "repos_url": "https://api.github.com/users/mrshu/repos",
      "events_url": "https://api.github.com/users/mrshu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mrshu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-31T09:33:35Z",
    "updated_at": "2012-12-31T09:33:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi,\n\nDo you think this might be a good intro issue? Where do you think I should start?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11813752",
    "html_url": "https://github.com/ipython/ipython/issues/1661#issuecomment-11813752",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1661",
    "id": 11813752,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExODEzNzUy",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-02T16:24:42Z",
    "updated_at": "2013-01-02T16:24:42Z",
    "author_association": "MEMBER",
    "body": "Hi @mrshu . Yes, this is probably a decent thing to start with.\n\nThe main shell class is InteractiveShell from [IPython.core.interactiveshell](https://github.com/ipython/ipython/blob/master/IPython/core/interactiveshell.py). That's subclassed by TerminalInteractiveShell from [IPython.frontend.terminal.interactiveshell](https://github.com/ipython/ipython/blob/master/IPython/frontend/terminal/interactiveshell.py), which adds the `%paste` and `%cpaste` magics, and overrides `showindentationerror` to display the message about pasting input. As @minrk suggests, we should fall back to the default implementation when code is run through the paste magics.\n\nHave a look at the relevant code in those two files, and feel free to ask questions here or on the mailing list. When you've got something that seems to work, submit a pull request to get feedback on it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11875523",
    "html_url": "https://github.com/ipython/ipython/issues/1661#issuecomment-11875523",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1661",
    "id": 11875523,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExODc1NTIz",
    "user": {
      "login": "mrshu",
      "id": 461491,
      "node_id": "MDQ6VXNlcjQ2MTQ5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/461491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mrshu",
      "html_url": "https://github.com/mrshu",
      "followers_url": "https://api.github.com/users/mrshu/followers",
      "following_url": "https://api.github.com/users/mrshu/following{/other_user}",
      "gists_url": "https://api.github.com/users/mrshu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mrshu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mrshu/subscriptions",
      "organizations_url": "https://api.github.com/users/mrshu/orgs",
      "repos_url": "https://api.github.com/users/mrshu/repos",
      "events_url": "https://api.github.com/users/mrshu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mrshu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-04T08:43:20Z",
    "updated_at": "2013-01-04T08:43:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "@takluyver Thanks for your response!\n\nI have already looked at the code but kind of failed to find a way of detecting when is the code run through the paste magics. Is there any?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11880746",
    "html_url": "https://github.com/ipython/ipython/issues/1661#issuecomment-11880746",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1661",
    "id": 11880746,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExODgwNzQ2",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-04T11:53:41Z",
    "updated_at": "2013-01-04T11:53:41Z",
    "author_association": "MEMBER",
    "body": "It sounds like you're thinking of something cleverer than we need ;-) . The magic functions are defined starting from [this line](https://github.com/ipython/ipython/blob/master/IPython/frontend/terminal/interactiveshell.py#L184). You can just make the substitution before they run the code - perhaps in the `store_or_execute` function that they both use.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11895545",
    "html_url": "https://github.com/ipython/ipython/issues/1661#issuecomment-11895545",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1661",
    "id": 11895545,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExODk1NTQ1",
    "user": {
      "login": "mrshu",
      "id": 461491,
      "node_id": "MDQ6VXNlcjQ2MTQ5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/461491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mrshu",
      "html_url": "https://github.com/mrshu",
      "followers_url": "https://api.github.com/users/mrshu/followers",
      "following_url": "https://api.github.com/users/mrshu/following{/other_user}",
      "gists_url": "https://api.github.com/users/mrshu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mrshu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mrshu/subscriptions",
      "organizations_url": "https://api.github.com/users/mrshu/orgs",
      "repos_url": "https://api.github.com/users/mrshu/repos",
      "events_url": "https://api.github.com/users/mrshu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mrshu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-04T19:12:36Z",
    "updated_at": "2013-01-04T19:12:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "Could be, that's what I'm famous for =)\n\nOne last question before actually posting some code: how should the actual substitution look like? I have to monkey patch things.\n\nThanks!\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11898539",
    "html_url": "https://github.com/ipython/ipython/issues/1661#issuecomment-11898539",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1661",
    "id": 11898539,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExODk4NTM5",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-04T20:32:54Z",
    "updated_at": "2013-01-04T20:32:54Z",
    "author_association": "MEMBER",
    "body": "Well, I can see two ways to do it:\n- Simply set the `showindentationerror` attribute on the shell to the parent method (you may need to fiddle with super()). We do a similar thing for `shell.system` [here](https://github.com/ipython/ipython/blob/master/IPython/frontend/terminal/interactiveshell.py#L363).\n- Have a boolean flag, which the implementation of `showindentationerror` checks to decide whether to print its extra message. Then `store_or_execute` can toggle the flag before & after running code.\n\nThey have different benefits. I marginally prefer the second way - I think it will be easier to see what's going on.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11911534",
    "html_url": "https://github.com/ipython/ipython/issues/1661#issuecomment-11911534",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1661",
    "id": 11911534,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExOTExNTM0",
    "user": {
      "login": "mrshu",
      "id": 461491,
      "node_id": "MDQ6VXNlcjQ2MTQ5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/461491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mrshu",
      "html_url": "https://github.com/mrshu",
      "followers_url": "https://api.github.com/users/mrshu/followers",
      "following_url": "https://api.github.com/users/mrshu/following{/other_user}",
      "gists_url": "https://api.github.com/users/mrshu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mrshu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mrshu/subscriptions",
      "organizations_url": "https://api.github.com/users/mrshu/orgs",
      "repos_url": "https://api.github.com/users/mrshu/repos",
      "events_url": "https://api.github.com/users/mrshu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mrshu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-05T08:19:13Z",
    "updated_at": "2013-01-05T08:19:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks again for your comments!\n\nAfter talking a lot I finally managed to push some code.\n\nShould I also write a test for this? I'm once again not sure how and some guidance would be much appreciated. \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/11913260",
    "html_url": "https://github.com/ipython/ipython/issues/1661#issuecomment-11913260",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1661",
    "id": 11913260,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExOTEzMjYw",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-05T12:10:55Z",
    "updated_at": "2013-01-05T12:10:55Z",
    "author_association": "MEMBER",
    "body": "Yes, a test would be good. I've given more detail in a comment on your pull request.\n"
  }
]
