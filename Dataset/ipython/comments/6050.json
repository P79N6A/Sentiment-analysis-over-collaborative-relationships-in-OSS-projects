[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/47275624",
    "html_url": "https://github.com/ipython/ipython/pull/6050#issuecomment-47275624",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6050",
    "id": 47275624,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3Mjc1NjI0",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-26T20:27:29Z",
    "updated_at": "2014-06-26T20:27:29Z",
    "author_association": "MEMBER",
    "body": "I wonder if this should live separately, for similar reasons to those we discussed for the 2D slider widget in #6002.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/47278479",
    "html_url": "https://github.com/ipython/ipython/pull/6050#issuecomment-47278479",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6050",
    "id": 47278479,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3Mjc4NDc5",
    "user": {
      "login": "chronitis",
      "id": 6874993,
      "node_id": "MDQ6VXNlcjY4NzQ5OTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/6874993?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chronitis",
      "html_url": "https://github.com/chronitis",
      "followers_url": "https://api.github.com/users/chronitis/followers",
      "following_url": "https://api.github.com/users/chronitis/following{/other_user}",
      "gists_url": "https://api.github.com/users/chronitis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chronitis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chronitis/subscriptions",
      "organizations_url": "https://api.github.com/users/chronitis/orgs",
      "repos_url": "https://api.github.com/users/chronitis/repos",
      "events_url": "https://api.github.com/users/chronitis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chronitis/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-26T20:51:58Z",
    "updated_at": "2014-06-26T20:51:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "I hadn't previously spotted the other PR, but I would argue this is a much thinner modification of an existing widget, enabling functionality already available, rather than introducing a wholly new one.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/47423932",
    "html_url": "https://github.com/ipython/ipython/pull/6050#issuecomment-47423932",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6050",
    "id": 47423932,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDIzOTMy",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-28T10:28:17Z",
    "updated_at": "2014-06-28T10:28:17Z",
    "author_association": "MEMBER",
    "body": "I am +0.5 I can definitively see the use, and I believe that the difference with #6002 is that there is not hundreds of way this can be use. Though, the introduction of range slider in gui is quite recent and I am not sure present everywhere so there might be a reason.\n\nI would be much more carefull with the  matching of 4(5) tuple to range slider though. I do not want to enclose ourselve for the time being. I'm still wondering why we do not use python `slice` for that, as they are  mostly done for range stuff like that.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/47465983",
    "html_url": "https://github.com/ipython/ipython/pull/6050#issuecomment-47465983",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6050",
    "id": 47465983,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDY1OTgz",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-29T18:29:26Z",
    "updated_at": "2014-06-29T18:29:26Z",
    "author_association": "MEMBER",
    "body": "I am +1 on including this one in IPython. I have had a number of people ask\nfor this and this builds on capabilities that are already in jqueryui. It\nthink this is much more mainstream than the 2d slider in #6002.\n\nOn Sat, Jun 28, 2014 at 3:28 AM, Matthias Bussonnier <\nnotifications@github.com> wrote:\n\n> I am +0.5 I can definitively see the use, and I believe that the\n> difference with #6002 https://github.com/ipython/ipython/issues/6002 is\n> that there is not hundreds of way this can be use. Though, the introduction\n> of range slider in gui is quite recent and I am not sure present everywhere\n> so there might be a reason.\n> \n> I would be much more carefull with the matching of 4(5) tuple to range\n> slider though. I do not want to enclose ourselve for the time being. I'm\n> still wondering why we do not use python slice for that, as they are\n> mostly done for range stuff like that.\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/pull/6050#issuecomment-47423932.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\n@ellisonbg on Twitter and GitHub\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/47885054",
    "html_url": "https://github.com/ipython/ipython/pull/6050#issuecomment-47885054",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6050",
    "id": 47885054,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODg1MDU0",
    "user": {
      "login": "chronitis",
      "id": 6874993,
      "node_id": "MDQ6VXNlcjY4NzQ5OTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/6874993?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chronitis",
      "html_url": "https://github.com/chronitis",
      "followers_url": "https://api.github.com/users/chronitis/followers",
      "following_url": "https://api.github.com/users/chronitis/following{/other_user}",
      "gists_url": "https://api.github.com/users/chronitis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chronitis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chronitis/subscriptions",
      "organizations_url": "https://api.github.com/users/chronitis/orgs",
      "repos_url": "https://api.github.com/users/chronitis/repos",
      "events_url": "https://api.github.com/users/chronitis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chronitis/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-03T09:26:56Z",
    "updated_at": "2014-07-03T09:26:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think there is a consensus the 4/5-tuple shortcuts should be removed - are there any other changes I should make?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/47984169",
    "html_url": "https://github.com/ipython/ipython/pull/6050#issuecomment-47984169",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6050",
    "id": 47984169,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTg0MTY5",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-03T20:59:38Z",
    "updated_at": "2014-07-03T20:59:38Z",
    "author_association": "MEMBER",
    "body": "@jdfreder have you had a chance to look at this in depth yet?\n\nOn Thu, Jul 3, 2014 at 2:26 AM, Gordon Ball notifications@github.com\nwrote:\n\n> I think there is a consensus the 4/5-tuple shortcuts should be removed -\n> are there any other changes I should make?\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/ipython/ipython/pull/6050#issuecomment-47885054.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\n@ellisonbg on Twitter and GitHub\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/48339859",
    "html_url": "https://github.com/ipython/ipython/pull/6050#issuecomment-48339859",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6050",
    "id": 48339859,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MzM5ODU5",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-08T14:03:25Z",
    "updated_at": "2014-07-08T14:03:31Z",
    "author_association": "MEMBER",
    "body": "N.B. #6096 is another implementation of the same idea - the author notes that this PR uses a tuple traitlet for the range, whereas he uses two separate traitlets, which might have some advantages.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/48441849",
    "html_url": "https://github.com/ipython/ipython/pull/6050#issuecomment-48441849",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6050",
    "id": 48441849,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NDQxODQ5",
    "user": {
      "login": "chronitis",
      "id": 6874993,
      "node_id": "MDQ6VXNlcjY4NzQ5OTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/6874993?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chronitis",
      "html_url": "https://github.com/chronitis",
      "followers_url": "https://api.github.com/users/chronitis/followers",
      "following_url": "https://api.github.com/users/chronitis/following{/other_user}",
      "gists_url": "https://api.github.com/users/chronitis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chronitis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chronitis/subscriptions",
      "organizations_url": "https://api.github.com/users/chronitis/orgs",
      "repos_url": "https://api.github.com/users/chronitis/repos",
      "events_url": "https://api.github.com/users/chronitis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chronitis/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-09T08:17:22Z",
    "updated_at": "2014-07-09T08:17:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "I originally had `upper` and `lower` traits, but changed to having a single `value` tuple since \n- `interact()` currently expects all child widgets to expose a single `value` trait to generate kwargs for the interacted-with function, and detect when it should be re-run - special casing would be required if there are multiple significant traits to deal with.\n- a tuple can be directly passed to many places a range would be used - eg, `xlim(rangetuple)`, which was one of my main use-cases.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/48774175",
    "html_url": "https://github.com/ipython/ipython/pull/6050#issuecomment-48774175",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6050",
    "id": 48774175,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4Nzc0MTc1",
    "user": {
      "login": "schodge",
      "id": 4616123,
      "node_id": "MDQ6VXNlcjQ2MTYxMjM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4616123?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/schodge",
      "html_url": "https://github.com/schodge",
      "followers_url": "https://api.github.com/users/schodge/followers",
      "following_url": "https://api.github.com/users/schodge/following{/other_user}",
      "gists_url": "https://api.github.com/users/schodge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/schodge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/schodge/subscriptions",
      "organizations_url": "https://api.github.com/users/schodge/orgs",
      "repos_url": "https://api.github.com/users/schodge/repos",
      "events_url": "https://api.github.com/users/schodge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/schodge/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-11T19:41:59Z",
    "updated_at": "2014-07-11T19:41:59Z",
    "author_association": "NONE",
    "body": "I would find such a widget useful, e.g. to select what range of a dataset I want to plot.  Currently using two sliders to accomplish this.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/51373112",
    "html_url": "https://github.com/ipython/ipython/pull/6050#issuecomment-51373112",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6050",
    "id": 51373112,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzczMTEy",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-06T18:05:48Z",
    "updated_at": "2014-08-06T18:06:08Z",
    "author_association": "MEMBER",
    "body": "A tuple is probably best, for the reasons mentioned by @chronitis.  I don't see\nany reason not to have helper properties named `lower` and `upper` that allow \nyou to change one of the trait bounds.\n\nEDIT: Looks like this PR needs a rebase.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/51523293",
    "html_url": "https://github.com/ipython/ipython/pull/6050#issuecomment-51523293",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6050",
    "id": 51523293,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTIzMjkz",
    "user": {
      "login": "chronitis",
      "id": 6874993,
      "node_id": "MDQ6VXNlcjY4NzQ5OTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/6874993?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chronitis",
      "html_url": "https://github.com/chronitis",
      "followers_url": "https://api.github.com/users/chronitis/followers",
      "following_url": "https://api.github.com/users/chronitis/following{/other_user}",
      "gists_url": "https://api.github.com/users/chronitis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chronitis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chronitis/subscriptions",
      "organizations_url": "https://api.github.com/users/chronitis/orgs",
      "repos_url": "https://api.github.com/users/chronitis/repos",
      "events_url": "https://api.github.com/users/chronitis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chronitis/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-07T19:57:13Z",
    "updated_at": "2014-08-07T19:57:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "(The CI build failed with `ZMQError: Address already in use`,  during `iptest kernel` which I think is probably not a widget-related bug)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/51535322",
    "html_url": "https://github.com/ipython/ipython/pull/6050#issuecomment-51535322",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6050",
    "id": 51535322,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTM1MzIy",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-07T21:34:58Z",
    "updated_at": "2014-08-07T21:34:58Z",
    "author_association": "MEMBER",
    "body": "@chronitis yep, that's something that happens in the tests from time to time. I've restarted the test run just to make sure.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/51543916",
    "html_url": "https://github.com/ipython/ipython/pull/6050#issuecomment-51543916",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6050",
    "id": 51543916,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTQzOTE2",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-07T23:00:07Z",
    "updated_at": "2014-08-07T23:00:07Z",
    "author_association": "MEMBER",
    "body": "@chronitis during the meeting today, we decided it would be best if there were `upper` and `lower` traits instead of a single tuple trait.  Instead there could be a tuple helper property.  The reasoning is that `link` and `dlink`, which act on traitlets, will be much more usefull if the traits are individual integers (so you can link them to individual widgets or traits).  Could you try implementing it this way?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/51586063",
    "html_url": "https://github.com/ipython/ipython/pull/6050#issuecomment-51586063",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6050",
    "id": 51586063,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTg2MDYz",
    "user": {
      "login": "chronitis",
      "id": 6874993,
      "node_id": "MDQ6VXNlcjY4NzQ5OTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/6874993?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chronitis",
      "html_url": "https://github.com/chronitis",
      "followers_url": "https://api.github.com/users/chronitis/followers",
      "following_url": "https://api.github.com/users/chronitis/following{/other_user}",
      "gists_url": "https://api.github.com/users/chronitis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chronitis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chronitis/subscriptions",
      "organizations_url": "https://api.github.com/users/chronitis/orgs",
      "repos_url": "https://api.github.com/users/chronitis/repos",
      "events_url": "https://api.github.com/users/chronitis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chronitis/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T10:31:58Z",
    "updated_at": "2014-08-08T10:31:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jdfreder There are several possible routes - can you indicate which would be preferable?\n\n`upper` and `lower` become scalar traits, and:\n- `value` is a property. This breaks `interact()` as noted above, since it doesn't know either how to 1) handle multiple significant traits from one widget, or 2) doesn't get `on_trait_change` callbacks if `value` is a property rather than a trait. Fixing this would require either wider modification to widgets/`interact()` to allow them to inform the method about how to handle their values, or special-casing for this specific widget.\n- `value` is also a trait, and is kept two-way synchronised with `upper` and `lower`. Since `link` doesn't handle joining dissimilar traits (scalar <-> tuple element) either much of the functionality needs to be duplicated in the slider class, or `link` extended to handle this case.\n- `value` is also a trait, but synchronisation is only one-way between `value` and `upper`/`lower` - this is easy but either way round seems a bit counter-intuitive.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/51623116",
    "html_url": "https://github.com/ipython/ipython/pull/6050#issuecomment-51623116",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6050",
    "id": 51623116,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjIzMTE2",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T16:15:26Z",
    "updated_at": "2014-08-08T16:15:56Z",
    "author_association": "MEMBER",
    "body": "Ah good point.  I think the second option is the best.  It's easy to do without link:\n\n``` python\nfrom IPython.utils.traitlets import HasTraits, Tuple, Int\n\nclass A(HasTraits):\n    a = Tuple()\n    b = Int()\n    c = Int()\n\n    def _a_changed(self, name, value):\n        self.b = value[0]\n        self.c = value[1]\n\n    def _b_changed(self, name, value):\n        self.a = (value, self.c)\n\n    def _c_changed(self, name, value):\n        self.a = (self.b, value)\n\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/51635525",
    "html_url": "https://github.com/ipython/ipython/pull/6050#issuecomment-51635525",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6050",
    "id": 51635525,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjM1NTI1",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T17:53:20Z",
    "updated_at": "2014-08-08T17:53:20Z",
    "author_association": "MEMBER",
    "body": "Doesn't it need to be a bit smarter than that to avoid going into an infinite loop as soon as any of them are changed?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/51635943",
    "html_url": "https://github.com/ipython/ipython/pull/6050#issuecomment-51635943",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6050",
    "id": 51635943,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjM1OTQz",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T17:56:35Z",
    "updated_at": "2014-08-08T17:56:35Z",
    "author_association": "MEMBER",
    "body": "Seems to work in practice without infinite loops.  My guess is that the changed event only fires if old != new.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/51636220",
    "html_url": "https://github.com/ipython/ipython/pull/6050#issuecomment-51636220",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6050",
    "id": 51636220,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjM2MjIw",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T17:58:43Z",
    "updated_at": "2014-08-08T17:58:43Z",
    "author_association": "MEMBER",
    "body": "OK, but let's verify that that is something we can rely on.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/51636513",
    "html_url": "https://github.com/ipython/ipython/pull/6050#issuecomment-51636513",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6050",
    "id": 51636513,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjM2NTEz",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T18:00:47Z",
    "updated_at": "2014-08-08T18:00:59Z",
    "author_association": "MEMBER",
    "body": "Verified https://github.com/ipython/ipython/blob/master/IPython/utils/traitlets.py#L366\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/51637474",
    "html_url": "https://github.com/ipython/ipython/pull/6050#issuecomment-51637474",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6050",
    "id": 51637474,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjM3NDc0",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T18:08:25Z",
    "updated_at": "2014-08-08T18:08:25Z",
    "author_association": "MEMBER",
    "body": "It's safe for simple types - we should remember that it's not necessarily to be trusted where they values could override equality comparisons. But that's not an issue with numbers and tuples :-)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/52051598",
    "html_url": "https://github.com/ipython/ipython/pull/6050#issuecomment-52051598",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6050",
    "id": 52051598,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMDUxNTk4",
    "user": {
      "login": "chronitis",
      "id": 6874993,
      "node_id": "MDQ6VXNlcjY4NzQ5OTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/6874993?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chronitis",
      "html_url": "https://github.com/chronitis",
      "followers_url": "https://api.github.com/users/chronitis/followers",
      "following_url": "https://api.github.com/users/chronitis/following{/other_user}",
      "gists_url": "https://api.github.com/users/chronitis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chronitis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chronitis/subscriptions",
      "organizations_url": "https://api.github.com/users/chronitis/orgs",
      "repos_url": "https://api.github.com/users/chronitis/repos",
      "events_url": "https://api.github.com/users/chronitis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chronitis/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-13T14:01:10Z",
    "updated_at": "2014-08-13T14:01:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm working on this, but there are some tricky issues around multiple traits.\n\nThe above examples assume you don't do any mutation of the value provided to `_X_changed`, however, if like this case you want to validate new values against eg, min and max. This can lead to messy recursion since it doesn't appear possible to change multiple traits atomically without more callbacks being fired.\n\n```\nirsw = IntRangeSliderWidget(min=0, max=100, lower=25, upper=75)\nirsw.value = (5, 10)\ncalls _value_changed(new=(5, 10))\ncalls _upper_changed(new=10)\ncalls _lower_changed(new=5)\netc...\n```\n\nUnless we change the order of assignments each time, we may get a temporary invalid state `(lower=25, upper=10)`. This makes doing any validation difficult, since if a user had tried to manually set that state I would want to raise an error, but not if it is a intermediate state - this can be handled with a `updating` flag to stop any more validation occurring until the initial callback completes, but I can't stop any other watcher getting these intermediate states, which likely violate their assumptions and will cause errors.\n\nThis can be seen with the existing (non-range) slider widget, albeit in a slightly more contrived way:\n\n```\nisw = IntSliderWidget(min=0, max=100, value=50)\nisw.on_trait_change(watcher)\nisw.value = -5\n```\n\n`watcher` will be called first with `value=-5`, and then with `value=0` after `IntSliderWidget._validate` has run.\n\nIs there any way to either:\n- Catch a trait change before `HasTraits._notify_change` gets called, so the value can be modified without triggering multiple callbacks?\n- Declare a set of assignments atomic and suppress callbacks until they are all changed - perhaps like\n  \n  with traits.Atomic():\n      self.value = low, high\n      self.lower = low\n      self.upper = high\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/53035543",
    "html_url": "https://github.com/ipython/ipython/pull/6050#issuecomment-53035543",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6050",
    "id": 53035543,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDM1NTQz",
    "user": {
      "login": "chronitis",
      "id": 6874993,
      "node_id": "MDQ6VXNlcjY4NzQ5OTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/6874993?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chronitis",
      "html_url": "https://github.com/chronitis",
      "followers_url": "https://api.github.com/users/chronitis/followers",
      "following_url": "https://api.github.com/users/chronitis/following{/other_user}",
      "gists_url": "https://api.github.com/users/chronitis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chronitis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chronitis/subscriptions",
      "organizations_url": "https://api.github.com/users/chronitis/orgs",
      "repos_url": "https://api.github.com/users/chronitis/repos",
      "events_url": "https://api.github.com/users/chronitis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chronitis/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-22T08:27:31Z",
    "updated_at": "2014-08-22T08:27:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think this now meets the requirement of having both working `upper` and `lower` traits and retaining a `value` trait for use with `interact()`.\n\nThe most recent merge from master renames the relevant widgets to `Int` and `FloatRangeSlider`, following changes to all the other widgets.\n\n@jdfreder Should I provide `DeprecatedClass()` versions of these with the old naming like the other widgets for consistency? Otherwise, I think this is ready.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/53092908",
    "html_url": "https://github.com/ipython/ipython/pull/6050#issuecomment-53092908",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6050",
    "id": 53092908,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDkyOTA4",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-22T17:27:38Z",
    "updated_at": "2014-08-22T17:27:38Z",
    "author_association": "MEMBER",
    "body": "I think you should rename the `range` bool trait to `_range`, since modifying it can cause erroneous behavior.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/53197654",
    "html_url": "https://github.com/ipython/ipython/pull/6050#issuecomment-53197654",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6050",
    "id": 53197654,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMTk3NjU0",
    "user": {
      "login": "chronitis",
      "id": 6874993,
      "node_id": "MDQ6VXNlcjY4NzQ5OTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/6874993?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chronitis",
      "html_url": "https://github.com/chronitis",
      "followers_url": "https://api.github.com/users/chronitis/followers",
      "following_url": "https://api.github.com/users/chronitis/following{/other_user}",
      "gists_url": "https://api.github.com/users/chronitis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chronitis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chronitis/subscriptions",
      "organizations_url": "https://api.github.com/users/chronitis/orgs",
      "repos_url": "https://api.github.com/users/chronitis/repos",
      "events_url": "https://api.github.com/users/chronitis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chronitis/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-24T15:54:39Z",
    "updated_at": "2014-08-24T15:54:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "This should address all the issues above.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/53374710",
    "html_url": "https://github.com/ipython/ipython/pull/6050#issuecomment-53374710",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/6050",
    "id": 53374710,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMzc0NzEw",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-26T04:40:17Z",
    "updated_at": "2014-08-26T04:40:17Z",
    "author_association": "MEMBER",
    "body": "This looks great, thanks @chronitis !\n"
  }
]
