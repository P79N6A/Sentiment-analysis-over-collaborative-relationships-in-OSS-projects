[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2809195",
    "html_url": "https://github.com/ipython/ipython/issues/1021#issuecomment-2809195",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1021",
    "id": 2809195,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDkxOTU=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-20T22:58:48Z",
    "updated_at": "2011-11-20T22:58:48Z",
    "author_association": "MEMBER",
    "body": "Sounds good.  Ideally, we should add a few failing tests first by creating paths with spaces in a temp directory and calling completion on those.  Then we can actually fix this for good, so it doesn't come back to bite us again later.\n\nFor now, good thing to have it filed here, thanks.  I'll mark it tentatively for 0.13.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2978539",
    "html_url": "https://github.com/ipython/ipython/issues/1021#issuecomment-2978539",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1021",
    "id": 2978539,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5Nzg1Mzk=",
    "user": {
      "login": "jstenar",
      "id": 281420,
      "node_id": "MDQ6VXNlcjI4MTQyMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/281420?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jstenar",
      "html_url": "https://github.com/jstenar",
      "followers_url": "https://api.github.com/users/jstenar/followers",
      "following_url": "https://api.github.com/users/jstenar/following{/other_user}",
      "gists_url": "https://api.github.com/users/jstenar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jstenar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jstenar/subscriptions",
      "organizations_url": "https://api.github.com/users/jstenar/orgs",
      "repos_url": "https://api.github.com/users/jstenar/repos",
      "events_url": "https://api.github.com/users/jstenar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jstenar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-01T18:32:16Z",
    "updated_at": "2011-12-01T18:32:16Z",
    "author_association": "MEMBER",
    "body": "Another problem with tab-completion and paths on windows is that paths are case insensitive on windows and when a path is matched the case of the file on disk can replace the string at the prompt causing problems if there are variables around that should match the original string.\n\nexample:\nvariable in memory:  transition\n\nfile on disk: Transition_x, Transition_y\n\nIn[x]: tran<tab>\ncan give:\nIn[x]: Transition\n\nnow making the variable inaccessible\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2985287",
    "html_url": "https://github.com/ipython/ipython/issues/1021#issuecomment-2985287",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1021",
    "id": 2985287,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODUyODc=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-02T02:09:03Z",
    "updated_at": "2011-12-02T02:09:03Z",
    "author_association": "MEMBER",
    "body": "@jstenar, thanks for pointing that out.  That means that we should make absolutely sure that we filter out our matches list to respect the casing of what's been typed so far.    Furthermore, if the case difference is not on what's been typed already but on the completions themselves (think variable 'transition' and files 'tranSitionX' and 'tranSitionY'), then we should normalize the file completions list against the variable completions.  \n\nThis will be somewhat ugly code, because it introduces a coupling between two stages of the completion process that in principle should be independent, but they become dependent because the windows filesystem is retarded.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3643317",
    "html_url": "https://github.com/ipython/ipython/issues/1021#issuecomment-3643317",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1021",
    "id": 3643317,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDMzMTc=",
    "user": {
      "login": "mwiebe",
      "id": 399551,
      "node_id": "MDQ6VXNlcjM5OTU1MQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/399551?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mwiebe",
      "html_url": "https://github.com/mwiebe",
      "followers_url": "https://api.github.com/users/mwiebe/followers",
      "following_url": "https://api.github.com/users/mwiebe/following{/other_user}",
      "gists_url": "https://api.github.com/users/mwiebe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mwiebe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mwiebe/subscriptions",
      "organizations_url": "https://api.github.com/users/mwiebe/orgs",
      "repos_url": "https://api.github.com/users/mwiebe/repos",
      "events_url": "https://api.github.com/users/mwiebe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mwiebe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-25T00:02:57Z",
    "updated_at": "2012-01-25T00:02:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "A closely related issue is that the magic works without % with forward slashes, but chokes with backslashes:\n\n```\nIn [19]: cd d:/\nd:\\\n\nIn [20]: cd d:\\\n    ...: \n    ...: \n    ...:  blah\n  File \"<ipython-input-20-2e0cf40b1d2f>\", line 1\n    cd d:\\\n       ^\nSyntaxError: invalid syntax\n\nIn [21]: %cd d:\\\nd:\\\n```\n\nThis feels inconsistent to me.\n"
  }
]
