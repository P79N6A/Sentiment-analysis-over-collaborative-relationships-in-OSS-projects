[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3711664",
    "html_url": "https://github.com/ipython/ipython/pull/1343#issuecomment-3711664",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1343",
    "id": 3711664,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTE2NjQ=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-29T21:52:19Z",
    "updated_at": "2012-01-29T21:52:19Z",
    "author_association": "MEMBER",
    "body": "In particular, what should we do with the browser? A bit of searching suggests that we can't close a tab that we didn't open in Javascript. Should we render a simple page \"Thanks for using IPython Notebook. You can now close this tab.\"? (It's like Windows 95 all over again!)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3712060",
    "html_url": "https://github.com/ipython/ipython/pull/1343#issuecomment-3712060",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1343",
    "id": 3712060,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTIwNjA=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-29T22:39:12Z",
    "updated_at": "2012-01-29T22:39:12Z",
    "author_association": "MEMBER",
    "body": "Great start!  Some thoughts:\n- It needs a confirmation dialog, given how destructive it is.\n- I also think this shutdown action should be available from the file menu in each notebook.  Eventually we should be able to type\n\n`ipython notebook foo.ipynb`\n\nand be taken directly to that notebook page, without the dashboard being opened explicitly (it's always available though, just not shown).  I suspect that use pattern would feel very natural to people, since it would be almost like editing any other local file with a regular application.\n- Yes, the static shutdown page at the end should provide a message along the lines you indicate.  Perhaps with a logo that links to the main ipython.org page?  Just so it doesn't look so bland :)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3712813",
    "html_url": "https://github.com/ipython/ipython/pull/1343#issuecomment-3712813",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1343",
    "id": 3712813,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTI4MTM=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-30T00:26:23Z",
    "updated_at": "2012-01-30T00:26:23Z",
    "author_association": "MEMBER",
    "body": "Done the first of those things - I'll get to the others tomorrow. When the action can be invoked from either the dashboard or the notebook view, where's the best place to put the JS function for it?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3712951",
    "html_url": "https://github.com/ipython/ipython/pull/1343#issuecomment-3712951",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1343",
    "id": 3712951,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTI5NTE=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-30T00:46:35Z",
    "updated_at": "2012-01-30T00:46:35Z",
    "author_association": "MEMBER",
    "body": "Since this is still about managing the whole server, I think it should go into the dashboard code.  It's just that the notebooks have a few things that are in the dashboard view.  We have precedent: the new notebook action is also normally started from the dashboard, but we also expose it in each nb for convenience.  I think the shutdown falls in this same category.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3714634",
    "html_url": "https://github.com/ipython/ipython/pull/1343#issuecomment-3714634",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1343",
    "id": 3714634,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTQ2MzQ=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-30T05:11:01Z",
    "updated_at": "2012-01-30T05:11:01Z",
    "author_association": "MEMBER",
    "body": "(no direct bearing on this particular PR, but responding to above comment:)\n\n> `ipython notebook foo.ipynb`\n\nUltimately, when we decouple the notebook server from a single project directory, this command should actually just open the notebook window within an _existing_ notebook server (launching it only if one is not running).  The normal local use case should be that a user only ever runs a single notebook server, and everything they ever do goes through there.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3715101",
    "html_url": "https://github.com/ipython/ipython/pull/1343#issuecomment-3715101",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1343",
    "id": 3715101,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTUxMDE=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-30T06:26:27Z",
    "updated_at": "2012-01-30T06:26:27Z",
    "author_association": "MEMBER",
    "body": "Completely agreed, @minrk.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3728029",
    "html_url": "https://github.com/ipython/ipython/pull/1343#issuecomment-3728029",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1343",
    "id": 3728029,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjgwMjk=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-30T21:24:20Z",
    "updated_at": "2012-01-30T21:24:20Z",
    "author_association": "MEMBER",
    "body": "Ok, we've got a confirmation dialog, a shutdown page, a menu option in the notebook view. And a merge conflict. I'll rebase it.\n\nI added the dashboard JS file to the notebook, but doesn't that mean that the onready code from the dashboard is being invoked on the notebook page as well? Will that cause any problems?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3728112",
    "html_url": "https://github.com/ipython/ipython/pull/1343#issuecomment-3728112",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1343",
    "id": 3728112,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjgxMTI=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-30T21:28:41Z",
    "updated_at": "2012-01-30T21:28:41Z",
    "author_association": "MEMBER",
    "body": "Rebased.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3730042",
    "html_url": "https://github.com/ipython/ipython/pull/1343#issuecomment-3730042",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1343",
    "id": 3730042,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzAwNDI=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-30T23:15:00Z",
    "updated_at": "2012-01-30T23:15:00Z",
    "author_association": "MEMBER",
    "body": "I am -1 on having this in the notebook server.  The notebook is quickly moving in the direction of being a full multi-user web application.  In that context, it absolutely does not make sense to allow one user to shutdown the entire server.  I would even say this does not make sense for the existing single user app, given that multiple users can still connect.  It is a brutal and final action that will not only cause data loss for the user that clicks this button w/o understanding what it really does (what is the difference between killing a notebook and killing the server) but also for for every user.\n\nWe need to have some big design discussions at PyCon on how we are going to support both of the following usage cases:\n- Notebook as single user app that is lightweight.\n- Fullblown multiuser web site.\n\nUntil we do that I don't want to add things that wed us to the single user model.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3730560",
    "html_url": "https://github.com/ipython/ipython/pull/1343#issuecomment-3730560",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1343",
    "id": 3730560,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzA1NjA=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-30T23:47:32Z",
    "updated_at": "2012-01-30T23:47:32Z",
    "author_association": "MEMBER",
    "body": "On the other hand, I do think we need a way to stop the server besides having a terminal to hit Ctrl-C in. I don't see any way to do that without it being in the server itself.\n\nIt seems like we need some sort of 'admin' level of control in addition to the basic 'read-only'/interactive distinction we have at present. Starting the notebook locally would give you all rights. In a multiuser environment, an admin would also be able to manage users.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3730612",
    "html_url": "https://github.com/ipython/ipython/pull/1343#issuecomment-3730612",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1343",
    "id": 3730612,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzA2MTI=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-30T23:52:12Z",
    "updated_at": "2012-01-30T23:52:12Z",
    "author_association": "MEMBER",
    "body": "On Mon, Jan 30, 2012 at 3:47 PM, Thomas\nreply@reply.github.com\nwrote:\n\n> On the other hand, I do think we need a way to stop the server besides having a terminal to hit Ctrl-C in. I don't see any way to do that without it being in the server itself.\n\nI guess I think that killing the notebook is so brutal, we want for\nforce people back to the terminal to carry it out.  On the other\nhand....\n\n> It seems like we need some sort of 'admin' level of control in addition to the basic 'read-only'/interactive distinction we have at present. Starting the notebook locally would give you all rights. In a multiuser environment, an admin would also be able to manage users.\n\nYes, if we have the notion of admin users, I would be fine with an\nadmin interface having the ability to kill the notebook server\nentirely.  I think this is the direction we are headed in.\n\n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/1343#issuecomment-3730560\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/3730712",
    "html_url": "https://github.com/ipython/ipython/pull/1343#issuecomment-3730712",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1343",
    "id": 3730712,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzA3MTI=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-30T23:58:50Z",
    "updated_at": "2012-01-30T23:58:50Z",
    "author_association": "MEMBER",
    "body": "If we run the notebook as a daemon (e.g. `ipython notebook /path/to/stuff` opens up a project/notebook page and returns immediately), then we would be able to have things like `ipython notebook stop`.  We need to implement all of the stuff required for a single notebook server instance to fulfill a user's needs:\n- specify kernel launch arguments from the web interface (most commonly pylab/not)\n- different arguments per kernel\n- navigate filesystem to some degree\n- decouple notebook server from single project so it can serve multiple projects at once\n- reliable URLs from file paths\n\nBut I agree that since this is the direction we are going, shutdown from the web interface (other than possible admin panel) is probably not a good idea.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4135265",
    "html_url": "https://github.com/ipython/ipython/pull/1343#issuecomment-4135265",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1343",
    "id": 4135265,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzUyNjU=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-23T12:15:38Z",
    "updated_at": "2012-02-23T12:15:38Z",
    "author_association": "MEMBER",
    "body": "OK, closing this since we're not going to do it this way.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4144946",
    "html_url": "https://github.com/ipython/ipython/pull/1343#issuecomment-4144946",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1343",
    "id": 4144946,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDQ5NDY=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-23T20:51:17Z",
    "updated_at": "2012-02-23T20:51:17Z",
    "author_association": "MEMBER",
    "body": "Mmh, I'd still like to think about this for a minute.  The current situation is really highly sub-optimal, and I actually think that a web shutdown with confirmation dialog is _better_ than the Ctrl-C in a terminal. \n\nBrian mentions it's such a brutal action that he wants people to have to go to a terminal to do it, but the problem is that you can do that _accidentally_.  It's easy to have the wrong window focused and hit Ctrl-C, killing every single kernel you have open, whereas a button that triggers a confirmation dialog before shutdown is actually _safer_.  This form of accidental shutdown has only happened once to me so far ever and it was a trivial test notebook, so I didn't care.  But I can see a user easily thinking they're doing Ctrl-C for 'copy' and accidentally shutting down a notebook with a ton of important kernels open.  Keep in mind that Ctrl-C in a terminal offers no confirmation or way to back off the action, so the current situation is actually worse and less safe than what this PR offers.\n\nFurthermore, having this shutdown button in the main page makes it possible to have a sensible GUI terminal-less launcher, which right now can't really be done because there's no way to sensible shut down the process  started by the GUI launcher.  But with this, we could include for Windows users an 'IPython notebook' Start menu entry, and Mac users could use one of the AppleScript examples that are floating on the net for IPython Qt console starting.\n\nI'm all for a long-term elegant solution with a full admin panel, but I still think this _fixes_ a serious, important limitation we have right now, and doesn't introduce any problems whatsoever.  So I'd like to see this moving forward... \n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4147621",
    "html_url": "https://github.com/ipython/ipython/pull/1343#issuecomment-4147621",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1343",
    "id": 4147621,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDc2MjE=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-23T23:01:18Z",
    "updated_at": "2012-02-23T23:01:18Z",
    "author_association": "MEMBER",
    "body": "OK, reopened. I did put a confirmation dialog in, so feel free to check this out and test. I guess we'll just need to find a way to disable/hide the button under certain conditions.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4162062",
    "html_url": "https://github.com/ipython/ipython/pull/1343#issuecomment-4162062",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1343",
    "id": 4162062,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjIwNjI=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-24T18:18:24Z",
    "updated_at": "2012-02-24T18:18:24Z",
    "author_association": "MEMBER",
    "body": "I am still strongly -1 on this.  Let continue the discussion at PyCon/PyData.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/4162184",
    "html_url": "https://github.com/ipython/ipython/pull/1343#issuecomment-4162184",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1343",
    "id": 4162184,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjIxODQ=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-24T18:24:23Z",
    "updated_at": "2012-02-24T18:24:23Z",
    "author_association": "MEMBER",
    "body": "Sure.  I really think what we have is effectively broken and that this is at least a first step in the right direction, but I'd love to understand your reasons.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5205769",
    "html_url": "https://github.com/ipython/ipython/pull/1343#issuecomment-5205769",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1343",
    "id": 5205769,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMDU3Njk=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-18T18:46:31Z",
    "updated_at": "2012-04-18T18:46:31Z",
    "author_association": "MEMBER",
    "body": "We never got to discussing this at PyCon, so let's continue here.\n\nFernando you argue for this capability using the current fact that using Ctrl-C it is currently too easy to accidentally kill the notebook and all its kernels.  These are two completely separate issues.  We should fix the Ctrl-C issue by allowing the notebook to run as a daemon as Min suggests earlier in this thread.  But that has no bearing on whether or not we allow users to kill everything from the browser.  Running the notebook as a daemon will also allow us to build GUI launchers and the \"ipython notebook mynb.ipynb\" syntax without worrying about adding the kill button in the notebook web UI.\n\nHere is my thinking about this:\n- Whether we like it or not, the notebook is a multiuser server not a single user application.\n- Multiuser servers should only be started and stopped by a very special person that has appropriate access/privs.\n- Until we can distinguish who has such access/privs, we should not expose this capability in the browser.\n- The eventual implementation will have to be tightly integrated with how access/privs are exposed in the notebook web app.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5211363",
    "html_url": "https://github.com/ipython/ipython/pull/1343#issuecomment-5211363",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1343",
    "id": 5211363,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMTEzNjM=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-18T23:20:42Z",
    "updated_at": "2012-04-18T23:20:42Z",
    "author_association": "MEMBER",
    "body": "The Ctrl-C problem was largely remedied in the recent merge of #1609,\nwhich now at least asks the user for confirmation.  So at least on\nthat front we're in better shape now, and I'm not worried about a\nstray C-C in the wrong window nuking 10 long-running notebooks for\nsome unsuspecting user.\n\nOn Wed, Apr 18, 2012 at 11:46 AM, Brian E. Granger\nreply@reply.github.com\nwrote:\n\n> - Whether we like it or not, the notebook is a multiuser server not a single user application.\n\nWell, the _current_ notebook isn't really a multiuser application at\nall.  It's a single user application that allows a second user to join\nin with the privileges of the first user, just like a shared\nscreen/tmux session works.  There is still only one user.\n\n> - Multiuser servers should only be started and stopped by a very special person that has appropriate access/privs.\n> - Until we can distinguish who has such access/privs, we should not expose this capability in the browser.\n> - The eventual implementation will have to be tightly integrated with how access/privs are exposed in the notebook web app.\n\nMy reasoning is that, until we have a _true_ multiuser notebook,\nadding a simple 'shutdown' widget is a very small price to pay for a\nsignificant usability improvement.  I realize some of this will have\nto get reworked once there's a full-blown multiuser notebook in place,\nbut what we have _now_ is terrible usability.\n\nAnd since it would only require adding a small amount of code that is\nnot _API_, I'm not worried about this enshrining the 'wrong' pattern\nin our code.  This feature can be completely removed once a multiuser\nsystem with daemon features and multidirectory support exists, and we\ndon't have to worry about any API breakage, as none of this needs to\nbe publicly exposed.\n\nI think that we can, at very little cost today, provide a massive\nimprovement in usability.  Users already love the notebook, they'll\nlove it even more when they can double-click on their files and stop\nthings cleanly, I'm sure.\n\nAnd when we do have the full multiuser app running, none of this will\ncause any problems in removal.  I simply think we're doing a\ndisservice to the users by blocking the implementation of something\ngenuinely useful and that solves their problem today on the argument\nthat it's slightly inelegant against a design brief that is months\ninto the future.  And I'd agree 100% with your arguments if the 'hack\nof today' meant blocking doing the right thing later.  But in this\ncase that won't happen, the quick hack can be removed later at no\npain, and in the meantime it will have made many people happy.\n\nThink of it this way: IPython itself was a hack without clean\narchitecture until the 2009 cleanup.  Would you have me rather not\nhave written IPython at the start because I couldn't do it cleanly? :)\n\nIf you show me an argument why implementing this today will be a\n_problem_ in the future, I'll be happy to go along. But I haven't seen\na valid argument in that direction so far.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5218220",
    "html_url": "https://github.com/ipython/ipython/pull/1343#issuecomment-5218220",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1343",
    "id": 5218220,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMTgyMjA=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-19T09:53:38Z",
    "updated_at": "2012-04-19T09:53:38Z",
    "author_association": "MEMBER",
    "body": "In support of Fernando's claim that a shutdown button would improve\nusability today: I recently answered a question on SO from a user who\nwas using Ctrl+C but felt that he must be missing a way to close it\n'properly'.\n\nhttp://stackoverflow.com/questions/10162707/how-to-close-ipython-notebook-properly\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5865012",
    "html_url": "https://github.com/ipython/ipython/pull/1343#issuecomment-5865012",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1343",
    "id": 5865012,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjUwMTI=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-23T04:36:28Z",
    "updated_at": "2012-05-23T04:36:28Z",
    "author_association": "MEMBER",
    "body": "I am in favor of closing this PR.  Maybe @fperez and I can arm wrestle over it...or hash it out on Skype sometime...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5865356",
    "html_url": "https://github.com/ipython/ipython/pull/1343#issuecomment-5865356",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1343",
    "id": 5865356,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjUzNTY=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-23T05:13:22Z",
    "updated_at": "2012-05-23T05:13:22Z",
    "author_association": "MEMBER",
    "body": "Well, there are two questions: (i) do we want the feature at all, and (ii) is this PR the right implementation?\n\nI still hold firm on my comment above: we're doing a huge disservice to our users by not providing a feature that:\n- would help things tremendously in usability today\n- is tiny and can easily be changed later if the overall design goes in a different direction.\n\nTelling users \"things will be different sometime in the future, so deal with a sucky UI until we figure that out\" isn't a good solution.\n\nI simply don't see what the problem is: low cost, huge benefit, easy to change later... Practicality _has_ to beat purity sometimes...\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5913035",
    "html_url": "https://github.com/ipython/ipython/pull/1343#issuecomment-5913035",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1343",
    "id": 5913035,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTMwMzU=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-24T17:53:24Z",
    "updated_at": "2012-05-24T17:53:24Z",
    "author_association": "MEMBER",
    "body": "On Tue, May 22, 2012 at 10:13 PM, Fernando Perez\nreply@reply.github.com\nwrote:\n\n> Well, there are two questions: (i) do we want the feature at all, and (ii) is this PR the right implementation?\n\nI agree these are important questions, but I think our disagreement\ncomes from a more fundamental question: is the notebook a single user\napplication or a multiuser web application.  To this question, I\nanswer that it is a multiuser web application.  While you can\nsemi-fake it into looking like a single user application by only\nlistening on localhost, the entire design, from the ground up is that\nof a web application.  As we add the notion of users that can manage\ntheir own notebooks and kernels, this aspect will only become more\napparent.\n\nMy opposition to this feature is rooted in this model.  It is of\npractical relevance.   Let's say we add the shutdown button right now.\n This summer or shortly thereafter, I am hoping to make the notebook\nfully multiuser.  I will immediately have to answer the question \"to\nwhom should the shutdown button appear?\"  Surely the answer is not all\nusers.  That would be insanity.  But to only show the shutdown button\nto some users, everything is made much more complex.  We have to have\nthe notion of \"superusers\" and develop all server side and JavaScript\nlogic and UIs to support that.   This will slow and complexify the\ndevelopment of the multiuser notebook - I am not willing to pay that\nprice.  Part of what allows me to develop the notebook quickly is the\nlack of baggage.  Everything is brand new so we can change almost\nanything at any time without worrying about breaking features that\npeople have been using features for years.  Obviously, as the Notebook\nmatures, we slowly loose that freedom (we already need to make changes\nto the notebook format very carefully for example), but I remain very\nweary of adding anything that I know will have to be removed later.\n\nFurthermore, I would argue that in a multiuser notebook, it simply\ndoesn't make sense for any single user to kill everything from the web\nbrowser.  The only person who should be able to kill everything should\nbe _required_ to have ssh access to the host where the notebook was\nstarted.\n\n> I still hold firm on my comment above: we're doing a huge disservice to our users by not providing a feature that:\n> - would help things tremendously in usability today\n> - is tiny and can easily be changed later if the overall design goes in a different direction.\n> \n> Telling users \"things will be different sometime in the future, so deal with a sucky UI until we figure that out\" isn't a good solution.\n> \n> I simply don't see what the problem is: low cost, huge benefit, easy to change later... Practicality _has_ to beat purity sometimes...\n\nI feel like I am being extremely practical by not wanting to add\nsomething I know will slow future notebook development down.\n\nBut my sense is that our arguments are missing each other at a\nfundamental level - that we have differing base assumptions about the\nnotebook that are the real point of impasse.\n\n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/1343#issuecomment-5865356\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5916100",
    "html_url": "https://github.com/ipython/ipython/pull/1343#issuecomment-5916100",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1343",
    "id": 5916100,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTYxMDA=",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-24T20:03:14Z",
    "updated_at": "2012-05-24T20:03:14Z",
    "author_association": "MEMBER",
    "body": "How would you like to make the notebook multi-user aware ? If you spawn a process with the logged  user ID that act as the webserver only for this user, then it makes sens to shutdown this webserver, the Master Server that deal with redirecting each user would only be controllable by admins.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5916870",
    "html_url": "https://github.com/ipython/ipython/pull/1343#issuecomment-5916870",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1343",
    "id": 5916870,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTY4NzA=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-24T20:36:12Z",
    "updated_at": "2012-05-24T20:36:12Z",
    "author_association": "MEMBER",
    "body": "@ellisonbg I don't really see how having this shutdown available in the current UI impedes developing the multi-user model with an admin panel.  That development should just take place as if this functionality simply doesn't exist, and then once it's in place, this should just be deleted.\n\n@Carreau - there will not be several servers, one for each user.  There will be _one_ multi-user notebook server, and the user would own their notebooks and kernels.  Thus, only admins would be able to shutdown the notebook server.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5918037",
    "html_url": "https://github.com/ipython/ipython/pull/1343#issuecomment-5918037",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1343",
    "id": 5918037,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTgwMzc=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-24T21:24:27Z",
    "updated_at": "2012-05-24T21:24:27Z",
    "author_association": "MEMBER",
    "body": "Let me approach this from a different perspective.\n\nImagine that I own a house.  It is within my right to destroy me house and there are many valid reasons why I might want to do that (remodel, termite infested, asbestos, etc.).  But, destroying my house is somewhat difficult.  I have to hire contractors or rent equipment, I have to make plans to move all of my stuff out of the house, I have to find somewhere else to live in the meantime.  Now imagine if I decided to put a big red button by the front door that said \"DESTROY THIS HOUSE\" and I wired up the button to explosives that would instantly level the house.  You would say I say I was crazy.  You would say that destroying a house _should_ be difficult.  You would say that it was really dangerous, that accidents happen.  What if someone bumped it.  What if a young child pushed the button.  What if it was pushed by accident when there was a party going on - many people would be killed and I would loose all my belonging.  Even if I put safety measures in place (made it difficult to push, asked for user confirmation) you would still say the button makes to too easy to destroy the house.\n\nThe shutdown button, even with safety measures put into place, is analogous to this.  The entire conceptual foundation of the button (make it easy to shutdown the notebook server) is problematic.  I can think of multiple scenarios where such a button could be pushed by accident (new user who is confused, young children pushing buttons on the computer randomely, etc.).  If the notebook were purely a single user application, then it is not a big deal.  An accidental shutdown affects just that user and is no different from killing it at the terminal by mistake.  But when there are multiple users in the picture, there is the risk of serious problems.  What if I was using that notebook server for a big presentation at the time you killed it?  What if a number of users had unsaved work or had performed a time consuming computation?\n\nI simple don't understand why would would want to open the door for these possibilities.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5918105",
    "html_url": "https://github.com/ipython/ipython/pull/1343#issuecomment-5918105",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1343",
    "id": 5918105,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTgxMDU=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-24T21:27:08Z",
    "updated_at": "2012-05-24T21:27:08Z",
    "author_association": "MEMBER",
    "body": "@minrk You are right that the shutdown button doesn't _preclude_ the multiuser notebook having an admin panel.  But that is my point - the shutdown button _requires_ that the multiuser notebook have an admin panel, which is not something I want to commit to starting out.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5918222",
    "html_url": "https://github.com/ipython/ipython/pull/1343#issuecomment-5918222",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1343",
    "id": 5918222,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTgyMjI=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-24T21:31:57Z",
    "updated_at": "2012-05-24T21:31:57Z",
    "author_association": "MEMBER",
    "body": "@ellisonbg: While the long-term design may be for a multi-user server,\nat present the default mode is a single-user application, and I\nimagine that's how most of our users are running it. In that context,\nthe shutdown button makes a lot of sense, and it seems odd to deny\nusers that feature because of our future plans.\n\nAlso, when we do add a multi-user mode, I imagine we will still want a\nsingle-user mode similar to what we have today - using it as a local\napplication is working nicely for many people, and we don't want to\npush added complexity onto them. So, for the first pass, we can show\nthe shutdown button only when it's running in single-user mode. In the\nmulti-user mode, the button wouldn't be there at all, so there's no\nneed for the added complexity of an admin panel.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5918469",
    "html_url": "https://github.com/ipython/ipython/pull/1343#issuecomment-5918469",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1343",
    "id": 5918469,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTg0Njk=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-24T21:44:52Z",
    "updated_at": "2012-05-24T21:44:52Z",
    "author_association": "MEMBER",
    "body": "On Thu, May 24, 2012 at 2:24 PM, Brian E. Granger\nreply@reply.github.com\nwrote:\n\n> But when there are multiple users in the picture, there is the risk of serious problems.\n\nBut that is the heart of the current discussion: there are **NO**\nmultiple users in the picture, period.  The current notebook is very\nmuch a single user application, that runs with the privileges of the\ninvoking user and executes all code as that user.\n\nNow, we _want_ a proper multiuser system eventually, that will launch\nindividual kernels on behalf of users, I totally agree.  But that\ndoesn't exist today.\n\nThe position we are taking is that adding a shutdown mechanism to the\nnotebook as it exists _today_ is both very useful and logically\nconsistent.\n\nAnd additionally, that it doesn't impose any burden on the future:\nwhen we build proper multiuser capabilities, the central notebook\nserver will certainly not be able to be shutdown by any random user\nthat is logged in...\n\nI totally understand your concern in terms of the long-term plans, but\nI think that the point I'm advocating (along with @minrk, @takluyver\nand @Carreau) is that _today_ we can improve things significantly\nwithout any long-term cost or problems.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5918487",
    "html_url": "https://github.com/ipython/ipython/pull/1343#issuecomment-5918487",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1343",
    "id": 5918487,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTg0ODc=",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-24T21:45:38Z",
    "updated_at": "2012-05-24T21:45:38Z",
    "author_association": "MEMBER",
    "body": "On Thu, May 24, 2012 at 2:31 PM, Thomas Kluyver\nreply@reply.github.com\nwrote:\n\n> @ellisonbg: While the long-term design may be for a multi-user server,\n> at present the default mode is a single-user application, and I\n> imagine that's how most of our users are running it. In that context,\n> the shutdown button makes a lot of sense, and it seems odd to deny\n> users that feature because of our future plans.\n\nBut many of us run the notebook on the web today and allow multiple\nusers to log into it.\n\n> Also, when we do add a multi-user mode, I imagine we will still want a\n> single-user mode similar to what we have today - using it as a local\n> application is working nicely for many people, and we don't want to\n> push added complexity onto them. So, for the first pass, we can show\n> the shutdown button only when it's running in single-user mode. In the\n> multi-user mode, the button wouldn't be there at all, so there's no\n> need for the added complexity of an admin panel.\n\nIt is not clear what all of this will look like when the notebook\nbecomes multiuser.  I am hoping that 1) there is no \"added complexity\"\nfor running in multiuser mode and that 2) there is no distinction\nbetween single user and multiuser modes.  What I want to avoid is\nhaving:\n\nif multiuser_mode:\n    ...\nelif singleuser_mode:\n    ...\n\nThroughout the code base.  We are already seeing this exact type of\ncomplexity in the notebook in terms of tracking things like read_only\nmode, authenticated vs guest, etc.  One of the big challenges with the\nmultiuser notebook will be in identifying the minimal set of \"modes\"\nthat each page has to know about.  What about read_only, single_user,\nnon_authenticated mode?  Should the button appear then?  In addition\nto the existing modes we will need to add new ones to enable sharing\nof notebooks.  I am trying to be very conservative about these things\nbecause I see an exponential complexity emerging.\n\n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/pull/1343#issuecomment-5918222\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\nbgranger@calpoly.edu and ellisonbg@gmail.com\n"
  }
]
