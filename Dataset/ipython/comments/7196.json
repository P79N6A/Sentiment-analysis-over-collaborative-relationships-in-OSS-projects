[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/66801527",
    "html_url": "https://github.com/ipython/ipython/pull/7196#issuecomment-66801527",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7196",
    "id": 66801527,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2ODAxNTI3",
    "user": {
      "login": "ccordoba12",
      "id": 365293,
      "node_id": "MDQ6VXNlcjM2NTI5Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/365293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ccordoba12",
      "html_url": "https://github.com/ccordoba12",
      "followers_url": "https://api.github.com/users/ccordoba12/followers",
      "following_url": "https://api.github.com/users/ccordoba12/following{/other_user}",
      "gists_url": "https://api.github.com/users/ccordoba12/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ccordoba12/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ccordoba12/subscriptions",
      "organizations_url": "https://api.github.com/users/ccordoba12/orgs",
      "repos_url": "https://api.github.com/users/ccordoba12/repos",
      "events_url": "https://api.github.com/users/ccordoba12/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ccordoba12/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-12T17:03:17Z",
    "updated_at": "2014-12-12T17:03:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "Could you point to a code example that used the old behavior?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/66804766",
    "html_url": "https://github.com/ipython/ipython/pull/7196#issuecomment-66804766",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7196",
    "id": 66804766,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2ODA0NzY2",
    "user": {
      "login": "bfredl",
      "id": 1363104,
      "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1363104?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfredl",
      "html_url": "https://github.com/bfredl",
      "followers_url": "https://api.github.com/users/bfredl/followers",
      "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
      "organizations_url": "https://api.github.com/users/bfredl/orgs",
      "repos_url": "https://api.github.com/users/bfredl/repos",
      "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfredl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-12T17:25:51Z",
    "updated_at": "2014-12-12T17:25:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sure, [here](https://github.com/bfredl/nvim-ipy/blob/master/rplugin/python/nvim_ipy.py) is a (work in progress) Neovim frontend ( even more WIP ipy3-dev port [here](https://github.com/bfredl/nvim-ipy/blob/ipy3/rplugin/python/nvim_ipy.py) ). It is based on/similar to ivanov/vim-ipython , expect that communication between Neovim and the kernel is asynchronous. The code is a bit messy, but here is the part connecting to the client:\n\n```\nclass IPythonVimApp(BaseIPythonApplication, IPythonConsoleApp):\n    kernel_client_class = KernelClient\n    if ipy3:\n        kernel_client_class = AsyncKernelClient\n    kernel_manager_class = RedirectingKernelManager\n    def init_kernel_client(self):\n        self.kernel_client = self.kernel_manager.client()\n        self.kernel_client.shell_channel.call_handlers = self.target.on_shell_msg\n        self.kernel_client.iopub_channel.call_handlers = self.target.on_iopub_msg\n        self.kernel_client.stdin_channel.call_handlers = self.target.on_stdin_msg\n        self.kernel_client.hb_channel.call_handlers = self.target.on_hb_msg\n        self.kernel_client.start_channels()\n\n    def initialize(self, target, argv):\n        self.target = target\n        super(IPythonVimApp, self).initialize(argv)\n        IPythonConsoleApp.initialize(self, argv)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/67378479",
    "html_url": "https://github.com/ipython/ipython/pull/7196#issuecomment-67378479",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7196",
    "id": 67378479,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3Mzc4NDc5",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-17T19:29:32Z",
    "updated_at": "2014-12-17T19:29:32Z",
    "author_association": "MEMBER",
    "body": "Thanks, I like this approach - it reintroduces the important bit of flexibility from the old design, but with very minimal extra complexity added to the current state.\n\nI do want to think a bit more about the name. There's more than one way to build an async kernel client, and this is rather the quick and dirty way. The more elegant approach would be to integrate the ZMQ sockets into the application's own event loop. Maybe `ThreadedKernelClient`, but that still seems a bit misleading, because ZMQ runs its own C-level threads to send and receive messages*, so any ZMQ client is threaded.\n\n(*this makes our ioloop thread completely redundant: ZMQ is doing the same thing internally, reading from sockets in a thread and making callbacks when a message is ready.)\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/67378923",
    "html_url": "https://github.com/ipython/ipython/pull/7196#issuecomment-67378923",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7196",
    "id": 67378923,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3Mzc4OTIz",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-17T19:32:14Z",
    "updated_at": "2014-12-17T19:32:14Z",
    "author_association": "MEMBER",
    "body": "> The only (intended) \"semantical\" change is that _check_kernel_info_client is moved outside call_handlers (so that subclasses don't need to care about this), but I don't know the exact purpose this have\n\nThe special handling of kernel_info_reply is so that the client can work with kernels that don't speak the newest version of the protocol. It makes a kernel info request when the kernel starts, and the reply tells it what version of the protocol the kernel is using. The client can then translate between the protocol the kernel uses and the protocol the client expects.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/67416872",
    "html_url": "https://github.com/ipython/ipython/pull/7196#issuecomment-67416872",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7196",
    "id": 67416872,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NDE2ODcy",
    "user": {
      "login": "bfredl",
      "id": 1363104,
      "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1363104?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfredl",
      "html_url": "https://github.com/bfredl",
      "followers_url": "https://api.github.com/users/bfredl/followers",
      "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
      "organizations_url": "https://api.github.com/users/bfredl/orgs",
      "repos_url": "https://api.github.com/users/bfredl/repos",
      "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfredl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-17T23:31:35Z",
    "updated_at": "2014-12-17T23:31:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thank you for your comments. I would say `ThreadedKernelClient` is quite good, because this solution implies that application-level code will run in a separate thread (and must handle thread-safety).  AFAIK no callbacks is done inside the internal worker thread of ZMQ into user code (but correct me if I'm wrong), so in the \"elegant\" solution there could potentially be only one thread running application code.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/67481681",
    "html_url": "https://github.com/ipython/ipython/pull/7196#issuecomment-67481681",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7196",
    "id": 67481681,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NDgxNjgx",
    "user": {
      "login": "bfredl",
      "id": 1363104,
      "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1363104?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfredl",
      "html_url": "https://github.com/bfredl",
      "followers_url": "https://api.github.com/users/bfredl/followers",
      "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
      "organizations_url": "https://api.github.com/users/bfredl/orgs",
      "repos_url": "https://api.github.com/users/bfredl/repos",
      "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfredl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-18T12:52:13Z",
    "updated_at": "2014-12-18T12:52:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "Updated: renamed to Threaded\\* and added comments about thread-safety of kernel-info reply.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/67567784",
    "html_url": "https://github.com/ipython/ipython/pull/7196#issuecomment-67567784",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7196",
    "id": 67567784,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NTY3Nzg0",
    "user": {
      "login": "bfredl",
      "id": 1363104,
      "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1363104?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfredl",
      "html_url": "https://github.com/bfredl",
      "followers_url": "https://api.github.com/users/bfredl/followers",
      "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
      "organizations_url": "https://api.github.com/users/bfredl/orgs",
      "repos_url": "https://api.github.com/users/bfredl/repos",
      "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfredl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-18T22:23:58Z",
    "updated_at": "2014-12-18T22:23:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, done\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/67568192",
    "html_url": "https://github.com/ipython/ipython/pull/7196#issuecomment-67568192",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7196",
    "id": 67568192,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NTY4MTky",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-18T22:26:41Z",
    "updated_at": "2014-12-18T22:26:41Z",
    "author_association": "MEMBER",
    "body": "Thanks. Once Travis has checked it again, I'll hit the merge button.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/67570764",
    "html_url": "https://github.com/ipython/ipython/pull/7196#issuecomment-67570764",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7196",
    "id": 67570764,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NTcwNzY0",
    "user": {
      "login": "bfredl",
      "id": 1363104,
      "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1363104?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfredl",
      "html_url": "https://github.com/bfredl",
      "followers_url": "https://api.github.com/users/bfredl/followers",
      "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
      "organizations_url": "https://api.github.com/users/bfredl/orgs",
      "repos_url": "https://api.github.com/users/bfredl/repos",
      "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfredl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-18T22:46:56Z",
    "updated_at": "2014-12-18T22:46:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "There seems to be a name conflict on 2.7 about `zmq`, after moving the module. Should I `from __future__ import absolute_import` ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/67571460",
    "html_url": "https://github.com/ipython/ipython/pull/7196#issuecomment-67571460",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7196",
    "id": 67571460,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NTcxNDYw",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-18T22:52:58Z",
    "updated_at": "2014-12-18T22:52:58Z",
    "author_association": "MEMBER",
    "body": "Good catch, and I completely agree with your fix.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/67573901",
    "html_url": "https://github.com/ipython/ipython/pull/7196#issuecomment-67573901",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7196",
    "id": 67573901,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NTczOTAx",
    "user": {
      "login": "bfredl",
      "id": 1363104,
      "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1363104?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfredl",
      "html_url": "https://github.com/bfredl",
      "followers_url": "https://api.github.com/users/bfredl/followers",
      "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
      "organizations_url": "https://api.github.com/users/bfredl/orgs",
      "repos_url": "https://api.github.com/users/bfredl/repos",
      "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfredl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-18T23:13:07Z",
    "updated_at": "2014-12-18T23:13:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks, now it passes.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/67574377",
    "html_url": "https://github.com/ipython/ipython/pull/7196#issuecomment-67574377",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/7196",
    "id": 67574377,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NTc0Mzc3",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-18T23:17:38Z",
    "updated_at": "2014-12-18T23:17:38Z",
    "author_association": "MEMBER",
    "body": "Great, thank-you!\n"
  }
]
