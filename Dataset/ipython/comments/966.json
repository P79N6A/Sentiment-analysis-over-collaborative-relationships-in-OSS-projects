[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2609991",
    "html_url": "https://github.com/ipython/ipython/issues/966#issuecomment-2609991",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/966",
    "id": 2609991,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDk5OTE=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-02T21:28:35Z",
    "updated_at": "2011-11-02T21:28:35Z",
    "author_association": "MEMBER",
    "body": "It would appear that it's resolving `ctypes.wintypes.HANDLE` to `ctypes.HANDLE`.  That's quite odd.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5337652",
    "html_url": "https://github.com/ipython/ipython/issues/966#issuecomment-5337652",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/966",
    "id": 5337652,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMzc2NTI=",
    "user": {
      "login": "bfroehle",
      "id": 204333,
      "node_id": "MDQ6VXNlcjIwNDMzMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/204333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bfroehle",
      "html_url": "https://github.com/bfroehle",
      "followers_url": "https://api.github.com/users/bfroehle/followers",
      "following_url": "https://api.github.com/users/bfroehle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bfroehle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bfroehle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bfroehle/subscriptions",
      "organizations_url": "https://api.github.com/users/bfroehle/orgs",
      "repos_url": "https://api.github.com/users/bfroehle/repos",
      "events_url": "https://api.github.com/users/bfroehle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bfroehle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-25T17:56:15Z",
    "updated_at": "2012-04-25T17:56:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Can you try this again with the newest IPython source?  `dreload` was mostly re-written and it might solve your problem.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/5339105",
    "html_url": "https://github.com/ipython/ipython/issues/966#issuecomment-5339105",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/966",
    "id": 5339105,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMzkxMDU=",
    "user": {
      "login": "buchs-kevin",
      "id": 1165194,
      "node_id": "MDQ6VXNlcjExNjUxOTQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1165194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/buchs-kevin",
      "html_url": "https://github.com/buchs-kevin",
      "followers_url": "https://api.github.com/users/buchs-kevin/followers",
      "following_url": "https://api.github.com/users/buchs-kevin/following{/other_user}",
      "gists_url": "https://api.github.com/users/buchs-kevin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/buchs-kevin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/buchs-kevin/subscriptions",
      "organizations_url": "https://api.github.com/users/buchs-kevin/orgs",
      "repos_url": "https://api.github.com/users/buchs-kevin/repos",
      "events_url": "https://api.github.com/users/buchs-kevin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/buchs-kevin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-25T18:53:14Z",
    "updated_at": "2012-04-25T18:53:14Z",
    "author_association": "NONE",
    "body": "I checked out the latest 0.13, and tried the dreload command. I got this error:\n\nIn [19]: import AmDevice\nIn [20]: dreload AmDevice\n  File \"<ipython-input-20-51ebe30e699a>\", line 1\n    dreload AmDevice\n                   ^\nSyntaxError: invalid syntax\nIn [21]: import sys\nIn [22]: dreload sys\n  File \"<ipython-input-22-5dd3b6ab21b8>\", line 1\n    dreload sys\n              ^\nSyntaxError: invalid syntax\n\nNow, it must be a tiny bug that is generating that error, as this syntax worked:  dreload(sys,[])\n\nMy local module AmDevice generated an error and I'm not sure what to think about that. \n\nIn [29]: dreload(AmDevice,[])\nReloading **future**\nReloading sys\nReloading struct\nReloading _struct\nReloading time\nReloading array\nReloading Queue\nReloading threading\nReloading thread\nReloading warnings\nReloading linecache\nReloading os\nReloading errno\nReloading nt\nReloading ntpath\nReloading stat\nReloading genericpath\nReloading os.path\nReloading dummy_threading\nReloading dummy_thread\nReloading traceback\nReloading types\nReloading threading\nReloading collections\nReloading _abcoll\nReloading abc\nReloading _weakrefset\nReloading _weakref\nReloading _collections\nReloading operator\nReloading keyword\nReloading heapq\nReloading itertools\nReloading bisect\nReloading _bisect\nReloading _heapq\nReloading re\nReloading sre_compile\nReloading _sre\nReloading sre_parse\nReloading sre_constants\nReloading copy_reg\nReloading _threading_local\n\n## Reloading _dummy_threading\n\nImportError                               Traceback (most recent call last)\nh:\\src\\python\\iPython\\ipython13\\dist\\bmpd\\device<ipython-input-29-811c8cd67921> in <module>()\n----> 1 dreload(AmDevice,[])\n\nh:\\src\\python\\iPython\\ipython13\\dist\\bmpd\\device\\IPython\\lib\\deepreload.py in reload(module, exclude)\n    329     try:\n    330         with replace_import_hook(deep_import_hook):\n--> 331             ret = deep_reload_hook(module)\n    332     finally:\n    333         found_now = {}\n\nh:\\src\\python\\iPython\\ipython13\\dist\\bmpd\\device\\IPython\\lib\\deepreload.py in deep_reload_hook(m)\n    299\n    300     try:\n--> 301         newm = imp.load_module(name, fp, filename, stuff)\n    302     except:\n    303          # load_module probably removed name from modules because of\n\nh:\\src\\python\\iPython\\ipython13\\dist\\bmpd\\device\\AmDevice.pyc in <module>()\n     45    Nt   rti\n     46    s)   AmDevice: failed to read time from devices\n---> 47    <HBBBBBBBBi ☺  g       @i►   g    Çä.As↔   %02d/%02d/%02d %02d:%02d:%02di╨  t♣   Error(☻   Ns♣   Error(\n     48    R    R0   R   R\\*   R)   t♠   structt♠   unpackt♥   intt♥   powR        (►   R☼   t♥   cmdt\n     49    timeStringt\n\nh:\\src\\python\\iPython\\ipython13\\dist\\bmpd\\device\\IPython\\lib\\deepreload.py in deep_import_hook(name, globals, locals, fr\nomlist, level)\n    240     parent, buf = get_parent(globals, level)\n    241\n--> 242     head, name, buf = load_next(parent, None if level < 0 else parent, name, buf)\n    243\n    244     tail = head\n\nh:\\src\\python\\iPython\\ipython13\\dist\\bmpd\\device\\IPython\\lib\\deepreload.py in load_next(mod, altmod, name, buf)\n    144     buf += subname\n    145\n--> 146     result = import_submodule(mod, subname, buf)\n    147     if result is None and mod != altmod:\n    148         result = import_submodule(altmod, subname, subname)\n\nh:\\src\\python\\iPython\\ipython13\\dist\\bmpd\\device\\IPython\\lib\\deepreload.py in import_submodule(mod, subname, fullname)\n    189\n    190         try:\n--> 191             m = imp.load_module(fullname, fp, filename, stuff)\n    192         except:\n    193             # load_module probably removed name from modules because of\n\nc:\\python27\\lib\\Queue.pyc in <module>()\n      5     import threading as _threading\n      6 except ImportError:\n----> 7     import dummy_threading as _threading\n      8 from collections import deque\n      9 import heapq\n\nh:\\src\\python\\iPython\\ipython13\\dist\\bmpd\\device\\IPython\\lib\\deepreload.py in deep_import_hook(name, globals, locals, fr\nomlist, level)\n    240     parent, buf = get_parent(globals, level)\n    241\n--> 242     head, name, buf = load_next(parent, None if level < 0 else parent, name, buf)\n    243\n    244     tail = head\n\nh:\\src\\python\\iPython\\ipython13\\dist\\bmpd\\device\\IPython\\lib\\deepreload.py in load_next(mod, altmod, name, buf)\n    144     buf += subname\n    145\n--> 146     result = import_submodule(mod, subname, buf)\n    147     if result is None and mod != altmod:\n    148         result = import_submodule(altmod, subname, subname)\n\nh:\\src\\python\\iPython\\ipython13\\dist\\bmpd\\device\\IPython\\lib\\deepreload.py in import_submodule(mod, subname, fullname)\n    189\n    190         try:\n--> 191             m = imp.load_module(fullname, fp, filename, stuff)\n    192         except:\n    193             # load_module probably removed name from modules because of\n\nc:\\python27\\lib\\dummy_threading.py in <module>()\n     49     sys_modules['_dummy__threading_local'] = sys_modules['_threading_local']\n     50     del sys_modules['_threading_local']\n---> 51     from _dummy_threading import *\n     52     from _dummy_threading import __all__\n     53\n\nh:\\src\\python\\iPython\\ipython13\\dist\\bmpd\\device\\IPython\\lib\\deepreload.py in deep_import_hook(name, globals, locals, fr\nomlist, level)\n    240     parent, buf = get_parent(globals, level)\n    241\n--> 242     head, name, buf = load_next(parent, None if level < 0 else parent, name, buf)\n    243\n    244     tail = head\n\nh:\\src\\python\\iPython\\ipython13\\dist\\bmpd\\device\\IPython\\lib\\deepreload.py in load_next(mod, altmod, name, buf)\n    151\n    152     if result is None:\n--> 153         raise ImportError(\"No module named %.200s\" % name)\n    154\n    155     return result, next, buf\n\nImportError: No module named _dummy_threading\n\nIn [30]:\n"
  }
]
