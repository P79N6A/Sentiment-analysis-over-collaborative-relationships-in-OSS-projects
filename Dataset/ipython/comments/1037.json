[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2868699",
    "html_url": "https://github.com/ipython/ipython/issues/1037#issuecomment-2868699",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1037",
    "id": 2868699,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4Njg2OTk=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-24T19:53:53Z",
    "updated_at": "2011-11-24T19:53:53Z",
    "author_association": "MEMBER",
    "body": "Yup, good catch.  @minrk, we should probably work around this one in ipython regardless, I'll make the fixes now so that we support jsonlib as well.  But ultimately it seems to me the deeper fix should be made in `zmq.jsonapi`, right?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2869327",
    "html_url": "https://github.com/ipython/ipython/issues/1037#issuecomment-2869327",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1037",
    "id": 2869327,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjkzMjc=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-24T21:30:50Z",
    "updated_at": "2011-11-24T21:30:50Z",
    "author_association": "MEMBER",
    "body": "OK, I've fixed it quickly, but I noticed that with jsonlib installed, the full test suite doesn't quite complete.  \n\n@minrk, I had to manually interrupt it at:\n\n```\ntest_retries (IPython.parallel.tests.test_lbview.TestLoadBalancedView) ... ^CTraceback (most recent call last):\n  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/testing/iptest.py\", line 313, in run\n    return self._run_cmd()\n  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/testing/iptest.py\", line 306, in _run_cmd\n    retcode = subp.wait()\n  File \"/usr/lib/python2.7/subprocess.py\", line 1281, in wait\n    pid, sts = _eintr_retry_call(os.waitpid, self.pid, 0)\n  File \"/usr/lib/python2.7/subprocess.py\", line 478, in _eintr_retry_call\n    return func(*args)\nKeyboardInterrupt\n```\n\nI don't know if you want to consider that an issue for us, for zmq or for jsonlib, though, so I won't open another one quite yet.  If you think it's on our side, then let's open a new issue for it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2869460",
    "html_url": "https://github.com/ipython/ipython/issues/1037#issuecomment-2869460",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1037",
    "id": 2869460,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4Njk0NjA=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-24T21:50:59Z",
    "updated_at": "2011-11-24T21:50:59Z",
    "author_association": "MEMBER",
    "body": "The goal of jsonlib was to make fast json (stdlib json is _extremely_ slow).  but they decided to set their own API. Then, jsonlib2 project was started to bring jsonlib back to API compatibility.\n\nI might just drop jsonlib support from zmq, but that's irrelevant to IPython, unless we bump the minimum version to 2.1.11.\n\nIn the notebook, we can just use stdlib json, because performance is irrelevant. I'll look into the parallel issue,  because I can't think of a reason why it shouldn't work.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2869477",
    "html_url": "https://github.com/ipython/ipython/issues/1037#issuecomment-2869477",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1037",
    "id": 2869477,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4Njk0Nzc=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-24T21:52:55Z",
    "updated_at": "2011-11-24T21:52:55Z",
    "author_association": "MEMBER",
    "body": "Ok, thanks. In the meantime, the workaround I committed means people won't get burned too badly if they have jsonlib installed; I'll leave the decision of what to do in zmq up to you (though dropping jsonlib support seems like the right approach: I looked and the api is so different that any but the most trivial uses are likely to cause problems similar to this one).\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2869513",
    "html_url": "https://github.com/ipython/ipython/issues/1037#issuecomment-2869513",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1037",
    "id": 2869513,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4Njk1MTM=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-24T21:57:38Z",
    "updated_at": "2011-11-24T21:57:38Z",
    "author_association": "MEMBER",
    "body": "On Nov 24, 2011, at 13:52, Fernando Perezreply@reply.github.com wrote:\n\n> Ok, thanks. In the meantime, the workaround I committed means people won't get burned too badly if they have jsonlib installed; I'll leave the decision of what to do in zmq up to you (though dropping jsonlib support seems like the right approach: I looked and the api is so different that any but the most trivial uses are likely to cause problems similar to this one).\n\nYes, well presumably most users who have chosen to install jsonlib would know how to use it.  It's just projects like IPython that have an extra layer of abstraction on zmq, that have to take this kind of thing into account, and even then, only if they want to customize json output (it's irrelevant if extra kwargs aren't being specified).\n\n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ipython/ipython/issues/1037#issuecomment-2869477\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2869545",
    "html_url": "https://github.com/ipython/ipython/issues/1037#issuecomment-2869545",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1037",
    "id": 2869545,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4Njk1NDU=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-24T22:02:39Z",
    "updated_at": "2011-11-24T22:02:39Z",
    "author_association": "MEMBER",
    "body": "On Thu, Nov 24, 2011 at 1:57 PM, Min RK\nreply@reply.github.com\nwrote:\n\n> Yes, well presumably most users who have chosen to install jsonlib would know how to use it.\n\nTrue, though sometimes stuff gets pulled in as a dependency, which can\ncause this kind of problem: project A uses zmq.jsonapi in a way that's\nincompatible with jsonlib but nobody has noticed, then user installs\nproject B that requires jsonlib, and then all of a sudden project A\nbreaks on their machine.  So the current situation is a little\nbrittle.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2872527",
    "html_url": "https://github.com/ipython/ipython/issues/1037#issuecomment-2872527",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1037",
    "id": 2872527,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzI1Mjc=",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-25T08:58:17Z",
    "updated_at": "2011-11-25T08:58:17Z",
    "author_association": "MEMBER",
    "body": "The main point of the zmq.utils.jsonapi is that it serializes to/from utf8-encoded bytes, and json libraries are inconsistent in whether they deal in unicode or str. If that's not what we need (e.g. talking to files), we should be using the stdlib json.  And the fact that jsonlib does not guarantee kwarg equivalence means that anyone using jsonapi with kwargs must take this into account (`jsonapi.jsonmod.__name__` is the appropriate value to check).\n\nThe practical result of this is that we (IPython) should essentially never pass kwargs when using zmq.jsonapi. There is exactly one case where we are currently using a kwarg where we _should_ be using zmq.jsonapi at all, and it has always properly handled the difference in jsonlib.  The real bug here is that we were using jsonapi in places that don't make any sense.\n\nI did find the bug with jsonlib in the test suite - it unserializes floats to decimal.Decimal (?!), so I have to cast it to float before passing it to `datetime.timedelta`.  There are few cases where the difference will matter (and exactly one case where a float is ever sent via json), but we will have to be wary if we work with floats while jsonlib is a possible actor.\n\nThis may be the last straw for dropping jsonlib support in pyzmq, but that will be irrelevant to IPython until we bump minimum pyzmq version past 2.1.11.\n\nA monkeypatch for prohibiting pyzmq from using jsonlib, and forcing fallback to stdlib:\n\n``` python\nimport json\nfrom zmq.utils import jsonapi\n\nif jsonapi.jsonmod.__name__ == 'jsonlib':\n    jsonapi.jsonmod =  json\n```\n\nBut this may not be ideal, as jsonlib is significantly faster than stdlib, and with the small fix in PR #1040, well behaved.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/2878877",
    "html_url": "https://github.com/ipython/ipython/issues/1037#issuecomment-2878877",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/1037",
    "id": 2878877,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4Nzg4Nzc=",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-11-25T23:12:45Z",
    "updated_at": "2011-11-25T23:12:45Z",
    "author_association": "MEMBER",
    "body": "OK, I like the approach in #1040, so let's go with that.  Thanks!\n"
  }
]
