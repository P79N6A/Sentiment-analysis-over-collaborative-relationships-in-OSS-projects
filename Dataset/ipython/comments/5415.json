[
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/38394537",
    "html_url": "https://github.com/ipython/ipython/issues/5415#issuecomment-38394537",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5415",
    "id": 38394537,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4Mzk0NTM3",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-23T19:39:19Z",
    "updated_at": "2014-03-23T19:39:19Z",
    "author_association": "MEMBER",
    "body": "There's a urlretrieve function in the standard library, but it does require a bit of extra typing, especially as it's in a different place between Python 2 and Python 3. I could see a magic, or even just a regular function that's a bit smarter, being useful.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/48070044",
    "html_url": "https://github.com/ipython/ipython/issues/5415#issuecomment-48070044",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5415",
    "id": 48070044,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MDcwMDQ0",
    "user": {
      "login": "rossant",
      "id": 1942359,
      "node_id": "MDQ6VXNlcjE5NDIzNTk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1942359?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rossant",
      "html_url": "https://github.com/rossant",
      "followers_url": "https://api.github.com/users/rossant/followers",
      "following_url": "https://api.github.com/users/rossant/following{/other_user}",
      "gists_url": "https://api.github.com/users/rossant/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rossant/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rossant/subscriptions",
      "organizations_url": "https://api.github.com/users/rossant/orgs",
      "repos_url": "https://api.github.com/users/rossant/repos",
      "events_url": "https://api.github.com/users/rossant/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rossant/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-04T21:05:53Z",
    "updated_at": "2014-07-04T21:05:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "The `%install_ext` magic appears to do something very similar. Would it be a good idea to refactor [this](https://github.com/ipython/ipython/blob/master/IPython/core/extensions.py#L158-L166) into a generic `download` or `copy` utility function? Then, a `%download` magic could simply wrap it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/68274972",
    "html_url": "https://github.com/ipython/ipython/issues/5415#issuecomment-68274972",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5415",
    "id": 68274972,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4Mjc0OTcy",
    "user": {
      "login": "rossant",
      "id": 1942359,
      "node_id": "MDQ6VXNlcjE5NDIzNTk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1942359?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rossant",
      "html_url": "https://github.com/rossant",
      "followers_url": "https://api.github.com/users/rossant/followers",
      "following_url": "https://api.github.com/users/rossant/following{/other_user}",
      "gists_url": "https://api.github.com/users/rossant/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rossant/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rossant/subscriptions",
      "organizations_url": "https://api.github.com/users/rossant/orgs",
      "repos_url": "https://api.github.com/users/rossant/repos",
      "events_url": "https://api.github.com/users/rossant/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rossant/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-29T16:57:54Z",
    "updated_at": "2014-12-29T16:57:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Is there still an interest in this? If so, I could do a PR some time. There could be a small user-exposed utility function in e.g. `IPython.utils`:\n\n``` python\ndef download(url, filename):\n    try:\n        from urllib.parse import urlparse  # Py3\n        from urllib.request import urlretrieve\n    except ImportError:\n        from urlparse import urlparse\n        from urllib import urlretrieve\n    return urlretrieve(url, filename)\n```\n- There could also be a handy `%download http://domain/file.zip` magic that would save the file in the current directory\n- I'm not sure how reliable `urlretrieve` is compared to [requests](http://docs.python-requests.org/en/latest/)' `get` function, particularly with large files. If _requests_ is more reliable, it could be preferentially used over `urlretrieve` if it is available.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/68278828",
    "html_url": "https://github.com/ipython/ipython/issues/5415#issuecomment-68278828",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5415",
    "id": 68278828,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4Mjc4ODI4",
    "user": {
      "login": "dsblank",
      "id": 168568,
      "node_id": "MDQ6VXNlcjE2ODU2OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/168568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsblank",
      "html_url": "https://github.com/dsblank",
      "followers_url": "https://api.github.com/users/dsblank/followers",
      "following_url": "https://api.github.com/users/dsblank/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsblank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsblank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsblank/subscriptions",
      "organizations_url": "https://api.github.com/users/dsblank/orgs",
      "repos_url": "https://api.github.com/users/dsblank/repos",
      "events_url": "https://api.github.com/users/dsblank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsblank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-29T17:39:00Z",
    "updated_at": "2014-12-29T17:39:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "It would be very handy for this pedagogically... we have exactly this implementation in the [MetaKernel](https://github.com/blink1073/metakernel) language-agnostic magics:\n\nhttps://github.com/blink1073/metakernel/blob/master/metakernel/magics/download_magic.py\n\nIf there are ways to share such code better, please let us know.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/232697203",
    "html_url": "https://github.com/ipython/ipython/issues/5415#issuecomment-232697203",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5415",
    "id": 232697203,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjY5NzIwMw==",
    "user": {
      "login": "dsblank",
      "id": 168568,
      "node_id": "MDQ6VXNlcjE2ODU2OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/168568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsblank",
      "html_url": "https://github.com/dsblank",
      "followers_url": "https://api.github.com/users/dsblank/followers",
      "following_url": "https://api.github.com/users/dsblank/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsblank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsblank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsblank/subscriptions",
      "organizations_url": "https://api.github.com/users/dsblank/orgs",
      "repos_url": "https://api.github.com/users/dsblank/repos",
      "events_url": "https://api.github.com/users/dsblank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsblank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-14T15:20:20Z",
    "updated_at": "2016-07-14T15:20:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "You can now get the download magic in ipython from metakernel with these steps:\n\n```\n! pip install metakernel -U\nimport metakernel\nmetakernel.register_ipython_magics()\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/256308312",
    "html_url": "https://github.com/ipython/ipython/issues/5415#issuecomment-256308312",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5415",
    "id": 256308312,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjMwODMxMg==",
    "user": {
      "login": "kirk86",
      "id": 2902390,
      "node_id": "MDQ6VXNlcjI5MDIzOTA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2902390?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kirk86",
      "html_url": "https://github.com/kirk86",
      "followers_url": "https://api.github.com/users/kirk86/followers",
      "following_url": "https://api.github.com/users/kirk86/following{/other_user}",
      "gists_url": "https://api.github.com/users/kirk86/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kirk86/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kirk86/subscriptions",
      "organizations_url": "https://api.github.com/users/kirk86/orgs",
      "repos_url": "https://api.github.com/users/kirk86/repos",
      "events_url": "https://api.github.com/users/kirk86/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kirk86/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-26T10:25:37Z",
    "updated_at": "2016-10-26T10:25:37Z",
    "author_association": "NONE",
    "body": "how about support for Unicode characters out of the box like in julia. e.g.\n`μ = 2.5`\n`θ = 3.4`\n`μ * θ = 8.5`\n`Σ = np.random.randn(4,4)`\n\nI think this is something valuable to the scientific community as it allows to closely resemble the math formulas and also have cleaner and shorter implementations\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/256375537",
    "html_url": "https://github.com/ipython/ipython/issues/5415#issuecomment-256375537",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5415",
    "id": 256375537,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjM3NTUzNw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-26T15:03:57Z",
    "updated_at": "2016-10-26T15:03:57Z",
    "author_association": "MEMBER",
    "body": "@kirk86 that's not really related to this issue, but it is already in place. Type e.g. `\\mu` and hit tab. This requires Python 3.\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/256389590",
    "html_url": "https://github.com/ipython/ipython/issues/5415#issuecomment-256389590",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5415",
    "id": 256389590,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjM4OTU5MA==",
    "user": {
      "login": "kirk86",
      "id": 2902390,
      "node_id": "MDQ6VXNlcjI5MDIzOTA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2902390?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kirk86",
      "html_url": "https://github.com/kirk86",
      "followers_url": "https://api.github.com/users/kirk86/followers",
      "following_url": "https://api.github.com/users/kirk86/following{/other_user}",
      "gists_url": "https://api.github.com/users/kirk86/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kirk86/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kirk86/subscriptions",
      "organizations_url": "https://api.github.com/users/kirk86/orgs",
      "repos_url": "https://api.github.com/users/kirk86/repos",
      "events_url": "https://api.github.com/users/kirk86/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kirk86/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-26T15:45:35Z",
    "updated_at": "2016-10-26T15:45:35Z",
    "author_association": "NONE",
    "body": "@takluyver thanks for the info. Anything similar for py2.7.x ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipython/ipython/issues/comments/256402769",
    "html_url": "https://github.com/ipython/ipython/issues/5415#issuecomment-256402769",
    "issue_url": "https://api.github.com/repos/ipython/ipython/issues/5415",
    "id": 256402769,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjQwMjc2OQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-26T16:25:45Z",
    "updated_at": "2016-10-26T16:25:45Z",
    "author_association": "MEMBER",
    "body": "Nope, unicode identifiers were new in Python 3.\n"
  }
]
