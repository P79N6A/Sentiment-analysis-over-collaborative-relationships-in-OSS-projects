[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/472149560",
    "html_url": "https://github.com/grpc/grpc/pull/18341#issuecomment-472149560",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/18341",
    "id": 472149560,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MjE0OTU2MA==",
    "user": {
      "login": "wcevans",
      "id": 24657604,
      "node_id": "MDQ6VXNlcjI0NjU3NjA0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/24657604?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wcevans",
      "html_url": "https://github.com/wcevans",
      "followers_url": "https://api.github.com/users/wcevans/followers",
      "following_url": "https://api.github.com/users/wcevans/following{/other_user}",
      "gists_url": "https://api.github.com/users/wcevans/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wcevans/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wcevans/subscriptions",
      "organizations_url": "https://api.github.com/users/wcevans/orgs",
      "repos_url": "https://api.github.com/users/wcevans/repos",
      "events_url": "https://api.github.com/users/wcevans/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wcevans/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-12T19:34:19Z",
    "updated_at": "2019-03-12T19:35:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "Can you elaborate on the reason that \"any application that calls SetCancelCallback must also call ClearCancelCallback afterward before calling Finish\"? Why can't Finish imply ClearCancelCallback? Set + Clear seems unnecessarily burdensome.\r\n\r\nedit: perhaps the Finish callback should queue behind the cancel callback, iff it is invoked?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/472151029",
    "html_url": "https://github.com/grpc/grpc/pull/18341#issuecomment-472151029",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/18341",
    "id": 472151029,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MjE1MTAyOQ==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-12T19:38:45Z",
    "updated_at": "2019-03-12T19:39:18Z",
    "author_association": "MEMBER",
    "body": "@wcevans : Absolutely! The issue is that the application invocation of Finish may race with the callback getting invoked. Forcing the user to be explicit about it means that the user _must_ be conscious of ordering. As for burdensomeness, it turns out that only a tiny tiny fraction of applications care about this. That said, one of them is Tensorflow."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/472153063",
    "html_url": "https://github.com/grpc/grpc/pull/18341#issuecomment-472153063",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/18341",
    "id": 472153063,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MjE1MzA2Mw==",
    "user": {
      "login": "wcevans",
      "id": 24657604,
      "node_id": "MDQ6VXNlcjI0NjU3NjA0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/24657604?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wcevans",
      "html_url": "https://github.com/wcevans",
      "followers_url": "https://api.github.com/users/wcevans/followers",
      "following_url": "https://api.github.com/users/wcevans/following{/other_user}",
      "gists_url": "https://api.github.com/users/wcevans/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wcevans/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wcevans/subscriptions",
      "organizations_url": "https://api.github.com/users/wcevans/orgs",
      "repos_url": "https://api.github.com/users/wcevans/repos",
      "events_url": "https://api.github.com/users/wcevans/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wcevans/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-12T19:44:52Z",
    "updated_at": "2019-03-12T19:44:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "If the Finish callback queues behind the cancellation callback (i.e., either the cancellation callback will never be invoked, or the Finish callback will wait to be invoked until the cancellation callback has returned), does that fix the issue?\r\n\r\nI presume that cancellation represents an atypical stream teardown. It seems better to me that the common case is simpler (user doesn't have to invoke ClearCancelCallback on every RPC) even if the rare case is potentially slower (Finish callback has to queue behind Cancel callback)."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/472156827",
    "html_url": "https://github.com/grpc/grpc/pull/18341#issuecomment-472156827",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/18341",
    "id": 472156827,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MjE1NjgyNw==",
    "user": {
      "login": "wcevans",
      "id": 24657604,
      "node_id": "MDQ6VXNlcjI0NjU3NjA0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/24657604?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wcevans",
      "html_url": "https://github.com/wcevans",
      "followers_url": "https://api.github.com/users/wcevans/followers",
      "following_url": "https://api.github.com/users/wcevans/following{/other_user}",
      "gists_url": "https://api.github.com/users/wcevans/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wcevans/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wcevans/subscriptions",
      "organizations_url": "https://api.github.com/users/wcevans/orgs",
      "repos_url": "https://api.github.com/users/wcevans/repos",
      "events_url": "https://api.github.com/users/wcevans/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wcevans/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-12T19:55:43Z",
    "updated_at": "2019-03-12T19:55:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ah, I'm sorry, I totally misread the PR description and thought this was specific to streaming RPC. Interesting, I need to think a bit more."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/472161559",
    "html_url": "https://github.com/grpc/grpc/pull/18341#issuecomment-472161559",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/18341",
    "id": 472161559,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MjE2MTU1OQ==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-12T20:10:05Z",
    "updated_at": "2019-03-12T20:10:05Z",
    "author_association": "MEMBER",
    "body": "Yeah, I was just about to respond \"there is no Finish callback.\" Note that in streaming, we already have this as OnCancel, but it's always present."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/472161932",
    "html_url": "https://github.com/grpc/grpc/pull/18341#issuecomment-472161932",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/18341",
    "id": 472161932,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MjE2MTkzMg==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-12T20:11:14Z",
    "updated_at": "2019-03-12T20:11:14Z",
    "author_association": "MEMBER",
    "body": "I updated the PR description to make it more clear.\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/472189676",
    "html_url": "https://github.com/grpc/grpc/pull/18341#issuecomment-472189676",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/18341",
    "id": 472189676,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MjE4OTY3Ng==",
    "user": {
      "login": "wcevans",
      "id": 24657604,
      "node_id": "MDQ6VXNlcjI0NjU3NjA0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/24657604?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wcevans",
      "html_url": "https://github.com/wcevans",
      "followers_url": "https://api.github.com/users/wcevans/followers",
      "following_url": "https://api.github.com/users/wcevans/following{/other_user}",
      "gists_url": "https://api.github.com/users/wcevans/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wcevans/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wcevans/subscriptions",
      "organizations_url": "https://api.github.com/users/wcevans/orgs",
      "repos_url": "https://api.github.com/users/wcevans/repos",
      "events_url": "https://api.github.com/users/wcevans/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wcevans/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-12T21:32:19Z",
    "updated_at": "2019-03-12T21:32:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "It seems like (in the event of the race you describe) ClearCancelCallback will have to effectively block until the cancel callback returns. In that case, couldn't Finish also block?\r\n\r\nIt seems like anything you could do in ClearCancelCallback you could also do in Finish. What am I missing?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/472192891",
    "html_url": "https://github.com/grpc/grpc/pull/18341#issuecomment-472192891",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/18341",
    "id": 472192891,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MjE5Mjg5MQ==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-12T21:42:34Z",
    "updated_at": "2019-03-12T21:44:17Z",
    "author_association": "MEMBER",
    "body": "So in that circumstance, ClearCancelCallback actually doesn't block on the application-level callback. We only hold the lock long enough to _decide_ to invoke the application-level callback (see https://github.com/grpc/grpc/blob/b48f06e13156d75b85e016d831ec9484ba76e408/src/cpp/server/server_context.cc#L214-L233 ) . We don't hold the lock while invoking the application-level callback. Indeed, the cancellation callback can get triggered racily even if you clear the cancellation callback but that invocation appears to happen before the cancellation callback is cleared."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/472200037",
    "html_url": "https://github.com/grpc/grpc/pull/18341#issuecomment-472200037",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/18341",
    "id": 472200037,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MjIwMDAzNw==",
    "user": {
      "login": "wcevans",
      "id": 24657604,
      "node_id": "MDQ6VXNlcjI0NjU3NjA0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/24657604?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wcevans",
      "html_url": "https://github.com/wcevans",
      "followers_url": "https://api.github.com/users/wcevans/followers",
      "following_url": "https://api.github.com/users/wcevans/following{/other_user}",
      "gists_url": "https://api.github.com/users/wcevans/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wcevans/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wcevans/subscriptions",
      "organizations_url": "https://api.github.com/users/wcevans/orgs",
      "repos_url": "https://api.github.com/users/wcevans/repos",
      "events_url": "https://api.github.com/users/wcevans/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wcevans/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-12T22:06:34Z",
    "updated_at": "2019-03-12T22:06:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "As written, it seems to me that the user cannot determine a point at which the user cancellation callback will no longer be invoked -- in fact, it may be invoked after their call to Finish returns, which means that the user must provide a cancellation callback that fails gracefully when any per-RPC information has been destroyed. That is an onerous requirement."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/472216933",
    "html_url": "https://github.com/grpc/grpc/pull/18341#issuecomment-472216933",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/18341",
    "id": 472216933,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MjIxNjkzMw==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-12T23:15:39Z",
    "updated_at": "2019-03-12T23:18:09Z",
    "author_association": "MEMBER",
    "body": "No per-RPC information is destroyed until after the cancellation callback runs (if it runs). That is guaranteed in bullet item 5 above. In practice, this is implemented the same way as the holds API of #18072 : by incrementing the outstanding callback counter when a cancel callback is registered, incrementing it again before invoking it, decrementing it when done invoking it, and decrementing it when clearing. (The double increment/decrement is to handle the case of the race between clearing and invoking.)"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/472220864",
    "html_url": "https://github.com/grpc/grpc/pull/18341#issuecomment-472220864",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/18341",
    "id": 472220864,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MjIyMDg2NA==",
    "user": {
      "login": "wcevans",
      "id": 24657604,
      "node_id": "MDQ6VXNlcjI0NjU3NjA0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/24657604?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wcevans",
      "html_url": "https://github.com/wcevans",
      "followers_url": "https://api.github.com/users/wcevans/followers",
      "following_url": "https://api.github.com/users/wcevans/following{/other_user}",
      "gists_url": "https://api.github.com/users/wcevans/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wcevans/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wcevans/subscriptions",
      "organizations_url": "https://api.github.com/users/wcevans/orgs",
      "repos_url": "https://api.github.com/users/wcevans/repos",
      "events_url": "https://api.github.com/users/wcevans/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wcevans/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-12T23:32:19Z",
    "updated_at": "2019-03-12T23:32:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am concerned about per-RPC state that a user creates in response to an incoming RPC. If the user has no way to determine when the cancellation callback will no longer be invoked, this greatly restricts how user cancellation callbacks may be written."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/472278584",
    "html_url": "https://github.com/grpc/grpc/pull/18341#issuecomment-472278584",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/18341",
    "id": 472278584,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MjI3ODU4NA==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-13T04:49:06Z",
    "updated_at": "2019-03-13T05:05:03Z",
    "author_association": "MEMBER",
    "body": "That's a reasonable concern. We could strengthen the requirements above by calling the application-level cancel callback under a lock, which is actually the semantics used by Tensorflow (they've hacked up their own SetCancelCallback/ClearCancelCallback with requirements 1-4 above on top of a callback API hacked on top of the gRPC async API). That would promise that the cancel callback would _not_ be executed concurrently with or after the call to ClearCancelCallback. In exchange, the cancel callback would have to be very lightweight, not allowed to lock or do other operations that could lead to locks, etc. Basically, it should not do any gRPC operations on the same RPC (including calling ClearCancelCallback or Finish like the current example does), though it can do operations on the application-level state or do something else like cancel its child RPCs. Let's sync up out of band on this."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/472481187",
    "html_url": "https://github.com/grpc/grpc/pull/18341#issuecomment-472481187",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/18341",
    "id": 472481187,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MjQ4MTE4Nw==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-13T15:47:59Z",
    "updated_at": "2019-03-13T15:47:59Z",
    "author_association": "MEMBER",
    "body": "Continuing to think about this: perhaps this really is the wrong model and instead if desired we should provide a reactor-based unary option so that there is an OnCancel"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/472902113",
    "html_url": "https://github.com/grpc/grpc/pull/18341#issuecomment-472902113",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/18341",
    "id": 472902113,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MjkwMjExMw==",
    "user": {
      "login": "wcevans",
      "id": 24657604,
      "node_id": "MDQ6VXNlcjI0NjU3NjA0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/24657604?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wcevans",
      "html_url": "https://github.com/wcevans",
      "followers_url": "https://api.github.com/users/wcevans/followers",
      "following_url": "https://api.github.com/users/wcevans/following{/other_user}",
      "gists_url": "https://api.github.com/users/wcevans/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wcevans/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wcevans/subscriptions",
      "organizations_url": "https://api.github.com/users/wcevans/orgs",
      "repos_url": "https://api.github.com/users/wcevans/repos",
      "events_url": "https://api.github.com/users/wcevans/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wcevans/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-14T14:56:43Z",
    "updated_at": "2019-03-14T14:56:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm getting hung up on how the user terminates the server side of the RPC in the presence of this callback mechanism. The user must still call Finish so that we can be certain they are done with the controller, right? I do not see a way that we can allow the user to call Finish from within the cancel callback because of synchronization issues. Perhaps since cancellation is presumably atypical, it is okay to mandate that Finish not be called from within the cancel callback?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/473370789",
    "html_url": "https://github.com/grpc/grpc/pull/18341#issuecomment-473370789",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/18341",
    "id": 473370789,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MzM3MDc4OQ==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-15T17:15:02Z",
    "updated_at": "2019-03-15T17:15:02Z",
    "author_association": "MEMBER",
    "body": "Yeah, it's very atypical. We could go forward with this version to ease the migration path for the small number of codes currently doing something like this but I think I'd like to get some further input as well."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/474058250",
    "html_url": "https://github.com/grpc/grpc/pull/18341#issuecomment-474058250",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/18341",
    "id": 474058250,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDA1ODI1MA==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-18T19:04:18Z",
    "updated_at": "2019-03-18T19:04:18Z",
    "author_association": "MEMBER",
    "body": "@hcaseyal @wcevans : thanks for the comments and I think that the semantics now make more sense. This PR is ready for review if you're available. Thanks!\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/474125629",
    "html_url": "https://github.com/grpc/grpc/pull/18341#issuecomment-474125629",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/18341",
    "id": 474125629,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDEyNTYyOQ==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-18T22:27:36Z",
    "updated_at": "2019-03-18T22:27:36Z",
    "author_association": "MEMBER",
    "body": "The remaining failures are either solved by #18409 or known pre-existing issues.\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/474132419",
    "html_url": "https://github.com/grpc/grpc/pull/18341#issuecomment-474132419",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/18341",
    "id": 474132419,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDEzMjQxOQ==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-18T22:54:58Z",
    "updated_at": "2019-03-18T22:54:58Z",
    "author_association": "MEMBER",
    "body": "@hcaseyal Thanks for the review! I think I've addressed all your comments and they've made this PR stronger. PTAL SVP\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/474595991",
    "html_url": "https://github.com/grpc/grpc/pull/18341#issuecomment-474595991",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/18341",
    "id": 474595991,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDU5NTk5MQ==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-19T21:42:11Z",
    "updated_at": "2019-03-19T21:42:11Z",
    "author_association": "MEMBER",
    "body": "I am merging this since it is experimental but with the understanding that it could get reverted at any time based on alternative feedback.\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/474596161",
    "html_url": "https://github.com/grpc/grpc/pull/18341#issuecomment-474596161",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/18341",
    "id": 474596161,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDU5NjE2MQ==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-19T21:42:42Z",
    "updated_at": "2019-03-19T21:42:42Z",
    "author_association": "MEMBER",
    "body": "... and thanks for the reviews!\r\n"
  }
]
