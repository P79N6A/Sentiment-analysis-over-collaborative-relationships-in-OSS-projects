[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/376334562",
    "html_url": "https://github.com/grpc/grpc/issues/14101#issuecomment-376334562",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14101",
    "id": 376334562,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjMzNDU2Mg==",
    "user": {
      "login": "ejona86",
      "id": 2811396,
      "node_id": "MDQ6VXNlcjI4MTEzOTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2811396?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ejona86",
      "html_url": "https://github.com/ejona86",
      "followers_url": "https://api.github.com/users/ejona86/followers",
      "following_url": "https://api.github.com/users/ejona86/following{/other_user}",
      "gists_url": "https://api.github.com/users/ejona86/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ejona86/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ejona86/subscriptions",
      "organizations_url": "https://api.github.com/users/ejona86/orgs",
      "repos_url": "https://api.github.com/users/ejona86/repos",
      "events_url": "https://api.github.com/users/ejona86/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ejona86/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-26T22:38:49Z",
    "updated_at": "2018-03-26T22:39:21Z",
    "author_association": "MEMBER",
    "body": "The internal push for this fell away. We're looking for user interest. I know there is user interest, but it's hard to say how much there is. If you're interested, vote up the initial comment of this issue and make a comment describing the sort of use-case you're looking at (like Android or firewall-punching). Also mention whether the tunnel component would be generic or app-specific (as app-specific is easier to workaround today with a bidi stream).\r\n\r\nYes, that will produce something not that different from \"me too\" style of comments, but that's actually what we're asking for here."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/378224714",
    "html_url": "https://github.com/grpc/grpc/issues/14101#issuecomment-378224714",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14101",
    "id": 378224714,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODIyNDcxNA==",
    "user": {
      "login": "rAndom69",
      "id": 4973626,
      "node_id": "MDQ6VXNlcjQ5NzM2MjY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4973626?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rAndom69",
      "html_url": "https://github.com/rAndom69",
      "followers_url": "https://api.github.com/users/rAndom69/followers",
      "following_url": "https://api.github.com/users/rAndom69/following{/other_user}",
      "gists_url": "https://api.github.com/users/rAndom69/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rAndom69/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rAndom69/subscriptions",
      "organizations_url": "https://api.github.com/users/rAndom69/orgs",
      "repos_url": "https://api.github.com/users/rAndom69/repos",
      "events_url": "https://api.github.com/users/rAndom69/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rAndom69/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-03T11:57:48Z",
    "updated_at": "2018-04-03T11:59:27Z",
    "author_association": "NONE",
    "body": "Well, I will need this (as I definitely do not want to work-around with bidi streams as it's just bad interface for server which needs to connect to client)\r\n\r\nSo I might as well do pull request for C++ implementation in near-future."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/386151772",
    "html_url": "https://github.com/grpc/grpc/issues/14101#issuecomment-386151772",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14101",
    "id": 386151772,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjE1MTc3Mg==",
    "user": {
      "login": "Kasheen",
      "id": 1160767,
      "node_id": "MDQ6VXNlcjExNjA3Njc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1160767?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Kasheen",
      "html_url": "https://github.com/Kasheen",
      "followers_url": "https://api.github.com/users/Kasheen/followers",
      "following_url": "https://api.github.com/users/Kasheen/following{/other_user}",
      "gists_url": "https://api.github.com/users/Kasheen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Kasheen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Kasheen/subscriptions",
      "organizations_url": "https://api.github.com/users/Kasheen/orgs",
      "repos_url": "https://api.github.com/users/Kasheen/repos",
      "events_url": "https://api.github.com/users/Kasheen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Kasheen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-02T23:27:19Z",
    "updated_at": "2018-05-02T23:28:02Z",
    "author_association": "NONE",
    "body": "I think I have a use case for this which is an app which allows an Android phone's file system to be explored / read / manipulated via a PC application. Essentially the phone is a file server or hosts a remote file system of sorts.\r\n\r\nI've read a comment (I think by yourself @ejona86) whereby you say that a listening server on the phone can be flaky depending on screen off / rom configuration and therefore it's possibly appealing to have the connection set up in the reverse direction (PC listens, Android connects) and then reversing the relationship if I'm understanding this feature correctly.\r\n\r\nStill looking into GRPC and not entirely sure this is a sensible use case for it, but it seems right now it'd rely on Android netty server working (not sure on the status of this), or doing some kind of bidi stream workaround (not sure how much of a mess this would be when the phone is very much the server in this relationship).\r\n\r\nNot exactly a concrete need from me here, but just a 2 cents on a possible use case that might be useful to me. Figured I'd post since you're trying to gauge interest."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/394590840",
    "html_url": "https://github.com/grpc/grpc/issues/14101#issuecomment-394590840",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14101",
    "id": 394590840,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDU5MDg0MA==",
    "user": {
      "login": "MHDante",
      "id": 4652122,
      "node_id": "MDQ6VXNlcjQ2NTIxMjI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4652122?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MHDante",
      "html_url": "https://github.com/MHDante",
      "followers_url": "https://api.github.com/users/MHDante/followers",
      "following_url": "https://api.github.com/users/MHDante/following{/other_user}",
      "gists_url": "https://api.github.com/users/MHDante/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MHDante/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MHDante/subscriptions",
      "organizations_url": "https://api.github.com/users/MHDante/orgs",
      "repos_url": "https://api.github.com/users/MHDante/repos",
      "events_url": "https://api.github.com/users/MHDante/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MHDante/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-05T05:57:14Z",
    "updated_at": "2018-06-05T05:58:32Z",
    "author_association": "NONE",
    "body": "The use case is a remote operations management platform (kiosks/iot). Due to nat/firewall, we'd like the ability to register a client kiosk to a server, and, on certain events, have the server invert into a client that issues requests to the kiosk. This can currently be done by multiplexing over a bidirectional stream, but would be much better with language support."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/394643863",
    "html_url": "https://github.com/grpc/grpc/issues/14101#issuecomment-394643863",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14101",
    "id": 394643863,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDY0Mzg2Mw==",
    "user": {
      "login": "overmike",
      "id": 1953362,
      "node_id": "MDQ6VXNlcjE5NTMzNjI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1953362?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/overmike",
      "html_url": "https://github.com/overmike",
      "followers_url": "https://api.github.com/users/overmike/followers",
      "following_url": "https://api.github.com/users/overmike/following{/other_user}",
      "gists_url": "https://api.github.com/users/overmike/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/overmike/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/overmike/subscriptions",
      "organizations_url": "https://api.github.com/users/overmike/orgs",
      "repos_url": "https://api.github.com/users/overmike/repos",
      "events_url": "https://api.github.com/users/overmike/events{/privacy}",
      "received_events_url": "https://api.github.com/users/overmike/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-05T09:27:55Z",
    "updated_at": "2018-06-05T09:27:55Z",
    "author_association": "NONE",
    "body": "I am interested in this feature for a use case which service A submit a job through a scheduler and we have no idea the job ends up running at, and we need to send events to the job from service A. \r\n\r\nBut I am concern about how we can scale up service A after having a tunnel established to one instance of service A. May result in a lookaside table or sticky session"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/404961407",
    "html_url": "https://github.com/grpc/grpc/issues/14101#issuecomment-404961407",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14101",
    "id": 404961407,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDk2MTQwNw==",
    "user": {
      "login": "fischman",
      "id": 114212,
      "node_id": "MDQ6VXNlcjExNDIxMg==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/114212?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fischman",
      "html_url": "https://github.com/fischman",
      "followers_url": "https://api.github.com/users/fischman/followers",
      "following_url": "https://api.github.com/users/fischman/following{/other_user}",
      "gists_url": "https://api.github.com/users/fischman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fischman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fischman/subscriptions",
      "organizations_url": "https://api.github.com/users/fischman/orgs",
      "repos_url": "https://api.github.com/users/fischman/repos",
      "events_url": "https://api.github.com/users/fischman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fischman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-13T21:41:39Z",
    "updated_at": "2018-07-13T21:41:39Z",
    "author_association": "NONE",
    "body": "I have a use-case for this motivated by routability - my client can dial a server today but the reverse is not true. The server wants to make side-channel requests of the client, but these \"reverse\" service definition is largely orthogonal to the \"forward\" service definition, so intermingling them using bidi streaming and flipping the reverse service are unattractive options.\r\n(this is for a python & C++ app in non-mobile environments, where the server and client are in independent network contexts)"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/411404415",
    "html_url": "https://github.com/grpc/grpc/issues/14101#issuecomment-411404415",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14101",
    "id": 411404415,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTQwNDQxNQ==",
    "user": {
      "login": "Anachronomicon",
      "id": 24740288,
      "node_id": "MDQ6VXNlcjI0NzQwMjg4",
      "avatar_url": "https://avatars1.githubusercontent.com/u/24740288?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Anachronomicon",
      "html_url": "https://github.com/Anachronomicon",
      "followers_url": "https://api.github.com/users/Anachronomicon/followers",
      "following_url": "https://api.github.com/users/Anachronomicon/following{/other_user}",
      "gists_url": "https://api.github.com/users/Anachronomicon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Anachronomicon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Anachronomicon/subscriptions",
      "organizations_url": "https://api.github.com/users/Anachronomicon/orgs",
      "repos_url": "https://api.github.com/users/Anachronomicon/repos",
      "events_url": "https://api.github.com/users/Anachronomicon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Anachronomicon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-08T13:26:21Z",
    "updated_at": "2018-08-08T13:26:21Z",
    "author_association": "NONE",
    "body": "I have basically the same use case as @fischman, right down to the language requirements. Something like Crossbar's router is perfect for our needs, but we've already gotten pretty invested in gRPC, so I'd rather not just drop it all and switch to WAMP."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/414155508",
    "html_url": "https://github.com/grpc/grpc/issues/14101#issuecomment-414155508",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14101",
    "id": 414155508,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDE1NTUwOA==",
    "user": {
      "login": "srini100",
      "id": 35056280,
      "node_id": "MDQ6VXNlcjM1MDU2Mjgw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/35056280?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/srini100",
      "html_url": "https://github.com/srini100",
      "followers_url": "https://api.github.com/users/srini100/followers",
      "following_url": "https://api.github.com/users/srini100/following{/other_user}",
      "gists_url": "https://api.github.com/users/srini100/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/srini100/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/srini100/subscriptions",
      "organizations_url": "https://api.github.com/users/srini100/orgs",
      "repos_url": "https://api.github.com/users/srini100/repos",
      "events_url": "https://api.github.com/users/srini100/events{/privacy}",
      "received_events_url": "https://api.github.com/users/srini100/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-19T21:00:24Z",
    "updated_at": "2018-08-19T21:00:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "More users interested in this enhancement https://github.com/grpc/grpc-go/issues/484"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/414156494",
    "html_url": "https://github.com/grpc/grpc/issues/14101#issuecomment-414156494",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14101",
    "id": 414156494,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDE1NjQ5NA==",
    "user": {
      "login": "pgrosu",
      "id": 6555937,
      "node_id": "MDQ6VXNlcjY1NTU5Mzc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6555937?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pgrosu",
      "html_url": "https://github.com/pgrosu",
      "followers_url": "https://api.github.com/users/pgrosu/followers",
      "following_url": "https://api.github.com/users/pgrosu/following{/other_user}",
      "gists_url": "https://api.github.com/users/pgrosu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pgrosu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pgrosu/subscriptions",
      "organizations_url": "https://api.github.com/users/pgrosu/orgs",
      "repos_url": "https://api.github.com/users/pgrosu/repos",
      "events_url": "https://api.github.com/users/pgrosu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pgrosu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-19T21:15:47Z",
    "updated_at": "2018-08-19T21:15:47Z",
    "author_association": "NONE",
    "body": "@ejona86 I'd ask on the (grpc.io) discussion group - the sample size will be larger :)"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/425084606",
    "html_url": "https://github.com/grpc/grpc/issues/14101#issuecomment-425084606",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14101",
    "id": 425084606,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTA4NDYwNg==",
    "user": {
      "login": "mmoehring",
      "id": 2975481,
      "node_id": "MDQ6VXNlcjI5NzU0ODE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2975481?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mmoehring",
      "html_url": "https://github.com/mmoehring",
      "followers_url": "https://api.github.com/users/mmoehring/followers",
      "following_url": "https://api.github.com/users/mmoehring/following{/other_user}",
      "gists_url": "https://api.github.com/users/mmoehring/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mmoehring/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mmoehring/subscriptions",
      "organizations_url": "https://api.github.com/users/mmoehring/orgs",
      "repos_url": "https://api.github.com/users/mmoehring/repos",
      "events_url": "https://api.github.com/users/mmoehring/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mmoehring/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-27T13:10:20Z",
    "updated_at": "2018-09-27T13:10:20Z",
    "author_association": "NONE",
    "body": "The use case is clients on remote locations behind heavily NATted or downright unreliable connections, like clients which can only connect seldom through mobile wifi hotspots."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/435062711",
    "html_url": "https://github.com/grpc/grpc/issues/14101#issuecomment-435062711",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14101",
    "id": 435062711,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTA2MjcxMQ==",
    "user": {
      "login": "Frank591",
      "id": 3341497,
      "node_id": "MDQ6VXNlcjMzNDE0OTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3341497?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Frank591",
      "html_url": "https://github.com/Frank591",
      "followers_url": "https://api.github.com/users/Frank591/followers",
      "following_url": "https://api.github.com/users/Frank591/following{/other_user}",
      "gists_url": "https://api.github.com/users/Frank591/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Frank591/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Frank591/subscriptions",
      "organizations_url": "https://api.github.com/users/Frank591/orgs",
      "repos_url": "https://api.github.com/users/Frank591/repos",
      "events_url": "https://api.github.com/users/Frank591/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Frank591/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-01T14:44:18Z",
    "updated_at": "2018-11-01T14:44:18Z",
    "author_association": "NONE",
    "body": "My use case:\r\nServers in cloud and clients behind firewalls and NATs(for example, terminals in shops).\r\nClient firewalls configured only for outcoimng connection on server port.\r\nSo when client starts, it try to initiate long live connection to server.\r\nAfter connection establiashed, server wants to do RPC request to client.\r\n\r\nRemark: \r\nI didn't use gRPC before. I only doing first look on this technology and trying to understand can i use it in my project or no. And now i can't understand, how i can do rpc requests from server to clients using gRPC. \r\nI searched on stackowerflow and did't find any solution. This issue looks like that's what I need. \r\n\r\nAnd if you know, how i can implement server to client RPC using existing gRPC mechanics, pls tell me."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/435656976",
    "html_url": "https://github.com/grpc/grpc/issues/14101#issuecomment-435656976",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14101",
    "id": 435656976,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTY1Njk3Ng==",
    "user": {
      "login": "dan-bar-dov",
      "id": 44744269,
      "node_id": "MDQ6VXNlcjQ0NzQ0MjY5",
      "avatar_url": "https://avatars3.githubusercontent.com/u/44744269?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dan-bar-dov",
      "html_url": "https://github.com/dan-bar-dov",
      "followers_url": "https://api.github.com/users/dan-bar-dov/followers",
      "following_url": "https://api.github.com/users/dan-bar-dov/following{/other_user}",
      "gists_url": "https://api.github.com/users/dan-bar-dov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dan-bar-dov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dan-bar-dov/subscriptions",
      "organizations_url": "https://api.github.com/users/dan-bar-dov/orgs",
      "repos_url": "https://api.github.com/users/dan-bar-dov/repos",
      "events_url": "https://api.github.com/users/dan-bar-dov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dan-bar-dov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-04T10:08:58Z",
    "updated_at": "2018-11-04T10:10:14Z",
    "author_association": "NONE",
    "body": "I have the same use cases mentioned by fischman and Frank591 above\r\n\r\nOpening two sockets (from an origin behind the firewall) and using one for each direction will be acceptable as well"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/436833353",
    "html_url": "https://github.com/grpc/grpc/issues/14101#issuecomment-436833353",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14101",
    "id": 436833353,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjgzMzM1Mw==",
    "user": {
      "login": "kag0",
      "id": 3280689,
      "node_id": "MDQ6VXNlcjMyODA2ODk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3280689?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kag0",
      "html_url": "https://github.com/kag0",
      "followers_url": "https://api.github.com/users/kag0/followers",
      "following_url": "https://api.github.com/users/kag0/following{/other_user}",
      "gists_url": "https://api.github.com/users/kag0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kag0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kag0/subscriptions",
      "organizations_url": "https://api.github.com/users/kag0/orgs",
      "repos_url": "https://api.github.com/users/kag0/repos",
      "events_url": "https://api.github.com/users/kag0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kag0/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-08T00:53:26Z",
    "updated_at": "2018-11-08T00:53:26Z",
    "author_association": "NONE",
    "body": "Chiming in with an IOT use case where the client IP address is not stable and the client is in an unknown and probably NAT'd network.\r\n\r\nAlso of interest to those here might be one of the reverse http standards-attemtps that are out there. None have become standardized, but several have been implemented by multiple people."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/442727594",
    "html_url": "https://github.com/grpc/grpc/issues/14101#issuecomment-442727594",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14101",
    "id": 442727594,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjcyNzU5NA==",
    "user": {
      "login": "dustin-decker",
      "id": 6031416,
      "node_id": "MDQ6VXNlcjYwMzE0MTY=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6031416?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dustin-decker",
      "html_url": "https://github.com/dustin-decker",
      "followers_url": "https://api.github.com/users/dustin-decker/followers",
      "following_url": "https://api.github.com/users/dustin-decker/following{/other_user}",
      "gists_url": "https://api.github.com/users/dustin-decker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dustin-decker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dustin-decker/subscriptions",
      "organizations_url": "https://api.github.com/users/dustin-decker/orgs",
      "repos_url": "https://api.github.com/users/dustin-decker/repos",
      "events_url": "https://api.github.com/users/dustin-decker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dustin-decker/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-29T07:01:35Z",
    "updated_at": "2018-11-29T07:01:35Z",
    "author_association": "NONE",
    "body": "Github traffic stats shows ~1 unique visitor per day on the code in https://github.com/dustin-decker/grpc-firewall-bypass which is a firewall-punching hack that came out of https://github.com/grpc/grpc-go/issues/484\r\n\r\nThere's definitely some demand among the go users for this functionality."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/481096212",
    "html_url": "https://github.com/grpc/grpc/issues/14101#issuecomment-481096212",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14101",
    "id": 481096212,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MTA5NjIxMg==",
    "user": {
      "login": "nikolain",
      "id": 5117020,
      "node_id": "MDQ6VXNlcjUxMTcwMjA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5117020?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nikolain",
      "html_url": "https://github.com/nikolain",
      "followers_url": "https://api.github.com/users/nikolain/followers",
      "following_url": "https://api.github.com/users/nikolain/following{/other_user}",
      "gists_url": "https://api.github.com/users/nikolain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nikolain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nikolain/subscriptions",
      "organizations_url": "https://api.github.com/users/nikolain/orgs",
      "repos_url": "https://api.github.com/users/nikolain/repos",
      "events_url": "https://api.github.com/users/nikolain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nikolain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-09T04:21:30Z",
    "updated_at": "2019-04-09T04:21:30Z",
    "author_association": "NONE",
    "body": "Yes, having the native ability to reverse tunnel for C++ / C# would be very useful. \r\n\r\nUse case(s) - \r\n1) remote controlling photo / video kiosks for sport events. \r\n2) remote video judging for sport events.\r\n\r\nIn both cases target servers must be are located on event premises, behind NAT/firewall. And calls coming from outside (from cloud). \r\n\r\nThe topology where on-premise app (protected by firewall) initiates an outgoing connection to the cloud, and becomes an rpc server accepting calls on that connection would solve most of the problems."
  }
]
