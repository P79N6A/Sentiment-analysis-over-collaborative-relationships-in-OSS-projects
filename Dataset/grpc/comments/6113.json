[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/215550989",
    "html_url": "https://github.com/grpc/grpc/issues/6113#issuecomment-215550989",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6113",
    "id": 215550989,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNTU1MDk4OQ==",
    "user": {
      "login": "jcanizales",
      "id": 5120183,
      "node_id": "MDQ6VXNlcjUxMjAxODM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5120183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jcanizales",
      "html_url": "https://github.com/jcanizales",
      "followers_url": "https://api.github.com/users/jcanizales/followers",
      "following_url": "https://api.github.com/users/jcanizales/following{/other_user}",
      "gists_url": "https://api.github.com/users/jcanizales/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jcanizales/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jcanizales/subscriptions",
      "organizations_url": "https://api.github.com/users/jcanizales/orgs",
      "repos_url": "https://api.github.com/users/jcanizales/repos",
      "events_url": "https://api.github.com/users/jcanizales/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jcanizales/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-28T20:22:44Z",
    "updated_at": "2016-04-28T20:22:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi, could you describe the issue in more detail?\n\nThanks!\nJorge\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/225971726",
    "html_url": "https://github.com/grpc/grpc/issues/6113#issuecomment-225971726",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6113",
    "id": 225971726,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTk3MTcyNg==",
    "user": {
      "login": "makdharma",
      "id": 17325098,
      "node_id": "MDQ6VXNlcjE3MzI1MDk4",
      "avatar_url": "https://avatars0.githubusercontent.com/u/17325098?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/makdharma",
      "html_url": "https://github.com/makdharma",
      "followers_url": "https://api.github.com/users/makdharma/followers",
      "following_url": "https://api.github.com/users/makdharma/following{/other_user}",
      "gists_url": "https://api.github.com/users/makdharma/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/makdharma/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/makdharma/subscriptions",
      "organizations_url": "https://api.github.com/users/makdharma/orgs",
      "repos_url": "https://api.github.com/users/makdharma/repos",
      "events_url": "https://api.github.com/users/makdharma/events{/privacy}",
      "received_events_url": "https://api.github.com/users/makdharma/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-14T18:24:45Z",
    "updated_at": "2016-06-14T18:24:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ssting is this still an issue? I'd propose closing if can't be described or reproduced.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/246298096",
    "html_url": "https://github.com/grpc/grpc/issues/6113#issuecomment-246298096",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6113",
    "id": 246298096,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjI5ODA5Ng==",
    "user": {
      "login": "YioMidd",
      "id": 21005386,
      "node_id": "MDQ6VXNlcjIxMDA1Mzg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/21005386?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YioMidd",
      "html_url": "https://github.com/YioMidd",
      "followers_url": "https://api.github.com/users/YioMidd/followers",
      "following_url": "https://api.github.com/users/YioMidd/following{/other_user}",
      "gists_url": "https://api.github.com/users/YioMidd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YioMidd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YioMidd/subscriptions",
      "organizations_url": "https://api.github.com/users/YioMidd/orgs",
      "repos_url": "https://api.github.com/users/YioMidd/repos",
      "events_url": "https://api.github.com/users/YioMidd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YioMidd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-12T09:41:05Z",
    "updated_at": "2016-09-12T09:41:05Z",
    "author_association": "NONE",
    "body": "The `writerWithValueSupplier:`block will call many times in a very short time, you too?  \n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/246475896",
    "html_url": "https://github.com/grpc/grpc/issues/6113#issuecomment-246475896",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6113",
    "id": 246475896,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjQ3NTg5Ng==",
    "user": {
      "login": "jcanizales",
      "id": 5120183,
      "node_id": "MDQ6VXNlcjUxMjAxODM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5120183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jcanizales",
      "html_url": "https://github.com/jcanizales",
      "followers_url": "https://api.github.com/users/jcanizales/followers",
      "following_url": "https://api.github.com/users/jcanizales/following{/other_user}",
      "gists_url": "https://api.github.com/users/jcanizales/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jcanizales/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jcanizales/subscriptions",
      "organizations_url": "https://api.github.com/users/jcanizales/orgs",
      "repos_url": "https://api.github.com/users/jcanizales/repos",
      "events_url": "https://api.github.com/users/jcanizales/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jcanizales/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-12T20:11:19Z",
    "updated_at": "2016-09-12T20:11:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "@YioMidd correct. As described [in its appledoc](https://github.com/grpc/grpc/blob/master/src/objective-c/RxLibrary/GRXWriter%2BImmediate.h#L48), once you start the writer created by `writerWithValueSupplier:`, it'll call the block you passed to retrieve values to write. It'll keep calling the block until its state is set to [`GRXWriterStatePaused`](https://github.com/grpc/grpc/blob/master/src/objective-c/RxLibrary/GRXWriter.h#L53) or is manually stopped via [`finishWithError:`](https://github.com/grpc/grpc/blob/master/src/objective-c/RxLibrary/GRXWriter.h#L120). The expected situation, though, is that the block will eventually return `nil` to signal that the sequence of values to write is over.\n\nIf you want a writer that writes only one value, instead of `writerWithValueSupplier:` you can create your writer with `writerWithValue:`.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/246548367",
    "html_url": "https://github.com/grpc/grpc/issues/6113#issuecomment-246548367",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6113",
    "id": 246548367,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjU0ODM2Nw==",
    "user": {
      "login": "YioMidd",
      "id": 21005386,
      "node_id": "MDQ6VXNlcjIxMDA1Mzg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/21005386?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YioMidd",
      "html_url": "https://github.com/YioMidd",
      "followers_url": "https://api.github.com/users/YioMidd/followers",
      "following_url": "https://api.github.com/users/YioMidd/following{/other_user}",
      "gists_url": "https://api.github.com/users/YioMidd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YioMidd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YioMidd/subscriptions",
      "organizations_url": "https://api.github.com/users/YioMidd/orgs",
      "repos_url": "https://api.github.com/users/YioMidd/repos",
      "events_url": "https://api.github.com/users/YioMidd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YioMidd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-13T01:41:27Z",
    "updated_at": "2016-09-13T01:41:27Z",
    "author_association": "NONE",
    "body": "@jcanizales I want a writer that writes one value, then keep active(but not write any value), so I try the code following this:\n\n``` objective-c\n__block BOOL isFirstPush = YES;\n    GRXWriter *writer = [GRXWriter writerWithValueSupplier:^id{\n        if (!isFirstPush) {\n            writer.state = GRXWriterStatePaused;\n        }\n        isFirstPush = NO;\n        return request;\n    }];\n```\n\nBut it doesn't work.  The block also return `request` many times in a short time.  \n[#8060](https://github.com/grpc/grpc/issues/8060)\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/246557368",
    "html_url": "https://github.com/grpc/grpc/issues/6113#issuecomment-246557368",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6113",
    "id": 246557368,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjU1NzM2OA==",
    "user": {
      "login": "jcanizales",
      "id": 5120183,
      "node_id": "MDQ6VXNlcjUxMjAxODM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5120183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jcanizales",
      "html_url": "https://github.com/jcanizales",
      "followers_url": "https://api.github.com/users/jcanizales/followers",
      "following_url": "https://api.github.com/users/jcanizales/following{/other_user}",
      "gists_url": "https://api.github.com/users/jcanizales/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jcanizales/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jcanizales/subscriptions",
      "organizations_url": "https://api.github.com/users/jcanizales/orgs",
      "repos_url": "https://api.github.com/users/jcanizales/repos",
      "events_url": "https://api.github.com/users/jcanizales/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jcanizales/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-13T02:43:52Z",
    "updated_at": "2016-09-13T02:45:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "Notice that you're referencing `writer`, which is a pointer value, within the block you're passing as an argument to `writerWithValueSupplier:`. But the value of `writer` cannot be known when calculating that argument, as it'll be the result of the method. That means that when your block is created, it captures the value of `writer` as `nil`, and later `nil.state = GRXWriterStatePaused;` is effectively a nop, explaining the behavior.\n\nA way around that limitation is to declare `writer` as `__block` too. I think that still requires the declaration to happen before the assignment, like so:\n\n``` objective-c\n__block BOOL isFirstPush = YES;\n__block GRXWriter *writer;\nwriter = [GRXWriter writerWithValueSupplier:^id{\n    if (!isFirstPush) {\n        writer.state = GRXWriterStatePaused;\n    }\n    isFirstPush = NO;\n    return request;\n}];\n```\n\nBut notice that that creates a reference cycle which isn't simple to break (`writer` keeps a reference to the block, which captures a reference to `writer`). Fortunately there's a much simpler way to get a writer with the behavior you want:\n\n``` objective-c\n// Read the warning at GRXBufferedPipe.h before using this class in your app.\n// We use it as a GRXWriteable (meaning we can write values into the pipe at any moment).\n// And we can pass it to methods that expect a GRXWriter.\nGRXWriter<GRXWriteable> *pipe = [GRXBufferedPipe pipe];\n\n// Buffer \"request\" in the pipe. Later on, when the pipe is told to start writing, it'll\n// write \"request\" into the object passed to -[startWithWriteable:].\n[pipe writeValue:request];\n\n// The following would end the \"input\" sequence, but in your case you don't want to do\n// that, because you just want the sequence to hang there indefinitely after its first\n// value.\n// [pipe writesFinishedWithError:nil];\n```\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/246562458",
    "html_url": "https://github.com/grpc/grpc/issues/6113#issuecomment-246562458",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6113",
    "id": 246562458,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjU2MjQ1OA==",
    "user": {
      "login": "YioMidd",
      "id": 21005386,
      "node_id": "MDQ6VXNlcjIxMDA1Mzg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/21005386?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YioMidd",
      "html_url": "https://github.com/YioMidd",
      "followers_url": "https://api.github.com/users/YioMidd/followers",
      "following_url": "https://api.github.com/users/YioMidd/following{/other_user}",
      "gists_url": "https://api.github.com/users/YioMidd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YioMidd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YioMidd/subscriptions",
      "organizations_url": "https://api.github.com/users/YioMidd/orgs",
      "repos_url": "https://api.github.com/users/YioMidd/repos",
      "events_url": "https://api.github.com/users/YioMidd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YioMidd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-13T03:22:19Z",
    "updated_at": "2016-09-13T03:22:19Z",
    "author_association": "NONE",
    "body": "@jcanizales  I try to use the code you supported above\n\n```\n__block BOOL isFirstPush = YES;\n    __block GRXWriter *writer;\n    writer = [GRXWriter writerWithValueSupplier:^id{\n        if (!isFirstPush) {\n            writer.state = GRXWriterStatePaused;\n        }\n        isFirstPush = NO;\n        MCSLog(@\"I print in writer block.\");\n        return request;\n    }];\n```\n\nand then the console logs like this:\n\n```\n2016-09-13 11:18:38.588 MCStation[5951:2366306] I print in writer block.\n2016-09-13 11:18:39.219 MCStation[5951:2366374] I print in writer block.\n2016-09-13 11:18:39.220 MCStation[5951:2366374] I print in writer block.\n... // many times\n2016-09-13 11:18:39.444 MCStation[5951:2366374] I print in writer block.\n2016-09-13 11:18:39.444 MCStation[5951:2366374] I print in writer block.\n```\n\nbut the evenHandler block does not.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/246563195",
    "html_url": "https://github.com/grpc/grpc/issues/6113#issuecomment-246563195",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6113",
    "id": 246563195,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjU2MzE5NQ==",
    "user": {
      "login": "YioMidd",
      "id": 21005386,
      "node_id": "MDQ6VXNlcjIxMDA1Mzg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/21005386?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YioMidd",
      "html_url": "https://github.com/YioMidd",
      "followers_url": "https://api.github.com/users/YioMidd/followers",
      "following_url": "https://api.github.com/users/YioMidd/following{/other_user}",
      "gists_url": "https://api.github.com/users/YioMidd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YioMidd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YioMidd/subscriptions",
      "organizations_url": "https://api.github.com/users/YioMidd/orgs",
      "repos_url": "https://api.github.com/users/YioMidd/repos",
      "events_url": "https://api.github.com/users/YioMidd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YioMidd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-13T03:28:08Z",
    "updated_at": "2016-09-13T03:28:08Z",
    "author_association": "NONE",
    "body": "@jcanizales Nice!! Thank you very much!!!!  I use `GRXWriter<GRXWriteable> *pipe = [GRXBufferedPipe pipe];`, and then solve my problem. The `evenHandler` log the message I want..  Thx ! 👍 \n\n```\n2016-09-13 11:24:03.942 MCStation[5956:2367534] RPCToQueueWithRequestsWriter :<NSThread: 0x15dd04a30>{number = 1, name = main}\n2016-09-13 11:24:03.943 MCStation[5956:2367534] rank:7  length:8\n2016-09-13 11:24:08.950 MCStation[5956:2367534] RPCToQueueWithRequestsWriter :<NSThread: 0x15dd04a30>{number = 1, name = main}\n2016-09-13 11:24:08.951 MCStation[5956:2367534] rank:7  length:9\n2016-09-13 11:24:13.967 MCStation[5956:2367534] RPCToQueueWithRequestsWriter :<NSThread: 0x15dd04a30>{number = 1, name = main}\n2016-09-13 11:24:13.967 MCStation[5956:2367534] rank:7  length:8\n```\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/246570659",
    "html_url": "https://github.com/grpc/grpc/issues/6113#issuecomment-246570659",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6113",
    "id": 246570659,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjU3MDY1OQ==",
    "user": {
      "login": "YioMidd",
      "id": 21005386,
      "node_id": "MDQ6VXNlcjIxMDA1Mzg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/21005386?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YioMidd",
      "html_url": "https://github.com/YioMidd",
      "followers_url": "https://api.github.com/users/YioMidd/followers",
      "following_url": "https://api.github.com/users/YioMidd/following{/other_user}",
      "gists_url": "https://api.github.com/users/YioMidd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YioMidd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YioMidd/subscriptions",
      "organizations_url": "https://api.github.com/users/YioMidd/orgs",
      "repos_url": "https://api.github.com/users/YioMidd/repos",
      "events_url": "https://api.github.com/users/YioMidd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YioMidd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-13T04:30:36Z",
    "updated_at": "2016-09-13T04:30:36Z",
    "author_association": "NONE",
    "body": "@jcanizales like the `ManagedChannelBuilder.idleTimeout()` in Java, how to set it in Objective-c?\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/246784044",
    "html_url": "https://github.com/grpc/grpc/issues/6113#issuecomment-246784044",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6113",
    "id": 246784044,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Njc4NDA0NA==",
    "user": {
      "login": "jcanizales",
      "id": 5120183,
      "node_id": "MDQ6VXNlcjUxMjAxODM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5120183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jcanizales",
      "html_url": "https://github.com/jcanizales",
      "followers_url": "https://api.github.com/users/jcanizales/followers",
      "following_url": "https://api.github.com/users/jcanizales/following{/other_user}",
      "gists_url": "https://api.github.com/users/jcanizales/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jcanizales/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jcanizales/subscriptions",
      "organizations_url": "https://api.github.com/users/jcanizales/orgs",
      "repos_url": "https://api.github.com/users/jcanizales/repos",
      "events_url": "https://api.github.com/users/jcanizales/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jcanizales/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-13T18:49:19Z",
    "updated_at": "2016-09-13T18:49:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm not very familiar with the Java API, so I'm afraid I don't know what `ManagedChannelBuilder.idleTimeout()` does :)\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/246944794",
    "html_url": "https://github.com/grpc/grpc/issues/6113#issuecomment-246944794",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6113",
    "id": 246944794,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Njk0NDc5NA==",
    "user": {
      "login": "YioMidd",
      "id": 21005386,
      "node_id": "MDQ6VXNlcjIxMDA1Mzg2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/21005386?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YioMidd",
      "html_url": "https://github.com/YioMidd",
      "followers_url": "https://api.github.com/users/YioMidd/followers",
      "following_url": "https://api.github.com/users/YioMidd/following{/other_user}",
      "gists_url": "https://api.github.com/users/YioMidd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YioMidd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YioMidd/subscriptions",
      "organizations_url": "https://api.github.com/users/YioMidd/orgs",
      "repos_url": "https://api.github.com/users/YioMidd/repos",
      "events_url": "https://api.github.com/users/YioMidd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YioMidd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-14T08:39:57Z",
    "updated_at": "2016-09-14T08:39:57Z",
    "author_association": "NONE",
    "body": "Oh, so do I. In other words, I just want to know what other operation should I do after the gPRC connection finished correctly, like manually cancel it or others? \nBTW, using `[protoCall cancel];` cancel manually is correct?    `protoCall` initialized by the code \n\n```\nGRPCProtoCall *protoCall = [clientConnector RPCToQueueWithRequestsWriter:pipe eventHandler:^(BOOL done, QueueResponse * _Nullable response, NSError * _Nullable error) {\n        // do something\n    }];\n```\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/350881489",
    "html_url": "https://github.com/grpc/grpc/issues/6113#issuecomment-350881489",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6113",
    "id": 350881489,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDg4MTQ4OQ==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-11T22:36:45Z",
    "updated_at": "2017-12-11T22:36:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "No activity here for >1year, closing as not useful."
  }
]
