[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/257487096",
    "html_url": "https://github.com/grpc/grpc/issues/8567#issuecomment-257487096",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8567",
    "id": 257487096,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzQ4NzA5Ng==",
    "user": {
      "login": "hinaria",
      "id": 975570,
      "node_id": "MDQ6VXNlcjk3NTU3MA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/975570?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hinaria",
      "html_url": "https://github.com/hinaria",
      "followers_url": "https://api.github.com/users/hinaria/followers",
      "following_url": "https://api.github.com/users/hinaria/following{/other_user}",
      "gists_url": "https://api.github.com/users/hinaria/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hinaria/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hinaria/subscriptions",
      "organizations_url": "https://api.github.com/users/hinaria/orgs",
      "repos_url": "https://api.github.com/users/hinaria/repos",
      "events_url": "https://api.github.com/users/hinaria/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hinaria/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-01T04:37:07Z",
    "updated_at": "2016-11-01T06:52:39Z",
    "author_association": "NONE",
    "body": "Seems that calling `GrpcEnvironment.SetCompletionQueueCount(1)` seems to work around this problem.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/258330785",
    "html_url": "https://github.com/grpc/grpc/issues/8567#issuecomment-258330785",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8567",
    "id": 258330785,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODMzMDc4NQ==",
    "user": {
      "login": "apolcyn",
      "id": 9566254,
      "node_id": "MDQ6VXNlcjk1NjYyNTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9566254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apolcyn",
      "html_url": "https://github.com/apolcyn",
      "followers_url": "https://api.github.com/users/apolcyn/followers",
      "following_url": "https://api.github.com/users/apolcyn/following{/other_user}",
      "gists_url": "https://api.github.com/users/apolcyn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apolcyn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apolcyn/subscriptions",
      "organizations_url": "https://api.github.com/users/apolcyn/orgs",
      "repos_url": "https://api.github.com/users/apolcyn/repos",
      "events_url": "https://api.github.com/users/apolcyn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apolcyn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-04T02:37:17Z",
    "updated_at": "2016-11-04T02:38:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "@imiuka based on the repro, this appears to be due to a mixture of sync and async code in the \"main\" methods of the clients and servers, but mainly the `Console.Readline()` in `GreeterServer/Program.cs`.\n\nIt works as expected if this line is changed to:\n\n```\nawait Task.Run(() => Console.Readline());\n```\n\nGoing into why this is happening here, the async client request awaitable completes and gets filled in by one of the threads in the GRPC thread pool. As mentioned in https://github.com/grpc/grpc/issues/8580, this thread is polling for work on a \"completion queue\" \"event source\". When the async client request completes, you're running on that GRPC thread. When the server starts up, it's ready to receive requests and run handlers on this same thread pool. But the `Console.Readline()` ends up blocking on that GRPC thread that the client request was completed on, and so requests that wind up arriving on the \"completion queue\" which that thread was polling on never get seen. Similarly to https://github.com/grpc/grpc/issues/8580, setting the completion queue count to 1 causes other threads to share that same event source, and so the events do get seen.\n\nbtw, (though this isn't a part of an API guarantee), this can be seen by looking at the current thread name. For example, running:\n\n```\nConsole.WriteLine($\"running on thread: {Thread.CurrentThread.Name}\");\nConsole.Readline()\n```\n\nshows that it's running on GPRC thread 0, polling on \"completion queue\" 0. \n\nLooking at the thread names in the `SayHello` handler of that same process shows that all of the requests that do get received are running on different threads, on different \"completion queues\".\nBut requests that land on \"completion queue 0\" won't get seen.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/258334680",
    "html_url": "https://github.com/grpc/grpc/issues/8567#issuecomment-258334680",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8567",
    "id": 258334680,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODMzNDY4MA==",
    "user": {
      "login": "hinaria",
      "id": 975570,
      "node_id": "MDQ6VXNlcjk3NTU3MA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/975570?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hinaria",
      "html_url": "https://github.com/hinaria",
      "followers_url": "https://api.github.com/users/hinaria/followers",
      "following_url": "https://api.github.com/users/hinaria/following{/other_user}",
      "gists_url": "https://api.github.com/users/hinaria/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hinaria/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hinaria/subscriptions",
      "organizations_url": "https://api.github.com/users/hinaria/orgs",
      "repos_url": "https://api.github.com/users/hinaria/repos",
      "events_url": "https://api.github.com/users/hinaria/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hinaria/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-04T03:10:09Z",
    "updated_at": "2016-11-04T14:15:58Z",
    "author_association": "NONE",
    "body": "Oh my god, you are totally right and I am an idiot. I'd totally failed to notice that the remaining code post-await runs on the grpc completion threads. Thank you, there's no bug here.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/258517726",
    "html_url": "https://github.com/grpc/grpc/issues/8567#issuecomment-258517726",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8567",
    "id": 258517726,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODUxNzcyNg==",
    "user": {
      "login": "apolcyn",
      "id": 9566254,
      "node_id": "MDQ6VXNlcjk1NjYyNTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9566254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apolcyn",
      "html_url": "https://github.com/apolcyn",
      "followers_url": "https://api.github.com/users/apolcyn/followers",
      "following_url": "https://api.github.com/users/apolcyn/following{/other_user}",
      "gists_url": "https://api.github.com/users/apolcyn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apolcyn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apolcyn/subscriptions",
      "organizations_url": "https://api.github.com/users/apolcyn/orgs",
      "repos_url": "https://api.github.com/users/apolcyn/repos",
      "events_url": "https://api.github.com/users/apolcyn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apolcyn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-04T18:51:52Z",
    "updated_at": "2016-11-04T18:51:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "closing this, but thanks for posting what looked suspicious anyways!\n"
  }
]
