[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/352581813",
    "html_url": "https://github.com/grpc/grpc/pull/13815#issuecomment-352581813",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13815",
    "id": 352581813,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjU4MTgxMw==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-18T22:43:40Z",
    "updated_at": "2017-12-18T22:43:40Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE        FILE SIZE\n ++++++++++++++  ++++++++++++++\n\n  [ = ]       0        0  [ = ]\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n  +1.5% +3.26Ki [None]                                                                               +51.1Ki  +1.0%\n      +1.6% +3.27Ki [Unmapped]                                                                           +51.1Ki  +1.0%\n      [NEW]      +8 DW.ref._ZTISt9exception                                                                   +8  [NEW]\n   +14% +1.49Ki src/cpp/server/health/default_health_check_service.cc                                +1.49Ki   +14%\n      [NEW]    +515 grpc::Status grpc::internal::CatchingFunctionHandler<grpc::internal::RpcMethodHandle    +515  [NEW]\n       +26%    +438 grpc::DefaultHealthCheckService::HealthCheckServiceImpl::Check                          +438   +26%\n      [NEW]    +215 std::pair<std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::cha    +215  [NEW]\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +42%    +165 grpc::DefaultHealthCheckService::HealthCheckServiceImpl::HealthCheckServiceImpl         +165   +42%\n      +4.0%    +160 grpc::internal::RpcMethodHandler<grpc::DefaultHealthCheckService::HealthCheckService    +160  +4.0%\n      +9.0%     +47 grpc::DefaultHealthCheckService::SetServingStatus                                        +47  +9.0%\n       +16%     +19 grpc::DefaultHealthCheckService::GetHealthCheckService                                   +19   +16%\n\n -------------- SHRINKING                                                                            --------------\n  -0.7%    -249 src/cpp/server/server_cc.cc                                                             -249  -0.7%\n      [DEL] -3.93Ki grpc::Server::SyncRequestThreadManager::DoWork(void*, bool) [clone .part.58]         -3.93Ki  [DEL]\n      [DEL]    -194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    -194  [DEL]\n      -2.3%      -8 grpc::ServerInterface::GenericAsyncRequest::GenericAsyncRequest                           -8  -2.3%\n  -8.0%     -50 src/cpp/util/status.cc                                                                   -50  -8.3%\n      [DEL]     -50 grpc::Status::~Status                                                                    -50  [DEL]\n\n  +1.3% +4.46Ki TOTAL                                                                                +52.3Ki  +1.0%\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/352584470",
    "html_url": "https://github.com/grpc/grpc/pull/13815#issuecomment-352584470",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13815",
    "id": 352584470,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjU4NDQ3MA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-18T22:56:04Z",
    "updated_at": "2017-12-18T22:56:04Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/352592373",
    "html_url": "https://github.com/grpc/grpc/pull/13815#issuecomment-352592373",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13815",
    "id": 352592373,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjU5MjM3Mw==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-18T23:36:19Z",
    "updated_at": "2017-12-18T23:36:19Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] Performance differences noted:\nBenchmark                                                                   cpu_time    real_time\n--------------------------------------------------------------------------  ----------  -----------\nBM_ClosureInitAgainstCombiner                                               -9%         -9%\nBM_ErrorHttpError<SimpleError>                                              -6%         -6%\nBM_HpackEncoderEncodeHeader<SingleNonInternedBinaryElem<3, false>>/0/16384  -6%         -6%\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/352812199",
    "html_url": "https://github.com/grpc/grpc/pull/13815#issuecomment-352812199",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13815",
    "id": 352812199,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjgxMjE5OQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-19T16:31:57Z",
    "updated_at": "2017-12-19T16:31:57Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE        FILE SIZE\n ++++++++++++++  ++++++++++++++\n\n  [ = ]       0        0  [ = ]\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n  +1.5% +3.26Ki [None]                                                                               +51.1Ki  +1.0%\n      +1.6% +3.27Ki [Unmapped]                                                                           +51.1Ki  +1.0%\n      [NEW]      +8 DW.ref._ZTISt9exception                                                                   +8  [NEW]\n   +14% +1.49Ki src/cpp/server/health/default_health_check_service.cc                                +1.49Ki   +14%\n      [NEW]    +515 grpc::Status grpc::internal::CatchingFunctionHandler<grpc::internal::RpcMethodHandle    +515  [NEW]\n       +26%    +438 grpc::DefaultHealthCheckService::HealthCheckServiceImpl::Check                          +438   +26%\n      [NEW]    +215 std::pair<std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::cha    +215  [NEW]\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +42%    +165 grpc::DefaultHealthCheckService::HealthCheckServiceImpl::HealthCheckServiceImpl         +165   +42%\n      +4.0%    +160 grpc::internal::RpcMethodHandler<grpc::DefaultHealthCheckService::HealthCheckService    +160  +4.0%\n      +9.0%     +47 grpc::DefaultHealthCheckService::SetServingStatus                                        +47  +9.0%\n       +16%     +19 grpc::DefaultHealthCheckService::GetHealthCheckService                                   +19   +16%\n\n -------------- SHRINKING                                                                            --------------\n  -0.7%    -249 src/cpp/server/server_cc.cc                                                             -249  -0.7%\n      [DEL] -3.93Ki grpc::Server::SyncRequestThreadManager::DoWork(void*, bool) [clone .part.58]         -3.93Ki  [DEL]\n      [DEL]    -194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    -194  [DEL]\n      -2.3%      -8 grpc::ServerInterface::GenericAsyncRequest::GenericAsyncRequest                           -8  -2.3%\n  -8.0%     -50 src/cpp/util/status.cc                                                                   -50  -8.3%\n      [DEL]     -50 grpc::Status::~Status                                                                    -50  [DEL]\n\n  +1.3% +4.46Ki TOTAL                                                                                +52.3Ki  +1.0%\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/352816120",
    "html_url": "https://github.com/grpc/grpc/pull/13815#issuecomment-352816120",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13815",
    "id": 352816120,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjgxNjEyMA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-19T16:44:28Z",
    "updated_at": "2017-12-19T16:44:28Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/352825461",
    "html_url": "https://github.com/grpc/grpc/pull/13815#issuecomment-352825461",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13815",
    "id": 352825461,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjgyNTQ2MQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-19T17:14:51Z",
    "updated_at": "2017-12-19T17:14:51Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE        FILE SIZE\n ++++++++++++++  ++++++++++++++\n\n  [ = ]       0        0  [ = ]\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n  +4.9% +10.4Ki [None]                                                                                +178Ki  +3.7%\n      +5.4% +10.4Ki [Unmapped]                                                                            +178Ki  +3.7%\n      [NEW]      +8 DW.ref._ZTISt9exception                                                                   +8  [NEW]\n      +7.5%      +8 [None]                                                                                     0  [ = ]\n   +16% +1.50Ki src/cpp/server/server_builder.cc                                                     +1.50Ki   +16%\n       +22%    +587 grpc::ServerBuilder::BuildAndStart                                                      +587   +22%\n       +68%    +304 grpc::ServerBuilder::ServerBuilder                                                      +304   +68%\n      [NEW]    +235 std::vector<grpc::ServerBuilder::Port, std::allocator<grpc::ServerBuilder::Port> >::    +235  [NEW]\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n      [NEW]    +149 grpc::ServerBuilder::Port::~Port                                                        +149  [NEW]\n       +10%     +77 void std::vector<grpc::ServerBuilder::Port, std::allocator<grpc::ServerBuilder::Port     +77   +10%\n      [NEW]     +61 grpc::GrpcLibraryCodegen::~GrpcLibraryCodegen() [clone .part.0]                          +61  [NEW]\n       +15%     +57 grpc::ServerBuilder::AddCompletionQueue                                                  +57   +15%\n       +24%     +51 grpc::ServerBuilder::EnableWorkaround                                                    +51   +24%\n      +4.3%     +41 grpc::ServerBuilder::AddListeningPort                                                    +41  +4.3%\n       +21%     +32 grpc::ServerBuilder::RegisterService                                                     +32   +21%\n      +0.3%      +1 void std::vector<std::unique_ptr<grpc::ServerBuilderOption, std::default_delete<grpc      +1  +0.3%\n      +0.3%      +1 void std::vector<std::unique_ptr<grpc::ServerBuilderPlugin, std::default_delete<grpc      +1  +0.3%\n   +14% +1.49Ki src/cpp/server/health/default_health_check_service.cc                                +1.49Ki   +14%\n      [NEW]    +515 grpc::Status grpc::internal::CatchingFunctionHandler<grpc::internal::RpcMethodHandle    +515  [NEW]\n       +26%    +438 grpc::DefaultHealthCheckService::HealthCheckServiceImpl::Check                          +438   +26%\n      [NEW]    +215 std::pair<std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::cha    +215  [NEW]\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +42%    +165 grpc::DefaultHealthCheckService::HealthCheckServiceImpl::HealthCheckServiceImpl         +165   +42%\n      +4.0%    +160 grpc::internal::RpcMethodHandler<grpc::DefaultHealthCheckService::HealthCheckService    +160  +4.0%\n      +9.0%     +47 grpc::DefaultHealthCheckService::SetServingStatus                                        +47  +9.0%\n       +16%     +19 grpc::DefaultHealthCheckService::GetHealthCheckService                                   +19   +16%\n   +10%    +820 src/cpp/client/secure_credentials.cc                                                    +820   +10%\n      [NEW]    +198 std::function<void ()>::function<std::_Bind<std::_Mem_fn<void (grpc::MetadataCredent    +198  [NEW]\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +12%    +190 grpc::MetadataCredentialsPluginWrapper::InvokePlugin                                    +190   +12%\n      [NEW]     +61 grpc::GrpcLibraryCodegen::~GrpcLibraryCodegen() [clone .part.0]                          +61  [NEW]\n       +41%     +56 grpc::(anonymous namespace)::WrapCallCredentials                                         +56   +41%\n       +41%     +56 grpc::(anonymous namespace)::WrapChannelCredentials                                      +56   +41%\n       +12%     +52 grpc::MetadataCredentialsFromPlugin                                                      +52   +12%\n       +28%     +45 grpc::MetadataCredentialsPluginWrapper::MetadataCredentialsPluginWrapper                 +45   +28%\n       +19%     +30 grpc::SecureChannelCredentials::CreateChannel                                            +30   +19%\n      +9.8%     +25 grpc::AccessTokenCredentials                                                             +25  +9.8%\n      +9.8%     +25 grpc::GoogleRefreshTokenCredentials                                                      +25  +9.8%\n       +10%     +25 grpc::GoogleComputeEngineCredentials                                                     +25   +10%\n      +6.3%     +17 grpc::GoogleIAMCredentials                                                               +17  +6.3%\n      +6.9%     +17 grpc::GoogleDefaultCredentials                                                           +17  +6.9%\n      +5.3%     +16 grpc::SslCredentials                                                                     +16  +5.3%\n      +4.4%     +16 grpc::ServiceAccountJWTAccessCredentials                                                 +16  +4.4%\n      +1.8%     +10 grpc::MetadataCredentialsPluginWrapper::GetMetadata                                      +10  +1.8%\n   +20%    +718 src/cpp/client/client_context.cc                                                        +718   +20%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +35%    +176 grpc::ClientContext::ClientContext                                                      +176   +35%\n      [NEW]    +167 [ELF Headers]                                                                           +167  [NEW]\n       +88%     +82 grpc::ClientContext::TryCancel                                                           +82   +88%\n       +12%     +63 grpc::ClientContext::set_call                                                            +63   +12%\n       +18%     +54 grpc::ClientContext::set_compression_algorithm                                           +54   +18%\n      +7.1%     +50 grpc::ClientContext::AddMetadata                                                         +50  +7.1%\n      [NEW]     +49 std::unique_lock<std::mutex>::unlock                                                     +49  [NEW]\n      [NEW]     +40 grpc::internal::MetadataMap::~MetadataMap                                                +40  [NEW]\n       +22%     +20 grpc::ClientContext::peer[abi:cxx11]() const                                             +20   +22%\n       +25%     +19 grpc::ClientContext::FromServerContext                                                   +19   +25%\n   +18%    +717 src/cpp/server/dynamic_thread_pool.cc                                                   +717   +18%\n      [NEW]    +200 std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::~deque    +200  [NEW]\n       +17%    +170 grpc::DynamicThreadPool::DynamicThreadPool                                              +170   +17%\n       +48%     +97 std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::     +97   +48%\n      [NEW]     +93 std::function<void ()>::function                                                         +93  [NEW]\n       +37%     +79 grpc::DynamicThreadPool::DynamicThread::ThreadFunc                                       +79   +37%\n       +24%     +39 grpc::DynamicThreadPool::DynamicThread::DynamicThread                                    +39   +24%\n      +4.6%     +13 grpc::DynamicThreadPool::Add                                                             +13  +4.6%\n      +1.9%     +10 void std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_     +10  +1.9%\n       +17%      +9 [Unmapped]                                                                                +9   +17%\n      +1.1%      +7 grpc::DynamicThreadPool::ThreadFunc                                                       +7  +1.1%\n  +4.7%    +599 src/cpp/client/generic_stub.cc                                                          +599  +4.7%\n       +11%    +191 grpc::internal::CallOpClientRecvStatus::FinishOp                                        +191   +11%\n       +19%    +120 grpc::GenericStub::PrepareUnaryCall                                                     +120   +19%\n      +6.9%     +91 grpc::GenericStub::Call                                                                  +91  +6.9%\n      +6.8%     +51 grpc::ClientAsyncResponseReader<grpc::ByteBuffer>::StartCall                             +51  +6.8%\n      +4.5%     +37 grpc::ClientAsyncReaderWriter<grpc::ByteBuffer, grpc::ByteBuffer>::StartCall             +37  +4.5%\n       +11%     +31 grpc::ClientAsyncReaderWriter<grpc::ByteBuffer, grpc::ByteBuffer>::Write                 +31   +11%\n       +12%     +31 grpc::ClientAsyncReaderWriter<grpc::ByteBuffer, grpc::ByteBuffer>::Write                 +31   +12%\n      +3.1%     +29 grpc::internal::CallOpSet<grpc::internal::CallOpRecvInitialMetadata, grpc::internal:     +29  +3.1%\n      +3.2%     +29 grpc::internal::CallOpSet<grpc::internal::CallOpRecvInitialMetadata, grpc::internal:     +29  +3.2%\n   +11%    +594 src/cpp/common/channel_arguments.cc                                                     +594   +11%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +34%    +114 grpc::ChannelArguments::ChannelArguments                                                +114   +34%\n       +12%     +94 grpc::ChannelArguments::SetSocketMutator                                                 +94   +12%\n      +9.6%     +74 grpc::ChannelArguments::SetUserAgentPrefix                                               +74  +9.6%\n      +8.8%     +68 grpc::ChannelArguments::ChannelArguments                                                 +68  +8.8%\n      [NEW]     +58 std::__cxx11::_List_base<std::__cxx11::basic_string<char, std::char_traits<char>, st     +58  [NEW]\n       +23%     +32 grpc::ChannelArguments::SetResourceQuota                                                 +32   +23%\n       +26%     +32 grpc::ChannelArguments::SetServiceConfigJSON                                             +32   +26%\n       +26%     +32 grpc::ChannelArguments::SetMaxSendMessageSize                                            +32   +26%\n       +26%     +32 grpc::ChannelArguments::SetCompressionAlgorithm                                          +32   +26%\n       +26%     +32 grpc::ChannelArguments::SetGrpclbFallbackTimeout                                         +32   +26%\n       +26%     +32 grpc::ChannelArguments::SetMaxReceiveMessageSize                                         +32   +26%\n       +26%     +32 grpc::ChannelArguments::SetLoadBalancingPolicyName                                       +32   +26%\n       +11%     +27 grpc::ChannelArguments::SetPointerWithVtable                                             +27   +11%\n       +12%     +27 grpc::ChannelArguments::SetInt                                                           +27   +12%\n      +7.0%     +21 grpc::ChannelArguments::SetString                                                        +21  +7.0%\n   +11%    +445 src/cpp/client/channel_cc.cc                                                            +445   +11%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n      [NEW]     +98 std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release                            +98  [NEW]\n       +31%     +79 grpc::Channel::Channel                                                                   +79   +31%\n       +11%     +68 grpc::Channel::WaitForStateChangeImpl                                                    +68   +11%\n      [NEW]     +61 grpc::GrpcLibraryCodegen::~GrpcLibraryCodegen() [clone .part.0]                          +61  [NEW]\n      +4.6%     +57 grpc::Channel::CreateCall                                                                +57  +4.6%\n      [NEW]     +50 std::__throw_bad_weak_ptr                                                                +50  [NEW]\n       +11%     +30 grpc::(anonymous namespace)::GetChannelInfoField                                         +30   +11%\n      +1.1%      +2 [Unmapped]                                                                                +2  +1.1%\n  +8.5%    +399 src/cpp/server/server_context.cc                                                        +399  +8.5%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +17%    +144 grpc::ServerContext::ServerContext                                                      +144   +17%\n       +18%     +54 grpc::ServerContext::set_compression_algorithm                                           +54   +18%\n      [NEW]     +50 std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<ch     +50  [NEW]\n       +25%     +44 grpc::ServerContext::AddInitialMetadata                                                  +44   +25%\n       +25%     +44 grpc::ServerContext::AddTrailingMetadata                                                 +44   +25%\n       +18%     +29 grpc::ServerContext::SetLoadReportingCosts                                               +29   +18%\n       +22%     +20 grpc::ServerContext::peer[abi:cxx11]() const                                             +20   +22%\n       +18%     +19 grpc::ServerContext::CompletionOp::Unref                                                 +19   +18%\n  +7.9%    +378 src/cpp/server/secure_server_credentials.cc                                             +378  +7.9%\n      +9.9%    +242 grpc::AuthMetadataProcessorAyncWrapper::InvokeProcessor                                 +242  +9.9%\n       +20%     +70 grpc::AuthMetadataProcessorAyncWrapper::Process                                          +70   +20%\n       +11%     +52 grpc::SslServerCredentials                                                               +52   +11%\n       +16%     +19 grpc::SecureServerCredentials::SetAuthMetadataProcessor                                  +19   +16%\n      +1.7%      +4 void std::vector<grpc_ssl_pem_key_cert_pair, std::allocator<grpc_ssl_pem_key_cert_pa      +4  +1.7%\n  +6.1%    +213 [Other]                                                                                 +213  +6.1%\n   +16%    +213 src/cpp/util/byte_buffer_cc.cc                                                          +213   +16%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +39%    +127 void std::vector<grpc::Slice, std::allocator<grpc::Slice> >::_M_emplace_back_aux<grp    +127   +39%\n       +16%     +86 grpc::ByteBuffer::Dump(std::vector<grpc::Slice, std::allocator<grpc::Slice> >*) cons     +86   +16%\n   +22%    +111 src/cpp/client/insecure_credentials.cc                                                  +111   +23%\n       +55%     +63 grpc::InsecureChannelCredentials                                                         +63   +55%\n       +26%     +37 grpc::(anonymous namespace)::InsecureChannelCredentialsImpl::CreateChannel               +37   +26%\n       +15%     +11 [Unmapped]                                                                               +11   +15%\n   +19%    +102 src/cpp/client/create_channel.cc                                                        +102   +19%\n       +17%     +67 grpc::CreateCustomChannel                                                                +67   +17%\n       +21%     +22 grpc::CreateChannel                                                                      +22   +21%\n      [NEW]     +13 [Unmapped]                                                                               +13  [NEW]\n  +3.3%     +80 src/cpp/thread_manager/thread_manager.cc                                                 +80  +3.3%\n       +22%     +61 grpc::ThreadManager::WorkerThread::WorkerThread                                          +61   +22%\n       +12%     +36 grpc::ThreadManager::CleanupCompletedThreads                                             +36   +12%\n       +16%     +19 grpc::ThreadManager::Initialize                                                          +19   +16%\n      +4.3%      +4 [Unmapped]                                                                                +4  +4.3%\n   +12%     +65 src/cpp/client/create_channel_posix.cc                                                   +65   +12%\n       +19%     +33 grpc::CreateCustomInsecureChannelFromFd                                                  +33   +19%\n       +22%     +32 grpc::CreateInsecureChannelFromFd                                                        +32   +22%\n  +8.6%     +65 src/cpp/common/secure_channel_arguments.cc                                               +65  +8.6%\n      +6.2%     +33 grpc::ChannelArguments::GetSslTargetNameOverride[abi:cxx11]() const                      +33  +6.2%\n       +13%     +29 grpc::ChannelArguments::SetSslTargetNameOverride                                         +29   +13%\n       +50%      +3 [Unmapped]                                                                                +3   +50%\n   +15%     +56 src/cpp/client/create_channel_internal.cc                                                +56   +15%\n       +19%     +56 grpc::CreateChannelInternal                                                              +56   +19%\n   +25%     +56 src/cpp/common/secure_create_auth_context.cc                                             +56   +25%\n       +39%     +56 grpc::CreateAuthContext                                                                  +56   +39%\n  +7.0%     +51 src/cpp/server/channel_argument_option.cc                                                +51  +7.0%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +28%     +33 grpc::MakeChannelArgumentOption                                                          +33   +28%\n       +20%     +19 grpc::MakeChannelArgumentOption                                                          +19   +20%\n\n -------------- SHRINKING                                                                            --------------\n  -0.7%    -249 src/cpp/server/server_cc.cc                                                             -249  -0.7%\n      [DEL] -3.93Ki grpc::Server::SyncRequestThreadManager::DoWork(void*, bool) [clone .part.58]         -3.93Ki  [DEL]\n      [DEL]    -194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    -194  [DEL]\n      -2.3%      -8 grpc::ServerInterface::GenericAsyncRequest::GenericAsyncRequest                           -8  -2.3%\n  -8.0%     -50 src/cpp/util/status.cc                                                                   -50  -8.3%\n      [DEL]     -50 grpc::Status::~Status                                                                    -50  [DEL]\n\n  +5.7% +18.7Ki TOTAL                                                                                 +186Ki  +3.8%\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/352826133",
    "html_url": "https://github.com/grpc/grpc/pull/13815#issuecomment-352826133",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13815",
    "id": 352826133,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjgyNjEzMw==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-19T17:17:18Z",
    "updated_at": "2017-12-19T17:17:48Z",
    "author_association": "MEMBER",
    "body": "Confirming that the preprocessor guards in the last commit allow building just fine with \"-fno-exceptions\" or without it. PTAL!\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/352827048",
    "html_url": "https://github.com/grpc/grpc/pull/13815#issuecomment-352827048",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13815",
    "id": 352827048,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjgyNzA0OA==",
    "user": {
      "login": "yang-g",
      "id": 10122250,
      "node_id": "MDQ6VXNlcjEwMTIyMjUw",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10122250?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yang-g",
      "html_url": "https://github.com/yang-g",
      "followers_url": "https://api.github.com/users/yang-g/followers",
      "following_url": "https://api.github.com/users/yang-g/following{/other_user}",
      "gists_url": "https://api.github.com/users/yang-g/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yang-g/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yang-g/subscriptions",
      "organizations_url": "https://api.github.com/users/yang-g/orgs",
      "repos_url": "https://api.github.com/users/yang-g/repos",
      "events_url": "https://api.github.com/users/yang-g/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yang-g/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-19T17:20:45Z",
    "updated_at": "2017-12-19T17:20:45Z",
    "author_association": "MEMBER",
    "body": "LGTM"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/352827941",
    "html_url": "https://github.com/grpc/grpc/pull/13815#issuecomment-352827941",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13815",
    "id": 352827941,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjgyNzk0MQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-19T17:24:15Z",
    "updated_at": "2017-12-19T17:24:15Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE        FILE SIZE\n ++++++++++++++  ++++++++++++++\n\n  [ = ]       0        0  [ = ]\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n  +4.9% +10.4Ki [None]                                                                                +178Ki  +3.7%\n      +5.4% +10.4Ki [Unmapped]                                                                            +178Ki  +3.7%\n      [NEW]      +8 DW.ref._ZTISt9exception                                                                   +8  [NEW]\n      +7.5%      +8 [None]                                                                                     0  [ = ]\n   +16% +1.50Ki src/cpp/server/server_builder.cc                                                     +1.50Ki   +16%\n       +22%    +587 grpc::ServerBuilder::BuildAndStart                                                      +587   +22%\n       +68%    +304 grpc::ServerBuilder::ServerBuilder                                                      +304   +68%\n      [NEW]    +235 std::vector<grpc::ServerBuilder::Port, std::allocator<grpc::ServerBuilder::Port> >::    +235  [NEW]\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n      [NEW]    +149 grpc::ServerBuilder::Port::~Port                                                        +149  [NEW]\n       +10%     +77 void std::vector<grpc::ServerBuilder::Port, std::allocator<grpc::ServerBuilder::Port     +77   +10%\n      [NEW]     +61 grpc::GrpcLibraryCodegen::~GrpcLibraryCodegen() [clone .part.0]                          +61  [NEW]\n       +15%     +57 grpc::ServerBuilder::AddCompletionQueue                                                  +57   +15%\n       +24%     +51 grpc::ServerBuilder::EnableWorkaround                                                    +51   +24%\n      +4.3%     +41 grpc::ServerBuilder::AddListeningPort                                                    +41  +4.3%\n       +21%     +32 grpc::ServerBuilder::RegisterService                                                     +32   +21%\n      +0.3%      +1 void std::vector<std::unique_ptr<grpc::ServerBuilderOption, std::default_delete<grpc      +1  +0.3%\n      +0.3%      +1 void std::vector<std::unique_ptr<grpc::ServerBuilderPlugin, std::default_delete<grpc      +1  +0.3%\n   +14% +1.49Ki src/cpp/server/health/default_health_check_service.cc                                +1.49Ki   +14%\n      [NEW]    +515 grpc::Status grpc::internal::CatchingFunctionHandler<grpc::internal::RpcMethodHandle    +515  [NEW]\n       +26%    +438 grpc::DefaultHealthCheckService::HealthCheckServiceImpl::Check                          +438   +26%\n      [NEW]    +215 std::pair<std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::cha    +215  [NEW]\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +42%    +165 grpc::DefaultHealthCheckService::HealthCheckServiceImpl::HealthCheckServiceImpl         +165   +42%\n      +4.0%    +160 grpc::internal::RpcMethodHandler<grpc::DefaultHealthCheckService::HealthCheckService    +160  +4.0%\n      +9.0%     +47 grpc::DefaultHealthCheckService::SetServingStatus                                        +47  +9.0%\n       +16%     +19 grpc::DefaultHealthCheckService::GetHealthCheckService                                   +19   +16%\n   +10%    +820 src/cpp/client/secure_credentials.cc                                                    +820   +10%\n      [NEW]    +198 std::function<void ()>::function<std::_Bind<std::_Mem_fn<void (grpc::MetadataCredent    +198  [NEW]\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +12%    +190 grpc::MetadataCredentialsPluginWrapper::InvokePlugin                                    +190   +12%\n      [NEW]     +61 grpc::GrpcLibraryCodegen::~GrpcLibraryCodegen() [clone .part.0]                          +61  [NEW]\n       +41%     +56 grpc::(anonymous namespace)::WrapCallCredentials                                         +56   +41%\n       +41%     +56 grpc::(anonymous namespace)::WrapChannelCredentials                                      +56   +41%\n       +12%     +52 grpc::MetadataCredentialsFromPlugin                                                      +52   +12%\n       +28%     +45 grpc::MetadataCredentialsPluginWrapper::MetadataCredentialsPluginWrapper                 +45   +28%\n       +19%     +30 grpc::SecureChannelCredentials::CreateChannel                                            +30   +19%\n      +9.8%     +25 grpc::AccessTokenCredentials                                                             +25  +9.8%\n      +9.8%     +25 grpc::GoogleRefreshTokenCredentials                                                      +25  +9.8%\n       +10%     +25 grpc::GoogleComputeEngineCredentials                                                     +25   +10%\n      +6.3%     +17 grpc::GoogleIAMCredentials                                                               +17  +6.3%\n      +6.9%     +17 grpc::GoogleDefaultCredentials                                                           +17  +6.9%\n      +5.3%     +16 grpc::SslCredentials                                                                     +16  +5.3%\n      +4.4%     +16 grpc::ServiceAccountJWTAccessCredentials                                                 +16  +4.4%\n      +1.8%     +10 grpc::MetadataCredentialsPluginWrapper::GetMetadata                                      +10  +1.8%\n   +20%    +718 src/cpp/client/client_context.cc                                                        +718   +20%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +35%    +176 grpc::ClientContext::ClientContext                                                      +176   +35%\n      [NEW]    +167 [ELF Headers]                                                                           +167  [NEW]\n       +88%     +82 grpc::ClientContext::TryCancel                                                           +82   +88%\n       +12%     +63 grpc::ClientContext::set_call                                                            +63   +12%\n       +18%     +54 grpc::ClientContext::set_compression_algorithm                                           +54   +18%\n      +7.1%     +50 grpc::ClientContext::AddMetadata                                                         +50  +7.1%\n      [NEW]     +49 std::unique_lock<std::mutex>::unlock                                                     +49  [NEW]\n      [NEW]     +40 grpc::internal::MetadataMap::~MetadataMap                                                +40  [NEW]\n       +22%     +20 grpc::ClientContext::peer[abi:cxx11]() const                                             +20   +22%\n       +25%     +19 grpc::ClientContext::FromServerContext                                                   +19   +25%\n   +18%    +717 src/cpp/server/dynamic_thread_pool.cc                                                   +717   +18%\n      [NEW]    +200 std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::~deque    +200  [NEW]\n       +17%    +170 grpc::DynamicThreadPool::DynamicThreadPool                                              +170   +17%\n       +48%     +97 std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::     +97   +48%\n      [NEW]     +93 std::function<void ()>::function                                                         +93  [NEW]\n       +37%     +79 grpc::DynamicThreadPool::DynamicThread::ThreadFunc                                       +79   +37%\n       +24%     +39 grpc::DynamicThreadPool::DynamicThread::DynamicThread                                    +39   +24%\n      +4.6%     +13 grpc::DynamicThreadPool::Add                                                             +13  +4.6%\n      +1.9%     +10 void std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_     +10  +1.9%\n       +17%      +9 [Unmapped]                                                                                +9   +17%\n      +1.1%      +7 grpc::DynamicThreadPool::ThreadFunc                                                       +7  +1.1%\n  +4.7%    +599 src/cpp/client/generic_stub.cc                                                          +599  +4.7%\n       +11%    +191 grpc::internal::CallOpClientRecvStatus::FinishOp                                        +191   +11%\n       +19%    +120 grpc::GenericStub::PrepareUnaryCall                                                     +120   +19%\n      +6.9%     +91 grpc::GenericStub::Call                                                                  +91  +6.9%\n      +6.8%     +51 grpc::ClientAsyncResponseReader<grpc::ByteBuffer>::StartCall                             +51  +6.8%\n      +4.5%     +37 grpc::ClientAsyncReaderWriter<grpc::ByteBuffer, grpc::ByteBuffer>::StartCall             +37  +4.5%\n       +11%     +31 grpc::ClientAsyncReaderWriter<grpc::ByteBuffer, grpc::ByteBuffer>::Write                 +31   +11%\n       +12%     +31 grpc::ClientAsyncReaderWriter<grpc::ByteBuffer, grpc::ByteBuffer>::Write                 +31   +12%\n      +3.1%     +29 grpc::internal::CallOpSet<grpc::internal::CallOpRecvInitialMetadata, grpc::internal:     +29  +3.1%\n      +3.2%     +29 grpc::internal::CallOpSet<grpc::internal::CallOpRecvInitialMetadata, grpc::internal:     +29  +3.2%\n   +11%    +594 src/cpp/common/channel_arguments.cc                                                     +594   +11%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +34%    +114 grpc::ChannelArguments::ChannelArguments                                                +114   +34%\n       +12%     +94 grpc::ChannelArguments::SetSocketMutator                                                 +94   +12%\n      +9.6%     +74 grpc::ChannelArguments::SetUserAgentPrefix                                               +74  +9.6%\n      +8.8%     +68 grpc::ChannelArguments::ChannelArguments                                                 +68  +8.8%\n      [NEW]     +58 std::__cxx11::_List_base<std::__cxx11::basic_string<char, std::char_traits<char>, st     +58  [NEW]\n       +23%     +32 grpc::ChannelArguments::SetResourceQuota                                                 +32   +23%\n       +26%     +32 grpc::ChannelArguments::SetServiceConfigJSON                                             +32   +26%\n       +26%     +32 grpc::ChannelArguments::SetMaxSendMessageSize                                            +32   +26%\n       +26%     +32 grpc::ChannelArguments::SetCompressionAlgorithm                                          +32   +26%\n       +26%     +32 grpc::ChannelArguments::SetGrpclbFallbackTimeout                                         +32   +26%\n       +26%     +32 grpc::ChannelArguments::SetMaxReceiveMessageSize                                         +32   +26%\n       +26%     +32 grpc::ChannelArguments::SetLoadBalancingPolicyName                                       +32   +26%\n       +11%     +27 grpc::ChannelArguments::SetPointerWithVtable                                             +27   +11%\n       +12%     +27 grpc::ChannelArguments::SetInt                                                           +27   +12%\n      +7.0%     +21 grpc::ChannelArguments::SetString                                                        +21  +7.0%\n   +11%    +445 src/cpp/client/channel_cc.cc                                                            +445   +11%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n      [NEW]     +98 std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release                            +98  [NEW]\n       +31%     +79 grpc::Channel::Channel                                                                   +79   +31%\n       +11%     +68 grpc::Channel::WaitForStateChangeImpl                                                    +68   +11%\n      [NEW]     +61 grpc::GrpcLibraryCodegen::~GrpcLibraryCodegen() [clone .part.0]                          +61  [NEW]\n      +4.6%     +57 grpc::Channel::CreateCall                                                                +57  +4.6%\n      [NEW]     +50 std::__throw_bad_weak_ptr                                                                +50  [NEW]\n       +11%     +30 grpc::(anonymous namespace)::GetChannelInfoField                                         +30   +11%\n      +1.1%      +2 [Unmapped]                                                                                +2  +1.1%\n  +8.5%    +399 src/cpp/server/server_context.cc                                                        +399  +8.5%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +17%    +144 grpc::ServerContext::ServerContext                                                      +144   +17%\n       +18%     +54 grpc::ServerContext::set_compression_algorithm                                           +54   +18%\n      [NEW]     +50 std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<ch     +50  [NEW]\n       +25%     +44 grpc::ServerContext::AddInitialMetadata                                                  +44   +25%\n       +25%     +44 grpc::ServerContext::AddTrailingMetadata                                                 +44   +25%\n       +18%     +29 grpc::ServerContext::SetLoadReportingCosts                                               +29   +18%\n       +22%     +20 grpc::ServerContext::peer[abi:cxx11]() const                                             +20   +22%\n       +18%     +19 grpc::ServerContext::CompletionOp::Unref                                                 +19   +18%\n  +7.9%    +378 src/cpp/server/secure_server_credentials.cc                                             +378  +7.9%\n      +9.9%    +242 grpc::AuthMetadataProcessorAyncWrapper::InvokeProcessor                                 +242  +9.9%\n       +20%     +70 grpc::AuthMetadataProcessorAyncWrapper::Process                                          +70   +20%\n       +11%     +52 grpc::SslServerCredentials                                                               +52   +11%\n       +16%     +19 grpc::SecureServerCredentials::SetAuthMetadataProcessor                                  +19   +16%\n      +1.7%      +4 void std::vector<grpc_ssl_pem_key_cert_pair, std::allocator<grpc_ssl_pem_key_cert_pa      +4  +1.7%\n  +6.1%    +213 [Other]                                                                                 +213  +6.1%\n   +16%    +213 src/cpp/util/byte_buffer_cc.cc                                                          +213   +16%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +39%    +127 void std::vector<grpc::Slice, std::allocator<grpc::Slice> >::_M_emplace_back_aux<grp    +127   +39%\n       +16%     +86 grpc::ByteBuffer::Dump(std::vector<grpc::Slice, std::allocator<grpc::Slice> >*) cons     +86   +16%\n   +22%    +111 src/cpp/client/insecure_credentials.cc                                                  +111   +23%\n       +55%     +63 grpc::InsecureChannelCredentials                                                         +63   +55%\n       +26%     +37 grpc::(anonymous namespace)::InsecureChannelCredentialsImpl::CreateChannel               +37   +26%\n       +15%     +11 [Unmapped]                                                                               +11   +15%\n   +19%    +102 src/cpp/client/create_channel.cc                                                        +102   +19%\n       +17%     +67 grpc::CreateCustomChannel                                                                +67   +17%\n       +21%     +22 grpc::CreateChannel                                                                      +22   +21%\n      [NEW]     +13 [Unmapped]                                                                               +13  [NEW]\n  +3.3%     +80 src/cpp/thread_manager/thread_manager.cc                                                 +80  +3.3%\n       +22%     +61 grpc::ThreadManager::WorkerThread::WorkerThread                                          +61   +22%\n       +12%     +36 grpc::ThreadManager::CleanupCompletedThreads                                             +36   +12%\n       +16%     +19 grpc::ThreadManager::Initialize                                                          +19   +16%\n      +4.3%      +4 [Unmapped]                                                                                +4  +4.3%\n   +12%     +65 src/cpp/client/create_channel_posix.cc                                                   +65   +12%\n       +19%     +33 grpc::CreateCustomInsecureChannelFromFd                                                  +33   +19%\n       +22%     +32 grpc::CreateInsecureChannelFromFd                                                        +32   +22%\n  +8.6%     +65 src/cpp/common/secure_channel_arguments.cc                                               +65  +8.6%\n      +6.2%     +33 grpc::ChannelArguments::GetSslTargetNameOverride[abi:cxx11]() const                      +33  +6.2%\n       +13%     +29 grpc::ChannelArguments::SetSslTargetNameOverride                                         +29   +13%\n       +50%      +3 [Unmapped]                                                                                +3   +50%\n   +15%     +56 src/cpp/client/create_channel_internal.cc                                                +56   +15%\n       +19%     +56 grpc::CreateChannelInternal                                                              +56   +19%\n   +25%     +56 src/cpp/common/secure_create_auth_context.cc                                             +56   +25%\n       +39%     +56 grpc::CreateAuthContext                                                                  +56   +39%\n  +7.0%     +51 src/cpp/server/channel_argument_option.cc                                                +51  +7.0%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +28%     +33 grpc::MakeChannelArgumentOption                                                          +33   +28%\n       +20%     +19 grpc::MakeChannelArgumentOption                                                          +19   +20%\n\n -------------- SHRINKING                                                                            --------------\n  -0.7%    -249 src/cpp/server/server_cc.cc                                                             -249  -0.7%\n      [DEL] -3.93Ki grpc::Server::SyncRequestThreadManager::DoWork(void*, bool) [clone .part.58]         -3.93Ki  [DEL]\n      [DEL]    -194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    -194  [DEL]\n      -2.3%      -8 grpc::ServerInterface::GenericAsyncRequest::GenericAsyncRequest                           -8  -2.3%\n  -8.0%     -50 src/cpp/util/status.cc                                                                   -50  -8.3%\n      [DEL]     -50 grpc::Status::~Status                                                                    -50  [DEL]\n\n  +5.7% +18.7Ki TOTAL                                                                                 +186Ki  +3.8%\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/352828065",
    "html_url": "https://github.com/grpc/grpc/pull/13815#issuecomment-352828065",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13815",
    "id": 352828065,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjgyODA2NQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-19T17:24:42Z",
    "updated_at": "2017-12-19T17:24:42Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] Performance differences noted:\nBenchmark                    cpu_time    real_time\n---------------------------  ----------  -----------\nBM_MetadataRefUnrefExternal  +5%         +20%\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/352828633",
    "html_url": "https://github.com/grpc/grpc/pull/13815#issuecomment-352828633",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13815",
    "id": 352828633,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjgyODYzMw==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-19T17:26:43Z",
    "updated_at": "2017-12-19T17:26:43Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/352830902",
    "html_url": "https://github.com/grpc/grpc/pull/13815#issuecomment-352830902",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13815",
    "id": 352830902,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjgzMDkwMg==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-19T17:35:29Z",
    "updated_at": "2017-12-19T17:35:29Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/352839692",
    "html_url": "https://github.com/grpc/grpc/pull/13815#issuecomment-352839692",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13815",
    "id": 352839692,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjgzOTY5Mg==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-19T18:07:21Z",
    "updated_at": "2017-12-19T18:07:21Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] Performance differences noted:\nBenchmark                      cpu_time    real_time\n-----------------------------  ----------  -----------\nBM_ClosureInitAgainstCombiner  -9%         -9%\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/352842021",
    "html_url": "https://github.com/grpc/grpc/pull/13815#issuecomment-352842021",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13815",
    "id": 352842021,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Mjg0MjAyMQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-19T18:15:48Z",
    "updated_at": "2017-12-19T18:15:48Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/352843601",
    "html_url": "https://github.com/grpc/grpc/pull/13815#issuecomment-352843601",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13815",
    "id": 352843601,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Mjg0MzYwMQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-19T18:22:00Z",
    "updated_at": "2017-12-19T18:22:00Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE        FILE SIZE\n ++++++++++++++  ++++++++++++++\n\n  [ = ]       0        0  [ = ]\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n  +4.9% +10.4Ki [None]                                                                                +178Ki  +3.7%\n      +5.4% +10.4Ki [Unmapped]                                                                            +178Ki  +3.7%\n      [NEW]      +8 DW.ref._ZTISt9exception                                                                   +8  [NEW]\n      +7.5%      +8 [None]                                                                                     0  [ = ]\n   +16% +1.50Ki src/cpp/server/server_builder.cc                                                     +1.50Ki   +16%\n       +22%    +587 grpc::ServerBuilder::BuildAndStart                                                      +587   +22%\n       +68%    +304 grpc::ServerBuilder::ServerBuilder                                                      +304   +68%\n      [NEW]    +235 std::vector<grpc::ServerBuilder::Port, std::allocator<grpc::ServerBuilder::Port> >::    +235  [NEW]\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n      [NEW]    +149 grpc::ServerBuilder::Port::~Port                                                        +149  [NEW]\n       +10%     +77 void std::vector<grpc::ServerBuilder::Port, std::allocator<grpc::ServerBuilder::Port     +77   +10%\n      [NEW]     +61 grpc::GrpcLibraryCodegen::~GrpcLibraryCodegen() [clone .part.0]                          +61  [NEW]\n       +15%     +57 grpc::ServerBuilder::AddCompletionQueue                                                  +57   +15%\n       +24%     +51 grpc::ServerBuilder::EnableWorkaround                                                    +51   +24%\n      +4.3%     +41 grpc::ServerBuilder::AddListeningPort                                                    +41  +4.3%\n       +21%     +32 grpc::ServerBuilder::RegisterService                                                     +32   +21%\n      +0.3%      +1 void std::vector<std::unique_ptr<grpc::ServerBuilderOption, std::default_delete<grpc      +1  +0.3%\n      +0.3%      +1 void std::vector<std::unique_ptr<grpc::ServerBuilderPlugin, std::default_delete<grpc      +1  +0.3%\n   +14% +1.49Ki src/cpp/server/health/default_health_check_service.cc                                +1.49Ki   +14%\n      [NEW]    +515 grpc::Status grpc::internal::CatchingFunctionHandler<grpc::internal::RpcMethodHandle    +515  [NEW]\n       +26%    +438 grpc::DefaultHealthCheckService::HealthCheckServiceImpl::Check                          +438   +26%\n      [NEW]    +215 std::pair<std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::cha    +215  [NEW]\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +42%    +165 grpc::DefaultHealthCheckService::HealthCheckServiceImpl::HealthCheckServiceImpl         +165   +42%\n      +4.0%    +160 grpc::internal::RpcMethodHandler<grpc::DefaultHealthCheckService::HealthCheckService    +160  +4.0%\n      +9.0%     +47 grpc::DefaultHealthCheckService::SetServingStatus                                        +47  +9.0%\n       +16%     +19 grpc::DefaultHealthCheckService::GetHealthCheckService                                   +19   +16%\n   +10%    +820 src/cpp/client/secure_credentials.cc                                                    +820   +10%\n      [NEW]    +198 std::function<void ()>::function<std::_Bind<std::_Mem_fn<void (grpc::MetadataCredent    +198  [NEW]\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +12%    +190 grpc::MetadataCredentialsPluginWrapper::InvokePlugin                                    +190   +12%\n      [NEW]     +61 grpc::GrpcLibraryCodegen::~GrpcLibraryCodegen() [clone .part.0]                          +61  [NEW]\n       +41%     +56 grpc::(anonymous namespace)::WrapCallCredentials                                         +56   +41%\n       +41%     +56 grpc::(anonymous namespace)::WrapChannelCredentials                                      +56   +41%\n       +12%     +52 grpc::MetadataCredentialsFromPlugin                                                      +52   +12%\n       +28%     +45 grpc::MetadataCredentialsPluginWrapper::MetadataCredentialsPluginWrapper                 +45   +28%\n       +19%     +30 grpc::SecureChannelCredentials::CreateChannel                                            +30   +19%\n      +9.8%     +25 grpc::AccessTokenCredentials                                                             +25  +9.8%\n      +9.8%     +25 grpc::GoogleRefreshTokenCredentials                                                      +25  +9.8%\n       +10%     +25 grpc::GoogleComputeEngineCredentials                                                     +25   +10%\n      +6.3%     +17 grpc::GoogleIAMCredentials                                                               +17  +6.3%\n      +6.9%     +17 grpc::GoogleDefaultCredentials                                                           +17  +6.9%\n      +5.3%     +16 grpc::SslCredentials                                                                     +16  +5.3%\n      +4.4%     +16 grpc::ServiceAccountJWTAccessCredentials                                                 +16  +4.4%\n      +1.8%     +10 grpc::MetadataCredentialsPluginWrapper::GetMetadata                                      +10  +1.8%\n   +20%    +718 src/cpp/client/client_context.cc                                                        +718   +20%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +35%    +176 grpc::ClientContext::ClientContext                                                      +176   +35%\n      [NEW]    +167 [ELF Headers]                                                                           +167  [NEW]\n       +88%     +82 grpc::ClientContext::TryCancel                                                           +82   +88%\n       +12%     +63 grpc::ClientContext::set_call                                                            +63   +12%\n       +18%     +54 grpc::ClientContext::set_compression_algorithm                                           +54   +18%\n      +7.1%     +50 grpc::ClientContext::AddMetadata                                                         +50  +7.1%\n      [NEW]     +49 std::unique_lock<std::mutex>::unlock                                                     +49  [NEW]\n      [NEW]     +40 grpc::internal::MetadataMap::~MetadataMap                                                +40  [NEW]\n       +22%     +20 grpc::ClientContext::peer[abi:cxx11]() const                                             +20   +22%\n       +25%     +19 grpc::ClientContext::FromServerContext                                                   +19   +25%\n   +18%    +717 src/cpp/server/dynamic_thread_pool.cc                                                   +717   +18%\n      [NEW]    +200 std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::~deque    +200  [NEW]\n       +17%    +170 grpc::DynamicThreadPool::DynamicThreadPool                                              +170   +17%\n       +48%     +97 std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::     +97   +48%\n      [NEW]     +93 std::function<void ()>::function                                                         +93  [NEW]\n       +37%     +79 grpc::DynamicThreadPool::DynamicThread::ThreadFunc                                       +79   +37%\n       +24%     +39 grpc::DynamicThreadPool::DynamicThread::DynamicThread                                    +39   +24%\n      +4.6%     +13 grpc::DynamicThreadPool::Add                                                             +13  +4.6%\n      +1.9%     +10 void std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_     +10  +1.9%\n       +17%      +9 [Unmapped]                                                                                +9   +17%\n      +1.1%      +7 grpc::DynamicThreadPool::ThreadFunc                                                       +7  +1.1%\n  +4.7%    +599 src/cpp/client/generic_stub.cc                                                          +599  +4.7%\n       +11%    +191 grpc::internal::CallOpClientRecvStatus::FinishOp                                        +191   +11%\n       +19%    +120 grpc::GenericStub::PrepareUnaryCall                                                     +120   +19%\n      +6.9%     +91 grpc::GenericStub::Call                                                                  +91  +6.9%\n      +6.8%     +51 grpc::ClientAsyncResponseReader<grpc::ByteBuffer>::StartCall                             +51  +6.8%\n      +4.5%     +37 grpc::ClientAsyncReaderWriter<grpc::ByteBuffer, grpc::ByteBuffer>::StartCall             +37  +4.5%\n       +11%     +31 grpc::ClientAsyncReaderWriter<grpc::ByteBuffer, grpc::ByteBuffer>::Write                 +31   +11%\n       +12%     +31 grpc::ClientAsyncReaderWriter<grpc::ByteBuffer, grpc::ByteBuffer>::Write                 +31   +12%\n      +3.1%     +29 grpc::internal::CallOpSet<grpc::internal::CallOpRecvInitialMetadata, grpc::internal:     +29  +3.1%\n      +3.2%     +29 grpc::internal::CallOpSet<grpc::internal::CallOpRecvInitialMetadata, grpc::internal:     +29  +3.2%\n   +11%    +594 src/cpp/common/channel_arguments.cc                                                     +594   +11%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +34%    +114 grpc::ChannelArguments::ChannelArguments                                                +114   +34%\n       +12%     +94 grpc::ChannelArguments::SetSocketMutator                                                 +94   +12%\n      +9.6%     +74 grpc::ChannelArguments::SetUserAgentPrefix                                               +74  +9.6%\n      +8.8%     +68 grpc::ChannelArguments::ChannelArguments                                                 +68  +8.8%\n      [NEW]     +58 std::__cxx11::_List_base<std::__cxx11::basic_string<char, std::char_traits<char>, st     +58  [NEW]\n       +23%     +32 grpc::ChannelArguments::SetResourceQuota                                                 +32   +23%\n       +26%     +32 grpc::ChannelArguments::SetServiceConfigJSON                                             +32   +26%\n       +26%     +32 grpc::ChannelArguments::SetMaxSendMessageSize                                            +32   +26%\n       +26%     +32 grpc::ChannelArguments::SetCompressionAlgorithm                                          +32   +26%\n       +26%     +32 grpc::ChannelArguments::SetGrpclbFallbackTimeout                                         +32   +26%\n       +26%     +32 grpc::ChannelArguments::SetMaxReceiveMessageSize                                         +32   +26%\n       +26%     +32 grpc::ChannelArguments::SetLoadBalancingPolicyName                                       +32   +26%\n       +11%     +27 grpc::ChannelArguments::SetPointerWithVtable                                             +27   +11%\n       +12%     +27 grpc::ChannelArguments::SetInt                                                           +27   +12%\n      +7.0%     +21 grpc::ChannelArguments::SetString                                                        +21  +7.0%\n   +11%    +445 src/cpp/client/channel_cc.cc                                                            +445   +11%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n      [NEW]     +98 std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release                            +98  [NEW]\n       +31%     +79 grpc::Channel::Channel                                                                   +79   +31%\n       +11%     +68 grpc::Channel::WaitForStateChangeImpl                                                    +68   +11%\n      [NEW]     +61 grpc::GrpcLibraryCodegen::~GrpcLibraryCodegen() [clone .part.0]                          +61  [NEW]\n      +4.6%     +57 grpc::Channel::CreateCall                                                                +57  +4.6%\n      [NEW]     +50 std::__throw_bad_weak_ptr                                                                +50  [NEW]\n       +11%     +30 grpc::(anonymous namespace)::GetChannelInfoField                                         +30   +11%\n      +1.1%      +2 [Unmapped]                                                                                +2  +1.1%\n  +8.5%    +399 src/cpp/server/server_context.cc                                                        +399  +8.5%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +17%    +144 grpc::ServerContext::ServerContext                                                      +144   +17%\n       +18%     +54 grpc::ServerContext::set_compression_algorithm                                           +54   +18%\n      [NEW]     +50 std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<ch     +50  [NEW]\n       +25%     +44 grpc::ServerContext::AddInitialMetadata                                                  +44   +25%\n       +25%     +44 grpc::ServerContext::AddTrailingMetadata                                                 +44   +25%\n       +18%     +29 grpc::ServerContext::SetLoadReportingCosts                                               +29   +18%\n       +22%     +20 grpc::ServerContext::peer[abi:cxx11]() const                                             +20   +22%\n       +18%     +19 grpc::ServerContext::CompletionOp::Unref                                                 +19   +18%\n  +7.9%    +378 src/cpp/server/secure_server_credentials.cc                                             +378  +7.9%\n      +9.9%    +242 grpc::AuthMetadataProcessorAyncWrapper::InvokeProcessor                                 +242  +9.9%\n       +20%     +70 grpc::AuthMetadataProcessorAyncWrapper::Process                                          +70   +20%\n       +11%     +52 grpc::SslServerCredentials                                                               +52   +11%\n       +16%     +19 grpc::SecureServerCredentials::SetAuthMetadataProcessor                                  +19   +16%\n      +1.7%      +4 void std::vector<grpc_ssl_pem_key_cert_pair, std::allocator<grpc_ssl_pem_key_cert_pa      +4  +1.7%\n  +6.1%    +213 [Other]                                                                                 +213  +6.1%\n   +16%    +213 src/cpp/util/byte_buffer_cc.cc                                                          +213   +16%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +39%    +127 void std::vector<grpc::Slice, std::allocator<grpc::Slice> >::_M_emplace_back_aux<grp    +127   +39%\n       +16%     +86 grpc::ByteBuffer::Dump(std::vector<grpc::Slice, std::allocator<grpc::Slice> >*) cons     +86   +16%\n   +22%    +111 src/cpp/client/insecure_credentials.cc                                                  +111   +23%\n       +55%     +63 grpc::InsecureChannelCredentials                                                         +63   +55%\n       +26%     +37 grpc::(anonymous namespace)::InsecureChannelCredentialsImpl::CreateChannel               +37   +26%\n       +15%     +11 [Unmapped]                                                                               +11   +15%\n   +19%    +102 src/cpp/client/create_channel.cc                                                        +102   +19%\n       +17%     +67 grpc::CreateCustomChannel                                                                +67   +17%\n       +21%     +22 grpc::CreateChannel                                                                      +22   +21%\n      [NEW]     +13 [Unmapped]                                                                               +13  [NEW]\n  +3.3%     +80 src/cpp/thread_manager/thread_manager.cc                                                 +80  +3.3%\n       +22%     +61 grpc::ThreadManager::WorkerThread::WorkerThread                                          +61   +22%\n       +12%     +36 grpc::ThreadManager::CleanupCompletedThreads                                             +36   +12%\n       +16%     +19 grpc::ThreadManager::Initialize                                                          +19   +16%\n      +4.3%      +4 [Unmapped]                                                                                +4  +4.3%\n   +12%     +65 src/cpp/client/create_channel_posix.cc                                                   +65   +12%\n       +19%     +33 grpc::CreateCustomInsecureChannelFromFd                                                  +33   +19%\n       +22%     +32 grpc::CreateInsecureChannelFromFd                                                        +32   +22%\n  +8.6%     +65 src/cpp/common/secure_channel_arguments.cc                                               +65  +8.6%\n      +6.2%     +33 grpc::ChannelArguments::GetSslTargetNameOverride[abi:cxx11]() const                      +33  +6.2%\n       +13%     +29 grpc::ChannelArguments::SetSslTargetNameOverride                                         +29   +13%\n       +50%      +3 [Unmapped]                                                                                +3   +50%\n   +15%     +56 src/cpp/client/create_channel_internal.cc                                                +56   +15%\n       +19%     +56 grpc::CreateChannelInternal                                                              +56   +19%\n   +25%     +56 src/cpp/common/secure_create_auth_context.cc                                             +56   +25%\n       +39%     +56 grpc::CreateAuthContext                                                                  +56   +39%\n  +7.0%     +51 src/cpp/server/channel_argument_option.cc                                                +51  +7.0%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +28%     +33 grpc::MakeChannelArgumentOption                                                          +33   +28%\n       +20%     +19 grpc::MakeChannelArgumentOption                                                          +19   +20%\n\n -------------- SHRINKING                                                                            --------------\n  -0.7%    -249 src/cpp/server/server_cc.cc                                                             -249  -0.7%\n      [DEL] -3.93Ki grpc::Server::SyncRequestThreadManager::DoWork(void*, bool) [clone .part.58]         -3.93Ki  [DEL]\n      [DEL]    -194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    -194  [DEL]\n      -2.3%      -8 grpc::ServerInterface::GenericAsyncRequest::GenericAsyncRequest                           -8  -2.3%\n  -8.0%     -50 src/cpp/util/status.cc                                                                   -50  -8.3%\n      [DEL]     -50 grpc::Status::~Status                                                                    -50  [DEL]\n\n  +5.7% +18.7Ki TOTAL                                                                                 +186Ki  +3.8%\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/352844036",
    "html_url": "https://github.com/grpc/grpc/pull/13815#issuecomment-352844036",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13815",
    "id": 352844036,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Mjg0NDAzNg==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-19T18:23:38Z",
    "updated_at": "2017-12-19T18:23:38Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE        FILE SIZE\n ++++++++++++++  ++++++++++++++\n\n  [ = ]       0        0  [ = ]\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n  +4.9% +10.4Ki [None]                                                                                +178Ki  +3.7%\n      +5.4% +10.4Ki [Unmapped]                                                                            +178Ki  +3.7%\n      [NEW]      +8 DW.ref._ZTISt9exception                                                                   +8  [NEW]\n      +7.5%      +8 [None]                                                                                     0  [ = ]\n   +16% +1.50Ki src/cpp/server/server_builder.cc                                                     +1.50Ki   +16%\n       +22%    +587 grpc::ServerBuilder::BuildAndStart                                                      +587   +22%\n       +68%    +304 grpc::ServerBuilder::ServerBuilder                                                      +304   +68%\n      [NEW]    +235 std::vector<grpc::ServerBuilder::Port, std::allocator<grpc::ServerBuilder::Port> >::    +235  [NEW]\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n      [NEW]    +149 grpc::ServerBuilder::Port::~Port                                                        +149  [NEW]\n       +10%     +77 void std::vector<grpc::ServerBuilder::Port, std::allocator<grpc::ServerBuilder::Port     +77   +10%\n      [NEW]     +61 grpc::GrpcLibraryCodegen::~GrpcLibraryCodegen() [clone .part.0]                          +61  [NEW]\n       +15%     +57 grpc::ServerBuilder::AddCompletionQueue                                                  +57   +15%\n       +24%     +51 grpc::ServerBuilder::EnableWorkaround                                                    +51   +24%\n      +4.3%     +41 grpc::ServerBuilder::AddListeningPort                                                    +41  +4.3%\n       +21%     +32 grpc::ServerBuilder::RegisterService                                                     +32   +21%\n      +0.3%      +1 void std::vector<std::unique_ptr<grpc::ServerBuilderOption, std::default_delete<grpc      +1  +0.3%\n      +0.3%      +1 void std::vector<std::unique_ptr<grpc::ServerBuilderPlugin, std::default_delete<grpc      +1  +0.3%\n   +14% +1.49Ki src/cpp/server/health/default_health_check_service.cc                                +1.49Ki   +14%\n      [NEW]    +515 grpc::Status grpc::internal::CatchingFunctionHandler<grpc::internal::RpcMethodHandle    +515  [NEW]\n       +26%    +438 grpc::DefaultHealthCheckService::HealthCheckServiceImpl::Check                          +438   +26%\n      [NEW]    +215 std::pair<std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::cha    +215  [NEW]\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +42%    +165 grpc::DefaultHealthCheckService::HealthCheckServiceImpl::HealthCheckServiceImpl         +165   +42%\n      +4.0%    +160 grpc::internal::RpcMethodHandler<grpc::DefaultHealthCheckService::HealthCheckService    +160  +4.0%\n      +9.0%     +47 grpc::DefaultHealthCheckService::SetServingStatus                                        +47  +9.0%\n       +16%     +19 grpc::DefaultHealthCheckService::GetHealthCheckService                                   +19   +16%\n   +10%    +820 src/cpp/client/secure_credentials.cc                                                    +820   +10%\n      [NEW]    +198 std::function<void ()>::function<std::_Bind<std::_Mem_fn<void (grpc::MetadataCredent    +198  [NEW]\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +12%    +190 grpc::MetadataCredentialsPluginWrapper::InvokePlugin                                    +190   +12%\n      [NEW]     +61 grpc::GrpcLibraryCodegen::~GrpcLibraryCodegen() [clone .part.0]                          +61  [NEW]\n       +41%     +56 grpc::(anonymous namespace)::WrapCallCredentials                                         +56   +41%\n       +41%     +56 grpc::(anonymous namespace)::WrapChannelCredentials                                      +56   +41%\n       +12%     +52 grpc::MetadataCredentialsFromPlugin                                                      +52   +12%\n       +28%     +45 grpc::MetadataCredentialsPluginWrapper::MetadataCredentialsPluginWrapper                 +45   +28%\n       +19%     +30 grpc::SecureChannelCredentials::CreateChannel                                            +30   +19%\n      +9.8%     +25 grpc::AccessTokenCredentials                                                             +25  +9.8%\n      +9.8%     +25 grpc::GoogleRefreshTokenCredentials                                                      +25  +9.8%\n       +10%     +25 grpc::GoogleComputeEngineCredentials                                                     +25   +10%\n      +6.3%     +17 grpc::GoogleIAMCredentials                                                               +17  +6.3%\n      +6.9%     +17 grpc::GoogleDefaultCredentials                                                           +17  +6.9%\n      +5.3%     +16 grpc::SslCredentials                                                                     +16  +5.3%\n      +4.4%     +16 grpc::ServiceAccountJWTAccessCredentials                                                 +16  +4.4%\n      +1.8%     +10 grpc::MetadataCredentialsPluginWrapper::GetMetadata                                      +10  +1.8%\n   +20%    +718 src/cpp/client/client_context.cc                                                        +718   +20%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +35%    +176 grpc::ClientContext::ClientContext                                                      +176   +35%\n      [NEW]    +167 [ELF Headers]                                                                           +167  [NEW]\n       +88%     +82 grpc::ClientContext::TryCancel                                                           +82   +88%\n       +12%     +63 grpc::ClientContext::set_call                                                            +63   +12%\n       +18%     +54 grpc::ClientContext::set_compression_algorithm                                           +54   +18%\n      +7.1%     +50 grpc::ClientContext::AddMetadata                                                         +50  +7.1%\n      [NEW]     +49 std::unique_lock<std::mutex>::unlock                                                     +49  [NEW]\n      [NEW]     +40 grpc::internal::MetadataMap::~MetadataMap                                                +40  [NEW]\n       +22%     +20 grpc::ClientContext::peer[abi:cxx11]() const                                             +20   +22%\n       +25%     +19 grpc::ClientContext::FromServerContext                                                   +19   +25%\n   +18%    +717 src/cpp/server/dynamic_thread_pool.cc                                                   +717   +18%\n      [NEW]    +200 std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::~deque    +200  [NEW]\n       +17%    +170 grpc::DynamicThreadPool::DynamicThreadPool                                              +170   +17%\n       +48%     +97 std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::     +97   +48%\n      [NEW]     +93 std::function<void ()>::function                                                         +93  [NEW]\n       +37%     +79 grpc::DynamicThreadPool::DynamicThread::ThreadFunc                                       +79   +37%\n       +24%     +39 grpc::DynamicThreadPool::DynamicThread::DynamicThread                                    +39   +24%\n      +4.6%     +13 grpc::DynamicThreadPool::Add                                                             +13  +4.6%\n      +1.9%     +10 void std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_     +10  +1.9%\n       +17%      +9 [Unmapped]                                                                                +9   +17%\n      +1.1%      +7 grpc::DynamicThreadPool::ThreadFunc                                                       +7  +1.1%\n  +4.7%    +599 src/cpp/client/generic_stub.cc                                                          +599  +4.7%\n       +11%    +191 grpc::internal::CallOpClientRecvStatus::FinishOp                                        +191   +11%\n       +19%    +120 grpc::GenericStub::PrepareUnaryCall                                                     +120   +19%\n      +6.9%     +91 grpc::GenericStub::Call                                                                  +91  +6.9%\n      +6.8%     +51 grpc::ClientAsyncResponseReader<grpc::ByteBuffer>::StartCall                             +51  +6.8%\n      +4.5%     +37 grpc::ClientAsyncReaderWriter<grpc::ByteBuffer, grpc::ByteBuffer>::StartCall             +37  +4.5%\n       +11%     +31 grpc::ClientAsyncReaderWriter<grpc::ByteBuffer, grpc::ByteBuffer>::Write                 +31   +11%\n       +12%     +31 grpc::ClientAsyncReaderWriter<grpc::ByteBuffer, grpc::ByteBuffer>::Write                 +31   +12%\n      +3.1%     +29 grpc::internal::CallOpSet<grpc::internal::CallOpRecvInitialMetadata, grpc::internal:     +29  +3.1%\n      +3.2%     +29 grpc::internal::CallOpSet<grpc::internal::CallOpRecvInitialMetadata, grpc::internal:     +29  +3.2%\n   +11%    +594 src/cpp/common/channel_arguments.cc                                                     +594   +11%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +34%    +114 grpc::ChannelArguments::ChannelArguments                                                +114   +34%\n       +12%     +94 grpc::ChannelArguments::SetSocketMutator                                                 +94   +12%\n      +9.6%     +74 grpc::ChannelArguments::SetUserAgentPrefix                                               +74  +9.6%\n      +8.8%     +68 grpc::ChannelArguments::ChannelArguments                                                 +68  +8.8%\n      [NEW]     +58 std::__cxx11::_List_base<std::__cxx11::basic_string<char, std::char_traits<char>, st     +58  [NEW]\n       +23%     +32 grpc::ChannelArguments::SetResourceQuota                                                 +32   +23%\n       +26%     +32 grpc::ChannelArguments::SetServiceConfigJSON                                             +32   +26%\n       +26%     +32 grpc::ChannelArguments::SetMaxSendMessageSize                                            +32   +26%\n       +26%     +32 grpc::ChannelArguments::SetCompressionAlgorithm                                          +32   +26%\n       +26%     +32 grpc::ChannelArguments::SetGrpclbFallbackTimeout                                         +32   +26%\n       +26%     +32 grpc::ChannelArguments::SetMaxReceiveMessageSize                                         +32   +26%\n       +26%     +32 grpc::ChannelArguments::SetLoadBalancingPolicyName                                       +32   +26%\n       +11%     +27 grpc::ChannelArguments::SetPointerWithVtable                                             +27   +11%\n       +12%     +27 grpc::ChannelArguments::SetInt                                                           +27   +12%\n      +7.0%     +21 grpc::ChannelArguments::SetString                                                        +21  +7.0%\n   +11%    +445 src/cpp/client/channel_cc.cc                                                            +445   +11%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n      [NEW]     +98 std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release                            +98  [NEW]\n       +31%     +79 grpc::Channel::Channel                                                                   +79   +31%\n       +11%     +68 grpc::Channel::WaitForStateChangeImpl                                                    +68   +11%\n      [NEW]     +61 grpc::GrpcLibraryCodegen::~GrpcLibraryCodegen() [clone .part.0]                          +61  [NEW]\n      +4.6%     +57 grpc::Channel::CreateCall                                                                +57  +4.6%\n      [NEW]     +50 std::__throw_bad_weak_ptr                                                                +50  [NEW]\n       +11%     +30 grpc::(anonymous namespace)::GetChannelInfoField                                         +30   +11%\n      +1.1%      +2 [Unmapped]                                                                                +2  +1.1%\n  +8.5%    +399 src/cpp/server/server_context.cc                                                        +399  +8.5%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +17%    +144 grpc::ServerContext::ServerContext                                                      +144   +17%\n       +18%     +54 grpc::ServerContext::set_compression_algorithm                                           +54   +18%\n      [NEW]     +50 std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<ch     +50  [NEW]\n       +25%     +44 grpc::ServerContext::AddInitialMetadata                                                  +44   +25%\n       +25%     +44 grpc::ServerContext::AddTrailingMetadata                                                 +44   +25%\n       +18%     +29 grpc::ServerContext::SetLoadReportingCosts                                               +29   +18%\n       +22%     +20 grpc::ServerContext::peer[abi:cxx11]() const                                             +20   +22%\n       +18%     +19 grpc::ServerContext::CompletionOp::Unref                                                 +19   +18%\n  +7.9%    +378 src/cpp/server/secure_server_credentials.cc                                             +378  +7.9%\n      +9.9%    +242 grpc::AuthMetadataProcessorAyncWrapper::InvokeProcessor                                 +242  +9.9%\n       +20%     +70 grpc::AuthMetadataProcessorAyncWrapper::Process                                          +70   +20%\n       +11%     +52 grpc::SslServerCredentials                                                               +52   +11%\n       +16%     +19 grpc::SecureServerCredentials::SetAuthMetadataProcessor                                  +19   +16%\n      +1.7%      +4 void std::vector<grpc_ssl_pem_key_cert_pair, std::allocator<grpc_ssl_pem_key_cert_pa      +4  +1.7%\n  +6.1%    +213 [Other]                                                                                 +213  +6.1%\n   +16%    +213 src/cpp/util/byte_buffer_cc.cc                                                          +213   +16%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +39%    +127 void std::vector<grpc::Slice, std::allocator<grpc::Slice> >::_M_emplace_back_aux<grp    +127   +39%\n       +16%     +86 grpc::ByteBuffer::Dump(std::vector<grpc::Slice, std::allocator<grpc::Slice> >*) cons     +86   +16%\n   +22%    +111 src/cpp/client/insecure_credentials.cc                                                  +111   +23%\n       +55%     +63 grpc::InsecureChannelCredentials                                                         +63   +55%\n       +26%     +37 grpc::(anonymous namespace)::InsecureChannelCredentialsImpl::CreateChannel               +37   +26%\n       +15%     +11 [Unmapped]                                                                               +11   +15%\n   +19%    +102 src/cpp/client/create_channel.cc                                                        +102   +19%\n       +17%     +67 grpc::CreateCustomChannel                                                                +67   +17%\n       +21%     +22 grpc::CreateChannel                                                                      +22   +21%\n      [NEW]     +13 [Unmapped]                                                                               +13  [NEW]\n  +3.3%     +80 src/cpp/thread_manager/thread_manager.cc                                                 +80  +3.3%\n       +22%     +61 grpc::ThreadManager::WorkerThread::WorkerThread                                          +61   +22%\n       +12%     +36 grpc::ThreadManager::CleanupCompletedThreads                                             +36   +12%\n       +16%     +19 grpc::ThreadManager::Initialize                                                          +19   +16%\n      +4.3%      +4 [Unmapped]                                                                                +4  +4.3%\n   +12%     +65 src/cpp/client/create_channel_posix.cc                                                   +65   +12%\n       +19%     +33 grpc::CreateCustomInsecureChannelFromFd                                                  +33   +19%\n       +22%     +32 grpc::CreateInsecureChannelFromFd                                                        +32   +22%\n  +8.6%     +65 src/cpp/common/secure_channel_arguments.cc                                               +65  +8.6%\n      +6.2%     +33 grpc::ChannelArguments::GetSslTargetNameOverride[abi:cxx11]() const                      +33  +6.2%\n       +13%     +29 grpc::ChannelArguments::SetSslTargetNameOverride                                         +29   +13%\n       +50%      +3 [Unmapped]                                                                                +3   +50%\n   +15%     +56 src/cpp/client/create_channel_internal.cc                                                +56   +15%\n       +19%     +56 grpc::CreateChannelInternal                                                              +56   +19%\n   +25%     +56 src/cpp/common/secure_create_auth_context.cc                                             +56   +25%\n       +39%     +56 grpc::CreateAuthContext                                                                  +56   +39%\n  +7.0%     +51 src/cpp/server/channel_argument_option.cc                                                +51  +7.0%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +28%     +33 grpc::MakeChannelArgumentOption                                                          +33   +28%\n       +20%     +19 grpc::MakeChannelArgumentOption                                                          +19   +20%\n\n -------------- SHRINKING                                                                            --------------\n  -0.7%    -249 src/cpp/server/server_cc.cc                                                             -249  -0.7%\n      [DEL] -3.93Ki grpc::Server::SyncRequestThreadManager::DoWork(void*, bool) [clone .part.58]         -3.93Ki  [DEL]\n      [DEL]    -194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    -194  [DEL]\n      -2.3%      -8 grpc::ServerInterface::GenericAsyncRequest::GenericAsyncRequest                           -8  -2.3%\n  -8.0%     -50 src/cpp/util/status.cc                                                                   -50  -8.3%\n      [DEL]     -50 grpc::Status::~Status                                                                    -50  [DEL]\n\n  +5.7% +18.7Ki TOTAL                                                                                 +186Ki  +3.8%\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/352846739",
    "html_url": "https://github.com/grpc/grpc/pull/13815#issuecomment-352846739",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13815",
    "id": 352846739,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Mjg0NjczOQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-19T18:33:20Z",
    "updated_at": "2017-12-19T18:33:20Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/352847317",
    "html_url": "https://github.com/grpc/grpc/pull/13815#issuecomment-352847317",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13815",
    "id": 352847317,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Mjg0NzMxNw==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-19T18:35:39Z",
    "updated_at": "2017-12-19T18:35:39Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/352858322",
    "html_url": "https://github.com/grpc/grpc/pull/13815#issuecomment-352858322",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13815",
    "id": 352858322,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Mjg1ODMyMg==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-19T19:14:52Z",
    "updated_at": "2017-12-19T19:14:52Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] Performance differences noted:\nBenchmark                      cpu_time    real_time\n-----------------------------  ----------  -----------\nBM_ClosureInitAgainstCombiner  -9%         -9%\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/352858389",
    "html_url": "https://github.com/grpc/grpc/pull/13815#issuecomment-352858389",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13815",
    "id": 352858389,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Mjg1ODM4OQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-19T19:15:09Z",
    "updated_at": "2017-12-19T19:15:09Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/352881299",
    "html_url": "https://github.com/grpc/grpc/pull/13815#issuecomment-352881299",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13815",
    "id": 352881299,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Mjg4MTI5OQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-19T20:46:10Z",
    "updated_at": "2017-12-19T20:46:10Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE        FILE SIZE\n ++++++++++++++  ++++++++++++++\n\n  [ = ]       0        0  [ = ]\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n  +5.1% +10.9Ki [None]                                                                                +209Ki  +4.3%\n      +5.6% +10.9Ki [Unmapped]                                                                            +209Ki  +4.3%\n      [NEW]      +8 DW.ref._ZTISt9exception                                                                   +8  [NEW]\n   +15% +1.58Ki src/cpp/server/health/default_health_check_service.cc                                +1.58Ki   +15%\n      [NEW]    +510 grpc::Status grpc::internal::CatchingFunctionHandler<std::_Bind<std::function<grpc::    +510  [NEW]\n       +26%    +438 grpc::DefaultHealthCheckService::HealthCheckServiceImpl::Check                          +438   +26%\n      +6.1%    +240 grpc::internal::RpcMethodHandler<grpc::DefaultHealthCheckService::HealthCheckService    +240  +6.1%\n      [NEW]    +215 std::pair<std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::cha    +215  [NEW]\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n      [NEW]     +93 std::function<grpc::Status (grpc::DefaultHealthCheckService::HealthCheckServiceImpl*     +93  [NEW]\n       +23%     +88 grpc::DefaultHealthCheckService::HealthCheckServiceImpl::HealthCheckServiceImpl          +88   +23%\n      +9.0%     +47 grpc::DefaultHealthCheckService::SetServingStatus                                        +47  +9.0%\n       +16%     +19 grpc::DefaultHealthCheckService::GetHealthCheckService                                   +19   +16%\n   +16% +1.50Ki src/cpp/server/server_builder.cc                                                     +1.50Ki   +16%\n       +22%    +587 grpc::ServerBuilder::BuildAndStart                                                      +587   +22%\n       +68%    +304 grpc::ServerBuilder::ServerBuilder                                                      +304   +68%\n      [NEW]    +235 std::vector<grpc::ServerBuilder::Port, std::allocator<grpc::ServerBuilder::Port> >::    +235  [NEW]\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n      [NEW]    +149 grpc::ServerBuilder::Port::~Port                                                        +149  [NEW]\n       +10%     +77 void std::vector<grpc::ServerBuilder::Port, std::allocator<grpc::ServerBuilder::Port     +77   +10%\n      [NEW]     +61 grpc::GrpcLibraryCodegen::~GrpcLibraryCodegen() [clone .part.0]                          +61  [NEW]\n       +15%     +57 grpc::ServerBuilder::AddCompletionQueue                                                  +57   +15%\n       +24%     +51 grpc::ServerBuilder::EnableWorkaround                                                    +51   +24%\n      +4.3%     +41 grpc::ServerBuilder::AddListeningPort                                                    +41  +4.3%\n       +21%     +32 grpc::ServerBuilder::RegisterService                                                     +32   +21%\n      +0.3%      +1 void std::vector<std::unique_ptr<grpc::ServerBuilderOption, std::default_delete<grpc      +1  +0.3%\n      +0.3%      +1 void std::vector<std::unique_ptr<grpc::ServerBuilderPlugin, std::default_delete<grpc      +1  +0.3%\n   +10%    +820 src/cpp/client/secure_credentials.cc                                                    +820   +10%\n      [NEW]    +198 std::function<void ()>::function<std::_Bind<std::_Mem_fn<void (grpc::MetadataCredent    +198  [NEW]\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +12%    +190 grpc::MetadataCredentialsPluginWrapper::InvokePlugin                                    +190   +12%\n      [NEW]     +61 grpc::GrpcLibraryCodegen::~GrpcLibraryCodegen() [clone .part.0]                          +61  [NEW]\n       +41%     +56 grpc::(anonymous namespace)::WrapCallCredentials                                         +56   +41%\n       +41%     +56 grpc::(anonymous namespace)::WrapChannelCredentials                                      +56   +41%\n       +12%     +52 grpc::MetadataCredentialsFromPlugin                                                      +52   +12%\n       +28%     +45 grpc::MetadataCredentialsPluginWrapper::MetadataCredentialsPluginWrapper                 +45   +28%\n       +19%     +30 grpc::SecureChannelCredentials::CreateChannel                                            +30   +19%\n      +9.8%     +25 grpc::AccessTokenCredentials                                                             +25  +9.8%\n      +9.8%     +25 grpc::GoogleRefreshTokenCredentials                                                      +25  +9.8%\n       +10%     +25 grpc::GoogleComputeEngineCredentials                                                     +25   +10%\n      +6.3%     +17 grpc::GoogleIAMCredentials                                                               +17  +6.3%\n      +6.9%     +17 grpc::GoogleDefaultCredentials                                                           +17  +6.9%\n      +5.3%     +16 grpc::SslCredentials                                                                     +16  +5.3%\n      +4.4%     +16 grpc::ServiceAccountJWTAccessCredentials                                                 +16  +4.4%\n      +1.8%     +10 grpc::MetadataCredentialsPluginWrapper::GetMetadata                                      +10  +1.8%\n   +20%    +718 src/cpp/client/client_context.cc                                                        +718   +20%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +35%    +176 grpc::ClientContext::ClientContext                                                      +176   +35%\n      [NEW]    +167 [ELF Headers]                                                                           +167  [NEW]\n       +88%     +82 grpc::ClientContext::TryCancel                                                           +82   +88%\n       +12%     +63 grpc::ClientContext::set_call                                                            +63   +12%\n       +18%     +54 grpc::ClientContext::set_compression_algorithm                                           +54   +18%\n      +7.1%     +50 grpc::ClientContext::AddMetadata                                                         +50  +7.1%\n      [NEW]     +49 std::unique_lock<std::mutex>::unlock                                                     +49  [NEW]\n      [NEW]     +40 grpc::internal::MetadataMap::~MetadataMap                                                +40  [NEW]\n       +22%     +20 grpc::ClientContext::peer[abi:cxx11]() const                                             +20   +22%\n       +25%     +19 grpc::ClientContext::FromServerContext                                                   +19   +25%\n   +18%    +717 src/cpp/server/dynamic_thread_pool.cc                                                   +717   +18%\n      [NEW]    +200 std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::~deque    +200  [NEW]\n       +17%    +170 grpc::DynamicThreadPool::DynamicThreadPool                                              +170   +17%\n       +48%     +97 std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::     +97   +48%\n      [NEW]     +93 std::function<void ()>::function                                                         +93  [NEW]\n       +37%     +79 grpc::DynamicThreadPool::DynamicThread::ThreadFunc                                       +79   +37%\n       +24%     +39 grpc::DynamicThreadPool::DynamicThread::DynamicThread                                    +39   +24%\n      +4.6%     +13 grpc::DynamicThreadPool::Add                                                             +13  +4.6%\n      +1.9%     +10 void std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_     +10  +1.9%\n       +17%      +9 [Unmapped]                                                                                +9   +17%\n      +1.1%      +7 grpc::DynamicThreadPool::ThreadFunc                                                       +7  +1.1%\n  +4.7%    +599 src/cpp/client/generic_stub.cc                                                          +599  +4.7%\n       +11%    +191 grpc::internal::CallOpClientRecvStatus::FinishOp                                        +191   +11%\n       +19%    +120 grpc::GenericStub::PrepareUnaryCall                                                     +120   +19%\n      +6.9%     +91 grpc::GenericStub::Call                                                                  +91  +6.9%\n      +6.8%     +51 grpc::ClientAsyncResponseReader<grpc::ByteBuffer>::StartCall                             +51  +6.8%\n      +4.5%     +37 grpc::ClientAsyncReaderWriter<grpc::ByteBuffer, grpc::ByteBuffer>::StartCall             +37  +4.5%\n       +11%     +31 grpc::ClientAsyncReaderWriter<grpc::ByteBuffer, grpc::ByteBuffer>::Write                 +31   +11%\n       +12%     +31 grpc::ClientAsyncReaderWriter<grpc::ByteBuffer, grpc::ByteBuffer>::Write                 +31   +12%\n      +3.1%     +29 grpc::internal::CallOpSet<grpc::internal::CallOpRecvInitialMetadata, grpc::internal:     +29  +3.1%\n      +3.2%     +29 grpc::internal::CallOpSet<grpc::internal::CallOpRecvInitialMetadata, grpc::internal:     +29  +3.2%\n   +11%    +594 src/cpp/common/channel_arguments.cc                                                     +594   +11%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +34%    +114 grpc::ChannelArguments::ChannelArguments                                                +114   +34%\n       +12%     +94 grpc::ChannelArguments::SetSocketMutator                                                 +94   +12%\n      +9.6%     +74 grpc::ChannelArguments::SetUserAgentPrefix                                               +74  +9.6%\n      +8.8%     +68 grpc::ChannelArguments::ChannelArguments                                                 +68  +8.8%\n      [NEW]     +58 std::__cxx11::_List_base<std::__cxx11::basic_string<char, std::char_traits<char>, st     +58  [NEW]\n       +23%     +32 grpc::ChannelArguments::SetResourceQuota                                                 +32   +23%\n       +26%     +32 grpc::ChannelArguments::SetServiceConfigJSON                                             +32   +26%\n       +26%     +32 grpc::ChannelArguments::SetMaxSendMessageSize                                            +32   +26%\n       +26%     +32 grpc::ChannelArguments::SetCompressionAlgorithm                                          +32   +26%\n       +26%     +32 grpc::ChannelArguments::SetGrpclbFallbackTimeout                                         +32   +26%\n       +26%     +32 grpc::ChannelArguments::SetMaxReceiveMessageSize                                         +32   +26%\n       +26%     +32 grpc::ChannelArguments::SetLoadBalancingPolicyName                                       +32   +26%\n       +11%     +27 grpc::ChannelArguments::SetPointerWithVtable                                             +27   +11%\n       +12%     +27 grpc::ChannelArguments::SetInt                                                           +27   +12%\n      +7.0%     +21 grpc::ChannelArguments::SetString                                                        +21  +7.0%\n   +11%    +445 src/cpp/client/channel_cc.cc                                                            +445   +11%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n      [NEW]     +98 std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release                            +98  [NEW]\n       +31%     +79 grpc::Channel::Channel                                                                   +79   +31%\n       +11%     +68 grpc::Channel::WaitForStateChangeImpl                                                    +68   +11%\n      [NEW]     +61 grpc::GrpcLibraryCodegen::~GrpcLibraryCodegen() [clone .part.0]                          +61  [NEW]\n      +4.6%     +57 grpc::Channel::CreateCall                                                                +57  +4.6%\n      [NEW]     +50 std::__throw_bad_weak_ptr                                                                +50  [NEW]\n       +11%     +30 grpc::(anonymous namespace)::GetChannelInfoField                                         +30   +11%\n      +1.1%      +2 [Unmapped]                                                                                +2  +1.1%\n  +8.5%    +399 src/cpp/server/server_context.cc                                                        +399  +8.5%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +17%    +144 grpc::ServerContext::ServerContext                                                      +144   +17%\n       +18%     +54 grpc::ServerContext::set_compression_algorithm                                           +54   +18%\n      [NEW]     +50 std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<ch     +50  [NEW]\n       +25%     +44 grpc::ServerContext::AddInitialMetadata                                                  +44   +25%\n       +25%     +44 grpc::ServerContext::AddTrailingMetadata                                                 +44   +25%\n       +18%     +29 grpc::ServerContext::SetLoadReportingCosts                                               +29   +18%\n       +22%     +20 grpc::ServerContext::peer[abi:cxx11]() const                                             +20   +22%\n       +18%     +19 grpc::ServerContext::CompletionOp::Unref                                                 +19   +18%\n  +7.9%    +378 src/cpp/server/secure_server_credentials.cc                                             +378  +7.9%\n      +9.9%    +242 grpc::AuthMetadataProcessorAyncWrapper::InvokeProcessor                                 +242  +9.9%\n       +20%     +70 grpc::AuthMetadataProcessorAyncWrapper::Process                                          +70   +20%\n       +11%     +52 grpc::SslServerCredentials                                                               +52   +11%\n       +16%     +19 grpc::SecureServerCredentials::SetAuthMetadataProcessor                                  +19   +16%\n      +1.7%      +4 void std::vector<grpc_ssl_pem_key_cert_pair, std::allocator<grpc_ssl_pem_key_cert_pa      +4  +1.7%\n  +6.1%    +213 [Other]                                                                                 +213  +6.1%\n   +16%    +213 src/cpp/util/byte_buffer_cc.cc                                                          +213   +16%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +39%    +127 void std::vector<grpc::Slice, std::allocator<grpc::Slice> >::_M_emplace_back_aux<grp    +127   +39%\n       +16%     +86 grpc::ByteBuffer::Dump(std::vector<grpc::Slice, std::allocator<grpc::Slice> >*) cons     +86   +16%\n   +22%    +111 src/cpp/client/insecure_credentials.cc                                                  +111   +23%\n       +55%     +63 grpc::InsecureChannelCredentials                                                         +63   +55%\n       +26%     +37 grpc::(anonymous namespace)::InsecureChannelCredentialsImpl::CreateChannel               +37   +26%\n       +15%     +11 [Unmapped]                                                                               +11   +15%\n   +19%    +102 src/cpp/client/create_channel.cc                                                        +102   +19%\n       +17%     +67 grpc::CreateCustomChannel                                                                +67   +17%\n       +21%     +22 grpc::CreateChannel                                                                      +22   +21%\n      [NEW]     +13 [Unmapped]                                                                               +13  [NEW]\n  +3.3%     +80 src/cpp/thread_manager/thread_manager.cc                                                 +80  +3.3%\n       +22%     +61 grpc::ThreadManager::WorkerThread::WorkerThread                                          +61   +22%\n       +12%     +36 grpc::ThreadManager::CleanupCompletedThreads                                             +36   +12%\n       +16%     +19 grpc::ThreadManager::Initialize                                                          +19   +16%\n      +4.3%      +4 [Unmapped]                                                                                +4  +4.3%\n   +12%     +65 src/cpp/client/create_channel_posix.cc                                                   +65   +12%\n       +19%     +33 grpc::CreateCustomInsecureChannelFromFd                                                  +33   +19%\n       +22%     +32 grpc::CreateInsecureChannelFromFd                                                        +32   +22%\n  +8.6%     +65 src/cpp/common/secure_channel_arguments.cc                                               +65  +8.6%\n      +6.2%     +33 grpc::ChannelArguments::GetSslTargetNameOverride[abi:cxx11]() const                      +33  +6.2%\n       +13%     +29 grpc::ChannelArguments::SetSslTargetNameOverride                                         +29   +13%\n       +50%      +3 [Unmapped]                                                                                +3   +50%\n   +15%     +56 src/cpp/client/create_channel_internal.cc                                                +56   +15%\n       +19%     +56 grpc::CreateChannelInternal                                                              +56   +19%\n   +25%     +56 src/cpp/common/secure_create_auth_context.cc                                             +56   +25%\n       +39%     +56 grpc::CreateAuthContext                                                                  +56   +39%\n  +7.0%     +51 src/cpp/server/channel_argument_option.cc                                                +51  +7.0%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +28%     +33 grpc::MakeChannelArgumentOption                                                          +33   +28%\n       +20%     +19 grpc::MakeChannelArgumentOption                                                          +19   +20%\n\n -------------- SHRINKING                                                                            --------------\n  -0.7%    -249 src/cpp/server/server_cc.cc                                                             -249  -0.7%\n      [DEL] -3.93Ki grpc::Server::SyncRequestThreadManager::DoWork(void*, bool) [clone .part.58]         -3.93Ki  [DEL]\n      [DEL]    -194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    -194  [DEL]\n      -2.3%      -8 grpc::ServerInterface::GenericAsyncRequest::GenericAsyncRequest                           -8  -2.3%\n  -8.0%     -50 src/cpp/util/status.cc                                                                   -50  -8.3%\n      [DEL]     -50 grpc::Status::~Status                                                                    -50  [DEL]\n\n  +5.9% +19.2Ki TOTAL                                                                                 +217Ki  +4.4%\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/352884310",
    "html_url": "https://github.com/grpc/grpc/pull/13815#issuecomment-352884310",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13815",
    "id": 352884310,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Mjg4NDMxMA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-19T20:58:11Z",
    "updated_at": "2017-12-19T20:58:11Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/352894001",
    "html_url": "https://github.com/grpc/grpc/pull/13815#issuecomment-352894001",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13815",
    "id": 352894001,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Mjg5NDAwMQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-19T21:38:12Z",
    "updated_at": "2017-12-19T21:38:12Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/356126998",
    "html_url": "https://github.com/grpc/grpc/pull/13815#issuecomment-356126998",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13815",
    "id": 356126998,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjEyNjk5OA==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-08T23:14:30Z",
    "updated_at": "2018-01-08T23:14:30Z",
    "author_association": "MEMBER",
    "body": "Rebased to resolve conflicts\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/356127187",
    "html_url": "https://github.com/grpc/grpc/pull/13815#issuecomment-356127187",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13815",
    "id": 356127187,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjEyNzE4Nw==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-08T23:15:25Z",
    "updated_at": "2018-01-08T23:15:25Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE        FILE SIZE\n ++++++++++++++  ++++++++++++++\n\n  [ = ]       0        0  [ = ]\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n  +4.9% +10.4Ki [None]                                                                                +178Ki  +3.7%\n      +5.4% +10.4Ki [Unmapped]                                                                            +178Ki  +3.7%\n      [NEW]      +8 DW.ref._ZTISt9exception                                                                   +8  [NEW]\n      +7.5%      +8 [None]                                                                                     0  [ = ]\n   +16% +1.50Ki src/cpp/server/server_builder.cc                                                     +1.50Ki   +16%\n       +22%    +587 grpc::ServerBuilder::BuildAndStart                                                      +587   +22%\n       +68%    +304 grpc::ServerBuilder::ServerBuilder                                                      +304   +68%\n      [NEW]    +235 std::vector<grpc::ServerBuilder::Port, std::allocator<grpc::ServerBuilder::Port> >::    +235  [NEW]\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n      [NEW]    +149 grpc::ServerBuilder::Port::~Port                                                        +149  [NEW]\n       +10%     +77 void std::vector<grpc::ServerBuilder::Port, std::allocator<grpc::ServerBuilder::Port     +77   +10%\n      [NEW]     +61 grpc::GrpcLibraryCodegen::~GrpcLibraryCodegen() [clone .part.0]                          +61  [NEW]\n       +15%     +57 grpc::ServerBuilder::AddCompletionQueue                                                  +57   +15%\n       +24%     +51 grpc::ServerBuilder::EnableWorkaround                                                    +51   +24%\n      +4.3%     +41 grpc::ServerBuilder::AddListeningPort                                                    +41  +4.3%\n       +21%     +32 grpc::ServerBuilder::RegisterService                                                     +32   +21%\n      +0.3%      +1 void std::vector<std::unique_ptr<grpc::ServerBuilderOption, std::default_delete<grpc      +1  +0.3%\n      +0.3%      +1 void std::vector<std::unique_ptr<grpc::ServerBuilderPlugin, std::default_delete<grpc      +1  +0.3%\n   +14% +1.49Ki src/cpp/server/health/default_health_check_service.cc                                +1.49Ki   +14%\n      [NEW]    +515 grpc::Status grpc::internal::CatchingFunctionHandler<grpc::internal::RpcMethodHandle    +515  [NEW]\n       +26%    +438 grpc::DefaultHealthCheckService::HealthCheckServiceImpl::Check                          +438   +26%\n      [NEW]    +215 std::pair<std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::cha    +215  [NEW]\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +42%    +165 grpc::DefaultHealthCheckService::HealthCheckServiceImpl::HealthCheckServiceImpl         +165   +42%\n      +4.0%    +160 grpc::internal::RpcMethodHandler<grpc::DefaultHealthCheckService::HealthCheckService    +160  +4.0%\n      +9.0%     +47 grpc::DefaultHealthCheckService::SetServingStatus                                        +47  +9.0%\n       +16%     +19 grpc::DefaultHealthCheckService::GetHealthCheckService                                   +19   +16%\n   +10%    +820 src/cpp/client/secure_credentials.cc                                                    +820   +10%\n      [NEW]    +198 std::function<void ()>::function<std::_Bind<std::_Mem_fn<void (grpc::MetadataCredent    +198  [NEW]\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +12%    +190 grpc::MetadataCredentialsPluginWrapper::InvokePlugin                                    +190   +12%\n      [NEW]     +61 grpc::GrpcLibraryCodegen::~GrpcLibraryCodegen() [clone .part.0]                          +61  [NEW]\n       +41%     +56 grpc::(anonymous namespace)::WrapCallCredentials                                         +56   +41%\n       +41%     +56 grpc::(anonymous namespace)::WrapChannelCredentials                                      +56   +41%\n       +12%     +52 grpc::MetadataCredentialsFromPlugin                                                      +52   +12%\n       +28%     +45 grpc::MetadataCredentialsPluginWrapper::MetadataCredentialsPluginWrapper                 +45   +28%\n       +19%     +30 grpc::SecureChannelCredentials::CreateChannel                                            +30   +19%\n      +9.8%     +25 grpc::AccessTokenCredentials                                                             +25  +9.8%\n      +9.8%     +25 grpc::GoogleRefreshTokenCredentials                                                      +25  +9.8%\n       +10%     +25 grpc::GoogleComputeEngineCredentials                                                     +25   +10%\n      +6.3%     +17 grpc::GoogleIAMCredentials                                                               +17  +6.3%\n      +6.9%     +17 grpc::GoogleDefaultCredentials                                                           +17  +6.9%\n      +5.3%     +16 grpc::SslCredentials                                                                     +16  +5.3%\n      +4.4%     +16 grpc::ServiceAccountJWTAccessCredentials                                                 +16  +4.4%\n      +1.8%     +10 grpc::MetadataCredentialsPluginWrapper::GetMetadata                                      +10  +1.8%\n   +20%    +718 src/cpp/client/client_context.cc                                                        +718   +20%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +35%    +176 grpc::ClientContext::ClientContext                                                      +176   +35%\n      [NEW]    +167 [ELF Headers]                                                                           +167  [NEW]\n       +88%     +82 grpc::ClientContext::TryCancel                                                           +82   +88%\n       +12%     +63 grpc::ClientContext::set_call                                                            +63   +12%\n       +18%     +54 grpc::ClientContext::set_compression_algorithm                                           +54   +18%\n      +7.1%     +50 grpc::ClientContext::AddMetadata                                                         +50  +7.1%\n      [NEW]     +49 std::unique_lock<std::mutex>::unlock                                                     +49  [NEW]\n      [NEW]     +40 grpc::internal::MetadataMap::~MetadataMap                                                +40  [NEW]\n       +22%     +20 grpc::ClientContext::peer[abi:cxx11]() const                                             +20   +22%\n       +25%     +19 grpc::ClientContext::FromServerContext                                                   +19   +25%\n   +18%    +717 src/cpp/server/dynamic_thread_pool.cc                                                   +717   +18%\n      [NEW]    +200 std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::~deque    +200  [NEW]\n       +17%    +170 grpc::DynamicThreadPool::DynamicThreadPool                                              +170   +17%\n       +48%     +97 std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::     +97   +48%\n      [NEW]     +93 std::function<void ()>::function                                                         +93  [NEW]\n       +37%     +79 grpc::DynamicThreadPool::DynamicThread::ThreadFunc                                       +79   +37%\n       +24%     +39 grpc::DynamicThreadPool::DynamicThread::DynamicThread                                    +39   +24%\n      +4.6%     +13 grpc::DynamicThreadPool::Add                                                             +13  +4.6%\n      +1.9%     +10 void std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_     +10  +1.9%\n       +17%      +9 [Unmapped]                                                                                +9   +17%\n      +1.1%      +7 grpc::DynamicThreadPool::ThreadFunc                                                       +7  +1.1%\n  +4.7%    +599 src/cpp/client/generic_stub.cc                                                          +599  +4.7%\n       +11%    +191 grpc::internal::CallOpClientRecvStatus::FinishOp                                        +191   +11%\n       +19%    +120 grpc::GenericStub::PrepareUnaryCall                                                     +120   +19%\n      +6.9%     +91 grpc::GenericStub::Call                                                                  +91  +6.9%\n      +6.8%     +51 grpc::ClientAsyncResponseReader<grpc::ByteBuffer>::StartCall                             +51  +6.8%\n      +4.5%     +37 grpc::ClientAsyncReaderWriter<grpc::ByteBuffer, grpc::ByteBuffer>::StartCall             +37  +4.5%\n       +11%     +31 grpc::ClientAsyncReaderWriter<grpc::ByteBuffer, grpc::ByteBuffer>::Write                 +31   +11%\n       +12%     +31 grpc::ClientAsyncReaderWriter<grpc::ByteBuffer, grpc::ByteBuffer>::Write                 +31   +12%\n      +3.1%     +29 grpc::internal::CallOpSet<grpc::internal::CallOpRecvInitialMetadata, grpc::internal:     +29  +3.1%\n      +3.2%     +29 grpc::internal::CallOpSet<grpc::internal::CallOpRecvInitialMetadata, grpc::internal:     +29  +3.2%\n   +11%    +594 src/cpp/common/channel_arguments.cc                                                     +594   +11%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +34%    +114 grpc::ChannelArguments::ChannelArguments                                                +114   +34%\n       +12%     +94 grpc::ChannelArguments::SetSocketMutator                                                 +94   +12%\n      +9.6%     +74 grpc::ChannelArguments::SetUserAgentPrefix                                               +74  +9.6%\n      +8.8%     +68 grpc::ChannelArguments::ChannelArguments                                                 +68  +8.8%\n      [NEW]     +58 std::__cxx11::_List_base<std::__cxx11::basic_string<char, std::char_traits<char>, st     +58  [NEW]\n       +23%     +32 grpc::ChannelArguments::SetResourceQuota                                                 +32   +23%\n       +26%     +32 grpc::ChannelArguments::SetServiceConfigJSON                                             +32   +26%\n       +26%     +32 grpc::ChannelArguments::SetMaxSendMessageSize                                            +32   +26%\n       +26%     +32 grpc::ChannelArguments::SetCompressionAlgorithm                                          +32   +26%\n       +26%     +32 grpc::ChannelArguments::SetGrpclbFallbackTimeout                                         +32   +26%\n       +26%     +32 grpc::ChannelArguments::SetMaxReceiveMessageSize                                         +32   +26%\n       +26%     +32 grpc::ChannelArguments::SetLoadBalancingPolicyName                                       +32   +26%\n       +11%     +27 grpc::ChannelArguments::SetPointerWithVtable                                             +27   +11%\n       +12%     +27 grpc::ChannelArguments::SetInt                                                           +27   +12%\n      +7.0%     +21 grpc::ChannelArguments::SetString                                                        +21  +7.0%\n   +11%    +445 src/cpp/client/channel_cc.cc                                                            +445   +11%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n      [NEW]     +98 std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release                            +98  [NEW]\n       +31%     +79 grpc::Channel::Channel                                                                   +79   +31%\n       +11%     +68 grpc::Channel::WaitForStateChangeImpl                                                    +68   +11%\n      [NEW]     +61 grpc::GrpcLibraryCodegen::~GrpcLibraryCodegen() [clone .part.0]                          +61  [NEW]\n      +4.6%     +57 grpc::Channel::CreateCall                                                                +57  +4.6%\n      [NEW]     +50 std::__throw_bad_weak_ptr                                                                +50  [NEW]\n       +11%     +30 grpc::(anonymous namespace)::GetChannelInfoField                                         +30   +11%\n      +1.1%      +2 [Unmapped]                                                                                +2  +1.1%\n  +8.5%    +399 src/cpp/server/server_context.cc                                                        +399  +8.5%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +17%    +144 grpc::ServerContext::ServerContext                                                      +144   +17%\n       +18%     +54 grpc::ServerContext::set_compression_algorithm                                           +54   +18%\n      [NEW]     +50 std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<ch     +50  [NEW]\n       +25%     +44 grpc::ServerContext::AddInitialMetadata                                                  +44   +25%\n       +25%     +44 grpc::ServerContext::AddTrailingMetadata                                                 +44   +25%\n       +18%     +29 grpc::ServerContext::SetLoadReportingCosts                                               +29   +18%\n       +22%     +20 grpc::ServerContext::peer[abi:cxx11]() const                                             +20   +22%\n       +18%     +19 grpc::ServerContext::CompletionOp::Unref                                                 +19   +18%\n  +7.9%    +378 src/cpp/server/secure_server_credentials.cc                                             +378  +7.9%\n      +9.9%    +242 grpc::AuthMetadataProcessorAyncWrapper::InvokeProcessor                                 +242  +9.9%\n       +20%     +70 grpc::AuthMetadataProcessorAyncWrapper::Process                                          +70   +20%\n       +11%     +52 grpc::SslServerCredentials                                                               +52   +11%\n       +16%     +19 grpc::SecureServerCredentials::SetAuthMetadataProcessor                                  +19   +16%\n      +1.7%      +4 void std::vector<grpc_ssl_pem_key_cert_pair, std::allocator<grpc_ssl_pem_key_cert_pa      +4  +1.7%\n  +6.1%    +213 [Other]                                                                                 +213  +6.1%\n   +16%    +213 src/cpp/util/byte_buffer_cc.cc                                                          +213   +16%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +39%    +127 void std::vector<grpc::Slice, std::allocator<grpc::Slice> >::_M_emplace_back_aux<grp    +127   +39%\n       +16%     +86 grpc::ByteBuffer::Dump(std::vector<grpc::Slice, std::allocator<grpc::Slice> >*) cons     +86   +16%\n   +22%    +111 src/cpp/client/insecure_credentials.cc                                                  +111   +23%\n       +55%     +63 grpc::InsecureChannelCredentials                                                         +63   +55%\n       +26%     +37 grpc::(anonymous namespace)::InsecureChannelCredentialsImpl::CreateChannel               +37   +26%\n       +15%     +11 [Unmapped]                                                                               +11   +15%\n   +19%    +102 src/cpp/client/create_channel.cc                                                        +102   +19%\n       +17%     +67 grpc::CreateCustomChannel                                                                +67   +17%\n       +21%     +22 grpc::CreateChannel                                                                      +22   +21%\n      [NEW]     +13 [Unmapped]                                                                               +13  [NEW]\n  +3.3%     +80 src/cpp/thread_manager/thread_manager.cc                                                 +80  +3.3%\n       +22%     +61 grpc::ThreadManager::WorkerThread::WorkerThread                                          +61   +22%\n       +12%     +36 grpc::ThreadManager::CleanupCompletedThreads                                             +36   +12%\n       +16%     +19 grpc::ThreadManager::Initialize                                                          +19   +16%\n      +4.3%      +4 [Unmapped]                                                                                +4  +4.3%\n   +12%     +65 src/cpp/client/create_channel_posix.cc                                                   +65   +12%\n       +19%     +33 grpc::CreateCustomInsecureChannelFromFd                                                  +33   +19%\n       +22%     +32 grpc::CreateInsecureChannelFromFd                                                        +32   +22%\n  +8.6%     +65 src/cpp/common/secure_channel_arguments.cc                                               +65  +8.6%\n      +6.2%     +33 grpc::ChannelArguments::GetSslTargetNameOverride[abi:cxx11]() const                      +33  +6.2%\n       +13%     +29 grpc::ChannelArguments::SetSslTargetNameOverride                                         +29   +13%\n       +50%      +3 [Unmapped]                                                                                +3   +50%\n   +15%     +56 src/cpp/client/create_channel_internal.cc                                                +56   +15%\n       +19%     +56 grpc::CreateChannelInternal                                                              +56   +19%\n   +25%     +56 src/cpp/common/secure_create_auth_context.cc                                             +56   +25%\n       +39%     +56 grpc::CreateAuthContext                                                                  +56   +39%\n  +7.0%     +51 src/cpp/server/channel_argument_option.cc                                                +51  +7.0%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +28%     +33 grpc::MakeChannelArgumentOption                                                          +33   +28%\n       +20%     +19 grpc::MakeChannelArgumentOption                                                          +19   +20%\n\n -------------- SHRINKING                                                                            --------------\n  -0.7%    -249 src/cpp/server/server_cc.cc                                                             -249  -0.7%\n      [DEL] -3.93Ki grpc::Server::SyncRequestThreadManager::DoWork(void*, bool) [clone .part.58]         -3.93Ki  [DEL]\n      [DEL]    -194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    -194  [DEL]\n      -2.3%      -8 grpc::ServerInterface::GenericAsyncRequest::GenericAsyncRequest                           -8  -2.3%\n  -8.0%     -50 src/cpp/util/status.cc                                                                   -50  -8.3%\n      [DEL]     -50 grpc::Status::~Status                                                                    -50  [DEL]\n\n  +5.7% +18.7Ki TOTAL                                                                                 +186Ki  +3.8%\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/356127571",
    "html_url": "https://github.com/grpc/grpc/pull/13815#issuecomment-356127571",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13815",
    "id": 356127571,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjEyNzU3MQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-08T23:17:21Z",
    "updated_at": "2018-01-08T23:17:21Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE        FILE SIZE\n ++++++++++++++  ++++++++++++++\n\n  [ = ]       0        0  [ = ]\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n  +4.9% +10.4Ki [None]                                                                                +178Ki  +3.7%\n      +5.4% +10.4Ki [Unmapped]                                                                            +178Ki  +3.7%\n      [NEW]      +8 DW.ref._ZTISt9exception                                                                   +8  [NEW]\n      +7.5%      +8 [None]                                                                                     0  [ = ]\n   +16% +1.50Ki src/cpp/server/server_builder.cc                                                     +1.50Ki   +16%\n       +22%    +587 grpc::ServerBuilder::BuildAndStart                                                      +587   +22%\n       +68%    +304 grpc::ServerBuilder::ServerBuilder                                                      +304   +68%\n      [NEW]    +235 std::vector<grpc::ServerBuilder::Port, std::allocator<grpc::ServerBuilder::Port> >::    +235  [NEW]\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n      [NEW]    +149 grpc::ServerBuilder::Port::~Port                                                        +149  [NEW]\n       +10%     +77 void std::vector<grpc::ServerBuilder::Port, std::allocator<grpc::ServerBuilder::Port     +77   +10%\n      [NEW]     +61 grpc::GrpcLibraryCodegen::~GrpcLibraryCodegen() [clone .part.0]                          +61  [NEW]\n       +15%     +57 grpc::ServerBuilder::AddCompletionQueue                                                  +57   +15%\n       +24%     +51 grpc::ServerBuilder::EnableWorkaround                                                    +51   +24%\n      +4.3%     +41 grpc::ServerBuilder::AddListeningPort                                                    +41  +4.3%\n       +21%     +32 grpc::ServerBuilder::RegisterService                                                     +32   +21%\n      +0.3%      +1 void std::vector<std::unique_ptr<grpc::ServerBuilderOption, std::default_delete<grpc      +1  +0.3%\n      +0.3%      +1 void std::vector<std::unique_ptr<grpc::ServerBuilderPlugin, std::default_delete<grpc      +1  +0.3%\n   +14% +1.49Ki src/cpp/server/health/default_health_check_service.cc                                +1.49Ki   +14%\n      [NEW]    +515 grpc::Status grpc::internal::CatchingFunctionHandler<grpc::internal::RpcMethodHandle    +515  [NEW]\n       +26%    +438 grpc::DefaultHealthCheckService::HealthCheckServiceImpl::Check                          +438   +26%\n      [NEW]    +215 std::pair<std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::cha    +215  [NEW]\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +42%    +165 grpc::DefaultHealthCheckService::HealthCheckServiceImpl::HealthCheckServiceImpl         +165   +42%\n      +4.0%    +160 grpc::internal::RpcMethodHandler<grpc::DefaultHealthCheckService::HealthCheckService    +160  +4.0%\n      +9.0%     +47 grpc::DefaultHealthCheckService::SetServingStatus                                        +47  +9.0%\n       +16%     +19 grpc::DefaultHealthCheckService::GetHealthCheckService                                   +19   +16%\n   +10%    +820 src/cpp/client/secure_credentials.cc                                                    +820   +10%\n      [NEW]    +198 std::function<void ()>::function<std::_Bind<std::_Mem_fn<void (grpc::MetadataCredent    +198  [NEW]\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +12%    +190 grpc::MetadataCredentialsPluginWrapper::InvokePlugin                                    +190   +12%\n      [NEW]     +61 grpc::GrpcLibraryCodegen::~GrpcLibraryCodegen() [clone .part.0]                          +61  [NEW]\n       +41%     +56 grpc::(anonymous namespace)::WrapCallCredentials                                         +56   +41%\n       +41%     +56 grpc::(anonymous namespace)::WrapChannelCredentials                                      +56   +41%\n       +12%     +52 grpc::MetadataCredentialsFromPlugin                                                      +52   +12%\n       +28%     +45 grpc::MetadataCredentialsPluginWrapper::MetadataCredentialsPluginWrapper                 +45   +28%\n       +19%     +30 grpc::SecureChannelCredentials::CreateChannel                                            +30   +19%\n      +9.8%     +25 grpc::AccessTokenCredentials                                                             +25  +9.8%\n      +9.8%     +25 grpc::GoogleRefreshTokenCredentials                                                      +25  +9.8%\n       +10%     +25 grpc::GoogleComputeEngineCredentials                                                     +25   +10%\n      +6.3%     +17 grpc::GoogleIAMCredentials                                                               +17  +6.3%\n      +6.9%     +17 grpc::GoogleDefaultCredentials                                                           +17  +6.9%\n      +5.3%     +16 grpc::SslCredentials                                                                     +16  +5.3%\n      +4.4%     +16 grpc::ServiceAccountJWTAccessCredentials                                                 +16  +4.4%\n      +1.8%     +10 grpc::MetadataCredentialsPluginWrapper::GetMetadata                                      +10  +1.8%\n   +20%    +718 src/cpp/client/client_context.cc                                                        +718   +20%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +35%    +176 grpc::ClientContext::ClientContext                                                      +176   +35%\n      [NEW]    +167 [ELF Headers]                                                                           +167  [NEW]\n       +88%     +82 grpc::ClientContext::TryCancel                                                           +82   +88%\n       +12%     +63 grpc::ClientContext::set_call                                                            +63   +12%\n       +18%     +54 grpc::ClientContext::set_compression_algorithm                                           +54   +18%\n      +7.1%     +50 grpc::ClientContext::AddMetadata                                                         +50  +7.1%\n      [NEW]     +49 std::unique_lock<std::mutex>::unlock                                                     +49  [NEW]\n      [NEW]     +40 grpc::internal::MetadataMap::~MetadataMap                                                +40  [NEW]\n       +22%     +20 grpc::ClientContext::peer[abi:cxx11]() const                                             +20   +22%\n       +25%     +19 grpc::ClientContext::FromServerContext                                                   +19   +25%\n   +18%    +717 src/cpp/server/dynamic_thread_pool.cc                                                   +717   +18%\n      [NEW]    +200 std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::~deque    +200  [NEW]\n       +17%    +170 grpc::DynamicThreadPool::DynamicThreadPool                                              +170   +17%\n       +48%     +97 std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::     +97   +48%\n      [NEW]     +93 std::function<void ()>::function                                                         +93  [NEW]\n       +37%     +79 grpc::DynamicThreadPool::DynamicThread::ThreadFunc                                       +79   +37%\n       +24%     +39 grpc::DynamicThreadPool::DynamicThread::DynamicThread                                    +39   +24%\n      +4.6%     +13 grpc::DynamicThreadPool::Add                                                             +13  +4.6%\n      +1.9%     +10 void std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_     +10  +1.9%\n       +17%      +9 [Unmapped]                                                                                +9   +17%\n      +1.1%      +7 grpc::DynamicThreadPool::ThreadFunc                                                       +7  +1.1%\n  +4.7%    +599 src/cpp/client/generic_stub.cc                                                          +599  +4.7%\n       +11%    +191 grpc::internal::CallOpClientRecvStatus::FinishOp                                        +191   +11%\n       +19%    +120 grpc::GenericStub::PrepareUnaryCall                                                     +120   +19%\n      +6.9%     +91 grpc::GenericStub::Call                                                                  +91  +6.9%\n      +6.8%     +51 grpc::ClientAsyncResponseReader<grpc::ByteBuffer>::StartCall                             +51  +6.8%\n      +4.5%     +37 grpc::ClientAsyncReaderWriter<grpc::ByteBuffer, grpc::ByteBuffer>::StartCall             +37  +4.5%\n       +11%     +31 grpc::ClientAsyncReaderWriter<grpc::ByteBuffer, grpc::ByteBuffer>::Write                 +31   +11%\n       +12%     +31 grpc::ClientAsyncReaderWriter<grpc::ByteBuffer, grpc::ByteBuffer>::Write                 +31   +12%\n      +3.1%     +29 grpc::internal::CallOpSet<grpc::internal::CallOpRecvInitialMetadata, grpc::internal:     +29  +3.1%\n      +3.2%     +29 grpc::internal::CallOpSet<grpc::internal::CallOpRecvInitialMetadata, grpc::internal:     +29  +3.2%\n   +11%    +594 src/cpp/common/channel_arguments.cc                                                     +594   +11%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +34%    +114 grpc::ChannelArguments::ChannelArguments                                                +114   +34%\n       +12%     +94 grpc::ChannelArguments::SetSocketMutator                                                 +94   +12%\n      +9.6%     +74 grpc::ChannelArguments::SetUserAgentPrefix                                               +74  +9.6%\n      +8.8%     +68 grpc::ChannelArguments::ChannelArguments                                                 +68  +8.8%\n      [NEW]     +58 std::__cxx11::_List_base<std::__cxx11::basic_string<char, std::char_traits<char>, st     +58  [NEW]\n       +23%     +32 grpc::ChannelArguments::SetResourceQuota                                                 +32   +23%\n       +26%     +32 grpc::ChannelArguments::SetServiceConfigJSON                                             +32   +26%\n       +26%     +32 grpc::ChannelArguments::SetMaxSendMessageSize                                            +32   +26%\n       +26%     +32 grpc::ChannelArguments::SetCompressionAlgorithm                                          +32   +26%\n       +26%     +32 grpc::ChannelArguments::SetGrpclbFallbackTimeout                                         +32   +26%\n       +26%     +32 grpc::ChannelArguments::SetMaxReceiveMessageSize                                         +32   +26%\n       +26%     +32 grpc::ChannelArguments::SetLoadBalancingPolicyName                                       +32   +26%\n       +11%     +27 grpc::ChannelArguments::SetPointerWithVtable                                             +27   +11%\n       +12%     +27 grpc::ChannelArguments::SetInt                                                           +27   +12%\n      +7.0%     +21 grpc::ChannelArguments::SetString                                                        +21  +7.0%\n   +11%    +445 src/cpp/client/channel_cc.cc                                                            +445   +11%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n      [NEW]     +98 std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release                            +98  [NEW]\n       +31%     +79 grpc::Channel::Channel                                                                   +79   +31%\n       +11%     +68 grpc::Channel::WaitForStateChangeImpl                                                    +68   +11%\n      [NEW]     +61 grpc::GrpcLibraryCodegen::~GrpcLibraryCodegen() [clone .part.0]                          +61  [NEW]\n      +4.6%     +57 grpc::Channel::CreateCall                                                                +57  +4.6%\n      [NEW]     +50 std::__throw_bad_weak_ptr                                                                +50  [NEW]\n       +11%     +30 grpc::(anonymous namespace)::GetChannelInfoField                                         +30   +11%\n      +1.1%      +2 [Unmapped]                                                                                +2  +1.1%\n  +8.5%    +399 src/cpp/server/server_context.cc                                                        +399  +8.5%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +17%    +144 grpc::ServerContext::ServerContext                                                      +144   +17%\n       +18%     +54 grpc::ServerContext::set_compression_algorithm                                           +54   +18%\n      [NEW]     +50 std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<ch     +50  [NEW]\n       +25%     +44 grpc::ServerContext::AddInitialMetadata                                                  +44   +25%\n       +25%     +44 grpc::ServerContext::AddTrailingMetadata                                                 +44   +25%\n       +18%     +29 grpc::ServerContext::SetLoadReportingCosts                                               +29   +18%\n       +22%     +20 grpc::ServerContext::peer[abi:cxx11]() const                                             +20   +22%\n       +18%     +19 grpc::ServerContext::CompletionOp::Unref                                                 +19   +18%\n  +7.9%    +378 src/cpp/server/secure_server_credentials.cc                                             +378  +7.9%\n      +9.9%    +242 grpc::AuthMetadataProcessorAyncWrapper::InvokeProcessor                                 +242  +9.9%\n       +20%     +70 grpc::AuthMetadataProcessorAyncWrapper::Process                                          +70   +20%\n       +11%     +52 grpc::SslServerCredentials                                                               +52   +11%\n       +16%     +19 grpc::SecureServerCredentials::SetAuthMetadataProcessor                                  +19   +16%\n      +1.7%      +4 void std::vector<grpc_ssl_pem_key_cert_pair, std::allocator<grpc_ssl_pem_key_cert_pa      +4  +1.7%\n  +6.1%    +213 [Other]                                                                                 +213  +6.1%\n   +16%    +213 src/cpp/util/byte_buffer_cc.cc                                                          +213   +16%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +39%    +127 void std::vector<grpc::Slice, std::allocator<grpc::Slice> >::_M_emplace_back_aux<grp    +127   +39%\n       +16%     +86 grpc::ByteBuffer::Dump(std::vector<grpc::Slice, std::allocator<grpc::Slice> >*) cons     +86   +16%\n   +22%    +111 src/cpp/client/insecure_credentials.cc                                                  +111   +23%\n       +55%     +63 grpc::InsecureChannelCredentials                                                         +63   +55%\n       +26%     +37 grpc::(anonymous namespace)::InsecureChannelCredentialsImpl::CreateChannel               +37   +26%\n       +15%     +11 [Unmapped]                                                                               +11   +15%\n   +19%    +102 src/cpp/client/create_channel.cc                                                        +102   +19%\n       +17%     +67 grpc::CreateCustomChannel                                                                +67   +17%\n       +21%     +22 grpc::CreateChannel                                                                      +22   +21%\n      [NEW]     +13 [Unmapped]                                                                               +13  [NEW]\n  +3.3%     +80 src/cpp/thread_manager/thread_manager.cc                                                 +80  +3.3%\n       +22%     +61 grpc::ThreadManager::WorkerThread::WorkerThread                                          +61   +22%\n       +12%     +36 grpc::ThreadManager::CleanupCompletedThreads                                             +36   +12%\n       +16%     +19 grpc::ThreadManager::Initialize                                                          +19   +16%\n      +4.3%      +4 [Unmapped]                                                                                +4  +4.3%\n   +12%     +65 src/cpp/client/create_channel_posix.cc                                                   +65   +12%\n       +19%     +33 grpc::CreateCustomInsecureChannelFromFd                                                  +33   +19%\n       +22%     +32 grpc::CreateInsecureChannelFromFd                                                        +32   +22%\n  +8.6%     +65 src/cpp/common/secure_channel_arguments.cc                                               +65  +8.6%\n      +6.2%     +33 grpc::ChannelArguments::GetSslTargetNameOverride[abi:cxx11]() const                      +33  +6.2%\n       +13%     +29 grpc::ChannelArguments::SetSslTargetNameOverride                                         +29   +13%\n       +50%      +3 [Unmapped]                                                                                +3   +50%\n   +15%     +56 src/cpp/client/create_channel_internal.cc                                                +56   +15%\n       +19%     +56 grpc::CreateChannelInternal                                                              +56   +19%\n   +25%     +56 src/cpp/common/secure_create_auth_context.cc                                             +56   +25%\n       +39%     +56 grpc::CreateAuthContext                                                                  +56   +39%\n  +7.0%     +51 src/cpp/server/channel_argument_option.cc                                                +51  +7.0%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +28%     +33 grpc::MakeChannelArgumentOption                                                          +33   +28%\n       +20%     +19 grpc::MakeChannelArgumentOption                                                          +19   +20%\n\n -------------- SHRINKING                                                                            --------------\n  -0.7%    -249 src/cpp/server/server_cc.cc                                                             -249  -0.7%\n      [DEL] -3.93Ki grpc::Server::SyncRequestThreadManager::DoWork(void*, bool) [clone .part.58]         -3.93Ki  [DEL]\n      [DEL]    -194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    -194  [DEL]\n      -2.3%      -8 grpc::ServerInterface::GenericAsyncRequest::GenericAsyncRequest                           -8  -2.3%\n  -8.0%     -50 src/cpp/util/status.cc                                                                   -50  -8.3%\n      [DEL]     -50 grpc::Status::~Status                                                                    -50  [DEL]\n\n  +5.7% +18.7Ki TOTAL                                                                                 +186Ki  +3.8%\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/356129519",
    "html_url": "https://github.com/grpc/grpc/pull/13815#issuecomment-356129519",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13815",
    "id": 356129519,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjEyOTUxOQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-08T23:27:22Z",
    "updated_at": "2018-01-08T23:27:22Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/356129589",
    "html_url": "https://github.com/grpc/grpc/pull/13815#issuecomment-356129589",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13815",
    "id": 356129589,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjEyOTU4OQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-08T23:27:41Z",
    "updated_at": "2018-01-08T23:27:41Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/356137244",
    "html_url": "https://github.com/grpc/grpc/pull/13815#issuecomment-356137244",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13815",
    "id": 356137244,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjEzNzI0NA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-09T00:08:14Z",
    "updated_at": "2018-01-09T00:08:14Z",
    "author_association": "NONE",
    "body": "```\nCorrupt JSON data (indicates timeout or crash): \n    bm_fullstack_unary_ping_pong.BM_UnaryPingPong_InProcessCHTTP2_NoOpMutator_NoOpMutator__0_32768.opt.new: 1\n\n\n[microbenchmarks] Performance differences noted:\nBenchmark                      cpu_time    real_time\n-----------------------------  ----------  -----------\nBM_ClosureInitAgainstCombiner  -33%        -33%\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/356137394",
    "html_url": "https://github.com/grpc/grpc/pull/13815#issuecomment-356137394",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13815",
    "id": 356137394,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjEzNzM5NA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-09T00:08:56Z",
    "updated_at": "2018-01-09T00:08:56Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] Performance differences noted:\nBenchmark                                           cpu_time    real_time\n--------------------------------------------------  ----------  -----------\nBM_HpackParserParseHeader<EmptyBatch, UnrefHeader>  +4%         +4%\n```"
  }
]
