[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/417110622",
    "html_url": "https://github.com/grpc/grpc/pull/16507#issuecomment-417110622",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16507",
    "id": 417110622,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzExMDYyMg==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-29T21:23:32Z",
    "updated_at": "2018-08-29T21:23:32Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n  +1.4% +10.2Ki [None]                                                                                +166Ki  +1.8%\n      +1.5% +9.72Ki [Unmapped]                                                                            +165Ki  +1.8%\n      [NEW]     +58 grpc_health_v1_HealthCheckRequest_fields                                                 +58  [NEW]\n      [NEW]     +58 grpc_health_v1_HealthCheckResponse_fields                                                +58  [NEW]\n      [NEW]     +40 vtable for grpc_core::HealthCheckClient::CallState                                       +40  [NEW]\n      [NEW]     +40 vtable for grpc_core::HealthCheckClient                                                  +40  [NEW]\n      [NEW]     +40 vtable for grpc_core::InternallyRefCounted<grpc_core::ConnectedSubchannelStateWatche     +40  [NEW]\n      [NEW]     +40 vtable for grpc_core::ConnectedSubchannelStateWatcher                                    +40  [NEW]\n      [NEW]     +40 vtable for grpc_core::InternallyRefCountedWithTracing<grpc_core::HealthCheckClient::     +40  [NEW]\n      [NEW]     +40 vtable for grpc_core::InternallyRefCountedWithTracing<grpc_core::HealthCheckClient>      +40  [NEW]\n      +1.0%     +32 static_metadata_hash                                                                       0  [ = ]\n      +1.0%     +32 grpc_static_slice_table                                                                  +32  +1.0%\n      +2.4%     +28 g_bytes                                                                                  +28  +2.4%\n      +1.0%     +16 grpc_static_metadata_refcounts                                                           +16  +1.0%\n       +50%      +8 grpc_core::SubchannelList<grpc_core::(anonymous namespace)::RoundRobin::RoundRobinSu      +8   +50%\n       +50%      +8 grpc_core::SubchannelList<grpc_core::(anonymous namespace)::PickFirst::PickFirstSubc      +8   +50%\n      +1.0%      +4 static_metadata_hash_values                                                                0  [ = ]\n      +0.7%      +2 elem_keys                                                                                 +2  +0.7%\n      +1.0%      +1 elems_r                                                                                   +1  +1.0%\n      +0.9%      +1 elem_idxs                                                                                 +1  +0.9%\n  [NEW] +5.15Ki src/core/ext/filters/client_channel/health/health_check_client.cc                    +5.15Ki  [NEW]\n      [NEW] +1.30Ki grpc_core::HealthCheckClient::CallState::StartCall                                   +1.30Ki  [NEW]\n      [NEW]    +574 grpc_core::HealthCheckClient::CallState::DoneReadingRecvMessage                         +574  [NEW]\n      [NEW]    +500 [Other]                                                                                 +500  [NEW]\n      [NEW]    +312 grpc_core::HealthCheckClient::StartCall                                                 +312  [NEW]\n      [NEW]    +287 grpc_core::HealthCheckClient::CallState::CallState                                      +287  [NEW]\n      [NEW]    +255 grpc_core::HealthCheckClient::HealthCheckClient                                         +255  [NEW]\n      [NEW]    +203 grpc_core::HealthCheckClient::CallState::CallEnded                                      +203  [NEW]\n      [NEW]    +199 grpc_core::HealthCheckClient::CallState::RecvTrailingMetadataReady                      +199  [NEW]\n      [NEW]    +175 grpc_core::HealthCheckClient::Orphan                                                    +175  [NEW]\n      [NEW]    +171 grpc_core::HealthCheckClient::NotifyOnHealthChange                                      +171  [NEW]\n      [NEW]    +153 [Unmapped]                                                                              +153  [NEW]\n      [NEW]    +135 grpc_core::HealthCheckClient::StartRetryTimer                                           +135  [NEW]\n      [NEW]    +130 grpc_core::HealthCheckClient::CallState::~CallState                                     +130  [NEW]\n      [NEW]    +129 grpc_core::HealthCheckClient::OnRetryTimer                                              +129  [NEW]\n      [NEW]    +126 grpc_core::HealthCheckClient::CallState::ContinueReadingRecvMessage                     +126  [NEW]\n      [NEW]    +121 grpc_core::HealthCheckClient::CallState::PullSliceFromRecvMessage                       +121  [NEW]\n      [NEW]    +114 grpc_core::HealthCheckClient::CallState::Cancel                                         +114  [NEW]\n      [NEW]    +108 grpc_core::HealthCheckClient::CallState::StartCancel                                    +108  [NEW]\n      [NEW]     +91 grpc_core::HealthCheckClient::CallState::OnByteStreamNext                                +91  [NEW]\n      [NEW]     +82 grpc_core::HealthCheckClient::CallState::OnComplete                                      +82  [NEW]\n      [NEW]     +81 grpc_core::HealthCheckClient::SetHealthStatusLocked                                      +81  [NEW]\n   +24% +1.50Ki src/core/ext/filters/client_channel/subchannel.cc                                    +1.50Ki   +24%\n      [NEW]    +503 grpc_core::ConnectedSubchannelStateWatcher::OnConnectivityChanged                       +503  [NEW]\n       +60%    +494 on_subchannel_connected                                                                 +494   +60%\n       +28%    +352 grpc_subchannel_create                                                                  +352   +28%\n      [NEW]    +327 grpc_subchannel_notify_on_state_change                                                  +327  [NEW]\n      [NEW]    +239 grpc_core::ConnectedSubchannelStateWatcher::OnHealthChanged                             +239  [NEW]\n      [NEW]     +86 grpc_subchannel_check_connectivity                                                       +86  [NEW]\n      [NEW]     +50 grpc_core::ConnectedSubchannelStateWatcher::~ConnectedSubchannelStateWatcher             +50  [NEW]\n       +28%     +43 subchannel_destroy                                                                       +43   +28%\n       +11%     +37 maybe_start_connecting_locked                                                            +37   +11%\n      [NEW]     +37 grpc_core::ConnectedSubchannel::GetInitialCallSizeEstimate(unsigned long) const          +37  [NEW]\n       +14%     +26 continue_connect_locked                                                                  +26   +14%\n      +6.8%     +20 [Unmapped]                                                                               +20  +6.8%\n      [NEW]     +14 grpc_core::ConnectedSubchannelStateWatcher::~ConnectedSubchannelStateWatcher             +14  [NEW]\n      [NEW]      +9 grpc_core::InternallyRefCounted<grpc_core::ConnectedSubchannelStateWatcher>::~Intern      +9  [NEW]\n      [NEW]      +2 grpc_core::InternallyRefCounted<grpc_core::ConnectedSubchannelStateWatcher>::~Intern      +2  [NEW]\n      [NEW]      +2 grpc_core::ConnectedSubchannelStateWatcher::Orphan                                        +2  [NEW]\n  +1.1%    +176 src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.cc                          +176  +1.1%\n      +9.6%    +184 grpc_core::(anonymous namespace)::GrpcLb::CreateOrUpdateRoundRobinPolicyLocked() [cl    +184  +9.6%\n  +0.5%     +64 src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc                   +64  +0.5%\n      +1.9%     +64 grpc_core::(anonymous namespace)::PickFirst::UpdateLocked                                +64  +1.9%\n  +0.3%     +48 src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc                 +48  +0.4%\n      [NEW]    +596 grpc_core::(anonymous namespace)::RoundRobin::RoundRobinSubchannelList::StartWatchin    +596  [NEW]\n      +0.9%     +24 grpc_core::(anonymous namespace)::RoundRobin::UpdateLocked                               +24  +0.9%\n      +2.7%     +16 grpc_core::SubchannelList<grpc_core::(anonymous namespace)::RoundRobin::RoundRobinSu     +16  +2.7%\n  +1.1%     +32 src/core/lib/slice/slice_intern.cc                                                       +32  +1.1%\n      +1.2%     +13 grpc_slice_intern                                                                        +13  +1.2%\n      +8.3%     +12 [Unmapped]                                                                               +12  +8.3%\n      +2.2%      +7 grpc_slice_intern_init                                                                    +7  +2.2%\n\n -------------- SHRINKING                                                                            --------------\n  -5.7%     -78 src/core/ext/filters/client_channel/lb_policy.cc                                         -78  -5.7%\n      [DEL]     -78 grpc_core::Orphanable::Orphan                                                            -78  [DEL]\n\n  +1.2% +17.1Ki TOTAL                                                                                 +173Ki  +1.7%\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE              FILE SIZE\n ++++++++++++++ GROWIN ++++++++++++++\n\n -+-+-+-+-+-+-+ MIXED  +-+-+-+-+-+-+-\n  -0.0%      -8 [None]    +112  +0.0%\n\n  -0.0%      -8 TOTAL     +112  +0.0%\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/417112601",
    "html_url": "https://github.com/grpc/grpc/pull/16507#issuecomment-417112601",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16507",
    "id": 417112601,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzExMjYwMQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-29T21:30:43Z",
    "updated_at": "2018-08-29T21:30:43Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/417120872",
    "html_url": "https://github.com/grpc/grpc/pull/16507#issuecomment-417120872",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16507",
    "id": 417120872,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzEyMDg3Mg==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-29T22:01:38Z",
    "updated_at": "2018-08-29T22:01:38Z",
    "author_association": "NONE",
    "body": "```\nObjective-C binary sizes\n*****************STATIC******************\n  New size                      Old size\n   680,409       Core (>)        669,448\n\n 1,966,483      Total (>)      1,955,026\n\n***************FRAMEWORKS****************\n  New size                      Old size\n 3,709,306       Core (>)      3,639,702\n\n10,913,358      Total (>)     10,843,757\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/417124449",
    "html_url": "https://github.com/grpc/grpc/pull/16507#issuecomment-417124449",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16507",
    "id": 417124449,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzEyNDQ0OQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-29T22:15:40Z",
    "updated_at": "2018-08-29T22:15:40Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] Performance differences noted:\nBenchmark                              cpu_time    real_time\n-------------------------------------  ----------  -----------\nBM_ErrorGetMissingInt                  -4%         -4%\nBM_HasClearGrpcStatus<ErrorCancelled>  -12%        -12%\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/425203810",
    "html_url": "https://github.com/grpc/grpc/pull/16507#issuecomment-425203810",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16507",
    "id": 425203810,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTIwMzgxMA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-27T18:52:34Z",
    "updated_at": "2018-09-27T18:52:34Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n  +1.7% +12.5Ki [None]                                                                                +204Ki  +2.2%\n      +1.8% +11.9Ki [Unmapped]                                                                            +204Ki  +2.2%\n      [NEW]    +108 grpc_core::HealthCheckClient::CallState::RecvTrailingMetadataReady(void*, grpc_error    +108  [NEW]\n      [NEW]     +58 grpc_health_v1_HealthCheckRequest_fields                                                 +58  [NEW]\n      [NEW]     +58 grpc_health_v1_HealthCheckResponse_fields                                                +58  [NEW]\n      [NEW]     +40 vtable for grpc_core::HealthCheckClient::CallState                                       +40  [NEW]\n      [NEW]     +40 vtable for grpc_core::HealthCheckClient                                                  +40  [NEW]\n      [NEW]     +40 vtable for grpc_core::InternallyRefCounted<grpc_core::ConnectedSubchannelStateWatche     +40  [NEW]\n      [NEW]     +40 vtable for grpc_core::ConnectedSubchannelStateWatcher                                    +40  [NEW]\n      [NEW]     +40 vtable for grpc_core::InternallyRefCountedWithTracing<grpc_core::HealthCheckClient::     +40  [NEW]\n      [NEW]     +40 vtable for grpc_core::InternallyRefCountedWithTracing<grpc_core::HealthCheckClient>      +40  [NEW]\n      +3.5%     +36 [None]                                                                                     0  [ = ]\n      +1.0%     +32 static_metadata_hash                                                                       0  [ = ]\n      +1.0%     +32 grpc_static_slice_table                                                                  +32  +1.0%\n      +2.4%     +28 g_bytes                                                                                  +28  +2.4%\n      [NEW]     +24 grpc_health_check_client_trace                                                             0  [ = ]\n      +1.0%     +16 grpc_static_metadata_refcounts                                                           +16  +1.0%\n       +50%      +8 grpc_core::SubchannelList<grpc_core::(anonymous namespace)::RoundRobin::RoundRobinSu      +8   +50%\n       +50%      +8 grpc_core::SubchannelList<grpc_core::(anonymous namespace)::PickFirst::PickFirstSubc      +8   +50%\n      +1.0%      +4 static_metadata_hash_values                                                                0  [ = ]\n      +0.9%      +2 [Other]                                                                                   +2  +0.9%\n      +0.7%      +2 elem_keys                                                                                 +2  +0.7%\n  [NEW] +7.36Ki src/core/ext/filters/client_channel/health/health_check_client.cc                    +7.36Ki  [NEW]\n      [NEW] +1.59Ki grpc_core::HealthCheckClient::CallState::StartCall                                   +1.59Ki  [NEW]\n      [NEW] +1.02Ki grpc_core::HealthCheckClient::CallState::DoneReadingRecvMessage                      +1.02Ki  [NEW]\n      [NEW]    +770 [Other]                                                                                 +770  [NEW]\n      [NEW]    +421 grpc_core::HealthCheckClient::CallState::RecvTrailingMetadataReady                      +421  [NEW]\n      [NEW]    +409 grpc_core::HealthCheckClient::StartRetryTimer                                           +409  [NEW]\n      [NEW]    +350 grpc_core::HealthCheckClient::StartCallLocked                                           +350  [NEW]\n      [NEW]    +348 grpc_core::HealthCheckClient::HealthCheckClient                                         +348  [NEW]\n      [NEW]    +290 grpc_core::HealthCheckClient::CallState::CallState                                      +290  [NEW]\n      [NEW]    +251 grpc_core::HealthCheckClient::CallState::~CallState                                     +251  [NEW]\n      [NEW]    +247 grpc_core::HealthCheckClient::Orphan                                                    +247  [NEW]\n      [NEW]    +223 grpc_core::HealthCheckClient::~HealthCheckClient                                        +223  [NEW]\n      [NEW]    +219 grpc_core::HealthCheckClient::CallState::CallEnded                                      +219  [NEW]\n      [NEW]    +203 [Unmapped]                                                                              +203  [NEW]\n      [NEW]    +186 grpc_core::HealthCheckClient::SetHealthStatusLocked                                     +186  [NEW]\n      [NEW]    +179 grpc_core::HealthCheckClient::NotifyOnHealthChange                                      +179  [NEW]\n      [NEW]    +172 grpc_core::HealthCheckClient::OnRetryTimer                                              +172  [NEW]\n      [NEW]    +130 grpc_core::HealthCheckClient::CallState::RecvMessageReady                               +130  [NEW]\n      [NEW]    +126 grpc_core::HealthCheckClient::CallState::ContinueReadingRecvMessage                     +126  [NEW]\n      [NEW]    +121 grpc_core::HealthCheckClient::CallState::PullSliceFromRecvMessage                       +121  [NEW]\n      [NEW]    +114 grpc_core::HealthCheckClient::CallState::Cancel                                         +114  [NEW]\n      [NEW]    +108 grpc_core::HealthCheckClient::CallState::StartCancel                                    +108  [NEW]\n   +27% +1.82Ki src/core/ext/filters/client_channel/subchannel.cc                                    +1.82Ki   +27%\n       +77%    +656 on_subchannel_connected                                                                 +656   +77%\n      [NEW]    +583 grpc_core::ConnectedSubchannelStateWatcher::OnConnectivityChanged                       +583  [NEW]\n       +24%    +352 grpc_subchannel_create                                                                  +352   +24%\n      [NEW]    +327 grpc_subchannel_notify_on_state_change                                                  +327  [NEW]\n      [NEW]    +231 grpc_core::ConnectedSubchannelStateWatcher::OnHealthChanged                             +231  [NEW]\n      [NEW]     +86 grpc_subchannel_check_connectivity                                                       +86  [NEW]\n       +22%     +72 grpc_subchannel_unref                                                                    +72   +22%\n      [NEW]     +50 grpc_core::ConnectedSubchannelStateWatcher::~ConnectedSubchannelStateWatcher             +50  [NEW]\n       +14%     +48 subchannel_destroy                                                                       +48   +14%\n      [NEW]     +37 grpc_core::ConnectedSubchannel::GetInitialCallSizeEstimate(unsigned long) const          +37  [NEW]\n      +9.7%     +34 maybe_start_connecting_locked                                                            +34  +9.7%\n      [NEW]     +34 grpc_core::ConnectedSubchannelStateWatcher::Orphan                                       +34  [NEW]\n       +14%     +26 continue_connect_locked                                                                  +26   +14%\n      [NEW]     +14 grpc_core::ConnectedSubchannelStateWatcher::~ConnectedSubchannelStateWatcher             +14  [NEW]\n      [NEW]      +9 grpc_core::InternallyRefCounted<grpc_core::ConnectedSubchannelStateWatcher>::~Intern      +9  [NEW]\n      +2.8%      +8 [Unmapped]                                                                                +8  +2.8%\n      [NEW]      +2 grpc_core::InternallyRefCounted<grpc_core::ConnectedSubchannelStateWatcher>::~Intern      +2  [NEW]\n  +1.1%    +176 src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.cc                          +176  +1.1%\n      +9.6%    +184 grpc_core::(anonymous namespace)::GrpcLb::CreateOrUpdateRoundRobinPolicyLocked() [cl    +184  +9.6%\n  +0.5%     +64 src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc                   +64  +0.5%\n      +1.9%     +64 grpc_core::(anonymous namespace)::PickFirst::UpdateLocked                                +64  +1.9%\n  +0.3%     +48 src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc                 +48  +0.4%\n      [NEW]    +596 grpc_core::(anonymous namespace)::RoundRobin::RoundRobinSubchannelList::StartWatchin    +596  [NEW]\n      +0.9%     +24 grpc_core::(anonymous namespace)::RoundRobin::UpdateLocked                               +24  +0.9%\n      +2.7%     +16 grpc_core::SubchannelList<grpc_core::(anonymous namespace)::RoundRobin::RoundRobinSu     +16  +2.7%\n  +1.1%     +32 src/core/lib/slice/slice_intern.cc                                                       +32  +1.1%\n      +1.2%     +13 grpc_slice_intern                                                                        +13  +1.2%\n      +8.3%     +12 [Unmapped]                                                                               +12  +8.3%\n      +2.2%      +7 grpc_slice_intern_init                                                                    +7  +2.2%\n\n -------------- SHRINKING                                                                            --------------\n  -5.7%     -78 src/core/ext/filters/client_channel/lb_policy.cc                                         -78  -5.7%\n      [DEL]     -78 grpc_core::Orphanable::Orphan                                                            -78  [DEL]\n\n  +1.5% +21.9Ki TOTAL                                                                                 +214Ki  +2.1%\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n   +12% +27.1Ki [None]                                                                                +718Ki   +14%\n       +12% +24.9Ki [Unmapped]                                                                            +716Ki   +14%\n      [NEW]    +709 [Other]                                                                                 +709  [NEW]\n      [NEW]    +175 typeinfo name for std::_Bind<std::_Mem_fn<void (grpc::DefaultHealthCheckService::Hea    +175  [NEW]\n      [NEW]    +175 typeinfo name for std::_Bind<std::_Mem_fn<void (grpc::DefaultHealthCheckService::Hea    +175  [NEW]\n      [NEW]    +157 typeinfo name for std::_Maybe_get_result_type<std::_Mem_fn<void (grpc::DefaultHealth    +157  [NEW]\n      [NEW]    +157 typeinfo name for std::_Maybe_get_result_type<std::_Mem_fn<void (grpc::DefaultHealth    +157  [NEW]\n      [NEW]    +156 typeinfo name for std::_Weak_result_type_impl<std::_Mem_fn<void (grpc::DefaultHealth    +156  [NEW]\n      [NEW]    +156 typeinfo name for std::_Weak_result_type_impl<std::_Mem_fn<void (grpc::DefaultHealth    +156  [NEW]\n      [NEW]    +151 typeinfo name for std::_Weak_result_type<std::_Mem_fn<void (grpc::DefaultHealthCheck    +151  [NEW]\n      [NEW]    +151 typeinfo name for std::_Weak_result_type<std::_Mem_fn<void (grpc::DefaultHealthCheck    +151  [NEW]\n      [NEW]    +142 typeinfo name for std::_Sp_counted_ptr_inplace<grpc::DefaultHealthCheckService::Heal    +142  [NEW]\n      [NEW]    +142 typeinfo name for std::_Sp_counted_ptr_inplace<grpc::DefaultHealthCheckService::Heal    +142  [NEW]\n      [NEW]    +128 vtable for grpc::ServerAsyncWriter<grpc::ByteBuffer>                                    +128  [NEW]\n      [NEW]     +77 typeinfo name for grpc::DefaultHealthCheckService::HealthCheckServiceImpl::CheckCall     +77  [NEW]\n      [NEW]     +77 typeinfo name for grpc::DefaultHealthCheckService::HealthCheckServiceImpl::WatchCall     +77  [NEW]\n      [NEW]     +72 typeinfo name for grpc::DefaultHealthCheckService::HealthCheckServiceImpl::CallHandl     +72  [NEW]\n      [NEW]     +64 typeinfo name for grpc::ServerInterface::PayloadAsyncRequest<grpc::ByteBuffer>           +64  [NEW]\n      [NEW]     +56 typeinfo for grpc::ServerAsyncWriterInterface<grpc::ByteBuffer>                          +56  [NEW]\n      [NEW]     +56 vtable for std::_Sp_counted_ptr_inplace<grpc::DefaultHealthCheckService::HealthCheck     +56  [NEW]\n      [NEW]     +56 vtable for std::_Sp_counted_ptr_inplace<grpc::DefaultHealthCheckService::HealthCheck     +56  [NEW]\n       +14%     +16 [None]                                                                                     0  [ = ]\n  +297% +36.0Ki src/cpp/server/health/default_health_check_service.cc                                +36.0Ki  +297%\n     +21e2% +11.2Ki [Other]                                                                              +11.2Ki +21e2%\n      [NEW] +8.80Ki grpc::DefaultHealthCheckService::HealthCheckServiceImpl::CheckCallHandler::OnCallRec +8.80Ki  [NEW]\n      [NEW] +3.07Ki grpc::DefaultHealthCheckService::HealthCheckServiceImpl::WatchCallHandler::SendHealt +3.07Ki  [NEW]\n      [NEW] +2.92Ki grpc::DefaultHealthCheckService::HealthCheckServiceImpl::WatchCallHandler::SendFinis +2.92Ki  [NEW]\n      [NEW] +2.76Ki grpc::DefaultHealthCheckService::HealthCheckServiceImpl::WatchCallHandler::CreateAnd +2.76Ki  [NEW]\n      [NEW] +2.16Ki grpc::ServerAsyncWriter<grpc::ByteBuffer>::WriteAndFinish                            +2.16Ki  [NEW]\n      [NEW] +1.90Ki grpc::ServerAsyncWriter<grpc::ByteBuffer>::Finish                                    +1.90Ki  [NEW]\n      [NEW] +1.67Ki grpc::DefaultHealthCheckService::HealthCheckServiceImpl::CheckCallHandler::CreateAnd +1.67Ki  [NEW]\n      [NEW] +1.05Ki grpc::ServerAsyncWriter<grpc::ByteBuffer>::Write                                     +1.05Ki  [NEW]\n      [NEW] +1.02Ki grpc::ServerAsyncWriter<grpc::ByteBuffer>::Write                                     +1.02Ki  [NEW]\n      [NEW]    +984 grpc::DefaultHealthCheckService::HealthCheckServiceImpl::WatchCallHandler::OnCallRec    +984  [NEW]\n      [NEW]    +901 grpc::DefaultHealthCheckService::RegisterCallHandler                                    +901  [NEW]\n      [NEW]    +854 grpc::DefaultHealthCheckService::HealthCheckServiceImpl::WatchCallHandler::WatchCall    +854  [NEW]\n      [NEW]    +830 grpc::ServerAsyncWriter<grpc::ByteBuffer>::SendInitialMetadata                          +830  [NEW]\n      [NEW]    +830 grpc::ServerAsyncResponseWriter<grpc::ByteBuffer>::SendInitialMetadata                  +830  [NEW]\n      [NEW]    +826 grpc::DefaultHealthCheckService::HealthCheckServiceImpl::DecodeRequest                  +826  [NEW]\n      [NEW]    +772 grpc::DefaultHealthCheckService::HealthCheckServiceImpl::WatchCallHandler::~WatchCal    +772  [NEW]\n      [NEW]    +764 grpc::DefaultHealthCheckService::HealthCheckServiceImpl::WatchCallHandler::~WatchCal    +764  [NEW]\n      [NEW]    +724 std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocato    +724  [NEW]\n      [NEW]    +702 grpc::DefaultHealthCheckService::UnregisterCallHandler                                  +702  [NEW]\n      [NEW]    +682 grpc::ServerInterface::PayloadAsyncRequest<grpc::ByteBuffer>::FinalizeResult            +682  [NEW]\n  +0.4%    +132 src/cpp/server/server_cc.cc                                                             +132  +0.4%\n       +55% +1.09Ki grpc::Server::Start                                                                  +1.09Ki   +55%\n      [NEW]     +12 [ELF Headers]                                                                            +12  [NEW]\n\n   +17% +63.1Ki TOTAL                                                                                 +754Ki   +14%\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/425205671",
    "html_url": "https://github.com/grpc/grpc/pull/16507#issuecomment-425205671",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16507",
    "id": 425205671,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTIwNTY3MQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-27T18:58:35Z",
    "updated_at": "2018-09-27T18:58:35Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/425215312",
    "html_url": "https://github.com/grpc/grpc/pull/16507#issuecomment-425215312",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16507",
    "id": 425215312,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTIxNTMxMg==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-27T19:30:42Z",
    "updated_at": "2018-09-27T19:30:42Z",
    "author_association": "NONE",
    "body": "```\nObjective-C binary sizes\n*****************STATIC******************\n  New size                      Old size\n   693,513       Core (>)        679,050\n\n 1,979,777      Total (>)      1,964,802\n\n***************FRAMEWORKS****************\n  New size                      Old size\n 3,770,654       Core (>)      3,681,950\n\n10,976,169      Total (>)     10,887,471\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/425219041",
    "html_url": "https://github.com/grpc/grpc/pull/16507#issuecomment-425219041",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16507",
    "id": 425219041,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTIxOTA0MQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-27T19:44:27Z",
    "updated_at": "2018-09-27T19:44:27Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/425251525",
    "html_url": "https://github.com/grpc/grpc/pull/16507#issuecomment-425251525",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16507",
    "id": 425251525,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTI1MTUyNQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-27T21:38:43Z",
    "updated_at": "2018-09-27T21:38:43Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n  +1.7% +12.5Ki [None]                                                                                +205Ki  +2.2%\n      +1.8% +11.8Ki [Unmapped]                                                                            +204Ki  +2.2%\n      [NEW]    +108 grpc_core::HealthCheckClient::CallState::RecvTrailingMetadataReady(void*, grpc_error    +108  [NEW]\n      [NEW]     +58 grpc_health_v1_HealthCheckRequest_fields                                                 +58  [NEW]\n      [NEW]     +58 grpc_health_v1_HealthCheckResponse_fields                                                +58  [NEW]\n      [NEW]     +40 vtable for grpc_core::HealthCheckClient::CallState                                       +40  [NEW]\n      [NEW]     +40 vtable for grpc_core::HealthCheckClient                                                  +40  [NEW]\n      [NEW]     +40 vtable for grpc_core::InternallyRefCounted<grpc_core::ConnectedSubchannelStateWatche     +40  [NEW]\n      [NEW]     +40 vtable for grpc_core::ConnectedSubchannelStateWatcher                                    +40  [NEW]\n      [NEW]     +40 vtable for grpc_core::InternallyRefCountedWithTracing<grpc_core::HealthCheckClient::     +40  [NEW]\n      [NEW]     +40 vtable for grpc_core::InternallyRefCountedWithTracing<grpc_core::HealthCheckClient>      +40  [NEW]\n      +3.5%     +36 [None]                                                                                     0  [ = ]\n      +1.0%     +32 static_metadata_hash                                                                       0  [ = ]\n      +1.0%     +32 grpc_static_slice_table                                                                  +32  +1.0%\n      +2.4%     +28 g_bytes                                                                                  +28  +2.4%\n      [NEW]     +24 grpc_health_check_client_trace                                                             0  [ = ]\n      +1.0%     +16 grpc_static_metadata_refcounts                                                           +16  +1.0%\n       +50%      +8 grpc_core::SubchannelList<grpc_core::(anonymous namespace)::RoundRobin::RoundRobinSu      +8   +50%\n       +50%      +8 grpc_core::SubchannelList<grpc_core::(anonymous namespace)::PickFirst::PickFirstSubc      +8   +50%\n      +1.0%      +4 static_metadata_hash_values                                                                0  [ = ]\n      +0.9%      +2 [Other]                                                                                   +2  +0.9%\n      +0.7%      +2 elem_keys                                                                                 +2  +0.7%\n  [NEW] +7.36Ki src/core/ext/filters/client_channel/health/health_check_client.cc                    +7.36Ki  [NEW]\n      [NEW] +1.59Ki grpc_core::HealthCheckClient::CallState::StartCall                                   +1.59Ki  [NEW]\n      [NEW] +1.02Ki grpc_core::HealthCheckClient::CallState::DoneReadingRecvMessage                      +1.02Ki  [NEW]\n      [NEW]    +770 [Other]                                                                                 +770  [NEW]\n      [NEW]    +421 grpc_core::HealthCheckClient::CallState::RecvTrailingMetadataReady                      +421  [NEW]\n      [NEW]    +409 grpc_core::HealthCheckClient::StartRetryTimer                                           +409  [NEW]\n      [NEW]    +350 grpc_core::HealthCheckClient::StartCallLocked                                           +350  [NEW]\n      [NEW]    +348 grpc_core::HealthCheckClient::HealthCheckClient                                         +348  [NEW]\n      [NEW]    +290 grpc_core::HealthCheckClient::CallState::CallState                                      +290  [NEW]\n      [NEW]    +251 grpc_core::HealthCheckClient::CallState::~CallState                                     +251  [NEW]\n      [NEW]    +247 grpc_core::HealthCheckClient::Orphan                                                    +247  [NEW]\n      [NEW]    +223 grpc_core::HealthCheckClient::~HealthCheckClient                                        +223  [NEW]\n      [NEW]    +219 grpc_core::HealthCheckClient::CallState::CallEnded                                      +219  [NEW]\n      [NEW]    +203 [Unmapped]                                                                              +203  [NEW]\n      [NEW]    +186 grpc_core::HealthCheckClient::SetHealthStatusLocked                                     +186  [NEW]\n      [NEW]    +179 grpc_core::HealthCheckClient::NotifyOnHealthChange                                      +179  [NEW]\n      [NEW]    +172 grpc_core::HealthCheckClient::OnRetryTimer                                              +172  [NEW]\n      [NEW]    +130 grpc_core::HealthCheckClient::CallState::RecvMessageReady                               +130  [NEW]\n      [NEW]    +126 grpc_core::HealthCheckClient::CallState::ContinueReadingRecvMessage                     +126  [NEW]\n      [NEW]    +121 grpc_core::HealthCheckClient::CallState::PullSliceFromRecvMessage                       +121  [NEW]\n      [NEW]    +114 grpc_core::HealthCheckClient::CallState::Cancel                                         +114  [NEW]\n      [NEW]    +108 grpc_core::HealthCheckClient::CallState::StartCancel                                    +108  [NEW]\n   +27% +1.82Ki src/core/ext/filters/client_channel/subchannel.cc                                    +1.82Ki   +27%\n       +77%    +656 on_subchannel_connected                                                                 +656   +77%\n      [NEW]    +583 grpc_core::ConnectedSubchannelStateWatcher::OnConnectivityChanged                       +583  [NEW]\n       +24%    +352 grpc_subchannel_create                                                                  +352   +24%\n      [NEW]    +327 grpc_subchannel_notify_on_state_change                                                  +327  [NEW]\n      [NEW]    +231 grpc_core::ConnectedSubchannelStateWatcher::OnHealthChanged                             +231  [NEW]\n      [NEW]     +86 grpc_subchannel_check_connectivity                                                       +86  [NEW]\n       +22%     +72 grpc_subchannel_unref                                                                    +72   +22%\n      [NEW]     +50 grpc_core::ConnectedSubchannelStateWatcher::~ConnectedSubchannelStateWatcher             +50  [NEW]\n       +14%     +48 subchannel_destroy                                                                       +48   +14%\n      [NEW]     +37 grpc_core::ConnectedSubchannel::GetInitialCallSizeEstimate(unsigned long) const          +37  [NEW]\n      +9.7%     +34 maybe_start_connecting_locked                                                            +34  +9.7%\n      [NEW]     +34 grpc_core::ConnectedSubchannelStateWatcher::Orphan                                       +34  [NEW]\n       +14%     +26 continue_connect_locked                                                                  +26   +14%\n      [NEW]     +14 grpc_core::ConnectedSubchannelStateWatcher::~ConnectedSubchannelStateWatcher             +14  [NEW]\n      [NEW]      +9 grpc_core::InternallyRefCounted<grpc_core::ConnectedSubchannelStateWatcher>::~Intern      +9  [NEW]\n      +2.8%      +8 [Unmapped]                                                                                +8  +2.8%\n      [NEW]      +2 grpc_core::InternallyRefCounted<grpc_core::ConnectedSubchannelStateWatcher>::~Intern      +2  [NEW]\n  +1.1%    +176 src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.cc                          +176  +1.1%\n      +9.6%    +184 grpc_core::(anonymous namespace)::GrpcLb::CreateOrUpdateRoundRobinPolicyLocked() [cl    +184  +9.6%\n  +0.5%     +64 src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc                   +64  +0.5%\n      +1.9%     +64 grpc_core::(anonymous namespace)::PickFirst::UpdateLocked                                +64  +1.9%\n  +0.3%     +48 src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc                 +48  +0.4%\n      [NEW]    +596 grpc_core::(anonymous namespace)::RoundRobin::RoundRobinSubchannelList::StartWatchin    +596  [NEW]\n      +0.9%     +24 grpc_core::(anonymous namespace)::RoundRobin::UpdateLocked                               +24  +0.9%\n      +2.7%     +16 grpc_core::SubchannelList<grpc_core::(anonymous namespace)::RoundRobin::RoundRobinSu     +16  +2.7%\n  +1.1%     +32 src/core/lib/slice/slice_intern.cc                                                       +32  +1.1%\n      +1.2%     +13 grpc_slice_intern                                                                        +13  +1.2%\n      +8.3%     +12 [Unmapped]                                                                               +12  +8.3%\n      +2.2%      +7 grpc_slice_intern_init                                                                    +7  +2.2%\n\n -------------- SHRINKING                                                                            --------------\n  -5.7%     -78 src/core/ext/filters/client_channel/lb_policy.cc                                         -78  -5.7%\n      [DEL]     -78 grpc_core::Orphanable::Orphan                                                            -78  [DEL]\n\n  +1.5% +21.9Ki TOTAL                                                                                 +214Ki  +2.1%\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n   +12% +27.1Ki [None]                                                                                +718Ki   +14%\n       +12% +24.9Ki [Unmapped]                                                                            +716Ki   +14%\n      [NEW]    +709 [Other]                                                                                 +709  [NEW]\n      [NEW]    +175 typeinfo name for std::_Bind<std::_Mem_fn<void (grpc::DefaultHealthCheckService::Hea    +175  [NEW]\n      [NEW]    +175 typeinfo name for std::_Bind<std::_Mem_fn<void (grpc::DefaultHealthCheckService::Hea    +175  [NEW]\n      [NEW]    +157 typeinfo name for std::_Maybe_get_result_type<std::_Mem_fn<void (grpc::DefaultHealth    +157  [NEW]\n      [NEW]    +157 typeinfo name for std::_Maybe_get_result_type<std::_Mem_fn<void (grpc::DefaultHealth    +157  [NEW]\n      [NEW]    +156 typeinfo name for std::_Weak_result_type_impl<std::_Mem_fn<void (grpc::DefaultHealth    +156  [NEW]\n      [NEW]    +156 typeinfo name for std::_Weak_result_type_impl<std::_Mem_fn<void (grpc::DefaultHealth    +156  [NEW]\n      [NEW]    +151 typeinfo name for std::_Weak_result_type<std::_Mem_fn<void (grpc::DefaultHealthCheck    +151  [NEW]\n      [NEW]    +151 typeinfo name for std::_Weak_result_type<std::_Mem_fn<void (grpc::DefaultHealthCheck    +151  [NEW]\n      [NEW]    +142 typeinfo name for std::_Sp_counted_ptr_inplace<grpc::DefaultHealthCheckService::Heal    +142  [NEW]\n      [NEW]    +142 typeinfo name for std::_Sp_counted_ptr_inplace<grpc::DefaultHealthCheckService::Heal    +142  [NEW]\n      [NEW]    +128 vtable for grpc::ServerAsyncWriter<grpc::ByteBuffer>                                    +128  [NEW]\n      [NEW]     +77 typeinfo name for grpc::DefaultHealthCheckService::HealthCheckServiceImpl::CheckCall     +77  [NEW]\n      [NEW]     +77 typeinfo name for grpc::DefaultHealthCheckService::HealthCheckServiceImpl::WatchCall     +77  [NEW]\n      [NEW]     +72 typeinfo name for grpc::DefaultHealthCheckService::HealthCheckServiceImpl::CallHandl     +72  [NEW]\n      [NEW]     +64 typeinfo name for grpc::ServerInterface::PayloadAsyncRequest<grpc::ByteBuffer>           +64  [NEW]\n      [NEW]     +56 typeinfo for grpc::ServerAsyncWriterInterface<grpc::ByteBuffer>                          +56  [NEW]\n      [NEW]     +56 vtable for std::_Sp_counted_ptr_inplace<grpc::DefaultHealthCheckService::HealthCheck     +56  [NEW]\n      [NEW]     +56 vtable for std::_Sp_counted_ptr_inplace<grpc::DefaultHealthCheckService::HealthCheck     +56  [NEW]\n       +14%     +16 [None]                                                                                     0  [ = ]\n  +297% +36.0Ki src/cpp/server/health/default_health_check_service.cc                                +36.0Ki  +297%\n     +21e2% +11.2Ki [Other]                                                                              +11.2Ki +21e2%\n      [NEW] +8.80Ki grpc::DefaultHealthCheckService::HealthCheckServiceImpl::CheckCallHandler::OnCallRec +8.80Ki  [NEW]\n      [NEW] +3.07Ki grpc::DefaultHealthCheckService::HealthCheckServiceImpl::WatchCallHandler::SendHealt +3.07Ki  [NEW]\n      [NEW] +2.92Ki grpc::DefaultHealthCheckService::HealthCheckServiceImpl::WatchCallHandler::SendFinis +2.92Ki  [NEW]\n      [NEW] +2.76Ki grpc::DefaultHealthCheckService::HealthCheckServiceImpl::WatchCallHandler::CreateAnd +2.76Ki  [NEW]\n      [NEW] +2.16Ki grpc::ServerAsyncWriter<grpc::ByteBuffer>::WriteAndFinish                            +2.16Ki  [NEW]\n      [NEW] +1.90Ki grpc::ServerAsyncWriter<grpc::ByteBuffer>::Finish                                    +1.90Ki  [NEW]\n      [NEW] +1.67Ki grpc::DefaultHealthCheckService::HealthCheckServiceImpl::CheckCallHandler::CreateAnd +1.67Ki  [NEW]\n      [NEW] +1.05Ki grpc::ServerAsyncWriter<grpc::ByteBuffer>::Write                                     +1.05Ki  [NEW]\n      [NEW] +1.02Ki grpc::ServerAsyncWriter<grpc::ByteBuffer>::Write                                     +1.02Ki  [NEW]\n      [NEW]    +984 grpc::DefaultHealthCheckService::HealthCheckServiceImpl::WatchCallHandler::OnCallRec    +984  [NEW]\n      [NEW]    +901 grpc::DefaultHealthCheckService::RegisterCallHandler                                    +901  [NEW]\n      [NEW]    +854 grpc::DefaultHealthCheckService::HealthCheckServiceImpl::WatchCallHandler::WatchCall    +854  [NEW]\n      [NEW]    +830 grpc::ServerAsyncWriter<grpc::ByteBuffer>::SendInitialMetadata                          +830  [NEW]\n      [NEW]    +830 grpc::ServerAsyncResponseWriter<grpc::ByteBuffer>::SendInitialMetadata                  +830  [NEW]\n      [NEW]    +826 grpc::DefaultHealthCheckService::HealthCheckServiceImpl::DecodeRequest                  +826  [NEW]\n      [NEW]    +772 grpc::DefaultHealthCheckService::HealthCheckServiceImpl::WatchCallHandler::~WatchCal    +772  [NEW]\n      [NEW]    +764 grpc::DefaultHealthCheckService::HealthCheckServiceImpl::WatchCallHandler::~WatchCal    +764  [NEW]\n      [NEW]    +724 std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocato    +724  [NEW]\n      [NEW]    +702 grpc::DefaultHealthCheckService::UnregisterCallHandler                                  +702  [NEW]\n      [NEW]    +682 grpc::ServerInterface::PayloadAsyncRequest<grpc::ByteBuffer>::FinalizeResult            +682  [NEW]\n  +0.4%    +132 src/cpp/server/server_cc.cc                                                             +132  +0.4%\n       +55% +1.09Ki grpc::Server::Start                                                                  +1.09Ki   +55%\n      [NEW]     +12 [ELF Headers]                                                                            +12  [NEW]\n\n   +17% +63.1Ki TOTAL                                                                                 +754Ki   +14%\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/425253393",
    "html_url": "https://github.com/grpc/grpc/pull/16507#issuecomment-425253393",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16507",
    "id": 425253393,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTI1MzM5Mw==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-27T21:46:01Z",
    "updated_at": "2018-09-27T21:46:01Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/425260467",
    "html_url": "https://github.com/grpc/grpc/pull/16507#issuecomment-425260467",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16507",
    "id": 425260467,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTI2MDQ2Nw==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-27T22:17:16Z",
    "updated_at": "2018-09-27T22:17:16Z",
    "author_association": "NONE",
    "body": "```\nObjective-C binary sizes\n*****************STATIC******************\n  New size                      Old size\n   693,349       Core (>)        679,050\n\n 1,979,601      Total (>)      1,964,802\n\n***************FRAMEWORKS****************\n  New size                      Old size\n 3,770,654       Core (>)      3,681,950\n\n10,976,166      Total (>)     10,887,473\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/425263072",
    "html_url": "https://github.com/grpc/grpc/pull/16507#issuecomment-425263072",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16507",
    "id": 425263072,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTI2MzA3Mg==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-27T22:30:22Z",
    "updated_at": "2018-09-27T22:30:22Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/429999448",
    "html_url": "https://github.com/grpc/grpc/pull/16507#issuecomment-429999448",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16507",
    "id": 429999448,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTk5OTQ0OA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-15T20:22:25Z",
    "updated_at": "2018-10-15T20:22:25Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n  +1.7% +12.5Ki [None]                                                                                +204Ki  +2.2%\n      +1.8% +11.9Ki [Unmapped]                                                                            +203Ki  +2.2%\n      [NEW]    +108 grpc_core::HealthCheckClient::CallState::RecvTrailingMetadataReady(void*, grpc_error    +108  [NEW]\n      [NEW]     +58 grpc_health_v1_HealthCheckRequest_fields                                                 +58  [NEW]\n      [NEW]     +58 grpc_health_v1_HealthCheckResponse_fields                                                +58  [NEW]\n      [NEW]     +40 vtable for grpc_core::HealthCheckClient::CallState                                       +40  [NEW]\n      [NEW]     +40 vtable for grpc_core::HealthCheckClient                                                  +40  [NEW]\n      [NEW]     +40 vtable for grpc_core::InternallyRefCounted<grpc_core::ConnectedSubchannelStateWatche     +40  [NEW]\n      [NEW]     +40 vtable for grpc_core::ConnectedSubchannelStateWatcher                                    +40  [NEW]\n      [NEW]     +40 vtable for grpc_core::InternallyRefCountedWithTracing<grpc_core::HealthCheckClient::     +40  [NEW]\n      [NEW]     +40 vtable for grpc_core::InternallyRefCountedWithTracing<grpc_core::HealthCheckClient>      +40  [NEW]\n      +1.0%     +32 static_metadata_hash                                                                       0  [ = ]\n      +1.0%     +32 grpc_static_slice_table                                                                  +32  +1.0%\n      +2.4%     +28 g_bytes                                                                                  +28  +2.4%\n      [NEW]     +24 grpc_health_check_client_trace                                                             0  [ = ]\n      +1.0%     +16 grpc_static_metadata_refcounts                                                           +16  +1.0%\n       +50%      +8 grpc_core::SubchannelList<grpc_core::(anonymous namespace)::RoundRobin::RoundRobinSu      +8   +50%\n       +50%      +8 grpc_core::SubchannelList<grpc_core::(anonymous namespace)::PickFirst::PickFirstSubc      +8   +50%\n      +2.3%      +6 elem_keys                                                                                 +6  +2.3%\n      +1.0%      +4 static_metadata_hash_values                                                                0  [ = ]\n      +1.0%      +1 elems_r                                                                                   +1  +1.0%\n  [NEW] +7.28Ki src/core/ext/filters/client_channel/health/health_check_client.cc                    +7.28Ki  [NEW]\n      [NEW] +1.52Ki grpc_core::HealthCheckClient::CallState::StartCall                                   +1.52Ki  [NEW]\n      [NEW] +1.02Ki grpc_core::HealthCheckClient::CallState::DoneReadingRecvMessage                      +1.02Ki  [NEW]\n      [NEW]    +770 [Other]                                                                                 +770  [NEW]\n      [NEW]    +421 grpc_core::HealthCheckClient::CallState::RecvTrailingMetadataReady                      +421  [NEW]\n      [NEW]    +409 grpc_core::HealthCheckClient::StartRetryTimer                                           +409  [NEW]\n      [NEW]    +350 grpc_core::HealthCheckClient::StartCallLocked                                           +350  [NEW]\n      [NEW]    +348 grpc_core::HealthCheckClient::HealthCheckClient                                         +348  [NEW]\n      [NEW]    +290 grpc_core::HealthCheckClient::CallState::CallState                                      +290  [NEW]\n      [NEW]    +251 grpc_core::HealthCheckClient::CallState::~CallState                                     +251  [NEW]\n      [NEW]    +247 grpc_core::HealthCheckClient::Orphan                                                    +247  [NEW]\n      [NEW]    +223 grpc_core::HealthCheckClient::~HealthCheckClient                                        +223  [NEW]\n      [NEW]    +219 grpc_core::HealthCheckClient::CallState::CallEnded                                      +219  [NEW]\n      [NEW]    +195 [Unmapped]                                                                              +195  [NEW]\n      [NEW]    +186 grpc_core::HealthCheckClient::SetHealthStatusLocked                                     +186  [NEW]\n      [NEW]    +179 grpc_core::HealthCheckClient::NotifyOnHealthChange                                      +179  [NEW]\n      [NEW]    +172 grpc_core::HealthCheckClient::OnRetryTimer                                              +172  [NEW]\n      [NEW]    +130 grpc_core::HealthCheckClient::CallState::RecvMessageReady                               +130  [NEW]\n      [NEW]    +126 grpc_core::HealthCheckClient::CallState::ContinueReadingRecvMessage                     +126  [NEW]\n      [NEW]    +121 grpc_core::HealthCheckClient::CallState::PullSliceFromRecvMessage                       +121  [NEW]\n      [NEW]    +114 grpc_core::HealthCheckClient::CallState::Cancel                                         +114  [NEW]\n      [NEW]    +108 grpc_core::HealthCheckClient::CallState::StartCancel                                    +108  [NEW]\n   +24% +1.81Ki src/core/ext/filters/client_channel/subchannel.cc                                    +1.81Ki   +24%\n       +65%    +640 on_subchannel_connected                                                                 +640   +65%\n      [NEW]    +583 grpc_core::ConnectedSubchannelStateWatcher::OnConnectivityChanged                       +583  [NEW]\n       +24%    +352 grpc_subchannel_create                                                                  +352   +24%\n      [NEW]    +327 grpc_subchannel_notify_on_state_change                                                  +327  [NEW]\n      [NEW]    +231 grpc_core::ConnectedSubchannelStateWatcher::OnHealthChanged                             +231  [NEW]\n      [NEW]     +86 grpc_subchannel_check_connectivity                                                       +86  [NEW]\n       +22%     +72 grpc_subchannel_unref                                                                    +72   +22%\n      [NEW]     +50 grpc_core::ConnectedSubchannelStateWatcher::~ConnectedSubchannelStateWatcher             +50  [NEW]\n       +14%     +48 subchannel_destroy                                                                       +48   +14%\n      [NEW]     +37 grpc_core::ConnectedSubchannel::GetInitialCallSizeEstimate(unsigned long) const          +37  [NEW]\n      +9.7%     +34 maybe_start_connecting_locked                                                            +34  +9.7%\n      [NEW]     +34 grpc_core::ConnectedSubchannelStateWatcher::Orphan                                       +34  [NEW]\n       +14%     +26 continue_connect_locked                                                                  +26   +14%\n      [NEW]     +14 grpc_core::ConnectedSubchannelStateWatcher::~ConnectedSubchannelStateWatcher             +14  [NEW]\n      [NEW]      +9 grpc_core::InternallyRefCounted<grpc_core::ConnectedSubchannelStateWatcher>::~Intern      +9  [NEW]\n      +2.7%      +8 [Unmapped]                                                                                +8  +2.7%\n      [NEW]      +2 grpc_core::InternallyRefCounted<grpc_core::ConnectedSubchannelStateWatcher>::~Intern      +2  [NEW]\n  +1.2%    +192 src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.cc                          +192  +1.2%\n      [NEW]   +1006 grpc_core::(anonymous namespace)::GrpcLb::CreateRoundRobinPolicyArgsLocked             +1006  [NEW]\n      +0.7%      +3 [Unmapped]                                                                                +3  +0.7%\n  +0.5%     +64 src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc                   +64  +0.5%\n      +1.9%     +64 grpc_core::(anonymous namespace)::PickFirst::UpdateLocked                                +64  +1.9%\n  +0.3%     +48 src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc                 +48  +0.4%\n      [NEW]    +596 grpc_core::(anonymous namespace)::RoundRobin::RoundRobinSubchannelList::StartWatchin    +596  [NEW]\n      +0.9%     +24 grpc_core::(anonymous namespace)::RoundRobin::UpdateLocked                               +24  +0.9%\n      +2.7%     +16 grpc_core::SubchannelList<grpc_core::(anonymous namespace)::RoundRobin::RoundRobinSu     +16  +2.7%\n  +1.1%     +32 src/core/lib/slice/slice_intern.cc                                                       +32  +1.1%\n      +1.2%     +13 grpc_slice_intern                                                                        +13  +1.2%\n      +8.3%     +12 [Unmapped]                                                                               +12  +8.3%\n      +2.2%      +7 grpc_slice_intern_init                                                                    +7  +2.2%\n\n -------------- SHRINKING                                                                            --------------\n  -5.7%     -78 src/core/ext/filters/client_channel/lb_policy.cc                                         -78  -5.7%\n      [DEL]     -78 grpc_core::Orphanable::Orphan                                                            -78  [DEL]\n\n  +1.5% +21.8Ki TOTAL                                                                                 +213Ki  +2.1%\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n   +11% +27.0Ki [None]                                                                                +718Ki   +13%\n       +11% +24.9Ki [Unmapped]                                                                            +716Ki   +13%\n      [NEW]    +655 [Other]                                                                                 +655  [NEW]\n      [NEW]    +175 typeinfo name for std::_Bind<std::_Mem_fn<void (grpc::DefaultHealthCheckService::Hea    +175  [NEW]\n      [NEW]    +175 typeinfo name for std::_Bind<std::_Mem_fn<void (grpc::DefaultHealthCheckService::Hea    +175  [NEW]\n      [NEW]    +157 typeinfo name for std::_Maybe_get_result_type<std::_Mem_fn<void (grpc::DefaultHealth    +157  [NEW]\n      [NEW]    +157 typeinfo name for std::_Maybe_get_result_type<std::_Mem_fn<void (grpc::DefaultHealth    +157  [NEW]\n      [NEW]    +156 typeinfo name for std::_Weak_result_type_impl<std::_Mem_fn<void (grpc::DefaultHealth    +156  [NEW]\n      [NEW]    +156 typeinfo name for std::_Weak_result_type_impl<std::_Mem_fn<void (grpc::DefaultHealth    +156  [NEW]\n      [NEW]    +151 typeinfo name for std::_Weak_result_type<std::_Mem_fn<void (grpc::DefaultHealthCheck    +151  [NEW]\n      [NEW]    +151 typeinfo name for std::_Weak_result_type<std::_Mem_fn<void (grpc::DefaultHealthCheck    +151  [NEW]\n      [NEW]    +142 typeinfo name for std::_Sp_counted_ptr_inplace<grpc::DefaultHealthCheckService::Heal    +142  [NEW]\n      [NEW]    +142 typeinfo name for std::_Sp_counted_ptr_inplace<grpc::DefaultHealthCheckService::Heal    +142  [NEW]\n      [NEW]    +128 vtable for grpc::ServerAsyncWriter<grpc::ByteBuffer>                                    +128  [NEW]\n      [NEW]     +77 typeinfo name for grpc::DefaultHealthCheckService::HealthCheckServiceImpl::CheckCall     +77  [NEW]\n      [NEW]     +77 typeinfo name for grpc::DefaultHealthCheckService::HealthCheckServiceImpl::WatchCall     +77  [NEW]\n      [NEW]     +72 typeinfo name for grpc::DefaultHealthCheckService::HealthCheckServiceImpl::CallHandl     +72  [NEW]\n      [NEW]     +64 typeinfo name for grpc::ServerInterface::PayloadAsyncRequest<grpc::ByteBuffer>           +64  [NEW]\n      [NEW]     +56 typeinfo for grpc::ServerAsyncWriterInterface<grpc::ByteBuffer>                          +56  [NEW]\n      [NEW]     +56 vtable for std::_Sp_counted_ptr_inplace<grpc::DefaultHealthCheckService::HealthCheck     +56  [NEW]\n      [NEW]     +56 vtable for std::_Sp_counted_ptr_inplace<grpc::DefaultHealthCheckService::HealthCheck     +56  [NEW]\n      [NEW]     +54 typeinfo name for grpc::ServerAsyncWriterInterface<grpc::ByteBuffer>                     +54  [NEW]\n  +297% +36.0Ki src/cpp/server/health/default_health_check_service.cc                                +36.0Ki  +297%\n     +21e2% +11.2Ki [Other]                                                                              +11.2Ki +21e2%\n      [NEW] +8.80Ki grpc::DefaultHealthCheckService::HealthCheckServiceImpl::CheckCallHandler::OnCallRec +8.80Ki  [NEW]\n      [NEW] +3.07Ki grpc::DefaultHealthCheckService::HealthCheckServiceImpl::WatchCallHandler::SendHealt +3.07Ki  [NEW]\n      [NEW] +2.92Ki grpc::DefaultHealthCheckService::HealthCheckServiceImpl::WatchCallHandler::SendFinis +2.92Ki  [NEW]\n      [NEW] +2.76Ki grpc::DefaultHealthCheckService::HealthCheckServiceImpl::WatchCallHandler::CreateAnd +2.76Ki  [NEW]\n      [NEW] +2.16Ki grpc::ServerAsyncWriter<grpc::ByteBuffer>::WriteAndFinish                            +2.16Ki  [NEW]\n      [NEW] +1.90Ki grpc::ServerAsyncWriter<grpc::ByteBuffer>::Finish                                    +1.90Ki  [NEW]\n      [NEW] +1.67Ki grpc::DefaultHealthCheckService::HealthCheckServiceImpl::CheckCallHandler::CreateAnd +1.67Ki  [NEW]\n      [NEW] +1.05Ki grpc::ServerAsyncWriter<grpc::ByteBuffer>::Write                                     +1.05Ki  [NEW]\n      [NEW] +1.02Ki grpc::ServerAsyncWriter<grpc::ByteBuffer>::Write                                     +1.02Ki  [NEW]\n      [NEW]    +984 grpc::DefaultHealthCheckService::HealthCheckServiceImpl::WatchCallHandler::OnCallRec    +984  [NEW]\n      [NEW]    +901 grpc::DefaultHealthCheckService::RegisterCallHandler                                    +901  [NEW]\n      [NEW]    +854 grpc::DefaultHealthCheckService::HealthCheckServiceImpl::WatchCallHandler::WatchCall    +854  [NEW]\n      [NEW]    +830 grpc::ServerAsyncWriter<grpc::ByteBuffer>::SendInitialMetadata                          +830  [NEW]\n      [NEW]    +830 grpc::ServerAsyncResponseWriter<grpc::ByteBuffer>::SendInitialMetadata                  +830  [NEW]\n      [NEW]    +826 grpc::DefaultHealthCheckService::HealthCheckServiceImpl::DecodeRequest                  +826  [NEW]\n      [NEW]    +772 grpc::DefaultHealthCheckService::HealthCheckServiceImpl::WatchCallHandler::~WatchCal    +772  [NEW]\n      [NEW]    +764 grpc::DefaultHealthCheckService::HealthCheckServiceImpl::WatchCallHandler::~WatchCal    +764  [NEW]\n      [NEW]    +724 std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocato    +724  [NEW]\n      [NEW]    +702 grpc::DefaultHealthCheckService::UnregisterCallHandler                                  +702  [NEW]\n      [NEW]    +682 grpc::ServerInterface::PayloadAsyncRequest<grpc::ByteBuffer>::FinalizeResult            +682  [NEW]\n  +0.3%    +132 src/cpp/server/server_cc.cc                                                             +132  +0.3%\n       +55% +1.09Ki grpc::Server::Start                                                                  +1.09Ki   +55%\n      [NEW]     +12 [ELF Headers]                                                                            +12  [NEW]\n\n   +17% +63.1Ki TOTAL                                                                                 +754Ki   +14%\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/430001715",
    "html_url": "https://github.com/grpc/grpc/pull/16507#issuecomment-430001715",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16507",
    "id": 430001715,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDAwMTcxNQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-15T20:29:58Z",
    "updated_at": "2018-10-15T20:29:58Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/430012111",
    "html_url": "https://github.com/grpc/grpc/pull/16507#issuecomment-430012111",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16507",
    "id": 430012111,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDAxMjExMQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-15T21:02:41Z",
    "updated_at": "2018-10-15T21:02:41Z",
    "author_association": "NONE",
    "body": "```\nObjective-C binary sizes\n*****************STATIC******************\n  New size                      Old size\n   693,775       Core (>)        679,410\n\n 1,980,075      Total (>)      1,965,206\n\n***************FRAMEWORKS****************\n  New size                      Old size\n 3,775,914       Core (>)      3,703,506\n\n10,981,433      Total (>)     10,909,028\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/430015458",
    "html_url": "https://github.com/grpc/grpc/pull/16507#issuecomment-430015458",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16507",
    "id": 430015458,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDAxNTQ1OA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-15T21:14:25Z",
    "updated_at": "2018-10-15T21:14:25Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] Performance differences noted:\nBenchmark                    cpu_time    real_time\n---------------------------  ----------  -----------\nBM_MetadataRefUnrefExternal  +25%        +25%\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/430369734",
    "html_url": "https://github.com/grpc/grpc/pull/16507#issuecomment-430369734",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16507",
    "id": 430369734,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDM2OTczNA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-16T19:32:24Z",
    "updated_at": "2018-10-16T19:32:24Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n  +1.7% +12.5Ki [None]                                                                                +200Ki  +2.1%\n      +1.8% +11.9Ki [Unmapped]                                                                            +200Ki  +2.2%\n      [NEW]    +108 grpc_core::HealthCheckClient::CallState::RecvTrailingMetadataReady(void*, grpc_error    +108  [NEW]\n      [NEW]     +58 grpc_health_v1_HealthCheckRequest_fields                                                 +58  [NEW]\n      [NEW]     +58 grpc_health_v1_HealthCheckResponse_fields                                                +58  [NEW]\n      [NEW]     +40 vtable for grpc_core::HealthCheckClient::CallState                                       +40  [NEW]\n      [NEW]     +40 vtable for grpc_core::HealthCheckClient                                                  +40  [NEW]\n      [NEW]     +40 vtable for grpc_core::InternallyRefCounted<grpc_core::ConnectedSubchannelStateWatche     +40  [NEW]\n      [NEW]     +40 vtable for grpc_core::ConnectedSubchannelStateWatcher                                    +40  [NEW]\n      [NEW]     +40 vtable for grpc_core::InternallyRefCountedWithTracing<grpc_core::HealthCheckClient::     +40  [NEW]\n      [NEW]     +40 vtable for grpc_core::InternallyRefCountedWithTracing<grpc_core::HealthCheckClient>      +40  [NEW]\n      +3.5%     +36 [None]                                                                                     0  [ = ]\n      +1.0%     +32 static_metadata_hash                                                                       0  [ = ]\n      +1.0%     +32 grpc_static_slice_table                                                                  +32  +1.0%\n      +2.4%     +28 g_bytes                                                                                  +28  +2.4%\n      [NEW]     +24 grpc_health_check_client_trace                                                             0  [ = ]\n      +1.0%     +16 grpc_static_metadata_refcounts                                                           +16  +1.0%\n       +50%      +8 grpc_core::SubchannelList<grpc_core::(anonymous namespace)::RoundRobin::RoundRobinSu      +8   +50%\n       +50%      +8 grpc_core::SubchannelList<grpc_core::(anonymous namespace)::PickFirst::PickFirstSubc      +8   +50%\n      +2.3%      +6 elem_keys                                                                                 +6  +2.3%\n      +1.0%      +4 static_metadata_hash_values                                                                0  [ = ]\n      +1.0%      +1 [Other]                                                                                   +1  +1.0%\n  [NEW] +7.28Ki src/core/ext/filters/client_channel/health/health_check_client.cc                    +7.28Ki  [NEW]\n      [NEW] +1.52Ki grpc_core::HealthCheckClient::CallState::StartCall                                   +1.52Ki  [NEW]\n      [NEW] +1.02Ki grpc_core::HealthCheckClient::CallState::DoneReadingRecvMessage                      +1.02Ki  [NEW]\n      [NEW]    +770 [Other]                                                                                 +770  [NEW]\n      [NEW]    +421 grpc_core::HealthCheckClient::CallState::RecvTrailingMetadataReady                      +421  [NEW]\n      [NEW]    +409 grpc_core::HealthCheckClient::StartRetryTimer                                           +409  [NEW]\n      [NEW]    +350 grpc_core::HealthCheckClient::StartCallLocked                                           +350  [NEW]\n      [NEW]    +348 grpc_core::HealthCheckClient::HealthCheckClient                                         +348  [NEW]\n      [NEW]    +290 grpc_core::HealthCheckClient::CallState::CallState                                      +290  [NEW]\n      [NEW]    +251 grpc_core::HealthCheckClient::CallState::~CallState                                     +251  [NEW]\n      [NEW]    +247 grpc_core::HealthCheckClient::Orphan                                                    +247  [NEW]\n      [NEW]    +223 grpc_core::HealthCheckClient::~HealthCheckClient                                        +223  [NEW]\n      [NEW]    +219 grpc_core::HealthCheckClient::CallState::CallEnded                                      +219  [NEW]\n      [NEW]    +195 [Unmapped]                                                                              +195  [NEW]\n      [NEW]    +186 grpc_core::HealthCheckClient::SetHealthStatusLocked                                     +186  [NEW]\n      [NEW]    +179 grpc_core::HealthCheckClient::NotifyOnHealthChange                                      +179  [NEW]\n      [NEW]    +172 grpc_core::HealthCheckClient::OnRetryTimer                                              +172  [NEW]\n      [NEW]    +130 grpc_core::HealthCheckClient::CallState::RecvMessageReady                               +130  [NEW]\n      [NEW]    +126 grpc_core::HealthCheckClient::CallState::ContinueReadingRecvMessage                     +126  [NEW]\n      [NEW]    +121 grpc_core::HealthCheckClient::CallState::PullSliceFromRecvMessage                       +121  [NEW]\n      [NEW]    +114 grpc_core::HealthCheckClient::CallState::Cancel                                         +114  [NEW]\n      [NEW]    +108 grpc_core::HealthCheckClient::CallState::StartCancel                                    +108  [NEW]\n   +23% +1.78Ki src/core/ext/filters/client_channel/subchannel.cc                                    +1.78Ki   +23%\n       +65%    +640 on_subchannel_connected                                                                 +640   +65%\n      [NEW]    +575 grpc_core::ConnectedSubchannelStateWatcher::OnConnectivityChanged                       +575  [NEW]\n       +24%    +352 grpc_subchannel_create                                                                  +352   +24%\n      [NEW]    +327 grpc_subchannel_notify_on_state_change                                                  +327  [NEW]\n      [NEW]    +231 grpc_core::ConnectedSubchannelStateWatcher::OnHealthChanged                             +231  [NEW]\n      [NEW]     +86 grpc_subchannel_check_connectivity                                                       +86  [NEW]\n       +22%     +72 grpc_subchannel_unref                                                                    +72   +22%\n      [NEW]     +50 grpc_core::ConnectedSubchannelStateWatcher::~ConnectedSubchannelStateWatcher             +50  [NEW]\n       +14%     +48 subchannel_destroy                                                                       +48   +14%\n      [NEW]     +37 grpc_core::ConnectedSubchannel::GetInitialCallSizeEstimate(unsigned long) const          +37  [NEW]\n      +9.7%     +34 maybe_start_connecting_locked                                                            +34  +9.7%\n      [NEW]     +34 grpc_core::ConnectedSubchannelStateWatcher::Orphan                                       +34  [NEW]\n       +15%     +26 continue_connect_locked                                                                  +26   +15%\n      [NEW]     +14 grpc_core::ConnectedSubchannelStateWatcher::~ConnectedSubchannelStateWatcher             +14  [NEW]\n      [NEW]      +9 grpc_core::InternallyRefCounted<grpc_core::ConnectedSubchannelStateWatcher>::~Intern      +9  [NEW]\n      [NEW]      +2 grpc_core::InternallyRefCounted<grpc_core::ConnectedSubchannelStateWatcher>::~Intern      +2  [NEW]\n  +1.2%    +192 src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.cc                          +192  +1.2%\n      [NEW]   +1006 grpc_core::(anonymous namespace)::GrpcLb::CreateRoundRobinPolicyArgsLocked             +1006  [NEW]\n      +0.7%      +3 [Unmapped]                                                                                +3  +0.7%\n  +0.5%     +64 src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc                   +64  +0.5%\n      +1.9%     +64 grpc_core::(anonymous namespace)::PickFirst::UpdateLocked                                +64  +1.9%\n  +0.3%     +48 src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc                 +48  +0.4%\n      [NEW]    +596 grpc_core::(anonymous namespace)::RoundRobin::RoundRobinSubchannelList::StartWatchin    +596  [NEW]\n      +0.9%     +24 grpc_core::(anonymous namespace)::RoundRobin::UpdateLocked                               +24  +0.9%\n      +2.7%     +16 grpc_core::SubchannelList<grpc_core::(anonymous namespace)::RoundRobin::RoundRobinSu     +16  +2.7%\n  +1.1%     +32 src/core/lib/slice/slice_intern.cc                                                       +32  +1.1%\n      +1.2%     +13 grpc_slice_intern                                                                        +13  +1.2%\n      +8.3%     +12 [Unmapped]                                                                               +12  +8.3%\n      +2.2%      +7 grpc_slice_intern_init                                                                    +7  +2.2%\n\n -------------- SHRINKING                                                                            --------------\n  -5.7%     -78 src/core/ext/filters/client_channel/lb_policy.cc                                         -78  -5.7%\n      [DEL]     -78 grpc_core::Orphanable::Orphan                                                            -78  [DEL]\n\n  +1.5% +21.9Ki TOTAL                                                                                 +209Ki  +2.1%\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n   +11% +27.0Ki [None]                                                                                +718Ki   +13%\n       +11% +24.9Ki [Unmapped]                                                                            +716Ki   +13%\n      [NEW]    +655 [Other]                                                                                 +655  [NEW]\n      [NEW]    +175 typeinfo name for std::_Bind<std::_Mem_fn<void (grpc::DefaultHealthCheckService::Hea    +175  [NEW]\n      [NEW]    +175 typeinfo name for std::_Bind<std::_Mem_fn<void (grpc::DefaultHealthCheckService::Hea    +175  [NEW]\n      [NEW]    +157 typeinfo name for std::_Maybe_get_result_type<std::_Mem_fn<void (grpc::DefaultHealth    +157  [NEW]\n      [NEW]    +157 typeinfo name for std::_Maybe_get_result_type<std::_Mem_fn<void (grpc::DefaultHealth    +157  [NEW]\n      [NEW]    +156 typeinfo name for std::_Weak_result_type_impl<std::_Mem_fn<void (grpc::DefaultHealth    +156  [NEW]\n      [NEW]    +156 typeinfo name for std::_Weak_result_type_impl<std::_Mem_fn<void (grpc::DefaultHealth    +156  [NEW]\n      [NEW]    +151 typeinfo name for std::_Weak_result_type<std::_Mem_fn<void (grpc::DefaultHealthCheck    +151  [NEW]\n      [NEW]    +151 typeinfo name for std::_Weak_result_type<std::_Mem_fn<void (grpc::DefaultHealthCheck    +151  [NEW]\n      [NEW]    +142 typeinfo name for std::_Sp_counted_ptr_inplace<grpc::DefaultHealthCheckService::Heal    +142  [NEW]\n      [NEW]    +142 typeinfo name for std::_Sp_counted_ptr_inplace<grpc::DefaultHealthCheckService::Heal    +142  [NEW]\n      [NEW]    +128 vtable for grpc::ServerAsyncWriter<grpc::ByteBuffer>                                    +128  [NEW]\n      [NEW]     +77 typeinfo name for grpc::DefaultHealthCheckService::HealthCheckServiceImpl::CheckCall     +77  [NEW]\n      [NEW]     +77 typeinfo name for grpc::DefaultHealthCheckService::HealthCheckServiceImpl::WatchCall     +77  [NEW]\n      [NEW]     +72 typeinfo name for grpc::DefaultHealthCheckService::HealthCheckServiceImpl::CallHandl     +72  [NEW]\n      [NEW]     +64 typeinfo name for grpc::ServerInterface::PayloadAsyncRequest<grpc::ByteBuffer>           +64  [NEW]\n      [NEW]     +56 typeinfo for grpc::ServerAsyncWriterInterface<grpc::ByteBuffer>                          +56  [NEW]\n      [NEW]     +56 vtable for std::_Sp_counted_ptr_inplace<grpc::DefaultHealthCheckService::HealthCheck     +56  [NEW]\n      [NEW]     +56 vtable for std::_Sp_counted_ptr_inplace<grpc::DefaultHealthCheckService::HealthCheck     +56  [NEW]\n      [NEW]     +54 typeinfo name for grpc::ServerAsyncWriterInterface<grpc::ByteBuffer>                     +54  [NEW]\n  +297% +36.0Ki src/cpp/server/health/default_health_check_service.cc                                +36.0Ki  +297%\n     +21e2% +11.2Ki [Other]                                                                              +11.2Ki +21e2%\n      [NEW] +8.80Ki grpc::DefaultHealthCheckService::HealthCheckServiceImpl::CheckCallHandler::OnCallRec +8.80Ki  [NEW]\n      [NEW] +3.07Ki grpc::DefaultHealthCheckService::HealthCheckServiceImpl::WatchCallHandler::SendHealt +3.07Ki  [NEW]\n      [NEW] +2.92Ki grpc::DefaultHealthCheckService::HealthCheckServiceImpl::WatchCallHandler::SendFinis +2.92Ki  [NEW]\n      [NEW] +2.76Ki grpc::DefaultHealthCheckService::HealthCheckServiceImpl::WatchCallHandler::CreateAnd +2.76Ki  [NEW]\n      [NEW] +2.16Ki grpc::ServerAsyncWriter<grpc::ByteBuffer>::WriteAndFinish                            +2.16Ki  [NEW]\n      [NEW] +1.90Ki grpc::ServerAsyncWriter<grpc::ByteBuffer>::Finish                                    +1.90Ki  [NEW]\n      [NEW] +1.67Ki grpc::DefaultHealthCheckService::HealthCheckServiceImpl::CheckCallHandler::CreateAnd +1.67Ki  [NEW]\n      [NEW] +1.05Ki grpc::ServerAsyncWriter<grpc::ByteBuffer>::Write                                     +1.05Ki  [NEW]\n      [NEW] +1.02Ki grpc::ServerAsyncWriter<grpc::ByteBuffer>::Write                                     +1.02Ki  [NEW]\n      [NEW]    +984 grpc::DefaultHealthCheckService::HealthCheckServiceImpl::WatchCallHandler::OnCallRec    +984  [NEW]\n      [NEW]    +901 grpc::DefaultHealthCheckService::RegisterCallHandler                                    +901  [NEW]\n      [NEW]    +854 grpc::DefaultHealthCheckService::HealthCheckServiceImpl::WatchCallHandler::WatchCall    +854  [NEW]\n      [NEW]    +830 grpc::ServerAsyncWriter<grpc::ByteBuffer>::SendInitialMetadata                          +830  [NEW]\n      [NEW]    +830 grpc::ServerAsyncResponseWriter<grpc::ByteBuffer>::SendInitialMetadata                  +830  [NEW]\n      [NEW]    +826 grpc::DefaultHealthCheckService::HealthCheckServiceImpl::DecodeRequest                  +826  [NEW]\n      [NEW]    +772 grpc::DefaultHealthCheckService::HealthCheckServiceImpl::WatchCallHandler::~WatchCal    +772  [NEW]\n      [NEW]    +764 grpc::DefaultHealthCheckService::HealthCheckServiceImpl::WatchCallHandler::~WatchCal    +764  [NEW]\n      [NEW]    +724 std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocato    +724  [NEW]\n      [NEW]    +702 grpc::DefaultHealthCheckService::UnregisterCallHandler                                  +702  [NEW]\n      [NEW]    +682 grpc::ServerInterface::PayloadAsyncRequest<grpc::ByteBuffer>::FinalizeResult            +682  [NEW]\n  +0.3%    +132 src/cpp/server/server_cc.cc                                                             +132  +0.3%\n       +55% +1.09Ki grpc::Server::Start                                                                  +1.09Ki   +55%\n      [NEW]     +12 [ELF Headers]                                                                            +12  [NEW]\n\n   +17% +63.1Ki TOTAL                                                                                 +754Ki   +14%\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/430370166",
    "html_url": "https://github.com/grpc/grpc/pull/16507#issuecomment-430370166",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16507",
    "id": 430370166,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDM3MDE2Ng==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-16T19:33:57Z",
    "updated_at": "2018-10-16T19:33:57Z",
    "author_association": "MEMBER",
    "body": "I'm still working on addressing some test failures, both here and in the dependent PR, but this is in good enough shape to be ready for review now.  Please let me know if you have any questions."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/430373960",
    "html_url": "https://github.com/grpc/grpc/pull/16507#issuecomment-430373960",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16507",
    "id": 430373960,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDM3Mzk2MA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-16T19:44:46Z",
    "updated_at": "2018-10-16T19:44:46Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/430383463",
    "html_url": "https://github.com/grpc/grpc/pull/16507#issuecomment-430383463",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16507",
    "id": 430383463,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDM4MzQ2Mw==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-16T20:12:11Z",
    "updated_at": "2018-10-16T20:12:11Z",
    "author_association": "NONE",
    "body": "```\nObjective-C binary sizes\n*****************STATIC******************\n  New size                      Old size\n   694,636       Core (>)        680,263\n\n 1,980,940      Total (>)      1,966,063\n\n***************FRAMEWORKS****************\n  New size                      Old size\n 3,776,618       Core (>)      3,704,194\n\n10,982,136      Total (>)     10,909,712\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/430387269",
    "html_url": "https://github.com/grpc/grpc/pull/16507#issuecomment-430387269",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16507",
    "id": 430387269,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDM4NzI2OQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-16T20:24:18Z",
    "updated_at": "2018-10-16T20:24:18Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] Performance differences noted:\nBenchmark                  cpu_time    real_time\n-------------------------  ----------  -----------\nBM_MetadataRefUnrefStatic  -5%         -5%\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/430694927",
    "html_url": "https://github.com/grpc/grpc/pull/16507#issuecomment-430694927",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16507",
    "id": 430694927,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDY5NDkyNw==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-17T16:21:52Z",
    "updated_at": "2018-10-17T16:21:52Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n  +1.7% +12.4Ki [None]                                                                                +210Ki  +2.3%\n      +1.8% +11.8Ki [Unmapped]                                                                            +210Ki  +2.3%\n      [NEW]    +108 grpc_core::HealthCheckClient::CallState::RecvTrailingMetadataReady(void*, grpc_error    +108  [NEW]\n      [NEW]     +58 grpc_health_v1_HealthCheckRequest_fields                                                 +58  [NEW]\n      [NEW]     +58 grpc_health_v1_HealthCheckResponse_fields                                                +58  [NEW]\n      [NEW]     +40 vtable for grpc_core::HealthCheckClient::CallState                                       +40  [NEW]\n      [NEW]     +40 vtable for grpc_core::HealthCheckClient                                                  +40  [NEW]\n      [NEW]     +40 vtable for grpc_core::InternallyRefCounted<grpc_core::ConnectedSubchannelStateWatche     +40  [NEW]\n      [NEW]     +40 vtable for grpc_core::ConnectedSubchannelStateWatcher                                    +40  [NEW]\n      [NEW]     +40 vtable for grpc_core::InternallyRefCountedWithTracing<grpc_core::HealthCheckClient::     +40  [NEW]\n      [NEW]     +40 vtable for grpc_core::InternallyRefCountedWithTracing<grpc_core::HealthCheckClient>      +40  [NEW]\n      +3.5%     +36 [None]                                                                                     0  [ = ]\n      +1.0%     +32 static_metadata_hash                                                                       0  [ = ]\n      +1.0%     +32 grpc_static_slice_table                                                                  +32  +1.0%\n      +2.4%     +28 g_bytes                                                                                  +28  +2.4%\n      [NEW]     +24 grpc_health_check_client_trace                                                             0  [ = ]\n      +1.0%     +16 grpc_static_metadata_refcounts                                                           +16  +1.0%\n       +50%      +8 grpc_core::SubchannelList<grpc_core::(anonymous namespace)::RoundRobin::RoundRobinSu      +8   +50%\n       +50%      +8 grpc_core::SubchannelList<grpc_core::(anonymous namespace)::PickFirst::PickFirstSubc      +8   +50%\n      +2.3%      +6 elem_keys                                                                                 +6  +2.3%\n      +1.0%      +4 static_metadata_hash_values                                                                0  [ = ]\n      +1.0%      +1 [Other]                                                                                   +1  +1.0%\n  [NEW] +7.38Ki src/core/ext/filters/client_channel/health/health_check_client.cc                    +7.38Ki  [NEW]\n      [NEW] +1.46Ki grpc_core::HealthCheckClient::CallState::StartCall                                   +1.46Ki  [NEW]\n      [NEW] +1.19Ki grpc_core::HealthCheckClient::CallState::DoneReadingRecvMessage                      +1.19Ki  [NEW]\n      [NEW]    +746 [Other]                                                                                 +746  [NEW]\n      [NEW]    +417 grpc_core::HealthCheckClient::CallState::RecvTrailingMetadataReady                      +417  [NEW]\n      [NEW]    +409 grpc_core::HealthCheckClient::StartRetryTimer                                           +409  [NEW]\n      [NEW]    +358 grpc_core::HealthCheckClient::StartCallLocked                                           +358  [NEW]\n      [NEW]    +344 grpc_core::HealthCheckClient::HealthCheckClient                                         +344  [NEW]\n      [NEW]    +268 grpc_core::HealthCheckClient::Orphan                                                    +268  [NEW]\n      [NEW]    +252 grpc_core::HealthCheckClient::CallState::CallState                                      +252  [NEW]\n      [NEW]    +251 grpc_core::HealthCheckClient::CallState::~CallState                                     +251  [NEW]\n      [NEW]    +230 grpc_core::HealthCheckClient::~HealthCheckClient                                        +230  [NEW]\n      [NEW]    +219 grpc_core::HealthCheckClient::CallState::CallEnded                                      +219  [NEW]\n      [NEW]    +212 [Unmapped]                                                                              +212  [NEW]\n      [NEW]    +186 grpc_core::HealthCheckClient::SetHealthStatusLocked                                     +186  [NEW]\n      [NEW]    +178 grpc_core::HealthCheckClient::NotifyOnHealthChange                                      +178  [NEW]\n      [NEW]    +172 grpc_core::HealthCheckClient::OnRetryTimer                                              +172  [NEW]\n      [NEW]    +130 grpc_core::HealthCheckClient::CallState::RecvMessageReady                               +130  [NEW]\n      [NEW]    +126 grpc_core::HealthCheckClient::CallState::ContinueReadingRecvMessage                     +126  [NEW]\n      [NEW]    +121 grpc_core::HealthCheckClient::CallState::PullSliceFromRecvMessage                       +121  [NEW]\n      [NEW]    +114 grpc_core::HealthCheckClient::CallState::Cancel                                         +114  [NEW]\n      [NEW]    +108 grpc_core::HealthCheckClient::CallState::StartCancel                                    +108  [NEW]\n   +25% +1.92Ki src/core/ext/filters/client_channel/subchannel.cc                                    +1.92Ki   +25%\n       +68%    +656 on_subchannel_connected                                                                 +656   +68%\n      [NEW]    +570 grpc_core::ConnectedSubchannelStateWatcher::OnConnectivityChanged                       +570  [NEW]\n       +25%    +368 grpc_subchannel_create                                                                  +368   +25%\n      [NEW]    +335 grpc_subchannel_notify_on_state_change                                                  +335  [NEW]\n      [NEW]    +263 grpc_core::ConnectedSubchannelStateWatcher::OnHealthChanged                             +263  [NEW]\n      [NEW]     +86 grpc_subchannel_check_connectivity                                                       +86  [NEW]\n       +19%     +64 grpc_subchannel_unref                                                                    +64   +19%\n      [NEW]     +50 grpc_core::ConnectedSubchannelStateWatcher::~ConnectedSubchannelStateWatcher             +50  [NEW]\n       +12%     +43 subchannel_destroy                                                                       +43   +12%\n       +12%     +42 maybe_start_connecting_locked                                                            +42   +12%\n      [NEW]     +37 grpc_core::ConnectedSubchannel::GetInitialCallSizeEstimate(unsigned long) const          +37  [NEW]\n      [NEW]     +34 grpc_core::ConnectedSubchannelStateWatcher::Orphan                                       +34  [NEW]\n       +15%     +26 continue_connect_locked                                                                  +26   +15%\n      [NEW]     +14 grpc_core::ConnectedSubchannelStateWatcher::~ConnectedSubchannelStateWatcher             +14  [NEW]\n      +4.6%     +13 [Unmapped]                                                                               +13  +4.6%\n      [NEW]      +9 grpc_core::InternallyRefCounted<grpc_core::ConnectedSubchannelStateWatcher>::~Intern      +9  [NEW]\n      [NEW]      +2 grpc_core::InternallyRefCounted<grpc_core::ConnectedSubchannelStateWatcher>::~Intern      +2  [NEW]\n  +0.8%    +128 src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.cc                          +128  +0.8%\n      +6.9%    +128 grpc_core::(anonymous namespace)::GrpcLb::CreateOrUpdateRoundRobinPolicyLocked() [cl    +128  +6.9%\n  +0.6%     +80 src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc                   +80  +0.6%\n      +2.5%     +80 grpc_core::(anonymous namespace)::PickFirst::UpdateLocked                                +80  +2.5%\n  +0.2%     +32 src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc                 +32  +0.2%\n      [NEW]    +592 grpc_core::(anonymous namespace)::RoundRobin::RoundRobinSubchannelList::StartWatchin    +592  [NEW]\n      +0.6%     +16 grpc_core::(anonymous namespace)::RoundRobin::UpdateLocked                               +16  +0.6%\n  +1.2%     +32 src/core/lib/slice/slice_intern.cc                                                       +32  +1.2%\n      +1.5%     +16 grpc_slice_intern                                                                        +16  +1.5%\n      +2.7%      +8 grpc_slice_maybe_static_intern                                                            +8  +2.7%\n      +2.1%      +7 grpc_slice_intern_init                                                                    +7  +2.1%\n      +0.8%      +1 [Unmapped]                                                                                +1  +0.8%\n\n -------------- SHRINKING                                                                            --------------\n  -5.7%     -78 src/core/ext/filters/client_channel/lb_policy.cc                                         -78  -5.7%\n      [DEL]     -78 grpc_core::Orphanable::Orphan                                                            -78  [DEL]\n\n  +1.5% +21.9Ki TOTAL                                                                                 +220Ki  +2.2%\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n   +12% +28.0Ki [None]                                                                                +705Ki   +13%\n       +11% +24.0Ki [Unmapped]                                                                            +701Ki   +13%\n      [NEW]   +1002 non-virtual thunk to grpc::ServerAsyncWriter<grpc::ByteBuffer>::Write                  +1002  [NEW]\n      [NEW]    +970 non-virtual thunk to grpc::ServerAsyncWriter<grpc::ByteBuffer>::Write                   +970  [NEW]\n      [NEW]    +733 [Other]                                                                                 +733  [NEW]\n      [NEW]    +209 non-virtual thunk to grpc::ServerAsyncWriter<grpc::ByteBuffer>::~ServerAsyncWriter      +209  [NEW]\n      [NEW]    +194 non-virtual thunk to grpc::ServerAsyncWriter<grpc::ByteBuffer>::~ServerAsyncWriter      +194  [NEW]\n      [NEW]    +163 typeinfo name for std::_Bind<void (grpc::DefaultHealthCheckService::HealthCheckServi    +163  [NEW]\n      [NEW]    +163 typeinfo name for std::_Bind<void (grpc::DefaultHealthCheckService::HealthCheckServi    +163  [NEW]\n      [NEW]    +144 typeinfo name for std::_Weak_result_type_impl<void (grpc::DefaultHealthCheckService:    +144  [NEW]\n      [NEW]    +144 typeinfo name for std::_Weak_result_type_impl<void (grpc::DefaultHealthCheckService:    +144  [NEW]\n      [NEW]    +142 typeinfo name for std::_Sp_counted_ptr_inplace<grpc::DefaultHealthCheckService::Heal    +142  [NEW]\n      [NEW]    +142 typeinfo name for std::_Sp_counted_ptr_inplace<grpc::DefaultHealthCheckService::Heal    +142  [NEW]\n      [NEW]    +139 typeinfo name for std::_Weak_result_type<void (grpc::DefaultHealthCheckService::Heal    +139  [NEW]\n      [NEW]    +139 typeinfo name for std::_Weak_result_type<void (grpc::DefaultHealthCheckService::Heal    +139  [NEW]\n      [NEW]    +128 vtable for grpc::ServerAsyncWriter<grpc::ByteBuffer>                                    +128  [NEW]\n      [NEW]     +77 typeinfo name for grpc::DefaultHealthCheckService::HealthCheckServiceImpl::CheckCall     +77  [NEW]\n      [NEW]     +77 typeinfo name for grpc::DefaultHealthCheckService::HealthCheckServiceImpl::WatchCall     +77  [NEW]\n      [NEW]     +72 typeinfo name for grpc::DefaultHealthCheckService::HealthCheckServiceImpl::CallHandl     +72  [NEW]\n      [NEW]     +64 typeinfo name for grpc::ServerInterface::PayloadAsyncRequest<grpc::ByteBuffer>           +64  [NEW]\n      [NEW]     +56 typeinfo for grpc::ServerAsyncWriterInterface<grpc::ByteBuffer>                          +56  [NEW]\n      [NEW]     +56 vtable for std::_Sp_counted_ptr_inplace<grpc::DefaultHealthCheckService::HealthCheck     +56  [NEW]\n  +292% +34.4Ki src/cpp/server/health/default_health_check_service.cc                                +34.4Ki  +292%\n     +17e2% +11.1Ki [Other]                                                                              +11.1Ki +17e2%\n      [NEW] +8.01Ki grpc::DefaultHealthCheckService::HealthCheckServiceImpl::CheckCallHandler::OnCallRec +8.01Ki  [NEW]\n      [NEW] +2.94Ki grpc::DefaultHealthCheckService::HealthCheckServiceImpl::WatchCallHandler::SendHealt +2.94Ki  [NEW]\n      [NEW] +2.70Ki grpc::DefaultHealthCheckService::HealthCheckServiceImpl::WatchCallHandler::SendFinis +2.70Ki  [NEW]\n      [NEW] +2.67Ki grpc::DefaultHealthCheckService::HealthCheckServiceImpl::WatchCallHandler::CreateAnd +2.67Ki  [NEW]\n      [NEW] +1.97Ki grpc::ServerAsyncWriter<grpc::ByteBuffer>::WriteAndFinish                            +1.97Ki  [NEW]\n      [NEW] +1.72Ki grpc::ServerAsyncWriter<grpc::ByteBuffer>::Finish                                    +1.72Ki  [NEW]\n      [NEW] +1.66Ki grpc::DefaultHealthCheckService::HealthCheckServiceImpl::CheckCallHandler::CreateAnd +1.66Ki  [NEW]\n      [NEW]   +1018 grpc::ServerAsyncWriter<grpc::ByteBuffer>::Write                                       +1018  [NEW]\n      [NEW]    +986 grpc::ServerAsyncWriter<grpc::ByteBuffer>::Write                                        +986  [NEW]\n      [NEW]    +986 grpc::DefaultHealthCheckService::HealthCheckServiceImpl::WatchCallHandler::OnCallRec    +986  [NEW]\n      [NEW]    +920 grpc::DefaultHealthCheckService::RegisterCallHandler                                    +920  [NEW]\n      [NEW]    +828 grpc::DefaultHealthCheckService::HealthCheckServiceImpl::WatchCallHandler::WatchCall    +828  [NEW]\n      [NEW]    +827 grpc::DefaultHealthCheckService::HealthCheckServiceImpl::DecodeRequest                  +827  [NEW]\n      [NEW]    +772 grpc::DefaultHealthCheckService::HealthCheckServiceImpl::WatchCallHandler::~WatchCal    +772  [NEW]\n      [NEW]    +766 grpc::ServerAsyncWriter<grpc::ByteBuffer>::SendInitialMetadata                          +766  [NEW]\n      [NEW]    +766 grpc::ServerAsyncResponseWriter<grpc::ByteBuffer>::SendInitialMetadata                  +766  [NEW]\n      [NEW]    +764 grpc::DefaultHealthCheckService::HealthCheckServiceImpl::WatchCallHandler::~WatchCal    +764  [NEW]\n      [NEW]    +742 grpc::DefaultHealthCheckService::UnregisterCallHandler                                  +742  [NEW]\n      [NEW]    +690 std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocato    +690  [NEW]\n      [NEW]    +679 grpc::ServerInterface::PayloadAsyncRequest<grpc::ByteBuffer>::FinalizeResult            +679  [NEW]\n  +0.2%     +75 src/cpp/server/server_cc.cc                                                              +75  +0.2%\n       +51% +1.01Ki grpc::Server::Start                                                                  +1.01Ki   +51%\n      +1.8%      +7 [Unmapped]                                                                                +7  +1.8%\n\n   +17% +62.5Ki TOTAL                                                                                 +739Ki   +13%\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/430697453",
    "html_url": "https://github.com/grpc/grpc/pull/16507#issuecomment-430697453",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16507",
    "id": 430697453,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDY5NzQ1Mw==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-17T16:29:24Z",
    "updated_at": "2018-10-17T16:29:24Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/430705650",
    "html_url": "https://github.com/grpc/grpc/pull/16507#issuecomment-430705650",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16507",
    "id": 430705650,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDcwNTY1MA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-17T16:53:14Z",
    "updated_at": "2018-10-17T16:53:14Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n  +1.7% +12.4Ki [None]                                                                                +210Ki  +2.3%\n      +1.8% +11.8Ki [Unmapped]                                                                            +209Ki  +2.3%\n      [NEW]    +108 grpc_core::HealthCheckClient::CallState::RecvTrailingMetadataReady(void*, grpc_error    +108  [NEW]\n      [NEW]     +58 grpc_health_v1_HealthCheckRequest_fields                                                 +58  [NEW]\n      [NEW]     +58 grpc_health_v1_HealthCheckResponse_fields                                                +58  [NEW]\n      [NEW]     +40 vtable for grpc_core::HealthCheckClient::CallState                                       +40  [NEW]\n      [NEW]     +40 vtable for grpc_core::HealthCheckClient                                                  +40  [NEW]\n      [NEW]     +40 vtable for grpc_core::InternallyRefCounted<grpc_core::ConnectedSubchannelStateWatche     +40  [NEW]\n      [NEW]     +40 vtable for grpc_core::ConnectedSubchannelStateWatcher                                    +40  [NEW]\n      [NEW]     +40 vtable for grpc_core::InternallyRefCountedWithTracing<grpc_core::HealthCheckClient::     +40  [NEW]\n      [NEW]     +40 vtable for grpc_core::InternallyRefCountedWithTracing<grpc_core::HealthCheckClient>      +40  [NEW]\n      +3.5%     +36 [None]                                                                                     0  [ = ]\n      +1.0%     +32 static_metadata_hash                                                                       0  [ = ]\n      +1.0%     +32 grpc_static_slice_table                                                                  +32  +1.0%\n      +2.4%     +28 g_bytes                                                                                  +28  +2.4%\n      [NEW]     +24 grpc_health_check_client_trace                                                             0  [ = ]\n      +1.0%     +16 grpc_static_metadata_refcounts                                                           +16  +1.0%\n       +50%      +8 grpc_core::SubchannelList<grpc_core::(anonymous namespace)::RoundRobin::RoundRobinSu      +8   +50%\n       +50%      +8 grpc_core::SubchannelList<grpc_core::(anonymous namespace)::PickFirst::PickFirstSubc      +8   +50%\n      +2.3%      +6 elem_keys                                                                                 +6  +2.3%\n      +1.0%      +4 static_metadata_hash_values                                                                0  [ = ]\n      +1.0%      +1 [Other]                                                                                   +1  +1.0%\n  [NEW] +7.38Ki src/core/ext/filters/client_channel/health_check_client.cc                           +7.38Ki  [NEW]\n      [NEW] +1.46Ki grpc_core::HealthCheckClient::CallState::StartCall                                   +1.46Ki  [NEW]\n      [NEW] +1.19Ki grpc_core::HealthCheckClient::CallState::DoneReadingRecvMessage                      +1.19Ki  [NEW]\n      [NEW]    +746 [Other]                                                                                 +746  [NEW]\n      [NEW]    +417 grpc_core::HealthCheckClient::CallState::RecvTrailingMetadataReady                      +417  [NEW]\n      [NEW]    +409 grpc_core::HealthCheckClient::StartRetryTimer                                           +409  [NEW]\n      [NEW]    +358 grpc_core::HealthCheckClient::StartCallLocked                                           +358  [NEW]\n      [NEW]    +344 grpc_core::HealthCheckClient::HealthCheckClient                                         +344  [NEW]\n      [NEW]    +268 grpc_core::HealthCheckClient::Orphan                                                    +268  [NEW]\n      [NEW]    +252 grpc_core::HealthCheckClient::CallState::CallState                                      +252  [NEW]\n      [NEW]    +251 grpc_core::HealthCheckClient::CallState::~CallState                                     +251  [NEW]\n      [NEW]    +230 grpc_core::HealthCheckClient::~HealthCheckClient                                        +230  [NEW]\n      [NEW]    +219 grpc_core::HealthCheckClient::CallState::CallEnded                                      +219  [NEW]\n      [NEW]    +212 [Unmapped]                                                                              +212  [NEW]\n      [NEW]    +186 grpc_core::HealthCheckClient::SetHealthStatusLocked                                     +186  [NEW]\n      [NEW]    +178 grpc_core::HealthCheckClient::NotifyOnHealthChange                                      +178  [NEW]\n      [NEW]    +172 grpc_core::HealthCheckClient::OnRetryTimer                                              +172  [NEW]\n      [NEW]    +130 grpc_core::HealthCheckClient::CallState::RecvMessageReady                               +130  [NEW]\n      [NEW]    +126 grpc_core::HealthCheckClient::CallState::ContinueReadingRecvMessage                     +126  [NEW]\n      [NEW]    +121 grpc_core::HealthCheckClient::CallState::PullSliceFromRecvMessage                       +121  [NEW]\n      [NEW]    +114 grpc_core::HealthCheckClient::CallState::Cancel                                         +114  [NEW]\n      [NEW]    +108 grpc_core::HealthCheckClient::CallState::StartCancel                                    +108  [NEW]\n   +25% +1.92Ki src/core/ext/filters/client_channel/subchannel.cc                                    +1.92Ki   +25%\n       +68%    +656 on_subchannel_connected                                                                 +656   +68%\n      [NEW]    +570 grpc_core::ConnectedSubchannelStateWatcher::OnConnectivityChanged                       +570  [NEW]\n       +25%    +368 grpc_subchannel_create                                                                  +368   +25%\n      [NEW]    +335 grpc_subchannel_notify_on_state_change                                                  +335  [NEW]\n      [NEW]    +263 grpc_core::ConnectedSubchannelStateWatcher::OnHealthChanged                             +263  [NEW]\n      [NEW]     +86 grpc_subchannel_check_connectivity                                                       +86  [NEW]\n       +19%     +64 grpc_subchannel_unref                                                                    +64   +19%\n      [NEW]     +50 grpc_core::ConnectedSubchannelStateWatcher::~ConnectedSubchannelStateWatcher             +50  [NEW]\n       +12%     +43 subchannel_destroy                                                                       +43   +12%\n       +12%     +42 maybe_start_connecting_locked                                                            +42   +12%\n      [NEW]     +37 grpc_core::ConnectedSubchannel::GetInitialCallSizeEstimate(unsigned long) const          +37  [NEW]\n      [NEW]     +34 grpc_core::ConnectedSubchannelStateWatcher::Orphan                                       +34  [NEW]\n       +15%     +26 continue_connect_locked                                                                  +26   +15%\n      [NEW]     +14 grpc_core::ConnectedSubchannelStateWatcher::~ConnectedSubchannelStateWatcher             +14  [NEW]\n      +4.6%     +13 [Unmapped]                                                                               +13  +4.6%\n      [NEW]      +9 grpc_core::InternallyRefCounted<grpc_core::ConnectedSubchannelStateWatcher>::~Intern      +9  [NEW]\n      [NEW]      +2 grpc_core::InternallyRefCounted<grpc_core::ConnectedSubchannelStateWatcher>::~Intern      +2  [NEW]\n  +0.8%    +128 src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.cc                          +128  +0.8%\n      +6.9%    +128 grpc_core::(anonymous namespace)::GrpcLb::CreateOrUpdateRoundRobinPolicyLocked() [cl    +128  +6.9%\n  +0.6%     +80 src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc                   +80  +0.6%\n      +2.5%     +80 grpc_core::(anonymous namespace)::PickFirst::UpdateLocked                                +80  +2.5%\n  +0.2%     +32 src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc                 +32  +0.2%\n      [NEW]    +592 grpc_core::(anonymous namespace)::RoundRobin::RoundRobinSubchannelList::StartWatchin    +592  [NEW]\n      +0.6%     +16 grpc_core::(anonymous namespace)::RoundRobin::UpdateLocked                               +16  +0.6%\n  +1.2%     +32 src/core/lib/slice/slice_intern.cc                                                       +32  +1.2%\n      +1.5%     +16 grpc_slice_intern                                                                        +16  +1.5%\n      +2.7%      +8 grpc_slice_maybe_static_intern                                                            +8  +2.7%\n      +2.1%      +7 grpc_slice_intern_init                                                                    +7  +2.1%\n      +0.8%      +1 [Unmapped]                                                                                +1  +0.8%\n\n -------------- SHRINKING                                                                            --------------\n  -5.7%     -78 src/core/ext/filters/client_channel/lb_policy.cc                                         -78  -5.7%\n      [DEL]     -78 grpc_core::Orphanable::Orphan                                                            -78  [DEL]\n\n  +1.5% +21.9Ki TOTAL                                                                                 +220Ki  +2.2%\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n   +12% +28.0Ki [None]                                                                                +705Ki   +13%\n       +11% +24.0Ki [Unmapped]                                                                            +701Ki   +13%\n      [NEW]   +1002 non-virtual thunk to grpc::ServerAsyncWriter<grpc::ByteBuffer>::Write                  +1002  [NEW]\n      [NEW]    +970 non-virtual thunk to grpc::ServerAsyncWriter<grpc::ByteBuffer>::Write                   +970  [NEW]\n      [NEW]    +733 [Other]                                                                                 +733  [NEW]\n      [NEW]    +209 non-virtual thunk to grpc::ServerAsyncWriter<grpc::ByteBuffer>::~ServerAsyncWriter      +209  [NEW]\n      [NEW]    +194 non-virtual thunk to grpc::ServerAsyncWriter<grpc::ByteBuffer>::~ServerAsyncWriter      +194  [NEW]\n      [NEW]    +163 typeinfo name for std::_Bind<void (grpc::DefaultHealthCheckService::HealthCheckServi    +163  [NEW]\n      [NEW]    +163 typeinfo name for std::_Bind<void (grpc::DefaultHealthCheckService::HealthCheckServi    +163  [NEW]\n      [NEW]    +144 typeinfo name for std::_Weak_result_type_impl<void (grpc::DefaultHealthCheckService:    +144  [NEW]\n      [NEW]    +144 typeinfo name for std::_Weak_result_type_impl<void (grpc::DefaultHealthCheckService:    +144  [NEW]\n      [NEW]    +142 typeinfo name for std::_Sp_counted_ptr_inplace<grpc::DefaultHealthCheckService::Heal    +142  [NEW]\n      [NEW]    +142 typeinfo name for std::_Sp_counted_ptr_inplace<grpc::DefaultHealthCheckService::Heal    +142  [NEW]\n      [NEW]    +139 typeinfo name for std::_Weak_result_type<void (grpc::DefaultHealthCheckService::Heal    +139  [NEW]\n      [NEW]    +139 typeinfo name for std::_Weak_result_type<void (grpc::DefaultHealthCheckService::Heal    +139  [NEW]\n      [NEW]    +128 vtable for grpc::ServerAsyncWriter<grpc::ByteBuffer>                                    +128  [NEW]\n      [NEW]     +77 typeinfo name for grpc::DefaultHealthCheckService::HealthCheckServiceImpl::CheckCall     +77  [NEW]\n      [NEW]     +77 typeinfo name for grpc::DefaultHealthCheckService::HealthCheckServiceImpl::WatchCall     +77  [NEW]\n      [NEW]     +72 typeinfo name for grpc::DefaultHealthCheckService::HealthCheckServiceImpl::CallHandl     +72  [NEW]\n      [NEW]     +64 typeinfo name for grpc::ServerInterface::PayloadAsyncRequest<grpc::ByteBuffer>           +64  [NEW]\n      [NEW]     +56 typeinfo for grpc::ServerAsyncWriterInterface<grpc::ByteBuffer>                          +56  [NEW]\n      [NEW]     +56 vtable for std::_Sp_counted_ptr_inplace<grpc::DefaultHealthCheckService::HealthCheck     +56  [NEW]\n  +292% +34.4Ki src/cpp/server/health/default_health_check_service.cc                                +34.4Ki  +292%\n     +17e2% +11.1Ki [Other]                                                                              +11.1Ki +17e2%\n      [NEW] +8.01Ki grpc::DefaultHealthCheckService::HealthCheckServiceImpl::CheckCallHandler::OnCallRec +8.01Ki  [NEW]\n      [NEW] +2.94Ki grpc::DefaultHealthCheckService::HealthCheckServiceImpl::WatchCallHandler::SendHealt +2.94Ki  [NEW]\n      [NEW] +2.70Ki grpc::DefaultHealthCheckService::HealthCheckServiceImpl::WatchCallHandler::SendFinis +2.70Ki  [NEW]\n      [NEW] +2.67Ki grpc::DefaultHealthCheckService::HealthCheckServiceImpl::WatchCallHandler::CreateAnd +2.67Ki  [NEW]\n      [NEW] +1.97Ki grpc::ServerAsyncWriter<grpc::ByteBuffer>::WriteAndFinish                            +1.97Ki  [NEW]\n      [NEW] +1.72Ki grpc::ServerAsyncWriter<grpc::ByteBuffer>::Finish                                    +1.72Ki  [NEW]\n      [NEW] +1.66Ki grpc::DefaultHealthCheckService::HealthCheckServiceImpl::CheckCallHandler::CreateAnd +1.66Ki  [NEW]\n      [NEW]   +1018 grpc::ServerAsyncWriter<grpc::ByteBuffer>::Write                                       +1018  [NEW]\n      [NEW]    +986 grpc::ServerAsyncWriter<grpc::ByteBuffer>::Write                                        +986  [NEW]\n      [NEW]    +986 grpc::DefaultHealthCheckService::HealthCheckServiceImpl::WatchCallHandler::OnCallRec    +986  [NEW]\n      [NEW]    +920 grpc::DefaultHealthCheckService::RegisterCallHandler                                    +920  [NEW]\n      [NEW]    +828 grpc::DefaultHealthCheckService::HealthCheckServiceImpl::WatchCallHandler::WatchCall    +828  [NEW]\n      [NEW]    +827 grpc::DefaultHealthCheckService::HealthCheckServiceImpl::DecodeRequest                  +827  [NEW]\n      [NEW]    +772 grpc::DefaultHealthCheckService::HealthCheckServiceImpl::WatchCallHandler::~WatchCal    +772  [NEW]\n      [NEW]    +766 grpc::ServerAsyncWriter<grpc::ByteBuffer>::SendInitialMetadata                          +766  [NEW]\n      [NEW]    +766 grpc::ServerAsyncResponseWriter<grpc::ByteBuffer>::SendInitialMetadata                  +766  [NEW]\n      [NEW]    +764 grpc::DefaultHealthCheckService::HealthCheckServiceImpl::WatchCallHandler::~WatchCal    +764  [NEW]\n      [NEW]    +742 grpc::DefaultHealthCheckService::UnregisterCallHandler                                  +742  [NEW]\n      [NEW]    +690 std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocato    +690  [NEW]\n      [NEW]    +679 grpc::ServerInterface::PayloadAsyncRequest<grpc::ByteBuffer>::FinalizeResult            +679  [NEW]\n  +0.2%     +75 src/cpp/server/server_cc.cc                                                              +75  +0.2%\n       +51% +1.01Ki grpc::Server::Start                                                                  +1.01Ki   +51%\n      +1.8%      +7 [Unmapped]                                                                                +7  +1.8%\n\n   +17% +62.5Ki TOTAL                                                                                 +739Ki   +13%\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/430707366",
    "html_url": "https://github.com/grpc/grpc/pull/16507#issuecomment-430707366",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16507",
    "id": 430707366,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDcwNzM2Ng==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-17T16:58:24Z",
    "updated_at": "2018-10-17T16:58:24Z",
    "author_association": "NONE",
    "body": "```\nObjective-C binary sizes\n*****************STATIC******************\n  New size                      Old size\n   694,680       Core (>)        680,307\n\n 1,981,222      Total (>)      1,966,345\n\n***************FRAMEWORKS****************\n  New size                      Old size\n 3,776,618       Core (>)      3,704,194\n\n10,982,198      Total (>)     10,909,770\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/430708102",
    "html_url": "https://github.com/grpc/grpc/pull/16507#issuecomment-430708102",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16507",
    "id": 430708102,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDcwODEwMg==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-17T17:00:42Z",
    "updated_at": "2018-10-17T17:00:42Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/430712939",
    "html_url": "https://github.com/grpc/grpc/pull/16507#issuecomment-430712939",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16507",
    "id": 430712939,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDcxMjkzOQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-17T17:15:27Z",
    "updated_at": "2018-10-17T17:15:27Z",
    "author_association": "NONE",
    "body": "```\nCorrupt JSON data (indicates timeout or crash): \n    bm_call_create.BM_IsolatedFilter_ClientChannelFilter_NoOp_.counters.new: 10\n    bm_call_create.BM_IsolatedFilter_ClientChannelFilter_NoOp_.counters.old: 10\n\n\n[microbenchmarks] Performance differences noted:\nBenchmark                                  cpu_time    real_time\n-----------------------------------------  ----------  -----------\nBM_HasClearGrpcStatus<ErrorWithHttpError>  -4%         -4%\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/430719422",
    "html_url": "https://github.com/grpc/grpc/pull/16507#issuecomment-430719422",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16507",
    "id": 430719422,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDcxOTQyMg==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-17T17:34:01Z",
    "updated_at": "2018-10-17T17:34:01Z",
    "author_association": "NONE",
    "body": "```\nObjective-C binary sizes\n*****************STATIC******************\n  New size                      Old size\n   694,673       Core (>)        680,307\n\n 1,981,215      Total (>)      1,966,345\n\n***************FRAMEWORKS****************\n  New size                      Old size\n 3,776,526       Core (>)      3,704,194\n\n10,982,105      Total (>)     10,909,763\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/430723093",
    "html_url": "https://github.com/grpc/grpc/pull/16507#issuecomment-430723093",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16507",
    "id": 430723093,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDcyMzA5Mw==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-17T17:45:48Z",
    "updated_at": "2018-10-17T17:45:48Z",
    "author_association": "NONE",
    "body": "```\nCorrupt JSON data (indicates timeout or crash): \n    bm_call_create.BM_IsolatedFilter_ClientChannelFilter_NoOp_.counters.new: 10\n    bm_call_create.BM_IsolatedFilter_ClientChannelFilter_NoOp_.counters.old: 10\n\n\n[microbenchmarks] Performance differences noted:\nBenchmark                                   cpu_time    real_time\n------------------------------------------  ----------  -----------\nBM_MetadataFromInternedKeyWithBackingStore  +4%         +4%\nBM_MetadataRefUnrefExternal                 +14%        +14%\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/431097883",
    "html_url": "https://github.com/grpc/grpc/pull/16507#issuecomment-431097883",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16507",
    "id": 431097883,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMTA5Nzg4Mw==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-18T17:38:07Z",
    "updated_at": "2018-10-18T17:38:07Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n  +1.7% +12.4Ki [None]                                                                                +210Ki  +2.3%\n      +1.8% +11.8Ki [Unmapped]                                                                            +210Ki  +2.3%\n      [NEW]    +108 grpc_core::HealthCheckClient::CallState::RecvTrailingMetadataReady(void*, grpc_error    +108  [NEW]\n      [NEW]     +58 grpc_health_v1_HealthCheckRequest_fields                                                 +58  [NEW]\n      [NEW]     +58 grpc_health_v1_HealthCheckResponse_fields                                                +58  [NEW]\n      [NEW]     +40 vtable for grpc_core::HealthCheckClient::CallState                                       +40  [NEW]\n      [NEW]     +40 vtable for grpc_core::HealthCheckClient                                                  +40  [NEW]\n      [NEW]     +40 vtable for grpc_core::InternallyRefCounted<grpc_core::ConnectedSubchannelStateWatche     +40  [NEW]\n      [NEW]     +40 vtable for grpc_core::ConnectedSubchannelStateWatcher                                    +40  [NEW]\n      [NEW]     +40 vtable for grpc_core::InternallyRefCountedWithTracing<grpc_core::HealthCheckClient::     +40  [NEW]\n      [NEW]     +40 vtable for grpc_core::InternallyRefCountedWithTracing<grpc_core::HealthCheckClient>      +40  [NEW]\n      +3.5%     +36 [None]                                                                                     0  [ = ]\n      +1.0%     +32 static_metadata_hash                                                                       0  [ = ]\n      +1.0%     +32 grpc_static_slice_table                                                                  +32  +1.0%\n      +2.4%     +28 g_bytes                                                                                  +28  +2.4%\n      [NEW]     +24 grpc_health_check_client_trace                                                             0  [ = ]\n      +1.0%     +16 grpc_static_metadata_refcounts                                                           +16  +1.0%\n       +50%      +8 grpc_core::SubchannelList<grpc_core::(anonymous namespace)::RoundRobin::RoundRobinSu      +8   +50%\n       +50%      +8 grpc_core::SubchannelList<grpc_core::(anonymous namespace)::PickFirst::PickFirstSubc      +8   +50%\n      +2.3%      +6 elem_keys                                                                                 +6  +2.3%\n      +1.0%      +4 static_metadata_hash_values                                                                0  [ = ]\n      +1.0%      +1 [Other]                                                                                   +1  +1.0%\n  [NEW] +7.38Ki src/core/ext/filters/client_channel/health/health_check_client.cc                    +7.38Ki  [NEW]\n      [NEW] +1.46Ki grpc_core::HealthCheckClient::CallState::StartCall                                   +1.46Ki  [NEW]\n      [NEW] +1.19Ki grpc_core::HealthCheckClient::CallState::DoneReadingRecvMessage                      +1.19Ki  [NEW]\n      [NEW]    +746 [Other]                                                                                 +746  [NEW]\n      [NEW]    +417 grpc_core::HealthCheckClient::CallState::RecvTrailingMetadataReady                      +417  [NEW]\n      [NEW]    +409 grpc_core::HealthCheckClient::StartRetryTimer                                           +409  [NEW]\n      [NEW]    +358 grpc_core::HealthCheckClient::StartCallLocked                                           +358  [NEW]\n      [NEW]    +344 grpc_core::HealthCheckClient::HealthCheckClient                                         +344  [NEW]\n      [NEW]    +268 grpc_core::HealthCheckClient::Orphan                                                    +268  [NEW]\n      [NEW]    +252 grpc_core::HealthCheckClient::CallState::CallState                                      +252  [NEW]\n      [NEW]    +251 grpc_core::HealthCheckClient::CallState::~CallState                                     +251  [NEW]\n      [NEW]    +230 grpc_core::HealthCheckClient::~HealthCheckClient                                        +230  [NEW]\n      [NEW]    +219 grpc_core::HealthCheckClient::CallState::CallEnded                                      +219  [NEW]\n      [NEW]    +212 [Unmapped]                                                                              +212  [NEW]\n      [NEW]    +186 grpc_core::HealthCheckClient::SetHealthStatusLocked                                     +186  [NEW]\n      [NEW]    +178 grpc_core::HealthCheckClient::NotifyOnHealthChange                                      +178  [NEW]\n      [NEW]    +172 grpc_core::HealthCheckClient::OnRetryTimer                                              +172  [NEW]\n      [NEW]    +130 grpc_core::HealthCheckClient::CallState::RecvMessageReady                               +130  [NEW]\n      [NEW]    +126 grpc_core::HealthCheckClient::CallState::ContinueReadingRecvMessage                     +126  [NEW]\n      [NEW]    +121 grpc_core::HealthCheckClient::CallState::PullSliceFromRecvMessage                       +121  [NEW]\n      [NEW]    +114 grpc_core::HealthCheckClient::CallState::Cancel                                         +114  [NEW]\n      [NEW]    +108 grpc_core::HealthCheckClient::CallState::StartCancel                                    +108  [NEW]\n   +25% +1.92Ki src/core/ext/filters/client_channel/subchannel.cc                                    +1.92Ki   +25%\n       +68%    +656 on_subchannel_connected                                                                 +656   +68%\n      [NEW]    +570 grpc_core::ConnectedSubchannelStateWatcher::OnConnectivityChanged                       +570  [NEW]\n       +25%    +368 grpc_subchannel_create                                                                  +368   +25%\n      [NEW]    +335 grpc_subchannel_notify_on_state_change                                                  +335  [NEW]\n      [NEW]    +263 grpc_core::ConnectedSubchannelStateWatcher::OnHealthChanged                             +263  [NEW]\n      [NEW]     +86 grpc_subchannel_check_connectivity                                                       +86  [NEW]\n       +19%     +64 grpc_subchannel_unref                                                                    +64   +19%\n      [NEW]     +50 grpc_core::ConnectedSubchannelStateWatcher::~ConnectedSubchannelStateWatcher             +50  [NEW]\n       +12%     +43 subchannel_destroy                                                                       +43   +12%\n       +12%     +42 maybe_start_connecting_locked                                                            +42   +12%\n      [NEW]     +37 grpc_core::ConnectedSubchannel::GetInitialCallSizeEstimate(unsigned long) const          +37  [NEW]\n      [NEW]     +34 grpc_core::ConnectedSubchannelStateWatcher::Orphan                                       +34  [NEW]\n       +15%     +26 continue_connect_locked                                                                  +26   +15%\n      [NEW]     +14 grpc_core::ConnectedSubchannelStateWatcher::~ConnectedSubchannelStateWatcher             +14  [NEW]\n      +4.6%     +13 [Unmapped]                                                                               +13  +4.6%\n      [NEW]      +9 grpc_core::InternallyRefCounted<grpc_core::ConnectedSubchannelStateWatcher>::~Intern      +9  [NEW]\n      [NEW]      +2 grpc_core::InternallyRefCounted<grpc_core::ConnectedSubchannelStateWatcher>::~Intern      +2  [NEW]\n  +0.8%    +128 src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.cc                          +128  +0.8%\n      +6.9%    +128 grpc_core::(anonymous namespace)::GrpcLb::CreateOrUpdateRoundRobinPolicyLocked() [cl    +128  +6.9%\n  +0.6%     +80 src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc                   +80  +0.6%\n      +2.5%     +80 grpc_core::(anonymous namespace)::PickFirst::UpdateLocked                                +80  +2.5%\n  +0.2%     +32 src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc                 +32  +0.2%\n      [NEW]    +592 grpc_core::(anonymous namespace)::RoundRobin::RoundRobinSubchannelList::StartWatchin    +592  [NEW]\n      +0.6%     +16 grpc_core::(anonymous namespace)::RoundRobin::UpdateLocked                               +16  +0.6%\n  +1.2%     +32 src/core/lib/slice/slice_intern.cc                                                       +32  +1.2%\n      +1.5%     +16 grpc_slice_intern                                                                        +16  +1.5%\n      +2.7%      +8 grpc_slice_maybe_static_intern                                                            +8  +2.7%\n      +2.1%      +7 grpc_slice_intern_init                                                                    +7  +2.1%\n      +0.8%      +1 [Unmapped]                                                                                +1  +0.8%\n\n -------------- SHRINKING                                                                            --------------\n  -5.7%     -78 src/core/ext/filters/client_channel/lb_policy.cc                                         -78  -5.7%\n      [DEL]     -78 grpc_core::Orphanable::Orphan                                                            -78  [DEL]\n\n  +1.5% +21.9Ki TOTAL                                                                                 +220Ki  +2.2%\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE              FILE SIZE\n ++++++++++++++ GROWIN ++++++++++++++\n\n -+-+-+-+-+-+-+ MIXED  +-+-+-+-+-+-+-\n  -0.0%      -8 [None]    +112  +0.0%\n\n  -0.0%      -8 TOTAL     +112  +0.0%\n\n\n\n```"
  }
]
