[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/253345606",
    "html_url": "https://github.com/grpc/grpc/issues/8357#issuecomment-253345606",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8357",
    "id": 253345606,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzM0NTYwNg==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-12T21:30:44Z",
    "updated_at": "2016-10-12T21:30:44Z",
    "author_association": "MEMBER",
    "body": "Node gRPC is asynchronous. The callback you provide is called asynchronously when the call completes with an error if the call failed, and the response message. An empty callback should work just fine, though I would generally recommend at least checking the response status.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/253416625",
    "html_url": "https://github.com/grpc/grpc/issues/8357#issuecomment-253416625",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8357",
    "id": 253416625,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzQxNjYyNQ==",
    "user": {
      "login": "vish74",
      "id": 806390,
      "node_id": "MDQ6VXNlcjgwNjM5MA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/806390?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vish74",
      "html_url": "https://github.com/vish74",
      "followers_url": "https://api.github.com/users/vish74/followers",
      "following_url": "https://api.github.com/users/vish74/following{/other_user}",
      "gists_url": "https://api.github.com/users/vish74/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vish74/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vish74/subscriptions",
      "organizations_url": "https://api.github.com/users/vish74/orgs",
      "repos_url": "https://api.github.com/users/vish74/repos",
      "events_url": "https://api.github.com/users/vish74/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vish74/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-13T05:17:30Z",
    "updated_at": "2016-10-13T05:17:30Z",
    "author_association": "NONE",
    "body": "Agree to asynchronous behavior of NodeJS but from my understanding of server client design, client callbacks or its definition should be optional. Some of the end of execution API/functions may not require any status acknowledgment.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/253588765",
    "html_url": "https://github.com/grpc/grpc/issues/8357#issuecomment-253588765",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8357",
    "id": 253588765,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzU4ODc2NQ==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-13T17:56:17Z",
    "updated_at": "2016-10-13T17:56:17Z",
    "author_association": "MEMBER",
    "body": "The situation you are describing is just as well handled by providing a no-op function. Making the parameter optional just to avoid passing no-op functions is not worth the cost of the additional complexity.\n\nPlus, if we decide now to make it optional and treat the absence as a no-op, that precludes some other possible expansions in the future, like treating the absence as indicating that a Promise should be returned.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/324329654",
    "html_url": "https://github.com/grpc/grpc/issues/8357#issuecomment-324329654",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8357",
    "id": 324329654,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNDMyOTY1NA==",
    "user": {
      "login": "hadisinaee",
      "id": 3697216,
      "node_id": "MDQ6VXNlcjM2OTcyMTY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/3697216?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hadisinaee",
      "html_url": "https://github.com/hadisinaee",
      "followers_url": "https://api.github.com/users/hadisinaee/followers",
      "following_url": "https://api.github.com/users/hadisinaee/following{/other_user}",
      "gists_url": "https://api.github.com/users/hadisinaee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hadisinaee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hadisinaee/subscriptions",
      "organizations_url": "https://api.github.com/users/hadisinaee/orgs",
      "repos_url": "https://api.github.com/users/hadisinaee/repos",
      "events_url": "https://api.github.com/users/hadisinaee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hadisinaee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-23T13:24:08Z",
    "updated_at": "2017-08-23T13:24:08Z",
    "author_association": "NONE",
    "body": "it doesn't work with `async/await` syntax in `ES7`. I mean the following:\r\n\r\n```js\r\nlet err, reply = await client.createUser(userCreateRequest)\r\n```\r\nhow to handle these situations? "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/324497363",
    "html_url": "https://github.com/grpc/grpc/issues/8357#issuecomment-324497363",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8357",
    "id": 324497363,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNDQ5NzM2Mw==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-24T00:17:06Z",
    "updated_at": "2017-08-24T00:17:06Z",
    "author_association": "MEMBER",
    "body": "It's a regular asynchronous function; it doesn't return a promise. You may be able to use `util.promisify`, but keep in mind that this will probably discard the returned call object, which gives you the response metadata and the ability to cancel the call."
  }
]
