[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/170747698",
    "html_url": "https://github.com/grpc/grpc/issues/4677#issuecomment-170747698",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/4677",
    "id": 170747698,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDc0NzY5OA==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-12T01:05:54Z",
    "updated_at": "2016-01-12T01:05:54Z",
    "author_association": "MEMBER",
    "body": "Interesting. Can you site any documentation describing this?\n\nOn Mon, Jan 11, 2016 at 5:03 PM duggelz notifications@github.com wrote:\n\n> Unix domain sockets have a convention that a leading @ in the socket name\n> denotes an address in the abstract namespace. This doesn't seem to work in\n> either client or server.\n> \n> Example:\n> \n> builder.AddListeningPort(\"unix:@foo\", grpc::InsecureServerCredentials());\n> \n> What should happen:\n> \n> Server opens abstract unix domain socket with name 'foo'\n> \n> What actually happens:\n> \n> Server opens non-abstract unix domain socket with name '@foo' in current working directory\n> \n> GRPC 0.11.1\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/grpc/grpc/issues/4677.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/170799958",
    "html_url": "https://github.com/grpc/grpc/issues/4677#issuecomment-170799958",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/4677",
    "id": 170799958,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDc5OTk1OA==",
    "user": {
      "login": "duggelz",
      "id": 608338,
      "node_id": "MDQ6VXNlcjYwODMzOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/608338?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/duggelz",
      "html_url": "https://github.com/duggelz",
      "followers_url": "https://api.github.com/users/duggelz/followers",
      "following_url": "https://api.github.com/users/duggelz/following{/other_user}",
      "gists_url": "https://api.github.com/users/duggelz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/duggelz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/duggelz/subscriptions",
      "organizations_url": "https://api.github.com/users/duggelz/orgs",
      "repos_url": "https://api.github.com/users/duggelz/repos",
      "events_url": "https://api.github.com/users/duggelz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/duggelz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-12T05:30:11Z",
    "updated_at": "2016-01-12T05:30:11Z",
    "author_association": "NONE",
    "body": "This link gives a good overview:  http://unix.stackexchange.com/a/206395\n\nStubby 1 and 2 support this, and it's used internally quite a bit, because it's so handy.  Unfortunately, some digging reveals it to be non-portable - only Linux supports abstract unix domain sockets, not BSD, Windows or anything else.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/170801454",
    "html_url": "https://github.com/grpc/grpc/issues/4677#issuecomment-170801454",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/4677",
    "id": 170801454,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDgwMTQ1NA==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-12T05:40:37Z",
    "updated_at": "2016-01-12T05:40:37Z",
    "author_association": "MEMBER",
    "body": "Seems worth supporting, though I wish there were a syntax that didn't\ncollide with standard filenames (unix:foo?abstract=1 maybe), though I could\nbe convinced that staying with convention is important enough.\n\nIt shouldn't be huge to do, but I'd like to cleanup our server name\nresolution path a little first so that it this doesn't need to happen in\ntwo different places.\n\nOn Mon, Jan 11, 2016, 9:30 PM duggelz notifications@github.com wrote:\n\n> This link gives a good overview: http://unix.stackexchange.com/a/206395\n> \n> Stubby 1 and 2 support this, and it's used internally quite a bit, because\n> it's so handy. Unfortunately, some digging reveals it to be non-portable -\n> only Linux supports abstract unix domain sockets, not BSD, Windows or\n> anything else.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/grpc/grpc/issues/4677#issuecomment-170799958.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/170805645",
    "html_url": "https://github.com/grpc/grpc/issues/4677#issuecomment-170805645",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/4677",
    "id": 170805645,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDgwNTY0NQ==",
    "user": {
      "login": "duggelz",
      "id": 608338,
      "node_id": "MDQ6VXNlcjYwODMzOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/608338?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/duggelz",
      "html_url": "https://github.com/duggelz",
      "followers_url": "https://api.github.com/users/duggelz/followers",
      "following_url": "https://api.github.com/users/duggelz/following{/other_user}",
      "gists_url": "https://api.github.com/users/duggelz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/duggelz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/duggelz/subscriptions",
      "organizations_url": "https://api.github.com/users/duggelz/orgs",
      "repos_url": "https://api.github.com/users/duggelz/repos",
      "events_url": "https://api.github.com/users/duggelz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/duggelz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-12T05:53:52Z",
    "updated_at": "2016-01-12T05:53:52Z",
    "author_association": "NONE",
    "body": "Great!\n\nThe non-colliding alternative to '@' is to natively support target names with embedded NUL characters.  The client code would pass in something like std::string{'\\0', 'f', 'o', 'o'}.  But a brief look at the C core component shows that to be a non-starter: It uses NUL-terminated strings, rather than C++-style strings with explicit length.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/170806702",
    "html_url": "https://github.com/grpc/grpc/issues/4677#issuecomment-170806702",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/4677",
    "id": 170806702,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDgwNjcwMg==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-12T06:04:18Z",
    "updated_at": "2016-01-12T06:04:18Z",
    "author_association": "MEMBER",
    "body": "We also using uri syntax for names. So... %00?\n\nOn Mon, Jan 11, 2016, 9:54 PM duggelz notifications@github.com wrote:\n\n> Great!\n> \n> The non-colliding alternative to '@' is to natively support target names\n> with embedded NUL characters. The client code would pass in something like\n> std::string{'\\0', 'f', 'o', 'o'}. But a brief look at the C core component\n> shows that to be a non-starter: It uses NUL-terminated strings, rather than\n> C++-style strings with explicit length.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/grpc/grpc/issues/4677#issuecomment-170805645.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/170806763",
    "html_url": "https://github.com/grpc/grpc/issues/4677#issuecomment-170806763",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/4677",
    "id": 170806763,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDgwNjc2Mw==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-12T06:04:59Z",
    "updated_at": "2016-01-12T06:04:59Z",
    "author_association": "MEMBER",
    "body": "(We still need to get that the percent decoding written)\n\nOn Mon, Jan 11, 2016, 10:04 PM Craig Tiller ctiller@google.com wrote:\n\n> We also using uri syntax for names. So... %00?\n> \n> On Mon, Jan 11, 2016, 9:54 PM duggelz notifications@github.com wrote:\n> \n> > Great!\n> > \n> > The non-colliding alternative to '@' is to natively support target names\n> > with embedded NUL characters. The client code would pass in something like\n> > std::string{'\\0', 'f', 'o', 'o'}. But a brief look at the C core component\n> > shows that to be a non-starter: It uses NUL-terminated strings, rather than\n> > C++-style strings with explicit length.\n> > \n> > —\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/grpc/grpc/issues/4677#issuecomment-170805645.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/171066407",
    "html_url": "https://github.com/grpc/grpc/issues/4677#issuecomment-171066407",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/4677",
    "id": 171066407,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTA2NjQwNw==",
    "user": {
      "login": "duggelz",
      "id": 608338,
      "node_id": "MDQ6VXNlcjYwODMzOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/608338?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/duggelz",
      "html_url": "https://github.com/duggelz",
      "followers_url": "https://api.github.com/users/duggelz/followers",
      "following_url": "https://api.github.com/users/duggelz/following{/other_user}",
      "gists_url": "https://api.github.com/users/duggelz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/duggelz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/duggelz/subscriptions",
      "organizations_url": "https://api.github.com/users/duggelz/orgs",
      "repos_url": "https://api.github.com/users/duggelz/repos",
      "events_url": "https://api.github.com/users/duggelz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/duggelz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-12T21:38:34Z",
    "updated_at": "2016-01-12T21:38:34Z",
    "author_association": "NONE",
    "body": "\"unix:%00foo\" would be excellent.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/307093761",
    "html_url": "https://github.com/grpc/grpc/issues/4677#issuecomment-307093761",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/4677",
    "id": 307093761,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzA5Mzc2MQ==",
    "user": {
      "login": "alexandnpu",
      "id": 1999503,
      "node_id": "MDQ6VXNlcjE5OTk1MDM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1999503?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexandnpu",
      "html_url": "https://github.com/alexandnpu",
      "followers_url": "https://api.github.com/users/alexandnpu/followers",
      "following_url": "https://api.github.com/users/alexandnpu/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexandnpu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexandnpu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexandnpu/subscriptions",
      "organizations_url": "https://api.github.com/users/alexandnpu/orgs",
      "repos_url": "https://api.github.com/users/alexandnpu/repos",
      "events_url": "https://api.github.com/users/alexandnpu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexandnpu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-08T12:52:10Z",
    "updated_at": "2017-06-08T12:52:10Z",
    "author_association": "NONE",
    "body": "@duggelz @ctiller , for me, using \"unix:%00foo\" would not be good, which makes grpc inconsistent between different programming languages.\r\n\r\nI have a task for java and python.\r\nFor java part, the grpc-java can use the abstract namespace in unix domain socket, thanks to netty.\r\n\r\nI've tried grpc-python on\r\n\r\n```\r\ngrpcio==1.3.5\r\ngrpcio-tools==1.3.5\r\nprotobuf==3.3.0\r\n```\r\n\r\nfor\r\n\r\n```\r\nunix:%00foo\r\nunix:\\\\0foo\r\nunix:\\0foo  # this one fails\r\n```\r\n\r\nThey are not abstract namespace.\r\n\r\nAs the java world can support the abstract namesapce, python world can do it too!\r\n(I haven't look into the golang world)\r\n\r\nI haven't got the chance to look into the code in grpc for python. So sorry that if I miss something.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/383781509",
    "html_url": "https://github.com/grpc/grpc/issues/4677#issuecomment-383781509",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/4677",
    "id": 383781509,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4Mzc4MTUwOQ==",
    "user": {
      "login": "Qining",
      "id": 2983685,
      "node_id": "MDQ6VXNlcjI5ODM2ODU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2983685?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Qining",
      "html_url": "https://github.com/Qining",
      "followers_url": "https://api.github.com/users/Qining/followers",
      "following_url": "https://api.github.com/users/Qining/following{/other_user}",
      "gists_url": "https://api.github.com/users/Qining/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Qining/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Qining/subscriptions",
      "organizations_url": "https://api.github.com/users/Qining/orgs",
      "repos_url": "https://api.github.com/users/Qining/repos",
      "events_url": "https://api.github.com/users/Qining/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Qining/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-24T02:17:55Z",
    "updated_at": "2018-04-24T02:17:55Z",
    "author_association": "NONE",
    "body": "Any progress on this issue? I'm also trying to use abstract socket with GRPC"
  }
]
