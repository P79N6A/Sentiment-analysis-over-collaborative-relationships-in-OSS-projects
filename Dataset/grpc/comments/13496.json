[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/346777410",
    "html_url": "https://github.com/grpc/grpc/pull/13496#issuecomment-346777410",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13496",
    "id": 346777410,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Njc3NzQxMA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-24T09:04:40Z",
    "updated_at": "2017-11-24T09:04:40Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE        FILE SIZE\n ++++++++++++++  ++++++++++++++\n\n  [ = ]       0        0  [ = ]\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE        FILE SIZE\n ++++++++++++++  ++++++++++++++\n\n  [ = ]       0        0  [ = ]\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/346778488",
    "html_url": "https://github.com/grpc/grpc/pull/13496#issuecomment-346778488",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13496",
    "id": 346778488,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Njc3ODQ4OA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-24T09:09:39Z",
    "updated_at": "2017-11-24T09:09:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "Btw, C++ and Python already have this behavior, some other languages don't (e.g. Ruby, PHP, Node)"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/346778592",
    "html_url": "https://github.com/grpc/grpc/pull/13496#issuecomment-346778592",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13496",
    "id": 346778592,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Njc3ODU5Mg==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-24T09:10:06Z",
    "updated_at": "2017-11-24T09:10:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "CC @kkm000  @jskeet "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/346779789",
    "html_url": "https://github.com/grpc/grpc/pull/13496#issuecomment-346779789",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13496",
    "id": 346779789,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Njc3OTc4OQ==",
    "user": {
      "login": "jskeet",
      "id": 17011,
      "node_id": "MDQ6VXNlcjE3MDEx",
      "avatar_url": "https://avatars1.githubusercontent.com/u/17011?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jskeet",
      "html_url": "https://github.com/jskeet",
      "followers_url": "https://api.github.com/users/jskeet/followers",
      "following_url": "https://api.github.com/users/jskeet/following{/other_user}",
      "gists_url": "https://api.github.com/users/jskeet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jskeet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jskeet/subscriptions",
      "organizations_url": "https://api.github.com/users/jskeet/orgs",
      "repos_url": "https://api.github.com/users/jskeet/repos",
      "events_url": "https://api.github.com/users/jskeet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jskeet/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-24T09:15:57Z",
    "updated_at": "2017-11-24T09:16:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "This feels to me like it should probably be an option rather than a change to the default. With this change, my current build scripts will end up generating far more files, most of which will be empty. I don't think we should be making msbuild work at the expense of existing build scripts.\r\n\r\n(The msbuild task can easily pass the option in, of course, so it shouldn't affect the viability of that.)"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/346779887",
    "html_url": "https://github.com/grpc/grpc/pull/13496#issuecomment-346779887",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13496",
    "id": 346779887,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Njc3OTg4Nw==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-24T09:16:28Z",
    "updated_at": "2017-11-24T09:16:28Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/346788877",
    "html_url": "https://github.com/grpc/grpc/pull/13496#issuecomment-346788877",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13496",
    "id": 346788877,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Njc4ODg3Nw==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-24T09:56:40Z",
    "updated_at": "2017-11-24T09:56:40Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/346924856",
    "html_url": "https://github.com/grpc/grpc/pull/13496#issuecomment-346924856",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13496",
    "id": 346924856,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjkyNDg1Ng==",
    "user": {
      "login": "kkm000",
      "id": 8228229,
      "node_id": "MDQ6VXNlcjgyMjgyMjk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/8228229?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kkm000",
      "html_url": "https://github.com/kkm000",
      "followers_url": "https://api.github.com/users/kkm000/followers",
      "following_url": "https://api.github.com/users/kkm000/following{/other_user}",
      "gists_url": "https://api.github.com/users/kkm000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kkm000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kkm000/subscriptions",
      "organizations_url": "https://api.github.com/users/kkm000/orgs",
      "repos_url": "https://api.github.com/users/kkm000/repos",
      "events_url": "https://api.github.com/users/kkm000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kkm000/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-25T07:44:34Z",
    "updated_at": "2017-11-25T07:44:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jtattermusch, @jskeet Since I am writing a task, and using the dependency file from protoc which lists actual generated files, it is easier to handle a situation when a file is not produced (I'll just touch an empty file for dependency check only, and won't include it in compilation). With this approach, this is not a blocking issue.\r\n\r\nOn the other hand, overall, it is not as easy to handle protoc/gRPC in an automated build because it \"too smart\" about the files it produces, and their locations. Compare to gcc, for example: it just puts the output file wherever you tell it to (-o), and all other outputs, if any, are also exactly controlled. From my, as a user, point of view, this sometimes tends to violate the Least Surprise Principle, especially given that behavior is so different between C++ and C# generators (not only file naming, but also output paths: in C++ codegen are inferred from the root provided by -I, while the C# codegen puts all into the output directory with no subpaths). To me, the easier a tool to do what you want it to do, the better.\r\n\r\nHaving said that, there is already an option for the user to control generating gRPC services (you either pass --plugin and friends to protoc or not). From the tool user's standpoint, the fewer corner cases are there, the better. If you compile and empty (of services) input, get an empty output. Maybe print a warning message. So I still think that producing an empty (or a minimal compilable by the target language) file is the right thing to do when there are no services. I think gcc gets it right in this case by producing an output from empty input:\r\n```\r\n$ touch foo.cc\r\n$ gcc -c foo.cc\r\n$ ls -l foo.o\r\n-rw-rw-r-- 1 kkm kkm 944 Nov 24 23:31 foo.o\r\n```\r\nAnd whichever way you decide at the end, it would still be better if the behavior was consistent across codegens."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/346926454",
    "html_url": "https://github.com/grpc/grpc/pull/13496#issuecomment-346926454",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13496",
    "id": 346926454,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjkyNjQ1NA==",
    "user": {
      "login": "jskeet",
      "id": 17011,
      "node_id": "MDQ6VXNlcjE3MDEx",
      "avatar_url": "https://avatars1.githubusercontent.com/u/17011?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jskeet",
      "html_url": "https://github.com/jskeet",
      "followers_url": "https://api.github.com/users/jskeet/followers",
      "following_url": "https://api.github.com/users/jskeet/following{/other_user}",
      "gists_url": "https://api.github.com/users/jskeet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jskeet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jskeet/subscriptions",
      "organizations_url": "https://api.github.com/users/jskeet/orgs",
      "repos_url": "https://api.github.com/users/jskeet/repos",
      "events_url": "https://api.github.com/users/jskeet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jskeet/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-25T08:24:11Z",
    "updated_at": "2017-11-25T08:24:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "> To me, the easier a tool to do what you want it to do, the better.\r\n\r\nSure - but I don't want it to produce files that have no use. I can see how predictability at the expense of tidiness is useful for a Make-based tool, but *I* prefer to end up with only files that will be useful, in the most idiomatic place. That's why the C# plugin also lets you specify the `base_namespace` - it *doesn't* always just put all the output files in a single directory; if you specify a `base_namespace` option, it will treat the specified output directory as the directory representing that namespace, and create subdirectories from there. We can't really infer what that base namespace should be from other options, and in many cases just specifying a flat output directory is simpler anyway.\r\n\r\n> From my, as a user, point of view, this sometimes tends to violate the Least Surprise Principle\r\n\r\nWhereas to me, if an update from 1.7.x to 1.8.x suddenly started creating one C# file per proto regardless of services when it didn't before, *that* would be a *huge* violation of the principle of least surprise.\r\n\r\n> I think gcc gets it right in this case by producing an output from empty input\r\n\r\nThe output of gcc is transient though. That's the big difference here. It doesn't matter if you produce a few more .o files than you need - no-one's ever going to look at them. For protos, I take a different approach, checking the C# files into source control. That makes it easier for debugging purposes, as well as anyone wanting to look at what the source code was at a particular revision. It also makes it easier to compare changes due to proto or generator changes. Now obviously you're coming at it from a different perspective, wanting to treat the generated C# code as transient - but I'd like you to bear in mind that that's not the only perspective.\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/346928733",
    "html_url": "https://github.com/grpc/grpc/pull/13496#issuecomment-346928733",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13496",
    "id": 346928733,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjkyODczMw==",
    "user": {
      "login": "kkm000",
      "id": 8228229,
      "node_id": "MDQ6VXNlcjgyMjgyMjk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/8228229?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kkm000",
      "html_url": "https://github.com/kkm000",
      "followers_url": "https://api.github.com/users/kkm000/followers",
      "following_url": "https://api.github.com/users/kkm000/following{/other_user}",
      "gists_url": "https://api.github.com/users/kkm000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kkm000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kkm000/subscriptions",
      "organizations_url": "https://api.github.com/users/kkm000/orgs",
      "repos_url": "https://api.github.com/users/kkm000/repos",
      "events_url": "https://api.github.com/users/kkm000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kkm000/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-25T09:12:42Z",
    "updated_at": "2017-11-25T09:12:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sure, although it is certain that your perspective, as the tool's developer, is very different. I would not be at all surprised if gcc developers were looking at .o files all the time. or kept them somehow versioned for regression tests. They are Greek to me though. It would not probably far off the bat to say that most of the rest of the world would never look at the generated files. I used to check them in; that was only a mess in the source control history. When I finally scripted the build to keep them as transient, that was a big relief.\r\n\r\nSo, to me as the user of the tool it only creates hurdles, and as a writer of make, msbuild or any type of  scripts doubly so. I am just trying to convey a perspective from the other side."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/346929218",
    "html_url": "https://github.com/grpc/grpc/pull/13496#issuecomment-346929218",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13496",
    "id": 346929218,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjkyOTIxOA==",
    "user": {
      "login": "jskeet",
      "id": 17011,
      "node_id": "MDQ6VXNlcjE3MDEx",
      "avatar_url": "https://avatars1.githubusercontent.com/u/17011?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jskeet",
      "html_url": "https://github.com/jskeet",
      "followers_url": "https://api.github.com/users/jskeet/followers",
      "following_url": "https://api.github.com/users/jskeet/following{/other_user}",
      "gists_url": "https://api.github.com/users/jskeet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jskeet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jskeet/subscriptions",
      "organizations_url": "https://api.github.com/users/jskeet/orgs",
      "repos_url": "https://api.github.com/users/jskeet/repos",
      "events_url": "https://api.github.com/users/jskeet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jskeet/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-25T09:23:17Z",
    "updated_at": "2017-11-25T09:23:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Sure, although it is certain that your perspective, as the tool's developer, is very different.\r\n\r\nBut that's not what I do for most of my job. I'm not in the protobuf team - I wrote the generator a while ago and still help out occasionally. But day to day, I work on projects that *use* protobuf all the time. I spend far more time as a user than as a tool developer on that front.\r\n\r\nWhat I've proposed is that it's an option so that it's still entirely feasible for your new use case to work as you want it, but without disrupting everyone that expects a minor version change to only have minimal codegen changes."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/346969378",
    "html_url": "https://github.com/grpc/grpc/pull/13496#issuecomment-346969378",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13496",
    "id": 346969378,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Njk2OTM3OA==",
    "user": {
      "login": "kkm000",
      "id": 8228229,
      "node_id": "MDQ6VXNlcjgyMjgyMjk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/8228229?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kkm000",
      "html_url": "https://github.com/kkm000",
      "followers_url": "https://api.github.com/users/kkm000/followers",
      "following_url": "https://api.github.com/users/kkm000/following{/other_user}",
      "gists_url": "https://api.github.com/users/kkm000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kkm000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kkm000/subscriptions",
      "organizations_url": "https://api.github.com/users/kkm000/orgs",
      "repos_url": "https://api.github.com/users/kkm000/repos",
      "events_url": "https://api.github.com/users/kkm000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kkm000/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-25T22:08:41Z",
    "updated_at": "2017-11-25T22:08:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "I see. It seems I underestimate certain use cases.\r\n\r\nAs far as C# build integration goes, it currently looks like I can work with the tool as is. Adding the option would solve only one problem of at least two. So this issue is not blocking, assuming MSBuild task."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/348931292",
    "html_url": "https://github.com/grpc/grpc/pull/13496#issuecomment-348931292",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13496",
    "id": 348931292,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODkzMTI5Mg==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-04T11:09:44Z",
    "updated_at": "2017-12-04T11:09:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "Closing this based on the above discussion. We can reopen later if needed."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/349070519",
    "html_url": "https://github.com/grpc/grpc/pull/13496#issuecomment-349070519",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13496",
    "id": 349070519,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTA3MDUxOQ==",
    "user": {
      "login": "kkm000",
      "id": 8228229,
      "node_id": "MDQ6VXNlcjgyMjgyMjk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/8228229?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kkm000",
      "html_url": "https://github.com/kkm000",
      "followers_url": "https://api.github.com/users/kkm000/followers",
      "following_url": "https://api.github.com/users/kkm000/following{/other_user}",
      "gists_url": "https://api.github.com/users/kkm000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kkm000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kkm000/subscriptions",
      "organizations_url": "https://api.github.com/users/kkm000/orgs",
      "repos_url": "https://api.github.com/users/kkm000/repos",
      "events_url": "https://api.github.com/users/kkm000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kkm000/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-04T19:06:32Z",
    "updated_at": "2017-12-04T19:06:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jtattermusch Thanks, I believe this is correct. My understanding we pretty much decided on leaving the codegen as it.\r\n\r\nI am working on the task and scripts, time allowing. I'll need your help locating C++ plugin binaries in the build tree for packaging."
  }
]
