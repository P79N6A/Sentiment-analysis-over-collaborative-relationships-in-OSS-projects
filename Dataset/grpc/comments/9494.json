[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/275897060",
    "html_url": "https://github.com/grpc/grpc/issues/9494#issuecomment-275897060",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9494",
    "id": 275897060,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTg5NzA2MA==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-29T06:34:47Z",
    "updated_at": "2017-01-29T06:34:47Z",
    "author_association": "MEMBER",
    "body": "Which language are you interested in?\n\nOn Sat, Jan 28, 2017, 9:42 AM Christophe Bornet <notifications@github.com>\nwrote:\n\n> Are there any plans to support reactive streams\n> <http://www.reactive-streams.org/> to get non-blocking back-pressure ?\n>\n> —\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/grpc/grpc/issues/9494>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AJpudf4mdYHZUjPM6qBAWYorcax5E4BHks5rW33vgaJpZM4LwkKg>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/275902838",
    "html_url": "https://github.com/grpc/grpc/issues/9494#issuecomment-275902838",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9494",
    "id": 275902838,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTkwMjgzOA==",
    "user": {
      "login": "cbornet",
      "id": 11633333,
      "node_id": "MDQ6VXNlcjExNjMzMzMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/11633333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cbornet",
      "html_url": "https://github.com/cbornet",
      "followers_url": "https://api.github.com/users/cbornet/followers",
      "following_url": "https://api.github.com/users/cbornet/following{/other_user}",
      "gists_url": "https://api.github.com/users/cbornet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cbornet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cbornet/subscriptions",
      "organizations_url": "https://api.github.com/users/cbornet/orgs",
      "repos_url": "https://api.github.com/users/cbornet/repos",
      "events_url": "https://api.github.com/users/cbornet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cbornet/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-29T09:24:32Z",
    "updated_at": "2017-01-29T09:24:32Z",
    "author_association": "NONE",
    "body": "I'm interested in java and python. Do you mean that it can be supported by languages individually ? I thought it would need protocol adaptations first."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/275933543",
    "html_url": "https://github.com/grpc/grpc/issues/9494#issuecomment-275933543",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9494",
    "id": 275933543,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTkzMzU0Mw==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-29T18:12:45Z",
    "updated_at": "2017-01-29T18:12:45Z",
    "author_association": "MEMBER",
    "body": "Reactive streams are really just sugar on APIs that we already have in\nplace. I don't expect any protocol work would be necessary. It's not\npossible to write gRPC code without support for backpressure.\n\nOn Sun, Jan 29, 2017, 1:24 AM Christophe Bornet <notifications@github.com>\nwrote:\n\n> I'm interested in java and python. Do you mean that it can be supported by\n> languages individually ? I thought it would need protocol adaptations first.\n>\n> —\n> You are receiving this because you commented.\n>\n>\n> Reply to this email directly, view it on GitHub\n> <https://github.com/grpc/grpc/issues/9494#issuecomment-275902838>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AJpudRMF8RGTSKiFfkVR9soWJefmBABLks5rXFrYgaJpZM4LwkKg>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/275946355",
    "html_url": "https://github.com/grpc/grpc/issues/9494#issuecomment-275946355",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9494",
    "id": 275946355,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTk0NjM1NQ==",
    "user": {
      "login": "cbornet",
      "id": 11633333,
      "node_id": "MDQ6VXNlcjExNjMzMzMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/11633333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cbornet",
      "html_url": "https://github.com/cbornet",
      "followers_url": "https://api.github.com/users/cbornet/followers",
      "following_url": "https://api.github.com/users/cbornet/following{/other_user}",
      "gists_url": "https://api.github.com/users/cbornet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cbornet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cbornet/subscriptions",
      "organizations_url": "https://api.github.com/users/cbornet/orgs",
      "repos_url": "https://api.github.com/users/cbornet/repos",
      "events_url": "https://api.github.com/users/cbornet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cbornet/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-29T21:11:50Z",
    "updated_at": "2017-01-29T21:11:50Z",
    "author_association": "NONE",
    "body": "But reactive streams expect some cooperation between subscribers and publishers where the subscriber indicates to the publisher how many work unit it has available. So there must be some signaling protocol from the subscriber to the publisher. Maybe it's already possible with gRPC (I don't know the internal very much) but all the stream back pressure implementations I've seen so far are based on blocking a queue when it's full which may cause deadlocks in some situations."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/275949371",
    "html_url": "https://github.com/grpc/grpc/issues/9494#issuecomment-275949371",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9494",
    "id": 275949371,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTk0OTM3MQ==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-29T21:54:36Z",
    "updated_at": "2017-01-29T21:54:36Z",
    "author_association": "MEMBER",
    "body": "So as far as I know all gRPC implementations have a finite buffer length\nfor messages on a stream which provides the backpressure you're looking for.\n\nOn Sun, Jan 29, 2017, 1:12 PM Christophe Bornet <notifications@github.com>\nwrote:\n\n> But reactive streams expect some cooperation between subscribers and\n> publishers where the subscriber indicates to the publisher how many work\n> unit it has available. So there must be some signaling protocol from the\n> subscriber to the publisher. Maybe it's already possible with gRPC (I don't\n> know the internal very much) but all the stream back pressure\n> implementations I've seen so far are based on blocking a queue when it's\n> full which may cause deadlocks in some situations.\n>\n> —\n> You are receiving this because you commented.\n>\n>\n> Reply to this email directly, view it on GitHub\n> <https://github.com/grpc/grpc/issues/9494#issuecomment-275946355>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AJpudbSzw70f-SGSLL2WVAOe_CWINYUqks5rXQCfgaJpZM4LwkKg>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/275951240",
    "html_url": "https://github.com/grpc/grpc/issues/9494#issuecomment-275951240",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9494",
    "id": 275951240,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTk1MTI0MA==",
    "user": {
      "login": "cbornet",
      "id": 11633333,
      "node_id": "MDQ6VXNlcjExNjMzMzMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/11633333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cbornet",
      "html_url": "https://github.com/cbornet",
      "followers_url": "https://api.github.com/users/cbornet/followers",
      "following_url": "https://api.github.com/users/cbornet/following{/other_user}",
      "gists_url": "https://api.github.com/users/cbornet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cbornet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cbornet/subscriptions",
      "organizations_url": "https://api.github.com/users/cbornet/orgs",
      "repos_url": "https://api.github.com/users/cbornet/repos",
      "events_url": "https://api.github.com/users/cbornet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cbornet/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-29T22:23:34Z",
    "updated_at": "2017-01-29T22:23:34Z",
    "author_association": "NONE",
    "body": "Yes. That's the usual way when doing \"push\" stream. When the bounded queue if full (when the publisher is faster than the subscriber), you either drop new attempts to write to the queue or block the publisher.\r\nBut this has some drawbacks when doing fully non-blocking async architectures (the first being that you block, the second that you may deadlock, ...). That's what reactive streams try to improve by using a \"pull\" stream pattern.\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/277646350",
    "html_url": "https://github.com/grpc/grpc/issues/9494#issuecomment-277646350",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9494",
    "id": 277646350,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NzY0NjM1MA==",
    "user": {
      "login": "cbornet",
      "id": 11633333,
      "node_id": "MDQ6VXNlcjExNjMzMzMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/11633333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cbornet",
      "html_url": "https://github.com/cbornet",
      "followers_url": "https://api.github.com/users/cbornet/followers",
      "following_url": "https://api.github.com/users/cbornet/following{/other_user}",
      "gists_url": "https://api.github.com/users/cbornet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cbornet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cbornet/subscriptions",
      "organizations_url": "https://api.github.com/users/cbornet/orgs",
      "repos_url": "https://api.github.com/users/cbornet/repos",
      "events_url": "https://api.github.com/users/cbornet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cbornet/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-06T10:43:48Z",
    "updated_at": "2017-02-06T10:43:48Z",
    "author_association": "NONE",
    "body": "So it seems HTTP2 flow control on which gRPC is built works that way. Thus you're right, it's only about language implementation.\r\nFor Java there seem to be some effort done in that way although it's missing docs and examples.\r\nFor python, I don't know if there is something like that. Can you tell ?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/294660568",
    "html_url": "https://github.com/grpc/grpc/issues/9494#issuecomment-294660568",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9494",
    "id": 294660568,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDY2MDU2OA==",
    "user": {
      "login": "jroper",
      "id": 105833,
      "node_id": "MDQ6VXNlcjEwNTgzMw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/105833?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jroper",
      "html_url": "https://github.com/jroper",
      "followers_url": "https://api.github.com/users/jroper/followers",
      "following_url": "https://api.github.com/users/jroper/following{/other_user}",
      "gists_url": "https://api.github.com/users/jroper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jroper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jroper/subscriptions",
      "organizations_url": "https://api.github.com/users/jroper/orgs",
      "repos_url": "https://api.github.com/users/jroper/repos",
      "events_url": "https://api.github.com/users/jroper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jroper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-18T03:00:38Z",
    "updated_at": "2017-04-18T03:01:43Z",
    "author_association": "NONE",
    "body": "As the author of the Netty reactive streams implementation (so I know what's involved in implementing reactive streams), I've just taken a cursory glance at the streaming/backpressure APIs that the Java gRPC library offers.  The APIs are not symmetric for sending/receiving, so this will mean two different implementations will need to be created.  Furthermore, the server and client APIs are not shared, though from a streaming/backpressure perspective, they are essentially the same, so each implementation will be duplicated, but that should be straight forward.\r\n\r\nFor receiving data, it should be very straight forward to wrap the Client/ServerCall in a Publisher, the combination of `start`, `request`, `onMessage`, and `onClose` should map well trivially to the reactive streams `onSubscribe`, `request`, `onNext`, `onComplete` and `onError` methods, so implementing that will only be a handful of lines of essentially delegate methods, with a little bit of logic necessary to decode the `onClose` message into either `onComplete` or `onError`.\r\n\r\nFor sending data, it's not so trivial. gRPC offers `isReady`, `sendMessage`, and `onReady`, plus completion/error handling. This doesn't map trivially down onto the reactive streams `request` and `onNext` mechanism, so to implement it, some state (outstanding requested messages, with high/low watermarks for triggering more requests) will need to be kept, and concurrency will have to be dealt with, since this state will be modified by callbacks invoked by both the gRPC and the reactive streams publisher implementations concurrently.  It's not impossible, it's just not trivial.  One thing that would make it a lot easier is if the implementation of `ClientCall` (I haven't looked in depth at `ServerCall`) would expose its underlying executor, this would allow the invocation of callbacks coming from the publisher to the same thread pool with the same serializability guarantees offered by the callbacks executed by gRPC on the listener, and would essentially eliminate the concurrency issues."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/340408028",
    "html_url": "https://github.com/grpc/grpc/issues/9494#issuecomment-340408028",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9494",
    "id": 340408028,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDQwODAyOA==",
    "user": {
      "login": "mushtaq",
      "id": 5066,
      "node_id": "MDQ6VXNlcjUwNjY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5066?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mushtaq",
      "html_url": "https://github.com/mushtaq",
      "followers_url": "https://api.github.com/users/mushtaq/followers",
      "following_url": "https://api.github.com/users/mushtaq/following{/other_user}",
      "gists_url": "https://api.github.com/users/mushtaq/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mushtaq/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mushtaq/subscriptions",
      "organizations_url": "https://api.github.com/users/mushtaq/orgs",
      "repos_url": "https://api.github.com/users/mushtaq/repos",
      "events_url": "https://api.github.com/users/mushtaq/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mushtaq/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-30T10:46:24Z",
    "updated_at": "2017-10-30T10:46:24Z",
    "author_association": "NONE",
    "body": "It will be really nice if grpc-java supports Reactive-Streams SPI. Is this being considered for a future release?\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/340630225",
    "html_url": "https://github.com/grpc/grpc/issues/9494#issuecomment-340630225",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9494",
    "id": 340630225,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDYzMDIyNQ==",
    "user": {
      "login": "cbornet",
      "id": 11633333,
      "node_id": "MDQ6VXNlcjExNjMzMzMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/11633333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cbornet",
      "html_url": "https://github.com/cbornet",
      "followers_url": "https://api.github.com/users/cbornet/followers",
      "following_url": "https://api.github.com/users/cbornet/following{/other_user}",
      "gists_url": "https://api.github.com/users/cbornet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cbornet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cbornet/subscriptions",
      "organizations_url": "https://api.github.com/users/cbornet/orgs",
      "repos_url": "https://api.github.com/users/cbornet/repos",
      "events_url": "https://api.github.com/users/cbornet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cbornet/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-31T01:10:40Z",
    "updated_at": "2017-10-31T01:11:19Z",
    "author_association": "NONE",
    "body": "See https://github.com/salesforce/grpc-java-contrib/tree/master/rxgrpc for RxJava2 generator plugin with back-pressure enabled."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/350848556",
    "html_url": "https://github.com/grpc/grpc/issues/9494#issuecomment-350848556",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9494",
    "id": 350848556,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDg0ODU1Ng==",
    "user": {
      "login": "ncteisen",
      "id": 6148140,
      "node_id": "MDQ6VXNlcjYxNDgxNDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6148140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ncteisen",
      "html_url": "https://github.com/ncteisen",
      "followers_url": "https://api.github.com/users/ncteisen/followers",
      "following_url": "https://api.github.com/users/ncteisen/following{/other_user}",
      "gists_url": "https://api.github.com/users/ncteisen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ncteisen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ncteisen/subscriptions",
      "organizations_url": "https://api.github.com/users/ncteisen/orgs",
      "repos_url": "https://api.github.com/users/ncteisen/repos",
      "events_url": "https://api.github.com/users/ncteisen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ncteisen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-11T20:29:38Z",
    "updated_at": "2017-12-11T20:29:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "Closing in favor of the RFC"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/350855157",
    "html_url": "https://github.com/grpc/grpc/issues/9494#issuecomment-350855157",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9494",
    "id": 350855157,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDg1NTE1Nw==",
    "user": {
      "login": "cbornet",
      "id": 11633333,
      "node_id": "MDQ6VXNlcjExNjMzMzMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/11633333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cbornet",
      "html_url": "https://github.com/cbornet",
      "followers_url": "https://api.github.com/users/cbornet/followers",
      "following_url": "https://api.github.com/users/cbornet/following{/other_user}",
      "gists_url": "https://api.github.com/users/cbornet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cbornet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cbornet/subscriptions",
      "organizations_url": "https://api.github.com/users/cbornet/orgs",
      "repos_url": "https://api.github.com/users/cbornet/repos",
      "events_url": "https://api.github.com/users/cbornet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cbornet/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-11T20:55:03Z",
    "updated_at": "2017-12-11T20:55:03Z",
    "author_association": "NONE",
    "body": "@ncteisen which RFC ?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/350855758",
    "html_url": "https://github.com/grpc/grpc/issues/9494#issuecomment-350855758",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9494",
    "id": 350855758,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDg1NTc1OA==",
    "user": {
      "login": "cbornet",
      "id": 11633333,
      "node_id": "MDQ6VXNlcjExNjMzMzMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/11633333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cbornet",
      "html_url": "https://github.com/cbornet",
      "followers_url": "https://api.github.com/users/cbornet/followers",
      "following_url": "https://api.github.com/users/cbornet/following{/other_user}",
      "gists_url": "https://api.github.com/users/cbornet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cbornet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cbornet/subscriptions",
      "organizations_url": "https://api.github.com/users/cbornet/orgs",
      "repos_url": "https://api.github.com/users/cbornet/repos",
      "events_url": "https://api.github.com/users/cbornet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cbornet/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-11T20:57:19Z",
    "updated_at": "2017-12-11T20:57:19Z",
    "author_association": "NONE",
    "body": "BTW the reactive bindings are now in https://github.com/salesforce/reactive-grpc and support both Rx-Java 2 and Reactor"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/350855886",
    "html_url": "https://github.com/grpc/grpc/issues/9494#issuecomment-350855886",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9494",
    "id": 350855886,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDg1NTg4Ng==",
    "user": {
      "login": "ncteisen",
      "id": 6148140,
      "node_id": "MDQ6VXNlcjYxNDgxNDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6148140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ncteisen",
      "html_url": "https://github.com/ncteisen",
      "followers_url": "https://api.github.com/users/ncteisen/followers",
      "following_url": "https://api.github.com/users/ncteisen/following{/other_user}",
      "gists_url": "https://api.github.com/users/ncteisen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ncteisen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ncteisen/subscriptions",
      "organizations_url": "https://api.github.com/users/ncteisen/orgs",
      "repos_url": "https://api.github.com/users/ncteisen/repos",
      "events_url": "https://api.github.com/users/ncteisen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ncteisen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-11T20:57:46Z",
    "updated_at": "2017-12-11T20:57:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "This one: https://github.com/grpc/proposal/pull/33\r\n\r\nDoes that fulfill this bug? We are doing quick triaging of backlogs today. If this is a separate issue we will leave it open"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/350858688",
    "html_url": "https://github.com/grpc/grpc/issues/9494#issuecomment-350858688",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9494",
    "id": 350858688,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDg1ODY4OA==",
    "user": {
      "login": "cbornet",
      "id": 11633333,
      "node_id": "MDQ6VXNlcjExNjMzMzMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/11633333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cbornet",
      "html_url": "https://github.com/cbornet",
      "followers_url": "https://api.github.com/users/cbornet/followers",
      "following_url": "https://api.github.com/users/cbornet/following{/other_user}",
      "gists_url": "https://api.github.com/users/cbornet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cbornet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cbornet/subscriptions",
      "organizations_url": "https://api.github.com/users/cbornet/orgs",
      "repos_url": "https://api.github.com/users/cbornet/repos",
      "events_url": "https://api.github.com/users/cbornet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cbornet/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-11T21:08:21Z",
    "updated_at": "2017-12-11T21:08:21Z",
    "author_association": "NONE",
    "body": "The RFC you mention is only for C++.\r\nThat said it's already totally possible to implement Reactive-Streams over gRPC as is done for Java by reactive-grpc. So I guess this issue can be closed as the rest is language dependant."
  }
]
