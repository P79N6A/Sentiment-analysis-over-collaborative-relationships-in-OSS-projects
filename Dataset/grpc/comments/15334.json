[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/390154005",
    "html_url": "https://github.com/grpc/grpc/issues/15334#issuecomment-390154005",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15334",
    "id": 390154005,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDE1NDAwNQ==",
    "user": {
      "login": "bo0rsh201",
      "id": 1555562,
      "node_id": "MDQ6VXNlcjE1NTU1NjI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1555562?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bo0rsh201",
      "html_url": "https://github.com/bo0rsh201",
      "followers_url": "https://api.github.com/users/bo0rsh201/followers",
      "following_url": "https://api.github.com/users/bo0rsh201/following{/other_user}",
      "gists_url": "https://api.github.com/users/bo0rsh201/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bo0rsh201/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bo0rsh201/subscriptions",
      "organizations_url": "https://api.github.com/users/bo0rsh201/orgs",
      "repos_url": "https://api.github.com/users/bo0rsh201/repos",
      "events_url": "https://api.github.com/users/bo0rsh201/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bo0rsh201/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-18T09:40:54Z",
    "updated_at": "2018-05-18T09:40:54Z",
    "author_association": "NONE",
    "body": "Does this plan include php extension or python only? \r\nSorry, but it's not clear from the description, because you mention php related issues, but labels include only \"lang/Python\""
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/390219190",
    "html_url": "https://github.com/grpc/grpc/issues/15334#issuecomment-390219190",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15334",
    "id": 390219190,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDIxOTE5MA==",
    "user": {
      "login": "ericgribkoff",
      "id": 5067076,
      "node_id": "MDQ6VXNlcjUwNjcwNzY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5067076?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ericgribkoff",
      "html_url": "https://github.com/ericgribkoff",
      "followers_url": "https://api.github.com/users/ericgribkoff/followers",
      "following_url": "https://api.github.com/users/ericgribkoff/following{/other_user}",
      "gists_url": "https://api.github.com/users/ericgribkoff/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ericgribkoff/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ericgribkoff/subscriptions",
      "organizations_url": "https://api.github.com/users/ericgribkoff/orgs",
      "repos_url": "https://api.github.com/users/ericgribkoff/repos",
      "events_url": "https://api.github.com/users/ericgribkoff/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ericgribkoff/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-18T14:09:08Z",
    "updated_at": "2018-05-18T14:09:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "The fix should apply to all wrapped languages, including PHP. I updated the issue label. There will likely be some per language configuration necessary to enable the fix (e.g., setting a build flag to tell core to register atfork handlers to properly clean up before and after the fork syscall), but the fix itself will be in the c-core layer and so available to any wrapped language."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/390238107",
    "html_url": "https://github.com/grpc/grpc/issues/15334#issuecomment-390238107",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15334",
    "id": 390238107,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDIzODEwNw==",
    "user": {
      "login": "bo0rsh201",
      "id": 1555562,
      "node_id": "MDQ6VXNlcjE1NTU1NjI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1555562?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bo0rsh201",
      "html_url": "https://github.com/bo0rsh201",
      "followers_url": "https://api.github.com/users/bo0rsh201/followers",
      "following_url": "https://api.github.com/users/bo0rsh201/following{/other_user}",
      "gists_url": "https://api.github.com/users/bo0rsh201/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bo0rsh201/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bo0rsh201/subscriptions",
      "organizations_url": "https://api.github.com/users/bo0rsh201/orgs",
      "repos_url": "https://api.github.com/users/bo0rsh201/repos",
      "events_url": "https://api.github.com/users/bo0rsh201/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bo0rsh201/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-18T15:10:37Z",
    "updated_at": "2018-05-18T15:10:37Z",
    "author_association": "NONE",
    "body": "sounds great, thank you"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/397048855",
    "html_url": "https://github.com/grpc/grpc/issues/15334#issuecomment-397048855",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15334",
    "id": 397048855,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzA0ODg1NQ==",
    "user": {
      "login": "evanj",
      "id": 675151,
      "node_id": "MDQ6VXNlcjY3NTE1MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/675151?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/evanj",
      "html_url": "https://github.com/evanj",
      "followers_url": "https://api.github.com/users/evanj/followers",
      "following_url": "https://api.github.com/users/evanj/following{/other_user}",
      "gists_url": "https://api.github.com/users/evanj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/evanj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/evanj/subscriptions",
      "organizations_url": "https://api.github.com/users/evanj/orgs",
      "repos_url": "https://api.github.com/users/evanj/repos",
      "events_url": "https://api.github.com/users/evanj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/evanj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-13T18:58:39Z",
    "updated_at": "2018-06-13T18:58:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "Re: server support: I need gRPCs servers to be able to fork() and exec() to do work that then gets captured by the original parent process, without gRPC interfering. We've [run into cases where gRPC logging messages get written to the new stdout/stderr in this subprocess](https://github.com/grpc/grpc/issues/13873#issuecomment-372409083), which causes problems when we then try to use that output."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/422190433",
    "html_url": "https://github.com/grpc/grpc/issues/15334#issuecomment-422190433",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15334",
    "id": 422190433,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMjE5MDQzMw==",
    "user": {
      "login": "srini100",
      "id": 35056280,
      "node_id": "MDQ6VXNlcjM1MDU2Mjgw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/35056280?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/srini100",
      "html_url": "https://github.com/srini100",
      "followers_url": "https://api.github.com/users/srini100/followers",
      "following_url": "https://api.github.com/users/srini100/following{/other_user}",
      "gists_url": "https://api.github.com/users/srini100/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/srini100/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/srini100/subscriptions",
      "organizations_url": "https://api.github.com/users/srini100/orgs",
      "repos_url": "https://api.github.com/users/srini100/repos",
      "events_url": "https://api.github.com/users/srini100/events{/privacy}",
      "received_events_url": "https://api.github.com/users/srini100/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-17T22:18:58Z",
    "updated_at": "2018-09-17T22:18:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "Marking this issues closed. To summarize, release 1.15.0 now  has client side fork() support for gRPC-Python. See [release notes](https://github.com/grpc/grpc/releases) for details. Use case mentioned in https://github.com/grpc/grpc/issues/13873 is now supported.\r\n\r\n @bo0rsh201, note that this is only for gRPC-Python. The fix does not apply to PHP extension."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/447534000",
    "html_url": "https://github.com/grpc/grpc/issues/15334#issuecomment-447534000",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15334",
    "id": 447534000,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NzUzNDAwMA==",
    "user": {
      "login": "jianlirong",
      "id": 519124,
      "node_id": "MDQ6VXNlcjUxOTEyNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/519124?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jianlirong",
      "html_url": "https://github.com/jianlirong",
      "followers_url": "https://api.github.com/users/jianlirong/followers",
      "following_url": "https://api.github.com/users/jianlirong/following{/other_user}",
      "gists_url": "https://api.github.com/users/jianlirong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jianlirong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jianlirong/subscriptions",
      "organizations_url": "https://api.github.com/users/jianlirong/orgs",
      "repos_url": "https://api.github.com/users/jianlirong/repos",
      "events_url": "https://api.github.com/users/jianlirong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jianlirong/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-15T03:38:52Z",
    "updated_at": "2018-12-15T03:38:52Z",
    "author_association": "NONE",
    "body": "@ericgribkoff , \r\n\r\nFirst of all, I am new to gRPC. So, maybe my question is sort of naive. \r\n\r\nI am wondering whether the plan you mentioned above was accomplished:\r\n\r\n_Our current plan is to support fork() for gRPC clients with the following semantics: it will be valid for a process to fork() with active channels and on-going RPCs. The parent process will be able to continue using these channels and RPCs with no changes. The child process will not have access to the channels and RPCs created in the parent. The child will be able to establish new gRPC channels and initiate its own RPCs. In other words, after fork(), the parent and child process will have access to entirely \"separate\" instances of the gRPC library which they can each use independently._\r\n\r\nI am going to use the C++/core APIs. Another question is that: if the above plan has been accomplished, is somewhere I find some sample code to achieve: _the parent and child process will have access to entirely \"separate\" instances of the gRPC library which they can each use independently_ ? \r\n\r\nMany thanks in advance.\r\n\r\nLirong"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/449102504",
    "html_url": "https://github.com/grpc/grpc/issues/15334#issuecomment-449102504",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15334",
    "id": 449102504,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0OTEwMjUwNA==",
    "user": {
      "login": "ericgribkoff",
      "id": 5067076,
      "node_id": "MDQ6VXNlcjUwNjcwNzY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5067076?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ericgribkoff",
      "html_url": "https://github.com/ericgribkoff",
      "followers_url": "https://api.github.com/users/ericgribkoff/followers",
      "following_url": "https://api.github.com/users/ericgribkoff/following{/other_user}",
      "gists_url": "https://api.github.com/users/ericgribkoff/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ericgribkoff/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ericgribkoff/subscriptions",
      "organizations_url": "https://api.github.com/users/ericgribkoff/orgs",
      "repos_url": "https://api.github.com/users/ericgribkoff/repos",
      "events_url": "https://api.github.com/users/ericgribkoff/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ericgribkoff/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-20T19:03:52Z",
    "updated_at": "2018-12-20T19:03:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jianlirong The plan mentioned above was accomplished for gRPC Python clients in https://github.com/grpc/grpc/pull/16264. The PR description provides details about how that works, copied here:\r\n\r\n> ### gRPC Core's API for fork support\r\n> A process may fork after invoking grpc_init() and use gRPC in the child if and only if the child process first destroys all gRPC resources inherited from the parent process and invokes grpc_shutdown().\r\n> Subsequent to this, the child will be able to re-initialize and use gRPC. After fork, the parent process will be able to continue to use existing gRPC resources such as channels and calls without interference\r\n> from the child process.\r\n> \r\n> ### gRPC Python behavior at fork()\r\n> To facilitate gRPC Python applications meeting the above constraints, gRPC Python will automatically destroy and shutdown all gRPC Core resources in the child's post-fork handler, including cancelling in-flight calls. From the client's perspective, the child process is now free to create new channels and use gRPC.\r\n\r\nIf you are planning to use core APIs directly, the contract for core's fork support is that the child process must destroy all of its inherited gRPC objects, triggering a complete grpc library shutdown. Core will ensure that, e.g., cancelling calls in the child process does not write to the wire, so this will not interfere with active calls in the parent process. Achieving gRPC core shutdown in the child is accomplished in the gRPC Python layer by explicitly tracked all user-created channels, then `close()`ing them in the child's post-fork Python handler."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/449672776",
    "html_url": "https://github.com/grpc/grpc/issues/15334#issuecomment-449672776",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15334",
    "id": 449672776,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0OTY3Mjc3Ng==",
    "user": {
      "login": "jianlirong",
      "id": 519124,
      "node_id": "MDQ6VXNlcjUxOTEyNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/519124?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jianlirong",
      "html_url": "https://github.com/jianlirong",
      "followers_url": "https://api.github.com/users/jianlirong/followers",
      "following_url": "https://api.github.com/users/jianlirong/following{/other_user}",
      "gists_url": "https://api.github.com/users/jianlirong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jianlirong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jianlirong/subscriptions",
      "organizations_url": "https://api.github.com/users/jianlirong/orgs",
      "repos_url": "https://api.github.com/users/jianlirong/repos",
      "events_url": "https://api.github.com/users/jianlirong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jianlirong/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-24T00:44:28Z",
    "updated_at": "2018-12-24T00:44:28Z",
    "author_association": "NONE",
    "body": "Got it. Thanks for the reply, @ericgribkoff .\r\n\r\nLirong"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/453363159",
    "html_url": "https://github.com/grpc/grpc/issues/15334#issuecomment-453363159",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15334",
    "id": 453363159,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MzM2MzE1OQ==",
    "user": {
      "login": "Chaz6Chez",
      "id": 22535862,
      "node_id": "MDQ6VXNlcjIyNTM1ODYy",
      "avatar_url": "https://avatars1.githubusercontent.com/u/22535862?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Chaz6Chez",
      "html_url": "https://github.com/Chaz6Chez",
      "followers_url": "https://api.github.com/users/Chaz6Chez/followers",
      "following_url": "https://api.github.com/users/Chaz6Chez/following{/other_user}",
      "gists_url": "https://api.github.com/users/Chaz6Chez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Chaz6Chez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Chaz6Chez/subscriptions",
      "organizations_url": "https://api.github.com/users/Chaz6Chez/orgs",
      "repos_url": "https://api.github.com/users/Chaz6Chez/repos",
      "events_url": "https://api.github.com/users/Chaz6Chez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Chaz6Chez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-11T03:20:30Z",
    "updated_at": "2019-01-11T03:20:30Z",
    "author_association": "NONE",
    "body": "> Marking this issues closed. To summarize, release 1.15.0 now has client side fork() support for gRPC-Python. See [release notes](https://github.com/grpc/grpc/releases) for details. Use case mentioned in #13873 is now supported.\r\n> \r\n> @bo0rsh201, note that this is only for gRPC-Python. The fix does not apply to PHP extension.\r\n\r\nPHP can use dl() to introduce grpc extension, which will be called after fork"
  }
]
