[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/446386810",
    "html_url": "https://github.com/grpc/grpc/issues/17335#issuecomment-446386810",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17335",
    "id": 446386810,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjM4NjgxMA==",
    "user": {
      "login": "soheilhy",
      "id": 394885,
      "node_id": "MDQ6VXNlcjM5NDg4NQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/394885?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/soheilhy",
      "html_url": "https://github.com/soheilhy",
      "followers_url": "https://api.github.com/users/soheilhy/followers",
      "following_url": "https://api.github.com/users/soheilhy/following{/other_user}",
      "gists_url": "https://api.github.com/users/soheilhy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/soheilhy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/soheilhy/subscriptions",
      "organizations_url": "https://api.github.com/users/soheilhy/orgs",
      "repos_url": "https://api.github.com/users/soheilhy/repos",
      "events_url": "https://api.github.com/users/soheilhy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/soheilhy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-11T22:27:46Z",
    "updated_at": "2018-12-11T22:27:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "I see the same flake in end2end:end2end_test@poller=epollex"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/456858184",
    "html_url": "https://github.com/grpc/grpc/issues/17335#issuecomment-456858184",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17335",
    "id": 456858184,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Njg1ODE4NA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-23T16:00:40Z",
    "updated_at": "2019-01-23T16:00:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "Two more recent occurrences:\r\nhttps://source.cloud.google.com/results/invocations/1c14b942-a745-4984-8253-467588b52335/targets/%2F%2Ftest%2Fcpp%2Fend2end:end2end_test@poller%3Depoll1/log\r\nhttps://source.cloud.google.com/results/invocations/e60993db-47d9-4d85-b8ea-28c8fa93c80c/targets/%2F%2Ftest%2Fcpp%2Fend2end:end2end_test@poller%3Depoll1/log\r\n\r\n```\r\n[ RUN      ] SecureEnd2end/SecureEnd2endTest.BlockingAuthMetadataPluginFailure/1\r\nE0119 04:05:40.197043174    6034 backup_poller.cc:110]       run_poller: {\"created\":\"@1547870740.197026060\",\"description\":\"Shutting down timer system\",\"file\":\"src/core/lib/iomgr/timer_generic.cc\",\"file_line\":704}\r\nD0119 04:05:41.198252564    6034 iomgr.cc:100]               Waiting for 1 iomgr objects to be destroyed\r\nD0119 04:05:42.199503314    6034 iomgr.cc:100]               Waiting for 1 iomgr objects to be destroyed\r\nD0119 04:05:43.200895400    6034 iomgr.cc:100]               Waiting for 1 iomgr objects to be destroyed\r\nD0119 04:05:44.202248314    6034 iomgr.cc:100]               Waiting for 1 iomgr objects to be destroyed\r\nD0119 04:05:45.203494675    6034 iomgr.cc:100]               Waiting for 1 iomgr objects to be destroyed\r\nD0119 04:05:46.205300240    6034 iomgr.cc:100]               Waiting for 1 iomgr objects to be destroyed\r\nD0119 04:05:47.206802679    6034 iomgr.cc:100]               Waiting for 1 iomgr objects to be destroyed\r\nD0119 04:05:48.208141632    6034 iomgr.cc:100]               Waiting for 1 iomgr objects to be destroyed\r\nD0119 04:05:49.209871925    6034 iomgr.cc:100]               Waiting for 1 iomgr objects to be destroyed\r\nD0119 04:05:50.210988147    6034 iomgr.cc:131]               Failed to free 1 iomgr objects before shutdown deadline: memory leaks are likely\r\nD0119 04:05:50.211042709    6034 iomgr.cc:79]                LEAKED OBJECT: tcp-client:ipv4:127.0.0.1:7761 fd=9 0x7fe4980035f8\r\nD0119 04:05:50.211124695    6034 metadata.cc:135]            WARNING: 2 metadata elements were leaked\r\nD0119 04:05:50.211147127    6034 metadata.cc:135]            WARNING: 2 metadata elements were leaked\r\nD0119 04:05:50.211290653    6034 metadata.cc:135]            WARNING: 1 metadata elements were leaked\r\nD0119 04:05:50.211301617    6034 metadata.cc:135]            WARNING: 1 metadata elements were leaked\r\nD0119 04:05:50.211307293    6034 metadata.cc:135]            WARNING: 1 metadata elements were leaked\r\nD0119 04:05:50.211314091    6034 metadata.cc:135]            WARNING: 1 metadata elements were leaked\r\nD0119 04:05:50.211325034    6034 slice_intern.cc:315]        WARNING: 1 metadata strings were leaked\r\nD0119 04:05:50.211347253    6034 slice_intern.cc:322]        LEAKED: 2f 67 72 70 63 2e 74 65 73 74 69 6e 67 2e 45 63 68 6f 54 65 73 74 53 65 72 76 69 63 65 2f 52 65 71 75 65 73 74 53 74 72 65 61 6d '/grpc.testing.EchoTestService/RequestStream'\r\nD0119 04:05:50.211357660    6034 slice_intern.cc:315]        WARNING: 2 metadata strings were leaked\r\nD0119 04:05:50.211368111    6034 slice_intern.cc:322]        LEAKED: 2f 67 72 70 63 2e 74 65 73 74 69 6e 67 2e 45 63 68 6f 54 65 73 74 53 65 72 76 69 63 65 2f 55 6e 69 6d 70 6c 65 6d 65 6e 74 65 64 '/grpc.testing.EchoTestService/Unimplemented'\r\nD0119 04:05:50.211431386    6034 slice_intern.cc:322]        LEAKED: 2f 67 72 70 63 2e 74 65 73 74 69 6e 67 2e 45 63 68 6f 54 65 73 74 53 65 72 76 69 63 65 2f 43 68 65 63 6b 43 6c 69 65 6e 74 49 6e 69 74 69 61 6c 4d 65 74 61 64 61 74 61 '/grpc.testing.EchoTestService/CheckClientInitialMetadata'\r\nD0119 04:05:50.211453908    6034 slice_intern.cc:315]        WARNING: 2 metadata strings were leaked\r\nD0119 04:05:50.211462748    6034 slice_intern.cc:322]        LEAKED: 66 6f 6f 2e 74 65 73 74 2e 67 6f 6f 67 6c 65 2e 66 72 'foo.test.google.fr'\r\nD0119 04:05:50.211472171    6034 slice_intern.cc:322]        LEAKED: 2f 67 72 70 63 2e 74 65 73 74 69 6e 67 2e 45 63 68 6f 54 65 73 74 53 65 72 76 69 63 65 2f 42 69 64 69 53 74 72 65 61 6d '/grpc.testing.EchoTestService/BidiStream'\r\nD0119 04:05:50.211485014    6034 slice_intern.cc:315]        WARNING: 1 metadata strings were leaked\r\nD0119 04:05:50.211496290    6034 slice_intern.cc:322]        LEAKED: 2f 67 72 70 63 2e 74 65 73 74 69 6e 67 2e 45 63 68 6f 54 65 73 74 53 65 72 76 69 63 65 2f 52 65 73 70 6f 6e 73 65 53 74 72 65 61 6d '/grpc.testing.EchoTestService/ResponseStream'\r\nD0119 04:05:50.211503037    6034 slice_intern.cc:315]        WARNING: 1 metadata strings were leaked\r\nD0119 04:05:50.211514390    6034 slice_intern.cc:322]        LEAKED: 67 72 70 63 2d 63 2b 2b 2f 31 2e 31 39 2e 30 2d 64 65 76 20 67 72 70 63 2d 63 2f 37 2e 30 2e 30 2d 64 65 76 20 28 6c 69 6e 75 78 3b 20 63 68 74 74 70 32 3b 20 67 6f 6c 64 29 20 65 6e 64 32 65 6e 64 5f 74 65 73 74 'grpc-c++/1.19.0-dev grpc-c/7.0.0-dev (linux; chttp2; gold) end2end_test'\r\nD0119 04:05:50.211555948    6034 slice_intern.cc:315]        WARNING: 1 metadata strings were leaked\r\nD0119 04:05:50.211575520    6034 slice_intern.cc:322]        LEAKED: 2f 67 72 70 63 2e 74 65 73 74 69 6e 67 2e 45 63 68 6f 54 65 73 74 53 65 72 76 69 63 65 2f 45 63 68 6f '/grpc.testing.EchoTestService/Echo'\r\nE0119 04:05:50.211660365    6034 sync_posix.cc:85]           assertion failed: pthread_mutex_lock(mu) == 0\r\n```\r\n\r\nsimilar problem seen for `SecureEnd2end/SecureEnd2endTest.CompositeCallCreds/0`"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/459372714",
    "html_url": "https://github.com/grpc/grpc/issues/17335#issuecomment-459372714",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17335",
    "id": 459372714,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTM3MjcxNA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-31T14:52:55Z",
    "updated_at": "2019-01-31T14:52:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "a TSAN failure:\r\nhttps://source.cloud.google.com/results/invocations/8ab3d2ec-848e-49ef-979a-c02f68b42926/targets/github%2Fgrpc%2Fcpp_linux_tsan_native_x64_clang7.0/tests\r\n\r\n```\r\n==================\r\nWARNING: ThreadSanitizer: heap-use-after-free (pid=16263)\r\n  Read of size 8 at 0x7b48000107e0 by thread T54:\r\n    #0 destroy_call_elem(grpc_call_element*, grpc_call_final_info const*, grpc_closure*) /var/local/git/grpc/src/core/lib/channel/connected_channel.cc:174:40 (end2end_test+0x98d740)\r\n    #1 grpc_call_stack_destroy(grpc_call_stack*, grpc_call_final_info const*, grpc_closure*) /var/local/git/grpc/src/core/lib/channel/channel_stack.cc:217:5 (end2end_test+0xbb2a4c)\r\n    #2 grpc_core::(anonymous namespace)::SubchannelCallDestroy(void*, grpc_error*) /var/local/git/grpc/src/core/ext/filters/client_channel/subchannel.cc:128:3 (end2end_test+0xa15ce8)\r\n    #3 exec_ctx_run(grpc_closure*, grpc_error*) /var/local/git/grpc/src/core/lib/iomgr/exec_ctx.cc:40:3 (end2end_test+0x899609)\r\n    #4 grpc_core::ExecCtx::Flush() /var/local/git/grpc/src/core/lib/iomgr/exec_ctx.cc:148:9 (end2end_test+0x899393)\r\n    #5 end_worker(grpc_pollset*, grpc_pollset_worker*, grpc_pollset_worker**) /var/local/git/grpc/src/core/lib/iomgr/ev_epoll1_linux.cc:978:34 (end2end_test+0x8dc19f)\r\n    #6 pollset_work(grpc_pollset*, grpc_pollset_worker**, long) /var/local/git/grpc/src/core/lib/iomgr/ev_epoll1_linux.cc:1047:3 (end2end_test+0x8d810b)\r\n    #7 pollset_work(grpc_pollset*, grpc_pollset_worker**, long) /var/local/git/grpc/src/core/lib/iomgr/ev_posix.cc:321:21 (end2end_test+0x8d0c24)\r\n    #8 grpc_pollset_work(grpc_pollset*, grpc_pollset_worker**, long) /var/local/git/grpc/src/core/lib/iomgr/pollset.cc:48:10 (end2end_test+0x89b114)\r\n    #9 cq_next(grpc_completion_queue*, gpr_timespec, void*) /var/local/git/grpc/src/core/lib/surface/completion_queue.cc:1039:23 (end2end_test+0x9a8b7e)\r\n    #10 grpc_completion_queue_next /var/local/git/grpc/src/core/lib/surface/completion_queue.cc:1115:10 (end2end_test+0x9a7696)\r\n    #11 grpc::CompletionQueue::AsyncNextInternal(void**, bool*, gpr_timespec) /var/local/git/grpc/src/cpp/common/completion_queue_cc.cc:48:15 (end2end_test+0x918189)\r\n    #12 grpc::CompletionQueue::NextStatus grpc::CompletionQueue::AsyncNext<gpr_timespec>(void**, bool*, gpr_timespec const&) /var/local/git/grpc/include/grpcpp/impl/codegen/completion_queue.h:192:12 (end2end_test+0x93df2c)\r\n    #13 grpc::Server::SyncRequestThreadManager::PollForWork(void**, bool*) /var/local/git/grpc/src/cpp/server/server_cc.cc:613:25 (end2end_test+0x93fec5)\r\n    #14 grpc::ThreadManager::MainWorkLoop() /var/local/git/grpc/src/cpp/thread_manager/thread_manager.cc:150:30 (end2end_test+0x957638)\r\n    #15 grpc::ThreadManager::WorkerThread::Run() /var/local/git/grpc/src/cpp/thread_manager/thread_manager.cc:42:13 (end2end_test+0x9575a8)\r\n    #16 grpc::ThreadManager::WorkerThread::WorkerThread(grpc::ThreadManager*)::$_0::operator()(void*) const /var/local/git/grpc/src/cpp/thread_manager/thread_manager.cc:36:69 (end2end_test+0x958854)\r\n    #17 grpc::ThreadManager::WorkerThread::WorkerThread(grpc::ThreadManager*)::$_0::__invoke(void*) /var/local/git/grpc/src/cpp/thread_manager/thread_manager.cc:36:7 (end2end_test+0x9587f8)\r\n    #18 grpc_core::(anonymous namespace)::ThreadInternalsPosix::ThreadInternalsPosix(char const*, void (*)(void*), void*, bool*)::{lambda(void*)#1}::operator()(void*) const /var/local/git/grpc/src/core/lib/gprpp/thd_posix.cc:100:27 (end2end_test+0x964b9c)\r\n    #19 grpc_core::(anonymous namespace)::ThreadInternalsPosix::ThreadInternalsPosix(char const*, void (*)(void*), void*, bool*)::{lambda(void*)#1}::__invoke(void*) /var/local/git/grpc/src/core/lib/gprpp/thd_posix.cc:74:25 (end2end_test+0x964a38)\r\n  Previous write of size 8 at 0x7b48000107e0 by thread T3:\r\n    #0 free /tmp/clang-build/src/compiler-rt/lib/tsan/rtl/tsan_interceptors.cc:709:3 (end2end_test+0x6c0884)\r\n    #1 gpr_free /var/local/git/grpc/src/core/lib/gpr/alloc.cc:77:3 (end2end_test+0x95c2d4)\r\n    #2 grpc_core::(anonymous namespace)::ConnectionDestroy(void*, grpc_error*) /var/local/git/grpc/src/core/ext/filters/client_channel/subchannel.cc:979:3 (end2end_test+0xa1a0a8)\r\n    #3 exec_ctx_run(grpc_closure*, grpc_error*) /var/local/git/grpc/src/core/lib/iomgr/exec_ctx.cc:40:3 (end2end_test+0x899609)\r\n    #4 grpc_core::ExecCtx::Flush() /var/local/git/grpc/src/core/lib/iomgr/exec_ctx.cc:148:9 (end2end_test+0x899393)\r\n    #5 end_worker(grpc_pollset*, grpc_pollset_worker*, grpc_pollset_worker**) /var/local/git/grpc/src/core/lib/iomgr/ev_epoll1_linux.cc:947:36 (end2end_test+0x8dbea0)\r\n    #6 pollset_work(grpc_pollset*, grpc_pollset_worker**, long) /var/local/git/grpc/src/core/lib/iomgr/ev_epoll1_linux.cc:1047:3 (end2end_test+0x8d810b)\r\n    #7 pollset_work(grpc_pollset*, grpc_pollset_worker**, long) /var/local/git/grpc/src/core/lib/iomgr/ev_posix.cc:321:21 (end2end_test+0x8d0c24)\r\n    #8 grpc_pollset_work(grpc_pollset*, grpc_pollset_worker**, long) /var/local/git/grpc/src/core/lib/iomgr/pollset.cc:48:10 (end2end_test+0x89b114)\r\n    #9 cq_next(grpc_completion_queue*, gpr_timespec, void*) /var/local/git/grpc/src/core/lib/surface/completion_queue.cc:1039:23 (end2end_test+0x9a8b7e)\r\n    #10 grpc_completion_queue_next /var/local/git/grpc/src/core/lib/surface/completion_queue.cc:1115:10 (end2end_test+0x9a7696)\r\n    #11 grpc::CompletionQueue::AsyncNextInternal(void**, bool*, gpr_timespec) /var/local/git/grpc/src/cpp/common/completion_queue_cc.cc:48:15 (end2end_test+0x918189)\r\n    #12 grpc::CompletionQueue::NextStatus grpc::CompletionQueue::AsyncNext<gpr_timespec>(void**, bool*, gpr_timespec const&) /var/local/git/grpc/include/grpcpp/impl/codegen/completion_queue.h:192:12 (end2end_test+0x93df2c)\r\n    #13 grpc::Server::SyncRequestThreadManager::PollForWork(void**, bool*) /var/local/git/grpc/src/cpp/server/server_cc.cc:613:25 (end2end_test+0x93fec5)\r\n    #14 grpc::ThreadManager::MainWorkLoop() /var/local/git/grpc/src/cpp/thread_manager/thread_manager.cc:150:30 (end2end_test+0x957638)\r\n    #15 grpc::ThreadManager::WorkerThread::Run() /var/local/git/grpc/src/cpp/thread_manager/thread_manager.cc:42:13 (end2end_test+0x9575a8)\r\n    #16 grpc::ThreadManager::WorkerThread::WorkerThread(grpc::ThreadManager*)::$_0::operator()(void*) const /var/local/git/grpc/src/cpp/thread_manager/thread_manager.cc:36:69 (end2end_test+0x958854)\r\n    #17 grpc::ThreadManager::WorkerThread::WorkerThread(grpc::ThreadManager*)::$_0::__invoke(void*) /var/local/git/grpc/src/cpp/thread_manager/thread_manager.cc:36:7 (end2end_test+0x9587f8)\r\n    #18 grpc_core::(anonymous namespace)::ThreadInternalsPosix::ThreadInternalsPosix(char const*, void (*)(void*), void*, bool*)::{lambda(void*)#1}::operator()(void*) const /var/local/git/grpc/src/core/lib/gprpp/thd_posix.cc:100:27 (end2end_test+0x964b9c)\r\n    #19 grpc_core::(anonymous namespace)::ThreadInternalsPosix::ThreadInternalsPosix(char const*, void (*)(void*), void*, bool*)::{lambda(void*)#1}::__invoke(void*) /var/local/git/grpc/src/core/lib/gprpp/thd_posix.cc:74:25 (end2end_test+0x964a38)\r\n  Thread T54 'grpcpp_sync_ser' (tid=18555, running) created by main thread at:\r\n    #0 pthread_create /tmp/clang-build/src/compiler-rt/lib/tsan/rtl/tsan_interceptors.cc:992:3 (end2end_test+0x6c1f15)\r\n    #1 grpc_core::(anonymous namespace)::ThreadInternalsPosix::ThreadInternalsPosix(char const*, void (*)(void*), void*, bool*) /var/local/git/grpc/src/core/lib/gprpp/thd_posix.cc:73:10 (end2end_test+0x964746)\r\n    #2 grpc_core::(anonymous namespace)::ThreadInternalsPosix* grpc_core::New<grpc_core::(anonymous namespace)::ThreadInternalsPosix, char const*&, void (*&)(void*), void*&, bool*>(char const*&, void (*&)(void*), void*&, bool*&&) /var/local/git/grpc/./src/core/lib/gprpp/memory.h:47:18 (end2end_test+0x964403)\r\n    #3 grpc_core::Thread::Thread(char const*, void (*)(void*), void*, bool*) /var/local/git/grpc/src/core/lib/gprpp/thd_posix.cc:142:7 (end2end_test+0x964224)\r\n    #4 grpc::ThreadManager::WorkerThread::WorkerThread(grpc::ThreadManager*) /var/local/git/grpc/src/cpp/thread_manager/thread_manager.cc:34:10 (end2end_test+0x95749d)\r\n    #5 grpc::ThreadManager::Initialize() /var/local/git/grpc/src/cpp/thread_manager/thread_manager.cc:142:9 (end2end_test+0x958748)\r\n    #6 grpc::Server::SyncRequestThreadManager::Start() /var/local/git/grpc/src/cpp/server/server_cc.cc:699:7 (end2end_test+0x93d8e5)\r\n    #7 grpc::Server::Start(grpc::ServerCompletionQueue**, unsigned long) /var/local/git/grpc/src/cpp/server/server_cc.cc:974:12 (end2end_test+0x9375ec)\r\n    #8 grpc::ServerBuilder::BuildAndStart() /var/local/git/grpc/src/cpp/server/server_builder.cc:371:11 (end2end_test+0x922503)\r\n    #9 grpc::testing::(anonymous namespace)::End2endTest::BuildAndStartServer(std::shared_ptr<grpc::AuthMetadataProcessor> const&) /var/local/git/grpc/test/cpp/end2end/end2end_test.cc:299:23 (end2end_test+0x739605)\r\n    #10 grpc::testing::(anonymous namespace)::End2endTest::StartServer(std::shared_ptr<grpc::AuthMetadataProcessor> const&) /var/local/git/grpc/test/cpp/end2end/end2end_test.cc:255:5 (end2end_test+0x738f9a)\r\n    #11 grpc::testing::(anonymous namespace)::End2endTest::ResetChannel() /var/local/git/grpc/test/cpp/end2end/end2end_test.cc:310:7 (end2end_test+0x738589)\r\n    #12 grpc::testing::(anonymous namespace)::End2endTest::ResetStub() /var/local/git/grpc/test/cpp/end2end/end2end_test.cc:341:5 (end2end_test+0x738058)\r\n    #13 grpc::testing::(anonymous namespace)::SecureEnd2endTest_AuthMetadataPluginKeyFailure_Test::TestBody() /var/local/git/grpc/test/cpp/end2end/end2end_test.cc:1668:3 (end2end_test+0x77f298)\r\n    #14 void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) /var/local/git/grpc/third_party/googletest/googletest/src/gtest.cc:2402:10 (end2end_test+0xf974a6)\r\n    #15 void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) /var/local/git/grpc/third_party/googletest/googletest/src/gtest.cc:2438:14 (end2end_test+0xf72bd2)\r\n    #16 testing::Test::Run() /var/local/git/grpc/third_party/googletest/googletest/src/gtest.cc:2474:5 (end2end_test+0xf4de0e)\r\n    #17 testing::TestInfo::Run() /var/local/git/grpc/third_party/googletest/googletest/src/gtest.cc:2656:11 (end2end_test+0xf4efb6)\r\n    #18 testing::TestCase::Run() /var/local/git/grpc/third_party/googletest/googletest/src/gtest.cc:2774:28 (end2end_test+0xf4f9e7)\r\n    #19 testing::internal::UnitTestImpl::RunAllTests() /var/local/git/grpc/third_party/googletest/googletest/src/gtest.cc:4649:43 (end2end_test+0xf5aa91)\r\n    #20 bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) /var/local/git/grpc/third_party/googletest/googletest/src/gtest.cc:2402:10 (end2end_test+0xf9e446)\r\n    #21 bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) /var/local/git/grpc/third_party/googletest/googletest/src/gtest.cc:2438:14 (end2end_test+0xf769f8)\r\n    #22 testing::UnitTest::Run() /var/local/git/grpc/third_party/googletest/googletest/src/gtest.cc:4257:10 (end2end_test+0xf5a50b)\r\n    #23 RUN_ALL_TESTS() /var/local/git/grpc/third_party/googletest/googletest/include/gtest/gtest.h:2233:46 (end2end_test+0x7a2c17)\r\n    #24 main /var/local/git/grpc/test/cpp/end2end/end2end_test.cc:1940:10 (end2end_test+0x733b55)\r\n  Thread T3 'grpcpp_sync_ser' (tid=18762, running) created by thread T55 at:\r\n    #0 pthread_create /tmp/clang-build/src/compiler-rt/lib/tsan/rtl/tsan_interceptors.cc:992:3 (end2end_test+0x6c1f15)\r\n    #1 grpc_core::(anonymous namespace)::ThreadInternalsPosix::ThreadInternalsPosix(char const*, void (*)(void*), void*, bool*) /var/local/git/grpc/src/core/lib/gprpp/thd_posix.cc:73:10 (end2end_test+0x964746)\r\n    #2 grpc_core::(anonymous namespace)::ThreadInternalsPosix* grpc_core::New<grpc_core::(anonymous namespace)::ThreadInternalsPosix, char const*&, void (*&)(void*), void*&, bool*>(char const*&, void (*&)(void*), void*&, bool*&&) /var/local/git/grpc/./src/core/lib/gprpp/memory.h:47:18 (end2end_test+0x964403)\r\n    #3 grpc_core::Thread::Thread(char const*, void (*)(void*), void*, bool*) /var/local/git/grpc/src/core/lib/gprpp/thd_posix.cc:142:7 (end2end_test+0x964224)\r\n    #4 grpc::ThreadManager::WorkerThread::WorkerThread(grpc::ThreadManager*) /var/local/git/grpc/src/cpp/thread_manager/thread_manager.cc:34:10 (end2end_test+0x95749d)\r\n    #5 grpc::ThreadManager::MainWorkLoop() /var/local/git/grpc/src/cpp/thread_manager/thread_manager.cc:180:17 (end2end_test+0x9578bc)\r\n    #6 grpc::ThreadManager::WorkerThread::Run() /var/local/git/grpc/src/cpp/thread_manager/thread_manager.cc:42:13 (end2end_test+0x9575a8)\r\n    #7 grpc::ThreadManager::WorkerThread::WorkerThread(grpc::ThreadManager*)::$_0::operator()(void*) const /var/local/git/grpc/src/cpp/thread_manager/thread_manager.cc:36:69 (end2end_test+0x958854)\r\n    #8 grpc::ThreadManager::WorkerThread::WorkerThread(grpc::ThreadManager*)::$_0::__invoke(void*) /var/local/git/grpc/src/cpp/thread_manager/thread_manager.cc:36:7 (end2end_test+0x9587f8)\r\n    #9 grpc_core::(anonymous namespace)::ThreadInternalsPosix::ThreadInternalsPosix(char const*, void (*)(void*), void*, bool*)::{lambda(void*)#1}::operator()(void*) const /var/local/git/grpc/src/core/lib/gprpp/thd_posix.cc:100:27 (end2end_test+0x964b9c)\r\n    #10 grpc_core::(anonymous namespace)::ThreadInternalsPosix::ThreadInternalsPosix(char const*, void (*)(void*), void*, bool*)::{lambda(void*)#1}::__invoke(void*) /var/local/git/grpc/src/core/lib/gprpp/thd_posix.cc:74:25 (end2end_test+0x964a38)\r\nSUMMARY: ThreadSanitizer: heap-use-after-free /var/local/git/grpc/src/core/lib/channel/connected_channel.cc:174:40 in destroy_call_elem(grpc_call_element*, grpc_call_final_info const*, grpc_closure*)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/459778784",
    "html_url": "https://github.com/grpc/grpc/issues/17335#issuecomment-459778784",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17335",
    "id": 459778784,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTc3ODc4NA==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-01T16:21:42Z",
    "updated_at": "2019-02-01T16:21:42Z",
    "author_association": "MEMBER",
    "body": "Seeing this again at https://source.cloud.google.com/results/invocations/9f90aab4-2223-4ef7-86a6-136bdbcc52c0/targets/github%2Fgrpc%2Fcpp_linux_tsan_native_x64_clang7.0/tests\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/460966107",
    "html_url": "https://github.com/grpc/grpc/issues/17335#issuecomment-460966107",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17335",
    "id": 460966107,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDk2NjEwNw==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-06T10:03:18Z",
    "updated_at": "2019-02-06T10:03:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "This has been failing 75% of C++ TSAN builds on master for the past week."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/460966529",
    "html_url": "https://github.com/grpc/grpc/issues/17335#issuecomment-460966529",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17335",
    "id": 460966529,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDk2NjUyOQ==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-06T10:04:40Z",
    "updated_at": "2019-02-06T10:05:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Recent logs:\r\n\r\nhttps://source.cloud.google.com/results/invocations/8a86aa55-0733-42fa-89a7-2f866ceb3ace\r\nhttps://source.cloud.google.com/results/invocations/ff7b1446-1b41-4987-9cc6-f5bce8d1aee8\r\nhttps://source.cloud.google.com/results/invocations/c1e7e93e-4701-4ebe-9541-0f5a2df12d9e\r\nhttps://source.cloud.google.com/results/invocations/8ac52660-2757-49a5-9200-e12dcb420431\r\n\r\n```\r\n==================\r\nWARNING: ThreadSanitizer: heap-use-after-free (pid=27515)\r\n  Read of size 8 at 0x7b48000107e0 by thread T16:\r\n    #0 destroy_call_elem(grpc_call_element*, grpc_call_final_info const*, grpc_closure*) /var/local/git/grpc/src/core/lib/channel/connected_channel.cc:174:40 (end2end_test+0x98cd20)\r\n    #1 grpc_call_stack_destroy(grpc_call_stack*, grpc_call_final_info const*, grpc_closure*) /var/local/git/grpc/src/core/lib/channel/channel_stack.cc:217:5 (end2end_test+0xbb1fdc)\r\n    #2 grpc_core::(anonymous namespace)::SubchannelCallDestroy(void*, grpc_error*) /var/local/git/grpc/src/core/ext/filters/client_channel/subchannel.cc:128:3 (end2end_test+0xa15258)\r\n    #3 exec_ctx_run(grpc_closure*, grpc_error*) /var/local/git/grpc/src/core/lib/iomgr/exec_ctx.cc:40:3 (end2end_test+0x899079)\r\n    #4 grpc_core::ExecCtx::Flush() /var/local/git/grpc/src/core/lib/iomgr/exec_ctx.cc:148:9 (end2end_test+0x898e03)\r\n    #5 grpc_core::Executor::RunClosures(char const*, grpc_closure_list) /var/local/git/grpc/src/core/lib/iomgr/executor.cc:136:32 (end2end_test+0x8d1fb3)\r\n    #6 grpc_core::Executor::ThreadMain(void*) /var/local/git/grpc/src/core/lib/iomgr/executor.cc:248:22 (end2end_test+0x8d26b8)\r\n    #7 grpc_core::(anonymous namespace)::ThreadInternalsPosix::ThreadInternalsPosix(char const*, void (*)(void*), void*, bool*)::{lambda(void*)#1}::operator()(void*) const /var/local/git/grpc/src/core/lib/gprpp/thd_posix.cc:100:27 (end2end_test+0x96417c)\r\n    #8 grpc_core::(anonymous namespace)::ThreadInternalsPosix::ThreadInternalsPosix(char const*, void (*)(void*), void*, bool*)::{lambda(void*)#1}::__invoke(void*) /var/local/git/grpc/src/core/lib/gprpp/thd_posix.cc:74:25 (end2end_test+0x964018)\r\n  Previous write of size 8 at 0x7b48000107e0 by thread T3:\r\n    #0 free /tmp/clang-build/src/compiler-rt/lib/tsan/rtl/tsan_interceptors.cc:709:3 (end2end_test+0x6c0304)\r\n    #1 gpr_free /var/local/git/grpc/src/core/lib/gpr/alloc.cc:77:3 (end2end_test+0x95b8b4)\r\n    #2 grpc_core::(anonymous namespace)::ConnectionDestroy(void*, grpc_error*) /var/local/git/grpc/src/core/ext/filters/client_channel/subchannel.cc:983:3 (end2end_test+0xa19618)\r\n    #3 exec_ctx_run(grpc_closure*, grpc_error*) /var/local/git/grpc/src/core/lib/iomgr/exec_ctx.cc:40:3 (end2end_test+0x899079)\r\n    #4 grpc_core::ExecCtx::Flush() /var/local/git/grpc/src/core/lib/iomgr/exec_ctx.cc:148:9 (end2end_test+0x898e03)\r\n    #5 end_worker(grpc_pollset*, grpc_pollset_worker*, grpc_pollset_worker**) /var/local/git/grpc/src/core/lib/iomgr/ev_epoll1_linux.cc:978:34 (end2end_test+0x8dbb1f)\r\n    #6 pollset_work(grpc_pollset*, grpc_pollset_worker**, long) /var/local/git/grpc/src/core/lib/iomgr/ev_epoll1_linux.cc:1047:3 (end2end_test+0x8d7a8b)\r\n    #7 pollset_work(grpc_pollset*, grpc_pollset_worker**, long) /var/local/git/grpc/src/core/lib/iomgr/ev_posix.cc:321:21 (end2end_test+0x8d05a4)\r\n    #8 grpc_pollset_work(grpc_pollset*, grpc_pollset_worker**, long) /var/local/git/grpc/src/core/lib/iomgr/pollset.cc:48:10 (end2end_test+0x89ab84)\r\n    #9 cq_next(grpc_completion_queue*, gpr_timespec, void*) /var/local/git/grpc/src/core/lib/surface/completion_queue.cc:1035:23 (end2end_test+0x9a815e)\r\n    #10 grpc_completion_queue_next /var/local/git/grpc/src/core/lib/surface/completion_queue.cc:1111:10 (end2end_test+0x9a6c76)\r\n    #11 grpc::CompletionQueue::AsyncNextInternal(void**, bool*, gpr_timespec) /var/local/git/grpc/src/cpp/common/completion_queue_cc.cc:48:15 (end2end_test+0x917eb9)\r\n    #12 grpc::CompletionQueue::NextStatus grpc::CompletionQueue::AsyncNext<gpr_timespec>(void**, bool*, gpr_timespec const&) /var/local/git/grpc/include/grpcpp/impl/codegen/completion_queue.h:192:12 (end2end_test+0x93dc6c)\r\n    #13 grpc::Server::SyncRequestThreadManager::PollForWork(void**, bool*) /var/local/git/grpc/src/cpp/server/server_cc.cc:596:25 (end2end_test+0x93fc05)\r\n    #14 grpc::ThreadManager::MainWorkLoop() /var/local/git/grpc/src/cpp/thread_manager/thread_manager.cc:150:30 (end2end_test+0x956c18)\r\n    #15 grpc::ThreadManager::WorkerThread::Run() /var/local/git/grpc/src/cpp/thread_manager/thread_manager.cc:42:13 (end2end_test+0x956b88)\r\n    #16 grpc::ThreadManager::WorkerThread::WorkerThread(grpc::ThreadManager*)::$_0::operator()(void*) const /var/local/git/grpc/src/cpp/thread_manager/thread_manager.cc:36:69 (end2end_test+0x957e34)\r\n    #17 grpc::ThreadManager::WorkerThread::WorkerThread(grpc::ThreadManager*)::$_0::__invoke(void*) /var/local/git/grpc/src/cpp/thread_manager/thread_manager.cc:36:7 (end2end_test+0x957dd8)\r\n    #18 grpc_core::(anonymous namespace)::ThreadInternalsPosix::ThreadInternalsPosix(char const*, void (*)(void*), void*, bool*)::{lambda(void*)#1}::operator()(void*) const /var/local/git/grpc/src/core/lib/gprpp/thd_posix.cc:100:27 (end2end_test+0x96417c)\r\n    #19 grpc_core::(anonymous namespace)::ThreadInternalsPosix::ThreadInternalsPosix(char const*, void (*)(void*), void*, bool*)::{lambda(void*)#1}::__invoke(void*) /var/local/git/grpc/src/core/lib/gprpp/thd_posix.cc:74:25 (end2end_test+0x964018)\r\n  Thread T16 'default-executo' (tid=977, running) created by main thread at:\r\n    #0 pthread_create /tmp/clang-build/src/compiler-rt/lib/tsan/rtl/tsan_interceptors.cc:992:3 (end2end_test+0x6c1995)\r\n    #1 grpc_core::(anonymous namespace)::ThreadInternalsPosix::ThreadInternalsPosix(char const*, void (*)(void*), void*, bool*) /var/local/git/grpc/src/core/lib/gprpp/thd_posix.cc:73:10 (end2end_test+0x963d26)\r\n    #2 grpc_core::(anonymous namespace)::ThreadInternalsPosix* grpc_core::New<grpc_core::(anonymous namespace)::ThreadInternalsPosix, char const*&, void (*&)(void*), void*&, bool*>(char const*&, void (*&)(void*), void*&, bool*&&) /var/local/git/grpc/./src/core/lib/gprpp/memory.h:47:18 (end2end_test+0x9639e3)\r\n    #3 grpc_core::Thread::Thread(char const*, void (*)(void*), void*, bool*) /var/local/git/grpc/src/core/lib/gprpp/thd_posix.cc:142:7 (end2end_test+0x963804)\r\n    #4 grpc_core::Executor::SetThreading(bool) /var/local/git/grpc/src/core/lib/iomgr/executor.cc:172:9 (end2end_test+0x8d1800)\r\n    #5 grpc_core::Executor::Init() /var/local/git/grpc/src/core/lib/iomgr/executor.cc:108:25 (end2end_test+0x8d133d)\r\n    #6 grpc_core::Executor::InitAll() /var/local/git/grpc/src/core/lib/iomgr/executor.cc:394:58 (end2end_test+0x8d338b)\r\n    #7 grpc_iomgr_init() /var/local/git/grpc/src/core/lib/iomgr/iomgr.cc:55:3 (end2end_test+0x8994b1)\r\n    #8 grpc_init /var/local/git/grpc/src/core/lib/surface/init.cc:135:5 (end2end_test+0x987b4d)\r\n    #9 grpc::internal::GrpcLibrary::init() /var/local/git/grpc/include/grpcpp/impl/grpc_library.h:34:26 (end2end_test+0x8f8394)\r\n    #10 grpc::GrpcLibraryCodegen::GrpcLibraryCodegen(bool) /var/local/git/grpc/include/grpcpp/impl/codegen/grpc_library.h:45:15 (end2end_test+0x7f338c)\r\n    #11 grpc_impl::Alarm::Alarm() /var/local/git/grpc/src/cpp/common/alarm.cc:122:8 (end2end_test+0x910931)\r\n    #12 grpc::testing::CallbackTestServiceImpl::CallbackTestServiceImpl() /var/local/git/grpc/./test/cpp/end2end/test_service_impl.h:89:3 (end2end_test+0x7a31a3)\r\n    #13 grpc::testing::(anonymous namespace)::End2endTest::End2endTest() /var/local/git/grpc/test/cpp/end2end/end2end_test.cc:232:3 (end2end_test+0x73650f)\r\n    #14 grpc::testing::(anonymous namespace)::SecureEnd2endTest::SecureEnd2endTest() /var/local/git/grpc/test/cpp/end2end/end2end_test.cc:1537:3 (end2end_test+0x7752fc)\r\n    #15 grpc::testing::(anonymous namespace)::SecureEnd2endTest_BlockingAuthMetadataPluginFailure_Test::SecureEnd2endTest_BlockingAuthMetadataPluginFailure_Test() /var/local/git/grpc/test/cpp/end2end/end2end_test.cc:1762:1 (end2end_test+0x7836ec)\r\n    #16 testing::internal::ParameterizedTestFactory<grpc::testing::(anonymous namespace)::SecureEnd2endTest_BlockingAuthMetadataPluginFailure_Test>::CreateTest() /var/local/git/grpc/third_party/googletest/googletest/include/gtest/internal/gtest-param-util.h:415:16 (end2end_test+0x783652)\r\n    #17 testing::Test* testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::TestFactoryBase, testing::Test*>(testing::internal::TestFactoryBase*, testing::Test* (testing::internal::TestFactoryBase::*)(), char const*) /var/local/git/grpc/third_party/googletest/googletest/src/gtest.cc:2402:10 (end2end_test+0xf96c16)\r\n    #18 testing::Test* testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::TestFactoryBase, testing::Test*>(testing::internal::TestFactoryBase*, testing::Test* (testing::internal::TestFactoryBase::*)(), char const*) /var/local/git/grpc/third_party/googletest/googletest/src/gtest.cc:2438:14 (end2end_test+0xf72a28)\r\n    #19 testing::TestInfo::Run() /var/local/git/grpc/third_party/googletest/googletest/src/gtest.cc:2647:22 (end2end_test+0xf4e4e8)\r\n    #20 testing::TestCase::Run() /var/local/git/grpc/third_party/googletest/googletest/src/gtest.cc:2774:28 (end2end_test+0xf4ef67)\r\n    #21 testing::internal::UnitTestImpl::RunAllTests() /var/local/git/grpc/third_party/googletest/googletest/src/gtest.cc:4649:43 (end2end_test+0xf5a011)\r\n    #22 bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) /var/local/git/grpc/third_party/googletest/googletest/src/gtest.cc:2402:10 (end2end_test+0xf9d9c6)\r\n    #23 bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) /var/local/git/grpc/third_party/googletest/googletest/src/gtest.cc:2438:14 (end2end_test+0xf75f78)\r\n    #24 testing::UnitTest::Run() /var/local/git/grpc/third_party/googletest/googletest/src/gtest.cc:4257:10 (end2end_test+0xf59a8b)\r\n    #25 RUN_ALL_TESTS() /var/local/git/grpc/third_party/googletest/googletest/include/gtest/gtest.h:2233:46 (end2end_test+0x7a2697)\r\n    #26 main /var/local/git/grpc/test/cpp/end2end/end2end_test.cc:1940:10 (end2end_test+0x7335d5)\r\n  Thread T3 'grpcpp_sync_ser' (tid=2471, running) created by thread T55 at:\r\n    #0 pthread_create /tmp/clang-build/src/compiler-rt/lib/tsan/rtl/tsan_interceptors.cc:992:3 (end2end_test+0x6c1995)\r\n    #1 grpc_core::(anonymous namespace)::ThreadInternalsPosix::ThreadInternalsPosix(char const*, void (*)(void*), void*, bool*) /var/local/git/grpc/src/core/lib/gprpp/thd_posix.cc:73:10 (end2end_test+0x963d26)\r\n    #2 grpc_core::(anonymous namespace)::ThreadInternalsPosix* grpc_core::New<grpc_core::(anonymous namespace)::ThreadInternalsPosix, char const*&, void (*&)(void*), void*&, bool*>(char const*&, void (*&)(void*), void*&, bool*&&) /var/local/git/grpc/./src/core/lib/gprpp/memory.h:47:18 (end2end_test+0x9639e3)\r\n    #3 grpc_core::Thread::Thread(char const*, void (*)(void*), void*, bool*) /var/local/git/grpc/src/core/lib/gprpp/thd_posix.cc:142:7 (end2end_test+0x963804)\r\n    #4 grpc::ThreadManager::WorkerThread::WorkerThread(grpc::ThreadManager*) /var/local/git/grpc/src/cpp/thread_manager/thread_manager.cc:34:10 (end2end_test+0x956a7d)\r\n    #5 grpc::ThreadManager::MainWorkLoop() /var/local/git/grpc/src/cpp/thread_manager/thread_manager.cc:180:17 (end2end_test+0x956e9c)\r\n    #6 grpc::ThreadManager::WorkerThread::Run() /var/local/git/grpc/src/cpp/thread_manager/thread_manager.cc:42:13 (end2end_test+0x956b88)\r\n    #7 grpc::ThreadManager::WorkerThread::WorkerThread(grpc::ThreadManager*)::$_0::operator()(void*) const /var/local/git/grpc/src/cpp/thread_manager/thread_manager.cc:36:69 (end2end_test+0x957e34)\r\n    #8 grpc::ThreadManager::WorkerThread::WorkerThread(grpc::ThreadManager*)::$_0::__invoke(void*) /var/local/git/grpc/src/cpp/thread_manager/thread_manager.cc:36:7 (end2end_test+0x957dd8)\r\n    #9 grpc_core::(anonymous namespace)::ThreadInternalsPosix::ThreadInternalsPosix(char const*, void (*)(void*), void*, bool*)::{lambda(void*)#1}::operator()(void*) const /var/local/git/grpc/src/core/lib/gprpp/thd_posix.cc:100:27 (end2end_test+0x96417c)\r\n    #10 grpc_core::(anonymous namespace)::ThreadInternalsPosix::ThreadInternalsPosix(char const*, void (*)(void*), void*, bool*)::{lambda(void*)#1}::__invoke(void*) /var/local/git/grpc/src/core/lib/gprpp/thd_posix.cc:74:25 (end2end_test+0x964018)\r\nSUMMARY: ThreadSanitizer: heap-use-after-free /var/local/git/grpc/src/core/lib/channel/connected_channel.cc:174:40 in destroy_call_elem(grpc_call_element*, grpc_call_final_info const*, grpc_closure*)\r\n==================\r\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/460967088",
    "html_url": "https://github.com/grpc/grpc/issues/17335#issuecomment-460967088",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17335",
    "id": 460967088,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDk2NzA4OA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-06T10:06:34Z",
    "updated_at": "2019-02-06T10:07:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "The problem seems to have been introduced around 2019-01-30.\r\nhttps://source.cloud.google.com/results/invocations/10aa508a-1a55-4e24-b790-b9d444f3d130"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/460968764",
    "html_url": "https://github.com/grpc/grpc/issues/17335#issuecomment-460968764",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17335",
    "id": 460968764,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDk2ODc2NA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-06T10:12:12Z",
    "updated_at": "2019-02-06T10:12:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "Potential offender: https://github.com/grpc/grpc/pull/17879. @AspirinSJL  please take a look"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/461293176",
    "html_url": "https://github.com/grpc/grpc/issues/17335#issuecomment-461293176",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17335",
    "id": 461293176,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTI5MzE3Ng==",
    "user": {
      "login": "AspirinSJL",
      "id": 3314176,
      "node_id": "MDQ6VXNlcjMzMTQxNzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3314176?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AspirinSJL",
      "html_url": "https://github.com/AspirinSJL",
      "followers_url": "https://api.github.com/users/AspirinSJL/followers",
      "following_url": "https://api.github.com/users/AspirinSJL/following{/other_user}",
      "gists_url": "https://api.github.com/users/AspirinSJL/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AspirinSJL/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AspirinSJL/subscriptions",
      "organizations_url": "https://api.github.com/users/AspirinSJL/orgs",
      "repos_url": "https://api.github.com/users/AspirinSJL/repos",
      "events_url": "https://api.github.com/users/AspirinSJL/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AspirinSJL/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-07T05:29:05Z",
    "updated_at": "2019-02-07T05:29:05Z",
    "author_association": "MEMBER",
    "body": "Somehow the channel stack is destroyed before the call stack destruction.. Will investigate more tomorrow."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/461540902",
    "html_url": "https://github.com/grpc/grpc/issues/17335#issuecomment-461540902",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17335",
    "id": 461540902,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTU0MDkwMg==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-07T18:23:17Z",
    "updated_at": "2019-02-07T18:23:17Z",
    "author_association": "MEMBER",
    "body": "This is causing a crash on an OPT test seen on #17965 "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/461594070",
    "html_url": "https://github.com/grpc/grpc/issues/17335#issuecomment-461594070",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17335",
    "id": 461594070,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTU5NDA3MA==",
    "user": {
      "login": "AspirinSJL",
      "id": 3314176,
      "node_id": "MDQ6VXNlcjMzMTQxNzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3314176?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AspirinSJL",
      "html_url": "https://github.com/AspirinSJL",
      "followers_url": "https://api.github.com/users/AspirinSJL/followers",
      "following_url": "https://api.github.com/users/AspirinSJL/following{/other_user}",
      "gists_url": "https://api.github.com/users/AspirinSJL/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AspirinSJL/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AspirinSJL/subscriptions",
      "organizations_url": "https://api.github.com/users/AspirinSJL/orgs",
      "repos_url": "https://api.github.com/users/AspirinSJL/repos",
      "events_url": "https://api.github.com/users/AspirinSJL/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AspirinSJL/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-07T21:01:18Z",
    "updated_at": "2019-02-07T21:01:18Z",
    "author_association": "MEMBER",
    "body": "I think the recent tsan/msan failure is different from the original test failure this issue was created for. But  most of the discussion here is already about the new failure. \r\n\r\nSo, please open a new issue about the original failure if that happens again. "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/461600550",
    "html_url": "https://github.com/grpc/grpc/issues/17335#issuecomment-461600550",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17335",
    "id": 461600550,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTYwMDU1MA==",
    "user": {
      "login": "AspirinSJL",
      "id": 3314176,
      "node_id": "MDQ6VXNlcjMzMTQxNzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3314176?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AspirinSJL",
      "html_url": "https://github.com/AspirinSJL",
      "followers_url": "https://api.github.com/users/AspirinSJL/followers",
      "following_url": "https://api.github.com/users/AspirinSJL/following{/other_user}",
      "gists_url": "https://api.github.com/users/AspirinSJL/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AspirinSJL/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AspirinSJL/subscriptions",
      "organizations_url": "https://api.github.com/users/AspirinSJL/orgs",
      "repos_url": "https://api.github.com/users/AspirinSJL/repos",
      "events_url": "https://api.github.com/users/AspirinSJL/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AspirinSJL/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-07T21:22:19Z",
    "updated_at": "2019-02-07T21:22:19Z",
    "author_association": "MEMBER",
    "body": "Duplicate of https://github.com/grpc/grpc/issues/17911"
  }
]
