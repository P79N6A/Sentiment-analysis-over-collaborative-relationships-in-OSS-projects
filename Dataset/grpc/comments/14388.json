[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/364493133",
    "html_url": "https://github.com/grpc/grpc/issues/14388#issuecomment-364493133",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14388",
    "id": 364493133,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDQ5MzEzMw==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-09T16:59:53Z",
    "updated_at": "2018-02-09T16:59:53Z",
    "author_association": "MEMBER",
    "body": "Ok, the underlying issue is that we shouldn't be able to change `grpc_poll_function` while gRPC is active. The `async_end2end_test` assumed that it could do this at test SetUp and TearDown because there were not supposed to be other things lingering at those times. However, along the way, we introduced a timer thread. In this case, the timer thread hadn't yet finished polling at the time that the test wanted to shutdown (and change the poll function).\r\n\r\nTo fix this, I suggest need a new iomgr internal API for \"set_poll_function\" with the caveat that it only copies values into `grpc_poll_function` at `grpc_init`/`grpc_shutdown` time. When called, it just buffers up a value that'll actually get set into the global variable in the future.\r\n\r\nAlternatively, we should stop testing this issue. This is a deep internal API thing and I'm not sure what it reveals.\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/364500889",
    "html_url": "https://github.com/grpc/grpc/issues/14388#issuecomment-364500889",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14388",
    "id": 364500889,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDUwMDg4OQ==",
    "user": {
      "login": "yang-g",
      "id": 10122250,
      "node_id": "MDQ6VXNlcjEwMTIyMjUw",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10122250?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yang-g",
      "html_url": "https://github.com/yang-g",
      "followers_url": "https://api.github.com/users/yang-g/followers",
      "following_url": "https://api.github.com/users/yang-g/following{/other_user}",
      "gists_url": "https://api.github.com/users/yang-g/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yang-g/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yang-g/subscriptions",
      "organizations_url": "https://api.github.com/users/yang-g/orgs",
      "repos_url": "https://api.github.com/users/yang-g/repos",
      "events_url": "https://api.github.com/users/yang-g/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yang-g/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-09T17:26:32Z",
    "updated_at": "2018-02-09T17:26:32Z",
    "author_association": "MEMBER",
    "body": "@vjpai, do you remember what we are trying to test with the overridden polling function?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/364522624",
    "html_url": "https://github.com/grpc/grpc/issues/14388#issuecomment-364522624",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14388",
    "id": 364522624,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDUyMjYyNA==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-09T18:47:52Z",
    "updated_at": "2018-02-09T18:47:52Z",
    "author_association": "MEMBER",
    "body": "Nope, no idea. Let's kill it. The only thing that we need is a test somewhere that AsyncNext with timeout of 0 doesn't actually block.\r\n\r\nWhile we're at it, do we have any justification for testing spin on the Verifier at all? The effect is to make AsyncNext have timeout of 0, but not sure why we would want that.\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/364587878",
    "html_url": "https://github.com/grpc/grpc/issues/14388#issuecomment-364587878",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14388",
    "id": 364587878,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDU4Nzg3OA==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-09T22:29:04Z",
    "updated_at": "2018-02-09T22:29:04Z",
    "author_association": "MEMBER",
    "body": "Here was the original motivation, in a comment from Craig on one of my PRs.\r\n\r\n\"Removing the assert makes this a much weaker test... The original test provided guarantees that we never blocked calling code, which is important for many use cases (imagine a UI thread that wants to do some grpc work)... Overriding that here means that we're no longer providing such a guarantee.\"\r\n\r\nThat said, note that poll override only ever worked for POLL_STRATEGY=poll, not all the other variants that we've supported, and never worked for Windows. I think this (along with spin verifier) belongs in a test, but not in the async_end2end_test. Something separate that just tests this feature.\r\n"
  }
]
