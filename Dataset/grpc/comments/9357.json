[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/272940029",
    "html_url": "https://github.com/grpc/grpc/pull/9357#issuecomment-272940029",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9357",
    "id": 272940029,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3Mjk0MDAyOQ==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-16T19:04:19Z",
    "updated_at": "2017-01-16T19:04:19Z",
    "author_association": "MEMBER",
    "body": "How is mingw broken? Is there a link to a bug filed against that library\ndescribing it? Could we use iostreams instead to do the translation?\n\nI'd like to set a very high bar for introducing more portability cruft.\n\nOn Mon, Jan 16, 2017, 10:41 AM Jan Tattermusch <notifications@github.com>\nwrote:\n\n> -- introduce print_format.h that defines GPR_PRIuPTR (and similar) macros\n> to enable printing from C++ on Windows (where mingw's inttypes.h is broken).\n>\n> -- several other fixes\n>\n> Newly compiling targets:\n> -- interop_client\n> -- grpc_cli\n> -- some C++ tests\n> -- very close to successfully building qps_worker\n>\n> ......\n> ------------------------------\n> You can view, comment on, or merge this pull request online at:\n>\n>   https://github.com/grpc/grpc/pull/9357\n> Commit Summary\n>\n>    - introduce print_format.h\n>    - regenerate\n>    - update C++ code\n>    - dont use win crash handler on mingw\n>    - fix print format in more C++ files\n>    - FLAGS_ definition outside of a namespace\n>    - make usage_timer.cc compile on mingw\n>\n> File Changes\n>\n>    - *M* build.yaml <https://github.com/grpc/grpc/pull/9357/files#diff-0>\n>    (1)\n>    - *M* gRPC-Core.podspec\n>    <https://github.com/grpc/grpc/pull/9357/files#diff-1> (2)\n>    - *M* grpc.gemspec\n>    <https://github.com/grpc/grpc/pull/9357/files#diff-2> (1)\n>    - *M* include/grpc/impl/codegen/port_platform.h\n>    <https://github.com/grpc/grpc/pull/9357/files#diff-3> (9)\n>    - *M* package.xml <https://github.com/grpc/grpc/pull/9357/files#diff-4>\n>    (1)\n>    - *A* src/core/lib/support/print_format.h\n>    <https://github.com/grpc/grpc/pull/9357/files#diff-5> (84)\n>    - *M* test/cpp/end2end/async_end2end_test.cc\n>    <https://github.com/grpc/grpc/pull/9357/files#diff-6> (10)\n>    - *M* test/cpp/interop/interop_client.cc\n>    <https://github.com/grpc/grpc/pull/9357/files#diff-7> (12)\n>    - *M* test/cpp/qps/client_sync.cc\n>    <https://github.com/grpc/grpc/pull/9357/files#diff-8> (3)\n>    - *M* test/cpp/qps/driver.cc\n>    <https://github.com/grpc/grpc/pull/9357/files#diff-9> (59)\n>    - *M* test/cpp/qps/usage_timer.cc\n>    <https://github.com/grpc/grpc/pull/9357/files#diff-10> (11)\n>    - *M* test/cpp/util/grpc_tool.cc\n>    <https://github.com/grpc/grpc/pull/9357/files#diff-11> (6)\n>    - *M* tools/doxygen/Doxyfile.core.internal\n>    <https://github.com/grpc/grpc/pull/9357/files#diff-12> (1)\n>    - *M* tools/run_tests/generated/sources_and_headers.json\n>    <https://github.com/grpc/grpc/pull/9357/files#diff-13> (2)\n>    - *M* vsprojects/vcxproj/gpr/gpr.vcxproj\n>    <https://github.com/grpc/grpc/pull/9357/files#diff-14> (1)\n>    - *M* vsprojects/vcxproj/gpr/gpr.vcxproj.filters\n>    <https://github.com/grpc/grpc/pull/9357/files#diff-15> (3)\n>\n> Patch Links:\n>\n>    - https://github.com/grpc/grpc/pull/9357.patch\n>    - https://github.com/grpc/grpc/pull/9357.diff\n>\n> â€”\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/grpc/grpc/pull/9357>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AJpudc1Tpx4NbfpHko3VkrnsQ5Br4xzxks5rS7nWgaJpZM4Lk3k9>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/272948064",
    "html_url": "https://github.com/grpc/grpc/pull/9357#issuecomment-272948064",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9357",
    "id": 272948064,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3Mjk0ODA2NA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-16T19:48:41Z",
    "updated_at": "2017-01-16T19:48:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "The problem is basically that whenever you are using C++ in mingw, the <cinttypes> (and inttypes.h) will start behaving as \"standard\" headers, that seem to be required to  define  PRIuPTR as %llu (and so on).\r\nThis is probably not a mingw bug per-se, it's more like that CRT vs posix formatting string in mingw are broken by design.\r\n\r\nhttps://github.com/Alexpux/mingw-w64/blob/master/mingw-w64-headers/crt/inttypes.h defines the right windows values of the macros (e.g. I64u for PRIuPTR), but access to these value is protected by \"guards\" that won't allow access to these values and will always redefine the macros to the \"standard linux\" values:\r\nhttps://github.com/Alexpux/mingw-w64/blob/master/mingw-w64-headers/crt/_mingw_print_push.h\r\nhttps://github.com/Alexpux/mingw-w64/blob/master/mingw-w64-headers/crt/_mingw_print_pop.h\r\n\r\nOur problem is that we need the \"windows CRT\" values for inttypes.h  (because that's what we are using in gpr_log), but it seems impossible to gain access to them (I've spent a day experimenting with different compiler defines and flags with no result).\r\n\r\nI'd be happy to use any other solution that works, but I am not aware of one want. \r\nHow exactly would you like to use iostreams (print to a temporary string and then print that string using gpr_log seems very clumsy).\r\n\r\n"
  }
]
