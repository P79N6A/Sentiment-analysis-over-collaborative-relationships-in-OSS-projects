[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/416603548",
    "html_url": "https://github.com/grpc/grpc/issues/16464#issuecomment-416603548",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16464",
    "id": 416603548,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjYwMzU0OA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-28T14:21:30Z",
    "updated_at": "2018-08-28T14:22:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am able to reproduce locally, see stack trace below.\r\n\r\nIt also seems that the Proxy.exe consumes a lot of memory (and keeps using more and more),\r\nso there is probably a memory leak somewhere.\r\n\r\nIt looks the the process crashes https://github.com/grpc/grpc/blob/618a3f561d4a93f263cca23abad086ed8f4d5e86/src/core/lib/slice/slice_buffer.cc#L113 when `maybe_embiggen` calls gpr_realloc() which returns null (out of memory).\r\n\r\n```\r\ngrpc_csharp_ext.x86.dll!abort() Line 77\t \r\ngrpc_csharp_ext.x86.dll!maybe_embiggen(grpc_slice_buffer * sb) Line 58\t grpc_csharp_ext.x86.dll!grpc_slice_buffer_add_indexed(grpc_slice_buffer * sb, grpc_slice s) Line 114\t \r\ngrpc_csharp_ext.x86.dll!grpc_slice_buffer_add(grpc_slice_buffer * sb, grpc_slice s) Line 156\t \r\ngrpc_csharp_ext.x86.dll!grpc_chttp2_data_parser_parse(void * parser, grpc_chttp2_transport * t, grpc_chttp2_stream * s, grpc_slice slice, int is_last) Line 296\t \r\ngrpc_csharp_ext.x86.dll!parse_frame_slice(grpc_chttp2_transport * t, grpc_slice slice, int is_last) Line 727\t \r\ngrpc_csharp_ext.x86.dll!grpc_chttp2_perform_read(grpc_chttp2_transport * t, grpc_slice slice) Line 225\t \r\ngrpc_csharp_ext.x86.dll!read_action_locked(void * tp, grpc_error * error) Line 2460\t \r\ngrpc_csharp_ext.x86.dll!grpc_combiner_continue_exec_ctx() Line 261\t \r\ngrpc_csharp_ext.x86.dll!grpc_core::ExecCtx::Flush() Line 131\t \r\ngrpc_csharp_ext.x86.dll!pollset_work(grpc_pollset * pollset, grpc_pollset_worker * * worker_hdl, __int64 deadline) Line 132\t \r\ngrpc_csharp_ext.x86.dll!grpc_pollset_work(grpc_pollset * pollset, grpc_pollset_worker * * worker, __int64 deadline) Line 48\t \r\ngrpc_csharp_ext.x86.dll!cq_next(grpc_completion_queue * cq, gpr_timespec deadline, void * reserved) Line 929\t \r\ngrpc_csharp_ext.x86.dll!grpc_completion_queue_next(grpc_completion_queue * cq, gpr_timespec deadline, void * reserved) Line 1003\t \r\ngrpc_csharp_ext.x86.dll!grpcsharp_completion_queue_next(grpc_completion_queue * cq) Line 374\t \r\n[Managed to Native Transition]\t \r\nGrpc.Core.dll!Grpc.Core.Internal.CompletionQueueSafeHandle.Next() Line 59\t  \t \t \t \t \t \tGrpc.Core.dll!Grpc.Core.Internal.GrpcThreadPool.RunHandlerLoop(Grpc.Core.Internal.CompletionQueueSafeHandle cq, Grpc.Core.Profiling.IProfiler optionalProfiler) Line 172\t  \t \t \t \t \t \tGrpc.Core.dll!Grpc.Core.Internal.GrpcThreadPool.CreateAndStartThread.AnonymousMethod__0() Line 150\t \r\nmscorlib.dll!System.Threading.ThreadHelper.ThreadStart_Context(object state)\t  \t \t \t \t \t \tmscorlib.dll!System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state, bool preserveSyncCtx)\t  \t \t \t \t \t \tmscorlib.dll!System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state, bool preserveSyncCtx)\t  \t \t \t \t \t \tmscorlib.dll!System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state)\t \r\nmscorlib.dll!System.Threading.ThreadHelper.ThreadStart()\r\n```\t \r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/416632786",
    "html_url": "https://github.com/grpc/grpc/issues/16464#issuecomment-416632786",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16464",
    "id": 416632786,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjYzMjc4Ng==",
    "user": {
      "login": "mfrischknecht",
      "id": 7261570,
      "node_id": "MDQ6VXNlcjcyNjE1NzA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7261570?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mfrischknecht",
      "html_url": "https://github.com/mfrischknecht",
      "followers_url": "https://api.github.com/users/mfrischknecht/followers",
      "following_url": "https://api.github.com/users/mfrischknecht/following{/other_user}",
      "gists_url": "https://api.github.com/users/mfrischknecht/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mfrischknecht/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mfrischknecht/subscriptions",
      "organizations_url": "https://api.github.com/users/mfrischknecht/orgs",
      "repos_url": "https://api.github.com/users/mfrischknecht/repos",
      "events_url": "https://api.github.com/users/mfrischknecht/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mfrischknecht/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-28T15:33:50Z",
    "updated_at": "2018-08-28T15:33:50Z",
    "author_association": "NONE",
    "body": "> It also seems that the Proxy.exe consumes a lot of memory (and keeps using more and more),\r\nso there is probably a memory leak somewhere.\r\n\r\nYes, it looks like it. I didn't pay too much attention to the memory the process used, so I hadn't noticed it until now. I made another branch without the `BufferBlock` of `System.Threading.Tasks.Dataflow` in the Proxy's routine, just to make sure the queueing isn't the culprit. \r\n\r\nYou can find the result here: https://github.com/mfrischknecht/grpc-csharp-crash/tree/grpc-c-crash-without-dataflow ([here](https://github.com/mfrischknecht/grpc-csharp-crash/blob/grpc-c-crash-without-dataflow/Proxy/Program.cs) is the Proxy code)\r\n\r\nThe process still runs out of memory after some time, but it takes longer until it reaches the critical 4GiB."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/416991832",
    "html_url": "https://github.com/grpc/grpc/issues/16464#issuecomment-416991832",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16464",
    "id": 416991832,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjk5MTgzMg==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-29T15:16:52Z",
    "updated_at": "2018-08-29T15:16:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mfrischknecht  I spent some time analyzing your example and it looks like it's not just a simple memory leak.\r\n\r\n- when I run with only one Subscribe RPC (default is 100 concurrent ones), the memory usage is quite high (300-500MB) but it doesn't keep growing - it oscillates periodically. If this was an actual memory leak, the memory usage would just keep growing.\r\n- the question is why is there so much memory allocated to reading from server - normally if the client (=proxy in our case) cannot keep us with the rate at which the server is sending, the flow control should kick in and only a moderate amount of data should be buffered. I'm still investigating what's going on."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/417226178",
    "html_url": "https://github.com/grpc/grpc/issues/16464#issuecomment-417226178",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16464",
    "id": 417226178,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzIyNjE3OA==",
    "user": {
      "login": "mfrischknecht",
      "id": 7261570,
      "node_id": "MDQ6VXNlcjcyNjE1NzA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7261570?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mfrischknecht",
      "html_url": "https://github.com/mfrischknecht",
      "followers_url": "https://api.github.com/users/mfrischknecht/followers",
      "following_url": "https://api.github.com/users/mfrischknecht/following{/other_user}",
      "gists_url": "https://api.github.com/users/mfrischknecht/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mfrischknecht/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mfrischknecht/subscriptions",
      "organizations_url": "https://api.github.com/users/mfrischknecht/orgs",
      "repos_url": "https://api.github.com/users/mfrischknecht/repos",
      "events_url": "https://api.github.com/users/mfrischknecht/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mfrischknecht/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-30T07:57:51Z",
    "updated_at": "2018-08-30T07:57:51Z",
    "author_association": "NONE",
    "body": "@jtattermusch: Thank you for the update!\r\n\r\nOut of interest: do you know what the \"correct\" behavior would be (w.r.t the flow control)? From the API I assumed almost no data to get buffered. Would the memory usage per RPC call normally still be in the megabytes range? If so, we'd have to consider that while designing our protocols (i.e. maybe route multiple subscriptions through a single RPC call)."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/417289214",
    "html_url": "https://github.com/grpc/grpc/issues/16464#issuecomment-417289214",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16464",
    "id": 417289214,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzI4OTIxNA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-30T11:40:32Z",
    "updated_at": "2018-08-30T11:40:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mfrischknecht \r\nThe amount of data to be buffered would depend on the HTTP/2 flow control window size (which will increase for a reliable connection with high throughput) - it's hard to say what the \"right\" size of buffer is, but 500MB definitely sounds like way too much.  I'll perform some more experiments and get back to you."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/420992869",
    "html_url": "https://github.com/grpc/grpc/issues/16464#issuecomment-420992869",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16464",
    "id": 420992869,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDk5Mjg2OQ==",
    "user": {
      "login": "mfrischknecht",
      "id": 7261570,
      "node_id": "MDQ6VXNlcjcyNjE1NzA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7261570?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mfrischknecht",
      "html_url": "https://github.com/mfrischknecht",
      "followers_url": "https://api.github.com/users/mfrischknecht/followers",
      "following_url": "https://api.github.com/users/mfrischknecht/following{/other_user}",
      "gists_url": "https://api.github.com/users/mfrischknecht/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mfrischknecht/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mfrischknecht/subscriptions",
      "organizations_url": "https://api.github.com/users/mfrischknecht/orgs",
      "repos_url": "https://api.github.com/users/mfrischknecht/repos",
      "events_url": "https://api.github.com/users/mfrischknecht/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mfrischknecht/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-13T12:43:20Z",
    "updated_at": "2018-09-13T12:59:12Z",
    "author_association": "NONE",
    "body": "@jtattermusch: Did you have any luck with your flow control experiments? If not, do you perhaps see any other way that could be used to easily apply \"back pressure\"?\r\n\r\nThanks again for your efforts! 😃 "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/430154194",
    "html_url": "https://github.com/grpc/grpc/issues/16464#issuecomment-430154194",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16464",
    "id": 430154194,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDE1NDE5NA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-16T08:47:22Z",
    "updated_at": "2018-10-16T08:47:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mfrischknecht   unfortunately I don't have conclusive results - one way to limit buffer usage (if that's the culprit) would be to use resource_quota  object, but that's currently not exposed in the C# API\r\n(https://github.com/grpc/grpc/blob/f7f7a04501f77f63ebffbee35f1b879bfd90792d/include/grpc/grpc.h#L464)"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/435817783",
    "html_url": "https://github.com/grpc/grpc/issues/16464#issuecomment-435817783",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16464",
    "id": 435817783,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTgxNzc4Mw==",
    "user": {
      "login": "StefDotmailer",
      "id": 18348349,
      "node_id": "MDQ6VXNlcjE4MzQ4MzQ5",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18348349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/StefDotmailer",
      "html_url": "https://github.com/StefDotmailer",
      "followers_url": "https://api.github.com/users/StefDotmailer/followers",
      "following_url": "https://api.github.com/users/StefDotmailer/following{/other_user}",
      "gists_url": "https://api.github.com/users/StefDotmailer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/StefDotmailer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/StefDotmailer/subscriptions",
      "organizations_url": "https://api.github.com/users/StefDotmailer/orgs",
      "repos_url": "https://api.github.com/users/StefDotmailer/repos",
      "events_url": "https://api.github.com/users/StefDotmailer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/StefDotmailer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-05T09:58:46Z",
    "updated_at": "2018-11-05T09:58:46Z",
    "author_association": "NONE",
    "body": "We are getting the same issue (managed process crashing because of `grpc_csharp_ext.x86.dll` memory leaks. Not using it directly, but invoking the Google Vision API library which uses GRPC."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/441107259",
    "html_url": "https://github.com/grpc/grpc/issues/16464#issuecomment-441107259",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16464",
    "id": 441107259,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTEwNzI1OQ==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-22T19:20:26Z",
    "updated_at": "2018-11-22T19:20:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "update: I'm still investigating the problem. I tried integrating grpc_resource_quota into a my reproduction and it didn't seem to help. Right now it looks like that the problem has to do with the fact that C core allocates read slices differently on Windows vs on Unix systems.\r\n\r\nhttps://github.com/grpc/grpc/blob/e0d9692fa30cf3a7a8410a722693d5d3d68fb0fd/src/core/lib/iomgr/tcp_windows.cc#L233"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/443771911",
    "html_url": "https://github.com/grpc/grpc/issues/16464#issuecomment-443771911",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16464",
    "id": 443771911,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Mzc3MTkxMQ==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-03T16:25:32Z",
    "updated_at": "2018-12-03T16:25:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think I have a fix: https://github.com/grpc/grpc/pull/17377.\r\nI'll aim for the fix to land in v1.17.0 release (or in the very next patch release v1.17.1, because we might not make it on time for v1.17.0)."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/459790265",
    "html_url": "https://github.com/grpc/grpc/issues/16464#issuecomment-459790265",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16464",
    "id": 459790265,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTc5MDI2NQ==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-01T16:55:30Z",
    "updated_at": "2019-02-01T16:56:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "The fix is available starting from v1.17.1 release (https://github.com/grpc/grpc/pull/17378).\r\n@mfrischknecht Can you confirm that this was fixed?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/461150517",
    "html_url": "https://github.com/grpc/grpc/issues/16464#issuecomment-461150517",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16464",
    "id": 461150517,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTE1MDUxNw==",
    "user": {
      "login": "mfrischknecht",
      "id": 7261570,
      "node_id": "MDQ6VXNlcjcyNjE1NzA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7261570?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mfrischknecht",
      "html_url": "https://github.com/mfrischknecht",
      "followers_url": "https://api.github.com/users/mfrischknecht/followers",
      "following_url": "https://api.github.com/users/mfrischknecht/following{/other_user}",
      "gists_url": "https://api.github.com/users/mfrischknecht/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mfrischknecht/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mfrischknecht/subscriptions",
      "organizations_url": "https://api.github.com/users/mfrischknecht/orgs",
      "repos_url": "https://api.github.com/users/mfrischknecht/repos",
      "events_url": "https://api.github.com/users/mfrischknecht/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mfrischknecht/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-06T19:16:28Z",
    "updated_at": "2019-02-06T19:16:28Z",
    "author_association": "NONE",
    "body": "Please excuse me for the long delay. I had a chance to re-try the issue with the repository I linked (using GRPC version 1.18.0). I can confirm that on my machine, `Proxy.exe` (the queued version) never outgrows 25 MiB on a single RPC call, while 100 concurrent calls let it oscillate from around 800 to 900 MiB according to the Windows Task Manager.\r\n\r\nThanks @jtattermusch for looking into this! By the way: Do you support any kind of \"beverage over IP\" protocol I could use to send you a token of gratitude? 😄\r\n\r\n---\r\n\r\nOn another note, I still was able to crash `Proxy.exe` by pushing the number of concurrent RPC calls even higher (1000 in this case; even in the version without a queue). The entries in the event log look about the same as the initial ones I included in this ticket. I am however not sure if that really can be deemed an issue. (Should that never ever happen, or can this be considered out of scope? If not, should I open another ticket so this can be looked at separately?)"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/461164969",
    "html_url": "https://github.com/grpc/grpc/issues/16464#issuecomment-461164969",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16464",
    "id": 461164969,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTE2NDk2OQ==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-06T19:57:25Z",
    "updated_at": "2019-02-06T19:57:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mfrischknecht  thanks for verifying the fix!    Ideally we'd implement resource quota functionality under windows (currently only available on unix), but we currently have no plans to do that. Contributions are welcome though!\r\n\r\nAnother idea would be to make https://github.com/grpc/grpc/blob/e5eb3f80198398669e5b8f8af7b779e47e135adf/src/core/lib/iomgr/tcp_windows.cc#L241 configurable using https://github.com/grpc/grpc/blob/e5eb3f80198398669e5b8f8af7b779e47e135adf/include/grpc/impl/codegen/grpc_types.h#L304"
  }
]
