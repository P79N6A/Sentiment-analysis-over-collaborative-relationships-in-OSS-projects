[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/360276013",
    "html_url": "https://github.com/grpc/grpc/pull/14170#issuecomment-360276013",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14170",
    "id": 360276013,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDI3NjAxMw==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-24T21:16:41Z",
    "updated_at": "2018-01-24T21:16:41Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE                                                                          FILE SIZE\n ++++++++++++++ GROWING                                                            ++++++++++++++\n  +0.0%    +240 [None]                                                             +1.35Ki  +0.0%\n  +4.0%     +48 src/core/ext/filters/client_channel/resolver/fake/fake_resolver.cc     +48  +4.0%\n      [NEW]    +157 set_response_and_maybe_push                                           +157  [NEW]\n      [NEW]      +7 grpc_fake_resolver_response_generator_set_response_no_notify            +7  [NEW]\n      +2.8%      +6 [Unmapped]                                                              +6  +2.8%\n      +6.7%      +6 set_response_closure_fn                                                 +6  +6.7%\n\n  +0.0%    +288 TOTAL                                                              +1.40Ki  +0.0%\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE        FILE SIZE\n ++++++++++++++  ++++++++++++++\n\n  [ = ]       0        0  [ = ]\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/360279618",
    "html_url": "https://github.com/grpc/grpc/pull/14170#issuecomment-360279618",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14170",
    "id": 360279618,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDI3OTYxOA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-24T21:29:43Z",
    "updated_at": "2018-01-24T21:29:43Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/360290501",
    "html_url": "https://github.com/grpc/grpc/pull/14170#issuecomment-360290501",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14170",
    "id": 360290501,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDI5MDUwMQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-24T22:09:28Z",
    "updated_at": "2018-01-24T22:09:28Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/360563827",
    "html_url": "https://github.com/grpc/grpc/pull/14170#issuecomment-360563827",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14170",
    "id": 360563827,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDU2MzgyNw==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-25T18:55:12Z",
    "updated_at": "2018-01-25T18:55:12Z",
    "author_association": "MEMBER",
    "body": "I have not yet done a complete review, but at a high level, I think we need to rethink this a bit.  Please let me know if you have any questions.  Thanks!\n\n---\n\nReview status: 0 of 4 files reviewed at latest revision, 1 unresolved discussion, some commit checks failed.\n\n---\n\n*[src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc, line 352 at r1](https://reviewable.io:443/reviews/grpc/grpc/14170#-L3hqrRxjha0XF4O54CS:-L3hqrRxjha0XF4O54CT:b-fw5il7) ([raw file](https://github.com/grpc/grpc/blob/c79150dddf61b115c607840142a2adb73c02d37a/src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc#L352)):*\n> ```cpp\n>     /* 3) TRANSIENT_FAILURE and re-resolve */\n>     grpc_connectivity_state_set(\n>         &p->state_tracker, GRPC_CHANNEL_TRANSIENT_FAILURE,\n> ```\n\nI think this change has some implications.\n\nPrior to #13932, the subchannel reported TRANSIENT_FAILURE when a connection attempt failed and SHUTDOWN when it received a GOAWAY, and we only re-resolved in the latter case.  Now that the subchannel reports TRANSIENT_FAILURE in both of those cases, this change means that we will re-resolve in both cases.\n\nI think that's okay in principle, but I'm a bit concerned that this could cause us to hammer the DNS server with too many requests.  In particular, consider the case where all of the backends are down: in this case, as soon as we initially attempt to connect to all of the backends, all subchannels will go into TRANSIENT_FAILURE, and we will immediately re-resolve.  If the backends all stay down for an extended period of time, the subchannels will all re-attempt to connect using the same backoff algorithm, so they will all go into CONNECTING and then back into TRANSIENT_FAILURE at about the same time for each attempt, meaning that we will wind up re-resolving each time the backoff algorithm tells us to try again.  But even worse, if one of the backends comes up briefly (long enough for us to establish a connection) and then dies again, now one subchannel will be off-cycle with the others with respect to the backoff algorithm, which means that we'll re-resolve twice as often.\n\nAfter a long talk with @ejona86 yesterday, I think we need to re-think our overall strategy for re-resolution.  Currently, we try to be conservative in when we request re-resolution to avoid hammering the DNS server.  But I think a better approach would be to change the DNS resolver code to impose a minimum time between re-resolution requests, as discussed in https://reviewable.io/reviews/grpc/grpc/13671#-L0p5_pdzqIYgVgEu-9d:-L2LWGHF4c9_cItXiqbb:btdcjm.  Once we do that, we can then be much more aggressive in the LB policy code in deciding when to re-resolve, because no matter how often we request re-resolution, there will still be a minimum time between DNS requests.\n\nSo, I suggest the following changes:\n\n1. Add a minimum time between re-resolutions to the DNS resolver (configurable via a channel arg, with some reasonable default).  This will need to be added to both the native and c-ares DNS resolver implementations.\n   - The resolver should record the time of the last DNS request.\n   - When `channel_saw_error()` is called, it will check how long it's been since the last DNS request.  If it's been longer than the configured minimum interval, a new DNS request can be sent immediately.  Otherwise, a timer can be started to perform a DNS request at the timestamp of the last request plus the configured minimum interval.\n   - Note: Now that the LB policies are not relying on the updated DNS response to try to reconnect to the subchannels that got GOAWAYs, there is no requirement for `channel_saw_error()` to immediately cause new data to be returned.  Instead, we can just wait for the timer to fire.\n2. Change LB policy code to be more aggressive about requesting re-resolution.  In particular, I think we can now request re-resolution whenever any one individual subchannel goes into TRANSIENT_FAILURE -- we no longer need to wait for *all* subchannels to be in this state.\n\nIt's fine to split the DNS resolver change into a separate PR if you want, but that would need to go in before this one can.\n\nWe should probably try to get this done quickly, because we don't want to be in a state where we're not re-resolving at all.  (In fact, we should check that the code in the currently broken state didn't make its way into a release.)\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/14170#-:-L3if1QjV0utNGJrkRR9:bsfgcwg)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/360574126",
    "html_url": "https://github.com/grpc/grpc/pull/14170#issuecomment-360574126",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14170",
    "id": 360574126,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDU3NDEyNg==",
    "user": {
      "login": "ejona86",
      "id": 2811396,
      "node_id": "MDQ6VXNlcjI4MTEzOTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2811396?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ejona86",
      "html_url": "https://github.com/ejona86",
      "followers_url": "https://api.github.com/users/ejona86/followers",
      "following_url": "https://api.github.com/users/ejona86/following{/other_user}",
      "gists_url": "https://api.github.com/users/ejona86/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ejona86/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ejona86/subscriptions",
      "organizations_url": "https://api.github.com/users/ejona86/orgs",
      "repos_url": "https://api.github.com/users/ejona86/repos",
      "events_url": "https://api.github.com/users/ejona86/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ejona86/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-25T19:30:05Z",
    "updated_at": "2018-01-25T19:30:05Z",
    "author_association": "MEMBER",
    "body": "CC @dfawley @menghanl "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/360608733",
    "html_url": "https://github.com/grpc/grpc/pull/14170#issuecomment-360608733",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14170",
    "id": 360608733,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDYwODczMw==",
    "user": {
      "login": "dgquintas",
      "id": 120217,
      "node_id": "MDQ6VXNlcjEyMDIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/120217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgquintas",
      "html_url": "https://github.com/dgquintas",
      "followers_url": "https://api.github.com/users/dgquintas/followers",
      "following_url": "https://api.github.com/users/dgquintas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgquintas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgquintas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgquintas/subscriptions",
      "organizations_url": "https://api.github.com/users/dgquintas/orgs",
      "repos_url": "https://api.github.com/users/dgquintas/repos",
      "events_url": "https://api.github.com/users/dgquintas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgquintas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-25T21:37:41Z",
    "updated_at": "2018-01-25T21:37:41Z",
    "author_association": "NONE",
    "body": "\n\n\n\nReview status: 0 of 4 files reviewed at latest revision, 1 unresolved discussion, some commit checks failed.\n\n---\n\n*[src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc, line 352 at r1](https://reviewable.io:443/reviews/grpc/grpc/14170#-L3hqrRxjha0XF4O54CS:-L3jETXjciUaCA-U0F2D:b-oe7zux) ([raw file](https://github.com/grpc/grpc/blob/c79150dddf61b115c607840142a2adb73c02d37a/src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc#L352)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nI think this change has some implications.\n\nPrior to #13932, the subchannel reported TRANSIENT_FAILURE when a connection attempt failed and SHUTDOWN when it received a GOAWAY, and we only re-resolved in the latter case.  Now that the subchannel reports TRANSIENT_FAILURE in both of those cases, this change means that we will re-resolve in both cases.\n\nI think that's okay in principle, but I'm a bit concerned that this could cause us to hammer the DNS server with too many requests.  In particular, consider the case where all of the backends are down: in this case, as soon as we initially attempt to connect to all of the backends, all subchannels will go into TRANSIENT_FAILURE, and we will immediately re-resolve.  If the backends all stay down for an extended period of time, the subchannels will all re-attempt to connect using the same backoff algorithm, so they will all go into CONNECTING and then back into TRANSIENT_FAILURE at about the same time for each attempt, meaning that we will wind up re-resolving each time the backoff algorithm tells us to try again.  But even worse, if one of the backends comes up briefly (long enough for us to establish a connection) and then dies again, now one subchannel will be off-cycle with the others with respect to the backoff algorithm, which means that we'll re-resolve twice as often.\n\nAfter a long talk with @ejona86 yesterday, I think we need to re-think our overall strategy for re-resolution.  Currently, we try to be conservative in when we request re-resolution to avoid hammering the DNS server.  But I think a better approach would be to change the DNS resolver code to impose a minimum time between re-resolution requests, as discussed in https://reviewable.io/reviews/grpc/grpc/13671#-L0p5_pdzqIYgVgEu-9d:-L2LWGHF4c9_cItXiqbb:btdcjm.  Once we do that, we can then be much more aggressive in the LB policy code in deciding when to re-resolve, because no matter how often we request re-resolution, there will still be a minimum time between DNS requests.\n\nSo, I suggest the following changes:\n\n1. Add a minimum time between re-resolutions to the DNS resolver (configurable via a channel arg, with some reasonable default).  This will need to be added to both the native and c-ares DNS resolver implementations.\n   - The resolver should record the time of the last DNS request.\n   - When `channel_saw_error()` is called, it will check how long it's been since the last DNS request.  If it's been longer than the configured minimum interval, a new DNS request can be sent immediately.  Otherwise, a timer can be started to perform a DNS request at the timestamp of the last request plus the configured minimum interval.\n   - Note: Now that the LB policies are not relying on the updated DNS response to try to reconnect to the subchannels that got GOAWAYs, there is no requirement for `channel_saw_error()` to immediately cause new data to be returned.  Instead, we can just wait for the timer to fire.\n2. Change LB policy code to be more aggressive about requesting re-resolution.  In particular, I think we can now request re-resolution whenever any one individual subchannel goes into TRANSIENT_FAILURE -- we no longer need to wait for *all* subchannels to be in this state.\n\nIt's fine to split the DNS resolver change into a separate PR if you want, but that would need to go in before this one can.\n\nWe should probably try to get this done quickly, because we don't want to be in a state where we're not re-resolving at all.  (In fact, we should check that the code in the currently broken state didn't make its way into a release.)\n</blockquote></details>\n\nDo all stacks need to be in agreement on this DNS resolver behavior or can we proceed?\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/14170)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/360611759",
    "html_url": "https://github.com/grpc/grpc/pull/14170#issuecomment-360611759",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14170",
    "id": 360611759,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDYxMTc1OQ==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-25T21:49:03Z",
    "updated_at": "2018-01-25T21:49:03Z",
    "author_association": "MEMBER",
    "body": "\n\n\n\nReview status: 0 of 4 files reviewed at latest revision, 1 unresolved discussion, some commit checks failed.\n\n---\n\n*[src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc, line 352 at r1](https://reviewable.io:443/reviews/grpc/grpc/14170#-L3hqrRxjha0XF4O54CS:-L3jHUtr6LKltW2NqtL-:b92vdda) ([raw file](https://github.com/grpc/grpc/blob/c79150dddf61b115c607840142a2adb73c02d37a/src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc#L352)):*\n<details><summary><i>Previously, dgquintas (David G. Quintas) wrote…</i></summary><blockquote>\n\nDo all stacks need to be in agreement on this DNS resolver behavior or can we proceed?\n</blockquote></details>\n\nWe don't have uniform behavior between stacks now, so changing our behavior won't make that problem any worse.\n\nAs it happens, Java already does basically what I described above, except that their DNS resolver doesn't enforce a minimum time between queries.  However, since their usual DNS resolver relies on the JVM's caching behavior, it's kind of a moot point for them.\n\nWe can worry about consistency more later when we get around to writing a client channel spec.\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/14170)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/360613824",
    "html_url": "https://github.com/grpc/grpc/pull/14170#issuecomment-360613824",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14170",
    "id": 360613824,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDYxMzgyNA==",
    "user": {
      "login": "dgquintas",
      "id": 120217,
      "node_id": "MDQ6VXNlcjEyMDIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/120217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgquintas",
      "html_url": "https://github.com/dgquintas",
      "followers_url": "https://api.github.com/users/dgquintas/followers",
      "following_url": "https://api.github.com/users/dgquintas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgquintas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgquintas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgquintas/subscriptions",
      "organizations_url": "https://api.github.com/users/dgquintas/orgs",
      "repos_url": "https://api.github.com/users/dgquintas/repos",
      "events_url": "https://api.github.com/users/dgquintas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgquintas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-25T21:56:46Z",
    "updated_at": "2018-01-25T21:56:46Z",
    "author_association": "NONE",
    "body": "\n\n\n\nReview status: 0 of 4 files reviewed at latest revision, 1 unresolved discussion, some commit checks failed.\n\n---\n\n*[src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc, line 352 at r1](https://reviewable.io:443/reviews/grpc/grpc/14170#-L3hqrRxjha0XF4O54CS:-L3jJOcU6CfEJZ3mdv1b:bf255jw) ([raw file](https://github.com/grpc/grpc/blob/c79150dddf61b115c607840142a2adb73c02d37a/src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc#L352)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nWe don't have uniform behavior between stacks now, so changing our behavior won't make that problem any worse.\n\nAs it happens, Java already does basically what I described above, except that their DNS resolver doesn't enforce a minimum time between queries.  However, since their usual DNS resolver relies on the JVM's caching behavior, it's kind of a moot point for them.\n\nWe can worry about consistency more later when we get around to writing a client channel spec.\n</blockquote></details>\n\nOk. I'm aiming to have those changes ready by mid-next week.\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/14170)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/362469541",
    "html_url": "https://github.com/grpc/grpc/pull/14170#issuecomment-362469541",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14170",
    "id": 362469541,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjQ2OTU0MQ==",
    "user": {
      "login": "dgquintas",
      "id": 120217,
      "node_id": "MDQ6VXNlcjEyMDIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/120217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgquintas",
      "html_url": "https://github.com/dgquintas",
      "followers_url": "https://api.github.com/users/dgquintas/followers",
      "following_url": "https://api.github.com/users/dgquintas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgquintas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgquintas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgquintas/subscriptions",
      "organizations_url": "https://api.github.com/users/dgquintas/orgs",
      "repos_url": "https://api.github.com/users/dgquintas/repos",
      "events_url": "https://api.github.com/users/dgquintas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgquintas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-02T02:46:01Z",
    "updated_at": "2018-02-02T02:46:01Z",
    "author_association": "NONE",
    "body": "\n\n\n\nReview status: 0 of 4 files reviewed at latest revision, 1 unresolved discussion, some commit checks failed.\n\n---\n\n*[src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc, line 352 at r1](https://reviewable.io:443/reviews/grpc/grpc/14170#-L3hqrRxjha0XF4O54CS:-L4JOx_-7SLZ7Qu6y7fx:b-nm6ulg) ([raw file](https://github.com/grpc/grpc/blob/c79150dddf61b115c607840142a2adb73c02d37a/src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc#L352)):*\n<details><summary><i>Previously, dgquintas (David G. Quintas) wrote…</i></summary><blockquote>\n\nOk. I'm aiming to have those changes ready by mid-next week.\n</blockquote></details>\n\nhttps://github.com/grpc/grpc/pull/14228 has been merged. \n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/14170)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/362615285",
    "html_url": "https://github.com/grpc/grpc/pull/14170#issuecomment-362615285",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14170",
    "id": 362615285,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjYxNTI4NQ==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-02T15:20:32Z",
    "updated_at": "2018-02-02T15:20:32Z",
    "author_association": "MEMBER",
    "body": "\n\n\n\nReview status: 0 of 4 files reviewed at latest revision, 1 unresolved discussion, some commit checks failed.\n\n---\n\n*[src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc, line 352 at r1](https://reviewable.io:443/reviews/grpc/grpc/14170#-L3hqrRxjha0XF4O54CS:-L4M5_x0yMxTFgBlpEUL:bob0503) ([raw file](https://github.com/grpc/grpc/blob/c79150dddf61b115c607840142a2adb73c02d37a/src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc#L352)):*\n<details><summary><i>Previously, dgquintas (David G. Quintas) wrote…</i></summary><blockquote>\n\nhttps://github.com/grpc/grpc/pull/14228 has been merged. \n</blockquote></details>\n\nSuper.  Please merge those changes into this PR and change it to re-resolve whenever any one subchannel goes into TRANSIENT_FAILURE.\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/14170)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/362664698",
    "html_url": "https://github.com/grpc/grpc/pull/14170#issuecomment-362664698",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14170",
    "id": 362664698,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjY2NDY5OA==",
    "user": {
      "login": "dgquintas",
      "id": 120217,
      "node_id": "MDQ6VXNlcjEyMDIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/120217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgquintas",
      "html_url": "https://github.com/dgquintas",
      "followers_url": "https://api.github.com/users/dgquintas/followers",
      "following_url": "https://api.github.com/users/dgquintas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgquintas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgquintas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgquintas/subscriptions",
      "organizations_url": "https://api.github.com/users/dgquintas/orgs",
      "repos_url": "https://api.github.com/users/dgquintas/repos",
      "events_url": "https://api.github.com/users/dgquintas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgquintas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-02T18:23:41Z",
    "updated_at": "2018-02-02T18:23:41Z",
    "author_association": "NONE",
    "body": "@sreecha Please have a look at https://paste.googleplex.com/6424444587212800?raw , the result of running `GRPC_VERBOSITY=debug GRPC_TRACE=round_robin /usr/local/google/home/dgq/grpc/forks/grpc/bins/dbg/client_lb_end2end_test --gtest_filter=ClientLbEnd2endTest.RoundRobin` with this PR patched in (the output will be arbitrarily long, so I'd recommend piping all the output to `gvim` and control-c'ing the tests after 3 secons, `... |& gvim -`."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/362665162",
    "html_url": "https://github.com/grpc/grpc/pull/14170#issuecomment-362665162",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14170",
    "id": 362665162,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjY2NTE2Mg==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-02T18:25:20Z",
    "updated_at": "2018-02-02T18:25:20Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE                                                                                FILE SIZE\n ++++++++++++++ GROWING                                                                  ++++++++++++++\n  +0.0%    +288 [None]                                                                   +1.35Ki  +0.0%\n  +4.0%     +48 src/core/ext/filters/client_channel/resolver/fake/fake_resolver.cc           +48  +4.0%\n      [NEW]    +157 set_response_and_maybe_push                                                 +157  [NEW]\n      [NEW]      +7 grpc_fake_resolver_response_generator_set_response_no_notify                  +7  [NEW]\n      +2.8%      +6 [Unmapped]                                                                    +6  +2.8%\n      +6.7%      +6 set_response_closure_fn                                                       +6  +6.7%\n  +0.5%     +32 src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc     +32  +0.5%\n      +1.6%     +32 rr_connectivity_changed_locked                                               +32  +1.6%\n\n  +0.0%    +368 TOTAL                                                                    +1.43Ki  +0.0%\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE        FILE SIZE\n ++++++++++++++  ++++++++++++++\n\n  [ = ]       0        0  [ = ]\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/362668178",
    "html_url": "https://github.com/grpc/grpc/pull/14170#issuecomment-362668178",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14170",
    "id": 362668178,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjY2ODE3OA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-02T18:36:34Z",
    "updated_at": "2018-02-02T18:36:34Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/362679275",
    "html_url": "https://github.com/grpc/grpc/pull/14170#issuecomment-362679275",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14170",
    "id": 362679275,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjY3OTI3NQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-02T19:17:12Z",
    "updated_at": "2018-02-02T19:17:12Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/362763193",
    "html_url": "https://github.com/grpc/grpc/pull/14170#issuecomment-362763193",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14170",
    "id": 362763193,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Mjc2MzE5Mw==",
    "user": {
      "login": "yang-g",
      "id": 10122250,
      "node_id": "MDQ6VXNlcjEwMTIyMjUw",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10122250?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yang-g",
      "html_url": "https://github.com/yang-g",
      "followers_url": "https://api.github.com/users/yang-g/followers",
      "following_url": "https://api.github.com/users/yang-g/following{/other_user}",
      "gists_url": "https://api.github.com/users/yang-g/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yang-g/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yang-g/subscriptions",
      "organizations_url": "https://api.github.com/users/yang-g/orgs",
      "repos_url": "https://api.github.com/users/yang-g/repos",
      "events_url": "https://api.github.com/users/yang-g/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yang-g/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-03T01:46:07Z",
    "updated_at": "2018-02-03T01:46:07Z",
    "author_association": "MEMBER",
    "body": "It seems only happen with epoll1. The current guess is that the client side keep queuing callbacks to the combiner, and the callbacks are picked up in the server side threads polling cq (because of epoll1) and thus blocks the server from returning from a wait.\r\n\r\nThe evidence is at a hanging test the server side is waiting for a ThreadManager thread to finish. In that thread, the back trace is showing client side work:\r\n\r\n#8  0x000055555567038e in rr_update_locked (policy=0x5555559bb090, args=0x7fffdeffc2e0) at src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc:538\r\n#9  0x000055555562e200 in grpc_lb_policy_update_locked (policy=0x5555559bb090, lb_policy_args=0x7fffdeffc2e0) at src/core/ext/filters/client_channel/lb_policy.cc:116\r\n#10 0x000055555562a1b8 in on_resolver_result_changed_locked (arg=0x5555559bbbd0, error=0x0) at src/core/ext/filters/client_channel/client_channel.cc:453\r\n#11 0x00005555555ba207 in grpc_combiner_continue_exec_ctx () at src/core/lib/iomgr/combiner.cc:257\r\n#12 0x00005555555be110 in grpc_core::ExecCtx::Flush (this=0x7fffdeffca30) at src/core/lib/iomgr/exec_ctx.cc:128\r\n#13 0x00005555555d5373 in end_worker (pollset=0x7fffe8004690, worker=0x7fffdeffc950, worker_hdl=0x0) at src/core/lib/iomgr/ev_epoll1_linux.cc:878\r\n#14 0x00005555555d586f in pollset_work (ps=0x7fffe8004690, worker_hdl=0x0, deadline=144) at src/core/lib/iomgr/ev_epoll1_linux.cc:978\r\n#15 0x00005555555bd690 in grpc_pollset_work (pollset=0x7fffe8004690, worker=0x0, deadline=144) at src/core/lib/iomgr/ev_posix.cc:247\r\n#16 0x000055555561db5b in cq_next (cq=0x7fffe8004580, deadline=..., reserved=0x0) at src/core/lib/surface/completion_queue.cc:926\r\n#17 0x000055555561dfa0 in grpc_completion_queue_next (cq=0x7fffe8004580, deadline=..., reserved=0x0) at src/core/lib/surface/completion_queue.cc:1001\r\n#18 0x00005555555f24d6 in grpc::CompletionQueue::AsyncNextInternal (this=0x7fffe8005060, tag=0x7fffdeffcc90, ok=0x7fffdeffcc8f, deadline=...) at src/cpp/common/completion_queue_cc.cc:56\r\n#19 0x0000555555600514 in grpc::CompletionQueue::AsyncNext<gpr_timespec> (this=0x7fffe8005060, tag=0x7fffdeffcc90, ok=0x7fffdeffcc8f, deadline=...) at include/grpc++/impl/codegen/completion_queue.h:157\r\n#20 0x00005555555ff759 in grpc::Server::SyncRequestThreadManager::PollForWork (this=0x7fffe8004830, tag=0x7fffdeffcc90, ok=0x7fffdeffcc8f) at src/cpp/server/server_cc.cc:276\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/363578629",
    "html_url": "https://github.com/grpc/grpc/pull/14170#issuecomment-363578629",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14170",
    "id": 363578629,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzU3ODYyOQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-06T21:58:06Z",
    "updated_at": "2018-02-06T21:58:06Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE                                                                                       FILE SIZE\n ++++++++++++++ GROWING                                                                         ++++++++++++++\n  +0.5%     +32 src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc            +32  +0.5%\n      +1.6%     +32 rr_connectivity_changed_locked                                                      +32  +1.6%\n  +0.2%     +24 src/core/lib/iomgr/ev_epollex_linux.cc                                              +24  +0.2%\n      +6.9%     +32 pollable_process_events                                                             +32  +6.9%\n\n -------------- SHRINKING                                                                       --------------\n  -0.0%    -128 [None]                                                                          -2.18Ki  -0.0%\n      -0.0%    -128 [Unmapped]                                                                      -2.18Ki  -0.0%\n      [DEL]     -32 vtable for grpc_core::RefCountedWithTracing<grpc_core::ConnectedSubchannel>         -32  [DEL]\n -17.9%    -272 src/core/ext/filters/client_channel/resolver/fake/fake_resolver.cc                 -272 -17.9%\n     -94.8%    -184 grpc_fake_resolver_response_generator_set_response                                 -184 -94.8%\n      [DEL]    -150 grpc_fake_resolver_response_generator_set_response_upon_error                      -150  [DEL]\n      [DEL]    -117 set_response_closure_locked                                                        -117  [DEL]\n     -47.4%     -46 fake_resolver_channel_saw_error_locked                                              -46 -47.4%\n     -10.4%     -26 [Unmapped]                                                                          -26 -10.4%\n     -18.4%      -9 fake_resolver_destroy                                                                -9 -18.4%\n  -0.7%     -80 src/core/lib/iomgr/ev_poll_posix.cc                                                 -80  -0.7%\n     -27.9%     -46 fd_shutdown_error                                                                   -46 -27.9%\n      -8.3%     -32 notify_on_locked                                                                    -32  -8.3%\n      -0.6%      -2 [Unmapped]                                                                           -2  -0.6%\n\n  -0.0%    -424 TOTAL                                                                           -2.47Ki  -0.0%\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE              FILE SIZE\n ++++++++++++++ GROWIN ++++++++++++++\n\n -------------- SHRINK --------------\n  [ = ]       0 [None]     -64  -0.0%\n\n  [ = ]       0 TOTAL      -64  -0.0%\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/363581833",
    "html_url": "https://github.com/grpc/grpc/pull/14170#issuecomment-363581833",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14170",
    "id": 363581833,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzU4MTgzMw==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-06T22:09:52Z",
    "updated_at": "2018-02-06T22:09:52Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/363592267",
    "html_url": "https://github.com/grpc/grpc/pull/14170#issuecomment-363592267",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14170",
    "id": 363592267,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzU5MjI2Nw==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-06T22:49:57Z",
    "updated_at": "2018-02-06T22:49:57Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] Performance differences noted:\nBenchmark                                                                                        allocs_per_iteration    atm_add_per_iteration    atm_cas_per_iteration    cpu_time    locks_per_iteration    nows_per_iteration    real_time\n-----------------------------------------------------------------------------------------------  ----------------------  -----------------------  -----------------------  ----------  ---------------------  --------------------  -----------\nBM_CreateDestroyCore                                                                                                     -25%                                                          +100%\nBM_CreateDestroyCpp                                                                                                      -25%                                                          +33%\nBM_CreateDestroyCpp2                                                                                                     -25%                                                          +100%\nBM_CreateDestroyPollset                                                                                                  -99%                                              +25%        +100%                                        +25%\nBM_EmptyCore                                                                                                             -14%                     +50%                     +188%       +49%                                         +187%\nBM_PollAddFd                                                                                                             -99%                                              -95%        -99%                                         -95%\nBM_PollEmptyPollset                                                                                                      -33%                     +9999%                   +374%       +66%                                         +374%\nBM_PumpStreamClientToServer<InProcessCHTTP2>/2097152                                                                                                                                   +5%\nBM_PumpStreamClientToServer<SockPair>/16777216                                                                                                                                         +67%                   +4%\nBM_PumpStreamClientToServer<SockPair>/2097152                                                                                                                                          +18%\nBM_PumpStreamClientToServer<SockPair>/262144                                                     -5%                     -6%                                                                                  -6%\nBM_PumpStreamClientToServer<TCP>/262144                                                                                                                                                +9%\nBM_PumpStreamClientToServer<UDS>/2097152                                                                                                                                               +16%\nBM_PumpStreamClientToServer<UDS>/262144                                                          -5%                     -7%                                                                                  -7%\nBM_PumpStreamServerToClient<InProcessCHTTP2>/2097152                                                                                                                                   +6%\nBM_PumpStreamServerToClient<SockPair>/16777216                                                                                                                                         +7%\nBM_PumpStreamServerToClient<SockPair>/2097152                                                                                                     +4%                                  +35%                   +22%\nBM_PumpStreamServerToClient<SockPair>/262144                                                                             -7%                                                                                  -6%\nBM_PumpStreamServerToClient<TCP>/262144                                                                                                                                                +5%\nBM_PumpStreamServerToClient<UDS>/16777216                                                                                                         +7%                                  +64%                   +26%\nBM_PumpStreamServerToClient<UDS>/2097152                                                                                                                                               +19%\nBM_PumpStreamServerToClient<UDS>/262144                                                          -4%                     -5%\nBM_SingleThreadPollOneFd                                                                                                 -33%                     +49%                     +104%       +66%                                         +104%\nBM_StreamingPingPong<MinInProcessCHTTP2, NoOpMutator, NoOpMutator>/2097152/2                                                                                                           +4%\nBM_StreamingPingPong<MinTCP, NoOpMutator, NoOpMutator>/0/0                                                                                                                             +17%\nBM_StreamingPingPong<MinTCP, NoOpMutator, NoOpMutator>/0/1                                                                                        +4%                                  +20%\nBM_StreamingPingPong<MinTCP, NoOpMutator, NoOpMutator>/0/2                                                                                        +4%                                  +22%\nBM_StreamingPingPong<MinTCP, NoOpMutator, NoOpMutator>/1/1                                                                                                                             +20%\nBM_StreamingPingPong<MinTCP, NoOpMutator, NoOpMutator>/1/2                                                                                        +4%                                  +22%\nBM_StreamingPingPong<MinTCP, NoOpMutator, NoOpMutator>/262144/1                                                                                                                        +19%\nBM_StreamingPingPong<MinTCP, NoOpMutator, NoOpMutator>/262144/2                                                                                                                        +20%\nBM_StreamingPingPong<MinTCP, NoOpMutator, NoOpMutator>/32768/1                                                                                                                         +20%\nBM_StreamingPingPong<MinTCP, NoOpMutator, NoOpMutator>/32768/2                                                                                                                         +21%\nBM_StreamingPingPong<MinTCP, NoOpMutator, NoOpMutator>/4096/1                                                                                                                          +20%\nBM_StreamingPingPong<MinTCP, NoOpMutator, NoOpMutator>/4096/2                                                                                     +4%                                  +21%\nBM_StreamingPingPong<MinTCP, NoOpMutator, NoOpMutator>/512/1                                                                                                                           +20%\nBM_StreamingPingPong<MinTCP, NoOpMutator, NoOpMutator>/512/2                                                                                      +4%                                  +21%\nBM_StreamingPingPong<MinTCP, NoOpMutator, NoOpMutator>/64/1                                                                                       +4%                                  +20%\nBM_StreamingPingPong<MinTCP, NoOpMutator, NoOpMutator>/64/2                                                                                       +4%                                  +21%\nBM_StreamingPingPong<MinTCP, NoOpMutator, NoOpMutator>/8/1                                                                                        +4%                                  +20%\nBM_StreamingPingPong<MinTCP, NoOpMutator, NoOpMutator>/8/2                                                                                        +4%                                  +22%\nBM_StreamingPingPong<TCP, NoOpMutator, NoOpMutator>/0/0                                                                                                                                +17%\nBM_StreamingPingPong<TCP, NoOpMutator, NoOpMutator>/0/1                                                                                           +4%                                  +20%\nBM_StreamingPingPong<TCP, NoOpMutator, NoOpMutator>/0/2                                                                                           +4%                                  +22%\nBM_StreamingPingPong<TCP, NoOpMutator, NoOpMutator>/1/1                                                                                           +4%                                  +20%\nBM_StreamingPingPong<TCP, NoOpMutator, NoOpMutator>/1/2                                                                                           +4%                                  +22%\nBM_StreamingPingPong<TCP, NoOpMutator, NoOpMutator>/262144/1                                                                                                                           +19%\nBM_StreamingPingPong<TCP, NoOpMutator, NoOpMutator>/262144/2                                                                                                                           +20%\nBM_StreamingPingPong<TCP, NoOpMutator, NoOpMutator>/32768/1                                                                                                                            +20%\nBM_StreamingPingPong<TCP, NoOpMutator, NoOpMutator>/32768/2                                                                                                                            +21%\nBM_StreamingPingPong<TCP, NoOpMutator, NoOpMutator>/4096/1                                                                                                                             +20%\nBM_StreamingPingPong<TCP, NoOpMutator, NoOpMutator>/4096/2                                                                                        +4%                                  +21%\nBM_StreamingPingPong<TCP, NoOpMutator, NoOpMutator>/512/1                                                                                                                              +20%\nBM_StreamingPingPong<TCP, NoOpMutator, NoOpMutator>/512/2                                                                                         +4%                                  +21%\nBM_StreamingPingPong<TCP, NoOpMutator, NoOpMutator>/64/1                                                                                          +4%                                  +20%\nBM_StreamingPingPong<TCP, NoOpMutator, NoOpMutator>/64/2                                                                                          +4%                                  +21%\nBM_StreamingPingPong<TCP, NoOpMutator, NoOpMutator>/8/1                                                                                           +4%                                  +20%\nBM_StreamingPingPong<TCP, NoOpMutator, NoOpMutator>/8/2                                                                                           +4%                                  +22%\nBM_StreamingPingPongMsgs<InProcessCHTTP2, NoOpMutator, NoOpMutator>/2097152                                                                                                            +5%\nBM_StreamingPingPongMsgs<MinInProcessCHTTP2, NoOpMutator, NoOpMutator>/2097152                                                                                                         +5%\nBM_StreamingPingPongMsgs<MinTCP, NoOpMutator, NoOpMutator>/0                                                                                      +4%                                  +27%\nBM_StreamingPingPongMsgs<MinTCP, NoOpMutator, NoOpMutator>/1                                                                                      +4%                                  +27%\nBM_StreamingPingPongMsgs<MinTCP, NoOpMutator, NoOpMutator>/262144                                                                                                                      +22%\nBM_StreamingPingPongMsgs<MinTCP, NoOpMutator, NoOpMutator>/32768                                                                                  +4%                                  +24%\nBM_StreamingPingPongMsgs<MinTCP, NoOpMutator, NoOpMutator>/4096                                                                                   +4%                                  +24%\nBM_StreamingPingPongMsgs<MinTCP, NoOpMutator, NoOpMutator>/512                                                                                    +4%                                  +24%\nBM_StreamingPingPongMsgs<MinTCP, NoOpMutator, NoOpMutator>/64                                                                                     +4%                                  +25%\nBM_StreamingPingPongMsgs<MinTCP, NoOpMutator, NoOpMutator>/8                                                                                      +4%                                  +27%\nBM_StreamingPingPongMsgs<TCP, NoOpMutator, NoOpMutator>/0                                                                                         +4%                                  +27%\nBM_StreamingPingPongMsgs<TCP, NoOpMutator, NoOpMutator>/1                                                                                         +4%                                  +27%\nBM_StreamingPingPongMsgs<TCP, NoOpMutator, NoOpMutator>/262144                                                                                                                         +22%\nBM_StreamingPingPongMsgs<TCP, NoOpMutator, NoOpMutator>/32768                                                                                     +4%                                  +24%\nBM_StreamingPingPongMsgs<TCP, NoOpMutator, NoOpMutator>/4096                                                                                      +4%                                  +24%\nBM_StreamingPingPongMsgs<TCP, NoOpMutator, NoOpMutator>/512                                                                                       +4%                                  +24%\nBM_StreamingPingPongMsgs<TCP, NoOpMutator, NoOpMutator>/64                                                                                        +4%                                  +25%\nBM_StreamingPingPongMsgs<TCP, NoOpMutator, NoOpMutator>/8                                                                                         +4%                                  +27%\nBM_StreamingPingPongWithCoalescingApi<InProcessCHTTP2, NoOpMutator, NoOpMutator>/2097152/1/0                                                                                           +4%\nBM_StreamingPingPongWithCoalescingApi<InProcessCHTTP2, NoOpMutator, NoOpMutator>/2097152/1/1                                                                                           +4%\nBM_StreamingPingPongWithCoalescingApi<InProcessCHTTP2, NoOpMutator, NoOpMutator>/2097152/2/0                                                                                           +4%\nBM_StreamingPingPongWithCoalescingApi<InProcessCHTTP2, NoOpMutator, NoOpMutator>/2097152/2/1                                                                                           +5%\nBM_StreamingPingPongWithCoalescingApi<MinInProcessCHTTP2, NoOpMutator, NoOpMutator>/2097152/1/0                                                                                        +4%\nBM_StreamingPingPongWithCoalescingApi<MinInProcessCHTTP2, NoOpMutator, NoOpMutator>/2097152/1/1                                                                                        +4%\nBM_StreamingPingPongWithCoalescingApi<MinInProcessCHTTP2, NoOpMutator, NoOpMutator>/2097152/2/0                                                                                        +4%\nBM_StreamingPingPongWithCoalescingApi<MinInProcessCHTTP2, NoOpMutator, NoOpMutator>/2097152/2/1                                                                                        +5%\nBM_UnaryPingPong<InProcessCHTTP2, NoOpMutator, NoOpMutator>/0/2097152                                                                                                                  +4%\nBM_UnaryPingPong<InProcessCHTTP2, NoOpMutator, NoOpMutator>/2097152/0                                                                                                                  +4%\nBM_UnaryPingPong<InProcessCHTTP2, NoOpMutator, NoOpMutator>/2097152/2097152                                                                                                            +5%\nBM_UnaryPingPong<MinInProcessCHTTP2, NoOpMutator, NoOpMutator>/0/2097152                                                                                                               +4%\nBM_UnaryPingPong<MinInProcessCHTTP2, NoOpMutator, NoOpMutator>/2097152/0                                                                                                               +4%\nBM_UnaryPingPong<MinInProcessCHTTP2, NoOpMutator, NoOpMutator>/2097152/2097152                                                                                                         +5%\nBM_UnaryPingPong<MinSockPair, NoOpMutator, NoOpMutator>/0/0                                                                                                                            +11%\nBM_UnaryPingPong<MinTCP, NoOpMutator, NoOpMutator>/0/0                                                                                                                                 +11%\nBM_UnaryPingPong<MinTCP, NoOpMutator, NoOpMutator>/0/1                                                                                                                                 +11%\nBM_UnaryPingPong<MinTCP, NoOpMutator, NoOpMutator>/0/262144                                                                                                                            +10%\nBM_UnaryPingPong<MinTCP, NoOpMutator, NoOpMutator>/0/32768                                                                                                                             +10%\nBM_UnaryPingPong<MinTCP, NoOpMutator, NoOpMutator>/0/4096                                                                                                                              +10%\nBM_UnaryPingPong<MinTCP, NoOpMutator, NoOpMutator>/0/512                                                                                                                               +10%\nBM_UnaryPingPong<MinTCP, NoOpMutator, NoOpMutator>/0/64                                                                                                                                +10%\nBM_UnaryPingPong<MinTCP, NoOpMutator, NoOpMutator>/0/8                                                                                                                                 +11%\nBM_UnaryPingPong<MinTCP, NoOpMutator, NoOpMutator>/1/0                                                                                                                                 +11%\nBM_UnaryPingPong<MinTCP, NoOpMutator, NoOpMutator>/1/1                                                                                                                                 +11%\nBM_UnaryPingPong<MinTCP, NoOpMutator, NoOpMutator>/134217728/0                                   -37%\nBM_UnaryPingPong<MinTCP, NoOpMutator, NoOpMutator>/134217728/134217728                           -26%\nBM_UnaryPingPong<MinTCP, NoOpMutator, NoOpMutator>/262144/0                                                                                                                            +10%\nBM_UnaryPingPong<MinTCP, NoOpMutator, NoOpMutator>/262144/262144                                                                                                                       +9%\nBM_UnaryPingPong<MinTCP, NoOpMutator, NoOpMutator>/32768/0                                                                                                                             +10%\nBM_UnaryPingPong<MinTCP, NoOpMutator, NoOpMutator>/32768/32768                                                                                                                         +10%\nBM_UnaryPingPong<MinTCP, NoOpMutator, NoOpMutator>/4096/0                                                                                                                              +10%\nBM_UnaryPingPong<MinTCP, NoOpMutator, NoOpMutator>/4096/4096                                                                                                                           +10%\nBM_UnaryPingPong<MinTCP, NoOpMutator, NoOpMutator>/512/0                                                                                                                               +10%\nBM_UnaryPingPong<MinTCP, NoOpMutator, NoOpMutator>/512/512                                                                                                                             +10%\nBM_UnaryPingPong<MinTCP, NoOpMutator, NoOpMutator>/64/0                                                                                                                                +10%\nBM_UnaryPingPong<MinTCP, NoOpMutator, NoOpMutator>/64/64                                                                                                                               +10%\nBM_UnaryPingPong<MinTCP, NoOpMutator, NoOpMutator>/8/0                                                                                                                                 +11%\nBM_UnaryPingPong<MinTCP, NoOpMutator, NoOpMutator>/8/8                                                                                                                                 +11%\nBM_UnaryPingPong<MinUDS, NoOpMutator, NoOpMutator>/0/0                                                                                                                                 +11%\nBM_UnaryPingPong<SockPair, NoOpMutator, NoOpMutator>/0/0                                                                                                                               +11%\nBM_UnaryPingPong<TCP, NoOpMutator, NoOpMutator>/0/0                                                                                                                                    +11%\nBM_UnaryPingPong<TCP, NoOpMutator, NoOpMutator>/0/1                                                                                                                                    +11%\nBM_UnaryPingPong<TCP, NoOpMutator, NoOpMutator>/0/262144                                                                                                                               +10%\nBM_UnaryPingPong<TCP, NoOpMutator, NoOpMutator>/0/32768                                                                                                                                +10%\nBM_UnaryPingPong<TCP, NoOpMutator, NoOpMutator>/0/4096                                                                                                                                 +10%\nBM_UnaryPingPong<TCP, NoOpMutator, NoOpMutator>/0/512                                                                                                                                  +10%\nBM_UnaryPingPong<TCP, NoOpMutator, NoOpMutator>/0/64                                                                                                                                   +10%\nBM_UnaryPingPong<TCP, NoOpMutator, NoOpMutator>/0/8                                                                                                                                    +11%\nBM_UnaryPingPong<TCP, NoOpMutator, NoOpMutator>/1/0                                                                                                                                    +11%\nBM_UnaryPingPong<TCP, NoOpMutator, NoOpMutator>/1/1                                                                                                                                    +11%\nBM_UnaryPingPong<TCP, NoOpMutator, NoOpMutator>/262144/0                                                                                                                               +10%\nBM_UnaryPingPong<TCP, NoOpMutator, NoOpMutator>/262144/262144                                                                                                                          +9%\nBM_UnaryPingPong<TCP, NoOpMutator, NoOpMutator>/32768/0                                                                                                                                +10%\nBM_UnaryPingPong<TCP, NoOpMutator, NoOpMutator>/32768/32768                                                                                                                            +10%\nBM_UnaryPingPong<TCP, NoOpMutator, NoOpMutator>/4096/0                                                                                                                                 +10%\nBM_UnaryPingPong<TCP, NoOpMutator, NoOpMutator>/4096/4096                                                                                                                              +10%\nBM_UnaryPingPong<TCP, NoOpMutator, NoOpMutator>/512/0                                                                                                                                  +10%\nBM_UnaryPingPong<TCP, NoOpMutator, NoOpMutator>/512/512                                                                                                                                +10%\nBM_UnaryPingPong<TCP, NoOpMutator, NoOpMutator>/64/0                                                                                                                                   +10%\nBM_UnaryPingPong<TCP, NoOpMutator, NoOpMutator>/64/64                                                                                                                                  +10%\nBM_UnaryPingPong<TCP, NoOpMutator, NoOpMutator>/8/0                                                                                                                                    +11%\nBM_UnaryPingPong<TCP, NoOpMutator, NoOpMutator>/8/8                                                                                                                                    +11%\nBM_UnaryPingPong<UDS, NoOpMutator, NoOpMutator>/0/0                                                                                                                                    +11%\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/363592268",
    "html_url": "https://github.com/grpc/grpc/pull/14170#issuecomment-363592268",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14170",
    "id": 363592268,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzU5MjI2OA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-06T22:49:58Z",
    "updated_at": "2018-02-06T22:49:58Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE                                                                                FILE SIZE\n ++++++++++++++ GROWING                                                                  ++++++++++++++\n  +1.5%     +96 src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc     +96  +1.5%\n      +6.9%     +49 rr_update_locked                                                             +49  +6.9%\n      +2.0%     +40 rr_connectivity_changed_locked                                               +40  +2.0%\n      +5.6%      +7 [Unmapped]                                                                    +7  +5.6%\n  +0.7%     +16 src/core/ext/filters/client_channel/lb_policy/subchannel_list.cc             +16  +0.7%\n       +17%     +20 grpc_lb_subchannel_data_start_connectivity_watch                             +20   +17%\n\n -+-+-+-+-+-+-+ MIXED                                                                    +-+-+-+-+-+-+-\n  +0.0%    +152 [None]                                                                       -16  -0.0%\n\n  +0.0%    +264 TOTAL                                                                        +96  +0.0%\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE        FILE SIZE\n ++++++++++++++  ++++++++++++++\n\n  [ = ]       0        0  [ = ]\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/363592579",
    "html_url": "https://github.com/grpc/grpc/pull/14170#issuecomment-363592579",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14170",
    "id": 363592579,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzU5MjU3OQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-06T22:51:20Z",
    "updated_at": "2018-02-06T22:51:20Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE                                                                                FILE SIZE\n ++++++++++++++ GROWING                                                                  ++++++++++++++\n  +1.5%     +96 src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc     +96  +1.5%\n      +6.9%     +49 rr_update_locked                                                             +49  +6.9%\n      +2.0%     +40 rr_connectivity_changed_locked                                               +40  +2.0%\n      +5.6%      +7 [Unmapped]                                                                    +7  +5.6%\n  +0.7%     +16 src/core/ext/filters/client_channel/lb_policy/subchannel_list.cc             +16  +0.7%\n       +17%     +20 grpc_lb_subchannel_data_start_connectivity_watch                             +20   +17%\n\n -+-+-+-+-+-+-+ MIXED                                                                    +-+-+-+-+-+-+-\n  +0.0%    +152 [None]                                                                       -16  -0.0%\n\n  +0.0%    +264 TOTAL                                                                        +96  +0.0%\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE        FILE SIZE\n ++++++++++++++  ++++++++++++++\n\n  [ = ]       0        0  [ = ]\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/363594225",
    "html_url": "https://github.com/grpc/grpc/pull/14170#issuecomment-363594225",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14170",
    "id": 363594225,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzU5NDIyNQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-06T22:57:51Z",
    "updated_at": "2018-02-06T22:57:51Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/363594855",
    "html_url": "https://github.com/grpc/grpc/pull/14170#issuecomment-363594855",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14170",
    "id": 363594855,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzU5NDg1NQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-06T23:00:25Z",
    "updated_at": "2018-02-06T23:00:25Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/363609188",
    "html_url": "https://github.com/grpc/grpc/pull/14170#issuecomment-363609188",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14170",
    "id": 363609188,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzYwOTE4OA==",
    "user": {
      "login": "dgquintas",
      "id": 120217,
      "node_id": "MDQ6VXNlcjEyMDIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/120217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgquintas",
      "html_url": "https://github.com/dgquintas",
      "followers_url": "https://api.github.com/users/dgquintas/followers",
      "following_url": "https://api.github.com/users/dgquintas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgquintas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgquintas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgquintas/subscriptions",
      "organizations_url": "https://api.github.com/users/dgquintas/orgs",
      "repos_url": "https://api.github.com/users/dgquintas/repos",
      "events_url": "https://api.github.com/users/dgquintas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgquintas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-07T00:05:26Z",
    "updated_at": "2018-02-07T00:05:26Z",
    "author_association": "NONE",
    "body": "\n\n\n\nReview status: 0 of 3 files reviewed at latest revision, 1 unresolved discussion, some commit checks pending.\n\n---\n\n*[src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc, line 352 at r1](https://beta.reviewable.io/reviews/grpc/grpc/14170#-L3hqrRxjha0XF4O54CS:-L4h_9BO0HdvBiMLePDP:b-qsvnoa) ([raw file](https://github.com/grpc/grpc/blob/c79150dddf61b115c607840142a2adb73c02d37a/src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc#L352)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nSuper.  Please merge those changes into this PR and change it to re-resolve whenever any one subchannel goes into TRANSIENT_FAILURE.\n</blockquote></details>\n\nDone. PTAL.\n\n---\n\n\n*Comments from [Reviewable](https://beta.reviewable.io/reviews/grpc/grpc/14170)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/363609516",
    "html_url": "https://github.com/grpc/grpc/pull/14170#issuecomment-363609516",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14170",
    "id": 363609516,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzYwOTUxNg==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-07T00:07:02Z",
    "updated_at": "2018-02-07T00:07:02Z",
    "author_association": "NONE",
    "body": "```\nCorrupt JSON data (indicates timeout or crash): \n    bm_fullstack_streaming_pump.BM_PumpStreamServerToClient_SockPair__8.counters.old: 1\n\n\n[microbenchmarks] Performance differences noted:\nBenchmark                                                                                 cpu_time    real_time\n----------------------------------------------------------------------------------------  ----------  -----------\nBM_PumpStreamClientToServer<InProcess>/262144                                             -8%         -8%\nBM_PumpStreamClientToServer<InProcess>/32768                                              -6%         -6%\nBM_PumpStreamServerToClient<InProcess>/32768                                              -8%         -8%\nBM_StreamingPingPong<InProcess, NoOpMutator, NoOpMutator>/262144/1                        -5%         -5%\nBM_StreamingPingPong<InProcess, NoOpMutator, NoOpMutator>/262144/2                        -6%         -6%\nBM_StreamingPingPong<MinInProcess, NoOpMutator, NoOpMutator>/262144/1                     -6%         -6%\nBM_StreamingPingPong<MinInProcess, NoOpMutator, NoOpMutator>/262144/2                     -8%         -8%\nBM_StreamingPingPong<MinInProcess, NoOpMutator, NoOpMutator>/32768/2                      -7%         -7%\nBM_StreamingPingPongMsgs<InProcess, NoOpMutator, NoOpMutator>/32768                       -8%         -8%\nBM_StreamingPingPongMsgs<MinInProcess, NoOpMutator, NoOpMutator>/262144                   -7%         -7%\nBM_StreamingPingPongMsgs<MinInProcess, NoOpMutator, NoOpMutator>/32768                    -9%         -9%\nBM_StreamingPingPongWithCoalescingApi<InProcess, NoOpMutator, NoOpMutator>/262144/2/0     -8%         -8%\nBM_StreamingPingPongWithCoalescingApi<MinInProcess, NoOpMutator, NoOpMutator>/262144/2/0  -5%         -5%\nBM_StreamingPingPongWithCoalescingApi<MinInProcess, NoOpMutator, NoOpMutator>/32768/1/0   -4%         -4%\nBM_StreamingPingPongWithCoalescingApi<MinInProcess, NoOpMutator, NoOpMutator>/32768/2/0   -5%         -5%\nBM_StreamingPingPongWithCoalescingApi<MinInProcess, NoOpMutator, NoOpMutator>/32768/2/1   -5%         -5%\nBM_UnaryPingPong<InProcess, NoOpMutator, NoOpMutator>/0/2097152                           -6%         -6%\nBM_UnaryPingPong<InProcess, NoOpMutator, NoOpMutator>/0/262144                            -8%         -8%\nBM_UnaryPingPong<MinInProcess, NoOpMutator, NoOpMutator>/32768/0                          -4%         -4%\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/363610971",
    "html_url": "https://github.com/grpc/grpc/pull/14170#issuecomment-363610971",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14170",
    "id": 363610971,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzYxMDk3MQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-07T00:13:54Z",
    "updated_at": "2018-02-07T00:13:54Z",
    "author_association": "NONE",
    "body": "```\nCorrupt JSON data (indicates timeout or crash): \n    bm_fullstack_streaming_pump.BM_PumpStreamServerToClient_SockPair__64.opt.old: 1\n\n\n[microbenchmarks] Performance differences noted:\nBenchmark                                                               cpu_time    real_time\n----------------------------------------------------------------------  ----------  -----------\nBM_StreamingPingPongMsgs<MinInProcess, NoOpMutator, NoOpMutator>/32768  -6%         -6%\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/363614809",
    "html_url": "https://github.com/grpc/grpc/pull/14170#issuecomment-363614809",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14170",
    "id": 363614809,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzYxNDgwOQ==",
    "user": {
      "login": "dgquintas",
      "id": 120217,
      "node_id": "MDQ6VXNlcjEyMDIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/120217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgquintas",
      "html_url": "https://github.com/dgquintas",
      "followers_url": "https://api.github.com/users/dgquintas/followers",
      "following_url": "https://api.github.com/users/dgquintas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgquintas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgquintas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgquintas/subscriptions",
      "organizations_url": "https://api.github.com/users/dgquintas/orgs",
      "repos_url": "https://api.github.com/users/dgquintas/repos",
      "events_url": "https://api.github.com/users/dgquintas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgquintas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-07T00:35:36Z",
    "updated_at": "2018-02-07T00:35:36Z",
    "author_association": "NONE",
    "body": "omg green"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/363825761",
    "html_url": "https://github.com/grpc/grpc/pull/14170#issuecomment-363825761",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14170",
    "id": 363825761,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzgyNTc2MQ==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-07T16:28:26Z",
    "updated_at": "2018-02-07T16:28:26Z",
    "author_association": "MEMBER",
    "body": "Only one significant issue here; the other comments are minor.\n\nI am a little concerned that our tests are all green when there's still a significant bug here.  Is there a reasonable way to add a test to catch this kind of problem?\n\n---\n\nReviewed 3 of 5 files at r3.\nReview status: all files reviewed at latest revision, 5 unresolved discussions.\n\n---\n\n*[src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc, line 333 at r3](https://reviewable.io:443/reviews/grpc/grpc/14170#-L4kwwDkRxuidj4URrxN:-L4kwwDkRxuidj4URrxO:b-veqg6n) ([raw file](https://github.com/grpc/grpc/blob/20331706e27abb2554e70df1ce9e58e049808f12/src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc#L333)):*\n> ```cpp\n>    * 3) RULE: ALL subchannels are TRANSIENT_FAILURE => policy is\n>    *                                                   TRANSIENT_FAILURE (and\n>    *                                                   requests re-resolution).\n> ```\n\nNo need to mention requesting re-resolution here, because we're not actually triggering that here.\n\n---\n\n*[src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc, line 354 at r3](https://reviewable.io:443/reviews/grpc/grpc/14170#-L4kvfH-Vq3JDB9iJWps:-L4kvOzEVnU5LKx1bLmj:bd1a231) ([raw file](https://github.com/grpc/grpc/blob/19f15c4e13b9a3c0b82ae19316add008a07d3c83/src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc#L354)):*\n> ```cpp\n>     grpc_connectivity_state_set(&p->state_tracker, GRPC_CHANNEL_CONNECTING,\n>                                 GRPC_ERROR_NONE, \"rr_connecting\");\n>   } else if (subchannel_list->num_shutdown ==\n> ```\n\nSince we're no longer using the `num_shutdown` field anywhere, let's remove it from the `grpc_lb_subchannel_list` struct in subchannel_list.h.\n\n---\n\n*[src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc, line 568 at r3](https://reviewable.io:443/reviews/grpc/grpc/14170#-L4kyKbdIuk2q0mOF32d:-L4kyKbdIuk2q0mOF32e:b-8b267o) ([raw file](https://github.com/grpc/grpc/blob/20331706e27abb2554e70df1ce9e58e049808f12/src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc#L568)):*\n> ```cpp\n>       // discrepancy, attempt to re-resolve and end up here again.\n>       if (subchannel_state == GRPC_CHANNEL_TRANSIENT_FAILURE) {\n>         subchannel_list->subchannels[i].pending_connectivity_state_unsafe =\n> ```\n\nI don't think it's safe to reset `pending_connectivity_state_unsafe` without also (a) resetting `curr_connectivity_state` and `prev_connectivity_state` and (b) updating the state counters.  Otherwise, the internal state will be inconsistent and the behavior incorrect (e.g., if all subchannels are initially in state TRANSIENT_FAILURE, `num_transient_failure` will still be 0, so we will not report that state back from the LB policy).  I think something like this should do what we need:\n\n```\nsubchannel_list->subchannels[i].prev_connectivity_state = subchannel_state;\nsubchannel_list->subchannels[i].curr_connectivity_state = subchannel_state;\n--subchannel_list->num_idle;\n++subchannel_list->num_transient_failure;\n```\n\nIn the long term, I'd like to see a more general solution here, but I think that will require some careful thought about how to improve the subchannel_list API.  I'll do that later as part of C++-ifying that API.  For now, please add the following comment:\n\nTODO(roth): As part of C++-ifying the subchannel_list API, design a better API for notifying the LB policy of subchannel states, which can be used both for the subchannel's initial state and for subsequent state changes.  This will allow us to handle this more generally instead of special-casing TRANSIENT_FAILURE (e.g., we can also distribute any pending picks across *all* READY subchannels rather than sending them all to the first one).\n\n---\n\n*[test/cpp/end2end/client_lb_end2end_test.cc, line 141 at r3](https://reviewable.io:443/reviews/grpc/grpc/14170#-L4l3J-IPK2vAa5BcTbI:-L4l3J-IPK2vAa5BcTbJ:bnc7qpx) ([raw file](https://github.com/grpc/grpc/blob/20331706e27abb2554e70df1ce9e58e049808f12/test/cpp/end2end/client_lb_end2end_test.cc#L141)):*\n> ```cpp\n>   }\n> \n>   void SetNextResolution(const std::vector<int>& ports, bool notify = true) {\n> ```\n\nPlease split this into separate methods for setting the next resolution and the re-resolution response, as @AspirinSJL did in grpclb_end2end_test in #14281.\n\n---\n\n*[test/cpp/end2end/client_lb_end2end_test.cc, line 581 at r3](https://reviewable.io:443/reviews/grpc/grpc/14170#-L4l49TFYHSW1W8Ptp9m:-L4l49TFYHSW1W8Ptp9n:bw1wz4) ([raw file](https://github.com/grpc/grpc/blob/20331706e27abb2554e70df1ce9e58e049808f12/test/cpp/end2end/client_lb_end2end_test.cc#L581)):*\n> ```cpp\n>   ports.emplace_back(servers_[1]->port_);\n>   ports.emplace_back(servers_[2]->port_);\n>   gpr_log(GPR_INFO, \"ABOUT TO SEND ALLLLL\");\n> ```\n\nI assume these log messages are leftovers from debugging. :)\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/14170#-:-L4l4wsML6t-kWe_ZQQr:bw8obq7)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/363868656",
    "html_url": "https://github.com/grpc/grpc/pull/14170#issuecomment-363868656",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14170",
    "id": 363868656,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Mzg2ODY1Ng==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-07T18:43:33Z",
    "updated_at": "2018-02-07T18:43:33Z",
    "author_association": "MEMBER",
    "body": "\n\n\n\nReview status: all files reviewed at latest revision, 6 unresolved discussions.\n\n---\n\n*[src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc, line 402 at r3](https://reviewable.io:443/reviews/grpc/grpc/14170#-L4lZKFsHCpvhbPDVYdt:-L4lZKFsHCpvhbPDVYdu:b-6dmk5o) ([raw file](https://github.com/grpc/grpc/blob/20331706e27abb2554e70df1ce9e58e049808f12/src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc#L402)):*\n> ```cpp\n>   // Update state counters and new overall state.\n>   update_state_counters_locked(sd);\n>   update_lb_connectivity_status_locked(sd, GRPC_ERROR_REF(error));\n> ```\n\nNot directly related to the rest of this PR, but I think we should only do this if `sd` is from `p->subchannel_list`, because we don't want to report the state if it's from `p->latest_pending_subchannel_list`.  And we should probably move this down to the end of this function, because if `sd` is from `p->latest_pending_subchannel_list` and reports READY, we might promote `p->latest_pending_subchannel_list` to `p->subchannel_list` below.\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/14170)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/363968086",
    "html_url": "https://github.com/grpc/grpc/pull/14170#issuecomment-363968086",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14170",
    "id": 363968086,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Mzk2ODA4Ng==",
    "user": {
      "login": "dgquintas",
      "id": 120217,
      "node_id": "MDQ6VXNlcjEyMDIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/120217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgquintas",
      "html_url": "https://github.com/dgquintas",
      "followers_url": "https://api.github.com/users/dgquintas/followers",
      "following_url": "https://api.github.com/users/dgquintas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgquintas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgquintas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgquintas/subscriptions",
      "organizations_url": "https://api.github.com/users/dgquintas/orgs",
      "repos_url": "https://api.github.com/users/dgquintas/repos",
      "events_url": "https://api.github.com/users/dgquintas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgquintas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-08T01:08:22Z",
    "updated_at": "2018-02-08T01:08:22Z",
    "author_association": "NONE",
    "body": "I couldn't come up with any effective way to make the previous state change :/\n\n---\n\nReview status: all files reviewed at latest revision, 6 unresolved discussions.\n\n---\n\n*[src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc, line 333 at r3](https://reviewable.io:443/reviews/grpc/grpc/14170#-L4kwwDkRxuidj4URrxN:-L4lXDH25amgHAsK9_eV:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/20331706e27abb2554e70df1ce9e58e049808f12/src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc#L333)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nNo need to mention requesting re-resolution here, because we're not actually triggering that here.\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc, line 354 at r3](https://reviewable.io:443/reviews/grpc/grpc/14170#-L4kvfH-Vq3JDB9iJWps:-L4lXLA_LXVW2WAxK9VL:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/19f15c4e13b9a3c0b82ae19316add008a07d3c83/src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc#L354)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nSince we're no longer using the `num_shutdown` field anywhere, let's remove it from the `grpc_lb_subchannel_list` struct in subchannel_list.h.\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc, line 402 at r3](https://reviewable.io:443/reviews/grpc/grpc/14170#-L4lZKFsHCpvhbPDVYdt:-L4mtpBjOT0iNB5FPxuT:boj1qgt) ([raw file](https://github.com/grpc/grpc/blob/20331706e27abb2554e70df1ce9e58e049808f12/src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc#L402)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nNot directly related to the rest of this PR, but I think we should only do this if `sd` is from `p->subchannel_list`, because we don't want to report the state if it's from `p->latest_pending_subchannel_list`.  And we should probably move this down to the end of this function, because if `sd` is from `p->latest_pending_subchannel_list` and reports READY, we might promote `p->latest_pending_subchannel_list` to `p->subchannel_list` below.\n</blockquote></details>\n\nGood catch. Done.\n\n---\n\n*[src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc, line 568 at r3](https://reviewable.io:443/reviews/grpc/grpc/14170#-L4kyKbdIuk2q0mOF32d:-L4m8vKTGmAyqNNJ17Nk:b-xzdgrz) ([raw file](https://github.com/grpc/grpc/blob/20331706e27abb2554e70df1ce9e58e049808f12/src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc#L568)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nI don't think it's safe to reset `pending_connectivity_state_unsafe` without also (a) resetting `curr_connectivity_state` and `prev_connectivity_state` and (b) updating the state counters.  Otherwise, the internal state will be inconsistent and the behavior incorrect (e.g., if all subchannels are initially in state TRANSIENT_FAILURE, `num_transient_failure` will still be 0, so we will not report that state back from the LB policy).  I think something like this should do what we need:\n\n```\nsubchannel_list->subchannels[i].prev_connectivity_state = subchannel_state;\nsubchannel_list->subchannels[i].curr_connectivity_state = subchannel_state;\n--subchannel_list->num_idle;\n++subchannel_list->num_transient_failure;\n```\n\nIn the long term, I'd like to see a more general solution here, but I think that will require some careful thought about how to improve the subchannel_list API.  I'll do that later as part of C++-ifying that API.  For now, please add the following comment:\n\nTODO(roth): As part of C++-ifying the subchannel_list API, design a better API for notifying the LB policy of subchannel states, which can be used both for the subchannel's initial state and for subsequent state changes.  This will allow us to handle this more generally instead of special-casing TRANSIENT_FAILURE (e.g., we can also distribute any pending picks across *all* READY subchannels rather than sending them all to the first one).\n</blockquote></details>\n\nDone. `prev` also needed an update to fully replicate what `update_state_counters_locked` does (in addition, not doing so would make tests fail).\n\n---\n\n*[test/cpp/end2end/client_lb_end2end_test.cc, line 141 at r3](https://reviewable.io:443/reviews/grpc/grpc/14170#-L4l3J-IPK2vAa5BcTbI:-L4mwy8JsPGAJbV8x0Me:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/20331706e27abb2554e70df1ce9e58e049808f12/test/cpp/end2end/client_lb_end2end_test.cc#L141)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nPlease split this into separate methods for setting the next resolution and the re-resolution response, as @AspirinSJL did in grpclb_end2end_test in #14281.\n</blockquote></details>\n\nDone.\n\n---\n\n*[test/cpp/end2end/client_lb_end2end_test.cc, line 581 at r3](https://reviewable.io:443/reviews/grpc/grpc/14170#-L4l49TFYHSW1W8Ptp9m:-L4lXSQsHYo32TmwVyX-:bkpxt2y) ([raw file](https://github.com/grpc/grpc/blob/20331706e27abb2554e70df1ce9e58e049808f12/test/cpp/end2end/client_lb_end2end_test.cc#L581)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nI assume these log messages are leftovers from debugging. :)\n</blockquote></details>\n\nWoops. Done. At least I don't use swear words in these any more... Learnt that the embarrassing way.\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/14170#-:-L4mwzQSp9SK1zX861mG:b-umubpu)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/363968512",
    "html_url": "https://github.com/grpc/grpc/pull/14170#issuecomment-363968512",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14170",
    "id": 363968512,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Mzk2ODUxMg==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-08T01:10:39Z",
    "updated_at": "2018-02-08T01:10:39Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE                                                                                FILE SIZE\n ++++++++++++++ GROWING                                                                  ++++++++++++++\n  +2.5%    +160 src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc    +160  +2.5%\n      +4.4%     +86 rr_connectivity_changed_locked                                               +86  +4.4%\n       +11%     +81 rr_update_locked                                                             +81   +11%\n  +0.7%     +16 src/core/ext/filters/client_channel/lb_policy/subchannel_list.cc             +16  +0.7%\n       +17%     +20 grpc_lb_subchannel_data_start_connectivity_watch                             +20   +17%\n\n -+-+-+-+-+-+-+ MIXED                                                                    +-+-+-+-+-+-+-\n  +0.0%    +160 [None]                                                                      -336  -0.0%\n\n  +0.0%    +336 TOTAL                                                                       -160  -0.0%\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE        FILE SIZE\n ++++++++++++++  ++++++++++++++\n\n  [ = ]       0        0  [ = ]\n\n\n\n```"
  }
]
