[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/250364146",
    "html_url": "https://github.com/grpc/grpc/issues/8230#issuecomment-250364146",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8230",
    "id": 250364146,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDM2NDE0Ng==",
    "user": {
      "login": "apolcyn",
      "id": 9566254,
      "node_id": "MDQ6VXNlcjk1NjYyNTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9566254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apolcyn",
      "html_url": "https://github.com/apolcyn",
      "followers_url": "https://api.github.com/users/apolcyn/followers",
      "following_url": "https://api.github.com/users/apolcyn/following{/other_user}",
      "gists_url": "https://api.github.com/users/apolcyn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apolcyn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apolcyn/subscriptions",
      "organizations_url": "https://api.github.com/users/apolcyn/orgs",
      "repos_url": "https://api.github.com/users/apolcyn/repos",
      "events_url": "https://api.github.com/users/apolcyn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apolcyn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-29T03:52:17Z",
    "updated_at": "2016-09-29T03:52:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "Off the bat I'd wonder if this is causing a memory issue because of the storing in the list, but with those numbers I think memory should be small enough. To check, these messages are uncompressed, correct? (the fix in https://github.com/grpc/grpc/issues/7873 hadn't been released yet).\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/250374299",
    "html_url": "https://github.com/grpc/grpc/issues/8230#issuecomment-250374299",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8230",
    "id": 250374299,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDM3NDI5OQ==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-29T05:33:50Z",
    "updated_at": "2016-09-29T05:33:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "@amitwaisel   we need to know more. What gRPC version? What platform are you on? What you are describing would look like a C core bug, but it seems pretty unlikely because other users do things like this all the time. \n\nWhat's the stack trace when it freezes?\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/250409983",
    "html_url": "https://github.com/grpc/grpc/issues/8230#issuecomment-250409983",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8230",
    "id": 250409983,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDQwOTk4Mw==",
    "user": {
      "login": "amitwaisel",
      "id": 21170412,
      "node_id": "MDQ6VXNlcjIxMTcwNDEy",
      "avatar_url": "https://avatars2.githubusercontent.com/u/21170412?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitwaisel",
      "html_url": "https://github.com/amitwaisel",
      "followers_url": "https://api.github.com/users/amitwaisel/followers",
      "following_url": "https://api.github.com/users/amitwaisel/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitwaisel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitwaisel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitwaisel/subscriptions",
      "organizations_url": "https://api.github.com/users/amitwaisel/orgs",
      "repos_url": "https://api.github.com/users/amitwaisel/repos",
      "events_url": "https://api.github.com/users/amitwaisel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitwaisel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-29T08:59:27Z",
    "updated_at": "2016-09-29T08:59:27Z",
    "author_association": "NONE",
    "body": "@apolcyn I didn't check for memory leaks, but as you said - it is small enough for not being noticed.\n@jtattermusch We work with the nuget-distributed 1.0.0 version, on Windows platform. The language is C#. Regarding the stack trace, because we use the precompiled library, VisualStudio displays the stack trace up to the MoveNext() call. The task appears to be \"scheduled to run\".\nI found a workaround for this issue, which might indicate what the reason is: Instead of reading stream-by-stream (each one until finished), I created X different tasks that read all streams in parallel. When doing so, everything runs fine.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/250420950",
    "html_url": "https://github.com/grpc/grpc/issues/8230#issuecomment-250420950",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8230",
    "id": 250420950,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDQyMDk1MA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-29T09:49:08Z",
    "updated_at": "2016-09-29T09:49:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "@amitwaisel  my _guess_ would be it's one of two possible options:\n1.  you are looking at a deadlock in your code. Please note that async continuations for a specific call will be bound to a single specific thread and if some other actions occupy that thread, the continuations cannot run (this should never happen if async/await is used correctly across your code). One thing you can try find the root cause is to set `GrpcEnvironment.SetCompletionQueueCount(1)` (see https://github.com/grpc/grpc/blob/6ea4380d15fa59dd57342a910484ecf7308f31bf/src/csharp/Grpc.Core/GrpcEnvironment.cs#L226). That way, the async continuations will have more threads to run on (but performance may be worse). If that resolves your issue, the problem is most likely in your code.\n2. there's an issue in windows version of C core (possible), but to debug this, we would need a minimalist version of your code that reproduces the issue.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/250516425",
    "html_url": "https://github.com/grpc/grpc/issues/8230#issuecomment-250516425",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8230",
    "id": 250516425,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDUxNjQyNQ==",
    "user": {
      "login": "amitwaisel",
      "id": 21170412,
      "node_id": "MDQ6VXNlcjIxMTcwNDEy",
      "avatar_url": "https://avatars2.githubusercontent.com/u/21170412?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitwaisel",
      "html_url": "https://github.com/amitwaisel",
      "followers_url": "https://api.github.com/users/amitwaisel/followers",
      "following_url": "https://api.github.com/users/amitwaisel/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitwaisel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitwaisel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitwaisel/subscriptions",
      "organizations_url": "https://api.github.com/users/amitwaisel/orgs",
      "repos_url": "https://api.github.com/users/amitwaisel/repos",
      "events_url": "https://api.github.com/users/amitwaisel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitwaisel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-29T16:21:10Z",
    "updated_at": "2016-09-29T16:21:10Z",
    "author_association": "NONE",
    "body": "@jtattermusch I will try to make a simple tester that reproduces the bug. I tried using the `SetCompletionQueueCount(1)` with no noticeable effect. Can it be related to the fact that the client and the server run in the same process [part of testing process]? (For clarification, the issue is related to a stream written (`WriteAsync()`) from the server, and read (`MoveNext()`) from the client).\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/250740785",
    "html_url": "https://github.com/grpc/grpc/issues/8230#issuecomment-250740785",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8230",
    "id": 250740785,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDc0MDc4NQ==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-30T13:12:22Z",
    "updated_at": "2016-09-30T13:12:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "The fact that the client and the server are in the same process tend to lead to a higher risk of deadlock if the user code is written incorrectly (e.g. the use of async/await), but for a correct code, it should absolutely work. Please try to come up with a snippet that reproduces the issue.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/253539151",
    "html_url": "https://github.com/grpc/grpc/issues/8230#issuecomment-253539151",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8230",
    "id": 253539151,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzUzOTE1MQ==",
    "user": {
      "login": "Ulysess",
      "id": 128044,
      "node_id": "MDQ6VXNlcjEyODA0NA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/128044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ulysess",
      "html_url": "https://github.com/Ulysess",
      "followers_url": "https://api.github.com/users/Ulysess/followers",
      "following_url": "https://api.github.com/users/Ulysess/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ulysess/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ulysess/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ulysess/subscriptions",
      "organizations_url": "https://api.github.com/users/Ulysess/orgs",
      "repos_url": "https://api.github.com/users/Ulysess/repos",
      "events_url": "https://api.github.com/users/Ulysess/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ulysess/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-13T14:59:57Z",
    "updated_at": "2016-10-13T14:59:57Z",
    "author_association": "NONE",
    "body": "maybe related, use synchronize wait in service implementation will hang, deadlock or something\ndemonstrate by modified csharp\\Grpc.Examples\\MathServiceImpl.cs\n\n```\npublic override async Task Fib(FibArgs request,\n    ServerStreamWriter<Num> responseStream,\n    ServerCallContext context\n) {\n    var limit = request.Limit > 0 ? request.Limit : long.MaxValue;\n    var fibEnumerator = FibInternal(limit).GetEnumerator();\n    while (fibEnumerator.MoveNext()) {\n        var task = responseStream.WriteAsync(fibEnumerator.Current);\n        task.Wait();  //never return\n    }\n}\n```\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/254029639",
    "html_url": "https://github.com/grpc/grpc/issues/8230#issuecomment-254029639",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8230",
    "id": 254029639,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDAyOTYzOQ==",
    "user": {
      "login": "amitwaisel",
      "id": 21170412,
      "node_id": "MDQ6VXNlcjIxMTcwNDEy",
      "avatar_url": "https://avatars2.githubusercontent.com/u/21170412?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitwaisel",
      "html_url": "https://github.com/amitwaisel",
      "followers_url": "https://api.github.com/users/amitwaisel/followers",
      "following_url": "https://api.github.com/users/amitwaisel/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitwaisel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitwaisel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitwaisel/subscriptions",
      "organizations_url": "https://api.github.com/users/amitwaisel/orgs",
      "repos_url": "https://api.github.com/users/amitwaisel/repos",
      "events_url": "https://api.github.com/users/amitwaisel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitwaisel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-16T06:07:16Z",
    "updated_at": "2016-10-16T06:07:16Z",
    "author_association": "NONE",
    "body": "@Ulysess Using synchronous Wait() inside async function may not be a good idea ([http://blog.stephencleary.com/2012/07/dont-block-on-async-code.html](url))\n@jtattermusch Still trying to reproduce this problem out of one of the GRPC examples. It looks that the issue happens when the server stops reading from one of the opened streams (because of an exception not caught by user code and reached the GRPC layer, or just by not reading from the stream). At some point, the client (both C++ and C# in my case) is blocked on **every RPC call** - either writing to any stream using the `WriteAsync` operation (not just the one I don't read from), or even calling another unrelated RPC function.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/254055251",
    "html_url": "https://github.com/grpc/grpc/issues/8230#issuecomment-254055251",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8230",
    "id": 254055251,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDA1NTI1MQ==",
    "user": {
      "login": "Ulysess",
      "id": 128044,
      "node_id": "MDQ6VXNlcjEyODA0NA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/128044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ulysess",
      "html_url": "https://github.com/Ulysess",
      "followers_url": "https://api.github.com/users/Ulysess/followers",
      "following_url": "https://api.github.com/users/Ulysess/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ulysess/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ulysess/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ulysess/subscriptions",
      "organizations_url": "https://api.github.com/users/Ulysess/orgs",
      "repos_url": "https://api.github.com/users/Ulysess/repos",
      "events_url": "https://api.github.com/users/Ulysess/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ulysess/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-16T15:58:32Z",
    "updated_at": "2016-10-16T15:58:32Z",
    "author_association": "NONE",
    "body": "Off course i known, only for demonstration.\nBut it is legal, only not good. Current implementation misbehaved.\nMaybe add a new issue for it.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/254057084",
    "html_url": "https://github.com/grpc/grpc/issues/8230#issuecomment-254057084",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8230",
    "id": 254057084,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDA1NzA4NA==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-16T16:27:38Z",
    "updated_at": "2016-10-16T16:27:38Z",
    "author_association": "MEMBER",
    "body": "Is this a case of many streams getting cancelled or timing out server side?\nIt's something we've noticed, and there's a fix incoming (though it's\nsomewhat complicated).\n\nOn Sun, Oct 16, 2016, 8:58 AM Ulysess notifications@github.com wrote:\n\n> Off course i known, only for demonstration.\n> But it is legal, only not good. Current implementation misbehaved.\n> Maybe add a new issue for it.\n> \n> —\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/grpc/grpc/issues/8230#issuecomment-254055251, or mute\n> the thread\n> https://github.com/notifications/unsubscribe-auth/AJpudRLOC8st78F8CERYTxVkcZPExpuGks5q0km8gaJpZM4KI1YK\n> .\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/254419413",
    "html_url": "https://github.com/grpc/grpc/issues/8230#issuecomment-254419413",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8230",
    "id": 254419413,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDQxOTQxMw==",
    "user": {
      "login": "amitwaisel",
      "id": 21170412,
      "node_id": "MDQ6VXNlcjIxMTcwNDEy",
      "avatar_url": "https://avatars2.githubusercontent.com/u/21170412?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitwaisel",
      "html_url": "https://github.com/amitwaisel",
      "followers_url": "https://api.github.com/users/amitwaisel/followers",
      "following_url": "https://api.github.com/users/amitwaisel/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitwaisel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitwaisel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitwaisel/subscriptions",
      "organizations_url": "https://api.github.com/users/amitwaisel/orgs",
      "repos_url": "https://api.github.com/users/amitwaisel/repos",
      "events_url": "https://api.github.com/users/amitwaisel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitwaisel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-18T06:34:51Z",
    "updated_at": "2016-10-18T06:34:51Z",
    "author_association": "NONE",
    "body": "@ctiller  The streams are not getting cancelled or timed out, they are just not being read from (I guess their internal buffers are filled up).\nMy specific case is that the server writes to X streams (server-to-client), but the client reads only from a single stream (it reads one stream at a time. When it completes one, it goes to the next). In that case, the client completes 20-30 reads (`MoveNext()`) before freezing. Because the logic in one-stream-at-a-time read, it never finishes the first stream, thus not getting to read the rest streams.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/311017573",
    "html_url": "https://github.com/grpc/grpc/issues/8230#issuecomment-311017573",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8230",
    "id": 311017573,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMTAxNzU3Mw==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-26T10:06:49Z",
    "updated_at": "2017-06-26T10:06:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "@amitwaisel   is this still a problem?"
  }
]
