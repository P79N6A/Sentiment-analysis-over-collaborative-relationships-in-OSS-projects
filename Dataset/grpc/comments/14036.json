[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/358134013",
    "html_url": "https://github.com/grpc/grpc/issues/14036#issuecomment-358134013",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14036",
    "id": 358134013,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODEzNDAxMw==",
    "user": {
      "login": "dcow",
      "id": 547926,
      "node_id": "MDQ6VXNlcjU0NzkyNg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/547926?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dcow",
      "html_url": "https://github.com/dcow",
      "followers_url": "https://api.github.com/users/dcow/followers",
      "following_url": "https://api.github.com/users/dcow/following{/other_user}",
      "gists_url": "https://api.github.com/users/dcow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dcow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dcow/subscriptions",
      "organizations_url": "https://api.github.com/users/dcow/orgs",
      "repos_url": "https://api.github.com/users/dcow/repos",
      "events_url": "https://api.github.com/users/dcow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dcow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-16T22:49:00Z",
    "updated_at": "2018-01-16T22:49:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "I should say I have not explored what it looks like simply calling the generated c++ code from objective-c++. In my experience, I'm guessing you'd still need a thin wrapper layer to make sure all the c++-isms are hidden from callers lest their project explode into a full blown objective-c++ project (which we don't want)."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/358150265",
    "html_url": "https://github.com/grpc/grpc/issues/14036#issuecomment-358150265",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14036",
    "id": 358150265,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODE1MDI2NQ==",
    "user": {
      "login": "muxi",
      "id": 1054404,
      "node_id": "MDQ6VXNlcjEwNTQ0MDQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1054404?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/muxi",
      "html_url": "https://github.com/muxi",
      "followers_url": "https://api.github.com/users/muxi/followers",
      "following_url": "https://api.github.com/users/muxi/following{/other_user}",
      "gists_url": "https://api.github.com/users/muxi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/muxi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/muxi/subscriptions",
      "organizations_url": "https://api.github.com/users/muxi/orgs",
      "repos_url": "https://api.github.com/users/muxi/repos",
      "events_url": "https://api.github.com/users/muxi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/muxi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-17T00:08:11Z",
    "updated_at": "2018-01-17T00:08:11Z",
    "author_association": "MEMBER",
    "body": "I don't think it would work as you suggest. You cannot put an ObjC class in a C++ namespace in ObjC++ (see [this Wikipedia page](https://en.wikipedia.org/wiki/Objective-C#Language_variants) where it lists a bunch of restrictions).\r\n\r\nAFAIK ObjC++ is more of an extension to ObjC compiler to recognize C++ syntax, rather than introducing new syntax that makes ObjC classes works with C++ features."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/359652976",
    "html_url": "https://github.com/grpc/grpc/issues/14036#issuecomment-359652976",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14036",
    "id": 359652976,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTY1Mjk3Ng==",
    "user": {
      "login": "dcow",
      "id": 547926,
      "node_id": "MDQ6VXNlcjU0NzkyNg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/547926?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dcow",
      "html_url": "https://github.com/dcow",
      "followers_url": "https://api.github.com/users/dcow/followers",
      "following_url": "https://api.github.com/users/dcow/following{/other_user}",
      "gists_url": "https://api.github.com/users/dcow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dcow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dcow/subscriptions",
      "organizations_url": "https://api.github.com/users/dcow/orgs",
      "repos_url": "https://api.github.com/users/dcow/repos",
      "events_url": "https://api.github.com/users/dcow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dcow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-23T02:28:21Z",
    "updated_at": "2018-01-23T02:30:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "There is some new syntax from my experience, e.g. the ability to define class local variables to store private implementations without declaring the type in the class header (pimple idiom) etc. in an init block (which helps with hiding c++ from callers). But you are right I didn't know about the namespace restriction. However, that can be an implementation detail as far as this is concerned.\r\n\r\nThe idea would be to gen the actual classes using c++ (already done) and then also gen an objective-c++ wrapper that makes it easier to call into the objective-c++ classes while avoiding the namespace issues by bubbling namespace handling/resolution out to the wrapper. This essentially involves prefixing the classes by their namespace (or something smarter that the compiler could do since it knows more about the world). I opened this because I don't look forward to doing this by hand if I'm going to need to do it to generally resolve symbol conflicts, and of course I would be happy to help work this in if it's useful for anyone. \r\n\r\nThe other issue that people will encounter if they were to venture into objective-c++ is that the c++ code will infect their project if it leaks through headers. That's the other role of objective-c++. You can call objective-c++ interfaces from objective-c and use the objective c++ layer to hide c++ semantics in .mm files while .h[h] files are purely objective-c. I haven't used the c++ codegen, but I have to imagine a intermediary layer would be useful as codegen because it's what most people would have to write themselves anyway.\r\n\r\nMaybe I'll revisit this in the future with some actual examples if I end up trying to go this route."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/359877562",
    "html_url": "https://github.com/grpc/grpc/issues/14036#issuecomment-359877562",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14036",
    "id": 359877562,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTg3NzU2Mg==",
    "user": {
      "login": "muxi",
      "id": 1054404,
      "node_id": "MDQ6VXNlcjEwNTQ0MDQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1054404?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/muxi",
      "html_url": "https://github.com/muxi",
      "followers_url": "https://api.github.com/users/muxi/followers",
      "following_url": "https://api.github.com/users/muxi/following{/other_user}",
      "gists_url": "https://api.github.com/users/muxi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/muxi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/muxi/subscriptions",
      "organizations_url": "https://api.github.com/users/muxi/orgs",
      "repos_url": "https://api.github.com/users/muxi/repos",
      "events_url": "https://api.github.com/users/muxi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/muxi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-23T18:03:31Z",
    "updated_at": "2018-01-23T18:03:31Z",
    "author_association": "MEMBER",
    "body": "I see your point here. Using C++ codegen and gRPC C++ library on iOS is one thing that we are working. We do not have any plan on writing ObjC wrapper on top of that right now, but once that is finished and you think this feature will be helpful contribution is always welcome."
  }
]
