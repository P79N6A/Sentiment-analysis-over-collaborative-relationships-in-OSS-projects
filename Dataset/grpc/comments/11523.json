[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/309583247",
    "html_url": "https://github.com/grpc/grpc/issues/11523#issuecomment-309583247",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11523",
    "id": 309583247,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTU4MzI0Nw==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-19T21:47:41Z",
    "updated_at": "2017-06-19T21:47:41Z",
    "author_association": "MEMBER",
    "body": "I think it is most likely that you would see that error if your client is connected to a server and then that connection drops, as reported in #11411. You may be able to fix this simply by retrying the request once the connection is reestablished."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/309637255",
    "html_url": "https://github.com/grpc/grpc/issues/11523#issuecomment-309637255",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11523",
    "id": 309637255,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTYzNzI1NQ==",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-20T03:49:21Z",
    "updated_at": "2017-06-20T03:54:24Z",
    "author_association": "NONE",
    "body": "@murgatroid99 thank for your help.\r\n\r\nIt happened again today for two hours. Until I restart the docker image, calls were continuously failed with \"Connect Failed\". \r\n\r\nIs it something related to docker ? I am using node:6.11.0-slim as base image.\r\n\r\n```\r\nFROM node:6.11.0-slim\r\n\r\n# Create app directory\r\nRUN mkdir -p /app\r\nWORKDIR /app\r\n\r\n# Bundle app source\r\nCOPY build/ ./\r\nCOPY package.json ./\r\nCOPY yarn.lock ./\r\n\r\n# Install node dependencies.\r\nRUN yarn  --prod\r\nCMD [ \"./node_modules/pm2/bin/pm2-docker\", \"--raw\", \"server.js\" ]\r\n```\r\nAlso, we use consul for service registry."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/309836873",
    "html_url": "https://github.com/grpc/grpc/issues/11523#issuecomment-309836873",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11523",
    "id": 309836873,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTgzNjg3Mw==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-20T17:52:08Z",
    "updated_at": "2017-06-20T17:52:08Z",
    "author_association": "MEMBER",
    "body": "Can you show the server code? When you say that you use consul for service registry, how is that being used with gRPC?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/309856198",
    "html_url": "https://github.com/grpc/grpc/issues/11523#issuecomment-309856198",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11523",
    "id": 309856198,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTg1NjE5OA==",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-20T19:01:35Z",
    "updated_at": "2017-06-20T19:01:35Z",
    "author_association": "NONE",
    "body": "Regarding above comment: The url I use for creating client, is pointed to consul service. More about [consul DNS](https://www.consul.io/docs/agent/dns.html)\r\n\r\nI have reproduced this issue locally. by changing `/etc/hosts`. \r\nSteps are \r\n1. Start grpc client server, by pointing to a actual service ( say url is `grpc.service.dynamic.dev.example.com`)\r\n2. Call grpc method => successfully executed.\r\n3. Change the host and point above url to fake IP where no service is running.\r\n` 10.0.0.1 grpc.service.dynamic.dev.example.com `\r\n4. Called grpc method again and expected `connect fail` but it went through. \r\n\r\nI am suspecting that the DNS resolution is not happening every call may be it is b/c i created one client instance and using for every call.  \r\n\r\nNote: also tried by pointing to fake which resulted 'Connect Failed' then updated hosts to actual address, it still pointed to fake IP. \r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/309884913",
    "html_url": "https://github.com/grpc/grpc/issues/11523#issuecomment-309884913",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11523",
    "id": 309884913,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTg4NDkxMw==",
    "user": {
      "login": "nicolasnoble",
      "id": 7281574,
      "node_id": "MDQ6VXNlcjcyODE1NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7281574?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nicolasnoble",
      "html_url": "https://github.com/nicolasnoble",
      "followers_url": "https://api.github.com/users/nicolasnoble/followers",
      "following_url": "https://api.github.com/users/nicolasnoble/following{/other_user}",
      "gists_url": "https://api.github.com/users/nicolasnoble/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nicolasnoble/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nicolasnoble/subscriptions",
      "organizations_url": "https://api.github.com/users/nicolasnoble/orgs",
      "repos_url": "https://api.github.com/users/nicolasnoble/repos",
      "events_url": "https://api.github.com/users/nicolasnoble/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nicolasnoble/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-20T20:41:09Z",
    "updated_at": "2017-06-20T20:41:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "CC @dgquintas "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/309921562",
    "html_url": "https://github.com/grpc/grpc/issues/11523#issuecomment-309921562",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11523",
    "id": 309921562,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTkyMTU2Mg==",
    "user": {
      "login": "dgquintas",
      "id": 120217,
      "node_id": "MDQ6VXNlcjEyMDIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/120217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgquintas",
      "html_url": "https://github.com/dgquintas",
      "followers_url": "https://api.github.com/users/dgquintas/followers",
      "following_url": "https://api.github.com/users/dgquintas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgquintas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgquintas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgquintas/subscriptions",
      "organizations_url": "https://api.github.com/users/dgquintas/orgs",
      "repos_url": "https://api.github.com/users/dgquintas/repos",
      "events_url": "https://api.github.com/users/dgquintas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgquintas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-20T23:38:41Z",
    "updated_at": "2017-06-20T23:38:57Z",
    "author_association": "NONE",
    "body": "The way things works in C Core and, by extension, in Node:\r\n1. You create a channel using a target name. That target name resolves to a set of addresses.\r\n1. By default, the channel will go over the list of resolved addresses. If it can connect to one of them, it'll stick to that one for the duration of the channel _or_ the connection.\r\n   - If an already established connection fails, _a new (DNS) resolution will happen_ and go back to the beginning of this point, going over the resolved addresses _for the name used when creating the channel_.\r\n\r\nNote that _nothing will happen for as long as a previously established connection is still healthy_. If you update the /etc/hosts file, it'll only be taken into account the moment you terminate the connection to the service you created in your step 1. (presumably by killing that server). "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/309931432",
    "html_url": "https://github.com/grpc/grpc/issues/11523#issuecomment-309931432",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11523",
    "id": 309931432,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTkzMTQzMg==",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-21T00:50:28Z",
    "updated_at": "2017-06-21T00:50:28Z",
    "author_association": "NONE",
    "body": "So, My understanding is:\r\nAt the time of client creation, DNS will resolve set of addresses then client will only go over each address and established a connection. if existing connection fails, it will go over pre-resolved address and find others. \r\nThat means, Dynamically updated addresses will not be used.  How to deal with dynamic addresses. \r\n\r\nHow do i know that my client is not healthy, so I can create new only ? \r\nI am using server stream call, which is hard to retry. "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/309933879",
    "html_url": "https://github.com/grpc/grpc/issues/11523#issuecomment-309933879",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11523",
    "id": 309933879,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTkzMzg3OQ==",
    "user": {
      "login": "dgquintas",
      "id": 120217,
      "node_id": "MDQ6VXNlcjEyMDIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/120217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgquintas",
      "html_url": "https://github.com/dgquintas",
      "followers_url": "https://api.github.com/users/dgquintas/followers",
      "following_url": "https://api.github.com/users/dgquintas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgquintas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgquintas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgquintas/subscriptions",
      "organizations_url": "https://api.github.com/users/dgquintas/orgs",
      "repos_url": "https://api.github.com/users/dgquintas/repos",
      "events_url": "https://api.github.com/users/dgquintas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgquintas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-21T01:08:47Z",
    "updated_at": "2017-06-21T01:08:47Z",
    "author_association": "NONE",
    "body": "No: if an existing connection fails, **the client will re-resolve the name given at channel creation** and then start trying to connect to the list of addresses (which may be the same or different. In your case it'd be different if you changed the /etc/hosts in the meantime)."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/309935079",
    "html_url": "https://github.com/grpc/grpc/issues/11523#issuecomment-309935079",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11523",
    "id": 309935079,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTkzNTA3OQ==",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-21T01:17:28Z",
    "updated_at": "2017-06-21T01:19:12Z",
    "author_association": "NONE",
    "body": "Then, I also tried first connecting to fake ip (in host file) and it got failed with 'Connect Failed' then I have updated host file with actual address and tried again. but it still says 'Connect Failed'. \r\n\r\nIs the initial connection to fake IP address healthy ? so, it doesn't retry to connect new IP ?\r\n\r\nWhat is target name ? as I mentioned in the initial comment, this is how I am creating client with consul url `grpc.service.dynamic.dev.example.com:50051`\r\n``` javascript\r\nnew ckService.CkPublic(url, grpc.credentials.createInsecure())\r\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/309938518",
    "html_url": "https://github.com/grpc/grpc/issues/11523#issuecomment-309938518",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11523",
    "id": 309938518,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTkzODUxOA==",
    "user": {
      "login": "dgquintas",
      "id": 120217,
      "node_id": "MDQ6VXNlcjEyMDIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/120217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgquintas",
      "html_url": "https://github.com/dgquintas",
      "followers_url": "https://api.github.com/users/dgquintas/followers",
      "following_url": "https://api.github.com/users/dgquintas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgquintas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgquintas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgquintas/subscriptions",
      "organizations_url": "https://api.github.com/users/dgquintas/orgs",
      "repos_url": "https://api.github.com/users/dgquintas/repos",
      "events_url": "https://api.github.com/users/dgquintas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgquintas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-21T01:42:09Z",
    "updated_at": "2017-06-21T01:42:09Z",
    "author_association": "NONE",
    "body": "The problem is that, by using the fake address from the start, you never actually establish a connection. The sequence to re-trigger a resolution is as previously described: 1. working connection 2. working connection fails 3. re-resolution triggered.\r\n\r\nIt could be argued that a re-resolution should also be triggered none of the initial addresses can connect. We'll explore this possibility, but in any case, the current behavior requires a connection to go from good to bad. \r\n\r\nI'd suggest:\r\n1. Have the client connect successfully.\r\n2. Update /etc/hosts\r\n3. Make the client fail by killing the service from point 1. currently successfully connected.\r\n4. The next client call should trigger a re-resolution a pick up the changes to /etc/hosts from step 2.\r\n\r\nWhat I mean by \"target name\" would be \"grpc.service.dynamic.dev.example.com:50051\", yes. And \"grpc.service.dynamic.dev.example.com\" is what you should be using as the key in /etc/hosts."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/309944911",
    "html_url": "https://github.com/grpc/grpc/issues/11523#issuecomment-309944911",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11523",
    "id": 309944911,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTk0NDkxMQ==",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-21T02:28:48Z",
    "updated_at": "2017-06-21T02:28:48Z",
    "author_association": "NONE",
    "body": "Thanks @dgquintas  for quick responses and letting me know the details of gRPC. \r\n\r\nI will try the suggested approach and also simulate whole integration on consul & dynamic instance meanwhile. \r\n\r\nSo, what is your opinion/guess on actual issue. I was continuously getting 'Connect Failed' error untill I restart the server. \r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/310122426",
    "html_url": "https://github.com/grpc/grpc/issues/11523#issuecomment-310122426",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11523",
    "id": 310122426,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDEyMjQyNg==",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-21T15:49:59Z",
    "updated_at": "2017-06-21T15:49:59Z",
    "author_association": "NONE",
    "body": "As I was suspecting, it is trying to connect 3 IPs (Staled) on which service is not running. At the time of this error, service is running on 3 different IPs. \r\n\r\nI was able to capture all the logs of \"Connect Failed\" call by enabling the env variables. \r\n[connect-fail-log.txt](https://github.com/grpc/grpc/files/1092059/connect-fail-log.txt)\r\n\r\nI don't see DNS resolution call :(\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/310149029",
    "html_url": "https://github.com/grpc/grpc/issues/11523#issuecomment-310149029",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11523",
    "id": 310149029,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDE0OTAyOQ==",
    "user": {
      "login": "dgquintas",
      "id": 120217,
      "node_id": "MDQ6VXNlcjEyMDIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/120217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgquintas",
      "html_url": "https://github.com/dgquintas",
      "followers_url": "https://api.github.com/users/dgquintas/followers",
      "following_url": "https://api.github.com/users/dgquintas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgquintas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgquintas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgquintas/subscriptions",
      "organizations_url": "https://api.github.com/users/dgquintas/orgs",
      "repos_url": "https://api.github.com/users/dgquintas/repos",
      "events_url": "https://api.github.com/users/dgquintas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgquintas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-21T17:27:09Z",
    "updated_at": "2017-06-21T17:27:09Z",
    "author_association": "NONE",
    "body": "Thanks for the log. I don't see any successful call. Please re-read [my previous comment](https://github.com/grpc/grpc/issues/11523#issuecomment-309938518). In particular, the need for the channel to _successfully connect first_. I'll discuss with the team if the current behavior of not re-resolving unless there's a successful connection is what we want, but in any case, that's the current one."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/310155072",
    "html_url": "https://github.com/grpc/grpc/issues/11523#issuecomment-310155072",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11523",
    "id": 310155072,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDE1NTA3Mg==",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-21T17:48:33Z",
    "updated_at": "2017-06-21T17:48:33Z",
    "author_association": "NONE",
    "body": "I just posted the logs of the last rpc call and rest I have removed. But there were some successful calls but the time gap was almost a  12 hrs. \r\n\r\nSince I haven't setup up proper log mechanism yet, I lost all the logs after I restart my docker.  Also, as I mentioned through out this issue, this is happening after some successful calls. "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/310235731",
    "html_url": "https://github.com/grpc/grpc/issues/11523#issuecomment-310235731",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11523",
    "id": 310235731,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDIzNTczMQ==",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-21T23:46:02Z",
    "updated_at": "2017-06-21T23:46:02Z",
    "author_association": "NONE",
    "body": "What is the best way to add retry mechanism in case of server stream call for `Connect Failed` error. Do you have any high level code ? \r\nIs there way I can listen to connect-errors and re-create client ?\r\nHow to close old channels ?\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/317333752",
    "html_url": "https://github.com/grpc/grpc/issues/11523#issuecomment-317333752",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11523",
    "id": 317333752,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzMzMzc1Mg==",
    "user": {
      "login": "lakshmantgld",
      "id": 6481030,
      "node_id": "MDQ6VXNlcjY0ODEwMzA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6481030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lakshmantgld",
      "html_url": "https://github.com/lakshmantgld",
      "followers_url": "https://api.github.com/users/lakshmantgld/followers",
      "following_url": "https://api.github.com/users/lakshmantgld/following{/other_user}",
      "gists_url": "https://api.github.com/users/lakshmantgld/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lakshmantgld/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lakshmantgld/subscriptions",
      "organizations_url": "https://api.github.com/users/lakshmantgld/orgs",
      "repos_url": "https://api.github.com/users/lakshmantgld/repos",
      "events_url": "https://api.github.com/users/lakshmantgld/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lakshmantgld/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-24T06:47:14Z",
    "updated_at": "2017-07-24T06:47:14Z",
    "author_association": "NONE",
    "body": "Any solutions for the above problem? I am getting the same error:\r\n`{ [Error: Connect Failed] code: 14, metadata: Metadata { _internal_repr: {} } }`\r\n\r\n**node.js:** v4.8.4\r\n**O.S:** mac OS\r\nI am trying the greeter example from `gRPC/examples/node`. I have tried multiple times, I am encountering the same error. The example works properly in other machines (linux with same node version). Here is the server and client side code.\r\n\r\n`greeter_server.js`\r\n\r\n```js\r\nvar PROTO_PATH = __dirname + '/../../protos/helloworld.proto';\r\n\r\nvar grpc = require('grpc');\r\nvar hello_proto = grpc.load(PROTO_PATH).helloworld;\r\n\r\n/**\r\n * Implements the SayHello RPC method.\r\n */\r\nfunction sayHello(call, callback) {\r\n  callback(null, {message: 'Hello ' + call.request.name});\r\n}\r\n\r\n/**\r\n * Starts an RPC server that receives requests for the Greeter service at the\r\n * sample server port\r\n */\r\nfunction main() {\r\n  var server = new grpc.Server();\r\n  server.addProtoService(hello_proto.Greeter.service, {sayHello: sayHello});\r\n  server.bind('localhost:50051', grpc.ServerCredentials.createInsecure());\r\n  server.start();\r\n}\r\n\r\nmain();\r\n```\r\n\r\n`greeter_client.js`\r\n\r\n```js\r\nvar PROTO_PATH = __dirname + '/../../protos/helloworld.proto';\r\n\r\nvar grpc = require('grpc');\r\nvar hello_proto = grpc.load(PROTO_PATH).helloworld;\r\n\r\nfunction main() {\r\n  var client = new hello_proto.Greeter('localhost:50051',\r\n                                       grpc.credentials.createInsecure());\r\n  var user;\r\n  if (process.argv.length >= 3) {\r\n    user = process.argv[2];\r\n  } else {\r\n    user = 'world';\r\n  }\r\n  client.sayHello({name: user}, function(err, response) {\r\n    if (err) {\r\n      console.log(err);\r\n    }\r\n\r\n    console.log('Greeting:', response);\r\n  });\r\n}\r\n\r\nmain();\r\n```\r\n\r\nAny idea what am I missing?\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/317894096",
    "html_url": "https://github.com/grpc/grpc/issues/11523#issuecomment-317894096",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11523",
    "id": 317894096,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzg5NDA5Ng==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-25T22:41:54Z",
    "updated_at": "2017-07-25T22:41:54Z",
    "author_association": "MEMBER",
    "body": "@lakshmantgld Are you just running the server and client, or are you doing server restarts or something as described in the original question? What version of gRPC are you using (you should be able to see this in `npm ls`)?\r\n\r\nThe only way I was able to reproduce this was by running the client while the server was not running."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/317943803",
    "html_url": "https://github.com/grpc/grpc/issues/11523#issuecomment-317943803",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11523",
    "id": 317943803,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzk0MzgwMw==",
    "user": {
      "login": "lakshmantgld",
      "id": 6481030,
      "node_id": "MDQ6VXNlcjY0ODEwMzA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6481030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lakshmantgld",
      "html_url": "https://github.com/lakshmantgld",
      "followers_url": "https://api.github.com/users/lakshmantgld/followers",
      "following_url": "https://api.github.com/users/lakshmantgld/following{/other_user}",
      "gists_url": "https://api.github.com/users/lakshmantgld/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lakshmantgld/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lakshmantgld/subscriptions",
      "organizations_url": "https://api.github.com/users/lakshmantgld/orgs",
      "repos_url": "https://api.github.com/users/lakshmantgld/repos",
      "events_url": "https://api.github.com/users/lakshmantgld/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lakshmantgld/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-26T04:24:41Z",
    "updated_at": "2017-07-26T04:24:41Z",
    "author_association": "NONE",
    "body": "Thank you @murgatroid99 for your response. Yes I got this error when the server was running. In my case the solution was to use `sudo`. I think I messed up my user/root accounts in mac OS X. \r\n\r\nWhen I tried `sudo node greeter_client.js`, It was able to connect with the running server. The example worked like a charm. Sorry for the inconvenience caused. Thank you."
  }
]
