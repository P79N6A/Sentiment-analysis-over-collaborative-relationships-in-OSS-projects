[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/459872382",
    "html_url": "https://github.com/grpc/grpc/pull/17908#issuecomment-459872382",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17908",
    "id": 459872382,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTg3MjM4Mg==",
    "user": {
      "login": "yashykt",
      "id": 4181124,
      "node_id": "MDQ6VXNlcjQxODExMjQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4181124?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yashykt",
      "html_url": "https://github.com/yashykt",
      "followers_url": "https://api.github.com/users/yashykt/followers",
      "following_url": "https://api.github.com/users/yashykt/following{/other_user}",
      "gists_url": "https://api.github.com/users/yashykt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yashykt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yashykt/subscriptions",
      "organizations_url": "https://api.github.com/users/yashykt/orgs",
      "repos_url": "https://api.github.com/users/yashykt/repos",
      "events_url": "https://api.github.com/users/yashykt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yashykt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-01T21:23:36Z",
    "updated_at": "2019-02-01T21:23:36Z",
    "author_association": "MEMBER",
    "body": "what were the errors like? In such cases, I'm always wary whether it's shouting because of no_ barrier instead of rel_acq semantics"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/459873705",
    "html_url": "https://github.com/grpc/grpc/pull/17908#issuecomment-459873705",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17908",
    "id": 459873705,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTg3MzcwNQ==",
    "user": {
      "login": "soheilhy",
      "id": 394885,
      "node_id": "MDQ6VXNlcjM5NDg4NQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/394885?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/soheilhy",
      "html_url": "https://github.com/soheilhy",
      "followers_url": "https://api.github.com/users/soheilhy/followers",
      "following_url": "https://api.github.com/users/soheilhy/following{/other_user}",
      "gists_url": "https://api.github.com/users/soheilhy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/soheilhy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/soheilhy/subscriptions",
      "organizations_url": "https://api.github.com/users/soheilhy/orgs",
      "repos_url": "https://api.github.com/users/soheilhy/repos",
      "events_url": "https://api.github.com/users/soheilhy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/soheilhy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-01T21:28:08Z",
    "updated_at": "2019-02-01T21:28:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "> what were the errors like? In such cases, I'm always wary whether it's shouting because of no_ barrier instead of rel_acq semantics\r\n\r\nIn that PR, the data in question is rel/acq :-) The problem is that TSAN can't figure out `done_poller` always happen after `cover_self`, because we can destroy when the ref-count goes from 2->1, instead of 1->0.\r\n\r\n```\r\nPASSED: make [time=7.7sec, retries=0:0]                                                                                                                                                                                                                                      \r\n2019-02-01 15:29:20,483 detected port server running version 20                                                                                                                                                                                                              \r\n2019-02-01 15:29:20,508 my port server is version 20                                                                                                                                                                                                                         \r\n                                                                                                                                                                                                                                                                             \r\nD0201 15:29:20.899369080  196346 test_config.cc:391]         test slowdown factor: sanitizer=5, fixture=1, poller=1, total=5                                                                                                                                                 \r\nD0201 15:29:20.912563400  196346 ev_posix.cc:170]            Using polling engine: epollex                                                                                                                                                                                   \r\nD0201 15:29:20.914166777  196346 dns_resolver.cc:334]        Using native dns resolver                                                                                                                                                                                       \r\nI0201 15:29:21.135197268  196346 bad_client.cc:99]           TEST: 50 52 49 20 2a 20 48 54 54 50 2f 32 2e 30 0d 0a 0d 0a 53 4d 0d 0a 0d 0a 00 00 00 04 00 00 00 00 00 'PRI * HTTP/2.0....SM.............'                                                                    \r\nI0201 15:29:21.637312175  196346 bad_client.cc:102]          TEST: (4212192 byte long string)                                                                                                                                                                                \r\n==================                                                                                                                                                                                                                                                           \r\nWARNING: ThreadSanitizer: data race (pid=196346)                                                                                                                                                                                                                             \r\n  Write of size 8 at 0x7b3000000148 by thread T5:                                                                                                                                                                                                                            \r\n    #0 free ??:? (window_overflow_bad_client_test+0x42979a)                                                                                                                                                                                                                  \r\n    #1 gpr_free /usr/local/google/home/soheil/envs/grpc/grpc/worktree-auth/src/core/lib/gpr/alloc.cc:77 (window_overflow_bad_client_test+0x5c40b4)                                                                                                                           \r\n    #2 done_poller(void*, grpc_error*) /usr/local/google/home/soheil/envs/grpc/grpc/worktree-auth/src/core/lib/iomgr/tcp_posix.cc:157 (window_overflow_bad_client_test+0x4d0e4b)                                                                                             \r\n    #3 exec_ctx_run(grpc_closure*, grpc_error*) /usr/local/google/home/soheil/envs/grpc/grpc/worktree-auth/src/core/lib/iomgr/exec_ctx.cc:40 (window_overflow_bad_client_test+0x4c88e9)                                                                                      \r\n    #4 grpc_core::ExecCtx::Flush() /usr/local/google/home/soheil/envs/grpc/grpc/worktree-auth/src/core/lib/iomgr/exec_ctx.cc:148 (window_overflow_bad_client_test+0x4c8673)                                                                                                  \r\n    #5 grpc_core::Executor::RunClosures(char const*, grpc_closure_list) /usr/local/google/home/soheil/envs/grpc/grpc/worktree-auth/src/core/lib/iomgr/executor.cc:136 (discriminator 1) (window_overflow_bad_client_test+0x590a53)                                           \r\n    #6 grpc_core::Executor::ThreadMain(void*) /usr/local/google/home/soheil/envs/grpc/grpc/worktree-auth/src/core/lib/iomgr/executor.cc:248 (window_overflow_bad_client_test+0x591158)                                                                                       \r\n    #7 operator() /usr/local/google/home/soheil/envs/grpc/grpc/worktree-auth/src/core/lib/gprpp/thd_posix.cc:100 (window_overflow_bad_client_test+0x5ccfcc)                                                                                                                  \r\n    #8 __invoke /usr/local/google/home/soheil/envs/grpc/grpc/worktree-auth/src/core/lib/gprpp/thd_posix.cc:74 (window_overflow_bad_client_test+0x5cce68)                                                                                                                     \r\n                                                                                                                                                                                                                                                                             \r\n  Previous atomic read of size 8 at 0x7b3000000148 by main thread:                                                                                                                                                                                                           \r\n    #0 __tsan_atomic64_load ??:? (window_overflow_bad_client_test+0x46a1ec)                                                                                                                                                                                                  \r\n    #1 pollset_add_fd(grpc_pollset*, grpc_fd*) /usr/local/google/home/soheil/envs/grpc/grpc/worktree-auth/src/core/lib/iomgr/ev_epollex_linux.cc:1306 (window_overflow_bad_client_test+0x57c74c)                                                                             \r\n    #2 grpc_pollset_add_fd(grpc_pollset*, grpc_fd*) /usr/local/google/home/soheil/envs/grpc/grpc/worktree-auth/src/core/lib/iomgr/ev_posix.cc:336 (window_overflow_bad_client_test+0x4c6fe4)                                                                                 \r\n    #3 cover_self((anonymous namespace)::grpc_tcp*) /usr/local/google/home/soheil/envs/grpc/grpc/worktree-auth/src/core/lib/iomgr/tcp_posix.cc:249 (window_overflow_bad_client_test+0x4d071c)                                                                                \r\n    #4 notify_on_write((anonymous namespace)::grpc_tcp*) /usr/local/google/home/soheil/envs/grpc/grpc/worktree-auth/src/core/lib/iomgr/tcp_posix.cc:275 (window_overflow_bad_client_test+0x4cfd2f)                                                                           \r\n    #5 tcp_handle_write(void*, grpc_error*) /usr/local/google/home/soheil/envs/grpc/grpc/worktree-auth/src/core/lib/iomgr/tcp_posix.cc:965 (window_overflow_bad_client_test+0x4d036c)                                                                                        \r\n    #6 tcp_drop_uncovered_then_handle_write(void*, grpc_error*) /usr/local/google/home/soheil/envs/grpc/grpc/worktree-auth/src/core/lib/iomgr/tcp_posix.cc:288 (window_overflow_bad_client_test+0x4d07f4)                                                                    \r\n    #7 exec_ctx_run(grpc_closure*, grpc_error*) /usr/local/google/home/soheil/envs/grpc/grpc/worktree-auth/src/core/lib/iomgr/exec_ctx.cc:40 (window_overflow_bad_client_test+0x4c88e9)                                                                                      \r\n    #8 grpc_core::ExecCtx::Flush() /usr/local/google/home/soheil/envs/grpc/grpc/worktree-auth/src/core/lib/iomgr/exec_ctx.cc:148 (window_overflow_bad_client_test+0x4c8673)                                                                                                  \r\n    #9 pollset_work(grpc_pollset*, grpc_pollset_worker**, long) /usr/local/google/home/soheil/envs/grpc/grpc/worktree-auth/src/core/lib/iomgr/ev_epollex_linux.cc:1152 (discriminator 1) (window_overflow_bad_client_test+0x57c250)                                          \r\n    #10 pollset_work(grpc_pollset*, grpc_pollset_worker**, long) /usr/local/google/home/soheil/envs/grpc/grpc/worktree-auth/src/core/lib/iomgr/ev_posix.cc:321 (window_overflow_bad_client_test+0x4c7304)                                                                    \r\n    #11 grpc_pollset_work(grpc_pollset*, grpc_pollset_worker**, long) /usr/local/google/home/soheil/envs/grpc/grpc/worktree-auth/src/core/lib/iomgr/pollset.cc:48 (window_overflow_bad_client_test+0x594a24)                                                                 \r\n    #12 cq_next(grpc_completion_queue*, gpr_timespec, void*) /usr/local/google/home/soheil/envs/grpc/grpc/worktree-auth/src/core/lib/surface/completion_queue.cc:1035 (window_overflow_bad_client_test+0x4f255e)                                                             \r\n    #13 grpc_completion_queue_next /usr/local/google/home/soheil/envs/grpc/grpc/worktree-auth/src/core/lib/surface/completion_queue.cc:1111 (window_overflow_bad_client_test+0x4f1076)                                                                                       \r\n    #14 grpc_run_client_side_validator(grpc_bad_client_arg*, unsigned int, grpc_endpoint_pair*, grpc_completion_queue*) /usr/local/google/home/soheil/envs/grpc/grpc/worktree-auth/test/core/bad_client/bad_client.cc:152 (discriminator 4) (window_overflow_bad_client_test+\r\n0x4bbffc)                                                                                                                                                                                                                                                                    \r\n    #15 grpc_run_bad_client_test(void (*)(grpc_server*, grpc_completion_queue*, void*), grpc_bad_client_arg*, int, unsigned int) /usr/local/google/home/soheil/envs/grpc/grpc/worktree-auth/test/core/bad_client/bad_client.cc:230 (discriminator 3) (window_overflow_bad_cli\r\nent_test+0x4bc6ee)                                                                                                                                                                                                                                                           \r\n    #16 main /usr/local/google/home/soheil/envs/grpc/grpc/worktree-auth/test/core/bad_client/tests/window_overflow.cc:98 (window_overflow_bad_client_test+0x4bb702)                                                                                                          \r\n                                                                                                                                                                                                                                                                             \r\n  Thread T5 'default-executo' (tid=197145, running) created by thread T1 at:                                                                                                                                                                                                 \r\n    #0 pthread_create ??:? (window_overflow_bad_client_test+0x429ee6)                                                                                                                                                                                                        \r\n    #1 ThreadInternalsPosix /usr/local/google/home/soheil/envs/grpc/grpc/worktree-auth/src/core/lib/gprpp/thd_posix.cc:73 (window_overflow_bad_client_test+0x5ccb76)                                                                                                         \r\n    #2 grpc_core::(anonymous namespace)::ThreadInternalsPosix* grpc_core::New<grpc_core::(anonymous namespace)::ThreadInternalsPosix, char const*&, void (*&)(void*), void*&, bool*>(char const*&, void (*&)(void*), void*&, bool*&&) /usr/local/google/home/soheil/envs/grpc\r\n/grpc/worktree-auth/./src/core/lib/gprpp/memory.h:47 (discriminator 4) (window_overflow_bad_client_test+0x5cc833)                                                                                                                                                            \r\n    #3 Thread /usr/local/google/home/soheil/envs/grpc/grpc/worktree-auth/src/core/lib/gprpp/thd_posix.cc:142 (window_overflow_bad_client_test+0x5cc654)                                                                                                                      \r\n    #4 grpc_core::Executor::Enqueue(grpc_closure*, grpc_error*, bool) /usr/local/google/home/soheil/envs/grpc/grpc/worktree-auth/src/core/lib/iomgr/executor.cc:363 (window_overflow_bad_client_test+0x591ba7)                                                               \r\n    #5 grpc_core::(anonymous namespace)::default_enqueue_long(grpc_closure*, grpc_error*) /usr/local/google/home/soheil/envs/grpc/grpc/worktree-auth/src/core/lib/iomgr/executor.cc:61 (window_overflow_bad_client_test+0x5923e0)                                            \r\n    #6 grpc_closure_sched(char const*, int, grpc_closure*, grpc_error*) /usr/local/google/home/soheil/envs/grpc/grpc/worktree-auth/./src/core/lib/iomgr/closure.h:299 (window_overflow_bad_client_test+0x4d1a3b)                                                             \r\n    #7 run_poller(void*, grpc_error*) /usr/local/google/home/soheil/envs/grpc/grpc/worktree-auth/src/core/lib/iomgr/tcp_posix.cc:195 (window_overflow_bad_client_test+0x4d0bac)                                                                                              \r\n    #8 grpc_core::Executor::RunClosures(char const*, grpc_closure_list) /usr/local/google/home/soheil/envs/grpc/grpc/worktree-auth/src/core/lib/iomgr/executor.cc:132 (window_overflow_bad_client_test+0x590a1d)                                                             \r\n    #9 grpc_core::Executor::ThreadMain(void*) /usr/local/google/home/soheil/envs/grpc/grpc/worktree-auth/src/core/lib/iomgr/executor.cc:248 (window_overflow_bad_client_test+0x591158)                                                                                       \r\n    #10 operator() /usr/local/google/home/soheil/envs/grpc/grpc/worktree-auth/src/core/lib/gprpp/thd_posix.cc:100 (window_overflow_bad_client_test+0x5ccfcc)                                                                                                                 \r\n    #11 __invoke /usr/local/google/home/soheil/envs/grpc/grpc/worktree-auth/src/core/lib/gprpp/thd_posix.cc:74 (window_overflow_bad_client_test+0x5cce68)\r\n\r\nSUMMARY: ThreadSanitizer: data race ??:? in free\r\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/459879027",
    "html_url": "https://github.com/grpc/grpc/pull/17908#issuecomment-459879027",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17908",
    "id": 459879027,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTg3OTAyNw==",
    "user": {
      "login": "yashykt",
      "id": 4181124,
      "node_id": "MDQ6VXNlcjQxODExMjQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4181124?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yashykt",
      "html_url": "https://github.com/yashykt",
      "followers_url": "https://api.github.com/users/yashykt/followers",
      "following_url": "https://api.github.com/users/yashykt/following{/other_user}",
      "gists_url": "https://api.github.com/users/yashykt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yashykt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yashykt/subscriptions",
      "organizations_url": "https://api.github.com/users/yashykt/orgs",
      "repos_url": "https://api.github.com/users/yashykt/repos",
      "events_url": "https://api.github.com/users/yashykt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yashykt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-01T21:47:21Z",
    "updated_at": "2019-02-01T21:47:21Z",
    "author_association": "MEMBER",
    "body": "https://github.com/grpc/grpc/blob/92ca78338cf9bed71985135bfee26b39701aae81/src/core/lib/iomgr/tcp_posix.cc#L230 can happen before https://github.com/grpc/grpc/blob/92ca78338cf9bed71985135bfee26b39701aae81/src/core/lib/iomgr/tcp_posix.cc#L243 as far as I see"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/459880039",
    "html_url": "https://github.com/grpc/grpc/pull/17908#issuecomment-459880039",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17908",
    "id": 459880039,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTg4MDAzOQ==",
    "user": {
      "login": "yashykt",
      "id": 4181124,
      "node_id": "MDQ6VXNlcjQxODExMjQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4181124?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yashykt",
      "html_url": "https://github.com/yashykt",
      "followers_url": "https://api.github.com/users/yashykt/followers",
      "following_url": "https://api.github.com/users/yashykt/following{/other_user}",
      "gists_url": "https://api.github.com/users/yashykt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yashykt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yashykt/subscriptions",
      "organizations_url": "https://api.github.com/users/yashykt/orgs",
      "repos_url": "https://api.github.com/users/yashykt/repos",
      "events_url": "https://api.github.com/users/yashykt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yashykt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-01T21:51:04Z",
    "updated_at": "2019-02-01T21:51:25Z",
    "author_association": "MEMBER",
    "body": "and the drop_uncovered over here is a no_barrier fetch add too https://github.com/grpc/grpc/blob/92ca78338cf9bed71985135bfee26b39701aae81/src/core/lib/iomgr/tcp_posix.cc#L198"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/459880043",
    "html_url": "https://github.com/grpc/grpc/pull/17908#issuecomment-459880043",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17908",
    "id": 459880043,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTg4MDA0Mw==",
    "user": {
      "login": "soheilhy",
      "id": 394885,
      "node_id": "MDQ6VXNlcjM5NDg4NQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/394885?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/soheilhy",
      "html_url": "https://github.com/soheilhy",
      "followers_url": "https://api.github.com/users/soheilhy/followers",
      "following_url": "https://api.github.com/users/soheilhy/following{/other_user}",
      "gists_url": "https://api.github.com/users/soheilhy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/soheilhy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/soheilhy/subscriptions",
      "organizations_url": "https://api.github.com/users/soheilhy/orgs",
      "repos_url": "https://api.github.com/users/soheilhy/repos",
      "events_url": "https://api.github.com/users/soheilhy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/soheilhy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-01T21:51:05Z",
    "updated_at": "2019-02-01T21:51:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, but that's not TSAN's complain. As long as we don't `free()` the poller, while there is a chance that `grpc_pollset_add_fd()` is called, we should be all set. This can't really happen due to the ref-counting, but TSAN currently doesn't complain because of locking."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/459883869",
    "html_url": "https://github.com/grpc/grpc/pull/17908#issuecomment-459883869",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17908",
    "id": 459883869,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTg4Mzg2OQ==",
    "user": {
      "login": "soheilhy",
      "id": 394885,
      "node_id": "MDQ6VXNlcjM5NDg4NQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/394885?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/soheilhy",
      "html_url": "https://github.com/soheilhy",
      "followers_url": "https://api.github.com/users/soheilhy/followers",
      "following_url": "https://api.github.com/users/soheilhy/following{/other_user}",
      "gists_url": "https://api.github.com/users/soheilhy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/soheilhy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/soheilhy/subscriptions",
      "organizations_url": "https://api.github.com/users/soheilhy/orgs",
      "repos_url": "https://api.github.com/users/soheilhy/repos",
      "events_url": "https://api.github.com/users/soheilhy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/soheilhy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-01T22:04:54Z",
    "updated_at": "2019-02-01T22:05:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "> and the drop_uncovered over here is a no_barrier fetch add too\r\n\r\nYes, exactly. The annotations I added basically imitate a `full_fetch`. Alternatively, we could simply do a `full_fetch_add` in `drop_uncovered()`:\r\n\r\n```\r\ndiff --git a/src/core/lib/iomgr/tcp_posix.cc b/src/core/lib/iomgr/tcp_posix.cc\r\nindex 792ffd2738..448e5f7b55 100644\r\n--- a/src/core/lib/iomgr/tcp_posix.cc\r\n+++ b/src/core/lib/iomgr/tcp_posix.cc\r\n@@ -195,7 +195,7 @@ static void run_poller(void* bp, grpc_error* error_ignored) {\r\n static void drop_uncovered(grpc_tcp* tcp) {\r\n   backup_poller* p = (backup_poller*)gpr_atm_acq_load(&g_backup_poller);\r\n   gpr_atm old_count =\r\n-      gpr_atm_no_barrier_fetch_add(&g_uncovered_notifications_pending, -1);\r\n+      gpr_atm_full_fetch_add(&g_uncovered_notifications_pending, -1);\r\n   if (grpc_tcp_trace.enabled()) {\r\n     gpr_log(GPR_INFO, \"BACKUP_POLLER:%p uncover cnt %d->%d\", p,\r\n             static_cast<int>(old_count), static_cast<int>(old_count) - 1);\r\n```\r\n\r\nThis is enough to mute the TSAN complaint. I would prefer this one, if we don't care about the backup poller's performance that much. I'm happy with both, so please just let me know "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/459890747",
    "html_url": "https://github.com/grpc/grpc/pull/17908#issuecomment-459890747",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17908",
    "id": 459890747,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTg5MDc0Nw==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-01T22:32:24Z",
    "updated_at": "2019-02-01T22:32:24Z",
    "author_association": "MEMBER",
    "body": "@soheilhy : Great followup. Yeah, we don't care about the backup poller's performance."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/459893327",
    "html_url": "https://github.com/grpc/grpc/pull/17908#issuecomment-459893327",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17908",
    "id": 459893327,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTg5MzMyNw==",
    "user": {
      "login": "soheilhy",
      "id": 394885,
      "node_id": "MDQ6VXNlcjM5NDg4NQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/394885?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/soheilhy",
      "html_url": "https://github.com/soheilhy",
      "followers_url": "https://api.github.com/users/soheilhy/followers",
      "following_url": "https://api.github.com/users/soheilhy/following{/other_user}",
      "gists_url": "https://api.github.com/users/soheilhy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/soheilhy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/soheilhy/subscriptions",
      "organizations_url": "https://api.github.com/users/soheilhy/orgs",
      "repos_url": "https://api.github.com/users/soheilhy/repos",
      "events_url": "https://api.github.com/users/soheilhy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/soheilhy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-01T22:43:14Z",
    "updated_at": "2019-02-01T22:43:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thank you @yashykt and @vjpai ! I discussed this with @yashykt offline (thank you!) and changed this to `full_fetch_add`."
  }
]
