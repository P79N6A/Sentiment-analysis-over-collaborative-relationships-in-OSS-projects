[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/327482819",
    "html_url": "https://github.com/grpc/grpc/issues/12409#issuecomment-327482819",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12409",
    "id": 327482819,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzQ4MjgxOQ==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-06T13:27:48Z",
    "updated_at": "2017-09-06T13:28:26Z",
    "author_association": "MEMBER",
    "body": "Although the crash occurred in this call stack,  it's unlikely (IMO) to have been caused by this call stack. In my experience, the assert invariants fail if some other condition (e.g., incorrect API use) have happened. Can you give us a substantial-enough code snippet of your API use that we can reproduce this error in an execution?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/327495705",
    "html_url": "https://github.com/grpc/grpc/issues/12409#issuecomment-327495705",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12409",
    "id": 327495705,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzQ5NTcwNQ==",
    "user": {
      "login": "ncteisen",
      "id": 6148140,
      "node_id": "MDQ6VXNlcjYxNDgxNDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6148140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ncteisen",
      "html_url": "https://github.com/ncteisen",
      "followers_url": "https://api.github.com/users/ncteisen/followers",
      "following_url": "https://api.github.com/users/ncteisen/following{/other_user}",
      "gists_url": "https://api.github.com/users/ncteisen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ncteisen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ncteisen/subscriptions",
      "organizations_url": "https://api.github.com/users/ncteisen/orgs",
      "repos_url": "https://api.github.com/users/ncteisen/repos",
      "events_url": "https://api.github.com/users/ncteisen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ncteisen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-06T14:11:39Z",
    "updated_at": "2017-09-06T14:11:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "I have a lot of tools in place to catch error refcounting bugs if you have a clean repro for this (even a flaky one)"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/327643943",
    "html_url": "https://github.com/grpc/grpc/issues/12409#issuecomment-327643943",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12409",
    "id": 327643943,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzY0Mzk0Mw==",
    "user": {
      "login": "dutor",
      "id": 440396,
      "node_id": "MDQ6VXNlcjQ0MDM5Ng==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/440396?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dutor",
      "html_url": "https://github.com/dutor",
      "followers_url": "https://api.github.com/users/dutor/followers",
      "following_url": "https://api.github.com/users/dutor/following{/other_user}",
      "gists_url": "https://api.github.com/users/dutor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dutor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dutor/subscriptions",
      "organizations_url": "https://api.github.com/users/dutor/orgs",
      "repos_url": "https://api.github.com/users/dutor/repos",
      "events_url": "https://api.github.com/users/dutor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dutor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-06T23:57:50Z",
    "updated_at": "2017-09-07T07:21:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "@vjpai @ncteisen Thanks for the reply.\r\n\r\nOK, I will mock the situation to reproduce this issue. But it would be difficult, because its occurrence needs days or weeks at the real heavy load situation."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/327647470",
    "html_url": "https://github.com/grpc/grpc/issues/12409#issuecomment-327647470",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12409",
    "id": 327647470,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzY0NzQ3MA==",
    "user": {
      "login": "dutor",
      "id": 440396,
      "node_id": "MDQ6VXNlcjQ0MDM5Ng==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/440396?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dutor",
      "html_url": "https://github.com/dutor",
      "followers_url": "https://api.github.com/users/dutor/followers",
      "following_url": "https://api.github.com/users/dutor/following{/other_user}",
      "gists_url": "https://api.github.com/users/dutor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dutor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dutor/subscriptions",
      "organizations_url": "https://api.github.com/users/dutor/orgs",
      "repos_url": "https://api.github.com/users/dutor/repos",
      "events_url": "https://api.github.com/users/dutor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dutor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-07T00:22:45Z",
    "updated_at": "2017-09-07T00:30:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "I haven't dug into the details of gRPC's core implementations. Maybe you could enlight me what APIs or actions will result in a ref/unref on the involved counter, from the point of view of the application codes."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/327656909",
    "html_url": "https://github.com/grpc/grpc/issues/12409#issuecomment-327656909",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12409",
    "id": 327656909,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzY1NjkwOQ==",
    "user": {
      "login": "dutor",
      "id": 440396,
      "node_id": "MDQ6VXNlcjQ0MDM5Ng==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/440396?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dutor",
      "html_url": "https://github.com/dutor",
      "followers_url": "https://api.github.com/users/dutor/followers",
      "following_url": "https://api.github.com/users/dutor/following{/other_user}",
      "gists_url": "https://api.github.com/users/dutor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dutor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dutor/subscriptions",
      "organizations_url": "https://api.github.com/users/dutor/orgs",
      "repos_url": "https://api.github.com/users/dutor/repos",
      "events_url": "https://api.github.com/users/dutor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dutor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-07T01:31:27Z",
    "updated_at": "2017-09-07T04:28:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "@vjpai @ncteisen \r\nWhile reviewing our code, I found that the internal requests mentioned above is sent like this:\r\n```c++\r\nvoid asyncSend(Req *req) {\r\n    // channel and its corresponding stub live as long as the process, as well as cq_\r\n    auto channel = getChannel();\r\n    auto stub = getStub();\r\n    // ctx_, resp_ and status_  are per request\r\n    std::unique_ptr<ClientAsyncResponseReader<Resp>> reader = stub->AsyncSend(&ctx_, req, cq_);\r\n    reader->Finish(&resp_, &status_, this);\r\n}\r\n```\r\n\r\nAs you see, `reader` here is destructed after `asyndSend` returns, although its memory would not be released.\r\n\r\nIs this incorrect?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/336931033",
    "html_url": "https://github.com/grpc/grpc/issues/12409#issuecomment-336931033",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12409",
    "id": 336931033,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjkzMTAzMw==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-16T15:52:22Z",
    "updated_at": "2017-10-16T15:52:22Z",
    "author_association": "MEMBER",
    "body": "Hi, didn't respond for a while but wanted to make it clear: the reader struct itself controls the completion of the operations that got triggered by the Finish call. The struct must live past the CompletionQueue::Next call that reveals that the Finish tag completed. That is the problematic API use here.\r\n\r\n"
  }
]
