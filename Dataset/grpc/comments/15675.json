[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/397038811",
    "html_url": "https://github.com/grpc/grpc/issues/15675#issuecomment-397038811",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15675",
    "id": 397038811,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzAzODgxMQ==",
    "user": {
      "login": "mehrdada",
      "id": 900411,
      "node_id": "MDQ6VXNlcjkwMDQxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/900411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mehrdada",
      "html_url": "https://github.com/mehrdada",
      "followers_url": "https://api.github.com/users/mehrdada/followers",
      "following_url": "https://api.github.com/users/mehrdada/following{/other_user}",
      "gists_url": "https://api.github.com/users/mehrdada/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mehrdada/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mehrdada/subscriptions",
      "organizations_url": "https://api.github.com/users/mehrdada/orgs",
      "repos_url": "https://api.github.com/users/mehrdada/repos",
      "events_url": "https://api.github.com/users/mehrdada/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mehrdada/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-13T18:26:57Z",
    "updated_at": "2018-06-13T18:26:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "gRPC Python's `grpcio-tools` package, unlike the other languages, does not ship `protoc` and `grpc_python_plugin` as separate binaries. They are combined together into a single Python extension module and accessible as documented and as you noted in your question. The main advantage of the way gRPC Python does things is that you can simply `pip install` it and fallback on building from source even if a prebuilt binary for your architecture is not available.\r\n\r\nWe do not distribute pre-built binaries for `grpc_python_plugin`, but you should be able to build it by taking the gRPC git source tree and building it:\r\n\r\n```\r\n$ git clone --recursive https://github.com/grpc/grpc\r\n$ cd grpc && make plugins -j 12\r\n$ ls bins/opt/grpc_python_plugin\r\n```"
  }
]
