[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/260783518",
    "html_url": "https://github.com/grpc/grpc/issues/8750#issuecomment-260783518",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8750",
    "id": 260783518,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDc4MzUxOA==",
    "user": {
      "login": "shaladdle",
      "id": 1184925,
      "node_id": "MDQ6VXNlcjExODQ5MjU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1184925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shaladdle",
      "html_url": "https://github.com/shaladdle",
      "followers_url": "https://api.github.com/users/shaladdle/followers",
      "following_url": "https://api.github.com/users/shaladdle/following{/other_user}",
      "gists_url": "https://api.github.com/users/shaladdle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shaladdle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shaladdle/subscriptions",
      "organizations_url": "https://api.github.com/users/shaladdle/orgs",
      "repos_url": "https://api.github.com/users/shaladdle/repos",
      "events_url": "https://api.github.com/users/shaladdle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shaladdle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-15T21:59:49Z",
    "updated_at": "2016-11-15T21:59:49Z",
    "author_association": "NONE",
    "body": "Thanks for making this issue, Vijay.\n\nI think there's an argument for overloading. The first part of the overloading section in the style guide:\n\n> Use overloaded functions (including constructors) only if a reader looking at a call site can get a good idea of what is happening without having to first figure out exactly which overload is being called.\n\nYou could argue that there are no callers here, since these methods are just called by gRPC internals when a message arrives (AFAIK). This makes the issue of confusion at the call site moot. Additionally, most people won't even know about these overloads, you kind of have to go looking for them.\n\n> The real thing going on is that unary or server-only-streaming RPCs are being interpeted as bidi-streaming; the RPC analogy of reinterpet_cast. Would it be helpful to use the word reinterpret in the description?\n\nI'm not a fan of this personally. Does this terminology appear in other languages? Is there any plan for this API in other languages? Even if there isn't, it seems desirable to use language agnostic terms when possible.\n\n> Even if we avoid overloading, the choice of Streamed really represents the fact that it is stream-ified. Would Streamified be better?\n\nStreamified is better than Streamed imo, but I kind of lean towards overloads myself. Another thing to consider is putting the Streamified or whatever at the end, eg \n\n``` c++\ngrc::Status Foo(grpc::Context*,const FooRequest&,FooReply*)\n```\n\nbecomes\n\n``` c++\ngrpc::Status Foo_Streamified(grpc::Context*, grpc::ServerUnaryStreamer<FooRequest, FooReply>*)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/335693110",
    "html_url": "https://github.com/grpc/grpc/issues/8750#issuecomment-335693110",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8750",
    "id": 335693110,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTY5MzExMA==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-11T06:08:50Z",
    "updated_at": "2017-10-11T06:08:50Z",
    "author_association": "MEMBER",
    "body": "I think the cows left the barn on this one a long time ago. Not sure if these APIs are used widely but it's too late to do anything about these names now (except possibly add new preferred synonyms).\r\n"
  }
]
