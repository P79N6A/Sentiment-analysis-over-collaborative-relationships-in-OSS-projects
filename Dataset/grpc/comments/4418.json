[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/164565815",
    "html_url": "https://github.com/grpc/grpc/issues/4418#issuecomment-164565815",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/4418",
    "id": 164565815,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NDU2NTgxNQ==",
    "user": {
      "login": "soltanmm",
      "id": 4889063,
      "node_id": "MDQ6VXNlcjQ4ODkwNjM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4889063?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/soltanmm",
      "html_url": "https://github.com/soltanmm",
      "followers_url": "https://api.github.com/users/soltanmm/followers",
      "following_url": "https://api.github.com/users/soltanmm/following{/other_user}",
      "gists_url": "https://api.github.com/users/soltanmm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/soltanmm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/soltanmm/subscriptions",
      "organizations_url": "https://api.github.com/users/soltanmm/orgs",
      "repos_url": "https://api.github.com/users/soltanmm/repos",
      "events_url": "https://api.github.com/users/soltanmm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/soltanmm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-14T21:30:42Z",
    "updated_at": "2015-12-14T21:30:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "We can do this as an entirely additive change (whew); slating for post-GA.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/171049898",
    "html_url": "https://github.com/grpc/grpc/issues/4418#issuecomment-171049898",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/4418",
    "id": 171049898,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTA0OTg5OA==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-12T20:48:51Z",
    "updated_at": "2016-01-12T20:48:51Z",
    "author_association": "MEMBER",
    "body": "I have a pretty strong idea of how I'd like to do this but may not get to it for a while. How pressing is the need for this on your side? How onerous is the workaround?\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/171052371",
    "html_url": "https://github.com/grpc/grpc/issues/4418#issuecomment-171052371",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/4418",
    "id": 171052371,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTA1MjM3MQ==",
    "user": {
      "login": "inconshreveable",
      "id": 836692,
      "node_id": "MDQ6VXNlcjgzNjY5Mg==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/836692?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/inconshreveable",
      "html_url": "https://github.com/inconshreveable",
      "followers_url": "https://api.github.com/users/inconshreveable/followers",
      "following_url": "https://api.github.com/users/inconshreveable/following{/other_user}",
      "gists_url": "https://api.github.com/users/inconshreveable/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/inconshreveable/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/inconshreveable/subscriptions",
      "organizations_url": "https://api.github.com/users/inconshreveable/orgs",
      "repos_url": "https://api.github.com/users/inconshreveable/repos",
      "events_url": "https://api.github.com/users/inconshreveable/events{/privacy}",
      "received_events_url": "https://api.github.com/users/inconshreveable/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-12T20:58:02Z",
    "updated_at": "2016-01-12T20:58:02Z",
    "author_association": "NONE",
    "body": "It's not too onerous. It adds additional configuration complexity because now each logical service has to listen on a separate port. It's motivating moving as much functionality out of python as well, so that's not too bad either.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/171056925",
    "html_url": "https://github.com/grpc/grpc/issues/4418#issuecomment-171056925",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/4418",
    "id": 171056925,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTA1NjkyNQ==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-12T21:15:38Z",
    "updated_at": "2016-01-12T21:35:17Z",
    "author_association": "MEMBER",
    "body": "Actually, I meant the workaround that lets you run multiple servicers on the _same_ port.\n\nSomething I wrote separately about this but might as well copy here:\n\n```\nYou can create a server with grpc.beta.implementations.server,\nwhich takes a dictionary of service implementations. Your code\nwould probably look something like:\n\ndef one_method(request_object, servicer_context):\n  return <response expression>\n\ndef another_method(request_iterator, servicer_context):\n  for request in request_iterator:\n    yield <a response expression>\n    yield <another response expression>\n\nservice_implementations = {\n    ('/one_package.OneService', 'one_method'): utilities.unary_unary_inline(one_method),\n    ('/another_package.AnotherService', 'another_method'): utilities.stream_stream_inline(another_method),\n}\n\nserver = implementations.server(service_implementations, <possibly a ServerOptions object specifying protocol buffer serialization/deserialization behaviors>)\n```\n\n. How does that look to you?\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/171057879",
    "html_url": "https://github.com/grpc/grpc/issues/4418#issuecomment-171057879",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/4418",
    "id": 171057879,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTA1Nzg3OQ==",
    "user": {
      "login": "inconshreveable",
      "id": 836692,
      "node_id": "MDQ6VXNlcjgzNjY5Mg==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/836692?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/inconshreveable",
      "html_url": "https://github.com/inconshreveable",
      "followers_url": "https://api.github.com/users/inconshreveable/followers",
      "following_url": "https://api.github.com/users/inconshreveable/following{/other_user}",
      "gists_url": "https://api.github.com/users/inconshreveable/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/inconshreveable/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/inconshreveable/subscriptions",
      "organizations_url": "https://api.github.com/users/inconshreveable/orgs",
      "repos_url": "https://api.github.com/users/inconshreveable/repos",
      "events_url": "https://api.github.com/users/inconshreveable/events{/privacy}",
      "received_events_url": "https://api.github.com/users/inconshreveable/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-12T21:18:50Z",
    "updated_at": "2016-01-12T21:18:50Z",
    "author_association": "NONE",
    "body": "Ah! I hadn't seen that. That looks pretty reasonable.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/186400293",
    "html_url": "https://github.com/grpc/grpc/issues/4418#issuecomment-186400293",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/4418",
    "id": 186400293,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjQwMDI5Mw==",
    "user": {
      "login": "therc",
      "id": 13481082,
      "node_id": "MDQ6VXNlcjEzNDgxMDgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/13481082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/therc",
      "html_url": "https://github.com/therc",
      "followers_url": "https://api.github.com/users/therc/followers",
      "following_url": "https://api.github.com/users/therc/following{/other_user}",
      "gists_url": "https://api.github.com/users/therc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/therc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/therc/subscriptions",
      "organizations_url": "https://api.github.com/users/therc/orgs",
      "repos_url": "https://api.github.com/users/therc/repos",
      "events_url": "https://api.github.com/users/therc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/therc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-19T20:50:46Z",
    "updated_at": "2016-02-19T20:50:46Z",
    "author_association": "NONE",
    "body": "Is this still low priority? We want to add a standard gGRPC health check to N different servers. We don't want to add the request to the existing services themselves, because then we'd need N different probers. As the original poster says, this is trivial in Go, but cumbersome in Python. Also, the workaround is messy, especially when serializers and deserializers get into the picture. (I mostly work on the Go stuff, so I can't recall with all that my colleague had to deal with.)\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/189691157",
    "html_url": "https://github.com/grpc/grpc/issues/4418#issuecomment-189691157",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/4418",
    "id": 189691157,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4OTY5MTE1Nw==",
    "user": {
      "login": "AndrewIngram",
      "id": 35227,
      "node_id": "MDQ6VXNlcjM1MjI3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/35227?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AndrewIngram",
      "html_url": "https://github.com/AndrewIngram",
      "followers_url": "https://api.github.com/users/AndrewIngram/followers",
      "following_url": "https://api.github.com/users/AndrewIngram/following{/other_user}",
      "gists_url": "https://api.github.com/users/AndrewIngram/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AndrewIngram/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AndrewIngram/subscriptions",
      "organizations_url": "https://api.github.com/users/AndrewIngram/orgs",
      "repos_url": "https://api.github.com/users/AndrewIngram/repos",
      "events_url": "https://api.github.com/users/AndrewIngram/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AndrewIngram/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-27T17:56:43Z",
    "updated_at": "2016-02-27T17:56:43Z",
    "author_association": "NONE",
    "body": "In evaluating whether to use gRPC or thrift (I much prefer the appearance of gRPC), the two biggest issues with gRPC right now are lack of Python 3 support, and lack of a trivial API for doing service multiplexing.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/224763955",
    "html_url": "https://github.com/grpc/grpc/issues/4418#issuecomment-224763955",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/4418",
    "id": 224763955,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDc2Mzk1NQ==",
    "user": {
      "login": "hsaliak",
      "id": 150108,
      "node_id": "MDQ6VXNlcjE1MDEwOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/150108?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hsaliak",
      "html_url": "https://github.com/hsaliak",
      "followers_url": "https://api.github.com/users/hsaliak/followers",
      "following_url": "https://api.github.com/users/hsaliak/following{/other_user}",
      "gists_url": "https://api.github.com/users/hsaliak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hsaliak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hsaliak/subscriptions",
      "organizations_url": "https://api.github.com/users/hsaliak/orgs",
      "repos_url": "https://api.github.com/users/hsaliak/repos",
      "events_url": "https://api.github.com/users/hsaliak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hsaliak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-08T23:42:48Z",
    "updated_at": "2016-06-08T23:42:48Z",
    "author_association": "MEMBER",
    "body": "@nathanielmanistaatgoogle i see that this is marked as \"to close\" and then GA. Do we have an updated workaround available that addresses the earlier concerns?\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/224920201",
    "html_url": "https://github.com/grpc/grpc/issues/4418#issuecomment-224920201",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/4418",
    "id": 224920201,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDkyMDIwMQ==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-09T14:53:06Z",
    "updated_at": "2016-06-09T14:53:06Z",
    "author_association": "MEMBER",
    "body": "@hsaliak: I intend to have it in place by tomorrow.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/225997923",
    "html_url": "https://github.com/grpc/grpc/issues/4418#issuecomment-225997923",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/4418",
    "id": 225997923,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTk5NzkyMw==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-14T19:58:30Z",
    "updated_at": "2016-06-14T19:58:30Z",
    "author_association": "MEMBER",
    "body": "This will be fixed by [pull request 6874](https://github.com/grpc/grpc/pull/6874) which has passed review and is ready to merge.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/235338932",
    "html_url": "https://github.com/grpc/grpc/issues/4418#issuecomment-235338932",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/4418",
    "id": 235338932,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTMzODkzMg==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-26T17:16:19Z",
    "updated_at": "2016-07-26T17:16:19Z",
    "author_association": "MEMBER",
    "body": "Anyone else coming across this: we've added an example of multiple servicers in one server in [`examples/python/multiplex`](https://github.com/grpc/grpc/tree/7b104cd1c23a3e6ee3cb0809f39617ceda5e2575/examples/python/multiplex).\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/326952326",
    "html_url": "https://github.com/grpc/grpc/issues/4418#issuecomment-326952326",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/4418",
    "id": 326952326,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjk1MjMyNg==",
    "user": {
      "login": "amitsaha",
      "id": 512598,
      "node_id": "MDQ6VXNlcjUxMjU5OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/512598?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitsaha",
      "html_url": "https://github.com/amitsaha",
      "followers_url": "https://api.github.com/users/amitsaha/followers",
      "following_url": "https://api.github.com/users/amitsaha/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitsaha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitsaha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitsaha/subscriptions",
      "organizations_url": "https://api.github.com/users/amitsaha/orgs",
      "repos_url": "https://api.github.com/users/amitsaha/repos",
      "events_url": "https://api.github.com/users/amitsaha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitsaha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-04T12:35:34Z",
    "updated_at": "2017-09-04T12:35:34Z",
    "author_association": "NONE",
    "body": "@AndrewIngram I am curious what you meant by \"grpc's lack of Python 3 support\"? I have been playing with Python 3 + gRPC and everything seems to be working?"
  }
]
