[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/351453684",
    "html_url": "https://github.com/grpc/grpc/issues/13752#issuecomment-351453684",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13752",
    "id": 351453684,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTQ1MzY4NA==",
    "user": {
      "login": "mehrdada",
      "id": 900411,
      "node_id": "MDQ6VXNlcjkwMDQxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/900411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mehrdada",
      "html_url": "https://github.com/mehrdada",
      "followers_url": "https://api.github.com/users/mehrdada/followers",
      "following_url": "https://api.github.com/users/mehrdada/following{/other_user}",
      "gists_url": "https://api.github.com/users/mehrdada/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mehrdada/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mehrdada/subscriptions",
      "organizations_url": "https://api.github.com/users/mehrdada/orgs",
      "repos_url": "https://api.github.com/users/mehrdada/repos",
      "events_url": "https://api.github.com/users/mehrdada/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mehrdada/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-13T16:57:54Z",
    "updated_at": "2017-12-13T16:57:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "@nathanielmanistaatgoogle likely related to your metadata change?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/351461863",
    "html_url": "https://github.com/grpc/grpc/issues/13752#issuecomment-351461863",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13752",
    "id": 351461863,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTQ2MTg2Mw==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-13T17:24:23Z",
    "updated_at": "2017-12-13T17:24:23Z",
    "author_association": "MEMBER",
    "body": "Well, triggered by the metadata change, but not root-caused-by the metadata change. The defect is in... whatever is passing `unicode` values as metadata values; [metadata values must be `str` if the associated key does not end in `-bin` and must be `bytes` if the associated key does end in `-bin`](https://grpc.io/grpc/python/grpc.html#term-metadata). So `unicode` on Python 2.7 is never allowed."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/351463188",
    "html_url": "https://github.com/grpc/grpc/issues/13752#issuecomment-351463188",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13752",
    "id": 351463188,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTQ2MzE4OA==",
    "user": {
      "login": "r00tat",
      "id": 1749213,
      "node_id": "MDQ6VXNlcjE3NDkyMTM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1749213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/r00tat",
      "html_url": "https://github.com/r00tat",
      "followers_url": "https://api.github.com/users/r00tat/followers",
      "following_url": "https://api.github.com/users/r00tat/following{/other_user}",
      "gists_url": "https://api.github.com/users/r00tat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/r00tat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/r00tat/subscriptions",
      "organizations_url": "https://api.github.com/users/r00tat/orgs",
      "repos_url": "https://api.github.com/users/r00tat/repos",
      "events_url": "https://api.github.com/users/r00tat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/r00tat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-13T17:28:50Z",
    "updated_at": "2017-12-13T17:28:50Z",
    "author_association": "NONE",
    "body": "@nathanielmanistaatgoogle So this is a bug for google-cloud-datastore?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/351465174",
    "html_url": "https://github.com/grpc/grpc/issues/13752#issuecomment-351465174",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13752",
    "id": 351465174,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTQ2NTE3NA==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-13T17:36:04Z",
    "updated_at": "2017-12-13T17:36:04Z",
    "author_association": "MEMBER",
    "body": "@r00tat: sounds like it to me, yes."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/351490117",
    "html_url": "https://github.com/grpc/grpc/issues/13752#issuecomment-351490117",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13752",
    "id": 351490117,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTQ5MDExNw==",
    "user": {
      "login": "r00tat",
      "id": 1749213,
      "node_id": "MDQ6VXNlcjE3NDkyMTM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1749213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/r00tat",
      "html_url": "https://github.com/r00tat",
      "followers_url": "https://api.github.com/users/r00tat/followers",
      "following_url": "https://api.github.com/users/r00tat/following{/other_user}",
      "gists_url": "https://api.github.com/users/r00tat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/r00tat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/r00tat/subscriptions",
      "organizations_url": "https://api.github.com/users/r00tat/orgs",
      "repos_url": "https://api.github.com/users/r00tat/repos",
      "events_url": "https://api.github.com/users/r00tat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/r00tat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-13T19:05:26Z",
    "updated_at": "2017-12-13T19:05:26Z",
    "author_association": "NONE",
    "body": "@nathanielmanistaatgoogle Can you point me towards the related changes, so I can help the datastore team to find the root of the issue?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/351491333",
    "html_url": "https://github.com/grpc/grpc/issues/13752#issuecomment-351491333",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13752",
    "id": 351491333,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTQ5MTMzMw==",
    "user": {
      "login": "mehrdada",
      "id": 900411,
      "node_id": "MDQ6VXNlcjkwMDQxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/900411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mehrdada",
      "html_url": "https://github.com/mehrdada",
      "followers_url": "https://api.github.com/users/mehrdada/followers",
      "following_url": "https://api.github.com/users/mehrdada/following{/other_user}",
      "gists_url": "https://api.github.com/users/mehrdada/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mehrdada/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mehrdada/subscriptions",
      "organizations_url": "https://api.github.com/users/mehrdada/orgs",
      "repos_url": "https://api.github.com/users/mehrdada/repos",
      "events_url": "https://api.github.com/users/mehrdada/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mehrdada/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-13T19:10:00Z",
    "updated_at": "2017-12-13T19:10:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "\"More strict enforcement of type-correctness of metadata values. (#13672)\" is the relevant item in the release notes."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/351493524",
    "html_url": "https://github.com/grpc/grpc/issues/13752#issuecomment-351493524",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13752",
    "id": 351493524,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTQ5MzUyNA==",
    "user": {
      "login": "mehrdada",
      "id": 900411,
      "node_id": "MDQ6VXNlcjkwMDQxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/900411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mehrdada",
      "html_url": "https://github.com/mehrdada",
      "followers_url": "https://api.github.com/users/mehrdada/followers",
      "following_url": "https://api.github.com/users/mehrdada/following{/other_user}",
      "gists_url": "https://api.github.com/users/mehrdada/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mehrdada/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mehrdada/subscriptions",
      "organizations_url": "https://api.github.com/users/mehrdada/orgs",
      "repos_url": "https://api.github.com/users/mehrdada/repos",
      "events_url": "https://api.github.com/users/mehrdada/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mehrdada/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-13T19:18:03Z",
    "updated_at": "2017-12-13T19:18:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "(FYI, I have temporarily disabled the 1.8.0 on PyPI while they fix the bug or pin their dependencies)"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/351494005",
    "html_url": "https://github.com/grpc/grpc/issues/13752#issuecomment-351494005",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13752",
    "id": 351494005,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTQ5NDAwNQ==",
    "user": {
      "login": "r00tat",
      "id": 1749213,
      "node_id": "MDQ6VXNlcjE3NDkyMTM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1749213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/r00tat",
      "html_url": "https://github.com/r00tat",
      "followers_url": "https://api.github.com/users/r00tat/followers",
      "following_url": "https://api.github.com/users/r00tat/following{/other_user}",
      "gists_url": "https://api.github.com/users/r00tat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/r00tat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/r00tat/subscriptions",
      "organizations_url": "https://api.github.com/users/r00tat/orgs",
      "repos_url": "https://api.github.com/users/r00tat/repos",
      "events_url": "https://api.github.com/users/r00tat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/r00tat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-13T19:19:56Z",
    "updated_at": "2017-12-13T19:19:56Z",
    "author_association": "NONE",
    "body": "Great! There is also the matching [issue on google-cloud-python](https://github.com/GoogleCloudPlatform/google-cloud-python/issues/4581).\r\n\r\nShould we keep this issue open or close it as it is being fixed in google-cloud-python?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/351494774",
    "html_url": "https://github.com/grpc/grpc/issues/13752#issuecomment-351494774",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13752",
    "id": 351494774,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTQ5NDc3NA==",
    "user": {
      "login": "mehrdada",
      "id": 900411,
      "node_id": "MDQ6VXNlcjkwMDQxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/900411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mehrdada",
      "html_url": "https://github.com/mehrdada",
      "followers_url": "https://api.github.com/users/mehrdada/followers",
      "following_url": "https://api.github.com/users/mehrdada/following{/other_user}",
      "gists_url": "https://api.github.com/users/mehrdada/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mehrdada/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mehrdada/subscriptions",
      "organizations_url": "https://api.github.com/users/mehrdada/orgs",
      "repos_url": "https://api.github.com/users/mehrdada/repos",
      "events_url": "https://api.github.com/users/mehrdada/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mehrdada/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-13T19:22:33Z",
    "updated_at": "2017-12-13T19:23:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Let's leave it open for a bit so duplicate ones would not be created. In the meantime I am re-releasing the \"1.8.0\" package on PyPI under \"1.8.0-rc3\", before enabling it as 1.8.0 again."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/351495042",
    "html_url": "https://github.com/grpc/grpc/issues/13752#issuecomment-351495042",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13752",
    "id": 351495042,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTQ5NTA0Mg==",
    "user": {
      "login": "theacodes",
      "id": 250995,
      "node_id": "MDQ6VXNlcjI1MDk5NQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theacodes",
      "html_url": "https://github.com/theacodes",
      "followers_url": "https://api.github.com/users/theacodes/followers",
      "following_url": "https://api.github.com/users/theacodes/following{/other_user}",
      "gists_url": "https://api.github.com/users/theacodes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theacodes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theacodes/subscriptions",
      "organizations_url": "https://api.github.com/users/theacodes/orgs",
      "repos_url": "https://api.github.com/users/theacodes/repos",
      "events_url": "https://api.github.com/users/theacodes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theacodes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-13T19:23:33Z",
    "updated_at": "2017-12-13T19:23:33Z",
    "author_association": "NONE",
    "body": "@nathanielmanistaatgoogle can you clear something up for me?\r\n\r\nOn Py3 it should be `(bytes, str)` and on Py3 it should be `(str, str)`?  If so, that's really unfortunate and will require a `if PY2/PY3` branch in our code."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/351495171",
    "html_url": "https://github.com/grpc/grpc/issues/13752#issuecomment-351495171",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13752",
    "id": 351495171,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTQ5NTE3MQ==",
    "user": {
      "login": "theacodes",
      "id": 250995,
      "node_id": "MDQ6VXNlcjI1MDk5NQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theacodes",
      "html_url": "https://github.com/theacodes",
      "followers_url": "https://api.github.com/users/theacodes/followers",
      "following_url": "https://api.github.com/users/theacodes/following{/other_user}",
      "gists_url": "https://api.github.com/users/theacodes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theacodes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theacodes/subscriptions",
      "organizations_url": "https://api.github.com/users/theacodes/orgs",
      "repos_url": "https://api.github.com/users/theacodes/repos",
      "events_url": "https://api.github.com/users/theacodes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theacodes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-13T19:24:07Z",
    "updated_at": "2017-12-13T19:24:07Z",
    "author_association": "NONE",
    "body": "@mehrdada are you deleting the `1.8.0` release? That's generally a big no-no."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/351495954",
    "html_url": "https://github.com/grpc/grpc/issues/13752#issuecomment-351495954",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13752",
    "id": 351495954,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTQ5NTk1NA==",
    "user": {
      "login": "mehrdada",
      "id": 900411,
      "node_id": "MDQ6VXNlcjkwMDQxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/900411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mehrdada",
      "html_url": "https://github.com/mehrdada",
      "followers_url": "https://api.github.com/users/mehrdada/followers",
      "following_url": "https://api.github.com/users/mehrdada/following{/other_user}",
      "gists_url": "https://api.github.com/users/mehrdada/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mehrdada/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mehrdada/subscriptions",
      "organizations_url": "https://api.github.com/users/mehrdada/orgs",
      "repos_url": "https://api.github.com/users/mehrdada/repos",
      "events_url": "https://api.github.com/users/mehrdada/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mehrdada/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-13T19:27:01Z",
    "updated_at": "2017-12-13T19:27:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jonparrott It is slightly unfortunate, but I will reupload the **exact** binary again after they fix the bug or pin the dependency version (hopefully happening quickly). The impact should be minimal (I have not sent the official release email yet) and stops the potential bleeding."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/351496135",
    "html_url": "https://github.com/grpc/grpc/issues/13752#issuecomment-351496135",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13752",
    "id": 351496135,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTQ5NjEzNQ==",
    "user": {
      "login": "alex2awesome",
      "id": 3460632,
      "node_id": "MDQ6VXNlcjM0NjA2MzI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3460632?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alex2awesome",
      "html_url": "https://github.com/alex2awesome",
      "followers_url": "https://api.github.com/users/alex2awesome/followers",
      "following_url": "https://api.github.com/users/alex2awesome/following{/other_user}",
      "gists_url": "https://api.github.com/users/alex2awesome/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alex2awesome/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alex2awesome/subscriptions",
      "organizations_url": "https://api.github.com/users/alex2awesome/orgs",
      "repos_url": "https://api.github.com/users/alex2awesome/repos",
      "events_url": "https://api.github.com/users/alex2awesome/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alex2awesome/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-13T19:27:44Z",
    "updated_at": "2017-12-13T19:27:44Z",
    "author_association": "NONE",
    "body": "I'm getting this error as well, just coming across this thread. I'm confused about the cause — but I'll read the links you posted @nathanielmanistaatgoogle. In the meantime, what do you recommend doing? What is the timeline for a fix? "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/351496840",
    "html_url": "https://github.com/grpc/grpc/issues/13752#issuecomment-351496840",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13752",
    "id": 351496840,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTQ5Njg0MA==",
    "user": {
      "login": "r00tat",
      "id": 1749213,
      "node_id": "MDQ6VXNlcjE3NDkyMTM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1749213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/r00tat",
      "html_url": "https://github.com/r00tat",
      "followers_url": "https://api.github.com/users/r00tat/followers",
      "following_url": "https://api.github.com/users/r00tat/following{/other_user}",
      "gists_url": "https://api.github.com/users/r00tat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/r00tat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/r00tat/subscriptions",
      "organizations_url": "https://api.github.com/users/r00tat/orgs",
      "repos_url": "https://api.github.com/users/r00tat/repos",
      "events_url": "https://api.github.com/users/r00tat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/r00tat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-13T19:30:04Z",
    "updated_at": "2017-12-13T19:30:47Z",
    "author_association": "NONE",
    "body": "@alex2awesome Workaround is to reinstall your dependcies or run a `pip install` with the explicit grpcio version.\r\n\r\n```\r\npip install --upgrade grpcio==1.7.3\r\n```\r\n\r\nIf you do a fresh install from PyPI you should now get 1.7.3 as @mehrdada removed 1.8.0."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/351497511",
    "html_url": "https://github.com/grpc/grpc/issues/13752#issuecomment-351497511",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13752",
    "id": 351497511,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTQ5NzUxMQ==",
    "user": {
      "login": "alex2awesome",
      "id": 3460632,
      "node_id": "MDQ6VXNlcjM0NjA2MzI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3460632?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alex2awesome",
      "html_url": "https://github.com/alex2awesome",
      "followers_url": "https://api.github.com/users/alex2awesome/followers",
      "following_url": "https://api.github.com/users/alex2awesome/following{/other_user}",
      "gists_url": "https://api.github.com/users/alex2awesome/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alex2awesome/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alex2awesome/subscriptions",
      "organizations_url": "https://api.github.com/users/alex2awesome/orgs",
      "repos_url": "https://api.github.com/users/alex2awesome/repos",
      "events_url": "https://api.github.com/users/alex2awesome/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alex2awesome/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-13T19:32:34Z",
    "updated_at": "2017-12-13T19:32:34Z",
    "author_association": "NONE",
    "body": "Thanks @r00tat!! And this is an issue cause by unicode in an Entity's `key` values? That's just about the only place I can think of that unicode could creep in in my case — all my data is `int`s or `float`s. Or is unicode _anywhere_ in a datastore Entity? "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/351498616",
    "html_url": "https://github.com/grpc/grpc/issues/13752#issuecomment-351498616",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13752",
    "id": 351498616,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTQ5ODYxNg==",
    "user": {
      "login": "r00tat",
      "id": 1749213,
      "node_id": "MDQ6VXNlcjE3NDkyMTM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1749213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/r00tat",
      "html_url": "https://github.com/r00tat",
      "followers_url": "https://api.github.com/users/r00tat/followers",
      "following_url": "https://api.github.com/users/r00tat/following{/other_user}",
      "gists_url": "https://api.github.com/users/r00tat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/r00tat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/r00tat/subscriptions",
      "organizations_url": "https://api.github.com/users/r00tat/orgs",
      "repos_url": "https://api.github.com/users/r00tat/repos",
      "events_url": "https://api.github.com/users/r00tat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/r00tat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-13T19:36:14Z",
    "updated_at": "2017-12-13T19:36:14Z",
    "author_association": "NONE",
    "body": "The issue is related to the implementation of google-cloud-datastore or other google-cloud-python libraries. To be more specific the issue is related to the encoding of metadata in grpc requests, so not to your data being saved to datastore.  "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/351498935",
    "html_url": "https://github.com/grpc/grpc/issues/13752#issuecomment-351498935",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13752",
    "id": 351498935,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTQ5ODkzNQ==",
    "user": {
      "login": "dhermes",
      "id": 520669,
      "node_id": "MDQ6VXNlcjUyMDY2OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhermes",
      "html_url": "https://github.com/dhermes",
      "followers_url": "https://api.github.com/users/dhermes/followers",
      "following_url": "https://api.github.com/users/dhermes/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions",
      "organizations_url": "https://api.github.com/users/dhermes/orgs",
      "repos_url": "https://api.github.com/users/dhermes/repos",
      "events_url": "https://api.github.com/users/dhermes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhermes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-13T19:37:24Z",
    "updated_at": "2017-12-13T19:43:54Z",
    "author_association": "NONE",
    "body": "To summarize the currently reported failures:\r\n\r\n## Python 2.7\r\n\r\n1.  From `google-cloud-firestore`:\r\n    ```\r\n    [\r\n        (\r\n            b'google-cloud-resource-prefix',\r\n            u'projects/.../databases/(default)',\r\n        ), (\r\n            u'x-goog-api-client',\r\n            b'gl-python/2.7.13 gccl/0.28.0 gapic/0.28.0 gax/0.15.16 grpc/1.8.0',\r\n        ),\r\n    ]\r\n    ```\r\n1.  From `google-cloud-datastore`:\r\n    ```\r\n    [\r\n        (\r\n            u'x-goog-api-client',\r\n            b'gl-python/2.7.13 gccl/1.4.0 gapic/0.15.3 gax/0.15.16 grpc/1.8.0',\r\n        ),\r\n    ]\r\n    ```\r\n\r\n> The metadata value can be either a valid HTTP ASCII `str`, or `bytes`. If `bytes` are provided, the key must end with `-bin`\r\n\r\nIt seems `b'google-cloud-resource-prefix'` is not the problem?\r\n\r\n@nathanielmanistaatgoogle What is \"a valid HTTP ASCII `str`\"? Does this mean the string literal given by `'abc'`, which differs between Python 2 and 3 (i.e. `str`), or do you mean `unicode` in Python 2 and `str` in Python 3?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/351501371",
    "html_url": "https://github.com/grpc/grpc/issues/13752#issuecomment-351501371",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13752",
    "id": 351501371,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTUwMTM3MQ==",
    "user": {
      "login": "mehrdada",
      "id": 900411,
      "node_id": "MDQ6VXNlcjkwMDQxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/900411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mehrdada",
      "html_url": "https://github.com/mehrdada",
      "followers_url": "https://api.github.com/users/mehrdada/followers",
      "following_url": "https://api.github.com/users/mehrdada/following{/other_user}",
      "gists_url": "https://api.github.com/users/mehrdada/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mehrdada/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mehrdada/subscriptions",
      "organizations_url": "https://api.github.com/users/mehrdada/orgs",
      "repos_url": "https://api.github.com/users/mehrdada/repos",
      "events_url": "https://api.github.com/users/mehrdada/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mehrdada/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-13T19:46:42Z",
    "updated_at": "2017-12-13T19:46:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jonparrott re the question you asked @nathanielmanistaatgoogle, I leave the official guidance to him, but gRPC internally uses something like https://github.com/grpc/grpc/blob/master/src/python/grpcio/grpc/_common.py#L64"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/351502327",
    "html_url": "https://github.com/grpc/grpc/issues/13752#issuecomment-351502327",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13752",
    "id": 351502327,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTUwMjMyNw==",
    "user": {
      "login": "r00tat",
      "id": 1749213,
      "node_id": "MDQ6VXNlcjE3NDkyMTM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1749213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/r00tat",
      "html_url": "https://github.com/r00tat",
      "followers_url": "https://api.github.com/users/r00tat/followers",
      "following_url": "https://api.github.com/users/r00tat/following{/other_user}",
      "gists_url": "https://api.github.com/users/r00tat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/r00tat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/r00tat/subscriptions",
      "organizations_url": "https://api.github.com/users/r00tat/orgs",
      "repos_url": "https://api.github.com/users/r00tat/repos",
      "events_url": "https://api.github.com/users/r00tat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/r00tat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-13T19:50:04Z",
    "updated_at": "2017-12-13T19:50:04Z",
    "author_association": "NONE",
    "body": "Maybe I'm getting this wrong, but shouldn't [_encode](https://github.com/grpc/grpc/pull/13672/files#diff-b04c749392fba3fdec9f89feed9c7811R29) being called on [line 36 of metadata.pyx.pxi](https://github.com/grpc/grpc/pull/13672/files#diff-5f94dacb2158bd65765e5c9225b4dc73R36) convert unicode to str?\r\n\r\n```\r\n+cdef bytes _encode(str native_string_or_none):\r\n +  if native_string_or_none is None:\r\n +    return b''\r\n +  elif isinstance(native_string_or_none, (bytes,)):\r\n +    return <bytes>native_string_or_none\r\n +  elif isinstance(native_string_or_none, (unicode,)):\r\n +    return native_string_or_none.encode('ascii')\r\n +  else:\r\n +    raise TypeError('Expected str, not {}'.format(type(native_string_or_none)))\r\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/351512522",
    "html_url": "https://github.com/grpc/grpc/issues/13752#issuecomment-351512522",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13752",
    "id": 351512522,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTUxMjUyMg==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-13T20:28:52Z",
    "updated_at": "2017-12-13T20:28:52Z",
    "author_association": "MEMBER",
    "body": "@r00tat: Note the `str` on the first line of what you quoted - I believe _that's_ what's doing the check and raising a `TypeError` (and the latter four lines of what you quoted are unreachable code that I should clean up...)."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/351513704",
    "html_url": "https://github.com/grpc/grpc/issues/13752#issuecomment-351513704",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13752",
    "id": 351513704,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTUxMzcwNA==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-13T20:33:39Z",
    "updated_at": "2017-12-13T20:33:39Z",
    "author_association": "MEMBER",
    "body": "@dhermes: yep, `str`, a so-called \"native string\" that is equivalent to `bytes` on Python 2 and `unicode` on Python 3. All keys should be `str` instances and all values should be either `str` instances or `bytes` instances depending on the respective absence or presence of the `-bin` suffix on the associated key."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/351515906",
    "html_url": "https://github.com/grpc/grpc/issues/13752#issuecomment-351515906",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13752",
    "id": 351515906,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTUxNTkwNg==",
    "user": {
      "login": "dhermes",
      "id": 520669,
      "node_id": "MDQ6VXNlcjUyMDY2OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhermes",
      "html_url": "https://github.com/dhermes",
      "followers_url": "https://api.github.com/users/dhermes/followers",
      "following_url": "https://api.github.com/users/dhermes/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions",
      "organizations_url": "https://api.github.com/users/dhermes/orgs",
      "repos_url": "https://api.github.com/users/dhermes/repos",
      "events_url": "https://api.github.com/users/dhermes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhermes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-13T20:42:33Z",
    "updated_at": "2017-12-13T20:42:33Z",
    "author_association": "NONE",
    "body": "@nathanielmanistaatgoogle I don't want to be a wet blanket, but **requiring** a string literal (i.e. `str`) for the first item in the pair seems like a bad API. Consider that in Python 2, string equality across `str` and `unicode` \"just works\". Throw in the fact that you **don't allow** a Python 2 string literal for the 2nd item (i.e. since it's `bytes`) makes it even worse."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/351517592",
    "html_url": "https://github.com/grpc/grpc/issues/13752#issuecomment-351517592",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13752",
    "id": 351517592,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTUxNzU5Mg==",
    "user": {
      "login": "theacodes",
      "id": 250995,
      "node_id": "MDQ6VXNlcjI1MDk5NQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theacodes",
      "html_url": "https://github.com/theacodes",
      "followers_url": "https://api.github.com/users/theacodes/followers",
      "following_url": "https://api.github.com/users/theacodes/following{/other_user}",
      "gists_url": "https://api.github.com/users/theacodes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theacodes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theacodes/subscriptions",
      "organizations_url": "https://api.github.com/users/theacodes/orgs",
      "repos_url": "https://api.github.com/users/theacodes/repos",
      "events_url": "https://api.github.com/users/theacodes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theacodes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-13T20:49:27Z",
    "updated_at": "2017-12-13T20:49:27Z",
    "author_association": "NONE",
    "body": "Yeah this is confusing, so ignoring the whole `*-bin` prefix you're telling me that on Python 2 we need to pass in `b'...'` for keys and values and on Python 3 it needs to be `u'...'`? \r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/351521037",
    "html_url": "https://github.com/grpc/grpc/issues/13752#issuecomment-351521037",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13752",
    "id": 351521037,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTUyMTAzNw==",
    "user": {
      "login": "dhermes",
      "id": 520669,
      "node_id": "MDQ6VXNlcjUyMDY2OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhermes",
      "html_url": "https://github.com/dhermes",
      "followers_url": "https://api.github.com/users/dhermes/followers",
      "following_url": "https://api.github.com/users/dhermes/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions",
      "organizations_url": "https://api.github.com/users/dhermes/orgs",
      "repos_url": "https://api.github.com/users/dhermes/repos",
      "events_url": "https://api.github.com/users/dhermes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhermes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-13T21:02:20Z",
    "updated_at": "2017-12-13T21:02:20Z",
    "author_association": "NONE",
    "body": "If I may clarify @jonparrott, this is what I understand:\r\n\r\n## Python 2\r\n\r\n```\r\nKey                     | Value\r\n------------------------+-----------------------\r\nb'key'     or 'key'     | u'only-unicode'\r\nb'key-bin' or 'key-bin' | b'bytes'        or 'literal-still-bytes'\r\n```\r\n\r\n## Python 3\r\n\r\n```\r\nKey                     | Value\r\n------------------------+------------------------------------------\r\nu'key'     or 'key'     | u'unicode'    or 'literal-still-unicode'\r\nu'key-bin' or 'key-bin' | b'only-bytes'\r\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/351533419",
    "html_url": "https://github.com/grpc/grpc/issues/13752#issuecomment-351533419",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13752",
    "id": 351533419,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTUzMzQxOQ==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-13T21:39:30Z",
    "updated_at": "2017-12-13T21:39:30Z",
    "author_association": "MEMBER",
    "body": "@dhermes: I think your upper-left corner is in error; I think the table (thanks for making it; visual aids are always such a treat) should be\r\n\r\n## Python 2\r\n\r\n```\r\nKey                     | Value\r\n------------------------+-----------------------\r\nb'key'     or 'key'     | 'literal-still-bytes'\r\nb'key-bin' or 'key-bin' | b'bytes'        or 'literal-still-bytes'\r\n```\r\n\r\n## Python 3\r\n\r\n```\r\nKey                     | Value\r\n------------------------+------------------------------------------\r\nu'key'     or 'key'     | u'unicode'    or 'literal-still-unicode'\r\nu'key-bin' or 'key-bin' | b'only-bytes'\r\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/351534512",
    "html_url": "https://github.com/grpc/grpc/issues/13752#issuecomment-351534512",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13752",
    "id": 351534512,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTUzNDUxMg==",
    "user": {
      "login": "theacodes",
      "id": 250995,
      "node_id": "MDQ6VXNlcjI1MDk5NQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theacodes",
      "html_url": "https://github.com/theacodes",
      "followers_url": "https://api.github.com/users/theacodes/followers",
      "following_url": "https://api.github.com/users/theacodes/following{/other_user}",
      "gists_url": "https://api.github.com/users/theacodes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theacodes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theacodes/subscriptions",
      "organizations_url": "https://api.github.com/users/theacodes/orgs",
      "repos_url": "https://api.github.com/users/theacodes/repos",
      "events_url": "https://api.github.com/users/theacodes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theacodes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-13T21:43:47Z",
    "updated_at": "2017-12-13T21:43:47Z",
    "author_association": "NONE",
    "body": "So, this seems super silly to me. Why different types in Python 2 and 3? If we're going to be strict about types, please be strict on *text string* vs *byte string*. \r\n\r\nWe can workaround this in our client library code, but it literally requires a branch on python 2 vs python 3 and that makes me sad."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/351540637",
    "html_url": "https://github.com/grpc/grpc/issues/13752#issuecomment-351540637",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13752",
    "id": 351540637,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTU0MDYzNw==",
    "user": {
      "login": "dhermes",
      "id": 520669,
      "node_id": "MDQ6VXNlcjUyMDY2OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhermes",
      "html_url": "https://github.com/dhermes",
      "followers_url": "https://api.github.com/users/dhermes/followers",
      "following_url": "https://api.github.com/users/dhermes/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions",
      "organizations_url": "https://api.github.com/users/dhermes/orgs",
      "repos_url": "https://api.github.com/users/dhermes/repos",
      "events_url": "https://api.github.com/users/dhermes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhermes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-13T22:06:54Z",
    "updated_at": "2017-12-13T22:07:39Z",
    "author_association": "NONE",
    "body": "Yes, the **keys** we'll probably always control in libraries but the values **may** ~~will~~ come from users. In some cases, the value will be a \"text string\" (i.e. `unicode`) because it comes as a `string` field of a protobuf message (which is defined to be `utf-8`). See one of our examples above, `u'projects/.../databases/(default)'`, which is **invalid** in Python 2.7 since not a string literal (in the protos for that API: [e.g. 1][1], [e.g. 2][2]).\r\n\r\n[1]: https://github.com/googleapis/googleapis/blob/0c7f6f05a6c5e9b2768bc5b592ef2e18fe48bffc/google/firestore/v1beta1/document.proto#L39\r\n[2]: https://github.com/googleapis/googleapis/blob/0c7f6f05a6c5e9b2768bc5b592ef2e18fe48bffc/google/firestore/v1beta1/document.proto#L119"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/351543530",
    "html_url": "https://github.com/grpc/grpc/issues/13752#issuecomment-351543530",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13752",
    "id": 351543530,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTU0MzUzMA==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-13T22:19:23Z",
    "updated_at": "2017-12-13T22:19:23Z",
    "author_association": "MEMBER",
    "body": "I can think of at least three things that influenced the current shape of the API:\r\n* There was a forecast that authors were going to be writing a lot of string literal values for both metadata keys and metadata values and that idiomatic code wouldn't be cluttered with `b` and `u` prefixes.\r\n* There's just one precise metadata type (as complex as it is) and authors can rely on the fact that (holding Python interpreter version constant) **metadata comes out of gRPC Python with exactly the type with which it was passed to gRPC Python**.\r\n* keys are highly restricted (ASCII alphanumeric plus dashes, underscores, periods and... that might be it) and values are also restricted to a subset of ASCII (unless the associated key ends with `-bin`, in which case the value is arbitrary binary `bytes` and can be any content), so `unicode` doesn't seem to present as a useful component type because there's nothing that's representable in non-ASCII `unicode` that's useful as a part of gRPC metadata.\r\n\r\nI'd really appreciate hearing your reactions to those points as users-of-gRPC Python:\r\n* How often are you writing your metadata keys as literal values in your source code as opposed to getting them from somewhere else? How about your values? Are `u` and `b` prefixes cosmetically unattractive in your code or just an accepted part of developing for both language versions?\r\n* If (for the moment assuming Python 2) you were allowed to pass a `unicode` metadata value on one side of an RPC and on the other side of the RPC the value was passed to you as `str`-`bytes`, would that be weird? Would that lead to bugs?\r\n\r\nIn the Beta API all metadata was just `bytes`. Was that better than the 1.0-and-later semantics only just now being enforced? Beyond what you've already said, what would you _like_ to see?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/351545024",
    "html_url": "https://github.com/grpc/grpc/issues/13752#issuecomment-351545024",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13752",
    "id": 351545024,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTU0NTAyNA==",
    "user": {
      "login": "dhermes",
      "id": 520669,
      "node_id": "MDQ6VXNlcjUyMDY2OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhermes",
      "html_url": "https://github.com/dhermes",
      "followers_url": "https://api.github.com/users/dhermes/followers",
      "following_url": "https://api.github.com/users/dhermes/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions",
      "organizations_url": "https://api.github.com/users/dhermes/orgs",
      "repos_url": "https://api.github.com/users/dhermes/repos",
      "events_url": "https://api.github.com/users/dhermes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhermes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-13T22:25:52Z",
    "updated_at": "2017-12-13T22:31:46Z",
    "author_association": "NONE",
    "body": "The distinction between bytes and unicode is just as relevant (if not more) than using a string literal or not. To be idiomatic in Python 2, a user can just `from __future__ import unicode_literals`. There is no avoiding `b'...'` or `u'...'` to make the distinction.\r\n\r\nRE: \"on the other side of the RPC\", we **never** consume the metadata on the other side\r\n\r\nHere are all the places we form keys (that I can currently find), they are all string literals:\r\n\r\n- [`datastore`][1]\r\n- [`firestore`][2]\r\n- [`spanner`][3]\r\n- [`api_core`][4] ([usage][5])\r\n- [`bigtable`][6]\r\n\r\n----\r\n\r\nMost importantly:\r\n\r\n> metadata comes out of gRPC Python with exactly the type with which it was passed to gRPC Python\r\n\r\nNothing makes you violate this if you require \"bytes\" and \"text\" rather than \"string literal\" (which isn't really a type due to the Python 2/3 schism).\r\n\r\n[1]: https://github.com/GoogleCloudPlatform/google-cloud-python/blob/460b6060b2ecd7e5f91c12745155e516e548801c/datastore/google/cloud/datastore/_gax.py#L41-L43\r\n[2]: https://github.com/GoogleCloudPlatform/google-cloud-python/blob/460b6060b2ecd7e5f91c12745155e516e548801c/firestore/google/cloud/firestore_v1beta1/_helpers.py#L963\r\n[3]: https://github.com/GoogleCloudPlatform/google-cloud-python/blob/460b6060b2ecd7e5f91c12745155e516e548801c/spanner/google/cloud/spanner_v1/_helpers.py#L274\r\n[4]: https://github.com/GoogleCloudPlatform/google-cloud-python/blob/460b6060b2ecd7e5f91c12745155e516e548801c/api_core/google/api_core/gapic_v1/client_info.py#L28\r\n[5]: https://github.com/GoogleCloudPlatform/google-cloud-python/blob/460b6060b2ecd7e5f91c12745155e516e548801c/api_core/google/api_core/gapic_v1/client_info.py#L81\r\n[6]: https://github.com/GoogleCloudPlatform/google-cloud-python/blob/460b6060b2ecd7e5f91c12745155e516e548801c/bigtable/google/cloud/bigtable/client.py#L74-L76"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/351546128",
    "html_url": "https://github.com/grpc/grpc/issues/13752#issuecomment-351546128",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13752",
    "id": 351546128,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTU0NjEyOA==",
    "user": {
      "login": "mehrdada",
      "id": 900411,
      "node_id": "MDQ6VXNlcjkwMDQxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/900411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mehrdada",
      "html_url": "https://github.com/mehrdada",
      "followers_url": "https://api.github.com/users/mehrdada/followers",
      "following_url": "https://api.github.com/users/mehrdada/following{/other_user}",
      "gists_url": "https://api.github.com/users/mehrdada/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mehrdada/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mehrdada/subscriptions",
      "organizations_url": "https://api.github.com/users/mehrdada/orgs",
      "repos_url": "https://api.github.com/users/mehrdada/repos",
      "events_url": "https://api.github.com/users/mehrdada/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mehrdada/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-13T22:30:23Z",
    "updated_at": "2017-12-13T22:30:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "@dhermes @nathanielmanistaatgoogle  Re your last point \"on the other side of RPC\", I'd like to point out that metadata can also be consumed by interceptors within the client side of the application."
  }
]
