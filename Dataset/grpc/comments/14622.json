[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/371213967",
    "html_url": "https://github.com/grpc/grpc/issues/14622#issuecomment-371213967",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14622",
    "id": 371213967,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTIxMzk2Nw==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-07T17:21:22Z",
    "updated_at": "2018-03-07T17:21:22Z",
    "author_association": "MEMBER",
    "body": "When you say \"stub code\", do you mean the method handler in the service? We\ndo catch exceptions in the C++ sync server and return them with a failed\nstatus, but we cannot return the content of the exception since it might be\nprivate to the server. You are certainly welcome to wrap your method\nhandler internal code in a catch block if you need to see the exception\ncontent.\n\nSo the crash is surprising to me; can you try running the exception_test on\nyour system? It's one of our build targets for testing.\n\nOn Wed, Mar 7, 2018, 6:59 AM nweidmann <notifications@github.com> wrote:\n\n> What version of gRPC and what language are you using?\n>\n> Master C++\n> What operating system (Linux, Windows, …) and version?\n>\n> Windows\n> What runtime / compiler are you using (e.g. python version or version of\n> gcc)\n>\n> VisualStudio 2015\n> What did you do?\n>\n> stub method throws exception:\n>\n> throw std::exception(\"Hello\");\n> What did you expect to see?\n>\n> I expected the client application to get a status != OK with the message\n> \"Hello\"\n> What did you see instead?\n>\n> Server crash.\n> Anything else we should know about your project / environment?\n>\n> This works perfectly in the Java server implementation. Server does not\n> crash and the client get a bad status.\n>\n> —\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/grpc/grpc/issues/14622>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AIdEkFdH6VabDXbzKcyZyK94jU0WL9aKks5tb_W6gaJpZM4SgmDM>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/371427166",
    "html_url": "https://github.com/grpc/grpc/issues/14622#issuecomment-371427166",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14622",
    "id": 371427166,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTQyNzE2Ng==",
    "user": {
      "login": "nweidmann",
      "id": 37149644,
      "node_id": "MDQ6VXNlcjM3MTQ5NjQ0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/37149644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nweidmann",
      "html_url": "https://github.com/nweidmann",
      "followers_url": "https://api.github.com/users/nweidmann/followers",
      "following_url": "https://api.github.com/users/nweidmann/following{/other_user}",
      "gists_url": "https://api.github.com/users/nweidmann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nweidmann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nweidmann/subscriptions",
      "organizations_url": "https://api.github.com/users/nweidmann/orgs",
      "repos_url": "https://api.github.com/users/nweidmann/repos",
      "events_url": "https://api.github.com/users/nweidmann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nweidmann/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-08T09:14:19Z",
    "updated_at": "2018-03-08T09:14:19Z",
    "author_association": "NONE",
    "body": "Yes, I mean the method handler in my service.\r\n\r\nRegarding the fact that you \"cannot\" return the content of the exception I partially disagree.\r\nI agree regarding unknown exception types, but you could at least catch std::exception and send it's message back to the client application...\r\n\r\nI know that the correct way of doing it would be to handle all exception within the application code, but gRPC should guard itself from baldy implemented application code.\r\n\r\nI ran my test in debug and there is NO try / catch anywhere in the gRPC framework if you following the stack dump.\r\n\r\nHere is my code:\r\n\r\ngrpc::Status getData(grpc::ServerContext* context, const MyService::DataRequest* request, MyService::DataReply* response) \r\n{\r\n   throw std::exception(\"Hello\");\r\n}\r\n\r\nAnd the call stack:\r\n\r\n1. grpc::internal::RpcMethodHandler<gRPC::TestService::Service,gRPC::DataRequest,gRPC::DataReply>::RunHandler(const grpc::internal::MethodHandler::HandlerParameter & param)\r\n2. grpc::Server::SyncRequest::CallData::Run(std::shared_ptr<grpc::Server::GlobalCallbacks> global_callbacks)\r\n3. grpc::Server::SyncRequestThreadManager::DoWork(void * tag, bool ok)\r\n4. grpc::ThreadManager::MainWorkLoop()\r\n5. grpc::ThreadManager::WorkerThread::Run()\r\n\r\nWhy not have a try / catch around:\r\n\r\nstatus = func_(....) in grpc::internal::RpcMethodHandler<gRPC::TestService::Service,gRPC::DataRequest,gRPC::DataReply>::RunHandler\r\n\r\nThanks for your help,\r\n\r\nNicolas\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/371905965",
    "html_url": "https://github.com/grpc/grpc/issues/14622#issuecomment-371905965",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14622",
    "id": 371905965,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTkwNTk2NQ==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-09T18:34:59Z",
    "updated_at": "2018-03-09T22:32:37Z",
    "author_association": "MEMBER",
    "body": "I know your post listed that you're at master, but we do have a try/catch block in master (see https://github.com/grpc/grpc/blob/master/include/grpcpp/impl/codegen/method_handler_impl.h#L40),\r\n which is called from the top function in your stack trace (see https://github.com/grpc/grpc/blob/master/include/grpcpp/impl/codegen/method_handler_impl.h#L67 ). It has been this way for more than a month now (ever since #13815 ). These are protected in code blocks, but the default value is to allow exceptions for all Windows platforms and for Posix platforms where the compiler defines `__EXCEPTIONS`. Can you check the commit that you're at?\r\n\r\nAs for the suggestion that we return the error message specified in `std::exception` back to the client, our original plan was to do that, but it was pointed out in the [discussion thread for the exception handling proposal](https://groups.google.com/d/msg/grpc-io/u1XmQPAi3fA/lcaIHEegBQAJ) that it's very insecure to do that. We have no control over what the server method handler has in its exceptions, particularly since the exception could be arbitrary levels deep in a call chain. "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/372583192",
    "html_url": "https://github.com/grpc/grpc/issues/14622#issuecomment-372583192",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14622",
    "id": 372583192,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjU4MzE5Mg==",
    "user": {
      "login": "nweidmann",
      "id": 37149644,
      "node_id": "MDQ6VXNlcjM3MTQ5NjQ0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/37149644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nweidmann",
      "html_url": "https://github.com/nweidmann",
      "followers_url": "https://api.github.com/users/nweidmann/followers",
      "following_url": "https://api.github.com/users/nweidmann/following{/other_user}",
      "gists_url": "https://api.github.com/users/nweidmann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nweidmann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nweidmann/subscriptions",
      "organizations_url": "https://api.github.com/users/nweidmann/orgs",
      "repos_url": "https://api.github.com/users/nweidmann/repos",
      "events_url": "https://api.github.com/users/nweidmann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nweidmann/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-13T08:21:51Z",
    "updated_at": "2018-03-13T08:21:51Z",
    "author_association": "NONE",
    "body": "I had a lot lately to do and didn't update for a few weeks...\r\n\r\nI updated today and everything works fine !\r\n\r\nI have read the discussion thread, and the reason you are not forwarding (application) std::exception messages from within the gRPC framework makes 100% sense!\r\n\r\nThanks a lot for your help.\r\n\r\nI will close this case.\r\n\r\nHave a nice day,\r\n\r\nNicolas"
  }
]
