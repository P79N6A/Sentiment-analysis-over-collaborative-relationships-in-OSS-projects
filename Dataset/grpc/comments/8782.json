[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/263716854",
    "html_url": "https://github.com/grpc/grpc/pull/8782#issuecomment-263716854",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8782",
    "id": 263716854,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzcxNjg1NA==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-29T22:13:32Z",
    "updated_at": "2016-11-29T22:13:32Z",
    "author_association": "MEMBER",
    "body": "Filed issue #8904 to track the endpoint problem."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/264018528",
    "html_url": "https://github.com/grpc/grpc/pull/8782#issuecomment-264018528",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8782",
    "id": 264018528,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDAxODUyOA==",
    "user": {
      "login": "yang-g",
      "id": 10122250,
      "node_id": "MDQ6VXNlcjEwMTIyMjUw",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10122250?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yang-g",
      "html_url": "https://github.com/yang-g",
      "followers_url": "https://api.github.com/users/yang-g/followers",
      "following_url": "https://api.github.com/users/yang-g/following{/other_user}",
      "gists_url": "https://api.github.com/users/yang-g/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yang-g/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yang-g/subscriptions",
      "organizations_url": "https://api.github.com/users/yang-g/orgs",
      "repos_url": "https://api.github.com/users/yang-g/repos",
      "events_url": "https://api.github.com/users/yang-g/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yang-g/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-30T22:35:11Z",
    "updated_at": "2016-11-30T22:35:11Z",
    "author_association": "MEMBER",
    "body": "\n\n\n\nReviewed 6 of 8 files at r1, 1 of 2 files at r2.\nReview status: 6 of 8 files reviewed at latest revision, 4 unresolved discussions.\n\n---\n\n*[src/core/ext/client_channel/http_connect_handshaker.c, line 120 at r2](https://reviewable.io:443/reviews/grpc/grpc/8782#-KXrN0Q9IEhLntrYEKhq:-KXrN0QAItiWAv1f52eD:btjl9mw) ([raw file](https://github.com/grpc/grpc/blob/b8f97a4ac02536bcb88867061b9dad6c35818f2a/src/core/ext/client_channel/http_connect_handshaker.c#L120)):*\n> ```C\n>     error = GRPC_ERROR_CREATE(\"Handshaker shutdown\");\n>   }\n>   if (!handshaker->shutdown) {\n> ```\n\nDo we want to set handshaker->shutdown = true here? Otherwise we can shutdown the endpoint twice?\n\n---\n\n*[src/core/ext/client_channel/http_connect_handshaker.c, line 231 at r2](https://reviewable.io:443/reviews/grpc/grpc/8782#-KXrMmDISlplW2-0cRG6:-KXrMmDISlplW2-0cRG7:b-wzrul5) ([raw file](https://github.com/grpc/grpc/blob/b8f97a4ac02536bcb88867061b9dad6c35818f2a/src/core/ext/client_channel/http_connect_handshaker.c#L231)):*\n> ```C\n>   grpc_exec_ctx_sched(exec_ctx, handshaker->on_handshake_done, error, NULL);\n> done:\n>   gpr_mu_unlock(&handshaker->mu);\n> ```\n\nWhat happens if at this unlock, the manager's timer fired and calls connect handshaker's shutdown?\n\n---\n\n*[src/core/lib/channel/handshaker.h, line 136 at r2](https://reviewable.io:443/reviews/grpc/grpc/8782#-KXrA6Nn6vI0CQ17yINl:-KXrA6Nn6vI0CQ17yINm:bkt3fp) ([raw file](https://github.com/grpc/grpc/blob/b8f97a4ac02536bcb88867061b9dad6c35818f2a/src/core/lib/channel/handshaker.h#L136)):*\n> ```objc\n> /// Takes ownership of \\a endpoint, and then passes that ownership to\n> /// the \\a on_handshake_done callback.\n> /// Does NOT take ownership of \\a args.  Instead, makes a copy before\n> ```\n\ns/args/channel_args/\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/8782)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/264212879",
    "html_url": "https://github.com/grpc/grpc/pull/8782#issuecomment-264212879",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8782",
    "id": 264212879,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDIxMjg3OQ==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-01T16:01:16Z",
    "updated_at": "2016-12-01T16:01:16Z",
    "author_association": "MEMBER",
    "body": "\n\n\n\nReview status: 6 of 8 files reviewed at latest revision, 4 unresolved discussions.\n\n---\n\n*[src/core/ext/client_channel/http_connect_handshaker.c, line 120 at r2](https://reviewable.io:443/reviews/grpc/grpc/8782#-KXrN0Q9IEhLntrYEKhq:-KXrNjbKccS6P0GZRhgQ:b2f6d8m) ([raw file](https://github.com/grpc/grpc/blob/b8f97a4ac02536bcb88867061b9dad6c35818f2a/src/core/ext/client_channel/http_connect_handshaker.c#L120)):*\n<details><summary><i>Previously, yang-g (Yang Gao) wrote…</i></summary><blockquote>\n\nDo we want to set handshaker->shutdown = true here? Otherwise we can shutdown the endpoint twice?\n</blockquote></details>\n\nNo, handshaker->shutdown should only be set by http_connect_handshaker_shutdown().  The code here is just checking why we're failing.\n\nThe handshake_failed_locked() function is called when the read or write callback is invoked either with error != GRPC_ERROR_NONE or with handshaker->shutdown true.  There are actually three cases here:\n\n1. There was no shutdown, but the read or write failed for an unrelated reason.  In this case, error != GRPC_ERROR_NONE and handshaker->shutdown is false.\n\n2. There was a shutdown that interrupted the endpoint read or write.  In this case, error != GRPC_ERROR_NONE and handshaker->shutdown is true.\n\n3. There was a shutdown that occurred after the read or write succeeded but before the read or write callback was invoked.  In this case, error == GRPC_ERROR_NONE but handshaker->shutdown is true.\n\nIf the handshaker was already shut down (cases 2 and 3), then the code in http_connect_handshaker_shutdown() has already shut down the endpoint and called cleanup_args_for_failure_locked().  So it's only if the handshaker was NOT already shut down (case 1) that we need to take those steps here.\n\n---\n\n*[src/core/ext/client_channel/http_connect_handshaker.c, line 231 at r2](https://reviewable.io:443/reviews/grpc/grpc/8782#-KXrMmDISlplW2-0cRG6:-KXrTSva3sRX3nmLpCKj:b-uczjak) ([raw file](https://github.com/grpc/grpc/blob/b8f97a4ac02536bcb88867061b9dad6c35818f2a/src/core/ext/client_channel/http_connect_handshaker.c#L231)):*\n<details><summary><i>Previously, yang-g (Yang Gao) wrote…</i></summary><blockquote>\n\nWhat happens if at this unlock, the manager's timer fired and calls connect handshaker's shutdown?\n</blockquote></details>\n\nGood catch.  I've changed this to set handshaker->shutdown = true here, so that a subsequent attempt to shut down the handshaker will do nothing.\n\nThis also exposed a problem when retrying connections, where the handshakers were being restarted when they might not yet have finished cleaning up the old connection.  I fixed this by changing the connector code to create a new handshake manager for each connection attempt.\n\n---\n\n*[src/core/lib/channel/handshaker.h, line 136 at r2](https://reviewable.io:443/reviews/grpc/grpc/8782#-KXrA6Nn6vI0CQ17yINl:-KXrSD0j7DpEVxj0eiLU:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/b8f97a4ac02536bcb88867061b9dad6c35818f2a/src/core/lib/channel/handshaker.h#L136)):*\n<details><summary><i>Previously, yang-g (Yang Gao) wrote…</i></summary><blockquote>\n\ns/args/channel_args/\n</blockquote></details>\n\nDone.\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/8782)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/264524606",
    "html_url": "https://github.com/grpc/grpc/pull/8782#issuecomment-264524606",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8782",
    "id": 264524606,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDUyNDYwNg==",
    "user": {
      "login": "yang-g",
      "id": 10122250,
      "node_id": "MDQ6VXNlcjEwMTIyMjUw",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10122250?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yang-g",
      "html_url": "https://github.com/yang-g",
      "followers_url": "https://api.github.com/users/yang-g/followers",
      "following_url": "https://api.github.com/users/yang-g/following{/other_user}",
      "gists_url": "https://api.github.com/users/yang-g/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yang-g/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yang-g/subscriptions",
      "organizations_url": "https://api.github.com/users/yang-g/orgs",
      "repos_url": "https://api.github.com/users/yang-g/repos",
      "events_url": "https://api.github.com/users/yang-g/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yang-g/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-02T18:22:34Z",
    "updated_at": "2016-12-02T18:22:34Z",
    "author_association": "MEMBER",
    "body": "\n\n\n\nReview status: 3 of 9 files reviewed at latest revision, 5 unresolved discussions, some commit checks failed.\n\n---\n\n*[src/core/ext/client_channel/http_connect_handshaker.c, line 120 at r2](https://reviewable.io:443/reviews/grpc/grpc/8782#-KXrN0Q9IEhLntrYEKhq:-KY-e3NHutg3o0Tadisa:b-rlormb) ([raw file](https://github.com/grpc/grpc/blob/b8f97a4ac02536bcb88867061b9dad6c35818f2a/src/core/ext/client_channel/http_connect_handshaker.c#L120)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nNo, handshaker->shutdown should only be set by http_connect_handshaker_shutdown().  The code here is just checking why we're failing.\n\nThe handshake_failed_locked() function is called when the read or write callback is invoked either with error != GRPC_ERROR_NONE or with handshaker->shutdown true.  There are actually three cases here:\n\n1. There was no shutdown, but the read or write failed for an unrelated reason.  In this case, error != GRPC_ERROR_NONE and handshaker->shutdown is false.\n\n2. There was a shutdown that interrupted the endpoint read or write.  In this case, error != GRPC_ERROR_NONE and handshaker->shutdown is true.\n\n3. There was a shutdown that occurred after the read or write succeeded but before the read or write callback was invoked.  In this case, error == GRPC_ERROR_NONE but handshaker->shutdown is true.\n\nIf the handshaker was already shut down (cases 2 and 3), then the code in http_connect_handshaker_shutdown() has already shut down the endpoint and called cleanup_args_for_failure_locked().  So it's only if the handshaker was NOT already shut down (case 1) that we need to take those steps here.\n</blockquote></details>\n\nI missed the point that once this is called, the handshaker_args->endpoint will become NULL. Does this mean if there is a handshaker shutdown call from upper level after this is called (for reason 1). We will call grpc_endpoint_shutdown with a NULL endpoint? Is that supported?\n\n---\n\n*[src/core/ext/client_channel/http_connect_handshaker.c, line 231 at r2](https://reviewable.io:443/reviews/grpc/grpc/8782#-KXrMmDISlplW2-0cRG6:-KY-itINXm3eSbAqxSQi:b-ijcx02) ([raw file](https://github.com/grpc/grpc/blob/b8f97a4ac02536bcb88867061b9dad6c35818f2a/src/core/ext/client_channel/http_connect_handshaker.c#L231)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nGood catch.  I've changed this to set handshaker->shutdown = true here, so that a subsequent attempt to shut down the handshaker will do nothing.\n\nThis also exposed a problem when retrying connections, where the handshakers were being restarted when they might not yet have finished cleaning up the old connection.  I fixed this by changing the connector code to create a new handshake manager for each connection attempt.\n</blockquote></details>\n\nI did not see a shutdown = true but I think you meant handshake_failed_locked? However, does this mean the shutdown will be a no-op if it fires at some specific time point? \n\n---\n\n*[src/core/ext/client_channel/http_connect_handshaker.c, line 251 at r2](https://reviewable.io:443/reviews/grpc/grpc/8782#-KY-ij4nS8wl1wkrmyr0:-KY-ij4nS8wl1wkrmyr1:b36sgri) ([raw file](https://github.com/grpc/grpc/blob/b8f97a4ac02536bcb88867061b9dad6c35818f2a/src/core/ext/client_channel/http_connect_handshaker.c#L251)):*\n> ```C\n>   if (!handshaker->shutdown) {\n>     handshaker->shutdown = true;\n>     grpc_endpoint_shutdown(exec_ctx, handshaker->args->endpoint);\n> ```\n\nMaybe add a if (handshaker->args->endpoint != NULL) here?\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/8782)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/264534185",
    "html_url": "https://github.com/grpc/grpc/pull/8782#issuecomment-264534185",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8782",
    "id": 264534185,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDUzNDE4NQ==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-02T19:00:44Z",
    "updated_at": "2016-12-02T19:00:44Z",
    "author_association": "MEMBER",
    "body": "\n\n\n\nReview status: 3 of 9 files reviewed at latest revision, 5 unresolved discussions, some commit checks failed.\n\n---\n\n*[src/core/ext/client_channel/http_connect_handshaker.c, line 120 at r2](https://reviewable.io:443/reviews/grpc/grpc/8782#-KXrN0Q9IEhLntrYEKhq:-KY-svMazleA5iTa905g:bbskk8a) ([raw file](https://github.com/grpc/grpc/blob/b8f97a4ac02536bcb88867061b9dad6c35818f2a/src/core/ext/client_channel/http_connect_handshaker.c#L120)):*\n<details><summary><i>Previously, yang-g (Yang Gao) wrote…</i></summary><blockquote>\n\nI missed the point that once this is called, the handshaker_args->endpoint will become NULL. Does this mean if there is a handshaker shutdown call from upper level after this is called (for reason 1). We will call grpc_endpoint_shutdown with a NULL endpoint? Is that supported?\n</blockquote></details>\n\nAh, good point.  So yes, we should set shutdown=true here.\n\nDone.\n\n---\n\n*[src/core/ext/client_channel/http_connect_handshaker.c, line 231 at r2](https://reviewable.io:443/reviews/grpc/grpc/8782#-KXrMmDISlplW2-0cRG6:-KY-tXW0421y-Ns_Ag8A:bhapho2) ([raw file](https://github.com/grpc/grpc/blob/b8f97a4ac02536bcb88867061b9dad6c35818f2a/src/core/ext/client_channel/http_connect_handshaker.c#L231)):*\n<details><summary><i>Previously, yang-g (Yang Gao) wrote…</i></summary><blockquote>\n\nI did not see a shutdown = true but I think you meant handshake_failed_locked? However, does this mean the shutdown will be a no-op if it fires at some specific time point? \n</blockquote></details>\n\nI'm now setting shutdown=true both here and in handshake_failed_locked.  The idea here is that once we finish the handshake (regardless of whether it was a success or failure), a subsequent shutdown request should be a no-op.\n\n---\n\n*[src/core/ext/client_channel/http_connect_handshaker.c, line 251 at r2](https://reviewable.io:443/reviews/grpc/grpc/8782#-KY-ij4nS8wl1wkrmyr0:-KY-tmHEoKuJ09Ulm7FM:b-aphq39) ([raw file](https://github.com/grpc/grpc/blob/b8f97a4ac02536bcb88867061b9dad6c35818f2a/src/core/ext/client_channel/http_connect_handshaker.c#L251)):*\n<details><summary><i>Previously, yang-g (Yang Gao) wrote…</i></summary><blockquote>\n\nMaybe add a if (handshaker->args->endpoint != NULL) here?\n</blockquote></details>\n\nI don't think this is needed, now that we're setting shutdown to true at both possible exit points from the handshaker.\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/8782)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/264551204",
    "html_url": "https://github.com/grpc/grpc/pull/8782#issuecomment-264551204",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8782",
    "id": 264551204,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDU1MTIwNA==",
    "user": {
      "login": "yang-g",
      "id": 10122250,
      "node_id": "MDQ6VXNlcjEwMTIyMjUw",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10122250?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yang-g",
      "html_url": "https://github.com/yang-g",
      "followers_url": "https://api.github.com/users/yang-g/followers",
      "following_url": "https://api.github.com/users/yang-g/following{/other_user}",
      "gists_url": "https://api.github.com/users/yang-g/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yang-g/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yang-g/subscriptions",
      "organizations_url": "https://api.github.com/users/yang-g/orgs",
      "repos_url": "https://api.github.com/users/yang-g/repos",
      "events_url": "https://api.github.com/users/yang-g/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yang-g/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-02T20:12:53Z",
    "updated_at": "2016-12-02T20:12:53Z",
    "author_association": "MEMBER",
    "body": "\n\n\n\nReview status: 3 of 9 files reviewed at latest revision, 5 unresolved discussions, some commit checks failed.\n\n---\n\n*[src/core/ext/client_channel/http_connect_handshaker.c, line 231 at r2](https://reviewable.io:443/reviews/grpc/grpc/8782#-KXrMmDISlplW2-0cRG6:-KY09Lwf3RxajEinWgga:b-plkj53) ([raw file](https://github.com/grpc/grpc/blob/b8f97a4ac02536bcb88867061b9dad6c35818f2a/src/core/ext/client_channel/http_connect_handshaker.c#L231)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nI'm now setting shutdown=true both here and in handshake_failed_locked.  The idea here is that once we finish the handshake (regardless of whether it was a success or failure), a subsequent shutdown request should be a no-op.\n</blockquote></details>\n\nIf we are finished with this handshaker and queue a on_handshake_done, which will turn to next handshaker. Will a manager shutdown call happening in the middle be ignored because the old handshaker treats it as a no-op and the new handshaker does not know about it?\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/8782)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/264564918",
    "html_url": "https://github.com/grpc/grpc/pull/8782#issuecomment-264564918",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8782",
    "id": 264564918,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDU2NDkxOA==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-02T21:17:28Z",
    "updated_at": "2016-12-02T21:17:28Z",
    "author_association": "MEMBER",
    "body": "\n\n\n\nReview status: 3 of 9 files reviewed at latest revision, 5 unresolved discussions, some commit checks failed.\n\n---\n\n*[src/core/ext/client_channel/http_connect_handshaker.c, line 231 at r2](https://reviewable.io:443/reviews/grpc/grpc/8782#-KXrMmDISlplW2-0cRG6:-KY0OPo_85n-P_WhaMD-:b-uk3x1s) ([raw file](https://github.com/grpc/grpc/blob/b8f97a4ac02536bcb88867061b9dad6c35818f2a/src/core/ext/client_channel/http_connect_handshaker.c#L231)):*\n<details><summary><i>Previously, yang-g (Yang Gao) wrote…</i></summary><blockquote>\n\nIf we are finished with this handshaker and queue a on_handshake_done, which will turn to next handshaker. Will a manager shutdown call happening in the middle be ignored because the old handshaker treats it as a no-op and the new handshaker does not know about it?\n</blockquote></details>\n\nGood catch.  I've fixed the handshake manager code to catch this race condition.\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/8782)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/264571073",
    "html_url": "https://github.com/grpc/grpc/pull/8782#issuecomment-264571073",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8782",
    "id": 264571073,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDU3MTA3Mw==",
    "user": {
      "login": "yang-g",
      "id": 10122250,
      "node_id": "MDQ6VXNlcjEwMTIyMjUw",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10122250?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yang-g",
      "html_url": "https://github.com/yang-g",
      "followers_url": "https://api.github.com/users/yang-g/followers",
      "following_url": "https://api.github.com/users/yang-g/following{/other_user}",
      "gists_url": "https://api.github.com/users/yang-g/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yang-g/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yang-g/subscriptions",
      "organizations_url": "https://api.github.com/users/yang-g/orgs",
      "repos_url": "https://api.github.com/users/yang-g/repos",
      "events_url": "https://api.github.com/users/yang-g/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yang-g/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-02T21:46:18Z",
    "updated_at": "2016-12-02T21:46:18Z",
    "author_association": "MEMBER",
    "body": "LGTM"
  }
]
