[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/355662252",
    "html_url": "https://github.com/grpc/grpc/pull/13932#issuecomment-355662252",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13932",
    "id": 355662252,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTY2MjI1Mg==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-05T20:51:50Z",
    "updated_at": "2018-01-05T20:51:50Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n  +0.4% +2.35Ki [None]                                                                                +269Ki  +4.6%\n      +0.4% +2.00Ki [Unmapped]                                                                            +269Ki  +4.7%\n      +2.5%     +30 [None]                                                                                     0  [ = ]\n     +23e2%     +23 grpc_trace_alarm_refcount                                                                  0  [ = ]\n     +23e2%     +23 grpc_trace_auth_context_refcount                                                           0  [ = ]\n     +23e2%     +23 grpc_trace_chttp2_refcount                                                                 0  [ = ]\n     +23e2%     +23 grpc_trace_closure                                                                         0  [ = ]\n     +23e2%     +23 grpc_trace_cq_refcount                                                                     0  [ = ]\n     +23e2%     +23 grpc_trace_error_refcount                                                                  0  [ = ]\n     +23e2%     +23 grpc_trace_fd_refcount                                                                     0  [ = ]\n     +23e2%     +23 grpc_trace_lb_policy_refcount                                                              0  [ = ]\n     +23e2%     +23 grpc_trace_metadata                                                                        0  [ = ]\n     +23e2%     +23 grpc_trace_pending_tags                                                                    0  [ = ]\n     +23e2%     +23 grpc_trace_pollable_refcount                                                               0  [ = ]\n     +23e2%     +23 grpc_trace_resolver_refcount                                                               0  [ = ]\n     +23e2%     +23 grpc_trace_security_connector_refcount                                                     0  [ = ]\n     +23e2%     +23 grpc_trace_stream_refcount                                                                 0  [ = ]\n  +6.4%    +368 src/core/ext/filters/client_channel/subchannel.cc                                       +368  +6.4%\n      [NEW]    +806 on_subchannel_connected                                                                 +806  [NEW]\n      [NEW]    +338 grpc_connected_subchannel::CreateCall                                                   +338  [NEW]\n      [NEW]    +260 on_connected_subchannel_connectivity_changed                                            +260  [NEW]\n      [NEW]     +76 grpc_connected_subchannel::NotifyOnStateChange                                           +76  [NEW]\n      [NEW]     +73 grpc_connected_subchannel::Ping                                                          +73  [NEW]\n     +12e2%     +58 grpc_connected_subchannel_unref                                                          +58 +12e2%\n      +407%     +57 grpc_connected_subchannel_ref                                                            +57  +407%\n      [NEW]     +48 grpc_connected_subchannel::grpc_connected_subchannel                                     +48  [NEW]\n      [NEW]     +41 grpc_connected_subchannel::Unref                                                         +41  [NEW]\n      [NEW]     +27 grpc_connected_subchannel::Ref                                                           +27  [NEW]\n      +7.3%     +18 [Unmapped]                                                                               +18  +7.3%\n      +0.8%      +3 maybe_start_connecting_locked                                                             +3  +0.8%\n  +1.6%    +105 src/core/lib/iomgr/error.cc                                                             +105  +1.6%\n      [NEW]    +103 _GLOBAL__sub_I_error.cc                                                                 +103  [NEW]\n      [NEW]      +2 grpc_core::DebugOnlyTraceFlag::~DebugOnlyTraceFlag                                        +2  [NEW]\n  +1.0%     +87 src/core/lib/surface/completion_queue.cc                                                 +87  +1.0%\n       +58%     +87 _GLOBAL__sub_I_completion_queue.cc                                                       +87   +58%\n  +7.5%     +48 src/core/ext/filters/client_channel/lb_policy.cc                                         +48  +7.5%\n      [NEW]     +48 _GLOBAL__sub_I_lb_policy.cc                                                              +48  [NEW]\n   +29%     +48 src/core/ext/filters/client_channel/resolver.cc                                          +48   +29%\n      [NEW]     +48 _GLOBAL__sub_I_resolver.cc                                                               +48  [NEW]\n  +0.4%     +48 src/core/lib/iomgr/ev_epollex_linux.cc                                                   +48  +0.4%\n      [NEW]    +193 pollset_kick_all(grpc_pollset*) [clone .isra.9]                                         +193  [NEW]\n      [NEW]     +48 _GLOBAL__sub_I_ev_epollex_linux.cc                                                       +48  [NEW]\n  +1.5%     +48 src/core/lib/security/context/security_context.cc                                        +48  +1.5%\n      [NEW]     +48 _GLOBAL__sub_I_security_context.cc                                                       +48  [NEW]\n  +0.5%     +48 src/core/lib/security/transport/security_connector.cc                                    +48  +0.5%\n      [NEW]    +537 fake_check_peer(grpc_security_connector*, tsi_peer, grpc_auth_context**, grpc_closur    +537  [NEW]\n      [NEW]    +404 ssl_check_peer(grpc_security_connector*, char const*, tsi_peer const*, grpc_auth_con    +404  [NEW]\n      [NEW]     +48 _GLOBAL__sub_I_security_connector.cc                                                     +48  [NEW]\n  +4.5%     +48 src/core/lib/surface/alarm.cc                                                            +48  +4.5%\n      [NEW]    +242 alarm_unref(grpc_alarm*) [clone .part.2]                                                +242  [NEW]\n      [NEW]     +48 _GLOBAL__sub_I_alarm.cc                                                                  +48  [NEW]\n  +1.4%     +48 src/core/lib/transport/metadata.cc                                                       +48  +1.4%\n      [NEW]     +48 _GLOBAL__sub_I_metadata.cc                                                               +48  [NEW]\n  +4.2%     +48 src/core/lib/transport/transport.cc                                                      +48  +4.2%\n      [NEW]     +48 _GLOBAL__sub_I_transport.cc                                                              +48  [NEW]\n  +0.1%     +46 src/core/ext/transport/chttp2/transport/chttp2_transport.cc                              +46  +0.1%\n       +96%     +46 _GLOBAL__sub_I_chttp2_transport.cc                                                       +46   +96%\n  +3.3%     +46 src/core/lib/iomgr/ev_posix.cc                                                           +46  +3.3%\n       +96%     +46 _GLOBAL__sub_I_ev_posix.cc                                                               +46   +96%\n  +0.6%     +32 src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc                 +32  +0.6%\n      +2.2%     +38 rr_connectivity_changed_locked                                                           +38  +2.2%\n\n -------------- SHRINKING                                                                            --------------\n  -0.7%     -32 src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc                   -32  -0.7%\n      -2.5%     -38 pf_connectivity_changed_locked                                                           -38  -2.5%\n\n  +0.3% +3.36Ki TOTAL                                                                                 +270Ki  +4.2%\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE              FILE SIZE\n ++++++++++++++ GROWIN ++++++++++++++\n  [ = ]       0 [None]    +248  +0.0%\n\n  [ = ]       0 TOTAL     +248  +0.0%\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/355664672",
    "html_url": "https://github.com/grpc/grpc/pull/13932#issuecomment-355664672",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13932",
    "id": 355664672,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTY2NDY3Mg==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-05T21:02:37Z",
    "updated_at": "2018-01-05T21:02:37Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/355670358",
    "html_url": "https://github.com/grpc/grpc/pull/13932#issuecomment-355670358",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13932",
    "id": 355670358,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTY3MDM1OA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-05T21:29:59Z",
    "updated_at": "2018-01-05T21:29:59Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n  +0.4% +2.35Ki [None]                                                                                +269Ki  +4.6%\n      +0.4% +2.00Ki [Unmapped]                                                                            +269Ki  +4.7%\n      +2.5%     +30 [None]                                                                                     0  [ = ]\n     +23e2%     +23 grpc_trace_alarm_refcount                                                                  0  [ = ]\n     +23e2%     +23 grpc_trace_auth_context_refcount                                                           0  [ = ]\n     +23e2%     +23 grpc_trace_chttp2_refcount                                                                 0  [ = ]\n     +23e2%     +23 grpc_trace_closure                                                                         0  [ = ]\n     +23e2%     +23 grpc_trace_cq_refcount                                                                     0  [ = ]\n     +23e2%     +23 grpc_trace_error_refcount                                                                  0  [ = ]\n     +23e2%     +23 grpc_trace_fd_refcount                                                                     0  [ = ]\n     +23e2%     +23 grpc_trace_lb_policy_refcount                                                              0  [ = ]\n     +23e2%     +23 grpc_trace_metadata                                                                        0  [ = ]\n     +23e2%     +23 grpc_trace_pending_tags                                                                    0  [ = ]\n     +23e2%     +23 grpc_trace_pollable_refcount                                                               0  [ = ]\n     +23e2%     +23 grpc_trace_resolver_refcount                                                               0  [ = ]\n     +23e2%     +23 grpc_trace_security_connector_refcount                                                     0  [ = ]\n     +23e2%     +23 grpc_trace_stream_refcount                                                                 0  [ = ]\n  +6.4%    +368 src/core/ext/filters/client_channel/subchannel.cc                                       +368  +6.4%\n      [NEW]    +806 on_subchannel_connected                                                                 +806  [NEW]\n      [NEW]    +338 grpc_connected_subchannel::CreateCall                                                   +338  [NEW]\n      [NEW]    +260 on_connected_subchannel_connectivity_changed                                            +260  [NEW]\n      [NEW]     +76 grpc_connected_subchannel::NotifyOnStateChange                                           +76  [NEW]\n      [NEW]     +73 grpc_connected_subchannel::Ping                                                          +73  [NEW]\n     +12e2%     +58 grpc_connected_subchannel_unref                                                          +58 +12e2%\n      +407%     +57 grpc_connected_subchannel_ref                                                            +57  +407%\n      [NEW]     +48 grpc_connected_subchannel::grpc_connected_subchannel                                     +48  [NEW]\n      [NEW]     +41 grpc_connected_subchannel::Unref                                                         +41  [NEW]\n      [NEW]     +27 grpc_connected_subchannel::Ref                                                           +27  [NEW]\n      +7.3%     +18 [Unmapped]                                                                               +18  +7.3%\n      +0.8%      +3 maybe_start_connecting_locked                                                             +3  +0.8%\n  +1.6%    +105 src/core/lib/iomgr/error.cc                                                             +105  +1.6%\n      [NEW]    +103 _GLOBAL__sub_I_error.cc                                                                 +103  [NEW]\n      [NEW]      +2 grpc_core::DebugOnlyTraceFlag::~DebugOnlyTraceFlag                                        +2  [NEW]\n  +1.0%     +87 src/core/lib/surface/completion_queue.cc                                                 +87  +1.0%\n       +58%     +87 _GLOBAL__sub_I_completion_queue.cc                                                       +87   +58%\n  +7.5%     +48 src/core/ext/filters/client_channel/lb_policy.cc                                         +48  +7.5%\n      [NEW]     +48 _GLOBAL__sub_I_lb_policy.cc                                                              +48  [NEW]\n   +29%     +48 src/core/ext/filters/client_channel/resolver.cc                                          +48   +29%\n      [NEW]     +48 _GLOBAL__sub_I_resolver.cc                                                               +48  [NEW]\n  +0.4%     +48 src/core/lib/iomgr/ev_epollex_linux.cc                                                   +48  +0.4%\n      [NEW]    +193 pollset_kick_all(grpc_pollset*) [clone .isra.9]                                         +193  [NEW]\n      [NEW]     +48 _GLOBAL__sub_I_ev_epollex_linux.cc                                                       +48  [NEW]\n  +1.5%     +48 src/core/lib/security/context/security_context.cc                                        +48  +1.5%\n      [NEW]     +48 _GLOBAL__sub_I_security_context.cc                                                       +48  [NEW]\n  +0.5%     +48 src/core/lib/security/transport/security_connector.cc                                    +48  +0.5%\n      [NEW]    +537 fake_check_peer(grpc_security_connector*, tsi_peer, grpc_auth_context**, grpc_closur    +537  [NEW]\n      [NEW]    +404 ssl_check_peer(grpc_security_connector*, char const*, tsi_peer const*, grpc_auth_con    +404  [NEW]\n      [NEW]     +48 _GLOBAL__sub_I_security_connector.cc                                                     +48  [NEW]\n  +4.5%     +48 src/core/lib/surface/alarm.cc                                                            +48  +4.5%\n      [NEW]    +242 alarm_unref(grpc_alarm*) [clone .part.2]                                                +242  [NEW]\n      [NEW]     +48 _GLOBAL__sub_I_alarm.cc                                                                  +48  [NEW]\n  +1.4%     +48 src/core/lib/transport/metadata.cc                                                       +48  +1.4%\n      [NEW]     +48 _GLOBAL__sub_I_metadata.cc                                                               +48  [NEW]\n  +4.2%     +48 src/core/lib/transport/transport.cc                                                      +48  +4.2%\n      [NEW]     +48 _GLOBAL__sub_I_transport.cc                                                              +48  [NEW]\n  +0.1%     +46 src/core/ext/transport/chttp2/transport/chttp2_transport.cc                              +46  +0.1%\n       +96%     +46 _GLOBAL__sub_I_chttp2_transport.cc                                                       +46   +96%\n  +3.3%     +46 src/core/lib/iomgr/ev_posix.cc                                                           +46  +3.3%\n       +96%     +46 _GLOBAL__sub_I_ev_posix.cc                                                               +46   +96%\n  +0.6%     +32 src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc                 +32  +0.6%\n      +2.2%     +38 rr_connectivity_changed_locked                                                           +38  +2.2%\n\n -------------- SHRINKING                                                                            --------------\n  -0.7%     -32 src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc                   -32  -0.7%\n      -2.5%     -38 pf_connectivity_changed_locked                                                           -38  -2.5%\n\n  +0.3% +3.36Ki TOTAL                                                                                 +270Ki  +4.2%\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE              FILE SIZE\n ++++++++++++++ GROWIN ++++++++++++++\n  [ = ]       0 [None]    +248  +0.0%\n\n  [ = ]       0 TOTAL     +248  +0.0%\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/355673324",
    "html_url": "https://github.com/grpc/grpc/pull/13932#issuecomment-355673324",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13932",
    "id": 355673324,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTY3MzMyNA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-05T21:43:27Z",
    "updated_at": "2018-01-05T21:43:27Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/355673672",
    "html_url": "https://github.com/grpc/grpc/pull/13932#issuecomment-355673672",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13932",
    "id": 355673672,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTY3MzY3Mg==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-05T21:44:56Z",
    "updated_at": "2018-01-05T21:44:56Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/355681446",
    "html_url": "https://github.com/grpc/grpc/pull/13932#issuecomment-355681446",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13932",
    "id": 355681446,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTY4MTQ0Ng==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-05T22:21:09Z",
    "updated_at": "2018-01-05T22:21:09Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] Performance differences noted:\nBenchmark                                   cpu_time    real_time\n------------------------------------------  ----------  -----------\nBM_HasClearGrpcStatus<ErrorWithGrpcStatus>  +6%         +6%\nBM_Zalloc/2048                              -6%         -6%\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/355715150",
    "html_url": "https://github.com/grpc/grpc/pull/13932#issuecomment-355715150",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13932",
    "id": 355715150,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTcxNTE1MA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-06T02:05:59Z",
    "updated_at": "2018-01-06T02:05:59Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n  +0.4% +2.35Ki [None]                                                                                +269Ki  +4.6%\n      +0.4% +2.00Ki [Unmapped]                                                                            +269Ki  +4.7%\n      +2.5%     +30 [None]                                                                                     0  [ = ]\n     +23e2%     +23 grpc_trace_alarm_refcount                                                                  0  [ = ]\n     +23e2%     +23 grpc_trace_auth_context_refcount                                                           0  [ = ]\n     +23e2%     +23 grpc_trace_chttp2_refcount                                                                 0  [ = ]\n     +23e2%     +23 grpc_trace_closure                                                                         0  [ = ]\n     +23e2%     +23 grpc_trace_cq_refcount                                                                     0  [ = ]\n     +23e2%     +23 grpc_trace_error_refcount                                                                  0  [ = ]\n     +23e2%     +23 grpc_trace_fd_refcount                                                                     0  [ = ]\n     +23e2%     +23 grpc_trace_lb_policy_refcount                                                              0  [ = ]\n     +23e2%     +23 grpc_trace_metadata                                                                        0  [ = ]\n     +23e2%     +23 grpc_trace_pending_tags                                                                    0  [ = ]\n     +23e2%     +23 grpc_trace_pollable_refcount                                                               0  [ = ]\n     +23e2%     +23 grpc_trace_resolver_refcount                                                               0  [ = ]\n     +23e2%     +23 grpc_trace_security_connector_refcount                                                     0  [ = ]\n     +23e2%     +23 grpc_trace_stream_refcount                                                                 0  [ = ]\n  +6.4%    +368 src/core/ext/filters/client_channel/subchannel.cc                                       +368  +6.4%\n      [NEW]    +806 on_subchannel_connected                                                                 +806  [NEW]\n      [NEW]    +338 grpc_connected_subchannel::CreateCall                                                   +338  [NEW]\n      [NEW]    +260 on_connected_subchannel_connectivity_changed                                            +260  [NEW]\n      [NEW]     +76 grpc_connected_subchannel::NotifyOnStateChange                                           +76  [NEW]\n      [NEW]     +73 grpc_connected_subchannel::Ping                                                          +73  [NEW]\n     +12e2%     +58 grpc_connected_subchannel_unref                                                          +58 +12e2%\n      +407%     +57 grpc_connected_subchannel_ref                                                            +57  +407%\n      [NEW]     +48 grpc_connected_subchannel::grpc_connected_subchannel                                     +48  [NEW]\n      [NEW]     +41 grpc_connected_subchannel::Unref                                                         +41  [NEW]\n      [NEW]     +27 grpc_connected_subchannel::Ref                                                           +27  [NEW]\n      +7.3%     +18 [Unmapped]                                                                               +18  +7.3%\n      +0.8%      +3 maybe_start_connecting_locked                                                             +3  +0.8%\n  +1.6%    +105 src/core/lib/iomgr/error.cc                                                             +105  +1.6%\n      [NEW]    +103 _GLOBAL__sub_I_error.cc                                                                 +103  [NEW]\n      [NEW]      +2 grpc_core::DebugOnlyTraceFlag::~DebugOnlyTraceFlag                                        +2  [NEW]\n  +1.0%     +87 src/core/lib/surface/completion_queue.cc                                                 +87  +1.0%\n       +58%     +87 _GLOBAL__sub_I_completion_queue.cc                                                       +87   +58%\n  +7.5%     +48 src/core/ext/filters/client_channel/lb_policy.cc                                         +48  +7.5%\n      [NEW]     +48 _GLOBAL__sub_I_lb_policy.cc                                                              +48  [NEW]\n   +29%     +48 src/core/ext/filters/client_channel/resolver.cc                                          +48   +29%\n      [NEW]     +48 _GLOBAL__sub_I_resolver.cc                                                               +48  [NEW]\n  +0.4%     +48 src/core/lib/iomgr/ev_epollex_linux.cc                                                   +48  +0.4%\n      [NEW]    +193 pollset_kick_all(grpc_pollset*) [clone .isra.9]                                         +193  [NEW]\n      [NEW]     +48 _GLOBAL__sub_I_ev_epollex_linux.cc                                                       +48  [NEW]\n  +1.5%     +48 src/core/lib/security/context/security_context.cc                                        +48  +1.5%\n      [NEW]     +48 _GLOBAL__sub_I_security_context.cc                                                       +48  [NEW]\n  +0.5%     +48 src/core/lib/security/transport/security_connector.cc                                    +48  +0.5%\n      [NEW]    +537 fake_check_peer(grpc_security_connector*, tsi_peer, grpc_auth_context**, grpc_closur    +537  [NEW]\n      [NEW]    +404 ssl_check_peer(grpc_security_connector*, char const*, tsi_peer const*, grpc_auth_con    +404  [NEW]\n      [NEW]     +48 _GLOBAL__sub_I_security_connector.cc                                                     +48  [NEW]\n  +4.5%     +48 src/core/lib/surface/alarm.cc                                                            +48  +4.5%\n      [NEW]    +242 alarm_unref(grpc_alarm*) [clone .part.2]                                                +242  [NEW]\n      [NEW]     +48 _GLOBAL__sub_I_alarm.cc                                                                  +48  [NEW]\n  +1.4%     +48 src/core/lib/transport/metadata.cc                                                       +48  +1.4%\n      [NEW]     +48 _GLOBAL__sub_I_metadata.cc                                                               +48  [NEW]\n  +4.2%     +48 src/core/lib/transport/transport.cc                                                      +48  +4.2%\n      [NEW]     +48 _GLOBAL__sub_I_transport.cc                                                              +48  [NEW]\n  +0.1%     +46 src/core/ext/transport/chttp2/transport/chttp2_transport.cc                              +46  +0.1%\n       +96%     +46 _GLOBAL__sub_I_chttp2_transport.cc                                                       +46   +96%\n  +3.3%     +46 src/core/lib/iomgr/ev_posix.cc                                                           +46  +3.3%\n       +96%     +46 _GLOBAL__sub_I_ev_posix.cc                                                               +46   +96%\n  +0.6%     +32 src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc                 +32  +0.6%\n      +2.2%     +38 rr_connectivity_changed_locked                                                           +38  +2.2%\n\n -------------- SHRINKING                                                                            --------------\n  -0.7%     -32 src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc                   -32  -0.7%\n      -2.5%     -38 pf_connectivity_changed_locked                                                           -38  -2.5%\n\n  +0.3% +3.36Ki TOTAL                                                                                 +270Ki  +4.2%\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE              FILE SIZE\n ++++++++++++++ GROWIN ++++++++++++++\n  [ = ]       0 [None]    +248  +0.0%\n\n  [ = ]       0 TOTAL     +248  +0.0%\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/355715987",
    "html_url": "https://github.com/grpc/grpc/pull/13932#issuecomment-355715987",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13932",
    "id": 355715987,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTcxNTk4Nw==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-06T02:18:08Z",
    "updated_at": "2018-01-06T02:18:08Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/355718206",
    "html_url": "https://github.com/grpc/grpc/pull/13932#issuecomment-355718206",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13932",
    "id": 355718206,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTcxODIwNg==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-06T02:57:57Z",
    "updated_at": "2018-01-06T02:57:57Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/355721701",
    "html_url": "https://github.com/grpc/grpc/pull/13932#issuecomment-355721701",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13932",
    "id": 355721701,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTcyMTcwMQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-06T04:12:39Z",
    "updated_at": "2018-01-06T04:12:39Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n  +0.4% +2.35Ki [None]                                                                                +269Ki  +4.6%\n      +0.4% +2.00Ki [Unmapped]                                                                            +269Ki  +4.7%\n      +2.5%     +30 [None]                                                                                     0  [ = ]\n     +23e2%     +23 grpc_trace_alarm_refcount                                                                  0  [ = ]\n     +23e2%     +23 grpc_trace_auth_context_refcount                                                           0  [ = ]\n     +23e2%     +23 grpc_trace_chttp2_refcount                                                                 0  [ = ]\n     +23e2%     +23 grpc_trace_closure                                                                         0  [ = ]\n     +23e2%     +23 grpc_trace_cq_refcount                                                                     0  [ = ]\n     +23e2%     +23 grpc_trace_error_refcount                                                                  0  [ = ]\n     +23e2%     +23 grpc_trace_fd_refcount                                                                     0  [ = ]\n     +23e2%     +23 grpc_trace_lb_policy_refcount                                                              0  [ = ]\n     +23e2%     +23 grpc_trace_metadata                                                                        0  [ = ]\n     +23e2%     +23 grpc_trace_pending_tags                                                                    0  [ = ]\n     +23e2%     +23 grpc_trace_pollable_refcount                                                               0  [ = ]\n     +23e2%     +23 grpc_trace_resolver_refcount                                                               0  [ = ]\n     +23e2%     +23 grpc_trace_security_connector_refcount                                                     0  [ = ]\n     +23e2%     +23 grpc_trace_stream_refcount                                                                 0  [ = ]\n  +6.4%    +368 src/core/ext/filters/client_channel/subchannel.cc                                       +368  +6.4%\n      [NEW]    +806 on_subchannel_connected                                                                 +806  [NEW]\n      [NEW]    +338 grpc_connected_subchannel::CreateCall                                                   +338  [NEW]\n      [NEW]    +260 on_connected_subchannel_connectivity_changed                                            +260  [NEW]\n      [NEW]     +76 grpc_connected_subchannel::NotifyOnStateChange                                           +76  [NEW]\n      [NEW]     +73 grpc_connected_subchannel::Ping                                                          +73  [NEW]\n     +12e2%     +58 grpc_connected_subchannel_unref                                                          +58 +12e2%\n      +407%     +57 grpc_connected_subchannel_ref                                                            +57  +407%\n      [NEW]     +48 grpc_connected_subchannel::grpc_connected_subchannel                                     +48  [NEW]\n      [NEW]     +41 grpc_connected_subchannel::Unref                                                         +41  [NEW]\n      [NEW]     +27 grpc_connected_subchannel::Ref                                                           +27  [NEW]\n      +7.3%     +18 [Unmapped]                                                                               +18  +7.3%\n      +0.8%      +3 maybe_start_connecting_locked                                                             +3  +0.8%\n  +1.6%    +105 src/core/lib/iomgr/error.cc                                                             +105  +1.6%\n      [NEW]    +103 _GLOBAL__sub_I_error.cc                                                                 +103  [NEW]\n      [NEW]      +2 grpc_core::DebugOnlyTraceFlag::~DebugOnlyTraceFlag                                        +2  [NEW]\n  +1.0%     +87 src/core/lib/surface/completion_queue.cc                                                 +87  +1.0%\n       +58%     +87 _GLOBAL__sub_I_completion_queue.cc                                                       +87   +58%\n  +7.5%     +48 src/core/ext/filters/client_channel/lb_policy.cc                                         +48  +7.5%\n      [NEW]     +48 _GLOBAL__sub_I_lb_policy.cc                                                              +48  [NEW]\n   +29%     +48 src/core/ext/filters/client_channel/resolver.cc                                          +48   +29%\n      [NEW]     +48 _GLOBAL__sub_I_resolver.cc                                                               +48  [NEW]\n  +0.4%     +48 src/core/lib/iomgr/ev_epollex_linux.cc                                                   +48  +0.4%\n      [NEW]    +193 pollset_kick_all(grpc_pollset*) [clone .isra.9]                                         +193  [NEW]\n      [NEW]     +48 _GLOBAL__sub_I_ev_epollex_linux.cc                                                       +48  [NEW]\n  +1.5%     +48 src/core/lib/security/context/security_context.cc                                        +48  +1.5%\n      [NEW]     +48 _GLOBAL__sub_I_security_context.cc                                                       +48  [NEW]\n  +0.5%     +48 src/core/lib/security/transport/security_connector.cc                                    +48  +0.5%\n      [NEW]    +537 fake_check_peer(grpc_security_connector*, tsi_peer, grpc_auth_context**, grpc_closur    +537  [NEW]\n      [NEW]    +404 ssl_check_peer(grpc_security_connector*, char const*, tsi_peer const*, grpc_auth_con    +404  [NEW]\n      [NEW]     +48 _GLOBAL__sub_I_security_connector.cc                                                     +48  [NEW]\n  +4.5%     +48 src/core/lib/surface/alarm.cc                                                            +48  +4.5%\n      [NEW]    +242 alarm_unref(grpc_alarm*) [clone .part.2]                                                +242  [NEW]\n      [NEW]     +48 _GLOBAL__sub_I_alarm.cc                                                                  +48  [NEW]\n  +1.4%     +48 src/core/lib/transport/metadata.cc                                                       +48  +1.4%\n      [NEW]     +48 _GLOBAL__sub_I_metadata.cc                                                               +48  [NEW]\n  +4.2%     +48 src/core/lib/transport/transport.cc                                                      +48  +4.2%\n      [NEW]     +48 _GLOBAL__sub_I_transport.cc                                                              +48  [NEW]\n  +0.1%     +46 src/core/ext/transport/chttp2/transport/chttp2_transport.cc                              +46  +0.1%\n       +96%     +46 _GLOBAL__sub_I_chttp2_transport.cc                                                       +46   +96%\n  +3.3%     +46 src/core/lib/iomgr/ev_posix.cc                                                           +46  +3.3%\n       +96%     +46 _GLOBAL__sub_I_ev_posix.cc                                                               +46   +96%\n  +0.6%     +32 src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc                 +32  +0.6%\n      +2.2%     +38 rr_connectivity_changed_locked                                                           +38  +2.2%\n\n -------------- SHRINKING                                                                            --------------\n  -0.7%     -32 src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc                   -32  -0.7%\n      -2.5%     -38 pf_connectivity_changed_locked                                                           -38  -2.5%\n\n  +0.3% +3.36Ki TOTAL                                                                                 +270Ki  +4.2%\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE              FILE SIZE\n ++++++++++++++ GROWIN ++++++++++++++\n  [ = ]       0 [None]    +248  +0.0%\n\n  [ = ]       0 TOTAL     +248  +0.0%\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/355722264",
    "html_url": "https://github.com/grpc/grpc/pull/13932#issuecomment-355722264",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13932",
    "id": 355722264,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTcyMjI2NA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-06T04:26:01Z",
    "updated_at": "2018-01-06T04:26:01Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/355723683",
    "html_url": "https://github.com/grpc/grpc/pull/13932#issuecomment-355723683",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13932",
    "id": 355723683,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTcyMzY4Mw==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-06T05:04:32Z",
    "updated_at": "2018-01-06T05:04:32Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/356100887",
    "html_url": "https://github.com/grpc/grpc/pull/13932#issuecomment-356100887",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13932",
    "id": 356100887,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjEwMDg4Nw==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-08T21:23:43Z",
    "updated_at": "2018-01-08T21:23:43Z",
    "author_association": "MEMBER",
    "body": "This looks really good!  Most of my comments are minor.\n\n---\n\nReviewed 10 of 10 files at r1.\nReview status: all files reviewed at latest revision, 18 unresolved discussions, some commit checks failed.\n\n---\n\n*[src/core/ext/filters/client_channel/lb_policy.h, line 163 at r1](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2M7rIyzm-U4BSTSQgh:-L2M7rIyzm-U4BSTSQgi:bupse4m) ([raw file](https://github.com/grpc/grpc/blob/53bfe69f707e3729cd5845091a1282771b7e45ee/src/core/ext/filters/client_channel/lb_policy.h#L163)):*\n> ```objc\n> int grpc_lb_policy_pick_locked(grpc_lb_policy* policy,\n>                                const grpc_lb_policy_pick_args* pick_args,\n>                                grpc_connected_subchannel** target,\n> ```\n\nShould we change this to return a RefCountedPtr?\n\nThis might be easier once #13857 is merged.  We should probably discuss which of these PRs we should try to merge first.\n\n---\n\n*[src/core/ext/filters/client_channel/subchannel.cc, line 169 at r1](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2MByAgWefVIlftVCUi:-L2MByAgWefVIlftVCUj:b-ciwjas) ([raw file](https://github.com/grpc/grpc/blob/53bfe69f707e3729cd5845091a1282771b7e45ee/src/core/ext/filters/client_channel/subchannel.cc#L169)):*\n> ```cpp\n> }\n> \n> grpc_connected_subchannel* grpc_connected_subchannel_ref(\n> ```\n\nShouldn't these two functions go away?\n\n---\n\n*[src/core/ext/filters/client_channel/subchannel.cc, line 555 at r1](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2M_c0dWSIn-lR5Vy8S:-L2M_c0efVtWVveE4vmk:b-y6cx0i) ([raw file](https://github.com/grpc/grpc/blob/53bfe69f707e3729cd5845091a1282771b7e45ee/src/core/ext/filters/client_channel/subchannel.cc#L555)):*\n> ```cpp\n>       }\n>       maybe_start_connecting_locked(c);\n>       goto done;\n> ```\n\nInstead of using a `goto` here, can we just use an `else` clause for the code on lines 560-570?\n\n---\n\n*[src/core/ext/filters/client_channel/subchannel.cc, line 773 at r1](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2MAwvHB19KGBXMaFoS:-L2MAwvHB19KGBXMaFoT:b3zmubm) ([raw file](https://github.com/grpc/grpc/blob/53bfe69f707e3729cd5845091a1282771b7e45ee/src/core/ext/filters/client_channel/subchannel.cc#L773)):*\n> ```cpp\n> void grpc_connected_subchannel::Unref(const grpc_core::DebugLocation& location,\n>                                       const char* reason) {\n>   GRPC_CHANNEL_STACK_UNREF(channel_stack_, REF_REASON);\n> ```\n\nInstead of taking and releasing refs to the channel stack every time we take and release a ref to the connected subchannel, why don't we just take a single ref to the channel stack in the ctor and release it in the dtor?\n\nThis should ideally eliminate the need to override the `Ref()` and `Unref()` methods.\n\n---\n\n*[src/core/ext/filters/client_channel/subchannel.h, line 51 at r1](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2MF9QzvfqL_bUqZzBv:-L2MF9QzvfqL_bUqZzBw:b-brox7y) ([raw file](https://github.com/grpc/grpc/blob/53bfe69f707e3729cd5845091a1282771b7e45ee/src/core/ext/filters/client_channel/subchannel.h#L51)):*\n> ```objc\n> #define GRPC_SUBCHANNEL_WEAK_UNREF(p, r) \\\n>   grpc_subchannel_weak_unref((p), __FILE__, __LINE__, (r))\n> #define GRPC_CONNECTED_SUBCHANNEL_REF(p, r) \\\n> ```\n\nThese two macros should go away.\n\n---\n\n*[src/core/ext/filters/client_channel/subchannel.h, line 68 at r1](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2MFCbFYS_a90qN3RZN:-L2MFCbFYS_a90qN3RZO:brhumzt) ([raw file](https://github.com/grpc/grpc/blob/53bfe69f707e3729cd5845091a1282771b7e45ee/src/core/ext/filters/client_channel/subchannel.h#L68)):*\n> ```objc\n> #define GRPC_SUBCHANNEL_WEAK_REF(p, r) grpc_subchannel_weak_ref((p))\n> #define GRPC_SUBCHANNEL_WEAK_UNREF(p, r) grpc_subchannel_weak_unref((p))\n> #define GRPC_CONNECTED_SUBCHANNEL_REF(p, r) grpc_connected_subchannel_ref((p))\n> ```\n\nSame here.\n\n---\n\n*[src/core/ext/filters/client_channel/subchannel.h, line 76 at r1](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2M76pmnJo4Gb1RGxLw-r1-76:-L2MBJkLX1MuDhIIDSVR:b-p70bu2) ([raw file](https://github.com/grpc/grpc/blob/53bfe69f707e3729cd5845091a1282771b7e45ee/src/core/ext/filters/client_channel/subchannel.h#L76)):*\n<details><summary><i>Previously, dgquintas (David G. Quintas) wrote…</i></summary><blockquote>\n\nYes, we may want to rename the class to follow C++ class naming conventions.\n</blockquote></details>\n\nYup.  Why not go ahead and do that in this PR?\n\n---\n\n*[src/core/ext/filters/client_channel/subchannel.h, line 76 at r1](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2MBNHK7OVLs8xuJ9v-:-L2MBNHK7OVLs8xuJ9v0:b-tdjrku) ([raw file](https://github.com/grpc/grpc/blob/53bfe69f707e3729cd5845091a1282771b7e45ee/src/core/ext/filters/client_channel/subchannel.h#L76)):*\n> ```objc\n> #endif\n> \n> class grpc_connected_subchannel : public grpc_core::RefCountedWithTracing {\n> ```\n\nWe should probably put this new code in the `grpc_core` namespace, since we've C++-ified it.\n\n---\n\n*[src/core/ext/filters/client_channel/subchannel.h, line 88 at r1](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2M9hiTC22Z1leJGrOy:-L2M9hiTC22Z1leJGrOz:bwnher9) ([raw file](https://github.com/grpc/grpc/blob/53bfe69f707e3729cd5845091a1282771b7e45ee/src/core/ext/filters/client_channel/subchannel.h#L88)):*\n> ```objc\n>   };\n> \n>   grpc_connected_subchannel(grpc_channel_stack* channel_stack);\n> ```\n\nThis should be `explicit`.\n\n---\n\n*[src/core/ext/filters/client_channel/subchannel.h, line 98 at r1](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2MD0rvcXRN4E_u0X5C:-L2MD0rvcXRN4E_u0X5D:b-voe3k9) ([raw file](https://github.com/grpc/grpc/blob/53bfe69f707e3729cd5845091a1282771b7e45ee/src/core/ext/filters/client_channel/subchannel.h#L98)):*\n> ```objc\n>   void Ping(grpc_closure* on_initiate, grpc_closure* on_ack);\n> \n>   grpc_error* CreateCall(const CallArgs* args, grpc_subchannel_call** call);\n> ```\n\nThe first arg could be a reference instead of a pointer.\n\n---\n\n*[src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc, line 415 at r1](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2MbAQGPNjvx6dQ4EYE:-L2MbAQGPNjvx6dQ4EYF:b8vm0tf) ([raw file](https://github.com/grpc/grpc/blob/53bfe69f707e3729cd5845091a1282771b7e45ee/src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc#L415)):*\n> ```cpp\n>           GRPC_ERROR_REF(error), \"selected_not_ready+switch_to_update\");\n>     } else {\n>       if (sd->curr_connectivity_state < GRPC_CHANNEL_TRANSIENT_FAILURE) {\n> ```\n\nSeems very weird to use `<` for an enum.  How about explicitly checking for the values we're interested in here?\n\n---\n\n*[src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc, line 415 at r1](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2Mbbb9Fqs3RuBQEF9s:-L2Mbbb9Fqs3RuBQEF9t:bnyany8) ([raw file](https://github.com/grpc/grpc/blob/53bfe69f707e3729cd5845091a1282771b7e45ee/src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc#L415)):*\n> ```cpp\n>           GRPC_ERROR_REF(error), \"selected_not_ready+switch_to_update\");\n>     } else {\n>       if (sd->curr_connectivity_state < GRPC_CHANNEL_TRANSIENT_FAILURE) {\n> ```\n\nWhy move this block up here from its oriignal position?  I'm pretty sure this is unsafe, because if we unref the subchannel list, we will then try to access `sd->curr_connectivity_state` without holding a ref.\n\n---\n\n*[src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc, line 432 at r1](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2McfsFdgqjCXIEqxtT:-L2McfsFdgqjCXIEqxtU:b-a7m910) ([raw file](https://github.com/grpc/grpc/blob/53bfe69f707e3729cd5845091a1282771b7e45ee/src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc#L432)):*\n> ```cpp\n>       // really want to take any action instead of waiting for the selected\n>       // subchannel reconnecting.\n>       if (sd->curr_connectivity_state == GRPC_CHANNEL_SHUTDOWN ||\n> ```\n\nSHUTDOWN state should never happen here anymore.\n\n---\n\n*[src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc, line 449 at r1](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2Md1fDqnX1hG3xMThg:-L2Md1fDqnX1hG3xMThh:b-dgt27h) ([raw file](https://github.com/grpc/grpc/blob/53bfe69f707e3729cd5845091a1282771b7e45ee/src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc#L449)):*\n> ```cpp\n>   if (sd->curr_connectivity_state == GRPC_CHANNEL_TRANSIENT_FAILURE) {\n>     if (sd->connected_subchannel != nullptr) {\n>       GRPC_CONNECTED_SUBCHANNEL_UNREF(sd->connected_subchannel,\n> ```\n\nMight be a good idea to refactor `grpc_lb_subchannel_data_unref_subchannel()` such that there's a canned helper function to do this.\n\n---\n\n*[src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc, line 457 at r1](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2MdTF-s8ew5-OlaQ8G:-L2MdTF-s8ew5-OlaQ8H:byp16tj) ([raw file](https://github.com/grpc/grpc/blob/53bfe69f707e3729cd5845091a1282771b7e45ee/src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc#L457)):*\n> ```cpp\n>   }\n>   // If the sd's new state is SHUTDOWN, unref the subchannel.\n>   else if (sd->curr_connectivity_state == GRPC_CHANNEL_SHUTDOWN) {\n> ```\n\nThis should never happen anymore.\n\n---\n\n*[src/core/lib/debug/trace.h, line 91 at r1](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2MDNjbu4hKJm1B557I:-L2MDNjbu4hKJm1B557J:bikfvin) ([raw file](https://github.com/grpc/grpc/blob/53bfe69f707e3729cd5845091a1282771b7e45ee/src/core/lib/debug/trace.h#L91)):*\n> ```objc\n> typedef TraceFlag DebugOnlyTraceFlag;\n> #else\n> class DebugOnlyTraceFlag : public TraceFlag {\n> ```\n\nThe intent of this interface was that for non-debug builds, `DebugOnlyTraceFlag` does not actually take up any space -- the compiler elides it completely.   I don't think that's the case if it inherits from the real implementation.\n\n---\n\n*[src/core/lib/support/ref_counted.h, line 101 at r1](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2ME5F5GFHYjvw6yfIf:-L2ME5F5GFHYjvw6yfIg:bmkrhxu) ([raw file](https://github.com/grpc/grpc/blob/53bfe69f707e3729cd5845091a1282771b7e45ee/src/core/lib/support/ref_counted.h#L101)):*\n> ```objc\n>   RefCountedWithTracing(const RefCountedWithTracing&) = delete;\n>   RefCountedWithTracing& operator=(const RefCountedWithTracing&) = delete;\n>   GRPC_ABSTRACT_BASE_CLASS\n> ```\n\nWe also need this in the `RefCounted` class.\n\n(I had added this in #13684, but it's fine to do it here too, or just move this to its own PR if you want.  Whichever one gets merged first will win.)\n\n---\n\n*[src/core/lib/support/ref_counted.h, line 113 at r1](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2MDol5pzpb__oQYKKG:-L2MDol5pzpb__oQYKKH:b-ur6xbs) ([raw file](https://github.com/grpc/grpc/blob/d9c69e1963288ff6fafb930ce55ea612808931f0/src/core/lib/support/ref_counted.h#L113)):*\n> ```objc\n>   }\n> \n>   virtual ~RefCountedWithTracing() {}\n> ```\n\nWhy remove this?  We generally want all destructors to be virtual for a base class.\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/13932#-:-L2Me0pVbaW-sWmxcqCn:b-xmhszj)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/356380664",
    "html_url": "https://github.com/grpc/grpc/pull/13932#issuecomment-356380664",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13932",
    "id": 356380664,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjM4MDY2NA==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-09T18:59:58Z",
    "updated_at": "2018-01-09T18:59:58Z",
    "author_association": "MEMBER",
    "body": "\n\n\n\nReview status: all files reviewed at latest revision, 18 unresolved discussions, some commit checks failed.\n\n---\n\n*[src/core/ext/filters/client_channel/lb_policy.h, line 163 at r1](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2M7rIyzm-U4BSTSQgh:-L2RAJMKcqJQHlAe-gCC:bdxivoe) ([raw file](https://github.com/grpc/grpc/blob/53bfe69f707e3729cd5845091a1282771b7e45ee/src/core/ext/filters/client_channel/lb_policy.h#L163)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nShould we change this to return a RefCountedPtr?\n\nThis might be easier once #13857 is merged.  We should probably discuss which of these PRs we should try to merge first.\n</blockquote></details>\n\nI've just merged #13857, so you'll have to merge the changes into this PR.\n\n---\n\n*[src/core/lib/debug/trace.h, line 91 at r1](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2MDNjbu4hKJm1B557I:-L2RH8BA1ywkyflmrO2r:b-59po3n) ([raw file](https://github.com/grpc/grpc/blob/53bfe69f707e3729cd5845091a1282771b7e45ee/src/core/lib/debug/trace.h#L91)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nThe intent of this interface was that for non-debug builds, `DebugOnlyTraceFlag` does not actually take up any space -- the compiler elides it completely.   I don't think that's the case if it inherits from the real implementation.\n</blockquote></details>\n\nI think I'm running into this same problem in #13684.  I'm going to try to come up with a better fix as part of that PR.\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/13932)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/356454608",
    "html_url": "https://github.com/grpc/grpc/pull/13932#issuecomment-356454608",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13932",
    "id": 356454608,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjQ1NDYwOA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-10T00:03:02Z",
    "updated_at": "2018-01-10T00:03:02Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n  +0.5% +2.99Ki [None]                                                                                +276Ki  +4.8%\n      +0.5% +2.64Ki [Unmapped]                                                                            +276Ki  +4.8%\n      +2.5%     +30 [None]                                                                                     0  [ = ]\n     +23e2%     +23 grpc_trace_alarm_refcount                                                                  0  [ = ]\n     +23e2%     +23 grpc_trace_auth_context_refcount                                                           0  [ = ]\n     +23e2%     +23 grpc_trace_chttp2_refcount                                                                 0  [ = ]\n     +23e2%     +23 grpc_trace_closure                                                                         0  [ = ]\n     +23e2%     +23 grpc_trace_cq_refcount                                                                     0  [ = ]\n     +23e2%     +23 grpc_trace_error_refcount                                                                  0  [ = ]\n     +23e2%     +23 grpc_trace_fd_refcount                                                                     0  [ = ]\n     +23e2%     +23 grpc_trace_lb_policy_refcount                                                              0  [ = ]\n     +23e2%     +23 grpc_trace_metadata                                                                        0  [ = ]\n     +23e2%     +23 grpc_trace_pending_tags                                                                    0  [ = ]\n     +23e2%     +23 grpc_trace_pollable_refcount                                                               0  [ = ]\n     +23e2%     +23 grpc_trace_resolver_refcount                                                               0  [ = ]\n     +23e2%     +23 grpc_trace_security_connector_refcount                                                     0  [ = ]\n     +23e2%     +23 grpc_trace_stream_refcount                                                                 0  [ = ]\n  +6.8%    +944 src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.cc                          +944  +6.8%\n      [NEW] +1.57Ki rr_handover_locked(glb_lb_policy*) [clone .part.8]                                   +1.57Ki  [NEW]\n      [NEW] +1.36Ki query_for_backends_locked(glb_lb_policy*) [clone .part.11]                           +1.36Ki  [NEW]\n      [NEW]    +708 glb_pick_locked                                                                         +708  [NEW]\n      [NEW]    +693 pick_from_internal_rr_locked                                                            +693  [NEW]\n      [NEW]    +590 glb_shutdown_locked                                                                     +590  [NEW]\n      [NEW]    +433 wrapped_rr_closure                                                                      +433  [NEW]\n      [NEW]    +314 glb_cancel_pick_locked                                                                  +314  [NEW]\n      [NEW]    +150 add_pending_pick                                                                        +150  [NEW]\n      +124%    +134 glb_ping_one_locked                                                                     +134  +124%\n      [NEW]    +119 glb_rr_connectivity_changed_locked                                                      +119  [NEW]\n      [NEW]    +113 initial_metadata_add_lb_token                                                           +113  [NEW]\n       +13%     +48 [Unmapped]                                                                               +48   +13%\n  +6.4%    +368 src/core/ext/filters/client_channel/subchannel.cc                                       +368  +6.4%\n      [NEW]    +806 on_subchannel_connected                                                                 +806  [NEW]\n      [NEW]    +338 grpc_connected_subchannel::CreateCall                                                   +338  [NEW]\n      [NEW]    +260 on_connected_subchannel_connectivity_changed                                            +260  [NEW]\n      [NEW]     +76 grpc_connected_subchannel::NotifyOnStateChange                                           +76  [NEW]\n      [NEW]     +73 grpc_connected_subchannel::Ping                                                          +73  [NEW]\n     +12e2%     +58 grpc_connected_subchannel_unref                                                          +58 +12e2%\n      +407%     +57 grpc_connected_subchannel_ref                                                            +57  +407%\n      [NEW]     +48 grpc_connected_subchannel::grpc_connected_subchannel                                     +48  [NEW]\n      [NEW]     +41 grpc_connected_subchannel::Unref                                                         +41  [NEW]\n      [NEW]     +27 grpc_connected_subchannel::Ref                                                           +27  [NEW]\n      +7.3%     +18 [Unmapped]                                                                               +18  +7.3%\n      +0.8%      +3 maybe_start_connecting_locked                                                             +3  +0.8%\n   +39%    +192 src/core/ext/filters/client_channel/lb_policy.cc                                        +192   +39%\n      [NEW]     +60 grpc_lb_policy_weak_unref                                                                +60  [NEW]\n       +76%     +51 grpc_lb_policy_unref                                                                     +51   +76%\n      [NEW]     +48 _GLOBAL__sub_I_lb_policy.cc                                                              +48  [NEW]\n       +15%     +19 [Unmapped]                                                                               +19   +15%\n      [NEW]     +19 shutdown_locked                                                                          +19  [NEW]\n      [NEW]      +7 grpc_lb_policy_weak_ref                                                                   +7  [NEW]\n      [NEW]      +6 grpc_lb_policy_pick_locked                                                                +6  [NEW]\n      [NEW]      +6 grpc_lb_policy_cancel_pick_locked                                                         +6  [NEW]\n       +11%      +1 grpc_lb_policy_ref                                                                        +1   +11%\n  +0.8%    +112 src/core/ext/filters/client_channel/client_channel.cc                                   +112  +0.8%\n       +86%     +74 pick_callback_done_locked                                                                +74   +86%\n      +9.3%     +61 pick_callback_start_locked                                                               +61  +9.3%\n       +19%     +59 cc_destroy_call_elem                                                                     +59   +19%\n      +0.7%      +1 pick_callback_cancel_locked                                                               +1  +0.7%\n  +1.6%    +105 src/core/lib/iomgr/error.cc                                                             +105  +1.6%\n      [NEW]    +103 _GLOBAL__sub_I_error.cc                                                                 +103  [NEW]\n      [NEW]      +2 grpc_core::DebugOnlyTraceFlag::~DebugOnlyTraceFlag                                        +2  [NEW]\n  +1.0%     +87 src/core/lib/surface/completion_queue.cc                                                 +87  +1.0%\n       +58%     +87 _GLOBAL__sub_I_completion_queue.cc                                                       +87   +58%\n   +29%     +48 src/core/ext/filters/client_channel/resolver.cc                                          +48   +29%\n      [NEW]     +48 _GLOBAL__sub_I_resolver.cc                                                               +48  [NEW]\n  +0.4%     +48 src/core/lib/iomgr/ev_epollex_linux.cc                                                   +48  +0.4%\n      [NEW]    +193 pollset_kick_all(grpc_pollset*) [clone .isra.9]                                         +193  [NEW]\n      [NEW]     +48 _GLOBAL__sub_I_ev_epollex_linux.cc                                                       +48  [NEW]\n  +1.5%     +48 src/core/lib/security/context/security_context.cc                                        +48  +1.5%\n      [NEW]     +48 _GLOBAL__sub_I_security_context.cc                                                       +48  [NEW]\n  +0.5%     +48 src/core/lib/security/transport/security_connector.cc                                    +48  +0.5%\n      [NEW]    +537 fake_check_peer(grpc_security_connector*, tsi_peer, grpc_auth_context**, grpc_closur    +537  [NEW]\n      [NEW]    +404 ssl_check_peer(grpc_security_connector*, char const*, tsi_peer const*, grpc_auth_con    +404  [NEW]\n      [NEW]     +48 _GLOBAL__sub_I_security_connector.cc                                                     +48  [NEW]\n  +4.5%     +48 src/core/lib/surface/alarm.cc                                                            +48  +4.5%\n      [NEW]    +242 alarm_unref(grpc_alarm*) [clone .part.2]                                                +242  [NEW]\n      [NEW]     +48 _GLOBAL__sub_I_alarm.cc                                                                  +48  [NEW]\n  +1.4%     +48 src/core/lib/transport/metadata.cc                                                       +48  +1.4%\n      [NEW]     +48 _GLOBAL__sub_I_metadata.cc                                                               +48  [NEW]\n  +4.2%     +48 src/core/lib/transport/transport.cc                                                      +48  +4.2%\n      [NEW]     +48 _GLOBAL__sub_I_transport.cc                                                              +48  [NEW]\n  +0.1%     +46 src/core/ext/transport/chttp2/transport/chttp2_transport.cc                              +46  +0.1%\n       +96%     +46 _GLOBAL__sub_I_chttp2_transport.cc                                                       +46   +96%\n  +3.3%     +46 src/core/lib/iomgr/ev_posix.cc                                                           +46  +3.3%\n       +96%     +46 _GLOBAL__sub_I_ev_posix.cc                                                               +46   +96%\n  +0.6%     +32 src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc                 +32  +0.6%\n      [NEW]    +429 rr_pick_locked                                                                          +429  [NEW]\n      [NEW]    +393 rr_shutdown_locked                                                                      +393  [NEW]\n      [NEW]    +279 rr_cancel_pick_locked                                                                   +279  [NEW]\n      +4.1%     +70 rr_connectivity_changed_locked                                                           +70  +4.1%\n      +1.7%      +5 rr_cancel_picks_locked                                                                    +5  +1.7%\n\n -------------- SHRINKING                                                                            --------------\n  -2.6%    -128 src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc                  -128  -2.6%\n      [DEL]    -481 pf_shutdown_locked                                                                      -481  [DEL]\n      [DEL]    -274 pf_cancel_pick_locked                                                                   -274  [DEL]\n      [DEL]    -103 pf_pick_locked                                                                          -103  [DEL]\n      -3.5%     -54 pf_connectivity_changed_locked                                                           -54  -3.5%\n     -20.1%     -28 [Unmapped]                                                                               -28 -20.1%\n      -1.0%      -3 pf_cancel_picks_locked                                                                    -3  -1.0%\n\n  +0.4% +5.08Ki TOTAL                                                                                 +278Ki  +4.4%\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE              FILE SIZE\n ++++++++++++++ GROWIN ++++++++++++++\n  [ = ]       0 [None]    +248  +0.0%\n\n  [ = ]       0 TOTAL     +248  +0.0%\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/356456693",
    "html_url": "https://github.com/grpc/grpc/pull/13932#issuecomment-356456693",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13932",
    "id": 356456693,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjQ1NjY5Mw==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-10T00:14:28Z",
    "updated_at": "2018-01-10T00:14:28Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/356463760",
    "html_url": "https://github.com/grpc/grpc/pull/13932#issuecomment-356463760",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13932",
    "id": 356463760,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjQ2Mzc2MA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-10T00:54:44Z",
    "updated_at": "2018-01-10T00:54:44Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] Performance differences noted:\nBenchmark                                                       call_initial_size-median\n--------------------------------------------------------------  --------------------------\nBM_StreamingPingPong<MinTCP, NoOpMutator, NoOpMutator>/0/1      -7%\nBM_StreamingPingPong<MinTCP, NoOpMutator, NoOpMutator>/1/1      -7%\nBM_StreamingPingPong<MinTCP, NoOpMutator, NoOpMutator>/32768/1  -7%\nBM_StreamingPingPong<MinTCP, NoOpMutator, NoOpMutator>/4096/1   -7%\nBM_StreamingPingPong<MinTCP, NoOpMutator, NoOpMutator>/512/1    -7%\nBM_StreamingPingPong<MinTCP, NoOpMutator, NoOpMutator>/64/1     -7%\nBM_StreamingPingPong<MinTCP, NoOpMutator, NoOpMutator>/8/1      -7%\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/356489851",
    "html_url": "https://github.com/grpc/grpc/pull/13932#issuecomment-356489851",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13932",
    "id": 356489851,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjQ4OTg1MQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-10T03:31:30Z",
    "updated_at": "2018-01-10T03:31:30Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n  +0.5% +2.92Ki [None]                                                                                +263Ki  +4.5%\n      +0.5% +2.52Ki [Unmapped]                                                                            +263Ki  +4.6%\n      [NEW]     +32 vtable for grpc_core::ConnectedSubchannel                                                +32  [NEW]\n      [NEW]     +32 vtable for grpc_core::RefCountedWithTracing                                              +32  [NEW]\n      +2.5%     +30 [None]                                                                                     0  [ = ]\n     +23e2%     +23 grpc_trace_alarm_refcount                                                                  0  [ = ]\n     +23e2%     +23 grpc_trace_auth_context_refcount                                                           0  [ = ]\n     +23e2%     +23 grpc_trace_chttp2_refcount                                                                 0  [ = ]\n     +23e2%     +23 grpc_trace_closure                                                                         0  [ = ]\n     +23e2%     +23 grpc_trace_cq_refcount                                                                     0  [ = ]\n     +23e2%     +23 grpc_trace_error_refcount                                                                  0  [ = ]\n     +23e2%     +23 grpc_trace_fd_refcount                                                                     0  [ = ]\n     +23e2%     +23 grpc_trace_lb_policy_refcount                                                              0  [ = ]\n     +23e2%     +23 grpc_trace_metadata                                                                        0  [ = ]\n     +23e2%     +23 grpc_trace_pending_tags                                                                    0  [ = ]\n     +23e2%     +23 grpc_trace_pollable_refcount                                                               0  [ = ]\n     +23e2%     +23 grpc_trace_resolver_refcount                                                               0  [ = ]\n     +23e2%     +23 grpc_trace_security_connector_refcount                                                     0  [ = ]\n     +23e2%     +23 grpc_trace_stream_refcount                                                                 0  [ = ]\n  +6.0%    +347 src/core/ext/filters/client_channel/subchannel.cc                                       +347  +6.0%\n      [NEW]    +806 on_subchannel_connected                                                                 +806  [NEW]\n      [NEW]    +322 grpc_core::ConnectedSubchannel::CreateCall                                              +322  [NEW]\n      [NEW]    +308 on_connected_subchannel_connectivity_changed                                            +308  [NEW]\n      [NEW]     +77 grpc_core::ConnectedSubchannel::ConnectedSubchannel                                      +77  [NEW]\n      [NEW]     +76 grpc_core::ConnectedSubchannel::NotifyOnStateChange                                      +76  [NEW]\n      [NEW]     +73 grpc_core::ConnectedSubchannel::Ping                                                     +73  [NEW]\n      [NEW]     +41 ConnectedSubchannel_unref                                                                +41  [NEW]\n       +12%     +31 [Unmapped]                                                                               +31   +12%\n      [NEW]     +23 grpc_core::ConnectedSubchannel::~ConnectedSubchannel                                     +23  [NEW]\n      [NEW]     +18 ConnectedSubchannel_ref                                                                  +18  [NEW]\n      [NEW]     +14 grpc_core::ConnectedSubchannel::~ConnectedSubchannel                                     +14  [NEW]\n      [NEW]      +9 grpc_core::RefCountedWithTracing::~RefCountedWithTracing                                  +9  [NEW]\n      +0.8%      +3 maybe_start_connecting_locked                                                             +3  +0.8%\n      [NEW]      +2 grpc_core::RefCountedWithTracing::~RefCountedWithTracing                                  +2  [NEW]\n  +1.6%    +105 src/core/lib/iomgr/error.cc                                                             +105  +1.6%\n      [NEW]    +103 _GLOBAL__sub_I_error.cc                                                                 +103  [NEW]\n      [NEW]      +2 grpc_core::DebugOnlyTraceFlag::~DebugOnlyTraceFlag                                        +2  [NEW]\n  +1.0%     +87 src/core/lib/surface/completion_queue.cc                                                 +87  +1.0%\n       +58%     +87 _GLOBAL__sub_I_completion_queue.cc                                                       +87   +58%\n  +1.4%     +80 src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc                 +80  +1.4%\n      +5.0%     +84 rr_connectivity_changed_locked                                                           +84  +5.0%\n  +9.7%     +48 src/core/ext/filters/client_channel/lb_policy.cc                                         +48  +9.7%\n      [NEW]     +48 _GLOBAL__sub_I_lb_policy.cc                                                              +48  [NEW]\n   +29%     +48 src/core/ext/filters/client_channel/resolver.cc                                          +48   +29%\n      [NEW]     +48 _GLOBAL__sub_I_resolver.cc                                                               +48  [NEW]\n  +0.4%     +48 src/core/lib/iomgr/ev_epollex_linux.cc                                                   +48  +0.4%\n      [NEW]    +193 pollset_kick_all(grpc_pollset*) [clone .isra.9]                                         +193  [NEW]\n      [NEW]     +48 _GLOBAL__sub_I_ev_epollex_linux.cc                                                       +48  [NEW]\n  +1.5%     +48 src/core/lib/security/context/security_context.cc                                        +48  +1.5%\n      [NEW]     +48 _GLOBAL__sub_I_security_context.cc                                                       +48  [NEW]\n  +0.5%     +48 src/core/lib/security/transport/security_connector.cc                                    +48  +0.5%\n      [NEW]    +537 fake_check_peer(grpc_security_connector*, tsi_peer, grpc_auth_context**, grpc_closur    +537  [NEW]\n      [NEW]    +404 ssl_check_peer(grpc_security_connector*, char const*, tsi_peer const*, grpc_auth_con    +404  [NEW]\n      [NEW]     +48 _GLOBAL__sub_I_security_connector.cc                                                     +48  [NEW]\n  +4.5%     +48 src/core/lib/surface/alarm.cc                                                            +48  +4.5%\n      [NEW]    +242 alarm_unref(grpc_alarm*) [clone .part.2]                                                +242  [NEW]\n      [NEW]     +48 _GLOBAL__sub_I_alarm.cc                                                                  +48  [NEW]\n  +1.4%     +48 src/core/lib/transport/metadata.cc                                                       +48  +1.4%\n      [NEW]     +48 _GLOBAL__sub_I_metadata.cc                                                               +48  [NEW]\n  +4.2%     +48 src/core/lib/transport/transport.cc                                                      +48  +4.2%\n      [NEW]     +48 _GLOBAL__sub_I_transport.cc                                                              +48  [NEW]\n  +0.1%     +46 src/core/ext/transport/chttp2/transport/chttp2_transport.cc                              +46  +0.1%\n       +96%     +46 _GLOBAL__sub_I_chttp2_transport.cc                                                       +46   +96%\n  +3.3%     +46 src/core/lib/iomgr/ev_posix.cc                                                           +46  +3.3%\n       +96%     +46 _GLOBAL__sub_I_ev_posix.cc                                                               +46   +96%\n\n -------------- SHRINKING                                                                            --------------\n  -2.3%    -112 src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc                  -112  -2.3%\n      -6.9%    -106 pf_connectivity_changed_locked                                                          -106  -6.9%\n      -4.3%      -6 [Unmapped]                                                                                -6  -4.3%\n\n  +0.3% +3.88Ki TOTAL                                                                                 +264Ki  +4.1%\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE              FILE SIZE\n ++++++++++++++ GROWIN ++++++++++++++\n  [ = ]       0 [None]    +248  +0.0%\n\n  [ = ]       0 TOTAL     +248  +0.0%\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/356491143",
    "html_url": "https://github.com/grpc/grpc/pull/13932#issuecomment-356491143",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13932",
    "id": 356491143,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjQ5MTE0Mw==",
    "user": {
      "login": "dgquintas",
      "id": 120217,
      "node_id": "MDQ6VXNlcjEyMDIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/120217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgquintas",
      "html_url": "https://github.com/dgquintas",
      "followers_url": "https://api.github.com/users/dgquintas/followers",
      "following_url": "https://api.github.com/users/dgquintas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgquintas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgquintas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgquintas/subscriptions",
      "organizations_url": "https://api.github.com/users/dgquintas/orgs",
      "repos_url": "https://api.github.com/users/dgquintas/repos",
      "events_url": "https://api.github.com/users/dgquintas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgquintas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-10T03:41:57Z",
    "updated_at": "2018-01-10T03:41:57Z",
    "author_association": "NONE",
    "body": "\n\n\n\nReview status: 3 of 11 files reviewed at latest revision, 18 unresolved discussions.\n\n---\n\n*[src/core/ext/filters/client_channel/lb_policy.h, line 163 at r1](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2M7rIyzm-U4BSTSQgh:-L2SIEg6B4p0d8IOIxxR:b-cnr9v4) ([raw file](https://github.com/grpc/grpc/blob/53bfe69f707e3729cd5845091a1282771b7e45ee/src/core/ext/filters/client_channel/lb_policy.h#L163)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nI've just merged #13857, so you'll have to merge the changes into this PR.\n</blockquote></details>\n\nStill something to be done on a PR separate from this one.\n\n---\n\n*[src/core/ext/filters/client_channel/subchannel.cc, line 169 at r1](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2MByAgWefVIlftVCUi:-L2SEvtFvv67JhPQJghW:bb7so8) ([raw file](https://github.com/grpc/grpc/blob/53bfe69f707e3729cd5845091a1282771b7e45ee/src/core/ext/filters/client_channel/subchannel.cc#L169)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nShouldn't these two functions go away?\n</blockquote></details>\n\nLB policies ref and unref connected subchannels too.\n\n---\n\n*[src/core/ext/filters/client_channel/subchannel.cc, line 555 at r1](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2M_c0dWSIn-lR5Vy8S:-L2Mn8RpTz8w1FA1OtjQ:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/53bfe69f707e3729cd5845091a1282771b7e45ee/src/core/ext/filters/client_channel/subchannel.cc#L555)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nInstead of using a `goto` here, can we just use an `else` clause for the code on lines 560-570?\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/ext/filters/client_channel/subchannel.cc, line 773 at r1](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2MAwvHB19KGBXMaFoS:-L2SLrxlIOluXVeNc-sC:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/53bfe69f707e3729cd5845091a1282771b7e45ee/src/core/ext/filters/client_channel/subchannel.cc#L773)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nInstead of taking and releasing refs to the channel stack every time we take and release a ref to the connected subchannel, why don't we just take a single ref to the channel stack in the ctor and release it in the dtor?\n\nThis should ideally eliminate the need to override the `Ref()` and `Unref()` methods.\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/ext/filters/client_channel/subchannel.h, line 51 at r1](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2MF9QzvfqL_bUqZzBv:-L2SF80qbs_X939oSDy9:b-nfomcf) ([raw file](https://github.com/grpc/grpc/blob/53bfe69f707e3729cd5845091a1282771b7e45ee/src/core/ext/filters/client_channel/subchannel.h#L51)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nThese two macros should go away.\n</blockquote></details>\n\nUsed by LB policies. \n\n---\n\n*[src/core/ext/filters/client_channel/subchannel.h, line 68 at r1](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2MFCbFYS_a90qN3RZN:-L2SFFnW9dFZ7AWwLZAz:b-nfomcf) ([raw file](https://github.com/grpc/grpc/blob/53bfe69f707e3729cd5845091a1282771b7e45ee/src/core/ext/filters/client_channel/subchannel.h#L68)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nSame here.\n</blockquote></details>\n\nUsed by LB policies. \n\n---\n\n*[src/core/ext/filters/client_channel/subchannel.h, line 76 at r1](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2M76pmnJo4Gb1RGxLw-r1-76:-L2SMIHe27qmiNXbueoS:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/53bfe69f707e3729cd5845091a1282771b7e45ee/src/core/ext/filters/client_channel/subchannel.h#L76)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nYup.  Why not go ahead and do that in this PR?\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/ext/filters/client_channel/subchannel.h, line 76 at r1](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2MBNHK7OVLs8xuJ9v-:-L2SGz5SjDUjb5wtFg7D:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/53bfe69f707e3729cd5845091a1282771b7e45ee/src/core/ext/filters/client_channel/subchannel.h#L76)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nWe should probably put this new code in the `grpc_core` namespace, since we've C++-ified it.\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/ext/filters/client_channel/subchannel.h, line 88 at r1](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2M9hiTC22Z1leJGrOy:-L2SBI1Cs-Fbe09QmR6P:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/53bfe69f707e3729cd5845091a1282771b7e45ee/src/core/ext/filters/client_channel/subchannel.h#L88)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nThis should be `explicit`.\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/ext/filters/client_channel/subchannel.h, line 98 at r1](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2MD0rvcXRN4E_u0X5C:-L2SBisup1oHbCoNYmEN:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/53bfe69f707e3729cd5845091a1282771b7e45ee/src/core/ext/filters/client_channel/subchannel.h#L98)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nThe first arg could be a reference instead of a pointer.\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc, line 415 at r1](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2MbAQGPNjvx6dQ4EYE:-L2Mpn5ZoPnjZAeIMH_d:b-qrvqsk) ([raw file](https://github.com/grpc/grpc/blob/53bfe69f707e3729cd5845091a1282771b7e45ee/src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc#L415)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nSeems very weird to use `<` for an enum.  How about explicitly checking for the values we're interested in here?\n</blockquote></details>\n\nDone. Also integrated changes within already existing branches.\n\n---\n\n*[src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc, line 415 at r1](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2Mbbb9Fqs3RuBQEF9s:-L2MoWhGDpY2sBHpL7Nl:b-rheosh) ([raw file](https://github.com/grpc/grpc/blob/53bfe69f707e3729cd5845091a1282771b7e45ee/src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc#L415)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nWhy move this block up here from its oriignal position?  I'm pretty sure this is unsafe, because if we unref the subchannel list, we will then try to access `sd->curr_connectivity_state` without holding a ref.\n</blockquote></details>\n\nYes, sorry about that, this was a leftover of an experiment. Done.\n\n---\n\n*[src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc, line 432 at r1](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2McfsFdgqjCXIEqxtT:-L2Mq8hYbsiZRSzretuP:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/53bfe69f707e3729cd5845091a1282771b7e45ee/src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc#L432)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nSHUTDOWN state should never happen here anymore.\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc, line 449 at r1](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2Md1fDqnX1hG3xMThg:-L2SIMQFO5S0S3yrFnX6:bgrjkl7) ([raw file](https://github.com/grpc/grpc/blob/53bfe69f707e3729cd5845091a1282771b7e45ee/src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc#L449)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nMight be a good idea to refactor `grpc_lb_subchannel_data_unref_subchannel()` such that there's a canned helper function to do this.\n</blockquote></details>\n\nBest on a separate PR. Cleaner if things need to be rolled back.\n\n---\n\n*[src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc, line 457 at r1](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2MdTF-s8ew5-OlaQ8G:-L2SBAJeCBN6QubHlp-n:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/53bfe69f707e3729cd5845091a1282771b7e45ee/src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc#L457)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nThis should never happen anymore.\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/lib/debug/trace.h, line 91 at r1](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2MDNjbu4hKJm1B557I:-L2SB1EhmtUVALftJK8H:b-h9d9qc) ([raw file](https://github.com/grpc/grpc/blob/53bfe69f707e3729cd5845091a1282771b7e45ee/src/core/lib/debug/trace.h#L91)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nI think I'm running into this same problem in #13684.  I'm going to try to come up with a better fix as part of that PR.\n</blockquote></details>\n\nOk. I'm leaving this as-is for now.\n\n---\n\n*[src/core/lib/support/ref_counted.h, line 101 at r1](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2ME5F5GFHYjvw6yfIf:-L2SAvVA-xEUmAfHyivP:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/53bfe69f707e3729cd5845091a1282771b7e45ee/src/core/lib/support/ref_counted.h#L101)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nWe also need this in the `RefCounted` class.\n\n(I had added this in #13684, but it's fine to do it here too, or just move this to its own PR if you want.  Whichever one gets merged first will win.)\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/lib/support/ref_counted.h, line 113 at r1](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2MDol5pzpb__oQYKKG:-L2R9eoy78eSIcWYsrwW:b-67g5zd) ([raw file](https://github.com/grpc/grpc/blob/d9c69e1963288ff6fafb930ce55ea612808931f0/src/core/lib/support/ref_counted.h#L113)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nWhy remove this?  We generally want all destructors to be virtual for a base class.\n</blockquote></details>\n\nRestored. It was removed as part of the experimentation that culminated with adding `GRPC_ABSTGRACT_BASE_CLASS`\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/13932)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/356491192",
    "html_url": "https://github.com/grpc/grpc/pull/13932#issuecomment-356491192",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13932",
    "id": 356491192,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjQ5MTE5Mg==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-10T03:42:23Z",
    "updated_at": "2018-01-10T03:42:23Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n  +0.5% +2.83Ki [None]                                                                                +263Ki  +4.5%\n      +0.5% +2.42Ki [Unmapped]                                                                            +263Ki  +4.6%\n      [NEW]     +32 vtable for grpc_core::ConnectedSubchannel                                                +32  [NEW]\n      [NEW]     +32 vtable for grpc_core::RefCountedWithTracing                                              +32  [NEW]\n      +2.5%     +30 [None]                                                                                     0  [ = ]\n     +23e2%     +23 grpc_trace_alarm_refcount                                                                  0  [ = ]\n     +23e2%     +23 grpc_trace_auth_context_refcount                                                           0  [ = ]\n     +23e2%     +23 grpc_trace_chttp2_refcount                                                                 0  [ = ]\n     +23e2%     +23 grpc_trace_closure                                                                         0  [ = ]\n     +23e2%     +23 grpc_trace_cq_refcount                                                                     0  [ = ]\n     +23e2%     +23 grpc_trace_error_refcount                                                                  0  [ = ]\n     +23e2%     +23 grpc_trace_fd_refcount                                                                     0  [ = ]\n     +23e2%     +23 grpc_trace_lb_policy_refcount                                                              0  [ = ]\n     +23e2%     +23 grpc_trace_metadata                                                                        0  [ = ]\n     +23e2%     +23 grpc_trace_pending_tags                                                                    0  [ = ]\n     +23e2%     +23 grpc_trace_pollable_refcount                                                               0  [ = ]\n     +23e2%     +23 grpc_trace_resolver_refcount                                                               0  [ = ]\n     +23e2%     +23 grpc_trace_security_connector_refcount                                                     0  [ = ]\n     +23e2%     +23 grpc_trace_stream_refcount                                                                 0  [ = ]\n  +5.2%    +299 src/core/ext/filters/client_channel/subchannel.cc                                       +299  +5.2%\n      [NEW]    +806 on_subchannel_connected                                                                 +806  [NEW]\n      [NEW]    +322 grpc_core::ConnectedSubchannel::CreateCall                                              +322  [NEW]\n      [NEW]    +268 on_connected_subchannel_connectivity_changed                                            +268  [NEW]\n      [NEW]     +77 grpc_core::ConnectedSubchannel::ConnectedSubchannel                                      +77  [NEW]\n      [NEW]     +76 grpc_core::ConnectedSubchannel::NotifyOnStateChange                                      +76  [NEW]\n      [NEW]     +73 grpc_core::ConnectedSubchannel::Ping                                                     +73  [NEW]\n      [NEW]     +41 grpc_connected_subchannel_unref                                                          +41  [NEW]\n      +9.3%     +23 [Unmapped]                                                                               +23  +9.3%\n      [NEW]     +23 grpc_core::ConnectedSubchannel::~ConnectedSubchannel                                     +23  [NEW]\n      [NEW]     +18 grpc_connected_subchannel_ref                                                            +18  [NEW]\n      [NEW]     +14 grpc_core::ConnectedSubchannel::~ConnectedSubchannel                                     +14  [NEW]\n      [NEW]      +9 grpc_core::RefCountedWithTracing::~RefCountedWithTracing                                  +9  [NEW]\n      +0.8%      +3 maybe_start_connecting_locked                                                             +3  +0.8%\n      [NEW]      +2 grpc_core::RefCountedWithTracing::~RefCountedWithTracing                                  +2  [NEW]\n  +1.6%    +105 src/core/lib/iomgr/error.cc                                                             +105  +1.6%\n      [NEW]    +103 _GLOBAL__sub_I_error.cc                                                                 +103  [NEW]\n      [NEW]      +2 grpc_core::DebugOnlyTraceFlag::~DebugOnlyTraceFlag                                        +2  [NEW]\n  +1.0%     +87 src/core/lib/surface/completion_queue.cc                                                 +87  +1.0%\n       +58%     +87 _GLOBAL__sub_I_completion_queue.cc                                                       +87   +58%\n  +1.4%     +80 src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc                 +80  +1.4%\n      +5.0%     +84 rr_connectivity_changed_locked                                                           +84  +5.0%\n  +9.7%     +48 src/core/ext/filters/client_channel/lb_policy.cc                                         +48  +9.7%\n      [NEW]     +48 _GLOBAL__sub_I_lb_policy.cc                                                              +48  [NEW]\n   +29%     +48 src/core/ext/filters/client_channel/resolver.cc                                          +48   +29%\n      [NEW]     +48 _GLOBAL__sub_I_resolver.cc                                                               +48  [NEW]\n  +0.4%     +48 src/core/lib/iomgr/ev_epollex_linux.cc                                                   +48  +0.4%\n      [NEW]    +193 pollset_kick_all(grpc_pollset*) [clone .isra.9]                                         +193  [NEW]\n      [NEW]     +48 _GLOBAL__sub_I_ev_epollex_linux.cc                                                       +48  [NEW]\n  +1.5%     +48 src/core/lib/security/context/security_context.cc                                        +48  +1.5%\n      [NEW]     +48 _GLOBAL__sub_I_security_context.cc                                                       +48  [NEW]\n  +0.5%     +48 src/core/lib/security/transport/security_connector.cc                                    +48  +0.5%\n      [NEW]    +537 fake_check_peer(grpc_security_connector*, tsi_peer, grpc_auth_context**, grpc_closur    +537  [NEW]\n      [NEW]    +404 ssl_check_peer(grpc_security_connector*, char const*, tsi_peer const*, grpc_auth_con    +404  [NEW]\n      [NEW]     +48 _GLOBAL__sub_I_security_connector.cc                                                     +48  [NEW]\n  +4.5%     +48 src/core/lib/surface/alarm.cc                                                            +48  +4.5%\n      [NEW]    +242 alarm_unref(grpc_alarm*) [clone .part.2]                                                +242  [NEW]\n      [NEW]     +48 _GLOBAL__sub_I_alarm.cc                                                                  +48  [NEW]\n  +1.4%     +48 src/core/lib/transport/metadata.cc                                                       +48  +1.4%\n      [NEW]     +48 _GLOBAL__sub_I_metadata.cc                                                               +48  [NEW]\n  +4.2%     +48 src/core/lib/transport/transport.cc                                                      +48  +4.2%\n      [NEW]     +48 _GLOBAL__sub_I_transport.cc                                                              +48  [NEW]\n  +0.1%     +46 src/core/ext/transport/chttp2/transport/chttp2_transport.cc                              +46  +0.1%\n       +96%     +46 _GLOBAL__sub_I_chttp2_transport.cc                                                       +46   +96%\n  +3.3%     +46 src/core/lib/iomgr/ev_posix.cc                                                           +46  +3.3%\n       +96%     +46 _GLOBAL__sub_I_ev_posix.cc                                                               +46   +96%\n\n -------------- SHRINKING                                                                            --------------\n  -2.9%    -144 src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc                  -144  -2.9%\n      -9.3%    -142 pf_connectivity_changed_locked                                                          -142  -9.3%\n      -1.4%      -2 [Unmapped]                                                                                -2  -1.4%\n\n  +0.3% +3.71Ki TOTAL                                                                                 +264Ki  +4.1%\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE              FILE SIZE\n ++++++++++++++ GROWIN ++++++++++++++\n  [ = ]       0 [None]    +248  +0.0%\n\n  [ = ]       0 TOTAL     +248  +0.0%\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/356491325",
    "html_url": "https://github.com/grpc/grpc/pull/13932#issuecomment-356491325",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13932",
    "id": 356491325,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjQ5MTMyNQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-10T03:43:38Z",
    "updated_at": "2018-01-10T03:43:38Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/356492636",
    "html_url": "https://github.com/grpc/grpc/pull/13932#issuecomment-356492636",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13932",
    "id": 356492636,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjQ5MjYzNg==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-10T03:54:39Z",
    "updated_at": "2018-01-10T03:54:39Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/356495923",
    "html_url": "https://github.com/grpc/grpc/pull/13932#issuecomment-356495923",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13932",
    "id": 356495923,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjQ5NTkyMw==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-10T04:22:56Z",
    "updated_at": "2018-01-10T04:22:56Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] Performance differences noted:\nBenchmark                    cpu_time    real_time\n---------------------------  ----------  -----------\nBM_HpackEncoderInitDestroy   +8%         +8%\nBM_MetadataRefUnrefExternal  +5%         +5%\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/356497163",
    "html_url": "https://github.com/grpc/grpc/pull/13932#issuecomment-356497163",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13932",
    "id": 356497163,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjQ5NzE2Mw==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-10T04:33:42Z",
    "updated_at": "2018-01-10T04:33:42Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] Performance differences noted:\nBenchmark                                            cpu_time    real_time\n---------------------------------------------------  ----------  -----------\nBM_MetadataRefUnrefExternal                          +20%        +20%\nBM_PumpStreamClientToServer<InProcessCHTTP2>/262144  +4%         +4%\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/356663758",
    "html_url": "https://github.com/grpc/grpc/pull/13932#issuecomment-356663758",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13932",
    "id": 356663758,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjY2Mzc1OA==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-10T16:51:34Z",
    "updated_at": "2018-01-10T16:51:34Z",
    "author_association": "MEMBER",
    "body": "\n\n\n\nReviewed 2 of 10 files at r2, 6 of 8 files at r3.\nReview status: all files reviewed at latest revision, 11 unresolved discussions.\n\n---\n\n*[src/core/ext/filters/client_channel/lb_policy.h, line 163 at r1](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2M7rIyzm-U4BSTSQgh:-L2Vm1tg7KQcJv706-yk:bl76bkg) ([raw file](https://github.com/grpc/grpc/blob/53bfe69f707e3729cd5845091a1282771b7e45ee/src/core/ext/filters/client_channel/lb_policy.h#L163)):*\n<details><summary><i>Previously, dgquintas (David G. Quintas) wrote…</i></summary><blockquote>\n\nStill something to be done on a PR separate from this one.\n</blockquote></details>\n\nWhy not do it as part of this PR?  We're touching all of the callers of `ConnectedSubchannel` anyway.  It seems like it would be pretty trivial to do here.\n\n---\n\n*[src/core/ext/filters/client_channel/subchannel.cc, line 169 at r1](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2MByAgWefVIlftVCUi:-L2VmVb6YckuvsiVX0hZ:btv34ef) ([raw file](https://github.com/grpc/grpc/blob/53bfe69f707e3729cd5845091a1282771b7e45ee/src/core/ext/filters/client_channel/subchannel.cc#L169)):*\n<details><summary><i>Previously, dgquintas (David G. Quintas) wrote…</i></summary><blockquote>\n\nLB policies ref and unref connected subchannels too.\n</blockquote></details>\n\nSure, but that should now happen by directly calling the `Ref()` and `Unref()` methods inheritted from `RefCountedWithTracing`.  There's no value in wrapping those methods in these functions.  (In fact, doing so will make the file and line number information logged by the tracer wrong, since `DEBUG_LOCATION` will report the location of these wrapper functions instead of the location that called these functions.)\n\n---\n\n*[src/core/ext/filters/client_channel/subchannel.cc, line 773 at r1](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2MAwvHB19KGBXMaFoS:-L2VnfB8qDFqmdGMMzMb:b7pe3ov) ([raw file](https://github.com/grpc/grpc/blob/53bfe69f707e3729cd5845091a1282771b7e45ee/src/core/ext/filters/client_channel/subchannel.cc#L773)):*\n<details><summary><i>Previously, dgquintas (David G. Quintas) wrote…</i></summary><blockquote>\n\nDone.\n</blockquote></details>\n\nLooks like you moved the unref to the dtor, but I don't see a ref in the ctor.\n\n---\n\n*[src/core/ext/filters/client_channel/subchannel.cc, line 541 at r3](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2VwQGsrLkpGEPdIuQe:-L2VwQGsrLkpGEPdIuQf:bihjpc6) ([raw file](https://github.com/grpc/grpc/blob/70fbe6261376f5e0bf7a9c62f3809730d8c93e3c/src/core/ext/filters/client_channel/subchannel.cc#L541)):*\n> ```cpp\n>   auto* con = GET_CONNECTED_SUBCHANNEL(c, no_barrier);\n>   /* if we failed just leave this closure */\n>   if (connected_subchannel_watcher->connectivity_state >=\n> ```\n\nSeems very weird to use '>=' for an enum. How about explicitly checking for the values we're interested in here?\n\n---\n\n*[src/core/ext/filters/client_channel/subchannel.h, line 51 at r1](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2MF9QzvfqL_bUqZzBv:-L2VovjTPbXp0GsH89V9:bxwrp48) ([raw file](https://github.com/grpc/grpc/blob/53bfe69f707e3729cd5845091a1282771b7e45ee/src/core/ext/filters/client_channel/subchannel.h#L51)):*\n<details><summary><i>Previously, dgquintas (David G. Quintas) wrote…</i></summary><blockquote>\n\nUsed by LB policies. \n</blockquote></details>\n\nThe LB policies should ideally use `RefCountedPtr`, or failing that, they should use the `Ref()` and `Unref()` methods inheritted from `RefCountedWithTracing`.  We should not need macros or wrapper functions anymore.\n\n---\n\n*[src/core/ext/filters/client_channel/subchannel.h, line 68 at r1](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2MFCbFYS_a90qN3RZN:-L2VrO0ib419JEUaKyTZ:b-q64pkt) ([raw file](https://github.com/grpc/grpc/blob/53bfe69f707e3729cd5845091a1282771b7e45ee/src/core/ext/filters/client_channel/subchannel.h#L68)):*\n<details><summary><i>Previously, dgquintas (David G. Quintas) wrote…</i></summary><blockquote>\n\nUsed by LB policies. \n</blockquote></details>\n\nSee above.\n\n---\n\n*[src/core/ext/filters/client_channel/subchannel.h, line 114 at r3](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2VrY3ZzQ9R6cew9fvW:-L2VrY3ZzQ9R6cew9fvX:b4tol4f) ([raw file](https://github.com/grpc/grpc/blob/70fbe6261376f5e0bf7a9c62f3809730d8c93e3c/src/core/ext/filters/client_channel/subchannel.h#L114)):*\n> ```objc\n> void grpc_subchannel_weak_unref(\n>     grpc_subchannel* channel GRPC_SUBCHANNEL_REF_EXTRA_ARGS);\n> grpc_core::ConnectedSubchannel* grpc_connected_subchannel_ref(\n> ```\n\nThese two functions should go away.\n\nTo put this another way, now that we are making this a C++ class, there should be no more functions with prefix `grpc_connected_subchannel_`.  All such functions should be methods on the C++ object instead.\n\n---\n\n*[src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc, line 452 at r3](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2VxO-pcHGk6uf86ZML:-L2VxO-pcHGk6uf86ZMM:bfne1ai) ([raw file](https://github.com/grpc/grpc/blob/70fbe6261376f5e0bf7a9c62f3809730d8c93e3c/src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc#L452)):*\n> ```cpp\n>       // Case 2.  Promote p->latest_pending_subchannel_list to\n>       // p->subchannel_list.\n>       grpc_core::ConnectedSubchannel* con =\n> ```\n\nOut of curiosity, why was this check needed?  If this is an issue, doesn't it need to be handled in RR too?\n\nAlso, I think there may be a race condition here, because we are checking the value here but not taking a ref until line 472 below.  What happens if the subchannel removes the connected subchannel between these two lines?\n\nI suspect that we may need to look more closely at refcounting vs. the atomic used to store the connected subchannel inside of the subchannel.  In other words, I think we need a mechanism whereby `grpc_subchannel_get_connected_subchannel()` returns either null or a new reference (ideally in the form of a `RefCountedPtr`).\n\n---\n\n*[src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc, line 449 at r1](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2Md1fDqnX1hG3xMThg:-L2Vt9-bsXo4N64cBG8O:b-yt0l6k) ([raw file](https://github.com/grpc/grpc/blob/53bfe69f707e3729cd5845091a1282771b7e45ee/src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc#L449)):*\n<details><summary><i>Previously, dgquintas (David G. Quintas) wrote…</i></summary><blockquote>\n\nBest on a separate PR. Cleaner if things need to be rolled back.\n</blockquote></details>\n\nMy concern is that this exacerbates the already-bad problem of the lack of a clean API between the subchannel_list code and the LB policies that use it.  I'd rather have the subchannel_list code provide methods instead of having the LB policies directly manipulate the subchannel_list's data.\n\nI don't think doing this actually makes this change harder to roll back.  The subchannel_list code isn't something that gets changed that often, so this doesn't make it more likely to have a conflict with a subsequent change.\n\n---\n\n*[src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc, line 376 at r3](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2Vv013fCjtBuZyM0cX:-L2Vv013fCjtBuZyM0cY:bfi2ie6) ([raw file](https://github.com/grpc/grpc/blob/70fbe6261376f5e0bf7a9c62f3809730d8c93e3c/src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc#L376)):*\n> ```cpp\n> static void rr_connectivity_changed_locked(void* arg, grpc_error* error) {\n>   grpc_lb_subchannel_data* sd = (grpc_lb_subchannel_data*)arg;\n>   GPR_ASSERT(sd->curr_connectivity_state != GRPC_CHANNEL_SHUTDOWN);\n> ```\n\nI'm not sure this assertion makes sense here, since we haven't set `curr_connectivity_state` yet.  I suggest moving this down to 411 and checking `pending_connectivity_state_unsafe` instead of `curr_connectivity_state`.\n\n---\n\n*[src/core/lib/debug/trace.h, line 91 at r1](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2MDNjbu4hKJm1B557I:-L2RMKqDa3kMg5NNf43K:b-jrf3ba) ([raw file](https://github.com/grpc/grpc/blob/53bfe69f707e3729cd5845091a1282771b7e45ee/src/core/lib/debug/trace.h#L91)):*\n<details><summary><i>Previously, dgquintas (David G. Quintas) wrote…</i></summary><blockquote>\n\nOk. I'm leaving this as-is for now.\n</blockquote></details>\n\nI've fixed this in my PR by adding a new ctor to `RefCountedWithTracing`:\n\nhttps://github.com/grpc/grpc/pull/13684/files#diff-a75a88e5f2cf46eabe4c53a2470860db\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/13932)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/357125735",
    "html_url": "https://github.com/grpc/grpc/pull/13932#issuecomment-357125735",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13932",
    "id": 357125735,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzEyNTczNQ==",
    "user": {
      "login": "dgquintas",
      "id": 120217,
      "node_id": "MDQ6VXNlcjEyMDIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/120217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgquintas",
      "html_url": "https://github.com/dgquintas",
      "followers_url": "https://api.github.com/users/dgquintas/followers",
      "following_url": "https://api.github.com/users/dgquintas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgquintas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgquintas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgquintas/subscriptions",
      "organizations_url": "https://api.github.com/users/dgquintas/orgs",
      "repos_url": "https://api.github.com/users/dgquintas/repos",
      "events_url": "https://api.github.com/users/dgquintas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgquintas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-12T02:31:40Z",
    "updated_at": "2018-01-12T02:31:40Z",
    "author_association": "NONE",
    "body": "\n\n\n\nReview status: all files reviewed at latest revision, 11 unresolved discussions, some commit checks broke.\n\n---\n\n*[src/core/ext/filters/client_channel/lb_policy.h, line 163 at r1](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2M7rIyzm-U4BSTSQgh:-L2c3oeXJhh1P9jfxbim:b7gv4hm) ([raw file](https://github.com/grpc/grpc/blob/53bfe69f707e3729cd5845091a1282771b7e45ee/src/core/ext/filters/client_channel/lb_policy.h#L163)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nWhy not do it as part of this PR?  We're touching all of the callers of `ConnectedSubchannel` anyway.  It seems like it would be pretty trivial to do here.\n</blockquote></details>\n\nEnded up being a good idea. Done.\n\n---\n\n*[src/core/ext/filters/client_channel/subchannel.cc, line 169 at r1](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2MByAgWefVIlftVCUi:-L2c3scBht5zebi8blT4:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/53bfe69f707e3729cd5845091a1282771b7e45ee/src/core/ext/filters/client_channel/subchannel.cc#L169)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nSure, but that should now happen by directly calling the `Ref()` and `Unref()` methods inheritted from `RefCountedWithTracing`.  There's no value in wrapping those methods in these functions.  (In fact, doing so will make the file and line number information logged by the tracer wrong, since `DEBUG_LOCATION` will report the location of these wrapper functions instead of the location that called these functions.)\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/ext/filters/client_channel/subchannel.cc, line 773 at r1](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2MAwvHB19KGBXMaFoS:-L2WAb9lKRQ70BWwotSU:b-3ahpg5) ([raw file](https://github.com/grpc/grpc/blob/53bfe69f707e3729cd5845091a1282771b7e45ee/src/core/ext/filters/client_channel/subchannel.cc#L773)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nLooks like you moved the unref to the dtor, but I don't see a ref in the ctor.\n</blockquote></details>\n\nIf we do that, there'll always be a leftover refcount of 1. The initial ref is the one from the construction of the channel stack, which is passed in to the constructor of the connected subchannel.\n\n---\n\n*[src/core/ext/filters/client_channel/subchannel.cc, line 541 at r3](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2VwQGsrLkpGEPdIuQe:-L2c3tP-t91aq7W49hJV:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/70fbe6261376f5e0bf7a9c62f3809730d8c93e3c/src/core/ext/filters/client_channel/subchannel.cc#L541)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nSeems very weird to use '>=' for an enum. How about explicitly checking for the values we're interested in here?\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/ext/filters/client_channel/subchannel.h, line 51 at r1](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2MF9QzvfqL_bUqZzBv:-L2c4EYAPLKf0mATMl3d:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/53bfe69f707e3729cd5845091a1282771b7e45ee/src/core/ext/filters/client_channel/subchannel.h#L51)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nThe LB policies should ideally use `RefCountedPtr`, or failing that, they should use the `Ref()` and `Unref()` methods inheritted from `RefCountedWithTracing`.  We should not need macros or wrapper functions anymore.\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/ext/filters/client_channel/subchannel.h, line 68 at r1](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2MFCbFYS_a90qN3RZN:-L2c4FAIDBXDvexC4kls:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/53bfe69f707e3729cd5845091a1282771b7e45ee/src/core/ext/filters/client_channel/subchannel.h#L68)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nSee above.\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/ext/filters/client_channel/subchannel.h, line 114 at r3](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2VrY3ZzQ9R6cew9fvW:-L2c4Hxm_MHWWhgjnSPQ:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/70fbe6261376f5e0bf7a9c62f3809730d8c93e3c/src/core/ext/filters/client_channel/subchannel.h#L114)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nThese two functions should go away.\n\nTo put this another way, now that we are making this a C++ class, there should be no more functions with prefix `grpc_connected_subchannel_`.  All such functions should be methods on the C++ object instead.\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc, line 452 at r3](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2VxO-pcHGk6uf86ZML:-L2c70IV13RI-w9bRHSF:bq5pyrk) ([raw file](https://github.com/grpc/grpc/blob/70fbe6261376f5e0bf7a9c62f3809730d8c93e3c/src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc#L452)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nOut of curiosity, why was this check needed?  If this is an issue, doesn't it need to be handled in RR too?\n\nAlso, I think there may be a race condition here, because we are checking the value here but not taking a ref until line 472 below.  What happens if the subchannel removes the connected subchannel between these two lines?\n\nI suspect that we may need to look more closely at refcounting vs. the atomic used to store the connected subchannel inside of the subchannel.  In other words, I think we need a mechanism whereby `grpc_subchannel_get_connected_subchannel()` returns either null or a new reference (ideally in the form of a `RefCountedPtr`).\n</blockquote></details>\n\nThis point (the fix thereof) ended up being the bulk of the changes in this last commit. In addition to your point, we also had a data race between reading the connected subchannel from the subchannel and the subchannel concurrently disconnecting it. The latter operation (in `on_connected_subchannel_connectivity_changed`) was already happening under a lock, so I simply traded the atomic holding `connected_subchannel` inside the subchannel for a read lock in `grpc_subchannel_get_connected_subchannel`. \n\nBy the way, having a version of `std::lock_guard` or similar would make the code in `grpc_subchannel_get_connected_subchannel` look much less funny. I only mention this in case you already have something in the works. Otherwise I can take a shot at that (on a separate PR).\n\n---\n\n*[src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc, line 449 at r1](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2Md1fDqnX1hG3xMThg:-L2c5WgRGcsiYACPrSGV:b-c1end9) ([raw file](https://github.com/grpc/grpc/blob/53bfe69f707e3729cd5845091a1282771b7e45ee/src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc#L449)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nMy concern is that this exacerbates the already-bad problem of the lack of a clean API between the subchannel_list code and the LB policies that use it.  I'd rather have the subchannel_list code provide methods instead of having the LB policies directly manipulate the subchannel_list's data.\n\nI don't think doing this actually makes this change harder to roll back.  The subchannel_list code isn't something that gets changed that often, so this doesn't make it more likely to have a conflict with a subsequent change.\n</blockquote></details>\n\nWe now simply `.reset()`. \n\n---\n\n*[src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc, line 376 at r3](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2Vv013fCjtBuZyM0cX:-L2c4sn7Ln_Mc7aowBYA:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/70fbe6261376f5e0bf7a9c62f3809730d8c93e3c/src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc#L376)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nI'm not sure this assertion makes sense here, since we haven't set `curr_connectivity_state` yet.  I suggest moving this down to 411 and checking `pending_connectivity_state_unsafe` instead of `curr_connectivity_state`.\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/lib/debug/trace.h, line 91 at r1](https://reviewable.io:443/reviews/grpc/grpc/13932#-L2MDNjbu4hKJm1B557I:-L2cCHkOJQr4op3YjZfl:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/53bfe69f707e3729cd5845091a1282771b7e45ee/src/core/lib/debug/trace.h#L91)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nI've fixed this in my PR by adding a new ctor to `RefCountedWithTracing`:\n\nhttps://github.com/grpc/grpc/pull/13684/files#diff-a75a88e5f2cf46eabe4c53a2470860db\n</blockquote></details>\n\nDone.\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/13932)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/357126155",
    "html_url": "https://github.com/grpc/grpc/pull/13932#issuecomment-357126155",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13932",
    "id": 357126155,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzEyNjE1NQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-12T02:34:33Z",
    "updated_at": "2018-01-12T02:34:33Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n  +0.4% +2.16Ki [None]                                                                                +256Ki  +4.4%\n      +0.3% +1.75Ki [Unmapped]                                                                            +256Ki  +4.4%\n      [NEW]     +32 vtable for grpc_core::ConnectedSubchannel                                                +32  [NEW]\n      [NEW]     +32 vtable for grpc_core::RefCountedWithTracing                                              +32  [NEW]\n      +2.5%     +30 [None]                                                                                     0  [ = ]\n     +23e2%     +23 grpc_trace_alarm_refcount                                                                  0  [ = ]\n     +23e2%     +23 grpc_trace_auth_context_refcount                                                           0  [ = ]\n     +23e2%     +23 grpc_trace_chttp2_refcount                                                                 0  [ = ]\n     +23e2%     +23 grpc_trace_closure                                                                         0  [ = ]\n     +23e2%     +23 grpc_trace_cq_refcount                                                                     0  [ = ]\n     +23e2%     +23 grpc_trace_error_refcount                                                                  0  [ = ]\n     +23e2%     +23 grpc_trace_fd_refcount                                                                     0  [ = ]\n     +23e2%     +23 grpc_trace_lb_policy_refcount                                                              0  [ = ]\n     +23e2%     +23 grpc_trace_metadata                                                                        0  [ = ]\n     +23e2%     +23 grpc_trace_pending_tags                                                                    0  [ = ]\n     +23e2%     +23 grpc_trace_pollable_refcount                                                               0  [ = ]\n     +23e2%     +23 grpc_trace_resolver_refcount                                                               0  [ = ]\n     +23e2%     +23 grpc_trace_security_connector_refcount                                                     0  [ = ]\n     +23e2%     +23 grpc_trace_stream_refcount                                                                 0  [ = ]\n  +5.2%    +299 src/core/ext/filters/client_channel/subchannel.cc                                       +299  +5.2%\n      [NEW]    +806 on_subchannel_connected                                                                 +806  [NEW]\n      [NEW]    +322 grpc_core::ConnectedSubchannel::CreateCall                                              +322  [NEW]\n      [NEW]    +268 on_connected_subchannel_connectivity_changed                                            +268  [NEW]\n      [NEW]     +77 grpc_core::ConnectedSubchannel::ConnectedSubchannel                                      +77  [NEW]\n      [NEW]     +76 grpc_core::ConnectedSubchannel::NotifyOnStateChange                                      +76  [NEW]\n      [NEW]     +73 grpc_core::ConnectedSubchannel::Ping                                                     +73  [NEW]\n      [NEW]     +41 grpc_connected_subchannel_unref                                                          +41  [NEW]\n      +9.3%     +23 [Unmapped]                                                                               +23  +9.3%\n      [NEW]     +23 grpc_core::ConnectedSubchannel::~ConnectedSubchannel                                     +23  [NEW]\n      [NEW]     +18 grpc_connected_subchannel_ref                                                            +18  [NEW]\n      [NEW]     +14 grpc_core::ConnectedSubchannel::~ConnectedSubchannel                                     +14  [NEW]\n      [NEW]      +9 grpc_core::RefCountedWithTracing::~RefCountedWithTracing                                  +9  [NEW]\n      +0.8%      +3 maybe_start_connecting_locked                                                             +3  +0.8%\n      [NEW]      +2 grpc_core::RefCountedWithTracing::~RefCountedWithTracing                                  +2  [NEW]\n  +1.6%    +105 src/core/lib/iomgr/error.cc                                                             +105  +1.6%\n      [NEW]    +103 _GLOBAL__sub_I_error.cc                                                                 +103  [NEW]\n      [NEW]      +2 grpc_core::DebugOnlyTraceFlag::~DebugOnlyTraceFlag                                        +2  [NEW]\n  +1.0%     +87 src/core/lib/surface/completion_queue.cc                                                 +87  +1.0%\n       +58%     +87 _GLOBAL__sub_I_completion_queue.cc                                                       +87   +58%\n  +1.4%     +80 src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc                 +80  +1.4%\n      [NEW]    +481 rr_shutdown_locked                                                                      +481  [NEW]\n      [NEW]    +363 rr_pick_locked                                                                          +363  [NEW]\n      [NEW]    +274 rr_cancel_pick_locked                                                                   +274  [NEW]\n      +3.0%     +52 rr_connectivity_changed_locked                                                           +52  +3.0%\n       +13%     +16 [Unmapped]                                                                               +16   +13%\n   +29%     +48 src/core/ext/filters/client_channel/resolver.cc                                          +48   +29%\n      [NEW]     +48 _GLOBAL__sub_I_resolver.cc                                                               +48  [NEW]\n  +0.4%     +48 src/core/lib/iomgr/ev_epollex_linux.cc                                                   +48  +0.4%\n      [NEW]    +193 pollset_kick_all(grpc_pollset*) [clone .isra.9]                                         +193  [NEW]\n      [NEW]     +48 _GLOBAL__sub_I_ev_epollex_linux.cc                                                       +48  [NEW]\n  +1.5%     +48 src/core/lib/security/context/security_context.cc                                        +48  +1.5%\n      [NEW]     +48 _GLOBAL__sub_I_security_context.cc                                                       +48  [NEW]\n  +0.5%     +48 src/core/lib/security/transport/security_connector.cc                                    +48  +0.5%\n      [NEW]    +537 fake_check_peer(grpc_security_connector*, tsi_peer, grpc_auth_context**, grpc_closur    +537  [NEW]\n      [NEW]    +404 ssl_check_peer(grpc_security_connector*, char const*, tsi_peer const*, grpc_auth_con    +404  [NEW]\n      [NEW]     +48 _GLOBAL__sub_I_security_connector.cc                                                     +48  [NEW]\n  +4.5%     +48 src/core/lib/surface/alarm.cc                                                            +48  +4.5%\n      [NEW]    +242 alarm_unref(grpc_alarm*) [clone .part.2]                                                +242  [NEW]\n      [NEW]     +48 _GLOBAL__sub_I_alarm.cc                                                                  +48  [NEW]\n  +1.4%     +48 src/core/lib/transport/metadata.cc                                                       +48  +1.4%\n      [NEW]     +48 _GLOBAL__sub_I_metadata.cc                                                               +48  [NEW]\n  +4.2%     +48 src/core/lib/transport/transport.cc                                                      +48  +4.2%\n      [NEW]     +48 _GLOBAL__sub_I_transport.cc                                                              +48  [NEW]\n  +0.1%     +46 src/core/ext/transport/chttp2/transport/chttp2_transport.cc                              +46  +0.1%\n       +96%     +46 _GLOBAL__sub_I_chttp2_transport.cc                                                       +46   +96%\n  +3.3%     +46 src/core/lib/iomgr/ev_posix.cc                                                           +46  +3.3%\n       +96%     +46 _GLOBAL__sub_I_ev_posix.cc                                                               +46   +96%\n\n -------------- SHRINKING                                                                            --------------\n  -6.3%    -944 src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.cc                          -944  -6.3%\n      [DEL] -1.57Ki rr_handover_locked(glb_lb_policy*) [clone .part.8]                                   -1.57Ki  [DEL]\n      [DEL] -1.36Ki query_for_backends_locked(glb_lb_policy*) [clone .part.11]                           -1.36Ki  [DEL]\n      [DEL]    -708 glb_pick_locked                                                                         -708  [DEL]\n      [DEL]    -693 pick_from_internal_rr_locked                                                            -693  [DEL]\n      [DEL]    -590 glb_shutdown_locked                                                                     -590  [DEL]\n      [DEL]    -433 wrapped_rr_closure                                                                      -433  [DEL]\n      [DEL]    -314 glb_cancel_pick_locked                                                                  -314  [DEL]\n      [DEL]    -150 add_pending_pick                                                                        -150  [DEL]\n     -55.4%    -134 glb_ping_one_locked                                                                     -134 -55.4%\n      [DEL]    -119 glb_rr_connectivity_changed_locked                                                      -119  [DEL]\n      [DEL]    -113 initial_metadata_add_lb_token                                                           -113  [DEL]\n     -11.7%     -48 [Unmapped]                                                                               -48 -11.7%\n  -0.8%    -112 src/core/ext/filters/client_channel/client_channel.cc                                   -112  -0.8%\n     -46.2%     -74 pick_callback_done_locked                                                                -74 -46.2%\n      -8.5%     -61 pick_callback_start_locked                                                               -61  -8.5%\n     -16.0%     -59 cc_destroy_call_elem                                                                     -59 -16.0%\n      -0.7%      -1 pick_callback_cancel_locked                                                               -1  -0.7%\n -15.0%     -96 src/core/ext/filters/client_channel/lb_policy.cc                                         -96 -15.0%\n      [DEL]     -60 grpc_lb_policy_weak_unref                                                                -60  [DEL]\n     -43.2%     -51 grpc_lb_policy_unref                                                                     -51 -43.2%\n     -13.1%     -19 [Unmapped]                                                                               -19 -13.1%\n      [DEL]     -19 shutdown_locked                                                                          -19  [DEL]\n      [DEL]      -7 grpc_lb_policy_weak_ref                                                                   -7  [DEL]\n      [DEL]      -6 grpc_lb_policy_pick_locked                                                                -6  [DEL]\n      [DEL]      -6 grpc_lb_policy_cancel_pick_locked                                                         -6  [DEL]\n     -10.0%      -1 grpc_lb_policy_ref                                                                        -1 -10.0%\n  -1.0%     -48 src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc                   -48  -1.0%\n      [DEL]    -393 pf_shutdown_locked                                                                      -393  [DEL]\n      [DEL]    -279 pf_cancel_pick_locked                                                                   -279  [DEL]\n      [DEL]    -143 pf_pick_locked                                                                          -143  [DEL]\n      -8.3%    -126 pf_connectivity_changed_locked                                                          -126  -8.3%\n\n  +0.2% +1.96Ki TOTAL                                                                                 +256Ki  +4.0%\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n\n -------------- SHRINKING                                                                            --------------\n  -2.1%    -739 src/cpp/server/server_cc.cc                                                             -739  -2.1%\n      [DEL] -2.54Ki grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>::RunHandler                 -2.54Ki  [DEL]\n      [DEL] -2.54Ki grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>::RunHandler                  -2.54Ki  [DEL]\n      [DEL] -2.06Ki grpc::Server::Server                                                                 -2.06Ki  [DEL]\n      [DEL] -1.41Ki grpc::Server::SyncRequestThreadManager::DoWork(void*, bool, bool) [clone .part.61]   -1.41Ki  [DEL]\n      [DEL]    -194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    -194  [DEL]\n      -7.1%     -80 grpc::Server::~Server                                                                    -80  -7.1%\n      [DEL]     -63 grpc::Server::SyncRequestThreadManager::DoWork                                           -63  [DEL]\n      -1.7%     -32 grpc::Server::Start                                                                      -32  -1.7%\n      [DEL]      -5 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>::~ErrorMethodHandler             -5  [DEL]\n      [DEL]      -5 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>::~ErrorMethodHandler              -5  [DEL]\n      [DEL]      -2 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>::~ErrorMethodHandler             -2  [DEL]\n      [DEL]      -2 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>::~ErrorMethodHandler              -2  [DEL]\n -11.5%    -532 src/cpp/server/dynamic_thread_pool.cc                                                   -532 -11.5%\n      [DEL] -1.22Ki grpc::DynamicThreadPool::DynamicThreadPool                                           -1.22Ki  [DEL]\n      [DEL]    -299 grpc::DynamicThreadPool::DynamicThread::DynamicThread                                   -299  [DEL]\n     -62.6%    -119 grpc::DynamicThreadPool::DynamicThread::~DynamicThread                                  -119 -62.6%\n     -19.6%     -69 grpc::DynamicThreadPool::Add                                                             -69 -19.6%\n     -10.2%     -56 grpc::DynamicThreadPool::~DynamicThreadPool                                              -56 -10.2%\n     -11.7%      -7 [Unmapped]                                                                                -7 -11.7%\n      [DEL]      -5 grpc::DynamicThreadPool::DynamicThread::DynamicThread(grpc::DynamicThreadPool*, bool      -5  [DEL]\n -15.7%    -444 src/cpp/thread_manager/thread_manager.cc                                                -444 -15.7%\n      [DEL]    -335 grpc::ThreadManager::ThreadManager                                                      -335  [DEL]\n      [DEL]    -296 grpc::ThreadManager::WorkerThread::WorkerThread                                         -296  [DEL]\n     -19.3%    -107 grpc::ThreadManager::MainWorkLoop                                                       -107 -19.3%\n     -46.0%    -104 grpc::ThreadManager::Initialize                                                         -104 -46.0%\n     -50.0%     -95 grpc::ThreadManager::WorkerThread::~WorkerThread                                         -95 -50.0%\n     -20.6%     -52 grpc::ThreadManager::~ThreadManager                                                      -52 -20.6%\n     -11.4%     -12 [Unmapped]                                                                               -12 -11.4%\n      [DEL]      -5 grpc::ThreadManager::WorkerThread::WorkerThread(grpc::ThreadManager*, bool*)::{lambd      -5  [DEL]\n  -3.9%    -383 src/cpp/server/server_builder.cc                                                        -383  -3.9%\n      -8.1%    -239 grpc::ServerBuilder::BuildAndStart                                                      -239  -8.1%\n      [DEL]    -194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    -194  [DEL]\n     -17.6%     -96 grpc::ServerBuilder::ServerBuilder                                                       -96 -17.6%\n      -7.1%     -48 grpc::ServerBuilder::~ServerBuilder                                                      -48  -7.1%\n -77.8%    -308 src/cpp/server/create_default_thread_pool.cc                                            -308 -77.8%\n     -75.9%    -176 grpc::(anonymous namespace)::CreateDefaultThreadPoolImpl                                -176 -75.9%\n      [DEL]     -46 std::_Function_base::_Base_manager<int (*)(unsigned long*, char const*, void (*)(voi     -46  [DEL]\n      [DEL]     -46 std::_Function_base::_Base_manager<void (*)(unsigned long)>::_M_manager                  -46  [DEL]\n      [DEL]     -32 std::_Function_handler<int (unsigned long*, char const*, void (*)(void*), void*, gpr     -32  [DEL]\n      [DEL]      -8 std::_Function_handler<void (unsigned long), void (*)(unsigned long)>::_M_invoke          -8  [DEL]\n  -0.8%     -64 src/cpp/client/secure_credentials.cc                                                     -64  -0.8%\n     -10.5%     -64 grpc::MetadataCredentialsPluginWrapper::GetMetadata                                      -64 -10.5%\n  -0.7%     -32 src/cpp/server/secure_server_credentials.cc                                              -32  -0.7%\n      -8.5%     -32 grpc::AuthMetadataProcessorAyncWrapper::Process                                          -32  -8.5%\n\n -+-+-+-+-+-+-+ MIXED                                                                                +-+-+-+-+-+-+-\n  -0.2%    -498 [None]                                                                               +27.5Ki  +0.6%\n      [NEW]    +109 typeinfo name for std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (grpc    +109  [NEW]\n      [NEW]    +104 typeinfo name for std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (grpc    +104  [NEW]\n      [NEW]     +40 vtable for grpc::internal::UnknownMethodHandler                                          +40  [NEW]\n      [NEW]     +40 vtable for std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (grpc::Threa     +40  [NEW]\n      [NEW]     +40 vtable for std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (grpc::Dynam     +40  [NEW]\n      [NEW]     +39 typeinfo name for grpc::internal::UnknownMethodHandler                                   +39  [NEW]\n      [NEW]     +24 typeinfo for grpc::internal::UnknownMethodHandler                                        +24  [NEW]\n      [NEW]     +24 typeinfo for std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (grpc::Thr     +24  [NEW]\n      [NEW]     +24 typeinfo for std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (grpc::Dyn     +24  [NEW]\n      [DEL]     -59 typeinfo name for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>               -59  [DEL]\n      [DEL]     -58 typeinfo name for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>                -58  [DEL]\n      [DEL]     -40 vtable for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>                      -40  [DEL]\n      [DEL]     -40 vtable for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>                       -40  [DEL]\n      [DEL]     -38 typeinfo name for int (*)                                                                -38  [DEL]\n      [DEL]     -37 typeinfo name for int                                                                    -37  [DEL]\n      [DEL]     -32 typeinfo for int (*)                                                                     -32  [DEL]\n      [DEL]     -32 typeinfo for void (*)                                                                    -32  [DEL]\n      [DEL]     -24 typeinfo for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>                    -24  [DEL]\n      [DEL]     -24 typeinfo for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>                     -24  [DEL]\n      [DEL]     -16 typeinfo for int                                                                         -16  [DEL]\n      [DEL]     -16 typeinfo for void                                                                        -16  [DEL]\n      [DEL]      -6 typeinfo name for void (*)                                                                -6  [DEL]\n      [DEL]      -5 typeinfo name for void                                                                    -5  [DEL]\n\n  -0.9% -2.93Ki TOTAL                                                                                +25.1Ki  +0.5%\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/357127841",
    "html_url": "https://github.com/grpc/grpc/pull/13932#issuecomment-357127841",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13932",
    "id": 357127841,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzEyNzg0MQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-12T02:46:49Z",
    "updated_at": "2018-01-12T02:46:49Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/357133357",
    "html_url": "https://github.com/grpc/grpc/pull/13932#issuecomment-357133357",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13932",
    "id": 357133357,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzEzMzM1Nw==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-12T03:27:26Z",
    "updated_at": "2018-01-12T03:27:26Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] Performance differences noted:\nBenchmark                                                       call_initial_size-median\n--------------------------------------------------------------  --------------------------\nBM_StreamingPingPong<MinTCP, NoOpMutator, NoOpMutator>/0/1      +8%\nBM_StreamingPingPong<MinTCP, NoOpMutator, NoOpMutator>/1/1      +8%\nBM_StreamingPingPong<MinTCP, NoOpMutator, NoOpMutator>/32768/1  +8%\nBM_StreamingPingPong<MinTCP, NoOpMutator, NoOpMutator>/4096/1   +8%\nBM_StreamingPingPong<MinTCP, NoOpMutator, NoOpMutator>/512/1    +8%\nBM_StreamingPingPong<MinTCP, NoOpMutator, NoOpMutator>/64/1     +8%\nBM_StreamingPingPong<MinTCP, NoOpMutator, NoOpMutator>/8/1      +8%\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/357321437",
    "html_url": "https://github.com/grpc/grpc/pull/13932#issuecomment-357321437",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13932",
    "id": 357321437,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzMyMTQzNw==",
    "user": {
      "login": "dgquintas",
      "id": 120217,
      "node_id": "MDQ6VXNlcjEyMDIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/120217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgquintas",
      "html_url": "https://github.com/dgquintas",
      "followers_url": "https://api.github.com/users/dgquintas/followers",
      "following_url": "https://api.github.com/users/dgquintas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgquintas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgquintas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgquintas/subscriptions",
      "organizations_url": "https://api.github.com/users/dgquintas/orgs",
      "repos_url": "https://api.github.com/users/dgquintas/repos",
      "events_url": "https://api.github.com/users/dgquintas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgquintas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-12T18:46:43Z",
    "updated_at": "2018-01-12T18:46:43Z",
    "author_association": "NONE",
    "body": "Note that I'll wait for your reinstatement of your LB refcount refactoring before merging this, as I already merged with it before it got rolled back in https://github.com/grpc/grpc/pull/13970"
  }
]
