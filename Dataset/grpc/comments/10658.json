[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/294108287",
    "html_url": "https://github.com/grpc/grpc/issues/10658#issuecomment-294108287",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10658",
    "id": 294108287,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDEwODI4Nw==",
    "user": {
      "login": "apolcyn",
      "id": 9566254,
      "node_id": "MDQ6VXNlcjk1NjYyNTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9566254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apolcyn",
      "html_url": "https://github.com/apolcyn",
      "followers_url": "https://api.github.com/users/apolcyn/followers",
      "following_url": "https://api.github.com/users/apolcyn/following{/other_user}",
      "gists_url": "https://api.github.com/users/apolcyn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apolcyn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apolcyn/subscriptions",
      "organizations_url": "https://api.github.com/users/apolcyn/orgs",
      "repos_url": "https://api.github.com/users/apolcyn/repos",
      "events_url": "https://api.github.com/users/apolcyn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apolcyn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-14T07:36:39Z",
    "updated_at": "2017-04-14T07:36:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "> with multiple unicorn processes\r\n\r\nCan you provide more info on this please? In particular, are there any GRPC objects being used across a fork? More info, and if possible any sort of repro would be helpful.\r\n\r\nThere were changes between 1.1.2 and 1.2.2 that I suspect this could be failing on."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/294115493",
    "html_url": "https://github.com/grpc/grpc/issues/10658#issuecomment-294115493",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10658",
    "id": 294115493,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDExNTQ5Mw==",
    "user": {
      "login": "stanhu",
      "id": 963826,
      "node_id": "MDQ6VXNlcjk2MzgyNg==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/963826?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stanhu",
      "html_url": "https://github.com/stanhu",
      "followers_url": "https://api.github.com/users/stanhu/followers",
      "following_url": "https://api.github.com/users/stanhu/following{/other_user}",
      "gists_url": "https://api.github.com/users/stanhu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stanhu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stanhu/subscriptions",
      "organizations_url": "https://api.github.com/users/stanhu/orgs",
      "repos_url": "https://api.github.com/users/stanhu/repos",
      "events_url": "https://api.github.com/users/stanhu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stanhu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-14T08:29:03Z",
    "updated_at": "2017-04-14T08:29:03Z",
    "author_association": "NONE",
    "body": "I'm still trying to reproduce it in a systematic way. Unicorn uses a [pre-forking model](https://thorstenball.com/blog/2014/11/20/unicorn-unix-magic-tricks/), and as far as I know, there are no GRPC objects being used across forks.\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/294123945",
    "html_url": "https://github.com/grpc/grpc/issues/10658#issuecomment-294123945",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10658",
    "id": 294123945,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDEyMzk0NQ==",
    "user": {
      "login": "stanhu",
      "id": 963826,
      "node_id": "MDQ6VXNlcjk2MzgyNg==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/963826?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stanhu",
      "html_url": "https://github.com/stanhu",
      "followers_url": "https://api.github.com/users/stanhu/followers",
      "following_url": "https://api.github.com/users/stanhu/following{/other_user}",
      "gists_url": "https://api.github.com/users/stanhu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stanhu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stanhu/subscriptions",
      "organizations_url": "https://api.github.com/users/stanhu/orgs",
      "repos_url": "https://api.github.com/users/stanhu/repos",
      "events_url": "https://api.github.com/users/stanhu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stanhu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-14T09:25:06Z",
    "updated_at": "2017-04-14T09:25:06Z",
    "author_association": "NONE",
    "body": "I'm not sure if this is related, but If I repeatedly make a GPRC call and unicorn attempts to kill the process, I get an ugly stack trace:\r\n\r\n```\r\nE, [2017-04-14T09:16:16.834106 #25558] ERROR -- : reaped #<Process::Status: pid 56018 SIGKILL (signal 9)> worker=4\r\nI, [2017-04-14T09:16:16.877144 #56340]  INFO -- : worker=4 ready\r\nE, [2017-04-14T09:16:31.855753 #25558] ERROR -- : worker=3 PID:56081 timeout (61s > 60s), killing\r\nE, [2017-04-14T09:16:31.860419 #25558] ERROR -- : reaped #<Process::Status: pid 56081 SIGKILL (signal 9)> worker=3\r\nI, [2017-04-14T09:16:31.901801 #56391]  INFO -- : worker=3 ready\r\nW, [2017-04-14T09:16:44.113019 #56102]  WARN -- : #<Unicorn::HttpServer:0x007fd245b49140>: worker (pid: 56102) exceeds memory limit (672429568.0 bytes > 671391185 bytes)\r\nW, [2017-04-14T09:16:44.113098 #56102]  WARN -- : Unicorn::WorkerKiller send SIGQUIT (pid: 56102) alive: 80 sec (trial 1)\r\nW, [2017-04-14T09:16:49.416207 #56340]  WARN -- : #<Unicorn::HttpServer:0x007fd245b49140>: worker (pid: 56340) exceeds memory limit (686516736.0 bytes > 663986651 bytes)\r\nW, [2017-04-14T09:16:49.416278 #56340]  WARN -- : Unicorn::WorkerKiller send SIGQUIT (pid: 56340) alive: 31 sec (trial 1)\r\nE, [2017-04-14T09:16:49.870039 #25558] ERROR -- : worker=1 PID:56216 timeout (61s > 60s), killing\r\nE, [2017-04-14T09:16:49.874355 #25558] ERROR -- : reaped #<Process::Status: pid 56216 SIGKILL (signal 9)> worker=1\r\nI, [2017-04-14T09:16:49.912602 #56457]  INFO -- : worker=1 ready\r\nW, [2017-04-14T09:17:13.427949 #56391]  WARN -- : #<Unicorn::HttpServer:0x007fd245b49140>: worker (pid: 56391) exceeds memory limit (654678528.0 bytes > 473916652 bytes)\r\nW, [2017-04-14T09:17:13.428020 #56391]  WARN -- : Unicorn::WorkerKiller send SIGQUIT (pid: 56391) alive: 41 sec (trial 1)\r\nE, [2017-04-14T09:17:44.888333 #25558] ERROR -- : worker=5 PID:56102 timeout (61s > 60s), killing\r\nE, [2017-04-14T09:17:44.893266 #25558] ERROR -- : reaped #<Process::Status: pid 56102 SIGKILL (signal 9)> worker=5\r\nI, [2017-04-14T09:17:44.932907 #56613]  INFO -- : worker=5 ready\r\nE, [2017-04-14T09:17:49.905391 #25558] ERROR -- : worker=4 PID:56340 timeout (61s > 60s), killing\r\nE, [2017-04-14T09:17:49.910287 #25558] ERROR -- : reaped #<Process::Status: pid 56340 SIGKILL (signal 9)> worker=4\r\nI, [2017-04-14T09:17:49.946452 #56639]  INFO -- : worker=4 ready\r\nW, [2017-04-14T09:17:58.703470 #56457]  WARN -- : #<Unicorn::HttpServer:0x007fd245b49140>: worker (pid: 56457) exceeds memory limit (658992640.0 bytes > 433380178 bytes)\r\nW, [2017-04-14T09:17:58.703555 #56457]  WARN -- : Unicorn::WorkerKiller send SIGQUIT (pid: 56457) alive: 66 sec (trial 1)\r\nW, [2017-04-14T09:18:01.545449 #56306]  WARN -- : #<Unicorn::HttpServer:0x007fd245b49140>: worker (pid: 56306) exceeds memory limit (678897664.0 bytes > 673689041 bytes)\r\nW, [2017-04-14T09:18:01.545518 #56306]  WARN -- : Unicorn::WorkerKiller send SIGQUIT (pid: 56306) alive: 110 sec (trial 1)\r\nW, [2017-04-14T09:18:01.804562 #56613]  WARN -- : #<Unicorn::HttpServer:0x007fd245b49140>: worker (pid: 56613) exceeds memory limit (659062272.0 bytes > 541390738 bytes)\r\nW, [2017-04-14T09:18:01.804639 #56613]  WARN -- : Unicorn::WorkerKiller send SIGQUIT (pid: 56613) alive: 13 sec (trial 1)\r\nE, [2017-04-14T09:18:13.940984 #25558] ERROR -- : worker=3 PID:56391 timeout (61s > 60s), killing\r\nE, [2017-04-14T09:18:13.945673 #25558] ERROR -- : reaped #<Process::Status: pid 56391 SIGKILL (signal 9)> worker=3\r\nI, [2017-04-14T09:18:13.985258 #56726]  INFO -- : worker=3 ready\r\nW, [2017-04-14T09:18:31.530840 #56639]  WARN -- : #<Unicorn::HttpServer:0x007fd245b49140>: worker (pid: 56639) exceeds memory limit (676726784.0 bytes > 674390499 bytes)\r\nW, [2017-04-14T09:18:31.530948 #56639]  WARN -- : Unicorn::WorkerKiller send SIGQUIT (pid: 56639) alive: 39 sec (trial 1)\r\nW, [2017-04-14T09:18:34.269500 #56726]  WARN -- : #<Unicorn::HttpServer:0x007fd245b49140>: worker (pid: 56726) exceeds memory limit (658094592.0 bytes > 560615737 bytes)\r\nW, [2017-04-14T09:18:34.269573 #56726]  WARN -- : Unicorn::WorkerKiller send SIGQUIT (pid: 56726) alive: 16 sec (trial 1)\r\nE0414 09:18:34.829494658   28928 ev_epoll_linux.c:1444]      pollset_kick: {\"created\":\"@1492161514.829444858\",\"description\":\"Kick Failure\",\"file\":\"src/core/lib/iomgr/ev_epoll_linux.c\",\"file_line\":324,\"referenced_errors\":[{\"created\":\"@1492161514.829433458\",\"description\":\"OS Error\",\"errno\":3,\"file\":\"src/core/lib/iomgr/ev_epoll_linux.c\",\"file_line\":1357,\"os_error\":\"No such process\",\"syscall\":\"pthread_kill\"}]}\r\nE0414 09:18:34.829533557   28928 completion_queue.c:267]     Kick failed: {\"created\":\"@1492161514.829444858\",\"description\":\"Kick Failure\",\"file\":\"src/core/lib/iomgr/ev_epoll_linux.c\",\"file_line\":324,\"referenced_errors\":[{\"created\":\"@1492161514.829433458\",\"description\":\"OS Error\",\"errno\":3,\"file\":\"src/core/lib/iomgr/ev_epoll_linux.c\",\"file_line\":1357,\"os_error\":\"No such process\",\"syscall\":\"pthread_kill\"}]}\r\n/opt/gitlab/embedded/service/gitlab-rails/lib/gitlab/metrics/sampler.rb:34: [BUG] Segmentation fault at 0x00000000000000\r\nruby 2.3.3p222 (2016-11-21 revision 56859) [x86_64-linux]\r\n\r\n-- Control frame information -----------------------------------------------\r\nc:0005 p:---- s:0013 e:000012 CFUNC  :sleep\r\nc:0004 p:0012 s:0009 e:000008 BLOCK  /opt/gitlab/embedded/service/gitlab-rails/lib/gitlab/metrics/sampler.rb:34 [FINISH]\r\nc:0003 p:---- s:0007 e:000006 CFUNC  :loop\r\nc:0002 p:0027 s:0004 e:000003 BLOCK  /opt/gitlab/embedded/service/gitlab-rails/lib/gitlab/metrics/sampler.rb:33 [FINISH]\r\nc:0001 p:---- s:0002 e:000001 (none) [FINISH]\r\n\r\n-- Ruby level backtrace information ----------------------------------------\r\n/opt/gitlab/embedded/service/gitlab-rails/lib/gitlab/metrics/sampler.rb:33:in `block in start'\r\n/opt/gitlab/embedded/service/gitlab-rails/lib/gitlab/metrics/sampler.rb:33:in `loop'\r\n/opt/gitlab/embedded/service/gitlab-rails/lib/gitlab/metrics/sampler.rb:34:in `block (2 levels) in start'\r\n/opt/gitlab/embedded/service/gitlab-rails/lib/gitlab/metrics/sampler.rb:34:in `sleep'\r\n\r\n-- Machine register context ------------------------------------------------\r\n RIP: 0x00007fd22fa2c7b5 RBP: 0x00007fd22fdd3838 RSP: 0x00007fd24c800488\r\n RAX: 0x7260002774726174 RBX: 0x00007fd227b92860 RCX: 0x7260002774726174\r\n RDX: 0x0000000000000000 RDI: 0x00007fd24c800b40 RSI: 0x7260002774726174\r\n  R8: 0x00007fd22f41a008  R9: 0x0000000000000004 R10: 0x0000000000000009\r\n R11: 0x0000000000000000 R12: 0x00007fd24c8005a4 R13: 0x00007fd24c8005b0\r\n R14: 0x00007fd22f41d0d0 R15: 0x0000000000000000 EFL: 0x0000000000010206\r\n\r\n-- C level backtrace information -------------------------------------------\r\n/opt/gitlab/embedded/lib/libruby.so.2.3(rb_vm_bugreport+0x4f3) [0x7fd24c0ab633] vm_dump.c:692\r\n/opt/gitlab/embedded/lib/libruby.so.2.3(rb_bug_context+0xd4) [0x7fd24bf3c014] error.c:435\r\n/opt/gitlab/embedded/lib/libruby.so.2.3(sigsegv+0x3e) [0x7fd24c019b5e] signal.c:890\r\n/lib/x86_64-linux-gnu/libc.so.6 [0x7fd24bb2b4b0]\r\n/opt/gitlab/embedded/lib/ruby/gems/2.3.0/gems/grpc-1.2.2-x86_64-linux/src/ruby/lib/grpc/2.3/grpc_c.so(grpc_closure_sched+0x5) [0x7fd22fa2c7b5]\r\n/opt/gitlab/embedded/lib/ruby/gems/2.3.0/gems/grpc-1.2.2-x86_64-linux/src/ruby/lib/grpc/2.3/grpc_c.so [0x7fd22fa9624b]\r\n/opt/gitlab/embedded/lib/ruby/gems/2.3.0/gems/grpc-1.2.2-x86_64-linux/src/ruby/lib/grpc/2.3/grpc_c.so [0x7fd22fa969dc]\r\n/opt/gitlab/embedded/lib/ruby/gems/2.3.0/gems/grpc-1.2.2-x86_64-linux/src/ruby/lib/grpc/2.3/grpc_c.so(grpc_completion_queue_next+0x1f1) [0x7fd22fa3c411]\r\n/opt/gitlab/embedded/lib/ruby/gems/2.3.0/gems/grpc-1.2.2-x86_64-linux/src/ruby/lib/grpc/2.3/grpc_c.so [0x7fd22fa25a7b]\r\n/opt/gitlab/embedded/lib/libruby.so.2.3(rb_thread_call_without_gvl+0x45) [0x7fd24c0bbe05] thread.c:1289\r\n/opt/gitlab/embedded/lib/ruby/gems/2.3.0/gems/grpc-1.2.2-x86_64-linux/src/ruby/lib/grpc/2.3/grpc_c.so [0x7fd22fa255e3]\r\n/opt/gitlab/embedded/lib/libruby.so.2.3(thread_start_func_2+0x1b1) [0x7fd24c0b8b01] thread.c:584\r\n/opt/gitlab/embedded/lib/libruby.so.2.3(thread_start_func_1+0xd0) [0x7fd24c0b9580] thread_pthread.c:882\r\n/lib/x86_64-linux-gnu/libpthread.so.0(start_thread+0xca) [0x7fd24b8e06ba]\r\n/lib/x86_64-linux-gnu/libc.so.6(clone+0x6d) [0x7fd24bbfc82d] ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\r\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/294176471",
    "html_url": "https://github.com/grpc/grpc/issues/10658#issuecomment-294176471",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10658",
    "id": 294176471,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDE3NjQ3MQ==",
    "user": {
      "login": "apolcyn",
      "id": 9566254,
      "node_id": "MDQ6VXNlcjk1NjYyNTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9566254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apolcyn",
      "html_url": "https://github.com/apolcyn",
      "followers_url": "https://api.github.com/users/apolcyn/followers",
      "following_url": "https://api.github.com/users/apolcyn/following{/other_user}",
      "gists_url": "https://api.github.com/users/apolcyn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apolcyn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apolcyn/subscriptions",
      "organizations_url": "https://api.github.com/users/apolcyn/orgs",
      "repos_url": "https://api.github.com/users/apolcyn/repos",
      "events_url": "https://api.github.com/users/apolcyn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apolcyn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-14T15:40:58Z",
    "updated_at": "2017-04-14T15:40:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "@sanhu does the above happen when making calls across different client stubs, as opposed the same one?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/294220870",
    "html_url": "https://github.com/grpc/grpc/issues/10658#issuecomment-294220870",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10658",
    "id": 294220870,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDIyMDg3MA==",
    "user": {
      "login": "apolcyn",
      "id": 9566254,
      "node_id": "MDQ6VXNlcjk1NjYyNTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9566254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apolcyn",
      "html_url": "https://github.com/apolcyn",
      "followers_url": "https://api.github.com/users/apolcyn/followers",
      "following_url": "https://api.github.com/users/apolcyn/following{/other_user}",
      "gists_url": "https://api.github.com/users/apolcyn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apolcyn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apolcyn/subscriptions",
      "organizations_url": "https://api.github.com/users/apolcyn/orgs",
      "repos_url": "https://api.github.com/users/apolcyn/repos",
      "events_url": "https://api.github.com/users/apolcyn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apolcyn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-14T19:34:38Z",
    "updated_at": "2017-04-14T23:08:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "@stanhu 1.2.2 introduced a background thread that's involved with the life cycles of grpc channel objects (used by stubs),  it's currently getting started upon a `require grpc`. It looks like what's breaking down right now is this background thread is starting before the fork, but then it's not present in the child post-fork.\r\n\r\nso e.g., while below snippet would previously terminate, it's now hanging:\r\n\r\n```\r\nrequire 'grpc'\r\nrequire 'helloworld_services_pb'\r\n\r\ndef run\r\n   stub = Helloworld::Greeter::Stub.new('localhost:50051', :this_channel_is_insecure)\r\n   user = ARGV.size > 0 ?  ARGV[0] : 'world'\r\n   message = stub.say_hello(Helloworld::HelloRequest.new(name: user)).message\r\n   p \"Greeting: #{message}\"\r\nend\r\n\r\ndef main\r\n  p = fork { run }\r\n  Process.wait(p)\r\nend\r\n \r\nmain\r\n```\r\n\r\nis now hanging"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/294279033",
    "html_url": "https://github.com/grpc/grpc/issues/10658#issuecomment-294279033",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10658",
    "id": 294279033,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDI3OTAzMw==",
    "user": {
      "login": "godfat",
      "id": 10416,
      "node_id": "MDQ6VXNlcjEwNDE2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10416?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/godfat",
      "html_url": "https://github.com/godfat",
      "followers_url": "https://api.github.com/users/godfat/followers",
      "following_url": "https://api.github.com/users/godfat/following{/other_user}",
      "gists_url": "https://api.github.com/users/godfat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/godfat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/godfat/subscriptions",
      "organizations_url": "https://api.github.com/users/godfat/orgs",
      "repos_url": "https://api.github.com/users/godfat/repos",
      "events_url": "https://api.github.com/users/godfat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/godfat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-15T08:03:58Z",
    "updated_at": "2017-04-15T08:03:58Z",
    "author_association": "NONE",
    "body": "@stanhu Sorry I didn't check this, but do we use `preload_app` in Unicorn configuration? If so, we could indeed `require 'grpc'` before forking. What it does is trying to load the application in master process, and then fork so that it utilizes COW for workers. Though this still depends on how we load grpc because we might not require it when the application loads (however I think we should, so I think this is very likely the issue)"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/294732331",
    "html_url": "https://github.com/grpc/grpc/issues/10658#issuecomment-294732331",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10658",
    "id": 294732331,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDczMjMzMQ==",
    "user": {
      "login": "jacobvosmaer",
      "id": 1336311,
      "node_id": "MDQ6VXNlcjEzMzYzMTE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1336311?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacobvosmaer",
      "html_url": "https://github.com/jacobvosmaer",
      "followers_url": "https://api.github.com/users/jacobvosmaer/followers",
      "following_url": "https://api.github.com/users/jacobvosmaer/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacobvosmaer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacobvosmaer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacobvosmaer/subscriptions",
      "organizations_url": "https://api.github.com/users/jacobvosmaer/orgs",
      "repos_url": "https://api.github.com/users/jacobvosmaer/repos",
      "events_url": "https://api.github.com/users/jacobvosmaer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacobvosmaer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-18T08:43:09Z",
    "updated_at": "2017-04-18T08:59:56Z",
    "author_association": "NONE",
    "body": "Unicorn has an `after_fork` hook. Sounds like we want to `require 'grpc'` in that hook maybe.\r\n\r\nEdit: or maybe that won't do anything because `require` avoids loading code twice, so it might be a no-op in the forked process."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/294746282",
    "html_url": "https://github.com/grpc/grpc/issues/10658#issuecomment-294746282",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10658",
    "id": 294746282,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDc0NjI4Mg==",
    "user": {
      "login": "jacobvosmaer",
      "id": 1336311,
      "node_id": "MDQ6VXNlcjEzMzYzMTE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1336311?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacobvosmaer",
      "html_url": "https://github.com/jacobvosmaer",
      "followers_url": "https://api.github.com/users/jacobvosmaer/followers",
      "following_url": "https://api.github.com/users/jacobvosmaer/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacobvosmaer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacobvosmaer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacobvosmaer/subscriptions",
      "organizations_url": "https://api.github.com/users/jacobvosmaer/orgs",
      "repos_url": "https://api.github.com/users/jacobvosmaer/repos",
      "events_url": "https://api.github.com/users/jacobvosmaer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacobvosmaer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-18T09:32:26Z",
    "updated_at": "2017-04-18T09:32:26Z",
    "author_association": "NONE",
    "body": "@apolcyn Would it make sense, in addition to the delayed initialization of the background thread introduced in #10670, to also have an explicit way to perform this initialization?\r\n\r\nIt's nice that the library will be doing the right thing automatically most of the time, but without an explicit 'GRPC.after_fork!' method call it is harder to defend against this mistake (failing to initializing a background thread in a fork) sneaking back into the code.\r\n\r\nFor example, in GitLab we currently have a way of doing things where we initialize certain global variables while loading the application, so before forking. This is because we use a dual concurrency model: pre-forking for web requests, and multi-threading for background jobs. Initializing globals while loading the app is a trick we use for the multi-threaded mode.\r\n\r\nThis means we also call `GRPC::Core::Channel.new` before forking. Does that ruin the fix in #10670? If we had an explicit `GRPC.after_fork!` (or something like it) I would not have to ask the question."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/294894548",
    "html_url": "https://github.com/grpc/grpc/issues/10658#issuecomment-294894548",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10658",
    "id": 294894548,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDg5NDU0OA==",
    "user": {
      "login": "apolcyn",
      "id": 9566254,
      "node_id": "MDQ6VXNlcjk1NjYyNTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9566254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apolcyn",
      "html_url": "https://github.com/apolcyn",
      "followers_url": "https://api.github.com/users/apolcyn/followers",
      "following_url": "https://api.github.com/users/apolcyn/following{/other_user}",
      "gists_url": "https://api.github.com/users/apolcyn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apolcyn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apolcyn/subscriptions",
      "organizations_url": "https://api.github.com/users/apolcyn/orgs",
      "repos_url": "https://api.github.com/users/apolcyn/repos",
      "events_url": "https://api.github.com/users/apolcyn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apolcyn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-18T16:09:10Z",
    "updated_at": "2017-04-18T16:09:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "> we also call GRPC::Core::Channel.new before forking.\r\n\r\nyes unfortunately things will still break in this case. Currently, the `require grpc` needs to be after a fork, and after #10670 the first object init needs to be after a fork.\r\n\r\nNot only the background threads that grpc-ruby is launching but also the c-library that grpc-ruby is wrapping isn't able to support that `GRPC.after_fork!` call - AFAIK there's unfortunately not a lot that can be done for to support something like a `GRPC.after_fork`  right now."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/294902176",
    "html_url": "https://github.com/grpc/grpc/issues/10658#issuecomment-294902176",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10658",
    "id": 294902176,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDkwMjE3Ng==",
    "user": {
      "login": "jacobvosmaer",
      "id": 1336311,
      "node_id": "MDQ6VXNlcjEzMzYzMTE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1336311?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacobvosmaer",
      "html_url": "https://github.com/jacobvosmaer",
      "followers_url": "https://api.github.com/users/jacobvosmaer/followers",
      "following_url": "https://api.github.com/users/jacobvosmaer/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacobvosmaer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacobvosmaer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacobvosmaer/subscriptions",
      "organizations_url": "https://api.github.com/users/jacobvosmaer/orgs",
      "repos_url": "https://api.github.com/users/jacobvosmaer/repos",
      "events_url": "https://api.github.com/users/jacobvosmaer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacobvosmaer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-18T16:32:14Z",
    "updated_at": "2017-04-18T16:32:14Z",
    "author_association": "NONE",
    "body": "@apolcyn OK. One option we have is to write application tests much like those in #10670, asserting that\r\n\r\n- grpc works in the forked Ruby process\r\n- the forked Ruby process can shut down without trouble\r\n\r\nAnd then make whatever subtle changes to the way we load grpc are necessary until those tests pass. That is not something that would scale well to other users of Unicorn though.\r\n\r\nAnother question: if I load+initialize the grpc gem, then fork, then `load 'grpc'`: will that correctly re-initalize whatever needs to be re-initialized?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/294906758",
    "html_url": "https://github.com/grpc/grpc/issues/10658#issuecomment-294906758",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10658",
    "id": 294906758,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDkwNjc1OA==",
    "user": {
      "login": "apolcyn",
      "id": 9566254,
      "node_id": "MDQ6VXNlcjk1NjYyNTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9566254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apolcyn",
      "html_url": "https://github.com/apolcyn",
      "followers_url": "https://api.github.com/users/apolcyn/followers",
      "following_url": "https://api.github.com/users/apolcyn/following{/other_user}",
      "gists_url": "https://api.github.com/users/apolcyn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apolcyn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apolcyn/subscriptions",
      "organizations_url": "https://api.github.com/users/apolcyn/orgs",
      "repos_url": "https://api.github.com/users/apolcyn/repos",
      "events_url": "https://api.github.com/users/apolcyn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apolcyn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-18T16:47:33Z",
    "updated_at": "2017-04-18T16:47:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Unfortunately there's not a good way to handle forking like this at the moment, that I'm aware of.\r\n\r\n> if I load+initialize the grpc gem, then fork, then load 'grpc': will that correctly re-initalize whatever needs to be re-initialized?\r\n\r\nNo, it needs to be initialiazed for the first time in the child process, there's no way right now to \"reset\" the library cleanly after a fork."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/294922488",
    "html_url": "https://github.com/grpc/grpc/issues/10658#issuecomment-294922488",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10658",
    "id": 294922488,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDkyMjQ4OA==",
    "user": {
      "login": "bmclean",
      "id": 622145,
      "node_id": "MDQ6VXNlcjYyMjE0NQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/622145?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bmclean",
      "html_url": "https://github.com/bmclean",
      "followers_url": "https://api.github.com/users/bmclean/followers",
      "following_url": "https://api.github.com/users/bmclean/following{/other_user}",
      "gists_url": "https://api.github.com/users/bmclean/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bmclean/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bmclean/subscriptions",
      "organizations_url": "https://api.github.com/users/bmclean/orgs",
      "repos_url": "https://api.github.com/users/bmclean/repos",
      "events_url": "https://api.github.com/users/bmclean/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bmclean/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-18T17:38:13Z",
    "updated_at": "2017-04-18T17:41:51Z",
    "author_association": "NONE",
    "body": "We went through something similar with Puma in https://github.com/grpc/grpc/issues/6577 and @blowmage created https://github.com/grpc/grpc/issues/8798 regarding a low level reset."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/295242569",
    "html_url": "https://github.com/grpc/grpc/issues/10658#issuecomment-295242569",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10658",
    "id": 295242569,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NTI0MjU2OQ==",
    "user": {
      "login": "jacobvosmaer",
      "id": 1336311,
      "node_id": "MDQ6VXNlcjEzMzYzMTE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1336311?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacobvosmaer",
      "html_url": "https://github.com/jacobvosmaer",
      "followers_url": "https://api.github.com/users/jacobvosmaer/followers",
      "following_url": "https://api.github.com/users/jacobvosmaer/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacobvosmaer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacobvosmaer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacobvosmaer/subscriptions",
      "organizations_url": "https://api.github.com/users/jacobvosmaer/orgs",
      "repos_url": "https://api.github.com/users/jacobvosmaer/repos",
      "events_url": "https://api.github.com/users/jacobvosmaer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacobvosmaer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-19T12:08:41Z",
    "updated_at": "2017-04-19T12:08:41Z",
    "author_association": "NONE",
    "body": "Thanks @bmclean ! From the looks of it neither of those issues is resolved either."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/302781172",
    "html_url": "https://github.com/grpc/grpc/issues/10658#issuecomment-302781172",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10658",
    "id": 302781172,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjc4MTE3Mg==",
    "user": {
      "login": "apolcyn",
      "id": 9566254,
      "node_id": "MDQ6VXNlcjk1NjYyNTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9566254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apolcyn",
      "html_url": "https://github.com/apolcyn",
      "followers_url": "https://api.github.com/users/apolcyn/followers",
      "following_url": "https://api.github.com/users/apolcyn/following{/other_user}",
      "gists_url": "https://api.github.com/users/apolcyn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apolcyn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apolcyn/subscriptions",
      "organizations_url": "https://api.github.com/users/apolcyn/orgs",
      "repos_url": "https://api.github.com/users/apolcyn/repos",
      "events_url": "https://api.github.com/users/apolcyn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apolcyn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-19T18:44:36Z",
    "updated_at": "2017-05-19T18:44:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "The latest 1.3.4 release fixes the issue in which the finalizer of a \"channel object\" created after a fork hangs.\r\n\r\nThe general problems with forking mentioned here should be due to general lack of forking support.\r\nClosing this now, as there's more forking support discussion in https://github.com/grpc/grpc/issues/8798"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/302853847",
    "html_url": "https://github.com/grpc/grpc/issues/10658#issuecomment-302853847",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10658",
    "id": 302853847,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjg1Mzg0Nw==",
    "user": {
      "login": "honglyua",
      "id": 12122851,
      "node_id": "MDQ6VXNlcjEyMTIyODUx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12122851?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/honglyua",
      "html_url": "https://github.com/honglyua",
      "followers_url": "https://api.github.com/users/honglyua/followers",
      "following_url": "https://api.github.com/users/honglyua/following{/other_user}",
      "gists_url": "https://api.github.com/users/honglyua/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/honglyua/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/honglyua/subscriptions",
      "organizations_url": "https://api.github.com/users/honglyua/orgs",
      "repos_url": "https://api.github.com/users/honglyua/repos",
      "events_url": "https://api.github.com/users/honglyua/events{/privacy}",
      "received_events_url": "https://api.github.com/users/honglyua/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-20T06:13:32Z",
    "updated_at": "2017-05-20T06:13:32Z",
    "author_association": "NONE",
    "body": "@apolcyn I have updated to the latest 1.3.4, but still has this problem:\r\n\r\n```\r\n/home/git/gitlab/lib/gitlab/metrics/sampler.rb:34: [BUG] Segmentation fault at 0x007f4ae4000c28\r\nruby 2.3.3p222 (2016-11-21 revision 56859) [x86_64-linux]\r\n\r\n-- Control frame information -----------------------------------------------\r\nc:0005 p:---- s:0013 e:000012 CFUNC  :sleep\r\nc:0004 p:0012 s:0009 e:000008 BLOCK  /home/git/gitlab/lib/gitlab/metrics/sampler.rb:34 [FINISH]\r\nc:0003 p:---- s:0007 e:000006 CFUNC  :loop\r\nc:0002 p:0027 s:0004 e:000003 BLOCK  /home/git/gitlab/lib/gitlab/metrics/sampler.rb:33 [FINISH]\r\nc:0001 p:---- s:0002 e:000001 (none) [FINISH]\r\n\r\n-- Ruby level backtrace information ----------------------------------------\r\n/home/git/gitlab/lib/gitlab/metrics/sampler.rb:33:in `block in start'\r\n/home/git/gitlab/lib/gitlab/metrics/sampler.rb:33:in `loop'\r\n/home/git/gitlab/lib/gitlab/metrics/sampler.rb:34:in `block (2 levels) in start'\r\n/home/git/gitlab/lib/gitlab/metrics/sampler.rb:34:in `sleep'\r\n...\r\nE0520 12:52:45.095692496  222864 ev_epoll_linux.c:1225]      pollset_kick: {\"created\":\"@1495255965.095648351\",\"description\":\"Kick Failure\",\"file\":\"src/core/lib/iomgr/ev_epoll_linux.c\",\"file_line\":280,\"referenced_errors\":[{\"created\":\"@1495255965.095628192\",\"description\":\"OS Error\",\"errno\":3,\"file\":\"src/core/lib/iomgr/ev_epoll_linux.c\",\"file_line\":1138,\"os_error\":\"No such process\",\"syscall\":\"pthread_kill\"}]}\r\nE0520 12:52:45.095770243  222864 completion_queue.c:267]     Kick failed: {\"created\":\"@1495255965.095648351\",\"description\":\"Kick Failure\",\"file\":\"src/core/lib/iomgr/ev_epoll_linux.c\",\"file_line\":280,\"referenced_errors\":[{\"created\":\"@1495255965.095628192\",\"description\":\"OS Error\",\"errno\":3,\"file\":\"src/core/lib/iomgr/ev_epoll_linux.c\",\"file_line\":1138,\"os_error\":\"No such process\",\"syscall\":\"pthread_kill\"}]}\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/313568187",
    "html_url": "https://github.com/grpc/grpc/issues/10658#issuecomment-313568187",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10658",
    "id": 313568187,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzU2ODE4Nw==",
    "user": {
      "login": "chrisboulton",
      "id": 98472,
      "node_id": "MDQ6VXNlcjk4NDcy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/98472?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chrisboulton",
      "html_url": "https://github.com/chrisboulton",
      "followers_url": "https://api.github.com/users/chrisboulton/followers",
      "following_url": "https://api.github.com/users/chrisboulton/following{/other_user}",
      "gists_url": "https://api.github.com/users/chrisboulton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chrisboulton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chrisboulton/subscriptions",
      "organizations_url": "https://api.github.com/users/chrisboulton/orgs",
      "repos_url": "https://api.github.com/users/chrisboulton/repos",
      "events_url": "https://api.github.com/users/chrisboulton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chrisboulton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-07T02:10:02Z",
    "updated_at": "2017-07-07T02:11:18Z",
    "author_association": "NONE",
    "body": "fwiw, we're experiencing similar problems with 1.4.0, however with the PHP extension running under PHP-FPM. Seems to be getting stuck in the exact same place as the original report:\r\n\r\n(PHP-FPM being a forking process manager for PHP)\r\n\r\n```\r\n(gdb) bt\r\n#0  pthread_cond_wait@@GLIBC_2.3.2 () at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n#1  0x00007fa863ea1b9a in gpr_cv_wait () from /usr/lib/php/20151012/grpc.so\r\n#2  0x00007fa863ecf0d3 in stop_threads () from /usr/lib/php/20151012/grpc.so\r\n#3  0x00007fa863ecf132 in grpc_timer_manager_shutdown () from /usr/lib/php/20151012/grpc.so\r\n#4  0x00007fa863ec1e98 in grpc_iomgr_shutdown () from /usr/lib/php/20151012/grpc.so\r\n#5  0x00007fa863ea340b in grpc_shutdown () from /usr/lib/php/20151012/grpc.so\r\n#6  0x00007fa863e9a3a7 in zm_shutdown_grpc () from /usr/lib/php/20151012/grpc.so\r\n#7  0x000056471ab96207 in module_destructor (module=module@entry=0x56471c4110e0) at /usr/src/builddir/Zend/zend_API.c:2503\r\n#8  0x000056471ab8e2cc in module_destructor_zval (zv=<optimized out>) at /usr/src/builddir/Zend/zend.c:620\r\n#9  0x000056471aba1659 in _zend_hash_del_el_ex (prev=<optimized out>, p=<optimized out>, idx=<optimized out>, ht=<optimized out>) at /usr/src/builddir/Zend/zend_hash.c:1026\r\n#10 _zend_hash_del_el (p=0x56471c4af220, idx=28, ht=0x56471b039d60 <module_registry>) at /usr/src/builddir/Zend/zend_hash.c:1050\r\n#11 zend_hash_graceful_reverse_destroy (ht=ht@entry=0x56471b039d60 <module_registry>) at /usr/src/builddir/Zend/zend_hash.c:1506\r\n#12 0x000056471ab9462c in zend_destroy_modules () at /usr/src/builddir/Zend/zend_API.c:1982\r\n#13 0x000056471ab8f365 in zend_shutdown () at /usr/src/builddir/Zend/zend.c:856\r\n#14 0x000056471ab2e79b in php_module_shutdown () at /usr/src/builddir/main/main.c:2360\r\n#15 0x000056471aa13c85 in main (argc=475908082, argv=0x56471c5dc799) at /usr/src/builddir/sapi/fpm/fpm/fpm_main.c:2021\r\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/319203457",
    "html_url": "https://github.com/grpc/grpc/issues/10658#issuecomment-319203457",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10658",
    "id": 319203457,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTIwMzQ1Nw==",
    "user": {
      "login": "wenbozhu",
      "id": 1471472,
      "node_id": "MDQ6VXNlcjE0NzE0NzI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1471472?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wenbozhu",
      "html_url": "https://github.com/wenbozhu",
      "followers_url": "https://api.github.com/users/wenbozhu/followers",
      "following_url": "https://api.github.com/users/wenbozhu/following{/other_user}",
      "gists_url": "https://api.github.com/users/wenbozhu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wenbozhu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wenbozhu/subscriptions",
      "organizations_url": "https://api.github.com/users/wenbozhu/orgs",
      "repos_url": "https://api.github.com/users/wenbozhu/repos",
      "events_url": "https://api.github.com/users/wenbozhu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wenbozhu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-31T21:35:19Z",
    "updated_at": "2017-07-31T21:35:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "@stanley-cheung "
  }
]
