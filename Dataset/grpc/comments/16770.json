[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/426676587",
    "html_url": "https://github.com/grpc/grpc/pull/16770#issuecomment-426676587",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16770",
    "id": 426676587,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjY3NjU4Nw==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-03T15:18:22Z",
    "updated_at": "2018-10-03T15:18:22Z",
    "author_association": "MEMBER",
    "body": "I am not entirely sure that it makes sense for us to support this feature.  I'd like to understand more about the use-case here.  I'd also like input from @vjpai about whether this makes sense.\r\n\r\nIf we do decide to support this, I don't think it makes sense to plumb the channel args into the iomgr resolver API.  I can think of two possible alternatives:\r\n\r\n1. Instead of passing channel args into the iomgr resolver API, just pass a bool (or maybe a bitmask) indicating that we only want IPv4 addresses.\r\n2. Instead of making the resolver aware of what type of addresses we want, we could just add some code on the server side to filter the resuling addresses returned by the resolver.  (This means doing some unnecessary work to look up IPv6 addresses that we won't actually use, but it's a less invasive code change.)"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/426917677",
    "html_url": "https://github.com/grpc/grpc/pull/16770#issuecomment-426917677",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16770",
    "id": 426917677,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjkxNzY3Nw==",
    "user": {
      "login": "ikishchenko",
      "id": 43782721,
      "node_id": "MDQ6VXNlcjQzNzgyNzIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/43782721?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ikishchenko",
      "html_url": "https://github.com/ikishchenko",
      "followers_url": "https://api.github.com/users/ikishchenko/followers",
      "following_url": "https://api.github.com/users/ikishchenko/following{/other_user}",
      "gists_url": "https://api.github.com/users/ikishchenko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ikishchenko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ikishchenko/subscriptions",
      "organizations_url": "https://api.github.com/users/ikishchenko/orgs",
      "repos_url": "https://api.github.com/users/ikishchenko/repos",
      "events_url": "https://api.github.com/users/ikishchenko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ikishchenko/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-04T07:43:48Z",
    "updated_at": "2018-10-04T07:43:48Z",
    "author_association": "NONE",
    "body": "@markdroth, building of the infrastructure for IPv6 in many places still in progress. \r\nOur customers don't want us to utilize IPv6 interface since it's still not ready for production usage. \r\nWe also believe that we need to disable IPv6 both on the server side and on the client side because:\r\n* resolver works in the same way for the server and for the client, and there is no point in adding extra checks.\r\n* we do not want to spend time for resolve IPv6 address every time when connect to the server without IPv6.\r\n\r\nSure we would keep the option for future use."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/427053608",
    "html_url": "https://github.com/grpc/grpc/pull/16770#issuecomment-427053608",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16770",
    "id": 427053608,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzA1MzYwOA==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-04T15:03:33Z",
    "updated_at": "2018-10-04T15:03:33Z",
    "author_association": "MEMBER",
    "body": "I'd also like input from @pmarks-net on this.  Is there a better way to accomplish this?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/428726985",
    "html_url": "https://github.com/grpc/grpc/pull/16770#issuecomment-428726985",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16770",
    "id": 428726985,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODcyNjk4NQ==",
    "user": {
      "login": "pmarks-net",
      "id": 4578188,
      "node_id": "MDQ6VXNlcjQ1NzgxODg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4578188?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pmarks-net",
      "html_url": "https://github.com/pmarks-net",
      "followers_url": "https://api.github.com/users/pmarks-net/followers",
      "following_url": "https://api.github.com/users/pmarks-net/following{/other_user}",
      "gists_url": "https://api.github.com/users/pmarks-net/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pmarks-net/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pmarks-net/subscriptions",
      "organizations_url": "https://api.github.com/users/pmarks-net/orgs",
      "repos_url": "https://api.github.com/users/pmarks-net/repos",
      "events_url": "https://api.github.com/users/pmarks-net/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pmarks-net/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-10T20:50:49Z",
    "updated_at": "2018-10-10T20:50:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "What do you mean by \"machine without reachable IPv4 network protocol\"?  Starting an `AF_INET` or `AF_INET6` server shouldn't depend on network reachability, just whether the kernel implements those protocols.\r\n\r\nClients should follow [RFC 6724](https://tools.ietf.org/html/rfc6724), where the simplest way to prevent IPv6 communication is to not provide an IPv6 default route.  Clients using `getaddrinfo()` can also control IPv4/IPv6 preference using `/etc/gai.conf` (If gRPC contains a resolver that doesn't follow `/etc/gai.conf`, then fixing that would be reasonable.)\r\n\r\nDisabling `AAAA` lookups is an ugly hack, because it gives the RFC6724 implementation an incomplete view of the server's address records."
  }
]
