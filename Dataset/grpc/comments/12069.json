[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/320276282",
    "html_url": "https://github.com/grpc/grpc/issues/12069#issuecomment-320276282",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12069",
    "id": 320276282,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDI3NjI4Mg==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-04T15:19:23Z",
    "updated_at": "2017-08-04T15:19:23Z",
    "author_association": "MEMBER",
    "body": "In `not_working.py` it looks like `server` is a function-local field and as such the value that is assigned to it (a `grpc.Server` instance) is garbage-collected when the function terminates (and when a `grpc.Server` gets garbaged-collected, it gets shut down).\r\n\r\nIn `working.py`, it looks like the thread that is spawned serves to keep the fields a program top-level from being garbage collected (and so your server stays serving).\r\n\r\nIs that what's going on?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/320346409",
    "html_url": "https://github.com/grpc/grpc/issues/12069#issuecomment-320346409",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12069",
    "id": 320346409,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDM0NjQwOQ==",
    "user": {
      "login": "danielwaterworth",
      "id": 663767,
      "node_id": "MDQ6VXNlcjY2Mzc2Nw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/663767?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danielwaterworth",
      "html_url": "https://github.com/danielwaterworth",
      "followers_url": "https://api.github.com/users/danielwaterworth/followers",
      "following_url": "https://api.github.com/users/danielwaterworth/following{/other_user}",
      "gists_url": "https://api.github.com/users/danielwaterworth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danielwaterworth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danielwaterworth/subscriptions",
      "organizations_url": "https://api.github.com/users/danielwaterworth/orgs",
      "repos_url": "https://api.github.com/users/danielwaterworth/repos",
      "events_url": "https://api.github.com/users/danielwaterworth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danielwaterworth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-04T20:31:02Z",
    "updated_at": "2017-08-04T20:31:02Z",
    "author_association": "NONE",
    "body": "Ok, that makes sense. Thanks for looking into this. Do you agree that, although each part is doing what it is supposed to, the overall behaviour here is counter intuitive?\r\n\r\nSome things that might have helped in this case would have been:\r\n\r\n * Using a blocking version of `Server.start` in the documentation,\r\n * Logging when an active server is garbage collected,"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/320349035",
    "html_url": "https://github.com/grpc/grpc/issues/12069#issuecomment-320349035",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12069",
    "id": 320349035,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDM0OTAzNQ==",
    "user": {
      "login": "danielwaterworth",
      "id": 663767,
      "node_id": "MDQ6VXNlcjY2Mzc2Nw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/663767?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danielwaterworth",
      "html_url": "https://github.com/danielwaterworth",
      "followers_url": "https://api.github.com/users/danielwaterworth/followers",
      "following_url": "https://api.github.com/users/danielwaterworth/following{/other_user}",
      "gists_url": "https://api.github.com/users/danielwaterworth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danielwaterworth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danielwaterworth/subscriptions",
      "organizations_url": "https://api.github.com/users/danielwaterworth/orgs",
      "repos_url": "https://api.github.com/users/danielwaterworth/repos",
      "events_url": "https://api.github.com/users/danielwaterworth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danielwaterworth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-04T20:44:23Z",
    "updated_at": "2017-08-04T20:44:23Z",
    "author_association": "NONE",
    "body": "Also, I don't actually understand why the server _is_ being garbage collected. The server should have a thread, right? And threads are roots. In this program, the thread doesn't stop just because there aren't any references to it.\r\n\r\n```python\r\nimport threading\r\nimport time\r\n\r\ndef go():\r\n    while True:\r\n        time.sleep(2)\r\n        print(\"hello\")\r\n\r\ndef start_thread():\r\n    threading.Thread(target=go).start()\r\n\r\nstart_thread()\r\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/320372927",
    "html_url": "https://github.com/grpc/grpc/issues/12069#issuecomment-320372927",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12069",
    "id": 320372927,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDM3MjkyNw==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-04T23:18:14Z",
    "updated_at": "2017-08-04T23:18:14Z",
    "author_association": "MEMBER",
    "body": "In the future we'll probably log an error if a serving `grpc.Server` is garbage collected. Offering a blocking version of `grpc.Server.start` is more of a stretch.\r\n\r\nThreads prevent the garbage collection of the objects that they can reach, not the garbage collection of objects that can reach them."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/320442532",
    "html_url": "https://github.com/grpc/grpc/issues/12069#issuecomment-320442532",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12069",
    "id": 320442532,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDQ0MjUzMg==",
    "user": {
      "login": "danielwaterworth",
      "id": 663767,
      "node_id": "MDQ6VXNlcjY2Mzc2Nw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/663767?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danielwaterworth",
      "html_url": "https://github.com/danielwaterworth",
      "followers_url": "https://api.github.com/users/danielwaterworth/followers",
      "following_url": "https://api.github.com/users/danielwaterworth/following{/other_user}",
      "gists_url": "https://api.github.com/users/danielwaterworth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danielwaterworth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danielwaterworth/subscriptions",
      "organizations_url": "https://api.github.com/users/danielwaterworth/orgs",
      "repos_url": "https://api.github.com/users/danielwaterworth/repos",
      "events_url": "https://api.github.com/users/danielwaterworth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danielwaterworth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-05T13:02:30Z",
    "updated_at": "2017-08-05T13:02:30Z",
    "author_association": "NONE",
    "body": "> Threads  prevent the garbage collection of the objects that they can reach, not  the garbage collection of objects that can reach them.\r\n\r\nSure, but doesn't starting the server start and thread and doesn't that thread have a reference to the server?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/320442903",
    "html_url": "https://github.com/grpc/grpc/issues/12069#issuecomment-320442903",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12069",
    "id": 320442903,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDQ0MjkwMw==",
    "user": {
      "login": "danielwaterworth",
      "id": 663767,
      "node_id": "MDQ6VXNlcjY2Mzc2Nw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/663767?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danielwaterworth",
      "html_url": "https://github.com/danielwaterworth",
      "followers_url": "https://api.github.com/users/danielwaterworth/followers",
      "following_url": "https://api.github.com/users/danielwaterworth/following{/other_user}",
      "gists_url": "https://api.github.com/users/danielwaterworth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danielwaterworth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danielwaterworth/subscriptions",
      "organizations_url": "https://api.github.com/users/danielwaterworth/orgs",
      "repos_url": "https://api.github.com/users/danielwaterworth/repos",
      "events_url": "https://api.github.com/users/danielwaterworth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danielwaterworth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-05T13:10:44Z",
    "updated_at": "2017-08-05T13:10:44Z",
    "author_association": "NONE",
    "body": "> In the future we'll probably log an error if a serving grpc.Server is garbage collected. Offering a blocking version of grpc.Server.start is more of a stretch.\r\n\r\nIf you're planning on doing work related to this issue. Can you leave it open until its done?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/320462262",
    "html_url": "https://github.com/grpc/grpc/issues/12069#issuecomment-320462262",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12069",
    "id": 320462262,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDQ2MjI2Mg==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-05T18:29:49Z",
    "updated_at": "2017-08-07T02:59:33Z",
    "author_association": "MEMBER",
    "body": "@danielwaterworth: no, the thread started by the server doesn't have a reference to the server - maybe you have too monolithic a conception of the server? The thread started by the server has references to smaller structures _inside_ the server, but not the server itself.\r\n\r\n@danielwaterworth: this issue is about a mysterious failure to connect - we solved the mystery, didn't we?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/320508826",
    "html_url": "https://github.com/grpc/grpc/issues/12069#issuecomment-320508826",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12069",
    "id": 320508826,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDUwODgyNg==",
    "user": {
      "login": "danielwaterworth",
      "id": 663767,
      "node_id": "MDQ6VXNlcjY2Mzc2Nw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/663767?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danielwaterworth",
      "html_url": "https://github.com/danielwaterworth",
      "followers_url": "https://api.github.com/users/danielwaterworth/followers",
      "following_url": "https://api.github.com/users/danielwaterworth/following{/other_user}",
      "gists_url": "https://api.github.com/users/danielwaterworth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danielwaterworth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danielwaterworth/subscriptions",
      "organizations_url": "https://api.github.com/users/danielwaterworth/orgs",
      "repos_url": "https://api.github.com/users/danielwaterworth/repos",
      "events_url": "https://api.github.com/users/danielwaterworth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danielwaterworth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-06T14:01:59Z",
    "updated_at": "2017-08-06T14:01:59Z",
    "author_association": "NONE",
    "body": "> this issue is about a mysterious failure to connect - we solved the mystery, didn't we?\r\n\r\nWe solved the mystery, but we didn't prevent others falling into the same hole.\r\n\r\n> no, the thread started by the server doesn't have a reference to the server - maybe you have to monolithic a conception of the server? The thread started by the server has references to smaller structures inside the server, but not the server itself.\r\n\r\nThis would be fine, but this behaviour is not documented and in the absence of docs that say otherwise, I assumed the `start` method would work similarly to that of  `Thread`. The tutorial says, \"Because start() does not block you may need to sleep-loop if there is nothing else for your code to do while serving\", but it doesn't say that if don't hold a reference to the server object, it will silently stop serving. The API docs don't talk about this either."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/335623858",
    "html_url": "https://github.com/grpc/grpc/issues/12069#issuecomment-335623858",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12069",
    "id": 335623858,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTYyMzg1OA==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-10T22:13:06Z",
    "updated_at": "2017-10-10T22:13:06Z",
    "author_association": "MEMBER",
    "body": "I think \"I assumed the `start` method would work similarly to that of `Thread`\" is the issue - I don't think that cognitive leap is warranted. There's no logical, syntactic, or semantic relationship between `grpc.Server`s and `threading.Thread`s, right? The fact that `grpc.Server`s (currently) happen to have a `threading.Thread` inaccessibly inside is an internal implementation detail, right?"
  }
]
