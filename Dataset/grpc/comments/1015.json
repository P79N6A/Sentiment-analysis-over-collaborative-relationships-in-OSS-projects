[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/78402322",
    "html_url": "https://github.com/grpc/grpc/issues/1015#issuecomment-78402322",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/1015",
    "id": 78402322,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NDAyMzIy",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-12T00:27:14Z",
    "updated_at": "2015-03-12T00:27:14Z",
    "author_association": "MEMBER",
    "body": "Why do we need windows.h included by public headers?\n\nRenaming our APIs whenever they conflict with Windows means we will forever\nbe doing so whenever ms adds an api, and I'd prefer to not even start down\nthat route.\n\nOn Thu, Mar 12, 2015, 10:53 Nicolas Noble notifications@github.com wrote:\n\n> We can't compile grpc++ for Windows at the moment, because\n> ServerBuilder::AddPort is causing an interesting issue. As it is the custom\n> with Microsoft's API, any Windows API that takes a string as a parameter\n> has two variants: one for Unicode, with the W suffix, and one for Ansi,\n> with the A suffix. And the main name is a #define to the proper function.\n> \n> AddPort is an API for Windows, and takes a string as an argument:\n> \n> https://msdn.microsoft.com/en-us/library/windows/desktop/dd183342%28v=vs.85%29.aspx\n> \n> So right now, the method name AddPort is being silently renamed to\n> AddPortW by the preprocessor, which creates obvious compilation issues.\n> \n> Now, there are several solutions for this, none of which pleases me. The\n> least worse option in my opinion is to rename AddPort in grpc to something\n> else. Suggestions ?\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/grpc/grpc/issues/1015.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/78402941",
    "html_url": "https://github.com/grpc/grpc/issues/1015#issuecomment-78402941",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/1015",
    "id": 78402941,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NDAyOTQx",
    "user": {
      "login": "nicolasnoble",
      "id": 7281574,
      "node_id": "MDQ6VXNlcjcyODE1NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7281574?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nicolasnoble",
      "html_url": "https://github.com/nicolasnoble",
      "followers_url": "https://api.github.com/users/nicolasnoble/followers",
      "following_url": "https://api.github.com/users/nicolasnoble/following{/other_user}",
      "gists_url": "https://api.github.com/users/nicolasnoble/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nicolasnoble/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nicolasnoble/subscriptions",
      "organizations_url": "https://api.github.com/users/nicolasnoble/orgs",
      "repos_url": "https://api.github.com/users/nicolasnoble/repos",
      "events_url": "https://api.github.com/users/nicolasnoble/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nicolasnoble/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-12T00:33:41Z",
    "updated_at": "2015-03-12T00:33:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "That's the trick: we don't need windows.h included in public headers. So right now, it's not included in server_builder.h meaning that ServerBuilder::AddPort in that file is still called AddPort. But in server_builder.cc, we eventually end up including it because we need various types to be defined for tcp sockets or dns resolutions.\n\nLong story short, the compilation error is this:\n\n2>c:\\work\\grpc\\src\\cpp\\server\\server_builder.cc(54): error C2039: 'AddPortW' : is not a member of 'grpc::ServerBuilder'\n2>          c:\\work\\grpc\\include\\grpc++\\server_builder.h(52) : see declaration of 'grpc::ServerBuilder'\n\nas server_builder.h declares AddPort, and server_builder.cc implements AddPortW.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/78402994",
    "html_url": "https://github.com/grpc/grpc/issues/1015#issuecomment-78402994",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/1015",
    "id": 78402994,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NDAyOTk0",
    "user": {
      "login": "nicolasnoble",
      "id": 7281574,
      "node_id": "MDQ6VXNlcjcyODE1NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7281574?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nicolasnoble",
      "html_url": "https://github.com/nicolasnoble",
      "followers_url": "https://api.github.com/users/nicolasnoble/followers",
      "following_url": "https://api.github.com/users/nicolasnoble/following{/other_user}",
      "gists_url": "https://api.github.com/users/nicolasnoble/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nicolasnoble/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nicolasnoble/subscriptions",
      "organizations_url": "https://api.github.com/users/nicolasnoble/orgs",
      "repos_url": "https://api.github.com/users/nicolasnoble/repos",
      "events_url": "https://api.github.com/users/nicolasnoble/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nicolasnoble/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-12T00:34:16Z",
    "updated_at": "2015-03-12T00:34:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Oh and, it also means that one of the solutions is to #include windows.h in the server_builder.h public header. Which is probably my least preferred option.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/78403220",
    "html_url": "https://github.com/grpc/grpc/issues/1015#issuecomment-78403220",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/1015",
    "id": 78403220,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NDAzMjIw",
    "user": {
      "login": "nicolasnoble",
      "id": 7281574,
      "node_id": "MDQ6VXNlcjcyODE1NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7281574?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nicolasnoble",
      "html_url": "https://github.com/nicolasnoble",
      "followers_url": "https://api.github.com/users/nicolasnoble/followers",
      "following_url": "https://api.github.com/users/nicolasnoble/following{/other_user}",
      "gists_url": "https://api.github.com/users/nicolasnoble/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nicolasnoble/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nicolasnoble/subscriptions",
      "organizations_url": "https://api.github.com/users/nicolasnoble/orgs",
      "repos_url": "https://api.github.com/users/nicolasnoble/repos",
      "events_url": "https://api.github.com/users/nicolasnoble/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nicolasnoble/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-12T00:36:47Z",
    "updated_at": "2015-03-12T00:36:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "Last thing: we actually need to include windows.h in some public headers in grpc. See atm_win32.h for example.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/78404220",
    "html_url": "https://github.com/grpc/grpc/issues/1015#issuecomment-78404220",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/1015",
    "id": 78404220,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NDA0MjIw",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-12T00:47:09Z",
    "updated_at": "2015-03-12T00:47:09Z",
    "author_association": "MEMBER",
    "body": "What if we made a header with:\n\n#ifdef AddPort\n#error\n#endif\n\nAnd provide an explanation of why its incredibly poor practice to #define\ncommon names in public headers.\n\nOr is there some argument for why Microsoft will never add another\nconflicting api in a future api revision that will force all of our clients\non every platform to update their code?\n\nOn Thu, Mar 12, 2015, 11:07 Nicolas Noble notifications@github.com wrote:\n\n> Last thing: we actually need to include windows.h in some public headers\n> in grpc. See atm_win32.h for example.\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/grpc/grpc/issues/1015#issuecomment-78403220.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/78406301",
    "html_url": "https://github.com/grpc/grpc/issues/1015#issuecomment-78406301",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/1015",
    "id": 78406301,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NDA2MzAx",
    "user": {
      "login": "nicolasnoble",
      "id": 7281574,
      "node_id": "MDQ6VXNlcjcyODE1NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7281574?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nicolasnoble",
      "html_url": "https://github.com/nicolasnoble",
      "followers_url": "https://api.github.com/users/nicolasnoble/followers",
      "following_url": "https://api.github.com/users/nicolasnoble/following{/other_user}",
      "gists_url": "https://api.github.com/users/nicolasnoble/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nicolasnoble/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nicolasnoble/subscriptions",
      "organizations_url": "https://api.github.com/users/nicolasnoble/orgs",
      "repos_url": "https://api.github.com/users/nicolasnoble/repos",
      "events_url": "https://api.github.com/users/nicolasnoble/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nicolasnoble/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-12T01:09:30Z",
    "updated_at": "2015-03-12T01:09:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "I fail to see what that would actually solve ? Unless you haven't quite got what the issue is - but I'll discuss that below.\n\nI mean, sure, it's a well known fact that Microsoft took on the wrong side of the Force when designing their API switch using #defines in their public headers, but if we want a Windows port, we have to live with that. Doing #include of Windows.h drags with it a plethora of #defines with very public names. But using public shaming here wouldn't actually suddenly make grpc++ compile under Windows, although it might improve my mood on the subject. Or maybe you didn't understand what the problem is: the crux of the issue is that server_builder.cc eventually ends up including windows.h because reasons, and is the one affected by the #define from windows.h. So it's not a matter of people including server_builder.h and suddenly having a polluted environment. It's the other way around: server_builder.cc is the one which eventually gets polluted.\n\nNow, here's the list of things that happens exactly:\n\n-) grpc and grpc++ public headers almost never include windows.h, except for atm_win32.h, for the interlocked functions definitions.\n-) the implementation code however will very definitely end up including windows.h to implement windows things\n\nAnd here's a list of potential solutions, classified in the order of worst to best in my opinion:\n\n-) include windows.h everywhere so that any and all #define will be propagated everywhere, mitigating the issue. This is by far the worst solution of all.\n-) doing #undef AddPort in server_builder.cc - bleargh.\n-) using WIN32_LEAN_AND_MEAN - this might seem the best option, as it tells windows.h to not include the universe, and will reduce the potential number of conflicts, but this presents us with the new problem that if someone uses grpc++ as a public API and hasn't WIN32_LEAN_AND_MEAN and includes windows.h before including server_builder.h, he'll get the reversed issue: ServerBuilder in our .h file with be declared with AddPortW, but our implementation will go with AddPort. This is where your suggestion might work, where we can explain to people why they need to include server_builder.h before windows.h in their code, or use WIN32_LEAN_AND_MEAN, but is still not optimal, because they might not be able to if grpc is a dependency of a dependency. Also, WIN32_LEAN_AND_MEAN still means you'll get #defines, just fewer, so this isn't a silver bullet either.\n-) renaming AddPort to something else.\n\nIn all cases, I don't think there's any guarantee that Microsoft will never add another conflicting API in the future, but unless I am missing your point, I don't see how this is something that could ever be dodged. We need to include windows.h in our implementations in order to get windows API in, and that means dragging with us unwanted #defines.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/78411591",
    "html_url": "https://github.com/grpc/grpc/issues/1015#issuecomment-78411591",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/1015",
    "id": 78411591,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NDExNTkx",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-12T02:10:28Z",
    "updated_at": "2015-03-12T02:10:28Z",
    "author_association": "MEMBER",
    "body": "So I understand the problem and the proposed potential solutions.\n\nMy main point is that we effectively have a binary choice:\n- adapt our API's so that they never conflict with Windows API's\n  OR\n- avoid the pitfalls in our code and provide clear explanations when code is used in an incompatible way\n\nThe first option I see as a recipe for disaster: I expect the majority of our users to be on Linux or Mac, and I don't want to introduce a policy of breaking their code if Microsoft adds to their API's in the future.\n\nThe second (my preferred) would mean some combination of your other proposed solutions:\n- I think avoiding atm_win32.h is completely possible in the C++ code is plausible, so I don't see this as a blocker\n- Our C namespacing ought to avoid conflicts with windows API's forever, so I think windows.h in a file that's only included from C code should be ok (but not great)\n- WIN32_LEAN_AND_MEAN defined in a .cc file should be kosher for the few times we'll have problems\n\nProviding a header explaining the problem and providing a clear reason for what's going on helps us catch problems early without opaque link time errors - it's not about public shaming.\n\nI don't think it's unreasonable to take the stance that our portable API's defined in C++ can't be mixed with Windows system headers due to hygiene issues in the latter.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/78416726",
    "html_url": "https://github.com/grpc/grpc/issues/1015#issuecomment-78416726",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/1015",
    "id": 78416726,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NDE2NzI2",
    "user": {
      "login": "nicolasnoble",
      "id": 7281574,
      "node_id": "MDQ6VXNlcjcyODE1NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7281574?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nicolasnoble",
      "html_url": "https://github.com/nicolasnoble",
      "followers_url": "https://api.github.com/users/nicolasnoble/followers",
      "following_url": "https://api.github.com/users/nicolasnoble/following{/other_user}",
      "gists_url": "https://api.github.com/users/nicolasnoble/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nicolasnoble/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nicolasnoble/subscriptions",
      "organizations_url": "https://api.github.com/users/nicolasnoble/orgs",
      "repos_url": "https://api.github.com/users/nicolasnoble/repos",
      "events_url": "https://api.github.com/users/nicolasnoble/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nicolasnoble/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-12T03:13:54Z",
    "updated_at": "2015-03-12T03:13:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "And I have an opposite opinion: I DO think it's unreasonable to request that the C++ API can't be mixed with Windows system headers. This makes for really poor integration experience for people. More specifically, what does that actually mean for people trying to use our C++ interface in a Windows piece of code ? Best-case scenario, they'll have to change their software to add WIN32_LEAN_AND_MEAN. We might be able to guide them towards that direction using your proposal, but that wouldn't cover all cases. Worst-case scenario they'll have to create an interface to our interface.\n\nImagine for example that in a single source file, people want to use grpc++ and another third party library. That other third party library might require to have windows.h without WIN32_LEAN_AND_MEAN, because it wasn't designed the same way as ours. Granted, that hypothetical third party library wouldn't be designed in a nice way, but that's not something either we or the people trying to integrate both libraries can control. At that point, this is integration hell because of our policy, and we'll prevent people from using grpc together with something else.\n\nHere is a real world example to expose what that hypothetical third party library would be: somebody writes a software under Linux. He uses grpc++. He also uses pthreads, because he didn't notice that we implement gpr_threads, or because he wants to use something we don't currently provide, such as pthread_key. Now having done his software under Linux, and being successful at it, he wishes to port it under Windows. He doesn't want to change his threads layer, and simply chooses to use pthreads-win32. Now pthread.h from the pthreads-win32 project includes windows.h. Integration hell right there. And I found this one on my first try - I'm sure more win32 ports of gnu software would do the same thing. And this is a worse example, because this would be the scenario of someone who wrote a candid Linux software, simply willing to try to compile it for Windows; he wouldn't even be a Windows expert. Yet solving grpc \"no windows headers\" policy vs pthreads-win32's pthread.h would require some understanding of what's going on with Windows.\n\nMy point here being that this policy means that people trying to integrate grpc inside their Windows software using our windows-specific visual studio projects and implementation (aka, something that has been explicitly designed for it) will have a harder time than Linux or Mac people.\n\nNow, I completely agree with you that future collisions with Microsoft new API is indeed a risk, and that'll fill me with rage if it ever happens. And for this I'd be more than happy to provide workarounds to Windows users such as what you suggested until such time we can benefit from a grpc version bump that'd do other API breakage. But I do believe this a risk worth taking if we want to ensure a smooth integration experience for our Windows users, or people trying to create cross platform softwares.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/78433569",
    "html_url": "https://github.com/grpc/grpc/issues/1015#issuecomment-78433569",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/1015",
    "id": 78433569,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NDMzNTY5",
    "user": {
      "login": "nicolasnoble",
      "id": 7281574,
      "node_id": "MDQ6VXNlcjcyODE1NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7281574?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nicolasnoble",
      "html_url": "https://github.com/nicolasnoble",
      "followers_url": "https://api.github.com/users/nicolasnoble/followers",
      "following_url": "https://api.github.com/users/nicolasnoble/following{/other_user}",
      "gists_url": "https://api.github.com/users/nicolasnoble/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nicolasnoble/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nicolasnoble/subscriptions",
      "organizations_url": "https://api.github.com/users/nicolasnoble/orgs",
      "repos_url": "https://api.github.com/users/nicolasnoble/repos",
      "events_url": "https://api.github.com/users/nicolasnoble/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nicolasnoble/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-12T07:12:25Z",
    "updated_at": "2015-03-12T07:12:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "And I just realized, even without talking about third party APIs, and keep things strictly within grpc world, that still doesn't work. This code would fail the \"don't mix windows headers with grpc++\" test, if somebody wanted to use our public atm.h header:\n\n```\n#include <grpc++/server_builder.h>\n#include <grpc/support/atm.h>\n```\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/78613531",
    "html_url": "https://github.com/grpc/grpc/issues/1015#issuecomment-78613531",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/1015",
    "id": 78613531,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NjEzNTMx",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-12T20:56:24Z",
    "updated_at": "2015-03-12T20:56:24Z",
    "author_association": "MEMBER",
    "body": "Use the c++ atomics for c++ code.\n\nCan I summarize our positions as:\n\nYou think Windows integration trumps all, and if something doesn't fit\nperfectly in that world we must change it.\n\nI think Windows will be a marginal enough platform for us that, while we\nshould support it, having a few restrictions will be OK - especially if it\ngives a more stable API for other platforms.\n\nOn Thu, Mar 12, 2015, 17:42 Nicolas Noble notifications@github.com wrote:\n\n> And I just realized, even without talking about third party APIs, and keep\n> things strictly within grpc world, that still doesn't work. This code would\n> fail the \"don't mix windows headers with grpc++\" test, if somebody wanted\n> to use our public atm.h header:\n> \n> #include <grpc++/server_builder.h>\n> #include <grpc/support/atm.h>\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/grpc/grpc/issues/1015#issuecomment-78433569.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/78629698",
    "html_url": "https://github.com/grpc/grpc/issues/1015#issuecomment-78629698",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/1015",
    "id": 78629698,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NjI5Njk4",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-12T21:34:33Z",
    "updated_at": "2015-03-12T21:34:33Z",
    "author_association": "MEMBER",
    "body": "Or more succinctly:\n\nWhen porting, should we prefer public API stability or ease of integration\nwith the target platform?\n\nOn Fri, Mar 13, 2015, 07:26 Craig Tiller ctiller@google.com wrote:\n\n> Use the c++ atomics for c++ code.\n> \n> Can I summarize our positions as:\n> \n> You think Windows integration trumps all, and if something doesn't fit\n> perfectly in that world we must change it.\n> \n> I think Windows will be a marginal enough platform for us that, while we\n> should support it, having a few restrictions will be OK - especially if it\n> gives a more stable API for other platforms.\n> \n> On Thu, Mar 12, 2015, 17:42 Nicolas Noble notifications@github.com\n> wrote:\n> \n> > And I just realized, even without talking about third party APIs, and\n> > keep things strictly within grpc world, that still doesn't work. This code\n> > would fail the \"don't mix windows headers with grpc++\" test, if somebody\n> > wanted to use our public atm.h header:\n> > \n> > #include <grpc++/server_builder.h>\n> > #include <grpc/support/atm.h>\n> > \n> > â€”\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/grpc/grpc/issues/1015#issuecomment-78433569.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/78663021",
    "html_url": "https://github.com/grpc/grpc/issues/1015#issuecomment-78663021",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/1015",
    "id": 78663021,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NjYzMDIx",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-12T22:35:09Z",
    "updated_at": "2015-03-12T22:35:09Z",
    "author_association": "MEMBER",
    "body": "I'm siding with Nico here as a one-off measure while we're still in Alpha stage to enable a quicker path to a Windows port and to increase the number of gRPC Windows users. I think it's worthwhile.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/78719624",
    "html_url": "https://github.com/grpc/grpc/issues/1015#issuecomment-78719624",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/1015",
    "id": 78719624,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NzE5NjI0",
    "user": {
      "login": "nicolasnoble",
      "id": 7281574,
      "node_id": "MDQ6VXNlcjcyODE1NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7281574?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nicolasnoble",
      "html_url": "https://github.com/nicolasnoble",
      "followers_url": "https://api.github.com/users/nicolasnoble/followers",
      "following_url": "https://api.github.com/users/nicolasnoble/following{/other_user}",
      "gists_url": "https://api.github.com/users/nicolasnoble/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nicolasnoble/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nicolasnoble/subscriptions",
      "organizations_url": "https://api.github.com/users/nicolasnoble/orgs",
      "repos_url": "https://api.github.com/users/nicolasnoble/repos",
      "events_url": "https://api.github.com/users/nicolasnoble/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nicolasnoble/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-13T00:43:52Z",
    "updated_at": "2015-03-13T00:49:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "Re the summarize of positions: I really do not believe that what you're talking about is \"a few restrictions\". It's basically \"yes, grpc can compile under Windows, but you can't use it in conjunction with any other windows product or API, even our own public GPR API\", which is just crazy.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/78828732",
    "html_url": "https://github.com/grpc/grpc/issues/1015#issuecomment-78828732",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/1015",
    "id": 78828732,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4ODI4NzMy",
    "user": {
      "login": "nicolasnoble",
      "id": 7281574,
      "node_id": "MDQ6VXNlcjcyODE1NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7281574?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nicolasnoble",
      "html_url": "https://github.com/nicolasnoble",
      "followers_url": "https://api.github.com/users/nicolasnoble/followers",
      "following_url": "https://api.github.com/users/nicolasnoble/following{/other_user}",
      "gists_url": "https://api.github.com/users/nicolasnoble/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nicolasnoble/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nicolasnoble/subscriptions",
      "organizations_url": "https://api.github.com/users/nicolasnoble/orgs",
      "repos_url": "https://api.github.com/users/nicolasnoble/repos",
      "events_url": "https://api.github.com/users/nicolasnoble/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nicolasnoble/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-13T06:26:04Z",
    "updated_at": "2015-03-13T06:26:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "And to precise my position, what I am advocating for is that, right now, as we're still doing API-breaking changes, we should take the chance to do that one too. If, when we're stable, Microsoft commits a new API such that would add a similar conflict with our API, I'd be more than happy to create a #error that would go along the lines of \"We tried, but Microsoft broke our API, and we're not going to affect everyone because of this, so, sorry but you can't have nice things.\".\n\nBut as of today, it feels really like a poor decision to prevent people to have nice things just because we didn't want to rename one API function while other [API-breaking changes](https://github.com/grpc/grpc/pull/835) are still hot from the press.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/79334160",
    "html_url": "https://github.com/grpc/grpc/issues/1015#issuecomment-79334160",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/1015",
    "id": 79334160,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5MzM0MTYw",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-13T20:14:11Z",
    "updated_at": "2015-03-13T20:14:11Z",
    "author_association": "MEMBER",
    "body": "Yes, and getting Windows users to adopt now will also decrease the likelihood of the error situation that Nico references coming down the pipe. It's a win-win situation.\n"
  }
]
