[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/200448978",
    "html_url": "https://github.com/grpc/grpc/pull/5928#issuecomment-200448978",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5928",
    "id": 200448978,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMDQ0ODk3OA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-23T17:19:34Z",
    "updated_at": "2016-03-23T17:19:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jskeet  @chrisdunelm   I think this is ready for review.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/200860095",
    "html_url": "https://github.com/grpc/grpc/pull/5928#issuecomment-200860095",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5928",
    "id": 200860095,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMDg2MDA5NQ==",
    "user": {
      "login": "jskeet",
      "id": 17011,
      "node_id": "MDQ6VXNlcjE3MDEx",
      "avatar_url": "https://avatars1.githubusercontent.com/u/17011?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jskeet",
      "html_url": "https://github.com/jskeet",
      "followers_url": "https://api.github.com/users/jskeet/followers",
      "following_url": "https://api.github.com/users/jskeet/following{/other_user}",
      "gists_url": "https://api.github.com/users/jskeet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jskeet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jskeet/subscriptions",
      "organizations_url": "https://api.github.com/users/jskeet/orgs",
      "repos_url": "https://api.github.com/users/jskeet/repos",
      "events_url": "https://api.github.com/users/jskeet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jskeet/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-24T14:21:20Z",
    "updated_at": "2016-03-24T14:21:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "Am I right in saying that if we didn't need the `WithHost` call, we wouldn't need `ClientBase`, `ClientBaseConfiguration` or `ClientBase<T>`?  I can see the use case for specifying a Host header, effectively (that's what it does, right?) but it feels like there should be a simpler way of doing that - it's pretty invasive at the moment.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/200877816",
    "html_url": "https://github.com/grpc/grpc/pull/5928#issuecomment-200877816",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5928",
    "id": 200877816,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMDg3NzgxNg==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-24T15:07:22Z",
    "updated_at": "2016-03-24T15:07:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Basically `ClientBase<T>` is needed to be able to provide immutable client configuration. There might be ways to avoid the generic class if we were fine with just setting the property \"Host\" (the way it used to be).\n`WithHost` is just a demonstration of how configuration of client stub would work in general, I think there will be more things one will want to configure for the stub - I just didn't want to add too many new public methods at this point.\nI agree that things around ClientBase have gotten more complicated, but to be honest, I am not sure how an alternative would look like. I am also wary of dropping of ClientBase concept completely, because the existence of ClientBase is the only thing that allows us to define some common functionality for all client stubs - and I think we'll definitely need that in the future.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/200883872",
    "html_url": "https://github.com/grpc/grpc/pull/5928#issuecomment-200883872",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5928",
    "id": 200883872,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMDg4Mzg3Mg==",
    "user": {
      "login": "jskeet",
      "id": 17011,
      "node_id": "MDQ6VXNlcjE3MDEx",
      "avatar_url": "https://avatars1.githubusercontent.com/u/17011?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jskeet",
      "html_url": "https://github.com/jskeet",
      "followers_url": "https://api.github.com/users/jskeet/followers",
      "following_url": "https://api.github.com/users/jskeet/following{/other_user}",
      "gists_url": "https://api.github.com/users/jskeet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jskeet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jskeet/subscriptions",
      "organizations_url": "https://api.github.com/users/jskeet/orgs",
      "repos_url": "https://api.github.com/users/jskeet/repos",
      "events_url": "https://api.github.com/users/jskeet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jskeet/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-24T15:21:29Z",
    "updated_at": "2016-03-24T15:21:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "I definitely prefer WithHost over the mutable approach before :) If you think we need to ClientBase anyway, that's reasonable.\n\nIn our generated code we have a separation of an abstract base class and then a concrete subclass, rather than your approach here with channel/call invoker - but I think each makes sense in its own context.\n\nNote that I've only looked at the generated code, and none of the C++ - I assume that's the intention?\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/200892209",
    "html_url": "https://github.com/grpc/grpc/pull/5928#issuecomment-200892209",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5928",
    "id": 200892209,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMDg5MjIwOQ==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-24T15:41:14Z",
    "updated_at": "2016-03-24T15:41:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "(I am mostly trying to first figure out the right C# API here, then I can get the rest of the PR reviewed by folks on the gRPC team.)\n\nI could have a separate abstract class and concrete subclass, but because they both need to inherit from ClientBase, they would essentially look the same, so such distinction wouldn't buy us much here (I actually had two classes in earlier version of this PR and decided to merge them into one).\n\nBtw, in earlier versions of the PR, I also didn't have the ClientBaseConfiguration concept - basically the WithHost (and others) were implemented by just adding a decorator over the existing callInvoker (and I only needed the `MathClient(CallInvoker callInvoker)` constructor) but the problem turned out to be that because of the way you compose the callInvokers,   if you did   mathClient.WithHost(\"xxx\").WithHost(\"yyy\"), you would get a client that actually sets the host to \"xxx\" - and that's pretty counterintuitive.  ClientBaseConfiguration is essentially a trick how to pass state from one client class to another.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/200899857",
    "html_url": "https://github.com/grpc/grpc/pull/5928#issuecomment-200899857",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5928",
    "id": 200899857,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMDg5OTg1Nw==",
    "user": {
      "login": "jskeet",
      "id": 17011,
      "node_id": "MDQ6VXNlcjE3MDEx",
      "avatar_url": "https://avatars1.githubusercontent.com/u/17011?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jskeet",
      "html_url": "https://github.com/jskeet",
      "followers_url": "https://api.github.com/users/jskeet/followers",
      "following_url": "https://api.github.com/users/jskeet/following{/other_user}",
      "gists_url": "https://api.github.com/users/jskeet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jskeet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jskeet/subscriptions",
      "organizations_url": "https://api.github.com/users/jskeet/orgs",
      "repos_url": "https://api.github.com/users/jskeet/repos",
      "events_url": "https://api.github.com/users/jskeet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jskeet/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-24T15:57:04Z",
    "updated_at": "2016-03-24T15:57:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "Right. The ClientBase definitely affects things - in our case the concrete class is a subclass of the abstract class, and the abstract class just throws exceptions. As no base class is involved, there's no state at all. Will have one more look at this, but I think it's looking good - it certainly solves the versioning problem we had before.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/200903125",
    "html_url": "https://github.com/grpc/grpc/pull/5928#issuecomment-200903125",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5928",
    "id": 200903125,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMDkwMzEyNQ==",
    "user": {
      "login": "jskeet",
      "id": 17011,
      "node_id": "MDQ6VXNlcjE3MDEx",
      "avatar_url": "https://avatars1.githubusercontent.com/u/17011?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jskeet",
      "html_url": "https://github.com/jskeet",
      "followers_url": "https://api.github.com/users/jskeet/followers",
      "following_url": "https://api.github.com/users/jskeet/following{/other_user}",
      "gists_url": "https://api.github.com/users/jskeet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jskeet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jskeet/subscriptions",
      "organizations_url": "https://api.github.com/users/jskeet/orgs",
      "repos_url": "https://api.github.com/users/jskeet/repos",
      "events_url": "https://api.github.com/users/jskeet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jskeet/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-24T16:04:26Z",
    "updated_at": "2016-03-24T16:04:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "Okay, basically happy - worth waiting for Chris to have a careful look too though, I think.\n(If we could ask you to codegen the Pubsub API for us with this code, that might help us, too...)\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/200918795",
    "html_url": "https://github.com/grpc/grpc/pull/5928#issuecomment-200918795",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5928",
    "id": 200918795,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMDkxODc5NQ==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-24T16:46:03Z",
    "updated_at": "2016-03-24T16:46:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "FYI I've built  protoc.exe  and grpc_csharp_plugin.exe   from commit   ee908f5555 (current head of this PR) using our Jenkins artifact builder. \n\nYou can download it here:\nhttps://grpc-testing.appspot.com/view/Artifacts/job/gRPC_build_artifacts/443/architecture=x86,language=protoc,platform=windows/\n\nor you can use a dev version of   Grpc.Tools nuget package here:\nhttps://grpc-testing.appspot.com/view/Artifacts/job/gRPC_build_packages/platform=windows/415/\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/200973484",
    "html_url": "https://github.com/grpc/grpc/pull/5928#issuecomment-200973484",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5928",
    "id": 200973484,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMDk3MzQ4NA==",
    "user": {
      "login": "chrisdunelm",
      "id": 316748,
      "node_id": "MDQ6VXNlcjMxNjc0OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/316748?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chrisdunelm",
      "html_url": "https://github.com/chrisdunelm",
      "followers_url": "https://api.github.com/users/chrisdunelm/followers",
      "following_url": "https://api.github.com/users/chrisdunelm/following{/other_user}",
      "gists_url": "https://api.github.com/users/chrisdunelm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chrisdunelm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chrisdunelm/subscriptions",
      "organizations_url": "https://api.github.com/users/chrisdunelm/orgs",
      "repos_url": "https://api.github.com/users/chrisdunelm/repos",
      "events_url": "https://api.github.com/users/chrisdunelm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chrisdunelm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-24T19:05:10Z",
    "updated_at": "2016-03-24T19:05:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "Apologies, but I'm not going to be able to take a detailed look at this until next Tuesday (due to UK Easter public holidays).\n\nGenerally I think it looks OK, although I can't quite see the need for some of the complexity at the moment - I'll spend more time looking at it as soon as I can.\nI also haven't yet run the generator to see what code is produced, so can't comment on that either yet.\nSorry for my slowness :(\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/201601545",
    "html_url": "https://github.com/grpc/grpc/pull/5928#issuecomment-201601545",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5928",
    "id": 201601545,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMTYwMTU0NQ==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-26T00:02:59Z",
    "updated_at": "2016-03-26T00:02:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased this PR and fixed some copyrights.\n\nAlso, instead of completely removing the client-side interface I marked it as obsolete (I've done the same for the server-side for now). Removing both interfaces (IMathClient and IMath) in a followup pull request will be trivial.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/205906015",
    "html_url": "https://github.com/grpc/grpc/pull/5928#issuecomment-205906015",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5928",
    "id": 205906015,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTkwNjAxNQ==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-05T17:19:33Z",
    "updated_at": "2016-04-05T17:19:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "@stanley-cheung  friendly ping\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/205918731",
    "html_url": "https://github.com/grpc/grpc/pull/5928#issuecomment-205918731",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5928",
    "id": 205918731,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTkxODczMQ==",
    "user": {
      "login": "stanley-cheung",
      "id": 11674202,
      "node_id": "MDQ6VXNlcjExNjc0MjAy",
      "avatar_url": "https://avatars2.githubusercontent.com/u/11674202?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stanley-cheung",
      "html_url": "https://github.com/stanley-cheung",
      "followers_url": "https://api.github.com/users/stanley-cheung/followers",
      "following_url": "https://api.github.com/users/stanley-cheung/following{/other_user}",
      "gists_url": "https://api.github.com/users/stanley-cheung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stanley-cheung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stanley-cheung/subscriptions",
      "organizations_url": "https://api.github.com/users/stanley-cheung/orgs",
      "repos_url": "https://api.github.com/users/stanley-cheung/repos",
      "events_url": "https://api.github.com/users/stanley-cheung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stanley-cheung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-05T17:53:49Z",
    "updated_at": "2016-04-05T17:53:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "LGTM I don't have much to add. Coincidentally we have the same `ClientBase` construct on the web side.\n"
  }
]
