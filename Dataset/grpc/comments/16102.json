[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/407175997",
    "html_url": "https://github.com/grpc/grpc/issues/16102#issuecomment-407175997",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16102",
    "id": 407175997,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzE3NTk5Nw==",
    "user": {
      "login": "mehrdada",
      "id": 900411,
      "node_id": "MDQ6VXNlcjkwMDQxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/900411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mehrdada",
      "html_url": "https://github.com/mehrdada",
      "followers_url": "https://api.github.com/users/mehrdada/followers",
      "following_url": "https://api.github.com/users/mehrdada/following{/other_user}",
      "gists_url": "https://api.github.com/users/mehrdada/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mehrdada/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mehrdada/subscriptions",
      "organizations_url": "https://api.github.com/users/mehrdada/orgs",
      "repos_url": "https://api.github.com/users/mehrdada/repos",
      "events_url": "https://api.github.com/users/mehrdada/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mehrdada/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-23T19:37:46Z",
    "updated_at": "2018-07-23T19:37:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is the same issue as https://github.com/grpc/grpc/issues/16078, right?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/407177358",
    "html_url": "https://github.com/grpc/grpc/issues/16102#issuecomment-407177358",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16102",
    "id": 407177358,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzE3NzM1OA==",
    "user": {
      "login": "mehrdada",
      "id": 900411,
      "node_id": "MDQ6VXNlcjkwMDQxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/900411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mehrdada",
      "html_url": "https://github.com/mehrdada",
      "followers_url": "https://api.github.com/users/mehrdada/followers",
      "following_url": "https://api.github.com/users/mehrdada/following{/other_user}",
      "gists_url": "https://api.github.com/users/mehrdada/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mehrdada/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mehrdada/subscriptions",
      "organizations_url": "https://api.github.com/users/mehrdada/orgs",
      "repos_url": "https://api.github.com/users/mehrdada/repos",
      "events_url": "https://api.github.com/users/mehrdada/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mehrdada/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-23T19:42:52Z",
    "updated_at": "2018-07-23T19:42:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "[gRPC Specification](https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md) actually disallows *sending* non-ASCII-encodable headers so the error is justified on the send side. The behavior in receiving non-ASCII-encodable metadata is up to the implementation, so we are not supposed to guarantee we will return the same value sent on the other side:\r\n\r\n> ASCII-Value should not have leading or trailing whitespace. If it contains leading or trailing whitespace, it may be stripped. The ASCII-Value character range defined is more strict than HTTP. Implementations must not error due to receiving an invalid ASCII-Value that's a valid field-value in HTTP, but the precise behavior is not strictly defined: they may throw the value away or accept the value. If accepted, care must be taken to make sure that the application is permitted to echo the value back as metadata. For example, if the metadata is provided to the application as a list in a request, the application should not trigger an error by providing that same list as the metadata in the response.\r\n\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/407189855",
    "html_url": "https://github.com/grpc/grpc/issues/16102#issuecomment-407189855",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16102",
    "id": 407189855,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzE4OTg1NQ==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-23T20:26:49Z",
    "updated_at": "2018-07-23T20:26:49Z",
    "author_association": "MEMBER",
    "body": "You should read a bit further down in that spec:\r\n\r\n> The value portion of Status-Message is conceptually a Unicode string description of the error, physically encoded as UTF-8 followed by percent-encoding. Percent-encoding is specified in RFC 3986 ยง2.1, although the form used here has different restricted characters. When decoding invalid values, implementations MUST NOT error or throw away the message. At worst, the implementation can abort decoding the status message altogether such that the user would received the raw percent-encoded form. Alternatively, the implementation can decode valid portions while leaving broken %-encodings as-is or replacing them with a replacement character (e.g., '?' or the Unicode replacement character)."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/407194824",
    "html_url": "https://github.com/grpc/grpc/issues/16102#issuecomment-407194824",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16102",
    "id": 407194824,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzE5NDgyNA==",
    "user": {
      "login": "mehrdada",
      "id": 900411,
      "node_id": "MDQ6VXNlcjkwMDQxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/900411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mehrdada",
      "html_url": "https://github.com/mehrdada",
      "followers_url": "https://api.github.com/users/mehrdada/followers",
      "following_url": "https://api.github.com/users/mehrdada/following{/other_user}",
      "gists_url": "https://api.github.com/users/mehrdada/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mehrdada/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mehrdada/subscriptions",
      "organizations_url": "https://api.github.com/users/mehrdada/orgs",
      "repos_url": "https://api.github.com/users/mehrdada/repos",
      "events_url": "https://api.github.com/users/mehrdada/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mehrdada/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-23T20:44:14Z",
    "updated_at": "2018-07-23T20:44:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "I see... So Message header is supposed to receive special treatment. I don't believe gRPC Python had ever made that assumption. "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/407205130",
    "html_url": "https://github.com/grpc/grpc/issues/16102#issuecomment-407205130",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16102",
    "id": 407205130,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzIwNTEzMA==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-23T21:21:11Z",
    "updated_at": "2018-07-23T21:21:11Z",
    "author_association": "MEMBER",
    "body": "Note that from a wire protocol point of view, the header is still ASCII, because it's percent encoded. But the C core just accepts a UTF-8 encoded string for the status message."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/407468099",
    "html_url": "https://github.com/grpc/grpc/issues/16102#issuecomment-407468099",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16102",
    "id": 407468099,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzQ2ODA5OQ==",
    "user": {
      "login": "nicolasnoble",
      "id": 7281574,
      "node_id": "MDQ6VXNlcjcyODE1NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7281574?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nicolasnoble",
      "html_url": "https://github.com/nicolasnoble",
      "followers_url": "https://api.github.com/users/nicolasnoble/followers",
      "following_url": "https://api.github.com/users/nicolasnoble/following{/other_user}",
      "gists_url": "https://api.github.com/users/nicolasnoble/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nicolasnoble/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nicolasnoble/subscriptions",
      "organizations_url": "https://api.github.com/users/nicolasnoble/orgs",
      "repos_url": "https://api.github.com/users/nicolasnoble/repos",
      "events_url": "https://api.github.com/users/nicolasnoble/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nicolasnoble/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-24T16:26:27Z",
    "updated_at": "2018-07-24T16:26:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "Also yes, it's what stemmed from the investigation of #16078, just with some details. Technically, #16078 can be resolved by reverting an added test in nodejs, but this one is still something we should fix in the long run."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/407468371",
    "html_url": "https://github.com/grpc/grpc/issues/16102#issuecomment-407468371",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16102",
    "id": 407468371,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzQ2ODM3MQ==",
    "user": {
      "login": "nicolasnoble",
      "id": 7281574,
      "node_id": "MDQ6VXNlcjcyODE1NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7281574?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nicolasnoble",
      "html_url": "https://github.com/nicolasnoble",
      "followers_url": "https://api.github.com/users/nicolasnoble/followers",
      "following_url": "https://api.github.com/users/nicolasnoble/following{/other_user}",
      "gists_url": "https://api.github.com/users/nicolasnoble/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nicolasnoble/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nicolasnoble/subscriptions",
      "organizations_url": "https://api.github.com/users/nicolasnoble/orgs",
      "repos_url": "https://api.github.com/users/nicolasnoble/repos",
      "events_url": "https://api.github.com/users/nicolasnoble/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nicolasnoble/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-24T16:27:18Z",
    "updated_at": "2018-07-24T16:27:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "Oh and we should add an interop test for this specifically IMHO. @adelez: is it possible to plan to add one interop test for UTF-8 error messages ?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/431518588",
    "html_url": "https://github.com/grpc/grpc/issues/16102#issuecomment-431518588",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16102",
    "id": 431518588,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMTUxODU4OA==",
    "user": {
      "login": "lidizheng",
      "id": 7394928,
      "node_id": "MDQ6VXNlcjczOTQ5Mjg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/7394928?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lidizheng",
      "html_url": "https://github.com/lidizheng",
      "followers_url": "https://api.github.com/users/lidizheng/followers",
      "following_url": "https://api.github.com/users/lidizheng/following{/other_user}",
      "gists_url": "https://api.github.com/users/lidizheng/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lidizheng/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lidizheng/subscriptions",
      "organizations_url": "https://api.github.com/users/lidizheng/orgs",
      "repos_url": "https://api.github.com/users/lidizheng/repos",
      "events_url": "https://api.github.com/users/lidizheng/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lidizheng/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-19T22:36:57Z",
    "updated_at": "2018-10-19T22:36:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "@nicolasnoble I fixed the server-side encoding problem.\r\n\r\nBut found client-side problem can't be reproduced. I'm using code from master branch. The exception of RPCError is as expected. I am using a Python client receiving an \"utf-8\" encoded error message from a node server.\r\n\r\nPS. Exception log of Python2/3\r\n```\r\nlidiz-macbookpro:helloworld lidiz$ python3 greeter_client.py\r\nTraceback (most recent call last):\r\n  File \"greeter_client.py\", line 35, in <module>\r\n    run()\r\n  File \"greeter_client.py\", line 30, in run\r\n    response = stub.SayHello(helloworld_pb2.HelloRequest(name='you'))\r\n  File \"/usr/local/lib/python3.7/site-packages/grpc/_channel.py\", line 532, in __call__\r\n    return _end_unary_response_blocking(state, call, False, None)\r\n  File \"/usr/local/lib/python3.7/site-packages/grpc/_channel.py\", line 466, in _end_unary_response_blocking\r\n    raise _Rendezvous(state, None, None, deadline)\r\ngrpc._channel._Rendezvous: <_Rendezvous of RPC that terminated with:\r\n\tstatus = StatusCode.UNKNOWN\r\n\tdetails = \"ร\"\r\n\tdebug_error_string = \"{\"created\":\"@1539988223.114949000\",\"description\":\"Error received from peer\",\"file\":\"src/core/lib/surface/call.cc\",\"file_line\":1099,\"grpc_message\":\"\\u00c3\\u0083\",\"grpc_status\":2}\"\r\n```\r\n```\r\nlidiz-macbookpro:helloworld lidiz$ python greeter_client.py\r\nTraceback (most recent call last):\r\n  File \"greeter_client.py\", line 35, in <module>\r\n    run()\r\n  File \"greeter_client.py\", line 30, in run\r\n    response = stub.SayHello(helloworld_pb2.HelloRequest(name='you'))\r\n  File \"/Users/lidiz/Library/Python/2.7/lib/python/site-packages/grpc/_channel.py\", line 532, in __call__\r\n    return _end_unary_response_blocking(state, call, False, None)\r\n  File \"/Users/lidiz/Library/Python/2.7/lib/python/site-packages/grpc/_channel.py\", line 466, in _end_unary_response_blocking\r\n    raise _Rendezvous(state, None, None, deadline)\r\ngrpc._channel._Rendezvous: <_Rendezvous of RPC that terminated with:\r\n\tstatus = StatusCode.UNKNOWN\r\n\tdetails = \"ร\"\r\n\tdebug_error_string = \"{\"created\":\"@1539988244.164052000\",\"description\":\"Error received from peer\",\"file\":\"src/core/lib/surface/call.cc\",\"file_line\":1099,\"grpc_message\":\"\\u00c3\\u0083\",\"grpc_status\":2}\"\r\n```"
  }
]
