[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/294936327",
    "html_url": "https://github.com/grpc/grpc/issues/10699#issuecomment-294936327",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10699",
    "id": 294936327,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDkzNjMyNw==",
    "user": {
      "login": "Retik",
      "id": 4002618,
      "node_id": "MDQ6VXNlcjQwMDI2MTg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4002618?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Retik",
      "html_url": "https://github.com/Retik",
      "followers_url": "https://api.github.com/users/Retik/followers",
      "following_url": "https://api.github.com/users/Retik/following{/other_user}",
      "gists_url": "https://api.github.com/users/Retik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Retik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Retik/subscriptions",
      "organizations_url": "https://api.github.com/users/Retik/orgs",
      "repos_url": "https://api.github.com/users/Retik/repos",
      "events_url": "https://api.github.com/users/Retik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Retik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-18T18:22:22Z",
    "updated_at": "2017-04-18T18:22:22Z",
    "author_association": "NONE",
    "body": "There is already a grpc package on vcpkg, it just needs to be updated to 1.2.x"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/296342625",
    "html_url": "https://github.com/grpc/grpc/issues/10699#issuecomment-296342625",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10699",
    "id": 296342625,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NjM0MjYyNQ==",
    "user": {
      "login": "ras0219-msft",
      "id": 12301622,
      "node_id": "MDQ6VXNlcjEyMzAxNjIy",
      "avatar_url": "https://avatars2.githubusercontent.com/u/12301622?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ras0219-msft",
      "html_url": "https://github.com/ras0219-msft",
      "followers_url": "https://api.github.com/users/ras0219-msft/followers",
      "following_url": "https://api.github.com/users/ras0219-msft/following{/other_user}",
      "gists_url": "https://api.github.com/users/ras0219-msft/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ras0219-msft/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ras0219-msft/subscriptions",
      "organizations_url": "https://api.github.com/users/ras0219-msft/orgs",
      "repos_url": "https://api.github.com/users/ras0219-msft/repos",
      "events_url": "https://api.github.com/users/ras0219-msft/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ras0219-msft/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-22T03:01:19Z",
    "updated_at": "2017-04-22T03:01:19Z",
    "author_association": "NONE",
    "body": "I've pushed the update to 1.2.3 in Microsoft/vcpkg@75cdbd3.\r\n\r\nWe need the targets files that were removed in c019e05, so I locally revert that commit; I'm not sure where you'd like gRPC to be in the future w.r.t. cmake integration so if you intend to not provide it I'll remove the patch."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/338447184",
    "html_url": "https://github.com/grpc/grpc/issues/10699#issuecomment-338447184",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10699",
    "id": 338447184,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzODQ0NzE4NA==",
    "user": {
      "login": "kkm000",
      "id": 8228229,
      "node_id": "MDQ6VXNlcjgyMjgyMjk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/8228229?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kkm000",
      "html_url": "https://github.com/kkm000",
      "followers_url": "https://api.github.com/users/kkm000/followers",
      "following_url": "https://api.github.com/users/kkm000/following{/other_user}",
      "gists_url": "https://api.github.com/users/kkm000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kkm000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kkm000/subscriptions",
      "organizations_url": "https://api.github.com/users/kkm000/orgs",
      "repos_url": "https://api.github.com/users/kkm000/repos",
      "events_url": "https://api.github.com/users/kkm000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kkm000/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-22T02:53:30Z",
    "updated_at": "2017-10-22T02:53:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is an interesting topic. The biggest problem with NuGet native packages is that they are... well, big. I have a build script that patches CMakeFile (the recent going back and forth with gRPC_INSTALL did not cut it for packaging, unfortunately), runs CMake, builds and packages things for our internal use, even adding .props and  .targets and a XAML property sheet so that proto files become a first class citizen in Visual Studio when the package is imported into a project.\r\n\r\nBut. I am building only with VS2017 (aka toolset v141), only 64 bit, static libraries against dynamic CRT, and two configurations, Debug and Release. The whole packaged thing is about 220MB in size. Now, if you are shooting for a general use package, this has to be extended to 32-bit, and to other toolsets (since C++ ABI is entirely incompatible between Microsoft toolsets). It is possible to build C-only libraries against older toolsets and use them with the never ones though, and package only C++ libraries per toolset, but that would require a whole lot of tinkering, if not bending over backwards.\r\n\r\nBuilding DLLs would maybe cut the size, but then there is less flexibility (with static libraries one can override default library spec and build against static CRT if they want). And I am not really sure how much space this would save.\r\n\r\nMaybe a more practical solution would be building multiple packages, each for its own bitness and toolset? This will keep each at ~200MB, which is ok, but will probably confuse more users. Indeed, a package can (and should) include safeguards producing an error, and suggesting the correct package to be installed for user's build. NuGet is of no help downloading the \"right\" native package based on current project, as it can do for CLR projects. Everything is lumped under the \"native\" framework id.\r\n\r\nI do not understand what exactly vcpkg does, but from my looking at the documentation, it seems that it builds libraries  from source. For gRPC this is not a good option (user needs perl, yasm, Go,...)\r\n\r\nIn any case, I've been there and done exactly that, and will be happy to contribute to this work, if the project decides to proceed with it. We have some crazily complex builds, and I have more experience than I would sometimes wish with MsBuild and the build system Microsoft created around it,"
  }
]
