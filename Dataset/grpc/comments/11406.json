[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/306314463",
    "html_url": "https://github.com/grpc/grpc/issues/11406#issuecomment-306314463",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11406",
    "id": 306314463,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjMxNDQ2Mw==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-05T21:24:02Z",
    "updated_at": "2017-06-05T21:24:02Z",
    "author_association": "MEMBER",
    "body": "If you create a new client, you use a new connection. If you continue to use an existing client, you will use an existing connection."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/306363015",
    "html_url": "https://github.com/grpc/grpc/issues/11406#issuecomment-306363015",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11406",
    "id": 306363015,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjM2MzAxNQ==",
    "user": {
      "login": "geekdada",
      "id": 3274850,
      "node_id": "MDQ6VXNlcjMyNzQ4NTA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3274850?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/geekdada",
      "html_url": "https://github.com/geekdada",
      "followers_url": "https://api.github.com/users/geekdada/followers",
      "following_url": "https://api.github.com/users/geekdada/following{/other_user}",
      "gists_url": "https://api.github.com/users/geekdada/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/geekdada/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/geekdada/subscriptions",
      "organizations_url": "https://api.github.com/users/geekdada/orgs",
      "repos_url": "https://api.github.com/users/geekdada/repos",
      "events_url": "https://api.github.com/users/geekdada/events{/privacy}",
      "received_events_url": "https://api.github.com/users/geekdada/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-06T02:22:04Z",
    "updated_at": "2017-06-06T02:22:04Z",
    "author_association": "NONE",
    "body": "Would gRPC ever close clients automatically, based on how many periods of time the client is idle, or any other reasons?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/306472927",
    "html_url": "https://github.com/grpc/grpc/issues/11406#issuecomment-306472927",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11406",
    "id": 306472927,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjQ3MjkyNw==",
    "user": {
      "login": "atian25",
      "id": 227713,
      "node_id": "MDQ6VXNlcjIyNzcxMw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/227713?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/atian25",
      "html_url": "https://github.com/atian25",
      "followers_url": "https://api.github.com/users/atian25/followers",
      "following_url": "https://api.github.com/users/atian25/following{/other_user}",
      "gists_url": "https://api.github.com/users/atian25/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/atian25/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/atian25/subscriptions",
      "organizations_url": "https://api.github.com/users/atian25/orgs",
      "repos_url": "https://api.github.com/users/atian25/repos",
      "events_url": "https://api.github.com/users/atian25/events{/privacy}",
      "received_events_url": "https://api.github.com/users/atian25/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-06T12:36:48Z",
    "updated_at": "2017-06-06T12:38:19Z",
    "author_association": "NONE",
    "body": "surprised me, thought grpc is using http2 to share channels (open channel per ip, share with all client which init with this ip) "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/306554885",
    "html_url": "https://github.com/grpc/grpc/issues/11406#issuecomment-306554885",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11406",
    "id": 306554885,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjU1NDg4NQ==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-06T17:13:47Z",
    "updated_at": "2017-06-06T17:13:47Z",
    "author_association": "MEMBER",
    "body": "Yes, gRPC is using HTTP2 to have multiple streams on a single channel. If you use the same client object, it will use the same underlying connection. But if you explicitly create a new client object, then that will create a new connection.\r\n\r\nAnd gRPC will close clients when they are garbage collected."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/306638072",
    "html_url": "https://github.com/grpc/grpc/issues/11406#issuecomment-306638072",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11406",
    "id": 306638072,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjYzODA3Mg==",
    "user": {
      "login": "atian25",
      "id": 227713,
      "node_id": "MDQ6VXNlcjIyNzcxMw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/227713?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/atian25",
      "html_url": "https://github.com/atian25",
      "followers_url": "https://api.github.com/users/atian25/followers",
      "following_url": "https://api.github.com/users/atian25/following{/other_user}",
      "gists_url": "https://api.github.com/users/atian25/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/atian25/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/atian25/subscriptions",
      "organizations_url": "https://api.github.com/users/atian25/orgs",
      "repos_url": "https://api.github.com/users/atian25/repos",
      "events_url": "https://api.github.com/users/atian25/events{/privacy}",
      "received_events_url": "https://api.github.com/users/atian25/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-06T22:41:56Z",
    "updated_at": "2017-06-06T22:41:56Z",
    "author_association": "NONE",
    "body": "could we create channel then pass to client? saw Java have this interface, but node don't exports it."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/306852113",
    "html_url": "https://github.com/grpc/grpc/issues/11406#issuecomment-306852113",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11406",
    "id": 306852113,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjg1MjExMw==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-07T16:36:37Z",
    "updated_at": "2017-06-07T16:36:37Z",
    "author_association": "MEMBER",
    "body": "No, an API like that is not currently exposed in the Node library. But it shouldn't make much of a difference unless you have many different clients for different services that connect to the same server."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/306862537",
    "html_url": "https://github.com/grpc/grpc/issues/11406#issuecomment-306862537",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11406",
    "id": 306862537,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjg2MjUzNw==",
    "user": {
      "login": "atian25",
      "id": 227713,
      "node_id": "MDQ6VXNlcjIyNzcxMw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/227713?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/atian25",
      "html_url": "https://github.com/atian25",
      "followers_url": "https://api.github.com/users/atian25/followers",
      "following_url": "https://api.github.com/users/atian25/following{/other_user}",
      "gists_url": "https://api.github.com/users/atian25/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/atian25/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/atian25/subscriptions",
      "organizations_url": "https://api.github.com/users/atian25/orgs",
      "repos_url": "https://api.github.com/users/atian25/repos",
      "events_url": "https://api.github.com/users/atian25/events{/privacy}",
      "received_events_url": "https://api.github.com/users/atian25/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-07T17:12:55Z",
    "updated_at": "2017-06-08T03:05:43Z",
    "author_association": "NONE",
    "body": "our Java backend server, have multiple services which split by biz, such as `myjob.test.GameService`, `myjob.some.Sdk`. and each of them have multiple serve ips (for load balance at rpc level)\r\n\r\nso our bff node server, usually connect to 5+ backend(each one may have 4+ ips, 6+ service, 50+ rpc), so if we only reuse client, then channel will be 5×4×6, if share channel then only need 4."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/306882373",
    "html_url": "https://github.com/grpc/grpc/issues/11406#issuecomment-306882373",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11406",
    "id": 306882373,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjg4MjM3Mw==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-07T18:22:34Z",
    "updated_at": "2017-06-07T18:22:34Z",
    "author_association": "MEMBER",
    "body": "The numbers you have there don't seem to be counting the exact same thing. It looks like, with shared clients, you would expect to have 4×6 channels per backend, and with shared channels you would expect to have 4 channels per backend.\r\n\r\nThis doesn't entirely solve your problem, but I think you would benefit from the load balancing functionality that exists within gRPC. A gRPC channel is not simply a single TCP connection, but a collection of connections that RPCs are automatically load balanced across. I don't entirely understand how this is used, so @markdroth, can you elaborate on this.\r\n\r\nIn any case, thank you for the information about your use case. I will keep that in mind when making future API changes."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/306905877",
    "html_url": "https://github.com/grpc/grpc/issues/11406#issuecomment-306905877",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11406",
    "id": 306905877,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjkwNTg3Nw==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-07T19:51:57Z",
    "updated_at": "2017-06-07T19:51:57Z",
    "author_association": "MEMBER",
    "body": "You can read an overview of gRPC load-balancing architecture here:\r\n\r\nhttps://github.com/grpc/grpc/blob/master/doc/load-balancing.md\r\n\r\nThe simplest way to do per-call load balancing is to use the round_robin LB policy.  The idea is that you have a DNS entry for the server name that points to multiple IP addresses, and the round_robin LB policy in the client will spread the requests across those IP addresses.  It's a fairly simplistic algorithm -- each request just goes to the next IP in the list, so it doesn't take into account things like requests with different weights -- but it eliminates the need to create a separate channel to each individual backend and deal with distributing the load in your application.\r\n\r\n@murgatroid99, I don't know if we expose a way to set the LB policy via the Node API.  In C++, this is done via `ChannelArguments::SetLoadBalancingPolicyName()`, defined here:\r\n\r\nhttps://github.com/grpc/grpc/blob/master/include/grpc%2B%2B/support/channel_arguments.h#L98\r\n\r\nEventually, there will also be a way to set this via the service config, via the mechanism described in the following gRFC:\r\n\r\nhttps://github.com/grpc/proposal/blob/master/A2-service-configs-in-dns.md\r\n\r\nHowever, we have not yet implemented that in C-core."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/306947265",
    "html_url": "https://github.com/grpc/grpc/issues/11406#issuecomment-306947265",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11406",
    "id": 306947265,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjk0NzI2NQ==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-07T22:49:12Z",
    "updated_at": "2017-06-07T22:49:12Z",
    "author_association": "MEMBER",
    "body": "That channel argument would be passed as `{\"grpc.lb_policy_name\": name}` in the third argument to a client constructor."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/306984837",
    "html_url": "https://github.com/grpc/grpc/issues/11406#issuecomment-306984837",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11406",
    "id": 306984837,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjk4NDgzNw==",
    "user": {
      "login": "atian25",
      "id": 227713,
      "node_id": "MDQ6VXNlcjIyNzcxMw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/227713?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/atian25",
      "html_url": "https://github.com/atian25",
      "followers_url": "https://api.github.com/users/atian25/followers",
      "following_url": "https://api.github.com/users/atian25/following{/other_user}",
      "gists_url": "https://api.github.com/users/atian25/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/atian25/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/atian25/subscriptions",
      "organizations_url": "https://api.github.com/users/atian25/orgs",
      "repos_url": "https://api.github.com/users/atian25/repos",
      "events_url": "https://api.github.com/users/atian25/events{/privacy}",
      "received_events_url": "https://api.github.com/users/atian25/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-08T03:00:47Z",
    "updated_at": "2017-06-08T03:08:43Z",
    "author_association": "NONE",
    "body": "@markdroth is there any nodejs guide for how to implement our custom `External Load Balancing Service`?\r\n\r\nhad read `load-balancing.md` before, but don't know how to use at node."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/306985339",
    "html_url": "https://github.com/grpc/grpc/issues/11406#issuecomment-306985339",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11406",
    "id": 306985339,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjk4NTMzOQ==",
    "user": {
      "login": "atian25",
      "id": 227713,
      "node_id": "MDQ6VXNlcjIyNzcxMw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/227713?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/atian25",
      "html_url": "https://github.com/atian25",
      "followers_url": "https://api.github.com/users/atian25/followers",
      "following_url": "https://api.github.com/users/atian25/following{/other_user}",
      "gists_url": "https://api.github.com/users/atian25/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/atian25/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/atian25/subscriptions",
      "organizations_url": "https://api.github.com/users/atian25/orgs",
      "repos_url": "https://api.github.com/users/atian25/repos",
      "events_url": "https://api.github.com/users/atian25/events{/privacy}",
      "received_events_url": "https://api.github.com/users/atian25/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-08T03:04:56Z",
    "updated_at": "2017-06-08T03:11:48Z",
    "author_association": "NONE",
    "body": "> A gRPC channel is not simply a single TCP connection, but a collection of connections that RPCs are automatically load balanced across\r\n\r\nso for now, could we share connections between difference service(client instance) with same ip?\r\n\r\nas @geekdada said:\r\n\r\n```js\r\nconst ip1 = 'localhost:50051';\r\nconst client1 = new FirstClient(ip1);\r\nconst client2 = new FirstClient(ip1);\r\nconst client3 = new SecondClient(ip1)\r\n```\r\n\r\nwill open 3 connection, which means NOT share.\r\n\r\ncorrect me if I'm wrong."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/307125678",
    "html_url": "https://github.com/grpc/grpc/issues/11406#issuecomment-307125678",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11406",
    "id": 307125678,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzEyNTY3OA==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-08T14:44:57Z",
    "updated_at": "2017-06-08T14:44:57Z",
    "author_association": "MEMBER",
    "body": "@atian25 Unfortunately, while most of the infrastructure for external load balancing is implemented in the OSS code, there are a couple of required pieces still missing.\r\n\r\nMost notably, we don't currently have an OSS implementation of the external load balancer itself available, although that's on our future roadmap (exact timing TBD).  I suppose that you could write an external load balancer yourself using the protocol defined here:\r\n\r\nhttps://github.com/grpc/grpc/blob/master/src/proto/grpc/lb/v1/load_balancer.proto\r\n\r\nHowever, that's not a trivial piece of work, so I wouldn't recommend doing that unless you absolutely have to.\r\n\r\nThe other piece that's not quite done is support for specifying external load balancers in DNS, as described here:\r\n\r\nhttps://github.com/grpc/proposal/blob/master/A5-grpclb-in-dns.md\r\n\r\n@y-zeng is almost done with a PR to add this to the c-ares DNS resolver (see #11237), but there are still some missing features in the c-ares resolver that prevent us from making it the default.  (And I think there may still be issues preventing us from using c-ares in node, although @murgatroid99 will know more about that than I do.)\r\n\r\nGiven all of that, I suspect that it will be a while before you can actually use external load balancing.  However, as I mentioned earlier, there's no reason you can't use the built-in round_robin LB policy in the interim."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/337003592",
    "html_url": "https://github.com/grpc/grpc/issues/11406#issuecomment-337003592",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11406",
    "id": 337003592,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzAwMzU5Mg==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-16T19:17:18Z",
    "updated_at": "2017-10-16T19:17:18Z",
    "author_association": "MEMBER",
    "body": "Is there anything actionable here, or can this issue be closed?"
  }
]
