[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/348558187",
    "html_url": "https://github.com/grpc/grpc/issues/13590#issuecomment-348558187",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13590",
    "id": 348558187,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODU1ODE4Nw==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-01T17:34:30Z",
    "updated_at": "2017-12-01T17:39:52Z",
    "author_association": "MEMBER",
    "body": "`unsecure` literally means that there will be no security code linked in (e.g., SSL library, secure credentials). I don't know the history of why TF chose `grpc++_unsecure`, but the difference will be that you can't use secure credentials when establishing channels or opening listening ports. It's not that the function is insecure; it's that there's simply no security included in the gRPC library if you choose this option."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/348562241",
    "html_url": "https://github.com/grpc/grpc/issues/13590#issuecomment-348562241",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13590",
    "id": 348562241,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODU2MjI0MQ==",
    "user": {
      "login": "jart",
      "id": 49262,
      "node_id": "MDQ6VXNlcjQ5MjYy",
      "avatar_url": "https://avatars1.githubusercontent.com/u/49262?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jart",
      "html_url": "https://github.com/jart",
      "followers_url": "https://api.github.com/users/jart/followers",
      "following_url": "https://api.github.com/users/jart/following{/other_user}",
      "gists_url": "https://api.github.com/users/jart/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jart/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jart/subscriptions",
      "organizations_url": "https://api.github.com/users/jart/orgs",
      "repos_url": "https://api.github.com/users/jart/repos",
      "events_url": "https://api.github.com/users/jart/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jart/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-01T17:51:12Z",
    "updated_at": "2017-12-01T17:51:12Z",
    "author_association": "NONE",
    "body": "The docs should ideally communicate why the user would want to go to the effort of defining a security module. For example, do I need a security module if I'm a small business and I have two gRPC endpoints talking to each other over a LAN switch I own, locked down behind a firewall? If my API does authentication, then is the only disadvantage that I can't have TLS encryption over the network? "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/349019186",
    "html_url": "https://github.com/grpc/grpc/issues/13590#issuecomment-349019186",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13590",
    "id": 349019186,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTAxOTE4Ng==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-04T16:36:06Z",
    "updated_at": "2017-12-04T18:36:33Z",
    "author_association": "MEMBER",
    "body": "So there are two separate issues, IMO:\r\n\r\n1. whether or not to use security, auth, etc\r\n    - This is clearly application-dependent but I think our de facto recommendation is to always use some form of authentication and encryption to avoid shooting oneself in the foot, although we allow the use of insecure RPCs. Insecure RPCs are probably only justified if the application really needs bleeding edge performance and the environment already provides security in some other fashion. @jtattermusch: Issue for doc fixit?\r\n1. why to build with `_unsecure` version of the library\r\n    - This rules out the chance of using secure RPCs altogether. It seems like the only projects that are building with `_unsecure` in the wild are Tensorflow and Chromium (and their derivatives). Based on (at least) tensorflow/tensorflow#14039, I assume that this decision is motivated largely by portability to platforms that don't support the SSL libraries that gRPC supports. If this isn't a concern, then I can't see a reason to use `_unsecure` versions of the library; even if you only want to use insecure RPCs, there is no performance advantage over the regular version.\r\n\r\nI'll assign to @jtattermusch for triage.\r\n\r\n"
  }
]
