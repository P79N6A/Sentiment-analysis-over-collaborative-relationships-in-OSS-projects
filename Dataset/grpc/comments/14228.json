[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/361448801",
    "html_url": "https://github.com/grpc/grpc/pull/14228#issuecomment-361448801",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14228",
    "id": 361448801,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTQ0ODgwMQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-30T01:43:58Z",
    "updated_at": "2018-01-30T01:43:58Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE                                                                               FILE SIZE\n ++++++++++++++ GROWING                                                                 ++++++++++++++\n  +0.0%    +240 [None]                                                                  +2.32Ki  +0.0%\n   +27%    +560 src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc    +560   +27%\n      +182%    +315 dns_start_resolving_locked                                                 +315  +182%\n       +39%    +144 dns_factory_create_resolver                                                +144   +39%\n       +25%     +48 dns_shutdown_locked                                                         +48   +25%\n      [NEW]     +45 cooldown_cb                                                                 +45  [NEW]\n      +8.1%      +8 [Unmapped]                                                                   +8  +8.1%\n\n  +0.1%    +800 TOTAL                                                                   +2.87Ki  +0.0%\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE        FILE SIZE\n ++++++++++++++  ++++++++++++++\n\n  [ = ]       0        0  [ = ]\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/361450888",
    "html_url": "https://github.com/grpc/grpc/pull/14228#issuecomment-361450888",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14228",
    "id": 361450888,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTQ1MDg4OA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-30T01:55:59Z",
    "updated_at": "2018-01-30T01:55:59Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/361457620",
    "html_url": "https://github.com/grpc/grpc/pull/14228#issuecomment-361457620",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14228",
    "id": 361457620,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTQ1NzYyMA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-30T02:35:30Z",
    "updated_at": "2018-01-30T02:35:30Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/361642055",
    "html_url": "https://github.com/grpc/grpc/pull/14228#issuecomment-361642055",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14228",
    "id": 361642055,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTY0MjA1NQ==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-30T16:06:04Z",
    "updated_at": "2018-01-30T16:06:04Z",
    "author_association": "MEMBER",
    "body": "The native DNS resolver code looks pretty decent.  Most of my comments are cosmetic; the only really substantive one is the issue about when to use the backoff vs. when to use the minimum time between requests.\n\nPlease let me know if you have any questions.  Thanks!\n\n---\n\nReviewed 2 of 3 files at r1.\nReview status: 2 of 3 files reviewed at latest revision, 12 unresolved discussions, some commit checks failed.\n\n---\n\n*[include/grpc/impl/codegen/grpc_types.h, line 243 at r1](https://reviewable.io:443/reviews/grpc/grpc/14228#-L46dFDsReElrk6YUCDE:-L46dFDsReElrk6YUCDF:bshkqo0) ([raw file](https://github.com/grpc/grpc/blob/7896b62f2dbeb1a1495f316eceb7018deeabd7e0/include/grpc/impl/codegen/grpc_types.h#L243)):*\n> ```objc\n>   \"grpc.initial_reconnect_backoff_ms\"\n> /** Minimum amount of time between DNS resolutions, in ms */\n> #define GRPC_ARG_DNS_MIN_RESOLUTION_PERIOD_MS \\\n> ```\n\nTerminology question: Is \"period\" the right term here?  To me, that implies that there's an event that repeatedly occurs at some fixed interval, which isn't the case here.  Perhaps a better name for this would be something like `DNS_MIN_TIME_BETWEEN_RESOLUTIONS_MS`?\n\n---\n\n*[src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc, line 77 at r1](https://reviewable.io:443/reviews/grpc/grpc/14228#-L46eSniwX5e6uiBAqt3:-L46eSniwX5e6uiBAqt4:b-kws7d1) ([raw file](https://github.com/grpc/grpc/blob/7896b62f2dbeb1a1495f316eceb7018deeabd7e0/src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc#L77)):*\n> ```cpp\n>   grpc_core::ManualConstructor<grpc_core::BackOff> backoff;\n>   /** min resolution period. Max one resolution will happen per period */\n>   gpr_timespec cooldown_period;\n> ```\n\nSuggest calling this something like `min_time_between_resolutions`.\n\n---\n\n*[src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc, line 77 at r1](https://reviewable.io:443/reviews/grpc/grpc/14228#-L46gkXZpO-V1QAIKfxT:-L46gkXZpO-V1QAIKfxU:b5f9shf) ([raw file](https://github.com/grpc/grpc/blob/7896b62f2dbeb1a1495f316eceb7018deeabd7e0/src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc#L77)):*\n> ```cpp\n>   grpc_core::ManualConstructor<grpc_core::BackOff> backoff;\n>   /** min resolution period. Max one resolution will happen per period */\n>   gpr_timespec cooldown_period;\n> ```\n\nIt looks like this code is using `gpr_timespec` all over the place.  I think we should be using `grpc_millis` instead.\n\n---\n\n*[src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc, line 82 at r1](https://reviewable.io:443/reviews/grpc/grpc/14228#-L46fZd-GkwRkqVIMTfb:-L46fZd-GkwRkqVIMTfc:b-e8g3vg) ([raw file](https://github.com/grpc/grpc/blob/7896b62f2dbeb1a1495f316eceb7018deeabd7e0/src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc#L82)):*\n> ```cpp\n>   gpr_timespec last_resolution_timestamp;\n>   /** Timer for resolutions delayed due to cooldown period */\n>   grpc_timer cooldown_timer;\n> ```\n\nI think we can reuse the existing retry timer for this.  I don't think the two timers will both be active at the same time, and they both serve essentially the same purpose (i.e., time until the next resolution attempt).\n\nI suggest calling the combined timer something like `next_resolution_timer`.\n\n---\n\n*[src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc, line 85 at r1](https://reviewable.io:443/reviews/grpc/grpc/14228#-L46fpQlZXERxkUrKULT:-L46fpQm0MHp26NWUoE8:b-ekvjda) ([raw file](https://github.com/grpc/grpc/blob/7896b62f2dbeb1a1495f316eceb7018deeabd7e0/src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc#L85)):*\n> ```cpp\n>   bool have_cooldown_timer;\n>   /** To be invoked once the cooldown period is over */\n>   grpc_closure cooldown_closure;\n> ```\n\nNote that even though we can reuse the retry timer for this, we probably will need to keep the closures separate, because we want slightly different behavior when the timer fires in the two cases (for details, see my comment below in `dns_start_resolving_locked()`).\n\nI suggest calling this something like `deferred_resolution_closure`.\n\n---\n\n*[src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc, line 123 at r1](https://reviewable.io:443/reviews/grpc/grpc/14228#-L46jStjbkjPuTa7-dBK:-L46jStjbkjPuTa7-dBL:bsa498l) ([raw file](https://github.com/grpc/grpc/blob/7896b62f2dbeb1a1495f316eceb7018deeabd7e0/src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc#L123)):*\n> ```cpp\n>   dns_resolver* r = (dns_resolver*)resolver;\n>   if (!r->resolving) {\n>     r->backoff->Reset();\n> ```\n\nNot directly related to this PR, but I think this is the wrong place to do this.  I think the only place we should reset the backoff state is in `dns_on_resolved_locked()`, if the DNS request was successful.  Otherwise, if we are already retrying when `channel_saw_error_locked()` is called, we will reset the backoff state and use the incorrect backoff for the next attempt.\n\n---\n\n*[src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc, line 136 at r1](https://reviewable.io:443/reviews/grpc/grpc/14228#-L46jiCMmQjOXtgh7St2:-L46jiCMmQjOXtgh7St3:brhumzt) ([raw file](https://github.com/grpc/grpc/blob/7896b62f2dbeb1a1495f316eceb7018deeabd7e0/src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc#L136)):*\n> ```cpp\n>   r->target_result = target_result;\n>   if (r->resolved_version == 0 && !r->resolving) {\n>     r->backoff->Reset();\n> ```\n\nSame here.\n\n---\n\n*[src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc, line 204 at r1](https://reviewable.io:443/reviews/grpc/grpc/14228#-L46kCxM1knpZ0lSepIw:-L46kCxM1knpZ0lSepIx:b-x7yxty) ([raw file](https://github.com/grpc/grpc/blob/7896b62f2dbeb1a1495f316eceb7018deeabd7e0/src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc#L204)):*\n> ```cpp\n> \n> static void dns_start_resolving_locked(dns_resolver* r) {\n>   if (gpr_time_cmp(gpr_inf_past(GPR_CLOCK_MONOTONIC),\n> ```\n\nI'm not sure that we want to do this check in every case where we call this function.  We do want to do this when we're called from `channel_saw_error_locked()` and `next_locked(0`.  And while it's not harmful to do this when we're called from `cooldown_cb()`, it's also not necessary, because we already know that it's been long enough since the last request that we can now issue a new one.  But the real problem is that when we're called from `dns_on_retry_timer_locked()`: in that case, we do *not* want to do this check, because that would interfere with the backoff logic.\n\nTo say this another way, I think we want to use the minimum time between requests when the last request was successful, but when the last request failed, we want to use the backoff code.  At any given time, we should be using only one of the two mechanisms, depending on whether the last request was a success or a failure.\n\nTo do this, I think we need to move this new logic out into its own function called `maybe_start_resolving_locked()`.  That new function will do this new check to see whether we need to set a timer.  If we do, it will set the timer and return; otherwise, it will call this function.\n\nThe code in `channel_saw_error_locked()` and `next_locked()` can call the new `maybe_start_resolving_locked()` instead of calling this one.  The code in `cooldown_cb()` and `dns_on_retry_timer_locked()` can call this function directly.\n\n---\n\n*[src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc, line 209 at r1](https://reviewable.io:443/reviews/grpc/grpc/14228#-L46guubh-ezeRV4OtZ9:-L46guubh-ezeRV4OtZA:bka73rk) ([raw file](https://github.com/grpc/grpc/blob/7896b62f2dbeb1a1495f316eceb7018deeabd7e0/src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc#L209)):*\n> ```cpp\n>         gpr_time_add(r->last_resolution_timestamp, r->cooldown_period);\n>     const auto ms_until_next_resolution = gpr_time_to_millis(\n>         gpr_time_sub(earliest_next_resolution, gpr_now(GPR_CLOCK_MONOTONIC)));\n> ```\n\nInstead of calling `gpr_now()`, let's use `grpc_core::ExecCtx::Get()->Now()`.\n\n---\n\n*[src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc, line 224 at r1](https://reviewable.io:443/reviews/grpc/grpc/14228#-L46h_aJ1TBzsYNYwkPh:-L46h_aJ1TBzsYNYwkPi:baboj0z) ([raw file](https://github.com/grpc/grpc/blob/7896b62f2dbeb1a1495f316eceb7018deeabd7e0/src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc#L224)):*\n>       ++r->resolved_version;\n>       dns_maybe_finish_next_locked(r);\n\nI don't think it makes sense to do this here, since we don't actually have any new data yet.\n\n---\n\n*[src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc, line 238 at r1](https://reviewable.io:443/reviews/grpc/grpc/14228#-L46hr6SFHjYKpYws5O6:-L46hr6SFHjYKpYws5O7:ba84crt) ([raw file](https://github.com/grpc/grpc/blob/7896b62f2dbeb1a1495f316eceb7018deeabd7e0/src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc#L238)):*\n> ```cpp\n>                           grpc_combiner_scheduler(r->base.combiner)),\n>       &r->addresses);\n>   r->last_resolution_timestamp = gpr_now(GPR_CLOCK_MONOTONIC);\n> ```\n\nPlease use `grpc_core::ExecCtx::Get()->Now()`.\n\n---\n\n*[test/core/client_channel/resolvers/dns_resolver_test.cc, line 16 at r1](https://reviewable.io:443/reviews/grpc/grpc/14228#-L46d5zaLGiRgo70LNKq-r1-16:-L46o-n9sCm_gjCDnOZl:b-z7iiu0) ([raw file](https://github.com/grpc/grpc/blob/7896b62f2dbeb1a1495f316eceb7018deeabd7e0/test/core/client_channel/resolvers/dns_resolver_test.cc#L16)):*\n<details><summary><i>Previously, dgquintas (David G. Quintas) wrote…</i></summary><blockquote>\n\nAfter talking to Yuchen, I've learnt that `resolve_address_test.cc` is a much better place for testing. I'll port these changes there tomorrow. The idea will the the same though: a chain of callbacks that will verify the behavior.\n</blockquote></details>\n\nOkay, I'll hold off on reviewing the test until you make those changes.\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/14228#-:-L46o7YEpBmsXOMcrR_7:b-3glqsc)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/361774585",
    "html_url": "https://github.com/grpc/grpc/pull/14228#issuecomment-361774585",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14228",
    "id": 361774585,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTc3NDU4NQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-30T23:50:43Z",
    "updated_at": "2018-01-30T23:50:43Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE                                                                                    FILE SIZE\n ++++++++++++++ GROWING                                                                      ++++++++++++++\n  +0.1%    +416 [None]                                                                       +4.19Ki  +0.1%\n      +0.1%    +378 [Unmapped]                                                                   +4.15Ki  +0.1%\n      [NEW]     +38 dns_ares_maybe_start_resolving_locked(ares_dns_resolver*)::__func__              +38  [NEW]\n   +13%    +448 src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc    +448   +13%\n      [NEW]    +244 dns_ares_maybe_start_resolving_locked                                           +244  [NEW]\n       +24%    +112 dns_factory_create_resolver                                                     +112   +24%\n      [NEW]     +48 ares_cooldown_cb                                                                 +48  [NEW]\n      [NEW]     +48 dns_ares_on_next_resolution_timer_locked                                         +48  [NEW]\n      +1.9%     +32 dns_ares_on_resolved_locked                                                      +32  +1.9%\n      +9.8%     +12 [Unmapped]                                                                       +12  +9.8%\n   +18%    +384 src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc         +384   +18%\n      [NEW]    +188 maybe_start_resolving_locked                                                    +188  [NEW]\n       +33%    +120 dns_factory_create_resolver                                                     +120   +33%\n      [NEW]     +45 cooldown_cb                                                                      +45  [NEW]\n      [NEW]     +45 dns_on_next_resolution_timer_locked                                              +45  [NEW]\n       +19%     +33 dns_start_resolving_locked                                                       +33   +19%\n\n  +0.1% +1.22Ki TOTAL                                                                        +5.00Ki  +0.1%\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE        FILE SIZE\n ++++++++++++++  ++++++++++++++\n\n  [ = ]       0        0  [ = ]\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/361777054",
    "html_url": "https://github.com/grpc/grpc/pull/14228#issuecomment-361777054",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14228",
    "id": 361777054,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTc3NzA1NA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-31T00:02:46Z",
    "updated_at": "2018-01-31T00:02:46Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/361778514",
    "html_url": "https://github.com/grpc/grpc/pull/14228#issuecomment-361778514",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14228",
    "id": 361778514,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTc3ODUxNA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-31T00:09:38Z",
    "updated_at": "2018-01-31T00:09:38Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE                                                                                    FILE SIZE\n ++++++++++++++ GROWING                                                                      ++++++++++++++\n  +0.1%    +416 [None]                                                                       +4.19Ki  +0.1%\n      +0.1%    +378 [Unmapped]                                                                   +4.15Ki  +0.1%\n      [NEW]     +38 dns_ares_maybe_start_resolving_locked(ares_dns_resolver*)::__func__              +38  [NEW]\n   +13%    +448 src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc    +448   +13%\n      [NEW]    +244 dns_ares_maybe_start_resolving_locked                                           +244  [NEW]\n       +24%    +112 dns_factory_create_resolver                                                     +112   +24%\n      [NEW]     +48 ares_cooldown_cb                                                                 +48  [NEW]\n      [NEW]     +48 dns_ares_on_next_resolution_timer_locked                                         +48  [NEW]\n      +1.9%     +32 dns_ares_on_resolved_locked                                                      +32  +1.9%\n      +9.8%     +12 [Unmapped]                                                                       +12  +9.8%\n   +18%    +384 src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc         +384   +18%\n      [NEW]    +188 maybe_start_resolving_locked                                                    +188  [NEW]\n       +33%    +120 dns_factory_create_resolver                                                     +120   +33%\n      [NEW]     +45 cooldown_cb                                                                      +45  [NEW]\n      [NEW]     +45 dns_on_next_resolution_timer_locked                                              +45  [NEW]\n       +19%     +33 dns_start_resolving_locked                                                       +33   +19%\n\n  +0.1% +1.22Ki TOTAL                                                                        +5.00Ki  +0.1%\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE        FILE SIZE\n ++++++++++++++  ++++++++++++++\n\n  [ = ]       0        0  [ = ]\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/361778539",
    "html_url": "https://github.com/grpc/grpc/pull/14228#issuecomment-361778539",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14228",
    "id": 361778539,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTc3ODUzOQ==",
    "user": {
      "login": "dgquintas",
      "id": 120217,
      "node_id": "MDQ6VXNlcjEyMDIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/120217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgquintas",
      "html_url": "https://github.com/dgquintas",
      "followers_url": "https://api.github.com/users/dgquintas/followers",
      "following_url": "https://api.github.com/users/dgquintas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgquintas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgquintas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgquintas/subscriptions",
      "organizations_url": "https://api.github.com/users/dgquintas/orgs",
      "repos_url": "https://api.github.com/users/dgquintas/repos",
      "events_url": "https://api.github.com/users/dgquintas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgquintas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-31T00:09:44Z",
    "updated_at": "2018-01-31T00:09:44Z",
    "author_association": "NONE",
    "body": "\n\n\n\nReview status: 2 of 3 files reviewed at latest revision, 12 unresolved discussions, some commit checks failed.\n\n---\n\n*[include/grpc/impl/codegen/grpc_types.h, line 243 at r1](https://reviewable.io:443/reviews/grpc/grpc/14228#-L46dFDsReElrk6YUCDE:-L47JzosYASFCzD3pifc:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/7896b62f2dbeb1a1495f316eceb7018deeabd7e0/include/grpc/impl/codegen/grpc_types.h#L243)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nTerminology question: Is \"period\" the right term here?  To me, that implies that there's an event that repeatedly occurs at some fixed interval, which isn't the case here.  Perhaps a better name for this would be something like `DNS_MIN_TIME_BETWEEN_RESOLUTIONS_MS`?\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc, line 77 at r1](https://reviewable.io:443/reviews/grpc/grpc/14228#-L46eSniwX5e6uiBAqt3:-L47G6JfLxEE_8YkOlFR:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/7896b62f2dbeb1a1495f316eceb7018deeabd7e0/src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc#L77)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nSuggest calling this something like `min_time_between_resolutions`.\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc, line 77 at r1](https://reviewable.io:443/reviews/grpc/grpc/14228#-L46gkXZpO-V1QAIKfxT:-L47Xh9PQcLjx_wX0eXH:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/7896b62f2dbeb1a1495f316eceb7018deeabd7e0/src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc#L77)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nIt looks like this code is using `gpr_timespec` all over the place.  I think we should be using `grpc_millis` instead.\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc, line 82 at r1](https://reviewable.io:443/reviews/grpc/grpc/14228#-L46fZd-GkwRkqVIMTfb:-L47JdkltvVBIAVu4XVr:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/7896b62f2dbeb1a1495f316eceb7018deeabd7e0/src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc#L82)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nI think we can reuse the existing retry timer for this.  I don't think the two timers will both be active at the same time, and they both serve essentially the same purpose (i.e., time until the next resolution attempt).\n\nI suggest calling the combined timer something like `next_resolution_timer`.\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc, line 85 at r1](https://reviewable.io:443/reviews/grpc/grpc/14228#-L46fpQlZXERxkUrKULT:-L47JjWpNVFKBkI1ncWd:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/7896b62f2dbeb1a1495f316eceb7018deeabd7e0/src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc#L85)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nNote that even though we can reuse the retry timer for this, we probably will need to keep the closures separate, because we want slightly different behavior when the timer fires in the two cases (for details, see my comment below in `dns_start_resolving_locked()`).\n\nI suggest calling this something like `deferred_resolution_closure`.\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc, line 123 at r1](https://reviewable.io:443/reviews/grpc/grpc/14228#-L46jStjbkjPuTa7-dBK:-L47FWoMJ9PmDDOOzLK0:b-m3ewuc) ([raw file](https://github.com/grpc/grpc/blob/7896b62f2dbeb1a1495f316eceb7018deeabd7e0/src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc#L123)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nNot directly related to this PR, but I think this is the wrong place to do this.  I think the only place we should reset the backoff state is in `dns_on_resolved_locked()`, if the DNS request was successful.  Otherwise, if we are already retrying when `channel_saw_error_locked()` is called, we will reset the backoff state and use the incorrect backoff for the next attempt.\n</blockquote></details>\n\nI'd rather not make changes unrelated to the purpose of this PR.\n\n---\n\n*[src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc, line 136 at r1](https://reviewable.io:443/reviews/grpc/grpc/14228#-L46jiCMmQjOXtgh7St2:-L47Ffv94ll_sxrOqaQt:b-m3ewuc) ([raw file](https://github.com/grpc/grpc/blob/7896b62f2dbeb1a1495f316eceb7018deeabd7e0/src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc#L136)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nSame here.\n</blockquote></details>\n\nI'd rather not make changes unrelated to the purpose of this PR.\n\n---\n\n*[src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc, line 204 at r1](https://reviewable.io:443/reviews/grpc/grpc/14228#-L46kCxM1knpZ0lSepIw:-L47jIu_gzts9d2YN5tY:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/7896b62f2dbeb1a1495f316eceb7018deeabd7e0/src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc#L204)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nI'm not sure that we want to do this check in every case where we call this function.  We do want to do this when we're called from `channel_saw_error_locked()` and `next_locked(0`.  And while it's not harmful to do this when we're called from `cooldown_cb()`, it's also not necessary, because we already know that it's been long enough since the last request that we can now issue a new one.  But the real problem is that when we're called from `dns_on_retry_timer_locked()`: in that case, we do *not* want to do this check, because that would interfere with the backoff logic.\n\nTo say this another way, I think we want to use the minimum time between requests when the last request was successful, but when the last request failed, we want to use the backoff code.  At any given time, we should be using only one of the two mechanisms, depending on whether the last request was a success or a failure.\n\nTo do this, I think we need to move this new logic out into its own function called `maybe_start_resolving_locked()`.  That new function will do this new check to see whether we need to set a timer.  If we do, it will set the timer and return; otherwise, it will call this function.\n\nThe code in `channel_saw_error_locked()` and `next_locked()` can call the new `maybe_start_resolving_locked()` instead of calling this one.  The code in `cooldown_cb()` and `dns_on_retry_timer_locked()` can call this function directly.\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc, line 209 at r1](https://reviewable.io:443/reviews/grpc/grpc/14228#-L46guubh-ezeRV4OtZ9:-L47jKZSsU0RTrUGLT9D:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/7896b62f2dbeb1a1495f316eceb7018deeabd7e0/src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc#L209)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nInstead of calling `gpr_now()`, let's use `grpc_core::ExecCtx::Get()->Now()`.\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc, line 224 at r1](https://reviewable.io:443/reviews/grpc/grpc/14228#-L46h_aJ1TBzsYNYwkPh:-L47EtDoxk19qkXpva4H:bf7oeyk) ([raw file](https://github.com/grpc/grpc/blob/7896b62f2dbeb1a1495f316eceb7018deeabd7e0/src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc#L224)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\n>       ++r->resolved_version;\n>       dns_maybe_finish_next_locked(r);\n\nI don't think it makes sense to do this here, since we don't actually have any new data yet.\n</blockquote></details>\n\nThis is meant to trigger the notification using the already present data: even though we don't re-resolve, we want to get back to the client of this code with the last \"cached\" copy of the resolution. The alternative is to delay the code using the resolver, which seems undesirable. Note that we schedule a future resolution at the earliest possible time anyway.\n\n---\n\n*[src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc, line 238 at r1](https://reviewable.io:443/reviews/grpc/grpc/14228#-L46hr6SFHjYKpYws5O6:-L47jLIZDgcVYNCHZzBj:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/7896b62f2dbeb1a1495f316eceb7018deeabd7e0/src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc#L238)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nPlease use `grpc_core::ExecCtx::Get()->Now()`.\n</blockquote></details>\n\nDone.\n\n---\n\n*[test/core/client_channel/resolvers/dns_resolver_test.cc, line 16 at r1](https://reviewable.io:443/reviews/grpc/grpc/14228#-L46d5zaLGiRgo70LNKq-r1-16:-L48TL4D26zTPQF_exxp:b-8u8sq3) ([raw file](https://github.com/grpc/grpc/blob/7896b62f2dbeb1a1495f316eceb7018deeabd7e0/test/core/client_channel/resolvers/dns_resolver_test.cc#L16)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nOkay, I'll hold off on reviewing the test until you make those changes.\n</blockquote></details>\n\nAdded tests and c-ares changes.\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/14228)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/361779745",
    "html_url": "https://github.com/grpc/grpc/pull/14228#issuecomment-361779745",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14228",
    "id": 361779745,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTc3OTc0NQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-31T00:16:12Z",
    "updated_at": "2018-01-31T00:16:12Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE                                                                                    FILE SIZE\n ++++++++++++++ GROWING                                                                      ++++++++++++++\n  +0.1%    +368 [None]                                                                       +3.98Ki  +0.1%\n   +12%    +400 src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc    +400   +12%\n      [NEW]    +204 dns_ares_maybe_start_resolving_locked                                           +204  [NEW]\n       +24%    +112 dns_factory_create_resolver                                                     +112   +24%\n      [NEW]     +48 ares_cooldown_cb                                                                 +48  [NEW]\n      [NEW]     +48 dns_ares_on_next_resolution_timer_locked                                         +48  [NEW]\n      +1.9%     +32 dns_ares_on_resolved_locked                                                      +32  +1.9%\n      +3.3%      +4 [Unmapped]                                                                        +4  +3.3%\n   +18%    +384 src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc         +384   +18%\n      [NEW]    +188 maybe_start_resolving_locked                                                    +188  [NEW]\n       +33%    +120 dns_factory_create_resolver                                                     +120   +33%\n      [NEW]     +45 cooldown_cb                                                                      +45  [NEW]\n      [NEW]     +45 dns_on_next_resolution_timer_locked                                              +45  [NEW]\n       +19%     +33 dns_start_resolving_locked                                                       +33   +19%\n\n  +0.1% +1.12Ki TOTAL                                                                        +4.75Ki  +0.1%\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE        FILE SIZE\n ++++++++++++++  ++++++++++++++\n\n  [ = ]       0        0  [ = ]\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/361780674",
    "html_url": "https://github.com/grpc/grpc/pull/14228#issuecomment-361780674",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14228",
    "id": 361780674,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTc4MDY3NA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-31T00:21:29Z",
    "updated_at": "2018-01-31T00:21:29Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/361781695",
    "html_url": "https://github.com/grpc/grpc/pull/14228#issuecomment-361781695",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14228",
    "id": 361781695,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTc4MTY5NQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-31T00:27:08Z",
    "updated_at": "2018-01-31T00:27:08Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/361784339",
    "html_url": "https://github.com/grpc/grpc/pull/14228#issuecomment-361784339",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14228",
    "id": 361784339,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTc4NDMzOQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-31T00:42:11Z",
    "updated_at": "2018-01-31T00:42:11Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/361787853",
    "html_url": "https://github.com/grpc/grpc/pull/14228#issuecomment-361787853",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14228",
    "id": 361787853,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTc4Nzg1Mw==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-31T01:01:36Z",
    "updated_at": "2018-01-31T01:01:36Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/361789050",
    "html_url": "https://github.com/grpc/grpc/pull/14228#issuecomment-361789050",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14228",
    "id": 361789050,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTc4OTA1MA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-31T01:08:04Z",
    "updated_at": "2018-01-31T01:08:04Z",
    "author_association": "NONE",
    "body": "```\nCorrupt JSON data (indicates timeout or crash): \n    bm_fullstack_unary_ping_pong.BM_UnaryPingPong_InProcessCHTTP2_NoOpMutator_NoOpMutator__512_512.opt.old: 1\n\n\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/361821960",
    "html_url": "https://github.com/grpc/grpc/pull/14228#issuecomment-361821960",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14228",
    "id": 361821960,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTgyMTk2MA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-31T04:41:43Z",
    "updated_at": "2018-01-31T04:41:43Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE                                                                                    FILE SIZE\n ++++++++++++++ GROWING                                                                      ++++++++++++++\n  +0.1%    +368 [None]                                                                       +3.98Ki  +0.1%\n   +12%    +400 src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc    +400   +12%\n      [NEW]    +204 dns_ares_maybe_start_resolving_locked                                           +204  [NEW]\n       +24%    +112 dns_factory_create_resolver                                                     +112   +24%\n      [NEW]     +48 ares_cooldown_cb                                                                 +48  [NEW]\n      [NEW]     +48 dns_ares_on_next_resolution_timer_locked                                         +48  [NEW]\n      +1.9%     +32 dns_ares_on_resolved_locked                                                      +32  +1.9%\n      +3.3%      +4 [Unmapped]                                                                        +4  +3.3%\n   +18%    +384 src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc         +384   +18%\n      [NEW]    +188 maybe_start_resolving_locked                                                    +188  [NEW]\n       +33%    +120 dns_factory_create_resolver                                                     +120   +33%\n      [NEW]     +45 cooldown_cb                                                                      +45  [NEW]\n      [NEW]     +45 dns_on_next_resolution_timer_locked                                              +45  [NEW]\n       +19%     +33 dns_start_resolving_locked                                                       +33   +19%\n\n  +0.1% +1.12Ki TOTAL                                                                        +4.75Ki  +0.1%\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE        FILE SIZE\n ++++++++++++++  ++++++++++++++\n\n  [ = ]       0        0  [ = ]\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/361823423",
    "html_url": "https://github.com/grpc/grpc/pull/14228#issuecomment-361823423",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14228",
    "id": 361823423,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTgyMzQyMw==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-31T04:52:53Z",
    "updated_at": "2018-01-31T04:52:53Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/361824760",
    "html_url": "https://github.com/grpc/grpc/pull/14228#issuecomment-361824760",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14228",
    "id": 361824760,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTgyNDc2MA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-31T05:03:12Z",
    "updated_at": "2018-01-31T05:03:12Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE                                                                                    FILE SIZE\n ++++++++++++++ GROWING                                                                      ++++++++++++++\n  +0.1%    +416 [None]                                                                       +4.23Ki  +0.1%\n   +12%    +416 src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc    +416   +12%\n      [NEW]    +210 dns_ares_maybe_start_resolving_locked                                           +210  [NEW]\n       +24%    +112 dns_factory_create_resolver                                                     +112   +24%\n      [NEW]     +48 ares_cooldown_cb                                                                 +48  [NEW]\n      [NEW]     +48 dns_ares_on_next_resolution_timer_locked                                         +48  [NEW]\n      +1.9%     +32 dns_ares_on_resolved_locked                                                      +32  +1.9%\n       +11%     +14 [Unmapped]                                                                       +14   +11%\n   +19%    +400 src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc         +400   +19%\n      [NEW]    +202 maybe_start_resolving_locked                                                    +202  [NEW]\n       +33%    +120 dns_factory_create_resolver                                                     +120   +33%\n      [NEW]     +45 cooldown_cb                                                                      +45  [NEW]\n      [NEW]     +45 dns_on_next_resolution_timer_locked                                              +45  [NEW]\n       +19%     +33 dns_start_resolving_locked                                                       +33   +19%\n\n  +0.1% +1.20Ki TOTAL                                                                        +5.03Ki  +0.1%\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE        FILE SIZE\n ++++++++++++++  ++++++++++++++\n\n  [ = ]       0        0  [ = ]\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/361826215",
    "html_url": "https://github.com/grpc/grpc/pull/14228#issuecomment-361826215",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14228",
    "id": 361826215,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTgyNjIxNQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-31T05:14:36Z",
    "updated_at": "2018-01-31T05:14:36Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/361828964",
    "html_url": "https://github.com/grpc/grpc/pull/14228#issuecomment-361828964",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14228",
    "id": 361828964,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTgyODk2NA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-31T05:34:27Z",
    "updated_at": "2018-01-31T05:34:27Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/361832040",
    "html_url": "https://github.com/grpc/grpc/pull/14228#issuecomment-361832040",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14228",
    "id": 361832040,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTgzMjA0MA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-31T05:56:01Z",
    "updated_at": "2018-01-31T05:56:01Z",
    "author_association": "NONE",
    "body": "```\nCorrupt JSON data (indicates timeout or crash): \n    bm_fullstack_streaming_ping_pong.BM_StreamingPingPongMsgs_MinInProcessCHTTP2_NoOpMutator_NoOpMutator__262144.opt.new: 1\n\n\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/362016370",
    "html_url": "https://github.com/grpc/grpc/pull/14228#issuecomment-362016370",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14228",
    "id": 362016370,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjAxNjM3MA==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-31T17:56:55Z",
    "updated_at": "2018-01-31T17:56:55Z",
    "author_association": "MEMBER",
    "body": "This looks pretty good.  There's only one substantive issue, which is the one about making `last_resolution_timestamp` an atomic; I think that's not actually necessary and that the tsan problem you were seeing is actually due to a bug in the test.\n\nPlease let me know if you have any questions.\n\n---\n\nReviewed 10 of 12 files at r2, 2 of 2 files at r5.\nReview status: all files reviewed at latest revision, 10 unresolved discussions, some commit checks failed.\n\n---\n\n*[include/grpc/impl/codegen/grpc_types.h, line 244 at r5](https://reviewable.io:443/reviews/grpc/grpc/14228#-L4CBI_WJ9_fFgLz4dbL:-L4CBI_WJ9_fFgLz4dbM:b-rbzteu) ([raw file](https://github.com/grpc/grpc/blob/19b9f3eb8071ba06ade3a1f4939b0ca1c4f55a37/include/grpc/impl/codegen/grpc_types.h#L244)):*\n> ```objc\n> /** Minimum amount of time between DNS resolutions, in ms */\n> #define GRPC_ARG_DNS_MIN_TIME_BETWEEN_RESOLUTIONS_MS \\\n>   \"grpc.dns_min_resolution_period_ms\"\n> ```\n\nPlease update the string to match the macro name.\n\n---\n\n*[src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc, line 69 at r5](https://reviewable.io:443/reviews/grpc/grpc/14228#-L4CI6Ni7PDGw2qeGcMG:-L4CI6Ni7PDGw2qeGcMH:bdp4nne) ([raw file](https://github.com/grpc/grpc/blob/19b9f3eb8071ba06ade3a1f4939b0ca1c4f55a37/src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc#L69)):*\n> ```cpp\n> \n>   /** Closures used by the combiner */\n>   grpc_closure dns_ares_on_next_resolution_timer_locked;\n> ```\n\nSame comment as in the other implementation: I don't think this is actually needed after all.\n\n---\n\n*[src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc, line 97 at r5](https://reviewable.io:443/reviews/grpc/grpc/14228#-L4CHGOY2ahdwGRLhEIZ:-L4CHGOY2ahdwGRLhEI_:b-ck5hhw) ([raw file](https://github.com/grpc/grpc/blob/19b9f3eb8071ba06ade3a1f4939b0ca1c4f55a37/src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc#L97)):*\n> ```cpp\n>   /** when was the last resolution? -1 if no resolution has happened yet. Holds\n>    * a grpc_millis */\n>   gpr_atm last_resolution_timestamp;\n> ```\n\nSame comment as in the other implementation: I don't see why this needs to be atomic.\n\n---\n\n*[src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc, line 363 at r5](https://reviewable.io:443/reviews/grpc/grpc/14228#-L4CHoia0-gJ-pOaly8z:-L4CHoia0-gJ-pOaly9-:b-alxcpk) ([raw file](https://github.com/grpc/grpc/blob/19b9f3eb8071ba06ade3a1f4939b0ca1c4f55a37/src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc#L363)):*\n> ```cpp\n>                         &r->deferred_resolution_closure);\n>       }\n>       ++r->resolved_version;\n> ```\n\nPlease add the same TODO here as I requested in the other implementation.\n\n---\n\n*[src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc, line 432 at r5](https://reviewable.io:443/reviews/grpc/grpc/14228#-L4CHyIyIYmhvexFxhuQ:-L4CHyIyIYmhvexFxhuR:b6mqias) ([raw file](https://github.com/grpc/grpc/blob/19b9f3eb8071ba06ade3a1f4939b0ca1c4f55a37/src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc#L432)):*\n> ```cpp\n>   const grpc_arg* period_arg = grpc_channel_args_find(\n>       args->args, GRPC_ARG_DNS_MIN_TIME_BETWEEN_RESOLUTIONS_MS);\n>   const grpc_millis min_time_between_resolutions =\n> ```\n\nNo need for this temporary variable; instead, let's assign directly to `r->min_time_between_resolutions`.\n\n---\n\n*[src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc, line 224 at r1](https://reviewable.io:443/reviews/grpc/grpc/14228#-L46h_aJ1TBzsYNYwkPh:-L4CEpFpZmUHCimQ2pm7:bkfd3s6) ([raw file](https://github.com/grpc/grpc/blob/7896b62f2dbeb1a1495f316eceb7018deeabd7e0/src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc#L224)):*\n<details><summary><i>Previously, dgquintas (David G. Quintas) wrote…</i></summary><blockquote>\n\nThis is meant to trigger the notification using the already present data: even though we don't re-resolve, we want to get back to the client of this code with the last \"cached\" copy of the resolution. The alternative is to delay the code using the resolver, which seems undesirable. Note that we schedule a future resolution at the earliest possible time anyway.\n</blockquote></details>\n\nYeah... I guess we do need this right now, due to the pick_first problem.  Okay.\n\nPlease add a TODO that indicates that once pick_first is changed to not throw away its subchannels, we should remove this.\n\n---\n\n*[src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc, line 81 at r5](https://reviewable.io:443/reviews/grpc/grpc/14228#-L4CHALwVGbIH4tz4-uT:-L4CHALwVGbIH4tz4-uU:bt1dwx8) ([raw file](https://github.com/grpc/grpc/blob/19b9f3eb8071ba06ade3a1f4939b0ca1c4f55a37/src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc#L81)):*\n> ```cpp\n>   /** when was the last resolution? -1 if no resolution has happened yet. Holds\n>    * a grpc_millis */\n>   gpr_atm last_resolution_timestamp;\n> ```\n\nI don't understand why this needs to be atomic.  It is only accessed from locations where we're running under the combiner, so no further synchronization should be needed.\n\n---\n\n*[src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc, line 83 at r5](https://reviewable.io:443/reviews/grpc/grpc/14228#-L4CDnKDpC4C4FGSTf9R:-L4CDnKDpC4C4FGSTf9S:b-mbn9lr) ([raw file](https://github.com/grpc/grpc/blob/19b9f3eb8071ba06ade3a1f4939b0ca1c4f55a37/src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc#L83)):*\n> ```cpp\n>   gpr_atm last_resolution_timestamp;\n>   /** To be invoked once the cooldown period is over */\n>   grpc_closure deferred_resolution_closure;\n> ```\n\nActually, I think I was wrong when I said that we still needed this closure.  The code in `cooldown_cb()` is the same as that in `dns_on_next_resolution_timer_locked()`, so I think they can share the same closure.\n\n---\n\n*[src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc, line 302 at r5](https://reviewable.io:443/reviews/grpc/grpc/14228#-L4CFXz0IKxpnxQ2LZmt:-L4CFXz0IKxpnxQ2LZmu:b-tgbr0b) ([raw file](https://github.com/grpc/grpc/blob/19b9f3eb8071ba06ade3a1f4939b0ca1c4f55a37/src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc#L302)):*\n> ```cpp\n>   const grpc_arg* period_arg = grpc_channel_args_find(\n>       args->args, GRPC_ARG_DNS_MIN_TIME_BETWEEN_RESOLUTIONS_MS);\n>   const grpc_millis min_time_between_resolutions =\n> ```\n\nNo need for this local variable; we can just assign directly to `r->min_time_between_resolutions`.\n\n---\n\n*[test/core/client_channel/resolvers/dns_resolver_cooldown_test.cc, line 198 at r5](https://reviewable.io:443/reviews/grpc/grpc/14228#-L4CL-yx2R1y_YB-DakN:-L4CL-yx2R1y_YB-DakO:b-orc3ds) ([raw file](https://github.com/grpc/grpc/blob/19b9f3eb8071ba06ade3a1f4939b0ca1c4f55a37/test/core/client_channel/resolvers/dns_resolver_cooldown_test.cc#L198)):*\n> ```cpp\n>   ++g_on_resolution_invocations_count;\n>   grpc_channel_args_destroy(cb_arg->result);\n>   grpc_resolver_next_locked(cb_arg->resolver, &cb_arg->result,\n> ```\n\nIt's not safe to call `grpc_resolver_next_locked()` or `grpc_resolver_channel_saw_error_locked()` here, because we're not holding the combiner.  I think we need to bounce into the combiner first via a closure with a combiner scheduler.\n\nSame thing for all of the callback functions here.\n\nI suspect this bug is the reason why you thought the `last_resolution_timestamp` field in the resolver code needed to be an atomic.  But I think that's the wrong fix.\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/14228#-:-L4CLvrHtntoFT8aYda6:b1ou1x0)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/362155692",
    "html_url": "https://github.com/grpc/grpc/pull/14228#issuecomment-362155692",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14228",
    "id": 362155692,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjE1NTY5Mg==",
    "user": {
      "login": "dgquintas",
      "id": 120217,
      "node_id": "MDQ6VXNlcjEyMDIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/120217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgquintas",
      "html_url": "https://github.com/dgquintas",
      "followers_url": "https://api.github.com/users/dgquintas/followers",
      "following_url": "https://api.github.com/users/dgquintas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgquintas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgquintas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgquintas/subscriptions",
      "organizations_url": "https://api.github.com/users/dgquintas/orgs",
      "repos_url": "https://api.github.com/users/dgquintas/repos",
      "events_url": "https://api.github.com/users/dgquintas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgquintas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-01T04:33:23Z",
    "updated_at": "2018-02-01T04:33:23Z",
    "author_association": "NONE",
    "body": "\n\n\n\nReview status: all files reviewed at latest revision, 10 unresolved discussions, some commit checks failed.\n\n---\n\n*[include/grpc/impl/codegen/grpc_types.h, line 244 at r5](https://reviewable.io:443/reviews/grpc/grpc/14228#-L4CBI_WJ9_fFgLz4dbL:-L4E0UUam00FJ_SB9zEs:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/19b9f3eb8071ba06ade3a1f4939b0ca1c4f55a37/include/grpc/impl/codegen/grpc_types.h#L244)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nPlease update the string to match the macro name.\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc, line 69 at r5](https://reviewable.io:443/reviews/grpc/grpc/14228#-L4CI6Ni7PDGw2qeGcMG:-L4E0OTPfwaoYZ_aE-Bb:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/19b9f3eb8071ba06ade3a1f4939b0ca1c4f55a37/src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc#L69)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nSame comment as in the other implementation: I don't think this is actually needed after all.\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc, line 97 at r5](https://reviewable.io:443/reviews/grpc/grpc/14228#-L4CHGOY2ahdwGRLhEIZ:-L4E0NxgdhykUwIf_Q1T:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/19b9f3eb8071ba06ade3a1f4939b0ca1c4f55a37/src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc#L97)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nSame comment as in the other implementation: I don't see why this needs to be atomic.\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc, line 363 at r5](https://reviewable.io:443/reviews/grpc/grpc/14228#-L4CHoia0-gJ-pOaly8z:-L4Ecg6Z4RDyeu-o1aAS:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/19b9f3eb8071ba06ade3a1f4939b0ca1c4f55a37/src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc#L363)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nPlease add the same TODO here as I requested in the other implementation.\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc, line 432 at r5](https://reviewable.io:443/reviews/grpc/grpc/14228#-L4CHyIyIYmhvexFxhuQ:-L4E0N5ZRbvbigMdY_Rg:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/19b9f3eb8071ba06ade3a1f4939b0ca1c4f55a37/src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc#L432)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nNo need for this temporary variable; instead, let's assign directly to `r->min_time_between_resolutions`.\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc, line 224 at r1](https://reviewable.io:443/reviews/grpc/grpc/14228#-L46h_aJ1TBzsYNYwkPh:-L4EclGn_5sWqZBnfMAo:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/7896b62f2dbeb1a1495f316eceb7018deeabd7e0/src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc#L224)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nYeah... I guess we do need this right now, due to the pick_first problem.  Okay.\n\nPlease add a TODO that indicates that once pick_first is changed to not throw away its subchannels, we should remove this.\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc, line 81 at r5](https://reviewable.io:443/reviews/grpc/grpc/14228#-L4CHALwVGbIH4tz4-uT:-L4E-H1gaKE5r1MDMJa_:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/19b9f3eb8071ba06ade3a1f4939b0ca1c4f55a37/src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc#L81)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nI don't understand why this needs to be atomic.  It is only accessed from locations where we're running under the combiner, so no further synchronization should be needed.\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc, line 83 at r5](https://reviewable.io:443/reviews/grpc/grpc/14228#-L4CDnKDpC4C4FGSTf9R:-L4E-HVe7wMxVKlmSY2O:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/19b9f3eb8071ba06ade3a1f4939b0ca1c4f55a37/src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc#L83)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nActually, I think I was wrong when I said that we still needed this closure.  The code in `cooldown_cb()` is the same as that in `dns_on_next_resolution_timer_locked()`, so I think they can share the same closure.\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc, line 302 at r5](https://reviewable.io:443/reviews/grpc/grpc/14228#-L4CFXz0IKxpnxQ2LZmt:-L4E-Zwm7WiYQiKOnEJJ:b-nyszzy) ([raw file](https://github.com/grpc/grpc/blob/19b9f3eb8071ba06ade3a1f4939b0ca1c4f55a37/src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc#L302)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nNo need for this local variable; we can just assign directly to `r->min_time_between_resolutions`.\n</blockquote></details>\n\nFunny, how did this end up happening... Done.\n\n---\n\n*[test/core/client_channel/resolvers/dns_resolver_cooldown_test.cc, line 198 at r5](https://reviewable.io:443/reviews/grpc/grpc/14228#-L4CL-yx2R1y_YB-DakN:-L4E-dEi4uVmGkQA4v3-:b6lw4jh) ([raw file](https://github.com/grpc/grpc/blob/19b9f3eb8071ba06ade3a1f4939b0ca1c4f55a37/test/core/client_channel/resolvers/dns_resolver_cooldown_test.cc#L198)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nIt's not safe to call `grpc_resolver_next_locked()` or `grpc_resolver_channel_saw_error_locked()` here, because we're not holding the combiner.  I think we need to bounce into the combiner first via a closure with a combiner scheduler.\n\nSame thing for all of the callback functions here.\n\nI suspect this bug is the reason why you thought the `last_resolution_timestamp` field in the resolver code needed to be an atomic.  But I think that's the wrong fix.\n</blockquote></details>\n\nOne would think the inconspicuous \"_locked\" suffix on the main function I'm calling would be enough of a hint... Fixed, no atomics no more.\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/14228)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/362156056",
    "html_url": "https://github.com/grpc/grpc/pull/14228#issuecomment-362156056",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14228",
    "id": 362156056,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjE1NjA1Ng==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-01T04:36:25Z",
    "updated_at": "2018-02-01T04:36:25Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE                                                                                    FILE SIZE\n ++++++++++++++ GROWING                                                                      ++++++++++++++\n  +0.1%    +448 [None]                                                                       +5.05Ki  +0.1%\n   +13%    +448 src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc    +448   +13%\n      [NEW]    +210 dns_ares_maybe_start_resolving_locked                                           +210  [NEW]\n       +24%    +112 dns_factory_create_resolver                                                     +112   +24%\n      [NEW]     +48 ares_cooldown_cb                                                                 +48  [NEW]\n      [NEW]     +48 dns_ares_on_next_resolution_timer_locked                                         +48  [NEW]\n      +1.9%     +32 dns_ares_on_resolved_locked                                                      +32  +1.9%\n       +95%     +20 dns_ares_channel_saw_error_locked                                                +20   +95%\n       +10%     +15 dns_ares_next_locked                                                             +15   +10%\n      +8.7%     +11 [Unmapped]                                                                       +11  +8.7%\n   +21%    +432 src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc         +432   +21%\n      [NEW]    +202 maybe_start_resolving_locked                                                    +202  [NEW]\n       +33%    +120 dns_factory_create_resolver                                                     +120   +33%\n      [NEW]     +45 cooldown_cb                                                                      +45  [NEW]\n      [NEW]     +45 dns_on_next_resolution_timer_locked                                              +45  [NEW]\n       +19%     +33 dns_start_resolving_locked                                                       +33   +19%\n       +22%     +20 dns_next_locked                                                                  +20   +22%\n       +95%     +20 dns_channel_saw_error_locked                                                     +20   +95%\n\n  +0.1% +1.30Ki TOTAL                                                                        +5.91Ki  +0.1%\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE        FILE SIZE\n ++++++++++++++  ++++++++++++++\n\n  [ = ]       0        0  [ = ]\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/362157450",
    "html_url": "https://github.com/grpc/grpc/pull/14228#issuecomment-362157450",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14228",
    "id": 362157450,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjE1NzQ1MA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-01T04:47:54Z",
    "updated_at": "2018-02-01T04:47:54Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/362162713",
    "html_url": "https://github.com/grpc/grpc/pull/14228#issuecomment-362162713",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14228",
    "id": 362162713,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjE2MjcxMw==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-01T05:27:37Z",
    "updated_at": "2018-02-01T05:27:37Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] Performance differences noted:\nBenchmark                                                                             cpu_time    real_time\n------------------------------------------------------------------------------------  ----------  -----------\nBM_PumpStreamClientToServer<InProcess>/262144                                         -7%         -7%\nBM_StreamingPingPong<InProcess, NoOpMutator, NoOpMutator>/262144/1                    +8%         +8%\nBM_StreamingPingPong<InProcess, NoOpMutator, NoOpMutator>/262144/2                    +8%         +8%\nBM_StreamingPingPongMsgs<InProcess, NoOpMutator, NoOpMutator>/262144                  +8%         +8%\nBM_StreamingPingPongWithCoalescingApi<InProcess, NoOpMutator, NoOpMutator>/32768/1/1  +4%         +4%\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/362286097",
    "html_url": "https://github.com/grpc/grpc/pull/14228#issuecomment-362286097",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14228",
    "id": 362286097,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjI4NjA5Nw==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-01T14:43:02Z",
    "updated_at": "2018-02-01T14:43:02Z",
    "author_association": "MEMBER",
    "body": "Looks good, just a few minor cleanups remaining.\n\n---\n\nReviewed 4 of 4 files at r6.\nReview status: all files reviewed at latest revision, 3 unresolved discussions, some commit checks failed.\n\n---\n\n*[src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc, line 99 at r6](https://reviewable.io:443/reviews/grpc/grpc/14228#-L4GluFeVeXHDPKxKph3:-L4GluFeVeXHDPKxKph4:b2p53uw) ([raw file](https://github.com/grpc/grpc/blob/f25126cffb3338249445ab96dded66ff70f0e289/src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc#L99)):*\n> ```cpp\n>   grpc_millis last_resolution_timestamp;\n>   /** To be invoked once the cooldown period is over */\n>   grpc_closure deferred_resolution_closure;\n> ```\n\nDoesn't look like this field was actually removed.  It's not needed; we can use `dns_ares_on_next_resolution_timer_locked` for both purposes.\n\n---\n\n*[src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc, line 384 at r6](https://reviewable.io:443/reviews/grpc/grpc/14228#-L4GlU7i0HyIs4_uruS_:-L4GlU7i0HyIs4_uruSa:bkyolph) ([raw file](https://github.com/grpc/grpc/blob/f25126cffb3338249445ab96dded66ff70f0e289/src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc#L384)):*\n> ```cpp\n> }\n> \n> static void ares_cooldown_cb(void* arg, grpc_error* error) {\n> ```\n\nThis is no longer needed.  It's functionally identical to `dns_ares_on_next_resolution_timer_locked()`.\n\n---\n\n*[src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc, line 83 at r5](https://reviewable.io:443/reviews/grpc/grpc/14228#-L4CDnKDpC4C4FGSTf9R:-L4Gl81KZyo-zh9f3rGe:bhsks0f) ([raw file](https://github.com/grpc/grpc/blob/19b9f3eb8071ba06ade3a1f4939b0ca1c4f55a37/src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc#L83)):*\n<details><summary><i>Previously, dgquintas (David G. Quintas) wrote…</i></summary><blockquote>\n\nDone.\n</blockquote></details>\n\nThe closure is still here in the struct.  It's not needed; we can use the `on_retry` closure instead (which should probably be renamed to `next_resolution_closure`).\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/14228#-:-L4GoU2mZfuHMo8nvI2Z:b-gnv0hn)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/362331236",
    "html_url": "https://github.com/grpc/grpc/pull/14228#issuecomment-362331236",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14228",
    "id": 362331236,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjMzMTIzNg==",
    "user": {
      "login": "dgquintas",
      "id": 120217,
      "node_id": "MDQ6VXNlcjEyMDIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/120217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgquintas",
      "html_url": "https://github.com/dgquintas",
      "followers_url": "https://api.github.com/users/dgquintas/followers",
      "following_url": "https://api.github.com/users/dgquintas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgquintas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgquintas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgquintas/subscriptions",
      "organizations_url": "https://api.github.com/users/dgquintas/orgs",
      "repos_url": "https://api.github.com/users/dgquintas/repos",
      "events_url": "https://api.github.com/users/dgquintas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgquintas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-01T16:59:24Z",
    "updated_at": "2018-02-01T16:59:24Z",
    "author_association": "NONE",
    "body": "\n\n\n\nReview status: all files reviewed at latest revision, 3 unresolved discussions, some commit checks failed.\n\n---\n\n*[src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc, line 99 at r6](https://reviewable.io:443/reviews/grpc/grpc/14228#-L4GluFeVeXHDPKxKph3:-L4HFgFa3BWZoPB7ZheR:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/f25126cffb3338249445ab96dded66ff70f0e289/src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc#L99)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nDoesn't look like this field was actually removed.  It's not needed; we can use `dns_ares_on_next_resolution_timer_locked` for both purposes.\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc, line 384 at r6](https://reviewable.io:443/reviews/grpc/grpc/14228#-L4GlU7i0HyIs4_uruS_:-L4HFn0CDB3fmXujxhwB:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/f25126cffb3338249445ab96dded66ff70f0e289/src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc#L384)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nThis is no longer needed.  It's functionally identical to `dns_ares_on_next_resolution_timer_locked()`.\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc, line 83 at r5](https://reviewable.io:443/reviews/grpc/grpc/14228#-L4CDnKDpC4C4FGSTf9R:-L4HG46L-IaD2lTpHTIn:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/19b9f3eb8071ba06ade3a1f4939b0ca1c4f55a37/src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc#L83)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nThe closure is still here in the struct.  It's not needed; we can use the `on_retry` closure instead (which should probably be renamed to `next_resolution_closure`).\n</blockquote></details>\n\nDone.\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/14228)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/362332300",
    "html_url": "https://github.com/grpc/grpc/pull/14228#issuecomment-362332300",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14228",
    "id": 362332300,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjMzMjMwMA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-01T17:02:04Z",
    "updated_at": "2018-02-01T17:02:04Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE                                                                                    FILE SIZE\n ++++++++++++++ GROWING                                                                      ++++++++++++++\n  +0.1%    +448 [None]                                                                       +5.00Ki  +0.1%\n   +13%    +448 src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc    +448   +13%\n      [NEW]    +210 dns_ares_maybe_start_resolving_locked                                           +210  [NEW]\n       +24%    +112 dns_factory_create_resolver                                                     +112   +24%\n      [NEW]     +48 ares_cooldown_cb                                                                 +48  [NEW]\n      [NEW]     +48 dns_ares_on_next_resolution_timer_locked                                         +48  [NEW]\n      +1.9%     +32 dns_ares_on_resolved_locked                                                      +32  +1.9%\n       +95%     +20 dns_ares_channel_saw_error_locked                                                +20   +95%\n       +10%     +15 dns_ares_next_locked                                                             +15   +10%\n      +8.7%     +11 [Unmapped]                                                                       +11  +8.7%\n   +21%    +432 src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc         +432   +21%\n      [NEW]    +202 maybe_start_resolving_locked                                                    +202  [NEW]\n       +33%    +120 dns_factory_create_resolver                                                     +120   +33%\n      [NEW]     +45 cooldown_cb                                                                      +45  [NEW]\n      [NEW]     +45 dns_on_next_resolution_timer_locked                                              +45  [NEW]\n       +19%     +33 dns_start_resolving_locked                                                       +33   +19%\n       +22%     +20 dns_next_locked                                                                  +20   +22%\n       +95%     +20 dns_channel_saw_error_locked                                                     +20   +95%\n\n  +0.1% +1.30Ki TOTAL                                                                        +5.86Ki  +0.1%\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE        FILE SIZE\n ++++++++++++++  ++++++++++++++\n\n  [ = ]       0        0  [ = ]\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/362336458",
    "html_url": "https://github.com/grpc/grpc/pull/14228#issuecomment-362336458",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14228",
    "id": 362336458,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjMzNjQ1OA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-01T17:13:44Z",
    "updated_at": "2018-02-01T17:13:44Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/362338159",
    "html_url": "https://github.com/grpc/grpc/pull/14228#issuecomment-362338159",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14228",
    "id": 362338159,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjMzODE1OQ==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-01T17:19:26Z",
    "updated_at": "2018-02-01T17:19:26Z",
    "author_association": "MEMBER",
    "body": "\n\n\n\nReviewed 2 of 2 files at r7.\nReview status: all files reviewed at latest revision, 3 unresolved discussions, some commit checks failed.\n\n---\n\n*[src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc, line 384 at r6](https://reviewable.io:443/reviews/grpc/grpc/14228#-L4GlU7i0HyIs4_uruS_:-L4HMiVNL6Jxrq-GxM_H:b-18fj7r) ([raw file](https://github.com/grpc/grpc/blob/f25126cffb3338249445ab96dded66ff70f0e289/src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc#L384)):*\n<details><summary><i>Previously, dgquintas (David G. Quintas) wrote…</i></summary><blockquote>\n\nDone.\n</blockquote></details>\n\nDoesn't look like this was done -- the function is still here.\n\n---\n\n*[src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc, line 432 at r7](https://reviewable.io:443/reviews/grpc/grpc/14228#-L4HMp7MhSknHSmVg6zT:-L4HMp7MhSknHSmVg6zU:br4yx5g) ([raw file](https://github.com/grpc/grpc/blob/a3cc9ead36d087ff2ea1d1bc9a957f64ac4e93fd/src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc#L432)):*\n> ```cpp\n>       grpc_channel_arg_get_integer(period_arg, {1000, 0, INT_MAX});\n>   r->last_resolution_timestamp = -1;\n>   GRPC_CLOSURE_INIT(&r->dns_ares_on_next_resolution_timer_closure,\n> ```\n\nThis does not need to be initialized again.  It's already being set on line 421 above.\n\n---\n\n*[src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc, line 179 at r7](https://reviewable.io:443/reviews/grpc/grpc/14228#-L4HN6Pns-8KM4nhQhJj:-L4HN6Pns-8KM4nhQhJk:b7z3sqz) ([raw file](https://github.com/grpc/grpc/blob/a3cc9ead36d087ff2ea1d1bc9a957f64ac4e93fd/src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc#L179)):*\n> ```cpp\n>       gpr_log(GPR_DEBUG, \"retrying immediately\");\n>     }\n>     GRPC_CLOSURE_INIT(&r->next_resolution_closure,\n> ```\n\nThis doesn't need to be initialized here, because that's already been done on line 292 below.\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/14228)*\n<!-- Sent from Reviewable.io -->\n"
  }
]
