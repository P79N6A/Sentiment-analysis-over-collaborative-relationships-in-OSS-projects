[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/244181870",
    "html_url": "https://github.com/grpc/grpc/issues/7950#issuecomment-244181870",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7950",
    "id": 244181870,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDE4MTg3MA==",
    "user": {
      "login": "kpayson64",
      "id": 18316330,
      "node_id": "MDQ6VXNlcjE4MzE2MzMw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18316330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kpayson64",
      "html_url": "https://github.com/kpayson64",
      "followers_url": "https://api.github.com/users/kpayson64/followers",
      "following_url": "https://api.github.com/users/kpayson64/following{/other_user}",
      "gists_url": "https://api.github.com/users/kpayson64/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kpayson64/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kpayson64/subscriptions",
      "organizations_url": "https://api.github.com/users/kpayson64/orgs",
      "repos_url": "https://api.github.com/users/kpayson64/repos",
      "events_url": "https://api.github.com/users/kpayson64/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kpayson64/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-01T19:13:08Z",
    "updated_at": "2016-09-01T19:13:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't believe this is something we have considered before.  We are working on improving Python performance, and would welcome a contribution that gives us a 10% speedup.\n\nOne thing to note is that the beta api is deprecated and will be removed at some point.  The examples at www.grpc.io have been updated with the 1.0 API, as well http://www.grpc.io/grpc/python/grpc.html.\n\nIf **slots** can be used in some way to get a similar performance gain in the 1.0 API, open a pull request with the needed changes and we can try to integrate it into gRPC Python.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/245939585",
    "html_url": "https://github.com/grpc/grpc/issues/7950#issuecomment-245939585",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7950",
    "id": 245939585,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTkzOTU4NQ==",
    "user": {
      "login": "synaptic",
      "id": 10901407,
      "node_id": "MDQ6VXNlcjEwOTAxNDA3",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10901407?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/synaptic",
      "html_url": "https://github.com/synaptic",
      "followers_url": "https://api.github.com/users/synaptic/followers",
      "following_url": "https://api.github.com/users/synaptic/following{/other_user}",
      "gists_url": "https://api.github.com/users/synaptic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/synaptic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/synaptic/subscriptions",
      "organizations_url": "https://api.github.com/users/synaptic/orgs",
      "repos_url": "https://api.github.com/users/synaptic/repos",
      "events_url": "https://api.github.com/users/synaptic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/synaptic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-09T15:01:47Z",
    "updated_at": "2016-09-09T15:01:47Z",
    "author_association": "NONE",
    "body": "Using `__slots__` may not help as much as I thought.  Further performance testing shows that biggest latency is in the `cygrpc.CompetionQueue.poll()` call.  Here is a narrowly-defined cProfile run (I'm still using grpcio version 0.15.0):\n\n```\n   ncalls  tottime  percall  cumtime  percall filename:lineno(function)\n       64    0.002    0.000    0.388    0.006 C:\\...\\site-packages\\grpc\\_channel.py:467(__call__)\n       64    0.003    0.000    0.385    0.006 C:\\...\\site-packages\\grpc\\_channel.py:452(_blocking)\n       64    0.276    0.004    0.276    0.004 {method 'poll' of 'grpc._cython.cygrpc.CompletionQueue' objects}\n```\n\nIs there a reason [this Python call](https://github.com/grpc/grpc/blob/master/src/python/grpcio/grpc/_cython/_cygrpc/completion_queue.pyx.pxi#L83-L107) should make the Python API slower than the C++ API?  We have noticed that it can be up to 3X in latency for resource-constrained environments.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/245944195",
    "html_url": "https://github.com/grpc/grpc/issues/7950#issuecomment-245944195",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7950",
    "id": 245944195,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTk0NDE5NQ==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-09T15:18:17Z",
    "updated_at": "2016-09-09T15:18:17Z",
    "author_association": "MEMBER",
    "body": "@synaptic: thank you for digging in further! Regarding \"biggest latency is in the `cygrpc.CompetionQueue.poll()` call\": this is good, because that is where, by system design, we expect most of the work and all of the waiting-for-bytes-off-the-network to be done. Regarding \"Is there a reason this Python call should make the Python API slower than the C++ API? [By] up to 3X\": there's no reason for that (notice that `cygrpc.CompletionQueue.poll()` doesn't do much of significance other than call `grpc_completion_queue_next`) and we would love to know more - traces, flame graphs, whatever metrics you can throw at us. Please also share the code you're writing that's making these measurements and the details of the systems on which it is running?\n\nIf _possible_, we'd love to hear about 1.0.0 rather than 0.15, but given that the code didn't change too much between 0.15 and the present day, this isn't too important.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/288804389",
    "html_url": "https://github.com/grpc/grpc/issues/7950#issuecomment-288804389",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7950",
    "id": 288804389,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODgwNDM4OQ==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-23T17:47:59Z",
    "updated_at": "2017-03-23T17:47:59Z",
    "author_association": "MEMBER",
    "body": "One reason for CQ poll seeming slower than with C++: the peer may be offering less work to do. Are you testing using the same client against a Python server and a C++ server, or different clients? If they are different clients, then we have an answer."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/299660945",
    "html_url": "https://github.com/grpc/grpc/issues/7950#issuecomment-299660945",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7950",
    "id": 299660945,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTY2MDk0NQ==",
    "user": {
      "login": "heri16",
      "id": 527101,
      "node_id": "MDQ6VXNlcjUyNzEwMQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/527101?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/heri16",
      "html_url": "https://github.com/heri16",
      "followers_url": "https://api.github.com/users/heri16/followers",
      "following_url": "https://api.github.com/users/heri16/following{/other_user}",
      "gists_url": "https://api.github.com/users/heri16/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/heri16/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/heri16/subscriptions",
      "organizations_url": "https://api.github.com/users/heri16/orgs",
      "repos_url": "https://api.github.com/users/heri16/repos",
      "events_url": "https://api.github.com/users/heri16/events{/privacy}",
      "received_events_url": "https://api.github.com/users/heri16/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-06T19:27:57Z",
    "updated_at": "2017-05-06T19:27:57Z",
    "author_association": "NONE",
    "body": "Are there benchmarks or graphs on actual perfromance of python client with c native extensions? Seems missing on the official dashboards."
  }
]
