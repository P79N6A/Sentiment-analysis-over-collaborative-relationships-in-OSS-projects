[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/386434783",
    "html_url": "https://github.com/grpc/grpc/pull/15265#issuecomment-386434783",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15265",
    "id": 386434783,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjQzNDc4Mw==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-03T20:59:03Z",
    "updated_at": "2018-05-03T20:59:03Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE                                                                           FILE SIZE\n ++++++++++++++ GROWING                                                             ++++++++++++++\n  +0.1%    +958 [None]                                                              +7.40Ki  +0.1%\n      +0.1%    +918 [Unmapped]                                                          +7.36Ki  +0.1%\n       +14%     +32 handshaker_vtable                                                       +32   +14%\n      +0.6%      +8 vtable                                                                   +8  +0.6%\n  +5.4%    +234 src/core/tsi/alts/handshaker/alts_tsi_handshaker.cc                    +234  +5.4%\n      +5.8%     +72 alts_tsi_handshaker_handle_response                                     +72  +5.8%\n       +13%     +72 handshaker_next                                                         +72   +13%\n      [NEW]     +70 handshaker_cancel_next                                                  +70  [NEW]\n       +18%     +15 [Unmapped]                                                              +15   +18%\n      [NEW]      +5 grpc_core::internal::alts_tsi_handshaker_get_client_for_testing          +5  [NEW]\n  +8.2%    +224 src/core/tsi/alts/handshaker/alts_handshaker_client.cc                 +224  +8.2%\n      [NEW]    +131 handshaker_client_cancel                                               +131  [NEW]\n      [NEW]     +77 alts_handshaker_client_cancel                                           +77  [NEW]\n       +21%     +16 [Unmapped]                                                              +16   +21%\n  +1.5%     +64 src/core/lib/security/transport/security_handshaker.cc                  +64  +1.5%\n       +75%     +63 security_handshaker_shutdown                                            +63   +75%\n      +0.6%      +1 [Unmapped]                                                               +1  +0.6%\n  +3.1%     +64 src/core/tsi/transport_security.cc                                      +64  +3.1%\n      [NEW]     +54 tsi_handshaker_cancel_next                                              +54  [NEW]\n      +5.5%     +10 [Unmapped]                                                              +10  +5.5%\n  +0.3%     +16 src/core/tsi/fake_transport_security.cc                                 +16  +0.3%\n      +6.8%     +13 [Unmapped]                                                              +13  +6.8%\n      [NEW]      +3 fake_handshaker_cancel_next                                              +3  [NEW]\n  +0.1%     +16 src/core/tsi/ssl_transport_security.cc                                  +16  +0.1%\n      +3.4%     +13 [Unmapped]                                                              +13  +3.4%\n      [NEW]      +3 ssl_handshaker_cancel_next                                               +3  [NEW]\n  +1.4%     +16 src/core/tsi/transport_security_adapter.cc                              +16  +1.4%\n      [NEW]      +9 adapter_cancel_next                                                      +9  [NEW]\n      +7.3%      +7 [Unmapped]                                                               +7  +7.3%\n\n  +0.1% +1.55Ki TOTAL                                                               +8.02Ki  +0.1%\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE        FILE SIZE\n ++++++++++++++  ++++++++++++++\n\n  [ = ]       0        0  [ = ]\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/386437037",
    "html_url": "https://github.com/grpc/grpc/pull/15265#issuecomment-386437037",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15265",
    "id": 386437037,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjQzNzAzNw==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-03T21:07:38Z",
    "updated_at": "2018-05-03T21:07:38Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/386448278",
    "html_url": "https://github.com/grpc/grpc/pull/15265#issuecomment-386448278",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15265",
    "id": 386448278,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjQ0ODI3OA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-03T21:50:49Z",
    "updated_at": "2018-05-03T21:50:49Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/386449016",
    "html_url": "https://github.com/grpc/grpc/pull/15265#issuecomment-386449016",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15265",
    "id": 386449016,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjQ0OTAxNg==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-03T21:54:05Z",
    "updated_at": "2018-05-03T21:54:05Z",
    "author_association": "MEMBER",
    "body": "Overall, this looks really good!  Most of my comments are minor.\n\n---\n\nReviewed 13 of 13 files at r1.\nReview status: all files reviewed at latest revision, all discussions resolved.\n\n---\n\n*[src/core/tsi/transport_security.h, line 83 at r1](https://reviewable.io/reviews/grpc/grpc/15265#-LBbqocH4_Mzu0efXvaK:-LBbqocH4_Mzu0efXvaL:bx6civz) ([raw file](https://github.com/grpc/grpc/blob/4559d60a7e309fd9e2fb4ea36a705ef8d7c3f0c3/src/core/tsi/transport_security.h#L83)):*\n> ```objc\n>   bool frame_protector_created;\n>   bool handshaker_result_created;\n>   bool handshake_cancelled;\n> ```\n\nSuggest calling this `shutdown`.\n\n---\n\n*[src/core/tsi/transport_security_adapter.cc, line 225 at r1](https://reviewable.io/reviews/grpc/grpc/15265#-LBbrNkO0Ve-NDBWO_QH:-LBbrNkO0Ve-NDBWO_QI:b-hsg0vb) ([raw file](https://github.com/grpc/grpc/blob/4559d60a7e309fd9e2fb4ea36a705ef8d7c3f0c3/src/core/tsi/transport_security_adapter.cc#L225)):*\n> ```cpp\n> };\n> \n> tsi_handshaker* tsi_create_adapter_handshaker(tsi_handshaker* wrapped) {\n> ```\n\nNot really related to the rest of this PR, but is this adaptor is still needed?  I thought we added this primarily as a transition mechanism while we were converting to the new async TSI API, but I thought that process was complete already.\n\n---\n\n*[src/core/tsi/transport_security_interface.h, line 451 at r1](https://reviewable.io/reviews/grpc/grpc/15265#-LBbpqfs3lrV5Ki_aWM_:-LBbpqfs3lrV5Ki_aWMa:b-cduabf) ([raw file](https://github.com/grpc/grpc/blob/4559d60a7e309fd9e2fb4ea36a705ef8d7c3f0c3/src/core/tsi/transport_security_interface.h#L451)):*\n> ```objc\n>  * pending async call to tsi_handshaker_next, this will be a no-op.\n>  */\n> tsi_result tsi_handshaker_cancel_next(tsi_handshaker* self);\n> ```\n\nConsider having this just return `void`, because there's no possible way this operation can fail.  All of the cases I see where this actually fails are just programmer errors (e.g., passing in a null or uninitialized handshaker), for which we can just use assertions.\n\n---\n\n*[src/core/tsi/transport_security_interface.h, line 451 at r1](https://reviewable.io/reviews/grpc/grpc/15265#-LBbqWQo7-O4ufoCEqPm:-LBbqWQo7-O4ufoCEqPn:b-4katbr) ([raw file](https://github.com/grpc/grpc/blob/4559d60a7e309fd9e2fb4ea36a705ef8d7c3f0c3/src/core/tsi/transport_security_interface.h#L451)):*\n> ```objc\n>  * pending async call to tsi_handshaker_next, this will be a no-op.\n>  */\n> tsi_result tsi_handshaker_cancel_next(tsi_handshaker* self);\n> ```\n\nSeeing this PR, I now realize that calling this method does more than simply cancel a single pending call to `next()`; it actually invalidates the entire handshaker.  As a result, I suggest calling this method `tsi_handshaker_shutdown()`.\n\n---\n\n*[src/core/tsi/alts/handshaker/alts_handshaker_client.h, line 111 at r1](https://reviewable.io/reviews/grpc/grpc/15265#-LBbt35D6yvWBgvstPSr:-LBbt35D6yvWBgvstPSs:b-o44eqj) ([raw file](https://github.com/grpc/grpc/blob/4559d60a7e309fd9e2fb4ea36a705ef8d7c3f0c3/src/core/tsi/alts/handshaker/alts_handshaker_client.h#L111)):*\n> ```objc\n>  * It returns TSI_OK on success and an error status code on faiure.\n>  */\n> tsi_result alts_handshaker_client_cancel(alts_handshaker_client* client);\n> ```\n\nSimilar to my comment elsewhere, I suggest calling this `alts_handshaker_client_shutdown()`.\n\n---\n\n*[src/core/tsi/alts/handshaker/alts_tsi_handshaker.cc, line 291 at r1](https://reviewable.io/reviews/grpc/grpc/15265#-LBbtJYZ2-FRPfTTnJd_:-LBbtJYZ2-FRPfTTnJda:b-ww1bbk) ([raw file](https://github.com/grpc/grpc/blob/4559d60a7e309fd9e2fb4ea36a705ef8d7c3f0c3/src/core/tsi/alts/handshaker/alts_tsi_handshaker.cc#L291)):*\n> ```cpp\n>   alts_tsi_handshaker* handshaker =\n>       reinterpret_cast<alts_tsi_handshaker*>(self);\n>   tsi_result ok = alts_handshaker_client_cancel(handshaker->client);\n> ```\n\nSuggest changing `ok` to `result`, since we don't actually know whether the value is OK. :)\n\n---\n\n*[test/core/tsi/alts/handshaker/alts_tsi_handshaker_test.cc, line 460 at r1](https://reviewable.io/reviews/grpc/grpc/15265#-LBbwHUn23f8nOZVp9en:-LBbwHUn23f8nOZVp9eo:b-bskh8j) ([raw file](https://github.com/grpc/grpc/blob/4559d60a7e309fd9e2fb4ea36a705ef8d7c3f0c3/test/core/tsi/alts/handshaker/alts_tsi_handshaker_test.cc#L460)):*\n> ```cpp\n>   /* next(success) -- cancel (success) -- next (fail) */\n>   GPR_ASSERT(tsi_handshaker_next(handshaker, nullptr, 0, nullptr, nullptr,\n>                                  nullptr, on_client_start_success_cb,\n> ```\n\n`on_client_start_success_cb()` seems like the wrong callback to use here, because it expects success.  In this case, we're going to shut down the handshaker, so we should expect the callback to be invoked with a failure.\n\nNote that there is a potential race condition here -- under normal circumstances, we won't be able to tell whether the callback gets invoked before or after we do the cancellation.  So we will probably need to do something in this test to ensure that the client does not return a result to the handshaker until after we cancel it.\n\nUpdate: I now see that you are testing the case where the handshaker result comes back after the shutdown in `check_handle_response_after_cancel()` below.  Is there something in this test here that ensures that `on_client_start_success_cb()` will always be invoked before the shutdown occurs?  If so, please document.\n\nAlso, if that's true, then I suggest renaming this test case to `check_handshaker_next_fails_after_shutdown()`, to make it clear what's being tested here.\n\n---\n\n*[test/core/tsi/alts/handshaker/alts_tsi_handshaker_test.cc, line 483 at r1](https://reviewable.io/reviews/grpc/grpc/15265#-LBbxQ9u6rNSdK1-T32Z:-LBbxQ9u6rNSdK1-T32_:bhoi8o5) ([raw file](https://github.com/grpc/grpc/blob/4559d60a7e309fd9e2fb4ea36a705ef8d7c3f0c3/test/core/tsi/alts/handshaker/alts_tsi_handshaker_test.cc#L483)):*\n> ```cpp\n> }\n> \n> static void check_handshaker_cancel_next_failure() {\n> ```\n\nAs I mentioned elsewhere, I don't think the shutdown should ever fail, so I don't think this test is useful.\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io/reviews/grpc/grpc/15265#-:-LBbznLb34W2L3ZXjfQX:b-rb4wxi)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/386660669",
    "html_url": "https://github.com/grpc/grpc/pull/15265#issuecomment-386660669",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15265",
    "id": 386660669,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjY2MDY2OQ==",
    "user": {
      "login": "jiangtaoli2016",
      "id": 19913700,
      "node_id": "MDQ6VXNlcjE5OTEzNzAw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/19913700?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jiangtaoli2016",
      "html_url": "https://github.com/jiangtaoli2016",
      "followers_url": "https://api.github.com/users/jiangtaoli2016/followers",
      "following_url": "https://api.github.com/users/jiangtaoli2016/following{/other_user}",
      "gists_url": "https://api.github.com/users/jiangtaoli2016/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jiangtaoli2016/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jiangtaoli2016/subscriptions",
      "organizations_url": "https://api.github.com/users/jiangtaoli2016/orgs",
      "repos_url": "https://api.github.com/users/jiangtaoli2016/repos",
      "events_url": "https://api.github.com/users/jiangtaoli2016/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jiangtaoli2016/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-04T16:47:51Z",
    "updated_at": "2018-05-04T16:47:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "\n\n\n\nReview status: all files reviewed at latest revision, 8 unresolved discussions, some commit checks failed.\n\n---\n\n*[src/core/tsi/transport_security_adapter.cc, line 151 at r1](https://reviewable.io/reviews/grpc/grpc/15265#-LBfw3K6ALh1WE2J7YCk:-LBfw3K6ALh1WE2J7YCl:b5num6u) ([raw file](https://github.com/grpc/grpc/blob/4559d60a7e309fd9e2fb4ea36a705ef8d7c3f0c3/src/core/tsi/transport_security_adapter.cc#L151)):*\n> ```cpp\n> }\n> \n> static tsi_result adapter_cancel_next(tsi_handshaker* self) {\n> ```\n\nThe purpose of adapter is to wrap legacy implementation of old sync interface. It is safe to just return TSI_OK directly (or no-op if this function has no return value).\n\n---\n\n*[src/core/tsi/transport_security_adapter.cc, line 225 at r1](https://reviewable.io/reviews/grpc/grpc/15265#-LBbrNkO0Ve-NDBWO_QH:-LBfx-M82Us7Ou8puMNY:b-4havk8) ([raw file](https://github.com/grpc/grpc/blob/4559d60a7e309fd9e2fb4ea36a705ef8d7c3f0c3/src/core/tsi/transport_security_adapter.cc#L225)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nNot really related to the rest of this PR, but is this adaptor is still needed?  I thought we added this primarily as a transition mechanism while we were converting to the new async TSI API, but I thought that process was complete already.\n</blockquote></details>\n\nMost of migration has completed. Here are two remaining one\n1. SSL_transport_security still uses old API, thus need adapter. It should not be too hard to change.\n2. There is an internal customer still uses old TSI API. It does not use grpc security_handshaker though. Until they migrate, we cannot kill legacy API. However, we could get rid of adapter once (1) is done.\n\n---\n\n*[src/core/tsi/transport_security_interface.h, line 451 at r1](https://reviewable.io/reviews/grpc/grpc/15265#-LBbpqfs3lrV5Ki_aWM_:-LBfy6vZB4fhSsAtGkvj:bv99734) ([raw file](https://github.com/grpc/grpc/blob/4559d60a7e309fd9e2fb4ea36a705ef8d7c3f0c3/src/core/tsi/transport_security_interface.h#L451)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nConsider having this just return `void`, because there's no possible way this operation can fail.  All of the cases I see where this actually fails are just programmer errors (e.g., passing in a null or uninitialized handshaker), for which we can just use assertions.\n</blockquote></details>\n\n+1  void should be good.\n\n---\n\n*[src/core/tsi/transport_security_interface.h, line 451 at r1](https://reviewable.io/reviews/grpc/grpc/15265#-LBbqWQo7-O4ufoCEqPm:-LBfysVy2B0PBc02or5F:buweo3c) ([raw file](https://github.com/grpc/grpc/blob/4559d60a7e309fd9e2fb4ea36a705ef8d7c3f0c3/src/core/tsi/transport_security_interface.h#L451)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nSeeing this PR, I now realize that calling this method does more than simply cancel a single pending call to `next()`; it actually invalidates the entire handshaker.  As a result, I suggest calling this method `tsi_handshaker_shutdown()`.\n</blockquote></details>\n\nI think we want to be crystal clear on what the meaning of this function. If we call shutdown, then it cannot be no-op for sync TSI (SSL, fake, etc.). For sync TSI, calling shutdown will mark internal state as \"shutdown\" and fail all the future TSI calls.\n\nAlternatively, we can still call cancel_next(), which will void the pending next call. But we still allow future tsi_handshaker_next() call.\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io/reviews/grpc/grpc/15265)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/386662238",
    "html_url": "https://github.com/grpc/grpc/pull/15265#issuecomment-386662238",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15265",
    "id": 386662238,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjY2MjIzOA==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-04T16:53:58Z",
    "updated_at": "2018-05-04T16:53:58Z",
    "author_association": "MEMBER",
    "body": "\n\n\n\nReview status: all files reviewed at latest revision, 9 unresolved discussions, some commit checks failed.\n\n---\n\n*[src/core/tsi/transport_security_interface.h, line 451 at r1](https://reviewable.io/reviews/grpc/grpc/15265#-LBbqWQo7-O4ufoCEqPm:-LBg34FYESJP4rZlnAcn:bxzs5hg) ([raw file](https://github.com/grpc/grpc/blob/4559d60a7e309fd9e2fb4ea36a705ef8d7c3f0c3/src/core/tsi/transport_security_interface.h#L451)):*\n<details><summary><i>Previously, jiangtaoli2016 (Jiangtao Li) wrote…</i></summary><blockquote>\n\nI think we want to be crystal clear on what the meaning of this function. If we call shutdown, then it cannot be no-op for sync TSI (SSL, fake, etc.). For sync TSI, calling shutdown will mark internal state as \"shutdown\" and fail all the future TSI calls.\n\nAlternatively, we can still call cancel_next(), which will void the pending next call. But we still allow future tsi_handshaker_next() call.\n</blockquote></details>\n\nOnce we cancel a pending call to `next()`, don't we leave the handshaker in an undefined state?  To ask this another way, isn't it the case that there is no possible way a subsequent call to `next()` can succeed?\n\nAssuming the answer to those questions is yes, then I don't think it makes snese to allow future calls to `next()`.  So I think we should disallow that for both sync and async handshakers.\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io/reviews/grpc/grpc/15265)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/386669515",
    "html_url": "https://github.com/grpc/grpc/pull/15265#issuecomment-386669515",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15265",
    "id": 386669515,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjY2OTUxNQ==",
    "user": {
      "login": "jiangtaoli2016",
      "id": 19913700,
      "node_id": "MDQ6VXNlcjE5OTEzNzAw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/19913700?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jiangtaoli2016",
      "html_url": "https://github.com/jiangtaoli2016",
      "followers_url": "https://api.github.com/users/jiangtaoli2016/followers",
      "following_url": "https://api.github.com/users/jiangtaoli2016/following{/other_user}",
      "gists_url": "https://api.github.com/users/jiangtaoli2016/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jiangtaoli2016/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jiangtaoli2016/subscriptions",
      "organizations_url": "https://api.github.com/users/jiangtaoli2016/orgs",
      "repos_url": "https://api.github.com/users/jiangtaoli2016/repos",
      "events_url": "https://api.github.com/users/jiangtaoli2016/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jiangtaoli2016/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-04T17:22:28Z",
    "updated_at": "2018-05-04T17:22:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "\n\n\n\nReview status: all files reviewed at latest revision, 9 unresolved discussions, some commit checks failed.\n\n---\n\n*[src/core/tsi/transport_security_interface.h, line 451 at r1](https://reviewable.io/reviews/grpc/grpc/15265#-LBbqWQo7-O4ufoCEqPm:-LBg5Cpf1dY3P-5jyklU:b-rylygf) ([raw file](https://github.com/grpc/grpc/blob/4559d60a7e309fd9e2fb4ea36a705ef8d7c3f0c3/src/core/tsi/transport_security_interface.h#L451)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nOnce we cancel a pending call to `next()`, don't we leave the handshaker in an undefined state?  To ask this another way, isn't it the case that there is no possible way a subsequent call to `next()` can succeed?\n\nAssuming the answer to those questions is yes, then I don't think it makes snese to allow future calls to `next()`.  So I think we should disallow that for both sync and async handshakers.\n</blockquote></details>\n\nIn the handshaker service model, TSI handshaker client just passes bytes to handshaker service and return bytes to peer until handshake completes. Technically, one could call next() and immediately cancel the RPC call to the handshaker service, such that subsequent call to next() still succeed. In gRPC security_handshaker, we only call cancel when we plan to shutdown. \n\nChatted with Yihua offline. We are fine with calling it tsi_handshaker_shutdown. In this case, he will also change Fake, SSL, and internal TSI to shutdown state when calling tsi_handshaker_shutdown, rather than no-op.\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io/reviews/grpc/grpc/15265)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/386693704",
    "html_url": "https://github.com/grpc/grpc/pull/15265#issuecomment-386693704",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15265",
    "id": 386693704,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjY5MzcwNA==",
    "user": {
      "login": "yihuazhang",
      "id": 26934891,
      "node_id": "MDQ6VXNlcjI2OTM0ODkx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/26934891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yihuazhang",
      "html_url": "https://github.com/yihuazhang",
      "followers_url": "https://api.github.com/users/yihuazhang/followers",
      "following_url": "https://api.github.com/users/yihuazhang/following{/other_user}",
      "gists_url": "https://api.github.com/users/yihuazhang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yihuazhang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yihuazhang/subscriptions",
      "organizations_url": "https://api.github.com/users/yihuazhang/orgs",
      "repos_url": "https://api.github.com/users/yihuazhang/repos",
      "events_url": "https://api.github.com/users/yihuazhang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yihuazhang/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-04T18:30:53Z",
    "updated_at": "2018-05-04T18:30:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "\n\n\n\nReview status: all files reviewed at latest revision, 9 unresolved discussions, some commit checks failed.\n\n---\n\n*[src/core/tsi/transport_security.h, line 83 at r1](https://reviewable.io/reviews/grpc/grpc/15265#-LBbqocH4_Mzu0efXvaK:-LBfn4y2EGagwZZavFyY:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/4559d60a7e309fd9e2fb4ea36a705ef8d7c3f0c3/src/core/tsi/transport_security.h#L83)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nSuggest calling this `shutdown`.\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/tsi/transport_security_interface.h, line 451 at r1](https://reviewable.io/reviews/grpc/grpc/15265#-LBbpqfs3lrV5Ki_aWM_:-LBfpbf-00gEiI34__YK:b1vhxt4) ([raw file](https://github.com/grpc/grpc/blob/4559d60a7e309fd9e2fb4ea36a705ef8d7c3f0c3/src/core/tsi/transport_security_interface.h#L451)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nConsider having this just return `void`, because there's no possible way this operation can fail.  All of the cases I see where this actually fails are just programmer errors (e.g., passing in a null or uninitialized handshaker), for which we can just use assertions.\n</blockquote></details>\n\nGood suggestion. The code is revised.\n\n---\n\n*[src/core/tsi/transport_security_interface.h, line 451 at r1](https://reviewable.io/reviews/grpc/grpc/15265#-LBbqWQo7-O4ufoCEqPm:-LBftb4iA2pH0qU63A7L:bedq909) ([raw file](https://github.com/grpc/grpc/blob/4559d60a7e309fd9e2fb4ea36a705ef8d7c3f0c3/src/core/tsi/transport_security_interface.h#L451)):*\n<details><summary><i>Previously, jiangtaoli2016 (Jiangtao Li) wrote…</i></summary><blockquote>\n\nIn the handshaker service model, TSI handshaker client just passes bytes to handshaker service and return bytes to peer until handshake completes. Technically, one could call next() and immediately cancel the RPC call to the handshaker service, such that subsequent call to next() still succeed. In gRPC security_handshaker, we only call cancel when we plan to shutdown. \n\nChatted with Yihua offline. We are fine with calling it tsi_handshaker_shutdown. In this case, he will also change Fake, SSL, and internal TSI to shutdown state when calling tsi_handshaker_shutdown, rather than no-op.\n</blockquote></details>\n\nFor Fake, SSL, and internal TSI, I set `handshake_shutdown` to true once `tsi_handshake_shutdown()' is invoked, and prevent any successive `tsi_handshake_next()' from being invoked. Do we also need to clean up any states? which I should be handled by `tsi_handshaker_destroy()`. \n\n---\n\n*[src/core/tsi/alts/handshaker/alts_handshaker_client.h, line 111 at r1](https://reviewable.io/reviews/grpc/grpc/15265#-LBbt35D6yvWBgvstPSr:-LBftdMsDIqiHVPUpVec:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/4559d60a7e309fd9e2fb4ea36a705ef8d7c3f0c3/src/core/tsi/alts/handshaker/alts_handshaker_client.h#L111)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nSimilar to my comment elsewhere, I suggest calling this `alts_handshaker_client_shutdown()`.\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/tsi/alts/handshaker/alts_tsi_handshaker.cc, line 291 at r1](https://reviewable.io/reviews/grpc/grpc/15265#-LBbtJYZ2-FRPfTTnJd_:-LBftgrj1EZwVeQp99Bu:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/4559d60a7e309fd9e2fb4ea36a705ef8d7c3f0c3/src/core/tsi/alts/handshaker/alts_tsi_handshaker.cc#L291)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nSuggest changing `ok` to `result`, since we don't actually know whether the value is OK. :)\n</blockquote></details>\n\nDone.\n\n---\n\n*[test/core/tsi/alts/handshaker/alts_tsi_handshaker_test.cc, line 460 at r1](https://reviewable.io/reviews/grpc/grpc/15265#-LBbwHUn23f8nOZVp9en:-LBgD0YR1CuKqSde2b9e:bru89o3) ([raw file](https://github.com/grpc/grpc/blob/4559d60a7e309fd9e2fb4ea36a705ef8d7c3f0c3/test/core/tsi/alts/handshaker/alts_tsi_handshaker_test.cc#L460)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\n`on_client_start_success_cb()` seems like the wrong callback to use here, because it expects success.  In this case, we're going to shut down the handshaker, so we should expect the callback to be invoked with a failure.\n\nNote that there is a potential race condition here -- under normal circumstances, we won't be able to tell whether the callback gets invoked before or after we do the cancellation.  So we will probably need to do something in this test to ensure that the client does not return a result to the handshaker until after we cancel it.\n\nUpdate: I now see that you are testing the case where the handshaker result comes back after the shutdown in `check_handle_response_after_cancel()` below.  Is there something in this test here that ensures that `on_client_start_success_cb()` will always be invoked before the shutdown occurs?  If so, please document.\n\nAlso, if that's true, then I suggest renaming this test case to `check_handshaker_next_fails_after_shutdown()`, to make it clear what's being tested here.\n</blockquote></details>\n\nIn this test,  the callback `on_client_start_success_cb` will not be executed. The reason for passing it (instead of setting to null)  is to make sure `tsi_handshaker_next()` will succeed. Because there will be sanity checks conducted on the callback in `mock_client_start()`. I added the comments to make it more clear.\n\n---\n\n*[test/core/tsi/alts/handshaker/alts_tsi_handshaker_test.cc, line 483 at r1](https://reviewable.io/reviews/grpc/grpc/15265#-LBbxQ9u6rNSdK1-T32Z:-LBgBGPqAQG_sVPxZlGi:b6xs05w) ([raw file](https://github.com/grpc/grpc/blob/4559d60a7e309fd9e2fb4ea36a705ef8d7c3f0c3/test/core/tsi/alts/handshaker/alts_tsi_handshaker_test.cc#L483)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nAs I mentioned elsewhere, I don't think the shutdown should ever fail, so I don't think this test is useful.\n</blockquote></details>\n\nThe test is removed.           \n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io/reviews/grpc/grpc/15265)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/386693795",
    "html_url": "https://github.com/grpc/grpc/pull/15265#issuecomment-386693795",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15265",
    "id": 386693795,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjY5Mzc5NQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-04T18:31:17Z",
    "updated_at": "2018-05-04T18:31:17Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE                                                                           FILE SIZE\n ++++++++++++++ GROWING                                                             ++++++++++++++\n  +0.1%    +878 [None]                                                              +8.75Ki  +0.1%\n      +0.1%    +838 [Unmapped]                                                          +8.71Ki  +0.1%\n       +14%     +32 handshaker_vtable                                                       +32   +14%\n      +0.6%      +8 vtable                                                                   +8  +0.6%\n  +5.7%    +250 src/core/tsi/alts/handshaker/alts_tsi_handshaker.cc                    +250  +5.7%\n      [NEW]     +91 handshaker_shutdown                                                     +91  [NEW]\n      +5.8%     +72 alts_tsi_handshaker_handle_response                                     +72  +5.8%\n       +13%     +72 handshaker_next                                                         +72   +13%\n       +12%     +10 [Unmapped]                                                              +10   +12%\n      [NEW]      +5 grpc_core::internal::alts_tsi_handshaker_get_client_for_testing          +5  [NEW]\n  +7.0%    +192 src/core/tsi/alts/handshaker/alts_handshaker_client.cc                 +192  +7.0%\n      [NEW]    +123 handshaker_client_shutdown                                             +123  [NEW]\n      [NEW]     +63 alts_handshaker_client_shutdown                                         +63  [NEW]\n      +7.8%      +6 [Unmapped]                                                               +6  +7.8%\n  +3.8%    +176 src/core/tsi/fake_transport_security.cc                                +176  +3.8%\n       +10%    +166 fake_handshaker_next                                                   +166   +10%\n      [NEW]     +50 tsi_fake_handshake_message_to_string(int) [clone .part.0]               +50  [NEW]\n      +2.6%      +5 [Unmapped]                                                               +5  +2.6%\n      [NEW]      +5 fake_handshaker_shutdown                                                 +5  [NEW]\n  +8.7%     +96 src/core/tsi/transport_security_adapter.cc                              +96  +8.7%\n       +12%     +75 adapter_next                                                            +75   +12%\n       +12%     +12 [Unmapped]                                                              +12   +12%\n      [NEW]      +9 adapter_shutdown                                                         +9  [NEW]\n  +2.3%     +48 src/core/tsi/transport_security.cc                                      +48  +2.3%\n      [NEW]     +34 tsi_handshaker_shutdown                                                 +34  [NEW]\n      +7.7%     +14 [Unmapped]                                                              +14  +7.7%\n  +0.1%     +16 src/core/tsi/ssl_transport_security.cc                                  +16  +0.1%\n      +2.8%     +11 [Unmapped]                                                              +11  +2.8%\n      [NEW]      +5 ssl_handshaker_shutdown                                                  +5  [NEW]\n\n  +0.1% +1.62Ki TOTAL                                                               +9.51Ki  +0.1%\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE        FILE SIZE\n ++++++++++++++  ++++++++++++++\n\n  [ = ]       0        0  [ = ]\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/386695766",
    "html_url": "https://github.com/grpc/grpc/pull/15265#issuecomment-386695766",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15265",
    "id": 386695766,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjY5NTc2Ng==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-04T18:38:34Z",
    "updated_at": "2018-05-04T18:38:34Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/386698133",
    "html_url": "https://github.com/grpc/grpc/pull/15265#issuecomment-386698133",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15265",
    "id": 386698133,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjY5ODEzMw==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-04T18:47:37Z",
    "updated_at": "2018-05-04T18:47:37Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE                                                                           FILE SIZE\n ++++++++++++++ GROWING                                                             ++++++++++++++\n  +0.1%    +878 [None]                                                              +8.72Ki  +0.1%\n      +0.1%    +838 [Unmapped]                                                          +8.69Ki  +0.1%\n       +14%     +32 handshaker_vtable                                                       +32   +14%\n      +0.6%      +8 vtable                                                                   +8  +0.6%\n  +5.7%    +250 src/core/tsi/alts/handshaker/alts_tsi_handshaker.cc                    +250  +5.7%\n      [NEW]     +91 handshaker_shutdown                                                     +91  [NEW]\n      +5.8%     +72 alts_tsi_handshaker_handle_response                                     +72  +5.8%\n       +13%     +72 handshaker_next                                                         +72   +13%\n       +12%     +10 [Unmapped]                                                              +10   +12%\n      [NEW]      +5 grpc_core::internal::alts_tsi_handshaker_get_client_for_testing          +5  [NEW]\n  +7.0%    +192 src/core/tsi/alts/handshaker/alts_handshaker_client.cc                 +192  +7.0%\n      [NEW]    +123 handshaker_client_shutdown                                             +123  [NEW]\n      [NEW]     +63 alts_handshaker_client_shutdown                                         +63  [NEW]\n      +7.8%      +6 [Unmapped]                                                               +6  +7.8%\n  +3.8%    +176 src/core/tsi/fake_transport_security.cc                                +176  +3.8%\n       +10%    +166 fake_handshaker_next                                                   +166   +10%\n      [NEW]     +50 tsi_fake_handshake_message_to_string(int) [clone .part.0]               +50  [NEW]\n      +2.6%      +5 [Unmapped]                                                               +5  +2.6%\n      [NEW]      +5 fake_handshaker_shutdown                                                 +5  [NEW]\n  +8.7%     +96 src/core/tsi/transport_security_adapter.cc                              +96  +8.7%\n       +12%     +75 adapter_next                                                            +75   +12%\n       +12%     +12 [Unmapped]                                                              +12   +12%\n      [NEW]      +9 adapter_shutdown                                                         +9  [NEW]\n  +2.3%     +48 src/core/tsi/transport_security.cc                                      +48  +2.3%\n      [NEW]     +34 tsi_handshaker_shutdown                                                 +34  [NEW]\n      +7.7%     +14 [Unmapped]                                                              +14  +7.7%\n  +0.1%     +16 src/core/tsi/ssl_transport_security.cc                                  +16  +0.1%\n      +2.8%     +11 [Unmapped]                                                              +11  +2.8%\n      [NEW]      +5 ssl_handshaker_shutdown                                                  +5  [NEW]\n\n  +0.1% +1.62Ki TOTAL                                                               +9.48Ki  +0.1%\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE        FILE SIZE\n ++++++++++++++  ++++++++++++++\n\n  [ = ]       0        0  [ = ]\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/386700155",
    "html_url": "https://github.com/grpc/grpc/pull/15265#issuecomment-386700155",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15265",
    "id": 386700155,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjcwMDE1NQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-04T18:55:44Z",
    "updated_at": "2018-05-04T18:55:44Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/386706938",
    "html_url": "https://github.com/grpc/grpc/pull/15265#issuecomment-386706938",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15265",
    "id": 386706938,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjcwNjkzOA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-04T19:23:12Z",
    "updated_at": "2018-05-04T19:23:12Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/386711475",
    "html_url": "https://github.com/grpc/grpc/pull/15265#issuecomment-386711475",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15265",
    "id": 386711475,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjcxMTQ3NQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-04T19:39:12Z",
    "updated_at": "2018-05-04T19:39:12Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/387113910",
    "html_url": "https://github.com/grpc/grpc/pull/15265#issuecomment-387113910",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15265",
    "id": 387113910,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzExMzkxMA==",
    "user": {
      "login": "jiangtaoli2016",
      "id": 19913700,
      "node_id": "MDQ6VXNlcjE5OTEzNzAw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/19913700?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jiangtaoli2016",
      "html_url": "https://github.com/jiangtaoli2016",
      "followers_url": "https://api.github.com/users/jiangtaoli2016/followers",
      "following_url": "https://api.github.com/users/jiangtaoli2016/following{/other_user}",
      "gists_url": "https://api.github.com/users/jiangtaoli2016/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jiangtaoli2016/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jiangtaoli2016/subscriptions",
      "organizations_url": "https://api.github.com/users/jiangtaoli2016/orgs",
      "repos_url": "https://api.github.com/users/jiangtaoli2016/repos",
      "events_url": "https://api.github.com/users/jiangtaoli2016/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jiangtaoli2016/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-07T16:02:12Z",
    "updated_at": "2018-05-07T16:02:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "@yihuazhang you shall update PR title and description"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/387122596",
    "html_url": "https://github.com/grpc/grpc/pull/15265#issuecomment-387122596",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15265",
    "id": 387122596,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzEyMjU5Ng==",
    "user": {
      "login": "yihuazhang",
      "id": 26934891,
      "node_id": "MDQ6VXNlcjI2OTM0ODkx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/26934891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yihuazhang",
      "html_url": "https://github.com/yihuazhang",
      "followers_url": "https://api.github.com/users/yihuazhang/followers",
      "following_url": "https://api.github.com/users/yihuazhang/following{/other_user}",
      "gists_url": "https://api.github.com/users/yihuazhang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yihuazhang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yihuazhang/subscriptions",
      "organizations_url": "https://api.github.com/users/yihuazhang/orgs",
      "repos_url": "https://api.github.com/users/yihuazhang/repos",
      "events_url": "https://api.github.com/users/yihuazhang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yihuazhang/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-07T16:30:10Z",
    "updated_at": "2018-05-07T16:30:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jiangtaoli2016 \r\n\r\nThanks for reminding jiangtao. The text is updated. "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/387135960",
    "html_url": "https://github.com/grpc/grpc/pull/15265#issuecomment-387135960",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15265",
    "id": 387135960,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzEzNTk2MA==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-07T17:13:21Z",
    "updated_at": "2018-05-07T17:13:21Z",
    "author_association": "MEMBER",
    "body": "There's just one significant issue here, which is the behavior in the test where the callback is not being invoked upon shutdown.  Otherwise, this looks really good.\n\n---\n\nReviewed 8 of 12 files at r2, 4 of 4 files at r3.\nReview status: all files reviewed at latest revision, 5 unresolved discussions, some commit checks failed.\n\n---\n\n*[src/core/tsi/transport_security_interface.h, line 451 at r1](https://reviewable.io/reviews/grpc/grpc/15265#-LBbqWQo7-O4ufoCEqPm:-LBvZ7Bx6d4e93NLCcpy:bsw5w1l) ([raw file](https://github.com/grpc/grpc/blob/4559d60a7e309fd9e2fb4ea36a705ef8d7c3f0c3/src/core/tsi/transport_security_interface.h#L451)):*\n<details><summary><i>Previously, yihuazhang (yihuaz) wrote…</i></summary><blockquote>\n\nFor Fake, SSL, and internal TSI, I set `handshake_shutdown` to true once `tsi_handshake_shutdown()' is invoked, and prevent any successive `tsi_handshake_next()' from being invoked. Do we also need to clean up any states? which I should be handled by `tsi_handshaker_destroy()`. \n</blockquote></details>\n\nNo need to clean up; that will happen as a result of the callbacks being invoked after the shutdown.\n\n---\n\n*[src/core/tsi/alts/handshaker/alts_handshaker_client.cc, line 317 at r3](https://reviewable.io/reviews/grpc/grpc/15265#-LBvZZxnBYlvKZMdth9I:-LBvZZxnBYlvKZMdth9J:b8f0jjk) ([raw file](https://github.com/grpc/grpc/blob/317dad1d4de3a8c4ae85ec7af4ca503e08e80779/src/core/tsi/alts/handshaker/alts_handshaker_client.cc#L317)):*\n> ```cpp\n>   if (client != nullptr && client->vtable != nullptr &&\n>       client->vtable->shutdown != nullptr) {\n>     return client->vtable->shutdown(client);\n> ```\n\nWill this actually compile, given that the function returns void?\n\n---\n\n*[src/core/tsi/alts/handshaker/alts_tsi_handshaker.cc, line 299 at r3](https://reviewable.io/reviews/grpc/grpc/15265#-LBv_0t3BotbSd6RUVdU:-LBv_0t45Shw80Mc5FZA:b-ptb3wg) ([raw file](https://github.com/grpc/grpc/blob/317dad1d4de3a8c4ae85ec7af4ca503e08e80779/src/core/tsi/alts/handshaker/alts_tsi_handshaker.cc#L299)):*\n> ```cpp\n>     return;\n>   }\n>   handshaker_shutdown(self);\n> ```\n\nWhy add this here?  In general, destroy should not call shutdown.\n\n---\n\n*[test/core/tsi/alts/handshaker/alts_tsi_handshaker_test.cc, line 460 at r1](https://reviewable.io/reviews/grpc/grpc/15265#-LBbwHUn23f8nOZVp9en:-LBv_Mg2EVriX4uIS3Jn:b4ghrdz) ([raw file](https://github.com/grpc/grpc/blob/4559d60a7e309fd9e2fb4ea36a705ef8d7c3f0c3/test/core/tsi/alts/handshaker/alts_tsi_handshaker_test.cc#L460)):*\n<details><summary><i>Previously, yihuazhang (yihuaz) wrote…</i></summary><blockquote>\n\nIn this test,  the callback `on_client_start_success_cb` will not be executed. The reason for passing it (instead of setting to null)  is to make sure `tsi_handshaker_next()` will succeed. Because there will be sanity checks conducted on the callback in `mock_client_start()`. I added the comments to make it more clear.\n</blockquote></details>\n\nI think this behavior is wrong.  If there is a pending callback when shutdown() is called, it should result in the callback being invoked with an error.\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io/reviews/grpc/grpc/15265#-:-LBv_qyaATfyKuJPPISH:b-hq1r5y)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/387139357",
    "html_url": "https://github.com/grpc/grpc/pull/15265#issuecomment-387139357",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15265",
    "id": 387139357,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzEzOTM1Nw==",
    "user": {
      "login": "jiangtaoli2016",
      "id": 19913700,
      "node_id": "MDQ6VXNlcjE5OTEzNzAw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/19913700?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jiangtaoli2016",
      "html_url": "https://github.com/jiangtaoli2016",
      "followers_url": "https://api.github.com/users/jiangtaoli2016/followers",
      "following_url": "https://api.github.com/users/jiangtaoli2016/following{/other_user}",
      "gists_url": "https://api.github.com/users/jiangtaoli2016/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jiangtaoli2016/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jiangtaoli2016/subscriptions",
      "organizations_url": "https://api.github.com/users/jiangtaoli2016/orgs",
      "repos_url": "https://api.github.com/users/jiangtaoli2016/repos",
      "events_url": "https://api.github.com/users/jiangtaoli2016/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jiangtaoli2016/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-07T17:25:34Z",
    "updated_at": "2018-05-07T17:25:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "\n\n\n\nReview status: all files reviewed at latest revision, 7 unresolved discussions, some commit checks failed.\n\n---\n\n*[src/core/tsi/fake_transport_security.cc, line 680 at r2](https://reviewable.io/reviews/grpc/grpc/15265#-LBvXaud17i4uQP3GisI:-LBvXaud17i4uQP3GisJ:b-58pkyl) ([raw file](https://github.com/grpc/grpc/blob/bf4b69609a3359521be9015345b9c06f680dae2b/src/core/tsi/fake_transport_security.cc#L680)):*\n> ```cpp\n>   }\n>   if (self->handshake_shutdown) {\n>     gpr_log(GPR_ERROR, \"TSI handshake shutdown\");\n> ```\n\nnit. maybe \"TSI handshake in shutdown state\"?\n\nThink this more, maybe we should not check here. See my other comment\n\n---\n\n*[src/core/tsi/ssl_transport_security.cc, line 1176 at r2](https://reviewable.io/reviews/grpc/grpc/15265#-LBvY-VX0bk2-VH4ejQH:-LBvY-VX0bk2-VH4ejQI:boj6mm6) ([raw file](https://github.com/grpc/grpc/blob/bf4b69609a3359521be9015345b9c06f680dae2b/src/core/tsi/ssl_transport_security.cc#L1176)):*\n> ```cpp\n> }\n> \n> static void ssl_handshaker_shutdown(tsi_handshaker* self) {\n> ```\n\nIt does not seem that you have done anything to prevent future tsi handshaker calls. \n\nSince shutdown is in tsi_handshaker struct, instead of doing check and previous future calls in each TSI implementation (ssl, fake, ...). You can do the check in transport_security.cc and if a tsi_handshaker call is made in shutdown state, you just return error before going to vtable. \n\nSee frame_protector_created as an example.\n\n---\n\n*[src/core/tsi/ssl_transport_security.cc, line 1177 at r2](https://reviewable.io/reviews/grpc/grpc/15265#-LBvXqMH2jQFDg-K8L1N:-LBvXqMH2jQFDg-K8L1O:b-ox6fny) ([raw file](https://github.com/grpc/grpc/blob/bf4b69609a3359521be9015345b9c06f680dae2b/src/core/tsi/ssl_transport_security.cc#L1177)):*\n> ```cpp\n> \n> static void ssl_handshaker_shutdown(tsi_handshaker* self) {\n>   /* no-op */\n> ```\n\ndelete no-op comment.\n\n---\n\n*[src/core/tsi/transport_security_interface.h, line 451 at r1](https://reviewable.io/reviews/grpc/grpc/15265#-LBbqWQo7-O4ufoCEqPm:-LBvcQBY9U27dwTTpHO9:b-sw1fg8) ([raw file](https://github.com/grpc/grpc/blob/4559d60a7e309fd9e2fb4ea36a705ef8d7c3f0c3/src/core/tsi/transport_security_interface.h#L451)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nNo need to clean up; that will happen as a result of the callbacks being invoked after the shutdown.\n</blockquote></details>\n\nFor consistency of TSI API, once tsi_handshake_shutdown() is called, all future tsi_handshake calls (except destroy) should return failure, not just tsi_handshaker_next(). It should be simple fix in transport_security.cc\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io/reviews/grpc/grpc/15265)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/387153809",
    "html_url": "https://github.com/grpc/grpc/pull/15265#issuecomment-387153809",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15265",
    "id": 387153809,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzE1MzgwOQ==",
    "user": {
      "login": "yihuazhang",
      "id": 26934891,
      "node_id": "MDQ6VXNlcjI2OTM0ODkx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/26934891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yihuazhang",
      "html_url": "https://github.com/yihuazhang",
      "followers_url": "https://api.github.com/users/yihuazhang/followers",
      "following_url": "https://api.github.com/users/yihuazhang/following{/other_user}",
      "gists_url": "https://api.github.com/users/yihuazhang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yihuazhang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yihuazhang/subscriptions",
      "organizations_url": "https://api.github.com/users/yihuazhang/orgs",
      "repos_url": "https://api.github.com/users/yihuazhang/repos",
      "events_url": "https://api.github.com/users/yihuazhang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yihuazhang/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-07T18:12:23Z",
    "updated_at": "2018-05-07T18:12:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "\n\n\n\nReview status: all files reviewed at latest revision, 10 unresolved discussions, some commit checks failed.\n\n---\n\n*[src/core/tsi/transport_security_interface.h, line 451 at r1](https://reviewable.io/reviews/grpc/grpc/15265#-LBbqWQo7-O4ufoCEqPm:-LBvcICC9oVFyiCOroOk:b-j5hb1p) ([raw file](https://github.com/grpc/grpc/blob/4559d60a7e309fd9e2fb4ea36a705ef8d7c3f0c3/src/core/tsi/transport_security_interface.h#L451)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nNo need to clean up; that will happen as a result of the callbacks being invoked after the shutdown.\n</blockquote></details>\n\nThanks for clarification.\n\n---\n\n*[src/core/tsi/alts/handshaker/alts_handshaker_client.cc, line 317 at r3](https://reviewable.io/reviews/grpc/grpc/15265#-LBvZZxnBYlvKZMdth9I:-LBvciE32chYzzb9lzvU:b5lksmi) ([raw file](https://github.com/grpc/grpc/blob/317dad1d4de3a8c4ae85ec7af4ca503e08e80779/src/core/tsi/alts/handshaker/alts_handshaker_client.cc#L317)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nWill this actually compile, given that the function returns void?\n</blockquote></details>\n\nCode is revised.\n\n---\n\n*[src/core/tsi/alts/handshaker/alts_tsi_handshaker.cc, line 299 at r3](https://reviewable.io/reviews/grpc/grpc/15265#-LBv_0t3BotbSd6RUVdU:-LBvcw4FAWQrwvqPnIIv:b-3jirar) ([raw file](https://github.com/grpc/grpc/blob/317dad1d4de3a8c4ae85ec7af4ca503e08e80779/src/core/tsi/alts/handshaker/alts_tsi_handshaker.cc#L299)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nWhy add this here?  In general, destroy should not call shutdown.\n</blockquote></details>\n\nI considered a situation when a client invokes a `tsi_handshaker_destroy()` right after `tsi_handshaker_next()', and with a shutdown being invoked, we could exit the program in a cleaner way (e.g., by correctly handling an orphaned callback returned from handshaker service). \n\n---\n\n*[test/core/tsi/alts/handshaker/alts_tsi_handshaker_test.cc, line 460 at r1](https://reviewable.io/reviews/grpc/grpc/15265#-LBbwHUn23f8nOZVp9en:-LBvkFtf0gngdXJmpPfy:b-rt1i1j) ([raw file](https://github.com/grpc/grpc/blob/4559d60a7e309fd9e2fb4ea36a705ef8d7c3f0c3/test/core/tsi/alts/handshaker/alts_tsi_handshaker_test.cc#L460)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nI think this behavior is wrong.  If there is a pending callback when shutdown() is called, it should result in the callback being invoked with an error.\n</blockquote></details>\n\nSorry for the confusion. \n\n`check_handshaker_next_fails_after_shutdown` mainly tests that after shutdown is invoked, `tsi_handshaker_next` will return `TSI_HANDSHAKE_SHUTDOWN`. Since the handshake request has not been scheduled, there will not be any callbacks to get invoked in this test. I think the case you are referring to is `check_handle_response_after_shutdown` which tests a situation pending callbacks will get invoked with an error if shutdown() is called. To be more clear, we have two separate tests - `check_handshaker_next_fails_after_shutdown` and `check_handle_response_after_shutdown` that test after shutdown() is called, `tsi_handshaker_next()` will always fail and pending  callbacks will get invoked with an error, respectively. \n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io/reviews/grpc/grpc/15265)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/387155053",
    "html_url": "https://github.com/grpc/grpc/pull/15265#issuecomment-387155053",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15265",
    "id": 387155053,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzE1NTA1Mw==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-07T18:16:44Z",
    "updated_at": "2018-05-07T18:16:44Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE                                                                           FILE SIZE\n ++++++++++++++ GROWING                                                             ++++++++++++++\n  +0.1%    +878 [None]                                                              +8.72Ki  +0.1%\n      +0.1%    +870 [Unmapped]                                                          +8.69Ki  +0.1%\n       +14%     +32 handshaker_vtable                                                       +32   +14%\n      +0.6%      +8 vtable                                                                   +8  +0.6%\n  +5.7%    +250 src/core/tsi/alts/handshaker/alts_tsi_handshaker.cc                    +250  +5.7%\n      [NEW]     +91 handshaker_shutdown                                                     +91  [NEW]\n      +5.8%     +72 alts_tsi_handshaker_handle_response                                     +72  +5.8%\n       +13%     +72 handshaker_next                                                         +72   +13%\n       +12%     +10 [Unmapped]                                                              +10   +12%\n      [NEW]      +5 grpc_core::internal::alts_tsi_handshaker_get_client_for_testing          +5  [NEW]\n  +7.0%    +192 src/core/tsi/alts/handshaker/alts_handshaker_client.cc                 +192  +7.0%\n      [NEW]    +123 handshaker_client_shutdown                                             +123  [NEW]\n      [NEW]     +63 alts_handshaker_client_shutdown                                         +63  [NEW]\n      +7.8%      +6 [Unmapped]                                                               +6  +7.8%\n  +3.8%    +176 src/core/tsi/fake_transport_security.cc                                +176  +3.8%\n       +10%    +166 fake_handshaker_next                                                   +166   +10%\n      [NEW]     +50 tsi_fake_handshake_message_to_string(int) [clone .part.0]               +50  [NEW]\n      +2.6%      +5 [Unmapped]                                                               +5  +2.6%\n      [NEW]      +5 fake_handshaker_shutdown                                                 +5  [NEW]\n  +8.7%     +96 src/core/tsi/transport_security_adapter.cc                              +96  +8.7%\n       +12%     +75 adapter_next                                                            +75   +12%\n       +12%     +12 [Unmapped]                                                              +12   +12%\n      [NEW]      +9 adapter_shutdown                                                         +9  [NEW]\n  +2.3%     +48 src/core/tsi/transport_security.cc                                      +48  +2.3%\n      [NEW]     +34 tsi_handshaker_shutdown                                                 +34  [NEW]\n      +7.7%     +14 [Unmapped]                                                              +14  +7.7%\n  +0.1%     +16 src/core/tsi/ssl_transport_security.cc                                  +16  +0.1%\n      +2.8%     +11 [Unmapped]                                                              +11  +2.8%\n      [NEW]      +5 ssl_handshaker_shutdown                                                  +5  [NEW]\n\n  +0.1% +1.62Ki TOTAL                                                               +9.48Ki  +0.1%\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE        FILE SIZE\n ++++++++++++++  ++++++++++++++\n\n  [ = ]       0        0  [ = ]\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/387157660",
    "html_url": "https://github.com/grpc/grpc/pull/15265#issuecomment-387157660",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15265",
    "id": 387157660,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzE1NzY2MA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-07T18:25:28Z",
    "updated_at": "2018-05-07T18:25:28Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/387162380",
    "html_url": "https://github.com/grpc/grpc/pull/15265#issuecomment-387162380",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15265",
    "id": 387162380,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzE2MjM4MA==",
    "user": {
      "login": "yihuazhang",
      "id": 26934891,
      "node_id": "MDQ6VXNlcjI2OTM0ODkx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/26934891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yihuazhang",
      "html_url": "https://github.com/yihuazhang",
      "followers_url": "https://api.github.com/users/yihuazhang/followers",
      "following_url": "https://api.github.com/users/yihuazhang/following{/other_user}",
      "gists_url": "https://api.github.com/users/yihuazhang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yihuazhang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yihuazhang/subscriptions",
      "organizations_url": "https://api.github.com/users/yihuazhang/orgs",
      "repos_url": "https://api.github.com/users/yihuazhang/repos",
      "events_url": "https://api.github.com/users/yihuazhang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yihuazhang/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-07T18:41:20Z",
    "updated_at": "2018-05-07T18:41:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "\n\n\n\nReview status: all files reviewed at latest revision, 10 unresolved discussions, some commit checks failed.\n\n---\n\n*[src/core/tsi/fake_transport_security.cc, line 680 at r2](https://reviewable.io/reviews/grpc/grpc/15265#-LBvXaud17i4uQP3GisI:-LBvpoMU0YC2X-zcS32c:b-54snbz) ([raw file](https://github.com/grpc/grpc/blob/bf4b69609a3359521be9015345b9c06f680dae2b/src/core/tsi/fake_transport_security.cc#L680)):*\n<details><summary><i>Previously, jiangtaoli2016 (Jiangtao Li) wrote…</i></summary><blockquote>\n\nnit. maybe \"TSI handshake in shutdown state\"?\n\nThink this more, maybe we should not check here. See my other comment\n</blockquote></details>\n\nAcknowledged.\n\n---\n\n*[src/core/tsi/ssl_transport_security.cc, line 1176 at r2](https://reviewable.io/reviews/grpc/grpc/15265#-LBvY-VX0bk2-VH4ejQH:-LBvq0hjEiMo8SkhVt6b:b-61uurh) ([raw file](https://github.com/grpc/grpc/blob/bf4b69609a3359521be9015345b9c06f680dae2b/src/core/tsi/ssl_transport_security.cc#L1176)):*\n<details><summary><i>Previously, jiangtaoli2016 (Jiangtao Li) wrote…</i></summary><blockquote>\n\nIt does not seem that you have done anything to prevent future tsi handshaker calls. \n\nSince shutdown is in tsi_handshaker struct, instead of doing check and previous future calls in each TSI implementation (ssl, fake, ...). You can do the check in transport_security.cc and if a tsi_handshaker call is made in shutdown state, you just return error before going to vtable. \n\nSee frame_protector_created as an example.\n</blockquote></details>\n\nAha, good suggestion. The code is revised. PTAL.\n\n---\n\n*[src/core/tsi/ssl_transport_security.cc, line 1177 at r2](https://reviewable.io/reviews/grpc/grpc/15265#-LBvXqMH2jQFDg-K8L1N:-LBvpzPw6Pge3M_fDbeE:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/bf4b69609a3359521be9015345b9c06f680dae2b/src/core/tsi/ssl_transport_security.cc#L1177)):*\n<details><summary><i>Previously, jiangtaoli2016 (Jiangtao Li) wrote…</i></summary><blockquote>\n\ndelete no-op comment.\n</blockquote></details>\n\nDone.\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io/reviews/grpc/grpc/15265)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/387163412",
    "html_url": "https://github.com/grpc/grpc/pull/15265#issuecomment-387163412",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15265",
    "id": 387163412,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzE2MzQxMg==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-07T18:44:53Z",
    "updated_at": "2018-05-07T18:44:53Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE                                                                           FILE SIZE\n ++++++++++++++ GROWING                                                             ++++++++++++++\n  +0.1%    +886 [None]                                                              +7.19Ki  +0.1%\n      +0.1%    +878 [Unmapped]                                                          +7.15Ki  +0.1%\n       +14%     +32 handshaker_vtable                                                       +32   +14%\n      +0.6%      +8 vtable                                                                   +8  +0.6%\n  +5.7%    +250 src/core/tsi/alts/handshaker/alts_tsi_handshaker.cc                    +250  +5.7%\n      [NEW]     +91 handshaker_shutdown                                                     +91  [NEW]\n      +5.8%     +72 alts_tsi_handshaker_handle_response                                     +72  +5.8%\n       +13%     +72 handshaker_next                                                         +72   +13%\n       +12%     +10 [Unmapped]                                                              +10   +12%\n      [NEW]      +5 grpc_core::internal::alts_tsi_handshaker_get_client_for_testing          +5  [NEW]\n  +7.0%    +192 src/core/tsi/alts/handshaker/alts_handshaker_client.cc                 +192  +7.0%\n      [NEW]    +123 handshaker_client_shutdown                                             +123  [NEW]\n      [NEW]     +63 alts_handshaker_client_shutdown                                         +63  [NEW]\n      +7.8%      +6 [Unmapped]                                                               +6  +7.8%\n  +4.7%     +96 src/core/tsi/transport_security.cc                                      +96  +4.7%\n      [NEW]     +34 tsi_handshaker_shutdown                                                 +34  [NEW]\n       +23%     +16 tsi_handshaker_next                                                     +16   +23%\n       +23%     +16 tsi_handshaker_get_result                                               +16   +23%\n      +5.5%     +10 [Unmapped]                                                              +10  +5.5%\n      +6.6%      +9 tsi_handshaker_extract_peer                                              +9  +6.6%\n      +8.6%      +6 tsi_handshaker_process_bytes_from_peer                                   +6  +8.6%\n      +7.1%      +5 tsi_handshaker_get_bytes_to_send_to_peer                                 +5  +7.1%\n  +8.7%     +96 src/core/tsi/transport_security_adapter.cc                              +96  +8.7%\n       +12%     +75 adapter_next                                                            +75   +12%\n       +12%     +12 [Unmapped]                                                              +12   +12%\n      [NEW]      +9 adapter_shutdown                                                         +9  [NEW]\n  +0.3%     +16 src/core/tsi/fake_transport_security.cc                                 +16  +0.3%\n      +5.7%     +11 [Unmapped]                                                              +11  +5.7%\n      [NEW]      +5 fake_handshaker_shutdown                                                 +5  [NEW]\n  +0.1%     +16 src/core/tsi/ssl_transport_security.cc                                  +16  +0.1%\n      +2.8%     +11 [Unmapped]                                                              +11  +2.8%\n      [NEW]      +5 ssl_handshaker_shutdown                                                  +5  [NEW]\n\n  +0.1% +1.52Ki TOTAL                                                               +7.84Ki  +0.1%\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE        FILE SIZE\n ++++++++++++++  ++++++++++++++\n\n  [ = ]       0        0  [ = ]\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/387165919",
    "html_url": "https://github.com/grpc/grpc/pull/15265#issuecomment-387165919",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15265",
    "id": 387165919,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzE2NTkxOQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-07T18:53:14Z",
    "updated_at": "2018-05-07T18:53:14Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/387169594",
    "html_url": "https://github.com/grpc/grpc/pull/15265#issuecomment-387169594",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15265",
    "id": 387169594,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzE2OTU5NA==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-07T19:04:56Z",
    "updated_at": "2018-05-07T19:04:56Z",
    "author_association": "MEMBER",
    "body": "\n\n\n\nReviewed 1 of 1 files at r4, 2 of 2 files at r5.\nReview status: all files reviewed at latest revision, 10 unresolved discussions.\n\n---\n\n*[src/core/tsi/ssl_transport_security.cc, line 1176 at r2](https://reviewable.io/reviews/grpc/grpc/15265#-LBvY-VX0bk2-VH4ejQH:-LBvvxgJ8ogf4z8b94n6:bqrlgy3) ([raw file](https://github.com/grpc/grpc/blob/bf4b69609a3359521be9015345b9c06f680dae2b/src/core/tsi/ssl_transport_security.cc#L1176)):*\n<details><summary><i>Previously, yihuazhang (yihuaz) wrote…</i></summary><blockquote>\n\nAha, good suggestion. The code is revised. PTAL.\n</blockquote></details>\n\nSimilarly, how about setting `self->handsake_shutdown` to true in `tsi_handshaker_shutdown()` instead of doing this in each individual subclass?\n\n---\n\n*[src/core/tsi/alts/handshaker/alts_handshaker_client.cc, line 317 at r3](https://reviewable.io/reviews/grpc/grpc/15265#-LBvZZxnBYlvKZMdth9I:-LBvwV9J9GFkXS8EufdG:bc90jyq) ([raw file](https://github.com/grpc/grpc/blob/317dad1d4de3a8c4ae85ec7af4ca503e08e80779/src/core/tsi/alts/handshaker/alts_handshaker_client.cc#L317)):*\n<details><summary><i>Previously, yihuazhang (yihuaz) wrote…</i></summary><blockquote>\n\nCode is revised.\n</blockquote></details>\n\nStill need a `return` here, or else we'll incorrectly log the message below.\n\nAlternatively, consider just removing the log line below.\n\n---\n\n*[src/core/tsi/alts/handshaker/alts_tsi_handshaker.cc, line 299 at r3](https://reviewable.io/reviews/grpc/grpc/15265#-LBv_0t3BotbSd6RUVdU:-LBvx3or5XHumXlB0GjQ:b3wgqix) ([raw file](https://github.com/grpc/grpc/blob/317dad1d4de3a8c4ae85ec7af4ca503e08e80779/src/core/tsi/alts/handshaker/alts_tsi_handshaker.cc#L299)):*\n<details><summary><i>Previously, yihuazhang (yihuaz) wrote…</i></summary><blockquote>\n\nI considered a situation when a client invokes a `tsi_handshaker_destroy()` right after `tsi_handshaker_next()', and with a shutdown being invoked, we could exit the program in a cleaner way (e.g., by correctly handling an orphaned callback returned from handshaker service). \n</blockquote></details>\n\nI don't think this is safe.\n\nIt is unsafe for the caller to destroy the handshaker while there is a callback pending.  If the caller calls destroy when there is a callback pending, then calling shutdown here won't help, because shutdown will trigger the callback to be invoked, but the destroy call may finish before the callback is actually invoked, because there's no guarantee that the callback will be invoked in the same thread.\n\nThe only safe way to do this is to document the fact that the caller must not call destroy until there are no callbacks pending.  If there are already no callbacks pending when the caller wants to destroy the handshaker, it can do so directly; if there are pending callbacks, the caller must call shutdown and wait for the callback to be invoked before calling destroy.\n\n---\n\n*[test/core/tsi/alts/handshaker/alts_tsi_handshaker_test.cc, line 460 at r1](https://reviewable.io/reviews/grpc/grpc/15265#-LBbwHUn23f8nOZVp9en:-LBvyuCGDWIU_t7DnzVi:b-ts8aac) ([raw file](https://github.com/grpc/grpc/blob/4559d60a7e309fd9e2fb4ea36a705ef8d7c3f0c3/test/core/tsi/alts/handshaker/alts_tsi_handshaker_test.cc#L460)):*\n<details><summary><i>Previously, yihuazhang (yihuaz) wrote…</i></summary><blockquote>\n\nSorry for the confusion. \n\n`check_handshaker_next_fails_after_shutdown` mainly tests that after shutdown is invoked, `tsi_handshaker_next` will return `TSI_HANDSHAKE_SHUTDOWN`. Since the handshake request has not been scheduled, there will not be any callbacks to get invoked in this test. I think the case you are referring to is `check_handle_response_after_shutdown` which tests a situation pending callbacks will get invoked with an error if shutdown() is called. To be more clear, we have two separate tests - `check_handshaker_next_fails_after_shutdown` and `check_handle_response_after_shutdown` that test after shutdown() is called, `tsi_handshaker_next()` will always fail and pending  callbacks will get invoked with an error, respectively. \n</blockquote></details>\n\nHow do we know from reading this test that the callback has not been scheduled?  In particular, since the call to next is returning TSI_ASYNC, it looks like the callback should be scheduled.\n\nIf the goal here is to just check that subsequent calls to next won't work, then how about changing the handshaker used in this test to be synchronous?\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io/reviews/grpc/grpc/15265)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/387170626",
    "html_url": "https://github.com/grpc/grpc/pull/15265#issuecomment-387170626",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15265",
    "id": 387170626,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzE3MDYyNg==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-07T19:08:34Z",
    "updated_at": "2018-05-07T19:08:34Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/387178400",
    "html_url": "https://github.com/grpc/grpc/pull/15265#issuecomment-387178400",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15265",
    "id": 387178400,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzE3ODQwMA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-07T19:36:47Z",
    "updated_at": "2018-05-07T19:36:47Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/387256048",
    "html_url": "https://github.com/grpc/grpc/pull/15265#issuecomment-387256048",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15265",
    "id": 387256048,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzI1NjA0OA==",
    "user": {
      "login": "yihuazhang",
      "id": 26934891,
      "node_id": "MDQ6VXNlcjI2OTM0ODkx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/26934891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yihuazhang",
      "html_url": "https://github.com/yihuazhang",
      "followers_url": "https://api.github.com/users/yihuazhang/followers",
      "following_url": "https://api.github.com/users/yihuazhang/following{/other_user}",
      "gists_url": "https://api.github.com/users/yihuazhang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yihuazhang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yihuazhang/subscriptions",
      "organizations_url": "https://api.github.com/users/yihuazhang/orgs",
      "repos_url": "https://api.github.com/users/yihuazhang/repos",
      "events_url": "https://api.github.com/users/yihuazhang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yihuazhang/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-08T01:29:07Z",
    "updated_at": "2018-05-08T01:29:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "\n\n\n\nReview status: all files reviewed at latest revision, 10 unresolved discussions, some commit checks failed.\n\n---\n\n*[src/core/tsi/ssl_transport_security.cc, line 1176 at r2](https://reviewable.io/reviews/grpc/grpc/15265#-LBvY-VX0bk2-VH4ejQH:-LBxD7QZ68FkG_uhA4Lf:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/bf4b69609a3359521be9015345b9c06f680dae2b/src/core/tsi/ssl_transport_security.cc#L1176)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nSimilarly, how about setting `self->handsake_shutdown` to true in `tsi_handshaker_shutdown()` instead of doing this in each individual subclass?\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/tsi/alts/handshaker/alts_handshaker_client.cc, line 317 at r3](https://reviewable.io/reviews/grpc/grpc/15265#-LBvZZxnBYlvKZMdth9I:-LBxAqfoAgEkEnbE-ync:b86libo) ([raw file](https://github.com/grpc/grpc/blob/317dad1d4de3a8c4ae85ec7af4ca503e08e80779/src/core/tsi/alts/handshaker/alts_handshaker_client.cc#L317)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nStill need a `return` here, or else we'll incorrectly log the message below.\n\nAlternatively, consider just removing the log line below.\n</blockquote></details>\n\nOops, my bad. The log is removed now.\n\n---\n\n*[src/core/tsi/alts/handshaker/alts_tsi_handshaker.cc, line 299 at r3](https://reviewable.io/reviews/grpc/grpc/15265#-LBv_0t3BotbSd6RUVdU:-LBxBfK80_ixzO4R7mkD:b-f93iui) ([raw file](https://github.com/grpc/grpc/blob/317dad1d4de3a8c4ae85ec7af4ca503e08e80779/src/core/tsi/alts/handshaker/alts_tsi_handshaker.cc#L299)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nI don't think this is safe.\n\nIt is unsafe for the caller to destroy the handshaker while there is a callback pending.  If the caller calls destroy when there is a callback pending, then calling shutdown here won't help, because shutdown will trigger the callback to be invoked, but the destroy call may finish before the callback is actually invoked, because there's no guarantee that the callback will be invoked in the same thread.\n\nThe only safe way to do this is to document the fact that the caller must not call destroy until there are no callbacks pending.  If there are already no callbacks pending when the caller wants to destroy the handshaker, it can do so directly; if there are pending callbacks, the caller must call shutdown and wait for the callback to be invoked before calling destroy.\n</blockquote></details>\n\nThanks for the explanation, and I agree that documenting the fact is a safe way to do. The shutdown is removed now. \n\n---\n\n*[test/core/tsi/alts/handshaker/alts_tsi_handshaker_test.cc, line 460 at r1](https://reviewable.io/reviews/grpc/grpc/15265#-LBbwHUn23f8nOZVp9en:-LBxFW82-nAx1q-rgint:b-mmsk9v) ([raw file](https://github.com/grpc/grpc/blob/4559d60a7e309fd9e2fb4ea36a705ef8d7c3f0c3/test/core/tsi/alts/handshaker/alts_tsi_handshaker_test.cc#L460)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nHow do we know from reading this test that the callback has not been scheduled?  In particular, since the call to next is returning TSI_ASYNC, it looks like the callback should be scheduled.\n\nIf the goal here is to just check that subsequent calls to next won't work, then how about changing the handshaker used in this test to be synchronous?\n</blockquote></details>\n\nThe handshaker used in the test is already synchronous since there is only a single thread (caller thread, not TSI thread) involved. (F.Y.I we have both caller and TSI threads in `check_handshaker_success` test , where the callback indeed gets scheduled and invoked.) \n\nIn this test, in the first `tsi_handshaker_next`, it invokes `mock_client_start` which calls `signal(&caller_to_tsi_notification)` at the end. Unlike `check_handshaker_success` test  which signals the TSI thread to invoke the callback, the signal in this test does nothing as there only exists a caller thread. \n\nSince we only want to test the fact that the subsequent calls to next won't work, I think it's fine to use a single thread mode and manually calls `tsi_handshaker_next` after the shutdown. \n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io/reviews/grpc/grpc/15265)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/387256479",
    "html_url": "https://github.com/grpc/grpc/pull/15265#issuecomment-387256479",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15265",
    "id": 387256479,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzI1NjQ3OQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-08T01:31:45Z",
    "updated_at": "2018-05-08T01:31:45Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE                                                                           FILE SIZE\n ++++++++++++++ GROWING                                                             ++++++++++++++\n  +0.1%    +870 [None]                                                              +7.19Ki  +0.1%\n      +0.1%    +862 [Unmapped]                                                          +7.15Ki  +0.1%\n       +14%     +32 handshaker_vtable                                                       +32   +14%\n      +0.6%      +8 vtable                                                                   +8  +0.6%\n  +5.4%    +234 src/core/tsi/alts/handshaker/alts_tsi_handshaker.cc                    +234  +5.4%\n      [NEW]     +79 handshaker_shutdown                                                     +79  [NEW]\n      +5.8%     +72 alts_tsi_handshaker_handle_response                                     +72  +5.8%\n       +13%     +72 handshaker_next                                                         +72   +13%\n      +7.1%      +6 [Unmapped]                                                               +6  +7.1%\n      [NEW]      +5 grpc_core::internal::alts_tsi_handshaker_get_client_for_testing          +5  [NEW]\n  +6.4%    +176 src/core/tsi/alts/handshaker/alts_handshaker_client.cc                 +176  +6.4%\n      [NEW]    +123 handshaker_client_shutdown                                             +123  [NEW]\n      [NEW]     +34 alts_handshaker_client_shutdown                                         +34  [NEW]\n       +25%     +19 [Unmapped]                                                              +19   +25%\n  +4.7%     +96 src/core/tsi/transport_security.cc                                      +96  +4.7%\n      [NEW]     +34 tsi_handshaker_shutdown                                                 +34  [NEW]\n       +23%     +16 tsi_handshaker_next                                                     +16   +23%\n       +23%     +16 tsi_handshaker_get_result                                               +16   +23%\n      +5.5%     +10 [Unmapped]                                                              +10  +5.5%\n      +6.6%      +9 tsi_handshaker_extract_peer                                              +9  +6.6%\n      +8.6%      +6 tsi_handshaker_process_bytes_from_peer                                   +6  +8.6%\n      +7.1%      +5 tsi_handshaker_get_bytes_to_send_to_peer                                 +5  +7.1%\n  +8.7%     +96 src/core/tsi/transport_security_adapter.cc                              +96  +8.7%\n       +12%     +75 adapter_next                                                            +75   +12%\n       +12%     +12 [Unmapped]                                                              +12   +12%\n      [NEW]      +9 adapter_shutdown                                                         +9  [NEW]\n  +0.3%     +16 src/core/tsi/fake_transport_security.cc                                 +16  +0.3%\n      +7.3%     +14 [Unmapped]                                                              +14  +7.3%\n      [NEW]      +2 fake_handshaker_shutdown                                                 +2  [NEW]\n  +0.1%     +16 src/core/tsi/ssl_transport_security.cc                                  +16  +0.1%\n      +3.5%     +14 [Unmapped]                                                              +14  +3.5%\n      [NEW]      +2 ssl_handshaker_shutdown                                                  +2  [NEW]\n\n  +0.1% +1.47Ki TOTAL                                                               +7.81Ki  +0.1%\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE        FILE SIZE\n ++++++++++++++  ++++++++++++++\n\n  [ = ]       0        0  [ = ]\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/387257832",
    "html_url": "https://github.com/grpc/grpc/pull/15265#issuecomment-387257832",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15265",
    "id": 387257832,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzI1NzgzMg==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-08T01:40:35Z",
    "updated_at": "2018-05-08T01:40:35Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  }
]
