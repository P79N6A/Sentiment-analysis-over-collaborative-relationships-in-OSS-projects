[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/410356801",
    "html_url": "https://github.com/grpc/grpc/issues/16239#issuecomment-410356801",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16239",
    "id": 410356801,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDM1NjgwMQ==",
    "user": {
      "login": "apolcyn",
      "id": 9566254,
      "node_id": "MDQ6VXNlcjk1NjYyNTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9566254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apolcyn",
      "html_url": "https://github.com/apolcyn",
      "followers_url": "https://api.github.com/users/apolcyn/followers",
      "following_url": "https://api.github.com/users/apolcyn/following{/other_user}",
      "gists_url": "https://api.github.com/users/apolcyn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apolcyn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apolcyn/subscriptions",
      "organizations_url": "https://api.github.com/users/apolcyn/orgs",
      "repos_url": "https://api.github.com/users/apolcyn/repos",
      "events_url": "https://api.github.com/users/apolcyn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apolcyn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-03T19:42:51Z",
    "updated_at": "2018-08-03T19:42:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "^edit: typo, meant to say that \"this is even when we have the default value of `wait_for_ready=false`\""
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/410406858",
    "html_url": "https://github.com/grpc/grpc/issues/16239#issuecomment-410406858",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16239",
    "id": 410406858,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDQwNjg1OA==",
    "user": {
      "login": "AspirinSJL",
      "id": 3314176,
      "node_id": "MDQ6VXNlcjMzMTQxNzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3314176?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AspirinSJL",
      "html_url": "https://github.com/AspirinSJL",
      "followers_url": "https://api.github.com/users/AspirinSJL/followers",
      "following_url": "https://api.github.com/users/AspirinSJL/following{/other_user}",
      "gists_url": "https://api.github.com/users/AspirinSJL/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AspirinSJL/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AspirinSJL/subscriptions",
      "organizations_url": "https://api.github.com/users/AspirinSJL/orgs",
      "repos_url": "https://api.github.com/users/AspirinSJL/repos",
      "events_url": "https://api.github.com/users/AspirinSJL/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AspirinSJL/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-04T00:22:59Z",
    "updated_at": "2018-08-04T00:22:59Z",
    "author_association": "MEMBER",
    "body": "1. The retry is expected. Once RR starts picking, it will keep watching all the subchannels. To keep watching subchannel means to keep trying to connect to it.\r\n\r\n2. You are seeing different error codes for different runs because of different timeline of the connection failures. https://github.com/grpc/grpc/blob/7c3d13d440debe4b67e05e186a8e8e0d2b4f4918/src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc#L477 shows how we aggregate the connectivity states of the subchannels. Note that the RR will be in `CONNECTING` if the states are mixed of `CONNECTING` and `TRANSIENT_FAILURE`. By comparing the logs for successful cases and failed cases of your tests, I believe the error code will be `UNAVAILABLE` (fail fast) if all the subchannel are in `TRANSIENT_FAILURE`. But if some subchannel is faster than others which makes the states mixed, we will always be in `CONNECTING`, so the error code will be `DEADLINE_EXCEEDED`.\r\n\r\nI feel this behavior is intended. The users should expect the call to fail. But the specific error code might be changing."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/410864619",
    "html_url": "https://github.com/grpc/grpc/issues/16239#issuecomment-410864619",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16239",
    "id": 410864619,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDg2NDYxOQ==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-06T21:52:49Z",
    "updated_at": "2018-08-06T21:52:49Z",
    "author_association": "MEMBER",
    "body": "Looks like the underlying problem here is that round_robin will only report TRANSIENT_FAILURE when all of its subchannels are in that state, but we're not reporting that state because at least one subchannel is in CONNECTING state at any given time.\r\n\r\nHmmm... Actually, I bet this was triggered by the way that we changed subchannels to report CONNECTING instead of TRANSIENT_FAILURE while in backoff state in #16076.  We should probably revert that PR and instead bite the bullet and move the backoff code up into the LB policies.\r\n\r\nAlso, let's add a test like the one shown above to ensure that we don't accidentally break round_robin again in the future.\r\n\r\n@AspirinSJL, let's chat about the best way to move the backoff code."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/410889835",
    "html_url": "https://github.com/grpc/grpc/issues/16239#issuecomment-410889835",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16239",
    "id": 410889835,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDg4OTgzNQ==",
    "user": {
      "login": "AspirinSJL",
      "id": 3314176,
      "node_id": "MDQ6VXNlcjMzMTQxNzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3314176?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AspirinSJL",
      "html_url": "https://github.com/AspirinSJL",
      "followers_url": "https://api.github.com/users/AspirinSJL/followers",
      "following_url": "https://api.github.com/users/AspirinSJL/following{/other_user}",
      "gists_url": "https://api.github.com/users/AspirinSJL/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AspirinSJL/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AspirinSJL/subscriptions",
      "organizations_url": "https://api.github.com/users/AspirinSJL/orgs",
      "repos_url": "https://api.github.com/users/AspirinSJL/repos",
      "events_url": "https://api.github.com/users/AspirinSJL/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AspirinSJL/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-07T00:01:05Z",
    "updated_at": "2018-08-07T00:01:05Z",
    "author_association": "MEMBER",
    "body": "Instead of reverting #16076, I think we can just revert the connectivity change. To fix the test flake that change fixed, we can extract part of #16176 out to check the connectivity before we start watching, like what RR is doing."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/411127382",
    "html_url": "https://github.com/grpc/grpc/issues/16239#issuecomment-411127382",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16239",
    "id": 411127382,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTEyNzM4Mg==",
    "user": {
      "login": "AspirinSJL",
      "id": 3314176,
      "node_id": "MDQ6VXNlcjMzMTQxNzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3314176?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AspirinSJL",
      "html_url": "https://github.com/AspirinSJL",
      "followers_url": "https://api.github.com/users/AspirinSJL/followers",
      "following_url": "https://api.github.com/users/AspirinSJL/following{/other_user}",
      "gists_url": "https://api.github.com/users/AspirinSJL/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AspirinSJL/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AspirinSJL/subscriptions",
      "organizations_url": "https://api.github.com/users/AspirinSJL/orgs",
      "repos_url": "https://api.github.com/users/AspirinSJL/repos",
      "events_url": "https://api.github.com/users/AspirinSJL/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AspirinSJL/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-07T16:56:31Z",
    "updated_at": "2018-08-07T16:56:31Z",
    "author_association": "MEMBER",
    "body": "I've verified that merging #16176 can fix the `ClientLbEnd2endTest.PickFirstBackOffInitialReconnect` flake. To avoid the overhead, I prefer focusing on #16176.\r\n\r\nDeferring the backoff change to https://github.com/grpc/grpc/issues/16272."
  }
]
