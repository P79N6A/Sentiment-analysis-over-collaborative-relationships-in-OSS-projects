[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/456149465",
    "html_url": "https://github.com/grpc/grpc/issues/17761#issuecomment-456149465",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17761",
    "id": 456149465,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NjE0OTQ2NQ==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-21T17:31:39Z",
    "updated_at": "2019-01-21T17:38:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "First results:\r\n\r\nI am able to reproduce a variant of this issue:\r\n1. once the RPC starts, server quickly sends all its responses and status to the client (and finishes the response stream).\r\n2. a while later (once the call has actually finished on the serverside), the client request cancellation of the call (regardless of via responseStream.MoveNext(cancellationToken) or via call.Cancel()). \r\n\r\nthis seems to mess with the way C-core delivers the responses (they are lost, probably because of the cancellation request), but C-core still propagates the status received from the server up to the C# layer (the call on server side ended with Status.OK, so this is what gets reported to C# (despite the cancellation request),\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/456307920",
    "html_url": "https://github.com/grpc/grpc/issues/17761#issuecomment-456307920",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17761",
    "id": 456307920,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NjMwNzkyMA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-22T08:14:01Z",
    "updated_at": "2019-01-22T08:14:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jskeet  can you confirm that replacing `await streamingCall.ResponseHeadersAsync` by `await Task.Delay(3000)` also reproduces the same issue? (which would support the theory described above, as waiting for response headers probably waits long enough so that all the responses are delivered to the client before MoveNext() starts which then creates the problem)?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/456344015",
    "html_url": "https://github.com/grpc/grpc/issues/17761#issuecomment-456344015",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17761",
    "id": 456344015,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NjM0NDAxNQ==",
    "user": {
      "login": "jskeet",
      "id": 17011,
      "node_id": "MDQ6VXNlcjE3MDEx",
      "avatar_url": "https://avatars1.githubusercontent.com/u/17011?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jskeet",
      "html_url": "https://github.com/jskeet",
      "followers_url": "https://api.github.com/users/jskeet/followers",
      "following_url": "https://api.github.com/users/jskeet/following{/other_user}",
      "gists_url": "https://api.github.com/users/jskeet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jskeet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jskeet/subscriptions",
      "organizations_url": "https://api.github.com/users/jskeet/orgs",
      "repos_url": "https://api.github.com/users/jskeet/repos",
      "events_url": "https://api.github.com/users/jskeet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jskeet/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-22T10:12:39Z",
    "updated_at": "2019-01-22T10:12:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "Confirmed - yes, that shows the same result."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/459813198",
    "html_url": "https://github.com/grpc/grpc/issues/17761#issuecomment-459813198",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17761",
    "id": 459813198,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTgxMzE5OA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-01T18:06:12Z",
    "updated_at": "2019-02-01T18:06:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "After some investigation, I have a lead what could be the problem.\r\nIt looks like that under the circumstances described above, C-core reports a problem with the read via setting the arg `success` to false (which is an unusual scenario). In C# code, we happen to treat that as a null message (thus ending the stream and expecting the call statusCode will be non-ok), but in this call the status' status received from the server is actually OK, so the call is treated as successful:\r\nhttps://github.com/grpc/grpc/blob/343c2286af2bd31efa8277d4ef50f79b27490677/src/csharp/Grpc.Core/Internal/AsyncCallBase.cs#L343\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/470025429",
    "html_url": "https://github.com/grpc/grpc/issues/17761#issuecomment-470025429",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17761",
    "id": 470025429,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDAyNTQyOQ==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-06T09:02:01Z",
    "updated_at": "2019-03-06T09:02:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "After not being able to sufficiently fix in the C# layer, I filed #18234 to investigate how this should be fixed in C core."
  }
]
