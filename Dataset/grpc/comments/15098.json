[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/382446324",
    "html_url": "https://github.com/grpc/grpc/issues/15098#issuecomment-382446324",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15098",
    "id": 382446324,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MjQ0NjMyNA==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-18T16:24:27Z",
    "updated_at": "2018-04-18T16:24:27Z",
    "author_association": "MEMBER",
    "body": "It's not quite clear what you're asking. Are you able to share with us the code that you are running? What value are you finding is being computed by or returned to your code, and what value would you rather be computed by or returned to your code?\r\n\r\nAlso with what programming language(s) are you working with Protocol Buffers and gRPC?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/382602030",
    "html_url": "https://github.com/grpc/grpc/issues/15098#issuecomment-382602030",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15098",
    "id": 382602030,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MjYwMjAzMA==",
    "user": {
      "login": "hscspring",
      "id": 7485553,
      "node_id": "MDQ6VXNlcjc0ODU1NTM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7485553?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hscspring",
      "html_url": "https://github.com/hscspring",
      "followers_url": "https://api.github.com/users/hscspring/followers",
      "following_url": "https://api.github.com/users/hscspring/following{/other_user}",
      "gists_url": "https://api.github.com/users/hscspring/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hscspring/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hscspring/subscriptions",
      "organizations_url": "https://api.github.com/users/hscspring/orgs",
      "repos_url": "https://api.github.com/users/hscspring/repos",
      "events_url": "https://api.github.com/users/hscspring/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hscspring/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-19T03:52:15Z",
    "updated_at": "2018-04-19T03:52:15Z",
    "author_association": "NONE",
    "body": "sorry for that.  i will try to make it clearer.  \r\n\r\nI have a Python server A (Algorithm), and Nodejs server B (Server of the App) need to request to A for a response.  \r\nB's request data like `{\"text\": \"xxxxx\", \"userinfo\": {\"userid\":\"123\", \"username\":\"ccc\",...}}`, and  \r\nA's response data like `[{\"noun\":\"string\", \"adj\":\"string\", \"location\":[int, int], ...}, {...}, ...]`.  \r\n\r\nI used zerorpc before, and now want to change it to grpc:) . \r\n\r\nAt first my solution is to define all my data structure with `.proto`, but i found it a little redundant.   \r\nThe reason is the function of A deal with the request data as a total (that is the function deal with \"userinfo\" as a dict, it does not need to know the details of the dict).  \r\n\r\nSo i want to know whether there is a data type can make all given data together, i know it may not a good way, but it's convenient. Then i used `json.dumps` to make **\"userinfo\" and the response data** to a string respectively, and when i need to use them, i use `json.loads` to recover the information.  \r\nIt seems somewhat weird...\r\n\r\nThis is my question, i am quite not sure that was a good solution or not ...  \r\n\r\nbtw, thanks a lot for your replay."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/383164506",
    "html_url": "https://github.com/grpc/grpc/issues/15098#issuecomment-383164506",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15098",
    "id": 383164506,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MzE2NDUwNg==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-20T17:20:44Z",
    "updated_at": "2018-04-20T17:20:44Z",
    "author_association": "MEMBER",
    "body": "I'm still very unclear on the particulars of your problem - are you able to share with us your `.proto` content (all of it) and your `.py` and `.js` content? I think it would really help to see in your `.proto` files what messages and services you have defined."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/383376630",
    "html_url": "https://github.com/grpc/grpc/issues/15098#issuecomment-383376630",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15098",
    "id": 383376630,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MzM3NjYzMA==",
    "user": {
      "login": "hscspring",
      "id": 7485553,
      "node_id": "MDQ6VXNlcjc0ODU1NTM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7485553?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hscspring",
      "html_url": "https://github.com/hscspring",
      "followers_url": "https://api.github.com/users/hscspring/followers",
      "following_url": "https://api.github.com/users/hscspring/following{/other_user}",
      "gists_url": "https://api.github.com/users/hscspring/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hscspring/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hscspring/subscriptions",
      "organizations_url": "https://api.github.com/users/hscspring/orgs",
      "repos_url": "https://api.github.com/users/hscspring/repos",
      "events_url": "https://api.github.com/users/hscspring/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hscspring/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-22T12:04:47Z",
    "updated_at": "2018-04-22T12:04:47Z",
    "author_association": "NONE",
    "body": "i am so sorry to cost your time...  \r\ni've made that quite simple and it works now. but the issue is still. here it is:  \r\n\r\n```\r\n# proto\r\nsyntax = \"proto3\";\r\npackage spc;\r\nservice Spc {\r\n    rpc GetResult(Input) returns (Output);\r\n}\r\n\r\nmessage Input {\r\n    string text = 1;\r\n    string userdict = 2;\r\n}\r\n\r\nmessage Output {\r\n    string result = 1;\r\n}\r\n\r\n\r\n## Server ##\r\nfrom concurrent import futures\r\nimport time\r\n\r\nimport grpc\r\nimport json\r\n\r\nimport spc_pb2\r\nimport spc_pb2_grpc\r\nimport my_module # it's a python file\r\n\r\n_ONE_DAY_IN_SECONDS = 60 * 60 * 24\r\n\r\nclass SpcServicer(spc_pb2_grpc.SpcServicer):\r\n    def __init__(self):\r\n        pass\r\n    \r\n    # i use json.loads and json.dumps to change the data into string\r\n    # but in fact, userdict is a dict and output is a list contains several dicts like the former comment\r\n    @staticmethod\r\n    def GetResult(request, context):\r\n        text = request.text\r\n        userdict = json.loads(request.userdict)\r\n        spc_output = module.function(text, userdict) # my function need two params\r\n        result = spc_pb2.Output(result=json.dumps(spc_output)) \r\n        return result\r\n\r\ndef serve():\r\n    server = grpc.server(futures.ThreadPoolExecutor(max_workers=10))\r\n    spc_pb2_grpc.add_SpcServicer_to_server(\r\n            SpcServicer(), server\r\n            )\r\n    server.add_insecure_port('[::]:50055')\r\n    server.start()\r\n    try:\r\n        while True:\r\n            time.sleep(_ONE_DAY_IN_SECONDS)\r\n    except KeyboardInterrupt:\r\n        server.stop(0)\r\n\r\nif __name__ == '__main__':\r\n    serve()\r\n\r\n\r\n## Client # For simple, i use python, it doesn't affect my explain ##\r\nimport json\r\nimport grpc\r\n\r\nimport spc_pb2\r\nimport spc_pb2_grpc\r\n\r\n\r\ndef get_result(stub, text, userdict):\r\n    input = spc_pb2.Input(text=text, userdict=json.dumps(userdict))\r\n    spc_output = stub.GetResult(spc_input)\r\n    result = json.loads(spc_output.result)\r\n    return result\r\n\r\ndef run():\r\n    channel = grpc.insecure_channel('localhost:50055')\r\n    stub = spc_pb2_grpc.SpcStub(channel)\r\n    print(\"----------GetResult----------\")\r\n    text = \"string...\"\r\n    userdict = {\"key1\": [\"value1\", \"value2\"], ...}\r\n    result = get_result(stub, text, userdict)\r\n    print(result)\r\n\r\nif __name__ == '__main__':\r\n    run()\r\n```\r\n\r\nmany thanks to u."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/383945691",
    "html_url": "https://github.com/grpc/grpc/issues/15098#issuecomment-383945691",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15098",
    "id": 383945691,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4Mzk0NTY5MQ==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-24T14:10:14Z",
    "updated_at": "2018-04-24T14:10:14Z",
    "author_association": "MEMBER",
    "body": "Thanks. That code looks like it works - does it work? If so, what's the problem? Is it that you'd like not to have to do the JSON serialization on both sides?\r\n\r\nHave you looked at defining in your .proto other kinds of messages and using them as submessages of your `Input` message?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/384134206",
    "html_url": "https://github.com/grpc/grpc/issues/15098#issuecomment-384134206",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15098",
    "id": 384134206,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDEzNDIwNg==",
    "user": {
      "login": "hscspring",
      "id": 7485553,
      "node_id": "MDQ6VXNlcjc0ODU1NTM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7485553?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hscspring",
      "html_url": "https://github.com/hscspring",
      "followers_url": "https://api.github.com/users/hscspring/followers",
      "following_url": "https://api.github.com/users/hscspring/following{/other_user}",
      "gists_url": "https://api.github.com/users/hscspring/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hscspring/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hscspring/subscriptions",
      "organizations_url": "https://api.github.com/users/hscspring/orgs",
      "repos_url": "https://api.github.com/users/hscspring/repos",
      "events_url": "https://api.github.com/users/hscspring/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hscspring/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-25T01:41:19Z",
    "updated_at": "2018-04-25T01:41:19Z",
    "author_association": "NONE",
    "body": "it works.\nthe problem is what you said.\nand with your opinion i am now sure about it.\nthanks ~\n\n2018-04-24 22:10 GMT+08:00 Nathaniel Manista <notifications@github.com>:\n\n> Thanks. That code looks like it works - does it work? If so, what's the\n> problem? Is it that you'd like not to have to do the JSON serialization on\n> both sides?\n>\n> Have you looked at defining in your .proto other kinds of messages and\n> using them as submessages of your Input message?\n>\n> —\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/grpc/grpc/issues/15098#issuecomment-383945691>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AHI4cbGMGDaLpXWDuCplrcMx8SSPhMvjks5trzJqgaJpZM4TZoFv>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/384134729",
    "html_url": "https://github.com/grpc/grpc/issues/15098#issuecomment-384134729",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15098",
    "id": 384134729,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDEzNDcyOQ==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-25T01:45:13Z",
    "updated_at": "2018-04-25T01:45:13Z",
    "author_association": "MEMBER",
    "body": "You're welcome; I am glad things are resolved for you!"
  }
]
