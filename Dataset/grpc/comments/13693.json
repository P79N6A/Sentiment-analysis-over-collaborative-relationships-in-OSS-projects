[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/350494174",
    "html_url": "https://github.com/grpc/grpc/issues/13693#issuecomment-350494174",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13693",
    "id": 350494174,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDQ5NDE3NA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-09T17:57:36Z",
    "updated_at": "2017-12-09T17:57:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "https://sponge.corp.google.com/target?id=bddb149a-d243-49d5-a2ae-a35698b556a4&target=github/grpc/c_windows_opt_native&searchFor=&show=FAILED&sortBy=STATUS"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/357676509",
    "html_url": "https://github.com/grpc/grpc/issues/13693#issuecomment-357676509",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13693",
    "id": 357676509,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzY3NjUwOQ==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-15T13:01:18Z",
    "updated_at": "2018-01-15T13:01:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "During the invocation of grpc_completion_queue_shutdown(grpc_completion_queue * cq)  the number pending events is sometimes >1 (so there seems to be a race with an unfinished cq_event from the test).\r\nIn \r\nhttps://github.com/grpc/grpc/blob/e1e562eb171c81fad24176e898cc4e722bee227b/src/core/lib/surface/completion_queue.cc#L1001\r\nbecause there is a pending operation, `cq_finish_shutdown_next` is postponed until that pending operation finishes  and the test fails because cq_next with inf_past deadline returns TIMEOUT instead of SHUTDOWN."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/357746436",
    "html_url": "https://github.com/grpc/grpc/issues/13693#issuecomment-357746436",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13693",
    "id": 357746436,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Nzc0NjQzNg==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-15T17:31:37Z",
    "updated_at": "2018-01-15T17:31:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think I have a good understanding of what's going on:\r\n\r\nThere's effectively a race condition between cq_end_op_for_next() (which delivers the alarm notification in alarm_test) and grpc_completion_queue_next()  (which is expected to deliver SHUTDOWN event in no-polling mode in the test).\r\n\r\nTimer thread:  (invoking alarm_cb, which invokes cq_end_op_for_next()):\r\n1. cq_end_op_for_next()   first publishes the alarm notification on the completion queue in https://github.com/grpc/grpc/blob/e1e562eb171c81fad24176e898cc4e722bee227b/src/core/lib/surface/completion_queue.cc#L653\r\n2. later in the code, it checks if pending_event count in the completion queue has dropped to zero and if so, it finalizes the shut down procedure the completion queue.\r\nhttps://github.com/grpc/grpc/blob/e1e562eb171c81fad24176e898cc4e722bee227b/src/core/lib/surface/completion_queue.cc#L677\r\n\r\nThe test thread:\r\n1. alarm is setup and awaited with cq_next().\r\n2. when alarm_cb runs on the timer thread, and pushes the event to cq_next(), the event is read by cq_next here: https://github.com/grpc/grpc/blob/e1e562eb171c81fad24176e898cc4e722bee227b/src/core/lib/surface/completion_queue.cc#L885\r\n3. the grpc_completion_queue_shutdown is invoked because the test has finished and \"awaited\" by a no-polling cq_next ( the deadline is set to inf_past).\r\n4. the cq_next checks https://github.com/grpc/grpc/blob/e1e562eb171c81fad24176e898cc4e722bee227b/src/core/lib/surface/completion_queue.cc#L904 and sees there's still a pending event because cq_end_op_for_next() from the timer thread haven't yet updated the pending event count. Therefore, the shutdown event is not generated and actually shutting down the cq is left to the in-progress cq_end_op_for_next(). \r\nThe shutdown will actually happen there correctly, but the no-polling cq_next() has already returned TIMEOUT instead of SHUTDOWN and that fails the test.\r\n\r\nIf cq_next is not required to return SHUTDOWN immediately, this is trivially fixable by adding a deadline in the future in the test.\r\nIf that behavior is required, we have a race condition in  completion queue that needs to be fixed.\r\n\r\n```\r\nD0115 16:08:43.333000000 19868 dns_resolver.cc:294] Using native dns resolver\r\nI0115 16:08:43.333000000 19868 init.cc:154] grpc_init(void)\r\nI0115 16:08:43.333000000 19868 alarm_test.cc:54] test_alarm\r\nI0115 16:08:43.333000000 19868 completion_queue.cc:431] grpc_completion_queue_create_internal(completion_type=0, polling_type=0)\r\nI0115 16:08:43.333000000 19868 completion_queue.cc:866] grpc_completion_queue_next(cq=00451E10, deadline=gpr_timespec { tv_sec: 2, tv_nsec: 2238552, clock_type: 0 }, reserved=00000000)\r\nD0115 16:08:44.333000000  3488 alarm.cc:89] alarm_cb invoked.\r\nI0115 16:08:44.334000000  3488 completion_queue.cc:633] cq_end_op_for_next(cq=00451E10, tag=00000001, error=\"No Error\", done=00B31390, done_arg=00451F10, storage=00451F58)\r\nI0115 16:08:44.334000000 19868 completion_queue.cc:975] RETURN_EVENT[00451E10]: OP_COMPLETE: tag:00000001 OK\r\nI0115 16:08:44.334000000 19868 completion_queue.cc:1270] grpc_completion_queue_shutdown(cq=00451E10)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/357749217",
    "html_url": "https://github.com/grpc/grpc/issues/13693#issuecomment-357749217",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13693",
    "id": 357749217,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Nzc0OTIxNw==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-15T17:44:43Z",
    "updated_at": "2018-01-15T17:44:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "@sreecha  @ncteisen  is the race  between cq_next and cq_end_op_for_next something we know about? If we are counting on the no-polling behavior of cp_next to work reliably (I'm don't think the API explicitly guarantees this behavior, but I can understand that some users might think it's reasonable for it to work), we'd need to fix this somehow. Any ideas?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/357914220",
    "html_url": "https://github.com/grpc/grpc/issues/13693#issuecomment-357914220",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13693",
    "id": 357914220,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzkxNDIyMA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-16T10:14:09Z",
    "updated_at": "2018-01-16T10:15:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here's a reliable repro of the problem for linux: https://github.com/grpc/grpc/pull/14022 (otherwise the timing on linux is so that the race is triggered, but the problem still exists there)."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/358065682",
    "html_url": "https://github.com/grpc/grpc/issues/13693#issuecomment-358065682",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13693",
    "id": 358065682,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODA2NTY4Mg==",
    "user": {
      "login": "sreecha",
      "id": 2754995,
      "node_id": "MDQ6VXNlcjI3NTQ5OTU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2754995?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sreecha",
      "html_url": "https://github.com/sreecha",
      "followers_url": "https://api.github.com/users/sreecha/followers",
      "following_url": "https://api.github.com/users/sreecha/following{/other_user}",
      "gists_url": "https://api.github.com/users/sreecha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sreecha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sreecha/subscriptions",
      "organizations_url": "https://api.github.com/users/sreecha/orgs",
      "repos_url": "https://api.github.com/users/sreecha/repos",
      "events_url": "https://api.github.com/users/sreecha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sreecha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-16T18:50:29Z",
    "updated_at": "2018-01-16T18:50:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks @jtattermusch . \r\n\r\n>> is the race between cq_next and cq_end_op_for_next something we know about?\r\n\r\nOf late, I have been seeing an assert() in cq-destroy code path that makes me suspect that there is a race condition that we are not aware of.  However, In this particular case, I do *not* think it is a bug.. see my comments below..\r\n\r\n>>The shutdown will actually happen there correctly, but the no-polling cq_next() has already returned TIMEOUT instead of SHUTDOWN and that fails the test.\r\n>> If cq_next is not required to return SHUTDOWN immediately, this is trivially fixable by adding a deadline in the future in the test\r\n\r\nIt is perfectly reasonable for `cq_next()` to return a TIMEOUT in which case, the caller should call it one more time to get a result (SHUTDOWN or an actual event). So in this case, its the test that has to be corrected either by adding a deadline or calling cq_next() again (perhaps in a loop) until the result is a SHUTDOWN\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/358255015",
    "html_url": "https://github.com/grpc/grpc/issues/13693#issuecomment-358255015",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13693",
    "id": 358255015,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODI1NTAxNQ==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-17T10:00:08Z",
    "updated_at": "2018-01-17T10:00:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "The fix is here: https://github.com/grpc/grpc/pull/14005"
  }
]
