[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/380612367",
    "html_url": "https://github.com/grpc/grpc/issues/15031#issuecomment-380612367",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15031",
    "id": 380612367,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDYxMjM2Nw==",
    "user": {
      "login": "maged",
      "id": 3887838,
      "node_id": "MDQ6VXNlcjM4ODc4Mzg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/3887838?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maged",
      "html_url": "https://github.com/maged",
      "followers_url": "https://api.github.com/users/maged/followers",
      "following_url": "https://api.github.com/users/maged/following{/other_user}",
      "gists_url": "https://api.github.com/users/maged/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maged/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maged/subscriptions",
      "organizations_url": "https://api.github.com/users/maged/orgs",
      "repos_url": "https://api.github.com/users/maged/repos",
      "events_url": "https://api.github.com/users/maged/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maged/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-11T22:12:25Z",
    "updated_at": "2018-04-11T22:12:25Z",
    "author_association": "NONE",
    "body": "Setting the option `option cc_generic_services = true;` causes the error: \r\n```\r\ncpp grpc proto compiler plugin does not work with generic services. To generate cpp grpc APIs, please set \"cc_generic_service = false\".\r\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/382480797",
    "html_url": "https://github.com/grpc/grpc/issues/15031#issuecomment-382480797",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15031",
    "id": 382480797,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MjQ4MDc5Nw==",
    "user": {
      "login": "yang-g",
      "id": 10122250,
      "node_id": "MDQ6VXNlcjEwMTIyMjUw",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10122250?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yang-g",
      "html_url": "https://github.com/yang-g",
      "followers_url": "https://api.github.com/users/yang-g/followers",
      "following_url": "https://api.github.com/users/yang-g/following{/other_user}",
      "gists_url": "https://api.github.com/users/yang-g/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yang-g/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yang-g/subscriptions",
      "organizations_url": "https://api.github.com/users/yang-g/orgs",
      "repos_url": "https://api.github.com/users/yang-g/repos",
      "events_url": "https://api.github.com/users/yang-g/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yang-g/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-18T18:17:27Z",
    "updated_at": "2018-04-18T18:17:27Z",
    "author_association": "MEMBER",
    "body": "I think grpc does not need that. Are you working on something related to code generation?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/382552327",
    "html_url": "https://github.com/grpc/grpc/issues/15031#issuecomment-382552327",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15031",
    "id": 382552327,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MjU1MjMyNw==",
    "user": {
      "login": "maged",
      "id": 3887838,
      "node_id": "MDQ6VXNlcjM4ODc4Mzg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/3887838?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maged",
      "html_url": "https://github.com/maged",
      "followers_url": "https://api.github.com/users/maged/followers",
      "following_url": "https://api.github.com/users/maged/following{/other_user}",
      "gists_url": "https://api.github.com/users/maged/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maged/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maged/subscriptions",
      "organizations_url": "https://api.github.com/users/maged/orgs",
      "repos_url": "https://api.github.com/users/maged/repos",
      "events_url": "https://api.github.com/users/maged/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maged/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-18T22:44:05Z",
    "updated_at": "2018-04-18T22:44:05Z",
    "author_association": "NONE",
    "body": "I'm working on a reverse proxy server for gRPC services. Ideally, the server will know the RPC available for each service, including it's request and response type, without needing each RPC to be manually specified. This is possible using ServiceDescriptors. Is another approach possible?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/382609879",
    "html_url": "https://github.com/grpc/grpc/issues/15031#issuecomment-382609879",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15031",
    "id": 382609879,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MjYwOTg3OQ==",
    "user": {
      "login": "yang-g",
      "id": 10122250,
      "node_id": "MDQ6VXNlcjEwMTIyMjUw",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10122250?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yang-g",
      "html_url": "https://github.com/yang-g",
      "followers_url": "https://api.github.com/users/yang-g/followers",
      "following_url": "https://api.github.com/users/yang-g/following{/other_user}",
      "gists_url": "https://api.github.com/users/yang-g/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yang-g/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yang-g/subscriptions",
      "organizations_url": "https://api.github.com/users/yang-g/orgs",
      "repos_url": "https://api.github.com/users/yang-g/repos",
      "events_url": "https://api.github.com/users/yang-g/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yang-g/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-19T04:52:42Z",
    "updated_at": "2018-04-19T04:52:42Z",
    "author_association": "MEMBER",
    "body": "I assume your proxy server will talk to some real grpc servers exporting\nthe services? If that is the case, maybe you want to take a look at the\nreflection service?\nhttps://github.com/grpc/grpc/blob/master/doc/server-reflection.md\nI am not sure whether you will have everything you need but maybe you can.\n\nOn Wed, Apr 18, 2018 at 3:44 PM, okaymaged <notifications@github.com> wrote:\n\n> I'm working on a reverse proxy server for gRPC services. Ideally, the\n> server will know the RPC available for each service, including it's request\n> and response type, without needing each RPC to be manually specified. This\n> is possible using ServiceDescriptors. Is another approach possible?\n>\n> â€”\n> You are receiving this because you were assigned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/grpc/grpc/issues/15031#issuecomment-382552327>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AJp0Cu1zc0SMC88YX93gUsgfUTMgxB_Kks5tp8HEgaJpZM4TQ0Hq>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/393386606",
    "html_url": "https://github.com/grpc/grpc/issues/15031#issuecomment-393386606",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15031",
    "id": 393386606,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzM4NjYwNg==",
    "user": {
      "login": "maged",
      "id": 3887838,
      "node_id": "MDQ6VXNlcjM4ODc4Mzg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/3887838?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maged",
      "html_url": "https://github.com/maged",
      "followers_url": "https://api.github.com/users/maged/followers",
      "following_url": "https://api.github.com/users/maged/following{/other_user}",
      "gists_url": "https://api.github.com/users/maged/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maged/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maged/subscriptions",
      "organizations_url": "https://api.github.com/users/maged/orgs",
      "repos_url": "https://api.github.com/users/maged/repos",
      "events_url": "https://api.github.com/users/maged/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maged/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-31T03:02:47Z",
    "updated_at": "2018-05-31T03:02:47Z",
    "author_association": "NONE",
    "body": "This is not ideal as it requires the proxy server to connect with all grpc servers for it to know which methods it can expose. Is there a solution that relies only on the compiled service protobufs?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/393391806",
    "html_url": "https://github.com/grpc/grpc/issues/15031#issuecomment-393391806",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15031",
    "id": 393391806,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzM5MTgwNg==",
    "user": {
      "login": "nicolasnoble",
      "id": 7281574,
      "node_id": "MDQ6VXNlcjcyODE1NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7281574?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nicolasnoble",
      "html_url": "https://github.com/nicolasnoble",
      "followers_url": "https://api.github.com/users/nicolasnoble/followers",
      "following_url": "https://api.github.com/users/nicolasnoble/following{/other_user}",
      "gists_url": "https://api.github.com/users/nicolasnoble/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nicolasnoble/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nicolasnoble/subscriptions",
      "organizations_url": "https://api.github.com/users/nicolasnoble/orgs",
      "repos_url": "https://api.github.com/users/nicolasnoble/repos",
      "events_url": "https://api.github.com/users/nicolasnoble/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nicolasnoble/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-31T03:40:25Z",
    "updated_at": "2018-05-31T03:40:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "Unfortunately, you'd need to write your own protoc plugin for this."
  }
]
