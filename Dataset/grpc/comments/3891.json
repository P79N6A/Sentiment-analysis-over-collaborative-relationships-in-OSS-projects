[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/149393290",
    "html_url": "https://github.com/grpc/grpc/issues/3891#issuecomment-149393290",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/3891",
    "id": 149393290,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTM5MzI5MA==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-20T01:29:47Z",
    "updated_at": "2015-10-20T01:29:47Z",
    "author_association": "MEMBER",
    "body": "This seems like a duplicate of #3154.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/149395627",
    "html_url": "https://github.com/grpc/grpc/issues/3891#issuecomment-149395627",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/3891",
    "id": 149395627,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTM5NTYyNw==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-20T01:36:28Z",
    "updated_at": "2015-10-20T01:36:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "Updated this issue to make it clear it's about making metadata key downcasing uniform.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/151029323",
    "html_url": "https://github.com/grpc/grpc/issues/3891#issuecomment-151029323",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/3891",
    "id": 151029323,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MTAyOTMyMw==",
    "user": {
      "login": "tbetbetbe",
      "id": 9272342,
      "node_id": "MDQ6VXNlcjkyNzIzNDI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9272342?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tbetbetbe",
      "html_url": "https://github.com/tbetbetbe",
      "followers_url": "https://api.github.com/users/tbetbetbe/followers",
      "following_url": "https://api.github.com/users/tbetbetbe/following{/other_user}",
      "gists_url": "https://api.github.com/users/tbetbetbe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tbetbetbe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tbetbetbe/subscriptions",
      "organizations_url": "https://api.github.com/users/tbetbetbe/orgs",
      "repos_url": "https://api.github.com/users/tbetbetbe/repos",
      "events_url": "https://api.github.com/users/tbetbetbe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tbetbetbe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-26T05:37:35Z",
    "updated_at": "2015-10-26T05:37:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "IIRC, we agreed that: \n1) it was preferred for wrapped languages not to duplicate checks being done in the core. \n- this make its clearer where metadata-related errors come from (instead of splitting between core and implementation)\n- has potential performance gains for keys that are error-free, as we only do detailed checking in the error path\n  2) there should be robust error reporting/checking when metadata checks failed.\n\nThe auto down-casing + checking contradict 1); I'd like to confirm that we're don't care about 1) anymore before going ahead with this.  @ctiller, PTAL.\n\n2) will be covered by the resolution of #3154 \n\n> Pull request #3740 and #3890 introduced some ad-hoc downcasing of metadata keys.\n\nThis is specific to auth-specific rather than ad-hoc.  This will become clearer in the new ruby auth API PR\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/151161218",
    "html_url": "https://github.com/grpc/grpc/issues/3891#issuecomment-151161218",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/3891",
    "id": 151161218,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MTE2MTIxOA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-26T14:45:42Z",
    "updated_at": "2015-10-26T14:45:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think we agreed that we won't be checking metadata values, for metadata keys, it's fine to provide any kind of logic will simplify usage.\n\nI agree that #3154 is a acceptable resolution to this. Right now, it looks like whenever invalid metadata is sent to core, the RPC just hangs forever.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/151310643",
    "html_url": "https://github.com/grpc/grpc/issues/3891#issuecomment-151310643",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/3891",
    "id": 151310643,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MTMxMDY0Mw==",
    "user": {
      "login": "tbetbetbe",
      "id": 9272342,
      "node_id": "MDQ6VXNlcjkyNzIzNDI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9272342?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tbetbetbe",
      "html_url": "https://github.com/tbetbetbe",
      "followers_url": "https://api.github.com/users/tbetbetbe/followers",
      "following_url": "https://api.github.com/users/tbetbetbe/following{/other_user}",
      "gists_url": "https://api.github.com/users/tbetbetbe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tbetbetbe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tbetbetbe/subscriptions",
      "organizations_url": "https://api.github.com/users/tbetbetbe/orgs",
      "repos_url": "https://api.github.com/users/tbetbetbe/repos",
      "events_url": "https://api.github.com/users/tbetbetbe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tbetbetbe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-26T23:11:58Z",
    "updated_at": "2015-10-26T23:11:58Z",
    "author_association": "CONTRIBUTOR",
    "body": ">  for metadata keys, it's fine to provide any kind of logic will simplify usage.\n\nSo is this bug just about the fact that RPC hangs forever if the key is invalid ?\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/151317145",
    "html_url": "https://github.com/grpc/grpc/issues/3891#issuecomment-151317145",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/3891",
    "id": 151317145,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MTMxNzE0NQ==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-26T23:53:38Z",
    "updated_at": "2015-10-26T23:53:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think the downcasing behavior provided by C# and Node makes a lot of sense (especially because of the fail-early semantics) and would prefer if all wrapped languages had the same behavior, but I don't insist on what the solution should be. So, yes, this issue might be as simple as resolving hang on invalid metadata key.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/151394248",
    "html_url": "https://github.com/grpc/grpc/issues/3891#issuecomment-151394248",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/3891",
    "id": 151394248,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MTM5NDI0OA==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-27T06:44:53Z",
    "updated_at": "2015-10-27T06:44:53Z",
    "author_association": "MEMBER",
    "body": "C++ will not be adopting any automatic conversion. We'd previously agreed\nthat no wrapped languages would, but I guess not documented it anywhere.\n\nIf wrapped languages are indeed planning on automatic conversion, I'd\nstrongly encourage that lookups on the receiving side be case\ninsensitive... Lookup(key, Send(key, value)) must give value for all\naccepted keys in my view.\n\nOn Mon, Oct 26, 2015, 4:53 PM Jan Tattermusch notifications@github.com\nwrote:\n\n> I think the downcasing behavior provided by C# and Node makes a lot of\n> sense (especially because of the fail-early semantics) and would prefer if\n> all wrapped languages had the same behavior, but I don't insist on what the\n> solution should be. So, yes, this issue might be as simple as resolving\n> hang on invalid metadata key.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/grpc/grpc/issues/3891#issuecomment-151317145.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/169155714",
    "html_url": "https://github.com/grpc/grpc/issues/3891#issuecomment-169155714",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/3891",
    "id": 169155714,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2OTE1NTcxNA==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-05T22:31:33Z",
    "updated_at": "2016-01-05T22:31:33Z",
    "author_association": "MEMBER",
    "body": "google/google-auth-library-ruby#57 would simplify this.\n"
  }
]
