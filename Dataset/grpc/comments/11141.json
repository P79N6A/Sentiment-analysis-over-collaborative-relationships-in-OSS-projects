[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/302267154",
    "html_url": "https://github.com/grpc/grpc/pull/11141#issuecomment-302267154",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11141",
    "id": 302267154,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjI2NzE1NA==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-18T00:26:24Z",
    "updated_at": "2017-05-18T00:26:24Z",
    "author_association": "MEMBER",
    "body": "UBsan doesn't seem to run properly on 1.3.x."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/303372953",
    "html_url": "https://github.com/grpc/grpc/pull/11141#issuecomment-303372953",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11141",
    "id": 303372953,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzM3Mjk1Mw==",
    "user": {
      "login": "assaf-xm",
      "id": 22271915,
      "node_id": "MDQ6VXNlcjIyMjcxOTE1",
      "avatar_url": "https://avatars2.githubusercontent.com/u/22271915?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/assaf-xm",
      "html_url": "https://github.com/assaf-xm",
      "followers_url": "https://api.github.com/users/assaf-xm/followers",
      "following_url": "https://api.github.com/users/assaf-xm/following{/other_user}",
      "gists_url": "https://api.github.com/users/assaf-xm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/assaf-xm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/assaf-xm/subscriptions",
      "organizations_url": "https://api.github.com/users/assaf-xm/orgs",
      "repos_url": "https://api.github.com/users/assaf-xm/repos",
      "events_url": "https://api.github.com/users/assaf-xm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/assaf-xm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-23T11:45:02Z",
    "updated_at": "2017-05-23T11:45:02Z",
    "author_association": "NONE",
    "body": "I think we have the same issue or very similar issue.\r\nWhen upgrading to 1.2.0 or 1.3.2 our node.js (ubuntu 16.04) client gets segfaults when server service stops. The server is running C#. All works with older versions (GRPC v1.1.4)\r\n\r\nWe tried the v1.3.x branch latest which include this fix (commit 866190f), however this doesn't solve our issue.\r\nBuilding with --debug shows the following stack trace:\r\n\r\nThread 1 \"node\" received signal SIGSEGV, Segmentation fault.\r\n0x00007fef62cb918c in gpr_ref_non_zero (r=0x618) at ../src/core/lib/support/sync.c:105\r\n105\t  gpr_atm prior = gpr_atm_no_barrier_fetch_add(&r->count, 1);\r\n(gdb) info frame\r\nStack level 0, frame at 0x7ffd38c061c0:\r\n rip = 0x7fef62cb918c in gpr_ref_non_zero (../src/core/lib/support/sync.c:105); saved rip = 0x7fef62c62d92\r\n called by frame at 0x7ffd38c061e0\r\n source language c.\r\n Arglist at 0x7ffd38c061b0, args: r=0x618\r\n Locals at 0x7ffd38c061b0, Previous frame's sp is 0x7ffd38c061c0\r\n Saved registers:\r\n  rbp at 0x7ffd38c061b0, rip at 0x7ffd38c061b8\r\n(gdb) bt\r\n#0  0x00007fef62cb918c in gpr_ref_non_zero (r=0x618) at ../src/core/lib/support/sync.c:105\r\n#1  0x00007fef62c62d92 in grpc_stream_ref (refcount=0x618) at ../src/core/lib/transport/transport.c:58\r\n#2  0x00007fef62c50ff4 in grpc_call_internal_ref (c=0x0) at ../src/core/lib/surface/call.c:471\r\n#3  0x00007fef62c5192d in cancel_with_error (exec_ctx=0x7ffd38c06250, c=0x0, source=STATUS_FROM_API_OVERRIDE, error=0x4) at ../src/core/lib/surface/call.c:633\r\n#4  0x00007fef62c51610 in grpc_call_cancel (call=0x0, reserved=0x0) at ../src/core/lib/surface/call.c:570\r\n#5  0x00007fef62c1fb37 in grpc::node::Call::Cancel (info=...) at ../src/node/ext/call.cc:797\r\n#6  0x00007fef62c1cacc in Nan::imp::FunctionCallbackWrapper (info=...) at ../../nan/nan_callbacks_12_inl.h:174\r\n#7  0x0000000000981681 in v8::internal::FunctionCallbackArguments::Call(void (*)(v8::FunctionCallbackInfo<v8::Value> const&)) ()\r\n#8  0x00000000009d5b0b in v8::internal::MaybeHandle<v8::internal::Object> v8::internal::(anonymous namespace)::HandleApiCallHelper<false>(v8::internal::Isolate*, v8::internal::(anonymous namespace)::BuiltinArguments<(v8::internal::BuiltinExtraArguments)1>) ()\r\n#9  0x00000000009d60b1 in v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) ()\r\n\r\n\r\nFurther debugging shows that 'call.cc' line 797  called:\r\n     grpc_call_error error = grpc_call_cancel(call->wrapped_call, NULL);\r\nwhen 'call->wrapped_call' is NULL.\r\nProtecting null value there solved the crash, but is probably partial solution.\r\n"
  }
]
