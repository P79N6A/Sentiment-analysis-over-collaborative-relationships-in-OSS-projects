[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/349223893",
    "html_url": "https://github.com/grpc/grpc/pull/13639#issuecomment-349223893",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13639",
    "id": 349223893,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTIyMzg5Mw==",
    "user": {
      "login": "thelinuxfoundation",
      "id": 4450729,
      "node_id": "MDQ6VXNlcjQ0NTA3Mjk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4450729?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thelinuxfoundation",
      "html_url": "https://github.com/thelinuxfoundation",
      "followers_url": "https://api.github.com/users/thelinuxfoundation/followers",
      "following_url": "https://api.github.com/users/thelinuxfoundation/following{/other_user}",
      "gists_url": "https://api.github.com/users/thelinuxfoundation/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thelinuxfoundation/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thelinuxfoundation/subscriptions",
      "organizations_url": "https://api.github.com/users/thelinuxfoundation/orgs",
      "repos_url": "https://api.github.com/users/thelinuxfoundation/repos",
      "events_url": "https://api.github.com/users/thelinuxfoundation/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thelinuxfoundation/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-05T07:52:05Z",
    "updated_at": "2017-12-05T07:52:05Z",
    "author_association": "NONE",
    "body": "Thank you for your pull request. Before we can look at your contribution, we need to ensure all contributors are covered by a Contributor License Agreement.\n\nAfter the following items are addressed, please respond with a new comment here, and the automated system will re-verify.\n\n* One or more commits was unable to be associated with a GitHub user. The email used in the Git commit must match a verified email address in a GitHub profile. For more information, please see https://help.github.com/articles/why-are-my-commits-linked-to-the-wrong-user/\n\n_Regards,\nThe Linux Foundation CLA GitHub bot_\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/349740920",
    "html_url": "https://github.com/grpc/grpc/pull/13639#issuecomment-349740920",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13639",
    "id": 349740920,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTc0MDkyMA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-06T19:02:50Z",
    "updated_at": "2017-12-06T19:02:50Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE                                                                                      FILE SIZE\n ++++++++++++++ GROWING                                                                        ++++++++++++++\n  +0.2% +1.42Ki [None]                                                                         +25.0Ki  +0.4%\n      +0.3% +1.35Ki [Unmapped]                                                                     +24.9Ki  +0.4%\n      [NEW]     +40 dns_grpclb_factory_vtable                                                          +40  [NEW]\n      [NEW]     +32 dns_grpclb_resolver_vtable                                                         +32  [NEW]\n      [NEW]      +8 grpclb_dns_resolver_factory                                                         +8  [NEW]\n  [NEW] +2.02Ki src/core/ext/filters/client_channel/resolver/dns/grpclb/dns_resolver_grpclb.cc +2.02Ki  [NEW]\n      [NEW]    +693 dns_grpclb_on_resolved_locked                                                     +693  [NEW]\n      [NEW]    +367 dns_grpclb_factory_create_resolver                                                +367  [NEW]\n      [NEW]    +207 dns_grpclb_shutdown_locked                                                        +207  [NEW]\n      [NEW]    +194 dns_grpclb_start_resolving_locked                                                 +194  [NEW]\n      [NEW]    +134 dns_grpclb_next_locked                                                            +134  [NEW]\n      [NEW]    +121 dns_grpclb_maybe_finish_next_locked                                               +121  [NEW]\n      [NEW]    +103 [Unmapped]                                                                        +103  [NEW]\n      [NEW]     +91 dns_grpclb_destroy                                                                 +91  [NEW]\n      [NEW]     +61 dns_grpclb_on_retry_timer_locked                                                   +61  [NEW]\n      [NEW]     +57 dns_grpclb_channel_saw_error_locked                                                +57  [NEW]\n      [NEW]     +20 dns_grpclb_factory_get_default_host_name                                           +20  [NEW]\n      [NEW]     +12 grpc_resolver_dns_grpclb_init                                                      +12  [NEW]\n      [NEW]      +2 grpc_resolver_dns_grpclb_shutdown                                                   +2  [NEW]\n      [NEW]      +2 dns_grpclb_factory_ref                                                              +2  [NEW]\n      [NEW]      +2 dns_grpclb_factory_unref                                                            +2  [NEW]\n  +5.7%     +19 src/core/plugin_registry/grpc_plugin_registry.cc                                   +19  +5.7%\n      +5.7%     +19 grpc_register_built_in_plugins                                                     +19  +5.7%\n\n  +0.3% +3.46Ki TOTAL                                                                          +27.0Ki  +0.4%\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE        FILE SIZE\n ++++++++++++++  ++++++++++++++\n\n  [ = ]       0        0  [ = ]\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/349744245",
    "html_url": "https://github.com/grpc/grpc/pull/13639#issuecomment-349744245",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13639",
    "id": 349744245,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTc0NDI0NQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-06T19:14:44Z",
    "updated_at": "2017-12-06T19:14:44Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/349755649",
    "html_url": "https://github.com/grpc/grpc/pull/13639#issuecomment-349755649",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13639",
    "id": 349755649,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTc1NTY0OQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-06T19:54:11Z",
    "updated_at": "2017-12-06T19:54:11Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] Performance differences noted:\nBenchmark                       cpu_time    real_time\n------------------------------  ----------  -----------\nBM_ErrorGetStatus<SimpleError>  +5%         +4%\nBM_MetadataRefUnrefExternal     -20%        -20%\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/349871829",
    "html_url": "https://github.com/grpc/grpc/pull/13639#issuecomment-349871829",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13639",
    "id": 349871829,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTg3MTgyOQ==",
    "user": {
      "login": "dunkymole",
      "id": 2920569,
      "node_id": "MDQ6VXNlcjI5MjA1Njk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2920569?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dunkymole",
      "html_url": "https://github.com/dunkymole",
      "followers_url": "https://api.github.com/users/dunkymole/followers",
      "following_url": "https://api.github.com/users/dunkymole/following{/other_user}",
      "gists_url": "https://api.github.com/users/dunkymole/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dunkymole/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dunkymole/subscriptions",
      "organizations_url": "https://api.github.com/users/dunkymole/orgs",
      "repos_url": "https://api.github.com/users/dunkymole/repos",
      "events_url": "https://api.github.com/users/dunkymole/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dunkymole/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-07T06:02:42Z",
    "updated_at": "2017-12-07T06:02:42Z",
    "author_association": "NONE",
    "body": "Hi, I have just done a build of this PR and am using it in our test environment. Thumbs up to the contributor. This would certainly unblock or loadbalancing issues."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/350316295",
    "html_url": "https://github.com/grpc/grpc/pull/13639#issuecomment-350316295",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13639",
    "id": 350316295,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDMxNjI5NQ==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-08T17:05:30Z",
    "updated_at": "2017-12-08T17:05:58Z",
    "author_association": "MEMBER",
    "body": "I am not sure whether or not this is something we actually want to support.  I can think of arguments in both directions, but I think we need to think carefully about this before making a decision.  In particular, I'd like to get input from @a11r on this.\r\n\r\nAt an architectural level, I think the right way to use grpclb is to get the data from your name service, which for DNS means encoding it in SRV records, and I don't want to discourage people from doing it that way.  Even in a small environment, running named on one machine with just a few zone records doesn't seem like a huge investment, so I don't really see a problem with this approach.\r\n\r\nI do realize that we don't yet have a way for you to access SRV records on Windows until #12416 is merged, and I can completely understand you wanting to do something like this as a temporary work-around.  However, there's a difference between having your own temporary work-around and making this a supported grpc feature for everyone to use on an ongoing basis.  I don't think that the need for a temporary work-around is enough justification for adding this to the grpclb code-base.  (Also, I would like to see us finish up #12416 early in Q1, so hopefully the temporary problem won't exist much longer.)\r\n\r\nThat having been said, I have heard of a few cases where people are using grpclb as a name resolution mechanism in environments where servers move around dynamically.  One example of this is the setup described in #12330; another case where this approach might be useful is the Kubernetes setup described in #12295.  But in these cases, it seems like there is already another source of truth of name service data, and grpclb is just being used as a converter between grpc and the real name server.  In other words, it seems like the right solution here would be to write a grpc resolver for the name resolution system in question (i.e., to talk directly to etcd or kubernetes to get the data), but people are finding it easier to write a converter using the grpclb protocol instead.  Part of this may be because it's easier to write a grpclb server than it is to write a new resolver for C-core; another part may be because people are using grpc in a wrapped language because they don't know or want to use C, and we don't provide a way to write a new resolver in those languages.  In the latter case, we should consider whether it would make sense to allow people to write new resolvers in wrapped languages.\r\n\r\nUltimately, I think we need to carefully consider the alternatives and decide whether this is something that we actually want to support or whether we should pursue alternatives instead.  But that having been said, I think you can certainly use this resolver in your own code, even if we don't elect to include it in grpc."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/350361255",
    "html_url": "https://github.com/grpc/grpc/pull/13639#issuecomment-350361255",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13639",
    "id": 350361255,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDM2MTI1NQ==",
    "user": {
      "login": "dunkymole",
      "id": 2920569,
      "node_id": "MDQ6VXNlcjI5MjA1Njk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2920569?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dunkymole",
      "html_url": "https://github.com/dunkymole",
      "followers_url": "https://api.github.com/users/dunkymole/followers",
      "following_url": "https://api.github.com/users/dunkymole/following{/other_user}",
      "gists_url": "https://api.github.com/users/dunkymole/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dunkymole/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dunkymole/subscriptions",
      "organizations_url": "https://api.github.com/users/dunkymole/orgs",
      "repos_url": "https://api.github.com/users/dunkymole/repos",
      "events_url": "https://api.github.com/users/dunkymole/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dunkymole/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-08T20:14:36Z",
    "updated_at": "2017-12-08T20:22:12Z",
    "author_association": "NONE",
    "body": "Hi,\r\n\r\nAs I mentioned before I have already started using this PR to unblock our resolution woes in a dynamic environment. I was doing so both because I wouldnt be confident writing a resolver for C-core and I am using C# (I would have certainly tried in C# by now if I could). So you are astute in your observations there.\r\n\r\nWe are in a dynamic situation (actually Nomad, not Kubernates) so we have a source of truth that is Consul. Consul has a powerful DNS API which I feel confident would give us all we need with a Windows C-Ares build so I am keenly awaiting that. Early Q1 for https://github.com/grpc/grpc/pull/12416 would be great. \r\n\r\nWould I be right in thinking that the C-Ares side of the code already supports GRPCLB as a default resolver? If so aren't concerns over people abusing it a moot point? Or are you thinking that the ability to provide the DNS authority is going to remove the temptation for a lot of potential abusers if they just wait?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/350364270",
    "html_url": "https://github.com/grpc/grpc/pull/13639#issuecomment-350364270",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13639",
    "id": 350364270,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDM2NDI3MA==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-08T20:29:13Z",
    "updated_at": "2017-12-08T20:29:13Z",
    "author_association": "MEMBER",
    "body": "> Would I be right in thinking that the C-Ares side of the code already supports GRPCLB as a default resolver? If so isnt concerns over people abusing a moot point?\r\n\r\nYes, the c-ares resolver does look at SRV records by default, but that's different from what the code in this PR does.  The SRV approach makes a clear distinction between name service (which is still DNS) and load balancing (which is the grpclb balancer).  The code in this PR essentially combines the two into one by eliminating the need to use DNS altogether, so that the grpclb balancer serves both functions.\r\n\r\nI admit that this is a fairly fine distinction, and you're right that even using DNS to find the grpclb balancer doesn't prevent people from using the balancer as a way to access their real name service.  And I suppose if people are actually going to be doing that, then requiring people to use DNS doesn't really do anything except add an extra dependency to their service.  But at the same time, I still don't want to encourage people to do that in the first place, unless we decide that that's going to be a recommended solution.\r\n\r\nI'll chat with @a11r about this when he gets back next week to see if we can figure out how we want to move forward with this."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/350681597",
    "html_url": "https://github.com/grpc/grpc/pull/13639#issuecomment-350681597",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13639",
    "id": 350681597,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDY4MTU5Nw==",
    "user": {
      "login": "Falco20019",
      "id": 940619,
      "node_id": "MDQ6VXNlcjk0MDYxOQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/940619?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Falco20019",
      "html_url": "https://github.com/Falco20019",
      "followers_url": "https://api.github.com/users/Falco20019/followers",
      "following_url": "https://api.github.com/users/Falco20019/following{/other_user}",
      "gists_url": "https://api.github.com/users/Falco20019/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Falco20019/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Falco20019/subscriptions",
      "organizations_url": "https://api.github.com/users/Falco20019/orgs",
      "repos_url": "https://api.github.com/users/Falco20019/repos",
      "events_url": "https://api.github.com/users/Falco20019/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Falco20019/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-11T10:20:23Z",
    "updated_at": "2017-12-11T10:20:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi @markdroth, thanks for your response. My main problem with DNS is, that we have to dynamically manage it. So we would either have to add a dependency on something like consul or implement an own DNS service in-app. Doing it as GRPCLB is just so much simpler due to it's protobuf+grpc nature.\r\n\r\nSince our software is deployed by service technicians who don't have IT know-how, our program has to be a one-click install solution. Once c-ares works on Windows, I would be fine implementing it as DNS service instead of GRPCLB inside my app. Still GRPCLB is the easier solution to use and also allows us to easily scale it just adding other endpoints.\r\n\r\nMy other main problem is the missing support for resolvers in C#. I tried it using a CallInvoker, but doing this, I would loose all the low level things like retries and re-resolution when the endpoint is not available which is already greatly implemented in the DNS resolver (and GRPCLB resolver).\r\n\r\nI see your point about abusing GRPCLB as name service, but it's the only feasable way to avoid dependencies like consul when you have a dynamic setup until there is better name resolver support in C#."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/351540478",
    "html_url": "https://github.com/grpc/grpc/pull/13639#issuecomment-351540478",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13639",
    "id": 351540478,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTU0MDQ3OA==",
    "user": {
      "login": "dpratt",
      "id": 721499,
      "node_id": "MDQ6VXNlcjcyMTQ5OQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/721499?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dpratt",
      "html_url": "https://github.com/dpratt",
      "followers_url": "https://api.github.com/users/dpratt/followers",
      "following_url": "https://api.github.com/users/dpratt/following{/other_user}",
      "gists_url": "https://api.github.com/users/dpratt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dpratt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dpratt/subscriptions",
      "organizations_url": "https://api.github.com/users/dpratt/orgs",
      "repos_url": "https://api.github.com/users/dpratt/repos",
      "events_url": "https://api.github.com/users/dpratt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dpratt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-13T22:06:18Z",
    "updated_at": "2017-12-13T22:06:18Z",
    "author_association": "NONE",
    "body": "This would be *incredibly* useful for us as well. \r\n\r\nWe currently run a bunch of grpc services inside of Kubernetes, and as of today, there is no good way to have non Java or Golang clients properly rebalance their client subchannels when backends get rotated. Additionally, to even get this behavior on the JVM and Golang requires a bunch of configuration and custom code on the client side.\r\n\r\nAll of our Node and Ruby clients currently experience a service outage whenever the backend pods get rebuilt either due to either a deployment or just a cluster rebalance. \r\n\r\nI already have a custom grpclb server implementation that uses the Kubernetes API - I'd love to be able to configure our Node, Ruby (and ideally JVM and Golang clients) to just connect to a url like\r\n\r\n```\r\ngrpclb://lb-server-service-name/<actual-grpc-service-name>\r\n```\r\n\r\nI'd be willing to bet a fair amount of money that I'm not the only one, and in fact this is probably a huge need for the community."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/356521242",
    "html_url": "https://github.com/grpc/grpc/pull/13639#issuecomment-356521242",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13639",
    "id": 356521242,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjUyMTI0Mg==",
    "user": {
      "login": "Falco20019",
      "id": 940619,
      "node_id": "MDQ6VXNlcjk0MDYxOQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/940619?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Falco20019",
      "html_url": "https://github.com/Falco20019",
      "followers_url": "https://api.github.com/users/Falco20019/followers",
      "following_url": "https://api.github.com/users/Falco20019/following{/other_user}",
      "gists_url": "https://api.github.com/users/Falco20019/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Falco20019/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Falco20019/subscriptions",
      "organizations_url": "https://api.github.com/users/Falco20019/orgs",
      "repos_url": "https://api.github.com/users/Falco20019/repos",
      "events_url": "https://api.github.com/users/Falco20019/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Falco20019/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-10T07:25:20Z",
    "updated_at": "2018-01-10T07:25:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi @markdroth, Happy New Year :) Any news from @a11r ?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/356787831",
    "html_url": "https://github.com/grpc/grpc/pull/13639#issuecomment-356787831",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13639",
    "id": 356787831,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Njc4NzgzMQ==",
    "user": {
      "login": "a11r",
      "id": 10135698,
      "node_id": "MDQ6VXNlcjEwMTM1Njk4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10135698?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/a11r",
      "html_url": "https://github.com/a11r",
      "followers_url": "https://api.github.com/users/a11r/followers",
      "following_url": "https://api.github.com/users/a11r/following{/other_user}",
      "gists_url": "https://api.github.com/users/a11r/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/a11r/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/a11r/subscriptions",
      "organizations_url": "https://api.github.com/users/a11r/orgs",
      "repos_url": "https://api.github.com/users/a11r/repos",
      "events_url": "https://api.github.com/users/a11r/events{/privacy}",
      "received_events_url": "https://api.github.com/users/a11r/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-11T00:49:31Z",
    "updated_at": "2018-01-11T00:49:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "We discussed this further in the team. In general, we would like to enable such plugins. I would propose the following path forward:\r\n- This solution needs to go in a contrib subdirectory, so it is distinct from the core gRPC library, but available as a plugin to users that want to enable it. @dgquintas has kindly offered to help with the layout of the directory and the BUILD structures to enable this.\r\n\r\n\r\nArchitecturally, we will still recommend the SRV-record based solution as the preferred approach for DNS, but understand that might not be available in certain environments, and plugins such as this one are a good way to fill the gap. For non-DNS cases, we are exploring options for a general solution, and one candidate is the envoy [CDS API](https://www.envoyproxy.io/docs/envoy/latest/api-v2/cds.proto).\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/356791724",
    "html_url": "https://github.com/grpc/grpc/pull/13639#issuecomment-356791724",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13639",
    "id": 356791724,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Njc5MTcyNA==",
    "user": {
      "login": "dpratt",
      "id": 721499,
      "node_id": "MDQ6VXNlcjcyMTQ5OQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/721499?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dpratt",
      "html_url": "https://github.com/dpratt",
      "followers_url": "https://api.github.com/users/dpratt/followers",
      "following_url": "https://api.github.com/users/dpratt/following{/other_user}",
      "gists_url": "https://api.github.com/users/dpratt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dpratt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dpratt/subscriptions",
      "organizations_url": "https://api.github.com/users/dpratt/orgs",
      "repos_url": "https://api.github.com/users/dpratt/repos",
      "events_url": "https://api.github.com/users/dpratt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dpratt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-11T01:11:25Z",
    "updated_at": "2018-01-11T01:11:25Z",
    "author_association": "NONE",
    "body": "I couldn’t be happier to hear this - having easily configurable and explainable grpclb support will be a breakthrough for my team."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/356797321",
    "html_url": "https://github.com/grpc/grpc/pull/13639#issuecomment-356797321",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13639",
    "id": 356797321,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Njc5NzMyMQ==",
    "user": {
      "login": "dpratt",
      "id": 721499,
      "node_id": "MDQ6VXNlcjcyMTQ5OQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/721499?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dpratt",
      "html_url": "https://github.com/dpratt",
      "followers_url": "https://api.github.com/users/dpratt/followers",
      "following_url": "https://api.github.com/users/dpratt/following{/other_user}",
      "gists_url": "https://api.github.com/users/dpratt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dpratt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dpratt/subscriptions",
      "organizations_url": "https://api.github.com/users/dpratt/orgs",
      "repos_url": "https://api.github.com/users/dpratt/repos",
      "events_url": "https://api.github.com/users/dpratt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dpratt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-11T01:43:35Z",
    "updated_at": "2018-01-11T01:43:35Z",
    "author_association": "NONE",
    "body": "As an addition, as soon as this is released, I’ll open source my kubernetes grpclb implementation. "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/356895729",
    "html_url": "https://github.com/grpc/grpc/pull/13639#issuecomment-356895729",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13639",
    "id": 356895729,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Njg5NTcyOQ==",
    "user": {
      "login": "Falco20019",
      "id": 940619,
      "node_id": "MDQ6VXNlcjk0MDYxOQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/940619?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Falco20019",
      "html_url": "https://github.com/Falco20019",
      "followers_url": "https://api.github.com/users/Falco20019/followers",
      "following_url": "https://api.github.com/users/Falco20019/following{/other_user}",
      "gists_url": "https://api.github.com/users/Falco20019/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Falco20019/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Falco20019/subscriptions",
      "organizations_url": "https://api.github.com/users/Falco20019/orgs",
      "repos_url": "https://api.github.com/users/Falco20019/repos",
      "events_url": "https://api.github.com/users/Falco20019/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Falco20019/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-11T10:40:52Z",
    "updated_at": "2018-01-11T10:40:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "That's really good news! Looking forward to see the contrib happen. Please keep in mind, that also C# users have to be able to enable it. I will keep track on your progress on alternatives like CDS API too."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/367937337",
    "html_url": "https://github.com/grpc/grpc/pull/13639#issuecomment-367937337",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13639",
    "id": 367937337,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzkzNzMzNw==",
    "user": {
      "login": "Falco20019",
      "id": 940619,
      "node_id": "MDQ6VXNlcjk0MDYxOQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/940619?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Falco20019",
      "html_url": "https://github.com/Falco20019",
      "followers_url": "https://api.github.com/users/Falco20019/followers",
      "following_url": "https://api.github.com/users/Falco20019/following{/other_user}",
      "gists_url": "https://api.github.com/users/Falco20019/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Falco20019/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Falco20019/subscriptions",
      "organizations_url": "https://api.github.com/users/Falco20019/orgs",
      "repos_url": "https://api.github.com/users/Falco20019/repos",
      "events_url": "https://api.github.com/users/Falco20019/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Falco20019/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-23T08:01:34Z",
    "updated_at": "2018-02-23T08:01:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Any news on that topic or non-DNS cases in general? We are also fine to use DNS as soon as it works on every environment."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/387658657",
    "html_url": "https://github.com/grpc/grpc/pull/13639#issuecomment-387658657",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13639",
    "id": 387658657,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzY1ODY1Nw==",
    "user": {
      "login": "Falco20019",
      "id": 940619,
      "node_id": "MDQ6VXNlcjk0MDYxOQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/940619?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Falco20019",
      "html_url": "https://github.com/Falco20019",
      "followers_url": "https://api.github.com/users/Falco20019/followers",
      "following_url": "https://api.github.com/users/Falco20019/following{/other_user}",
      "gists_url": "https://api.github.com/users/Falco20019/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Falco20019/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Falco20019/subscriptions",
      "organizations_url": "https://api.github.com/users/Falco20019/orgs",
      "repos_url": "https://api.github.com/users/Falco20019/repos",
      "events_url": "https://api.github.com/users/Falco20019/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Falco20019/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-09T08:11:25Z",
    "updated_at": "2018-05-09T08:11:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "Any news? It's still nearly impossible to create an resolver for use in C# without having to rebuild c-core yourself. c-ares support for Windows relieves the pain for us right now, but it only helps if you wanted to create a resolver for grpclb. Any other own resolver still is a pain.\r\n\r\n/CC @a11r @markdroth "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/389639509",
    "html_url": "https://github.com/grpc/grpc/pull/13639#issuecomment-389639509",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13639",
    "id": 389639509,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTYzOTUwOQ==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-16T19:34:27Z",
    "updated_at": "2018-05-16T19:34:27Z",
    "author_association": "MEMBER",
    "body": "We're still internally discussing the right RPC API to use for naming.  I'm sorry this is taking so long, but it's one of those things where we really want to get the design right before we make it available.  We are actively working on this."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/468695033",
    "html_url": "https://github.com/grpc/grpc/pull/13639#issuecomment-468695033",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13639",
    "id": 468695033,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODY5NTAzMw==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-01T15:05:35Z",
    "updated_at": "2019-03-01T15:05:35Z",
    "author_association": "MEMBER",
    "body": "I think a couple of things have changed since we last discussed this.\r\n\r\nFirst, as was recently announced on the grpc.io mailing list, we are [deprecating the grpclb protocol in favor of the industry-standard Envoy xDS protocol](https://groups.google.com/d/topic/grpc-io/0yGihF-EFQo/discussion).\r\n\r\nSecond, we are now committed to providing a way for third parties to write resolver and LB policy plugins for C-core without having to recompile core.  It may take a quarter or two for this to become available, but you can see the work on the resolver API in #16617.\r\n\r\nGiven those changes, I don't think it makes sense to move forward with this PR.  Please let me know if you have any questions about any of this.  Thanks!"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/468722739",
    "html_url": "https://github.com/grpc/grpc/pull/13639#issuecomment-468722739",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13639",
    "id": 468722739,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODcyMjczOQ==",
    "user": {
      "login": "Falco20019",
      "id": 940619,
      "node_id": "MDQ6VXNlcjk0MDYxOQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/940619?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Falco20019",
      "html_url": "https://github.com/Falco20019",
      "followers_url": "https://api.github.com/users/Falco20019/followers",
      "following_url": "https://api.github.com/users/Falco20019/following{/other_user}",
      "gists_url": "https://api.github.com/users/Falco20019/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Falco20019/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Falco20019/subscriptions",
      "organizations_url": "https://api.github.com/users/Falco20019/orgs",
      "repos_url": "https://api.github.com/users/Falco20019/repos",
      "events_url": "https://api.github.com/users/Falco20019/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Falco20019/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-01T16:24:45Z",
    "updated_at": "2019-03-01T16:24:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "I prefer having a resolver on c-core over this. Looking forward to the API."
  }
]
