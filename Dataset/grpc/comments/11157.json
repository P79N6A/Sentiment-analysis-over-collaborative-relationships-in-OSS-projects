[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/305242247",
    "html_url": "https://github.com/grpc/grpc/issues/11157#issuecomment-305242247",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11157",
    "id": 305242247,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTI0MjI0Nw==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-31T16:29:18Z",
    "updated_at": "2017-05-31T16:29:18Z",
    "author_association": "MEMBER",
    "body": "[This is happening for for `ServicerContext.add_callback` too](https://stackoverflow.com/questions/44243099/python-detect-client-drop-during-grpc-infinite-stream), which makes sense because in the current implementation both `is_active` and `add_callback` use the same underlying mechanism."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/315866102",
    "html_url": "https://github.com/grpc/grpc/issues/11157#issuecomment-315866102",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11157",
    "id": 315866102,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTg2NjEwMg==",
    "user": {
      "login": "kgreenek",
      "id": 1295700,
      "node_id": "MDQ6VXNlcjEyOTU3MDA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1295700?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kgreenek",
      "html_url": "https://github.com/kgreenek",
      "followers_url": "https://api.github.com/users/kgreenek/followers",
      "following_url": "https://api.github.com/users/kgreenek/following{/other_user}",
      "gists_url": "https://api.github.com/users/kgreenek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kgreenek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kgreenek/subscriptions",
      "organizations_url": "https://api.github.com/users/kgreenek/orgs",
      "repos_url": "https://api.github.com/users/kgreenek/repos",
      "events_url": "https://api.github.com/users/kgreenek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kgreenek/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-17T20:01:33Z",
    "updated_at": "2017-07-17T20:01:33Z",
    "author_association": "NONE",
    "body": "This bug is a show-stopper for us using the python implementation, because we can't tell when a client has disconnected. That means a thread is locked up forever whenever a client disconnects with no way to reclaim it, and we eventually exhaust all the threads in the pool.\r\n\r\nIs there a work-around? Or some other way to detect when a client has disconnected? Thanks!"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/326800890",
    "html_url": "https://github.com/grpc/grpc/issues/11157#issuecomment-326800890",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11157",
    "id": 326800890,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjgwMDg5MA==",
    "user": {
      "login": "ValedL",
      "id": 23161560,
      "node_id": "MDQ6VXNlcjIzMTYxNTYw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/23161560?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ValedL",
      "html_url": "https://github.com/ValedL",
      "followers_url": "https://api.github.com/users/ValedL/followers",
      "following_url": "https://api.github.com/users/ValedL/following{/other_user}",
      "gists_url": "https://api.github.com/users/ValedL/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ValedL/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ValedL/subscriptions",
      "organizations_url": "https://api.github.com/users/ValedL/orgs",
      "repos_url": "https://api.github.com/users/ValedL/repos",
      "events_url": "https://api.github.com/users/ValedL/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ValedL/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-03T12:07:21Z",
    "updated_at": "2017-09-03T12:07:21Z",
    "author_association": "NONE",
    "body": "@nathanielmanistaatgoogle \r\nAny progress/ETA on this?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/330942482",
    "html_url": "https://github.com/grpc/grpc/issues/11157#issuecomment-330942482",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11157",
    "id": 330942482,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDk0MjQ4Mg==",
    "user": {
      "login": "mehrdada",
      "id": 900411,
      "node_id": "MDQ6VXNlcjkwMDQxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/900411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mehrdada",
      "html_url": "https://github.com/mehrdada",
      "followers_url": "https://api.github.com/users/mehrdada/followers",
      "following_url": "https://api.github.com/users/mehrdada/following{/other_user}",
      "gists_url": "https://api.github.com/users/mehrdada/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mehrdada/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mehrdada/subscriptions",
      "organizations_url": "https://api.github.com/users/mehrdada/orgs",
      "repos_url": "https://api.github.com/users/mehrdada/repos",
      "events_url": "https://api.github.com/users/mehrdada/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mehrdada/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-20T18:36:53Z",
    "updated_at": "2017-09-20T23:50:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "@kgreenek @ValedL @efritz Can you observe the problem when building from source on Linux and not the `manylinux` binary pip package?\r\n\r\nConsidering that I could only reproduce this issue on manylinux pip packages and not on the built-from-source versions, it seems it is caused by the posix polling strategy and is likely the same root cause as https://github.com/grpc/grpc/issues/9688 that @kpayson64 is working on, so I guess it's best to wait and see if his PR fixes this one as well.\r\n\r\nPlease let us know if you could observe this when building from source on Linux (i.e. with other polling strategies)."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/332743388",
    "html_url": "https://github.com/grpc/grpc/issues/11157#issuecomment-332743388",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11157",
    "id": 332743388,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjc0MzM4OA==",
    "user": {
      "login": "mehrdada",
      "id": 900411,
      "node_id": "MDQ6VXNlcjkwMDQxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/900411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mehrdada",
      "html_url": "https://github.com/mehrdada",
      "followers_url": "https://api.github.com/users/mehrdada/followers",
      "following_url": "https://api.github.com/users/mehrdada/following{/other_user}",
      "gists_url": "https://api.github.com/users/mehrdada/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mehrdada/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mehrdada/subscriptions",
      "organizations_url": "https://api.github.com/users/mehrdada/orgs",
      "repos_url": "https://api.github.com/users/mehrdada/repos",
      "events_url": "https://api.github.com/users/mehrdada/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mehrdada/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-28T06:46:52Z",
    "updated_at": "2017-09-28T06:46:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "I just tried v1.6.3 pip package which is just released and am unable to observe the issue. Please reopen or file a new one with reproduction instructions if you continue to see it in 1.6.3 or newer. Thanks!"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/403223653",
    "html_url": "https://github.com/grpc/grpc/issues/11157#issuecomment-403223653",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11157",
    "id": 403223653,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzIyMzY1Mw==",
    "user": {
      "login": "sivabudh",
      "id": 618729,
      "node_id": "MDQ6VXNlcjYxODcyOQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/618729?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sivabudh",
      "html_url": "https://github.com/sivabudh",
      "followers_url": "https://api.github.com/users/sivabudh/followers",
      "following_url": "https://api.github.com/users/sivabudh/following{/other_user}",
      "gists_url": "https://api.github.com/users/sivabudh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sivabudh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sivabudh/subscriptions",
      "organizations_url": "https://api.github.com/users/sivabudh/orgs",
      "repos_url": "https://api.github.com/users/sivabudh/repos",
      "events_url": "https://api.github.com/users/sivabudh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sivabudh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-07T15:34:26Z",
    "updated_at": "2018-07-07T15:36:48Z",
    "author_association": "NONE",
    "body": "I am having this problem too. A server-side streaming `yield` will never unblock on client disconnect.\r\n\r\nProto definition:\r\n```\r\nsyntax = \"proto3\";\r\n\r\nimport \"Messages.proto\";    // Sorry that I cannot include Messages.proto definition\r\n\r\npackage phi;\r\n\r\nmessage GdiReq {\r\n    string dummy = 1;\r\n}\r\n\r\nservice Gdi {\r\n    rpc GetPumpsStatus(GdiReq) returns (stream Messages) {}\r\n}\r\n```\r\n\r\nServer:\r\n```\r\nfrom concurrent import futures\r\nimport time\r\nimport grpc\r\nimport threading\r\n\r\nimport phi_pb2\r\nimport phi_pb2_grpc\r\nimport Messages_pb2\r\n\r\n\r\nclass GdiServicer(phi_pb2_grpc.GdiServicer):\r\n    def GetPumpsStatus(self, request, context):\r\n        print(\"Got request\")\r\n        msg = Messages_pb2.Messages()\r\n        msg.m_port_id = 0\r\n        msg.m_unit_id = 1\r\n        msg.m_poll_id = 1\r\n        msg.m_msgType = Messages_pb2.Messages.TYPE_STATUS\r\n\r\n        status = Messages_pb2.Messages.Status()\r\n        status.m_status_type = Messages_pb2.Messages.STATUS_OFF\r\n\r\n        msg.m_status.CopyFrom(status)\r\n\r\n        while context.is_active():\r\n            print(f\"{threading.get_ident()}: waiting..\", end='', flush=True)\r\n            time.sleep(3)\r\n            yield msg          # <––– yield never unblocks on client disconnect\r\n            print(\"sent!\")\r\n        print(\"Done\")\r\n\r\n\r\ndef serve():\r\n    server = grpc.server(futures.ThreadPoolExecutor(max_workers=1))\r\n    phi_pb2_grpc.add_GdiServicer_to_server(GdiServicer(), server)\r\n\r\n    server_address = '0.0.0.0:60000'\r\n    print(f\"My server address {server_address}\")\r\n    server.add_insecure_port(server_address)\r\n    server.start()\r\n    try:\r\n        while True:\r\n            time.sleep(5)\r\n    except KeyboardInterrupt:\r\n        server.stop(0)\r\n\r\nif __name__ == '__main__':\r\n    print(\"I'm launching!\")\r\n\r\n    serve()\r\n```\r\n\r\nClient:\r\n```\r\nimport grpc\r\nimport uuid\r\n\r\n\r\nimport Messages_pb2\r\nimport phi_pb2\r\nimport phi_pb2_grpc\r\n\r\ndef run():\r\n    server_address = 'localhost:60000'\r\n    with grpc.insecure_channel(server_address) as channel:\r\n        stub = phi_pb2_grpc.GdiStub(channel)\r\n        statusStreams = stub.GetPumpsStatus(phi_pb2.GdiReq())\r\n        for status in statusStreams:\r\n            print(f\"{uuid.uuid1()} {status}\")\r\n\r\nif __name__ == '__main__':\r\n    run()\r\n```\r\n\r\n1. "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/403223703",
    "html_url": "https://github.com/grpc/grpc/issues/11157#issuecomment-403223703",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11157",
    "id": 403223703,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzIyMzcwMw==",
    "user": {
      "login": "sivabudh",
      "id": 618729,
      "node_id": "MDQ6VXNlcjYxODcyOQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/618729?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sivabudh",
      "html_url": "https://github.com/sivabudh",
      "followers_url": "https://api.github.com/users/sivabudh/followers",
      "following_url": "https://api.github.com/users/sivabudh/following{/other_user}",
      "gists_url": "https://api.github.com/users/sivabudh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sivabudh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sivabudh/subscriptions",
      "organizations_url": "https://api.github.com/users/sivabudh/orgs",
      "repos_url": "https://api.github.com/users/sivabudh/repos",
      "events_url": "https://api.github.com/users/sivabudh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sivabudh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-07T15:35:33Z",
    "updated_at": "2018-07-07T15:35:33Z",
    "author_association": "NONE",
    "body": "@mehrdada Kindly see sample application to reproduce the error above."
  }
]
