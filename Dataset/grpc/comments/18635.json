[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/479655119",
    "html_url": "https://github.com/grpc/grpc/pull/18635#issuecomment-479655119",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/18635",
    "id": 479655119,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTY1NTExOQ==",
    "user": {
      "login": "thelinuxfoundation",
      "id": 4450729,
      "node_id": "MDQ6VXNlcjQ0NTA3Mjk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4450729?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thelinuxfoundation",
      "html_url": "https://github.com/thelinuxfoundation",
      "followers_url": "https://api.github.com/users/thelinuxfoundation/followers",
      "following_url": "https://api.github.com/users/thelinuxfoundation/following{/other_user}",
      "gists_url": "https://api.github.com/users/thelinuxfoundation/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thelinuxfoundation/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thelinuxfoundation/subscriptions",
      "organizations_url": "https://api.github.com/users/thelinuxfoundation/orgs",
      "repos_url": "https://api.github.com/users/thelinuxfoundation/repos",
      "events_url": "https://api.github.com/users/thelinuxfoundation/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thelinuxfoundation/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-03T20:54:43Z",
    "updated_at": "2019-04-03T20:54:43Z",
    "author_association": "NONE",
    "body": "\nThank you for your pull request. Before we can look at your contribution, we need to ensure all contributors are covered by a Contributor License Agreement.\n\nAfter the following items are addressed, please respond with a new comment here, and the automated system will re-verify.\n\n* User @jbolinger isn't covered by a CLA. They will need to complete the form at https://identity.linuxfoundation.org/projects/cncf\n\n_Regards,\nCLA GitHub bot_\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/479657863",
    "html_url": "https://github.com/grpc/grpc/pull/18635#issuecomment-479657863",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/18635",
    "id": 479657863,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTY1Nzg2Mw==",
    "user": {
      "login": "jbolinger",
      "id": 4023128,
      "node_id": "MDQ6VXNlcjQwMjMxMjg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4023128?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbolinger",
      "html_url": "https://github.com/jbolinger",
      "followers_url": "https://api.github.com/users/jbolinger/followers",
      "following_url": "https://api.github.com/users/jbolinger/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbolinger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbolinger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbolinger/subscriptions",
      "organizations_url": "https://api.github.com/users/jbolinger/orgs",
      "repos_url": "https://api.github.com/users/jbolinger/repos",
      "events_url": "https://api.github.com/users/jbolinger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbolinger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-03T21:02:58Z",
    "updated_at": "2019-04-03T21:02:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "I signed it"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/479660655",
    "html_url": "https://github.com/grpc/grpc/pull/18635#issuecomment-479660655",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/18635",
    "id": 479660655,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTY2MDY1NQ==",
    "user": {
      "login": "apolcyn",
      "id": 9566254,
      "node_id": "MDQ6VXNlcjk1NjYyNTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9566254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apolcyn",
      "html_url": "https://github.com/apolcyn",
      "followers_url": "https://api.github.com/users/apolcyn/followers",
      "following_url": "https://api.github.com/users/apolcyn/following{/other_user}",
      "gists_url": "https://api.github.com/users/apolcyn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apolcyn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apolcyn/subscriptions",
      "organizations_url": "https://api.github.com/users/apolcyn/orgs",
      "repos_url": "https://api.github.com/users/apolcyn/repos",
      "events_url": "https://api.github.com/users/apolcyn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apolcyn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-03T21:11:54Z",
    "updated_at": "2019-04-03T21:11:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "For why it has the minor version pinned, I think that we just wanted to be conservative.\r\n\r\nThe only thing I want to be careful about here is is in dealing with changes in generated protobuf outputs and how those affect compatibility with the `google-protobuf` runtime. In particular, for example there's the issue where protobufs generated from the recent 3.7 release of `protoc` and the ruby protobuf plugin won't work with a `google-protobuf` runtime less than 3.7.\r\n\r\nI assume that this is in preparation to release a new minor version of `googleapis-common-protos-types` - do you know what version of protoc and the protobuf ruby plugin the protobufs contained will be generated from?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/479666163",
    "html_url": "https://github.com/grpc/grpc/pull/18635#issuecomment-479666163",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/18635",
    "id": 479666163,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTY2NjE2Mw==",
    "user": {
      "login": "jbolinger",
      "id": 4023128,
      "node_id": "MDQ6VXNlcjQwMjMxMjg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4023128?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbolinger",
      "html_url": "https://github.com/jbolinger",
      "followers_url": "https://api.github.com/users/jbolinger/followers",
      "following_url": "https://api.github.com/users/jbolinger/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbolinger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbolinger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbolinger/subscriptions",
      "organizations_url": "https://api.github.com/users/jbolinger/orgs",
      "repos_url": "https://api.github.com/users/jbolinger/repos",
      "events_url": "https://api.github.com/users/jbolinger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbolinger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-03T21:29:56Z",
    "updated_at": "2019-04-03T21:29:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "That's correct. We just released a new patch versions of `googleapis-common-protos` and `googleapis-common-protos-types` following our current convention (arguably should have been minor versions) and this came up. These gems really didn't have a proper home until a few months ago so I understand the need to be conservative, and we want to fix that.\r\n\r\nThe most recent versions are using protoc bundled with grpc-tools 1.19.0 (https://github.com/googleapis/common-protos-ruby/blob/b6c003e82ec1945fad4ba463c3d1ec87ba7c1b76/googleapis-common-protos-types/googleapis-common-protos-types.gemspec#L41) and were compiled with 3.6.1."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/479684826",
    "html_url": "https://github.com/grpc/grpc/pull/18635#issuecomment-479684826",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/18635",
    "id": 479684826,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTY4NDgyNg==",
    "user": {
      "login": "apolcyn",
      "id": 9566254,
      "node_id": "MDQ6VXNlcjk1NjYyNTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9566254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apolcyn",
      "html_url": "https://github.com/apolcyn",
      "followers_url": "https://api.github.com/users/apolcyn/followers",
      "following_url": "https://api.github.com/users/apolcyn/following{/other_user}",
      "gists_url": "https://api.github.com/users/apolcyn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apolcyn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apolcyn/subscriptions",
      "organizations_url": "https://api.github.com/users/apolcyn/orgs",
      "repos_url": "https://api.github.com/users/apolcyn/repos",
      "events_url": "https://api.github.com/users/apolcyn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apolcyn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-03T22:41:53Z",
    "updated_at": "2019-04-03T22:41:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hmm, do note that if we didn't have a pin on the minor version, and the next minor version of the types package was generated from protoc 3.7 (included in the upcoming `grpc-tools` 1.20 release), then old grpc gems that somehow installed with an `google-protobuf` gem, would be broken - so it's a little concerning to loosen the dependency entirely (a similar situation could happen  again with a future protoc/protobuf release).\r\n\r\nThe next version of grpc (1.20) has a dependency on `google-protobuf ~> 3.7` - if the next version of the types package is generated from the 1.20 tools package, what do you think about bumping grpc's types package to `~> 1.1.0` in the 1.21 grpc release?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/479692256",
    "html_url": "https://github.com/grpc/grpc/pull/18635#issuecomment-479692256",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/18635",
    "id": 479692256,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTY5MjI1Ng==",
    "user": {
      "login": "jbolinger",
      "id": 4023128,
      "node_id": "MDQ6VXNlcjQwMjMxMjg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4023128?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbolinger",
      "html_url": "https://github.com/jbolinger",
      "followers_url": "https://api.github.com/users/jbolinger/followers",
      "following_url": "https://api.github.com/users/jbolinger/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbolinger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbolinger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbolinger/subscriptions",
      "organizations_url": "https://api.github.com/users/jbolinger/orgs",
      "repos_url": "https://api.github.com/users/jbolinger/repos",
      "events_url": "https://api.github.com/users/jbolinger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbolinger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-03T23:18:22Z",
    "updated_at": "2019-04-03T23:18:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "We can do that if you think it's the safest way forward. However, I think we still have an issue where we may want to release new types through minor releases but we won't be able to do it because the dependency is pinned so tightly. \r\n\r\nWe should probably treat cases like this where the protos are not backwards compatible with older runtimes as major releases for types packages."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/479693875",
    "html_url": "https://github.com/grpc/grpc/pull/18635#issuecomment-479693875",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/18635",
    "id": 479693875,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTY5Mzg3NQ==",
    "user": {
      "login": "apolcyn",
      "id": 9566254,
      "node_id": "MDQ6VXNlcjk1NjYyNTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9566254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apolcyn",
      "html_url": "https://github.com/apolcyn",
      "followers_url": "https://api.github.com/users/apolcyn/followers",
      "following_url": "https://api.github.com/users/apolcyn/following{/other_user}",
      "gists_url": "https://api.github.com/users/apolcyn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apolcyn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apolcyn/subscriptions",
      "organizations_url": "https://api.github.com/users/apolcyn/orgs",
      "repos_url": "https://api.github.com/users/apolcyn/repos",
      "events_url": "https://api.github.com/users/apolcyn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apolcyn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-03T23:26:11Z",
    "updated_at": "2019-04-04T06:15:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "> We can do that if you think it's the safest way forward. However, I think we still have an issue where we may want to release new types through minor releases but we won't be able to do it because the dependency is pinned so tightly.\r\n\r\n> We should probably treat cases like this where the protos are not backwards compatible with older runtimes as major releases for types packages.\r\n\r\nI think that sounds good - I think we can merge this PR (it missed the 1.20 branch but would take affect in the 1.21 release in ~6 weeks). Going forward, I don't see anything wrong with bumping the major version of the types package for a breaking change."
  }
]
