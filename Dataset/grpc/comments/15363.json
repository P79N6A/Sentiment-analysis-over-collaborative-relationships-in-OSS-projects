[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/388911305",
    "html_url": "https://github.com/grpc/grpc/issues/15363#issuecomment-388911305",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15363",
    "id": 388911305,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODkxMTMwNQ==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-14T18:10:45Z",
    "updated_at": "2018-05-14T18:10:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "We've been thinking of adding support for Conan in the past (as our C++ installation story is not ideal) but never actually go to it - help would be really welcome here. \r\nA few questions:\r\n- would this support all of linux, windows and mac out of the box? (I think that's a requirement)\r\n- do conan packages exist for all our dependencies? (if not, what would we do about this?)\r\n- is there already some \"unofficial\" conan package for grpc we could test?\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/389168642",
    "html_url": "https://github.com/grpc/grpc/issues/15363#issuecomment-389168642",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15363",
    "id": 389168642,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTE2ODY0Mg==",
    "user": {
      "login": "Ozaq",
      "id": 13482142,
      "node_id": "MDQ6VXNlcjEzNDgyMTQy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/13482142?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ozaq",
      "html_url": "https://github.com/Ozaq",
      "followers_url": "https://api.github.com/users/Ozaq/followers",
      "following_url": "https://api.github.com/users/Ozaq/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ozaq/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ozaq/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ozaq/subscriptions",
      "organizations_url": "https://api.github.com/users/Ozaq/orgs",
      "repos_url": "https://api.github.com/users/Ozaq/repos",
      "events_url": "https://api.github.com/users/Ozaq/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ozaq/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-15T13:35:22Z",
    "updated_at": "2018-05-15T16:00:29Z",
    "author_association": "NONE",
    "body": "@jtattermusch I am currently trying to create a conanfile for grpc (so far only for internal use) , I found most dependencies are available:\r\n```\r\nzlib/1.2.11@conan/stable\r\nOpenSSL/1.0.2o@conan/stable\r\nprotobuf/3.5.1@bincrafters/stable\r\nc-ares/1.14.0@conan/stable\r\ngflags/2.2.1@bincrafters/stable\r\n```\r\nFor a full build with all dependencies coming in as provider=package only google benchmark is missing. So I managed to get this working on windows and only the linux build is giving me trouble when creating a debug build. In this case libprotobuf.a is not found because it is created as libprotobufd.a\r\n\r\nEDIT: configuring grpc build to find protobuf in CONFIG mode does the trick for debug builds.\r\n\r\nIn case you are interested here are my conan files for windows/linux (untested on osx)\r\n\r\nFor benchmark:\r\n```\r\nfrom conans import ConanFile, CMake, tools\r\nimport os\r\n\r\n\r\nclass GoogleBenchmarkConan(ConanFile):\r\n    name = \"benchmark\"\r\n    version = \"1.4.0\"\r\n    folder = \"benchmark-%s\" % version\r\n    description = \"Google micro benchmarking tools.\"\r\n    license = \"Apache-2.0\"\r\n    settings = \"os\", \"compiler\", \"build_type\", \"arch\"\r\n    generators = \"cmake\"\r\n    source_subfolder = \"src\"\r\n    bulild_policy = \"missing\"\r\n\r\n    def source(self):\r\n        tools.get(\"https://github.com/google/benchmark/archive/v{}.zip\".format(self.version))\r\n        os.rename(self.folder, self.source_subfolder)\r\n\r\n    def build_cmake_prefix_path(self, cmake, *paths):\r\n        prefix = cmake.definitions[\"CMAKE_PREFIX_PATH\"] = \";\".join(paths)\r\n\r\n    def build(self):\r\n        cmake = CMake(self)\r\n        cmake.definitions[\"BENCHMARK_ENABLE_TESTING\"] = \"OFF\"\r\n        cmake.definitions[\"CMAKE_INSTALL_PREFIX\"] = \"install\"\r\n        cmake.configure(source_folder=self.source_subfolder)\r\n        cmake.build()\r\n        cmake.install()\r\n\r\n    def package(self):\r\n        self.copy(\"*\", dst=\"include\", src=\"install/include\")\r\n        self.copy(\"*\", dst=\"lib\", src=\"install/lib\")\r\n        self.copy(\"*\", dst=\"bin\", src=\"install/bin\")\r\n\r\n    def package_info(self):\r\n        self.cpp_info.libs = [\"benchmark\"]\r\n```\r\n\r\nFor grpc:\r\n```\r\nfrom conans import ConanFile, CMake, tools\r\nimport os\r\n\r\n\r\nclass gRPCConan(ConanFile):\r\n    name = \"gRPC\"\r\n    version = \"1.11.1\"\r\n    folder = \"grpc-%s\" % version\r\n    description = \"Google's RPC library and framework.\"\r\n    license = \"Apache-2.0\"\r\n    requires = (\"zlib/1.2.11@conan/stable\", \"OpenSSL/1.0.2o@conan/stable\",\r\n               \"protobuf/3.5.1@bincrafters/stable\", \"c-ares/1.14.0@conan/stable\")\r\n    build_requires = \"gflags/2.2.1@bincrafters/stable\", \"benchmark/1.4.0@MY_LOCAL_REGISTRY/stable\"\r\n    settings = \"os\", \"compiler\", \"build_type\", \"arch\"\r\n    generators = \"cmake\"\r\n    short_paths = True  # Otherwise some folders go out of the 260 chars path length scope rapidly (on windows)\r\n    source_subfolder = \"src\"\r\n    default_options = \"protobuf:static_rt=False\"\r\n    bulild_policy = \"missing\"\r\n\r\n    def source(self):\r\n        tools.get(\"https://github.com/grpc/grpc/archive/v{}.zip\".format(self.version))\r\n        os.rename(\"grpc-{}\".format(self.version), self.source_subfolder)\r\n\r\n    def build_cmake_prefix_path(self, cmake, *paths):\r\n        prefix = cmake.definitions[\"CMAKE_PREFIX_PATH\"] = \";\".join(paths)\r\n\r\n    def build(self):\r\n        cmake = CMake(self)\r\n        cmake.definitions[\"gRPC_INSTALL\"] = \"ON\"\r\n        cmake.definitions[\"gRPC_BUILD_TESTS\"] = \"OFF\"\r\n        cmake.definitions[\"gRPC_PROTOBUF_PROVIDER\"] = \"package\"\r\n        cmake.definitions[\"gRPC_ZLIB_PROVIDER\"] = \"package\"\r\n        cmake.definitions[\"gRPC_CARES_PROVIDER\"] = \"package\"\r\n        cmake.definitions[\"gRPC_SSL_PROVIDER\"] = \"package\"\r\n        cmake.definitions[\"gRPC_GFLAGS_PROVIDER\"] = \"package\"\r\n        cmake.definitions[\"gRPC_BENCHMARK_PROVIDER\"] = \"package\"\r\n        cmake.definitions[\"gRPC_PROTOBUF_PACKAGE_TYPE\"] = \"CONFIG\"\r\n        cmake.definitions[\"CMAKE_INSTALL_PREFIX\"] = \"install\"\r\n        cmake.definitions[\"ZLIB_ROOT\"] = self.deps_cpp_info[\"zlib\"].rootpath\r\n        cmake.definitions[\"OPENSSL_ROOT\"] = self.deps_cpp_info[\"OpenSSL\"].rootpath\r\n        self.build_cmake_prefix_path(cmake,\r\n            self.deps_cpp_info[\"c-ares\"].rootpath,\r\n            self.deps_cpp_info[\"protobuf\"].rootpath,\r\n            self.deps_cpp_info[\"gflags\"].rootpath,\r\n            self.deps_cpp_info[\"benchmark\"].rootpath,\r\n        )\r\n        cmake.configure(source_folder=self.source_subfolder)\r\n        cmake.build()\r\n        cmake.install()\r\n\r\n    def package(self):\r\n        self.copy(\"*\", dst=\"include\", src=\"install/include\")\r\n        self.copy(\"*\", dst=\"lib\", src=\"install/lib\")\r\n        self.copy(\"*\", dst=\"bin\", src=\"install/bin\")\r\n\r\n    def package_info(self):\r\n        self.cpp_info.libs = [\r\n            \"address_sorting\",\r\n            \"gpr\",\r\n            \"grpc\",\r\n            \"grpc_cronet\",\r\n            \"grpc_csharp_ext\",\r\n            \"grpc_plugin_support\",\r\n            \"grpc_unsecure\",\r\n            \"grpc++\",\r\n            \"grpc++_cronet\",\r\n            \"grpc++_error_details\",\r\n            \"grpc++_reflection\",\r\n            \"grpc++_unsecure\"]\r\n```\r\n\r\nNote that I am publishing the benchmark package to a local artifactory so you need to substitute your own for 'MY_LOCAL_REGISTRY'\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/389852042",
    "html_url": "https://github.com/grpc/grpc/issues/15363#issuecomment-389852042",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15363",
    "id": 389852042,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTg1MjA0Mg==",
    "user": {
      "login": "luckielordie",
      "id": 2615305,
      "node_id": "MDQ6VXNlcjI2MTUzMDU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2615305?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luckielordie",
      "html_url": "https://github.com/luckielordie",
      "followers_url": "https://api.github.com/users/luckielordie/followers",
      "following_url": "https://api.github.com/users/luckielordie/following{/other_user}",
      "gists_url": "https://api.github.com/users/luckielordie/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luckielordie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luckielordie/subscriptions",
      "organizations_url": "https://api.github.com/users/luckielordie/orgs",
      "repos_url": "https://api.github.com/users/luckielordie/repos",
      "events_url": "https://api.github.com/users/luckielordie/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luckielordie/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-17T12:39:44Z",
    "updated_at": "2018-05-17T12:39:44Z",
    "author_association": "NONE",
    "body": "This is exactly what I was hoping for! Thankyou @Ozaq ! "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/404625475",
    "html_url": "https://github.com/grpc/grpc/issues/15363#issuecomment-404625475",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15363",
    "id": 404625475,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDYyNTQ3NQ==",
    "user": {
      "login": "Croydon",
      "id": 1593194,
      "node_id": "MDQ6VXNlcjE1OTMxOTQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1593194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Croydon",
      "html_url": "https://github.com/Croydon",
      "followers_url": "https://api.github.com/users/Croydon/followers",
      "following_url": "https://api.github.com/users/Croydon/following{/other_user}",
      "gists_url": "https://api.github.com/users/Croydon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Croydon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Croydon/subscriptions",
      "organizations_url": "https://api.github.com/users/Croydon/orgs",
      "repos_url": "https://api.github.com/users/Croydon/repos",
      "events_url": "https://api.github.com/users/Croydon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Croydon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-12T19:32:34Z",
    "updated_at": "2018-07-12T19:32:43Z",
    "author_association": "NONE",
    "body": "We have our own gRPC Conan package for a while now, but upstream support would be obviously the best https://github.com/inexorgame/conan-grpc/"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/404629109",
    "html_url": "https://github.com/grpc/grpc/issues/15363#issuecomment-404629109",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15363",
    "id": 404629109,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDYyOTEwOQ==",
    "user": {
      "login": "Croydon",
      "id": 1593194,
      "node_id": "MDQ6VXNlcjE1OTMxOTQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1593194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Croydon",
      "html_url": "https://github.com/Croydon",
      "followers_url": "https://api.github.com/users/Croydon/followers",
      "following_url": "https://api.github.com/users/Croydon/following{/other_user}",
      "gists_url": "https://api.github.com/users/Croydon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Croydon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Croydon/subscriptions",
      "organizations_url": "https://api.github.com/users/Croydon/orgs",
      "repos_url": "https://api.github.com/users/Croydon/repos",
      "events_url": "https://api.github.com/users/Croydon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Croydon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-12T19:46:34Z",
    "updated_at": "2018-07-12T19:46:34Z",
    "author_association": "NONE",
    "body": "For the purpose of creating a good gRPC Conan recipe I have also opened #15949."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/404797540",
    "html_url": "https://github.com/grpc/grpc/issues/15363#issuecomment-404797540",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15363",
    "id": 404797540,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDc5NzU0MA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-13T10:46:31Z",
    "updated_at": "2018-07-13T10:46:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Croydon  thanks for sharing the conan recipe."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/408198240",
    "html_url": "https://github.com/grpc/grpc/issues/15363#issuecomment-408198240",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15363",
    "id": 408198240,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwODE5ODI0MA==",
    "user": {
      "login": "Croydon",
      "id": 1593194,
      "node_id": "MDQ6VXNlcjE1OTMxOTQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1593194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Croydon",
      "html_url": "https://github.com/Croydon",
      "followers_url": "https://api.github.com/users/Croydon/followers",
      "following_url": "https://api.github.com/users/Croydon/following{/other_user}",
      "gists_url": "https://api.github.com/users/Croydon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Croydon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Croydon/subscriptions",
      "organizations_url": "https://api.github.com/users/Croydon/orgs",
      "repos_url": "https://api.github.com/users/Croydon/repos",
      "events_url": "https://api.github.com/users/Croydon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Croydon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-26T18:50:53Z",
    "updated_at": "2019-03-28T14:34:01Z",
    "author_association": "NONE",
    "body": "# Todo \r\n\r\n**Hard blockers:**\r\n  * [x] Include Protobuf into conan-center https://github.com/bincrafters/community/issues/381\r\n    * Protobuf is a requirement of gRPC\r\n  * [ ] [Implement a useful test_package](https://github.com/inexorgame/conan-grpc/issues/4)\r\n    * **HELP APPRECIATED**\r\n  * [ ] [Fix x86 builds of Clang 3.9, Clang 4 and Clang 5](https://github.com/inexorgame/conan-grpc/issues/5)\r\n    * **HELP APPRECIATED**\r\n\r\n\r\n**Nice to have:**\r\n  * [ ] [Figure out if we can update to newer OpenSSL versions](https://github.com/inexorgame/conan-grpc/issues/6)\r\n    * Newer OpenSSL versions also means a newer Conan recipe for it, which can save maintenance time as newer recipe versions get more attention and care \r\n    * **HELP APPRECIATED**\r\n  * [ ] Use GFlags and Benchmark only when tests enabled #11068\r\n    * brings down build time\r\n  * [ ] Implement CMake options for building/not building every plugin #15949 \r\n    * this makes the build customizable, without unreliable patching of the CMakeLists.txt file\r\n  * [ ] Official Google Benchmark Conan support https://github.com/google/benchmark/issues/635\r\n    * [x] Basic official support https://github.com/google/benchmark/pull/728\r\n    * [ ] CI & CD support https://github.com/google/benchmark/pull/647\r\n    * Benchmark is a requirement of gRPC\r\n    * [ ] **Please note:** Once Conan support is merged, the submodule in gRPC should be updated, to a Benchmark version including Conan support\r\n\r\nI will keep this list up-to-date till this is done."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/432172040",
    "html_url": "https://github.com/grpc/grpc/issues/15363#issuecomment-432172040",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15363",
    "id": 432172040,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMjE3MjA0MA==",
    "user": {
      "login": "michaelmaguire",
      "id": 2184330,
      "node_id": "MDQ6VXNlcjIxODQzMzA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2184330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelmaguire",
      "html_url": "https://github.com/michaelmaguire",
      "followers_url": "https://api.github.com/users/michaelmaguire/followers",
      "following_url": "https://api.github.com/users/michaelmaguire/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelmaguire/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelmaguire/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelmaguire/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelmaguire/orgs",
      "repos_url": "https://api.github.com/users/michaelmaguire/repos",
      "events_url": "https://api.github.com/users/michaelmaguire/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelmaguire/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-23T09:31:48Z",
    "updated_at": "2018-10-23T09:32:35Z",
    "author_association": "NONE",
    "body": "Is there a reason we don't use the Conan tools collect_libs function:\r\n\r\n```\r\n    self.cpp_info.libs = tools.collect_libs(self)\r\n```\r\n\r\ninstead of manually hard-coding the list of libraries?\r\n\r\nWhen I use that against v1.15.1 it finds:\r\n\r\n> address_sorting gpr grpc++ grpc++_cronet grpc++_error_details grpc++_reflection grpc++_unsecure grpc grpcpp_channelz grpc_cronet grpc_plugin_support grpc_unsecure \r\n\r\nwhich looks equivalent and seems far less brittle"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/432215646",
    "html_url": "https://github.com/grpc/grpc/issues/15363#issuecomment-432215646",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15363",
    "id": 432215646,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMjIxNTY0Ng==",
    "user": {
      "login": "Croydon",
      "id": 1593194,
      "node_id": "MDQ6VXNlcjE1OTMxOTQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1593194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Croydon",
      "html_url": "https://github.com/Croydon",
      "followers_url": "https://api.github.com/users/Croydon/followers",
      "following_url": "https://api.github.com/users/Croydon/following{/other_user}",
      "gists_url": "https://api.github.com/users/Croydon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Croydon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Croydon/subscriptions",
      "organizations_url": "https://api.github.com/users/Croydon/orgs",
      "repos_url": "https://api.github.com/users/Croydon/repos",
      "events_url": "https://api.github.com/users/Croydon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Croydon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-23T11:53:26Z",
    "updated_at": "2018-10-23T11:53:26Z",
    "author_association": "NONE",
    "body": "`tools.collect_libs(self)` is only useful when the order of the linking doesn't matter. When someone could help me with that then I will happily complete this https://github.com/inexorgame/conan-grpc/blob/88908f9d7c99e074233f3c5b6f74e12dc3c450da/conanfile.py#L127"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/450328843",
    "html_url": "https://github.com/grpc/grpc/issues/15363#issuecomment-450328843",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15363",
    "id": 450328843,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDMyODg0Mw==",
    "user": {
      "login": "EkremH",
      "id": 6370075,
      "node_id": "MDQ6VXNlcjYzNzAwNzU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6370075?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/EkremH",
      "html_url": "https://github.com/EkremH",
      "followers_url": "https://api.github.com/users/EkremH/followers",
      "following_url": "https://api.github.com/users/EkremH/following{/other_user}",
      "gists_url": "https://api.github.com/users/EkremH/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/EkremH/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/EkremH/subscriptions",
      "organizations_url": "https://api.github.com/users/EkremH/orgs",
      "repos_url": "https://api.github.com/users/EkremH/repos",
      "events_url": "https://api.github.com/users/EkremH/events{/privacy}",
      "received_events_url": "https://api.github.com/users/EkremH/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-28T09:42:56Z",
    "updated_at": "2018-12-28T09:42:56Z",
    "author_association": "NONE",
    "body": "I'm also very interested in a Conan package for GRPC, need this for my current project."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/450861250",
    "html_url": "https://github.com/grpc/grpc/issues/15363#issuecomment-450861250",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15363",
    "id": 450861250,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDg2MTI1MA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-02T13:19:28Z",
    "updated_at": "2019-01-02T13:19:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "@EkremH  looks like you should be able to use the community-provided  conan package here:\r\nhttps://github.com/inexorgame/conan-grpc/blob/testing/1.17.2/conanfile.py\r\n\r\nI haven't tried the package myself but it seems like others have been using it.\r\n@Croydon  is there any way to see the usage statistics for the conan package you created? If it is used successfully by users and it works for them, we'd be happy to provide some visibility and invite the community to contribute. Would you be interested in writing a blogpost (using gRPC with Conan) for the grpc.io website?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/451708913",
    "html_url": "https://github.com/grpc/grpc/issues/15363#issuecomment-451708913",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15363",
    "id": 451708913,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTcwODkxMw==",
    "user": {
      "login": "Croydon",
      "id": 1593194,
      "node_id": "MDQ6VXNlcjE1OTMxOTQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1593194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Croydon",
      "html_url": "https://github.com/Croydon",
      "followers_url": "https://api.github.com/users/Croydon/followers",
      "following_url": "https://api.github.com/users/Croydon/following{/other_user}",
      "gists_url": "https://api.github.com/users/Croydon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Croydon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Croydon/subscriptions",
      "organizations_url": "https://api.github.com/users/Croydon/orgs",
      "repos_url": "https://api.github.com/users/Croydon/repos",
      "events_url": "https://api.github.com/users/Croydon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Croydon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-06T02:10:57Z",
    "updated_at": "2019-01-06T02:10:57Z",
    "author_association": "NONE",
    "body": ">  is there any way to see the usage statistics for the conan package you created? \r\n\r\nBintray logs downloads, but this is in no way representative for real interest in a grpc Conan recipe, since\r\n  * it is right now only within the repository of Inexor and not [conan-center](https://bintray.com/conan/conan-center) or @bincrafters, so it has very little exposure and discoverability \r\n    * since you have shown interest in Conan support I don't like to move it to bincrafters (even though I'm also part of this community, which maintains ~400 Conan recipes) and I'm definitely not trying to bring it into conan-center from Inexor, otherwise we would need to get through a deprecation process and migrate users as soon as grpc has official Conan support\r\n    * to summarize: my wish is that we can get the grpc recipe mature within the boundaries of Inexor and then getting it into grpc itself\r\n  * it is measuring downloads from Bintray, meaning if somebody uses it from GitHub it won't be noticed. Similar to when someone is copying it to a own Bintray Conan repository, which many people are doing - especially companies who want to control exactly what is getting into their build systems\r\n  * when our grpc recipe is consumed from Bintray by CI jobs then we can have hundreds of downloads within no-time, but that still doesn't represents users and even less user interest\r\n\r\nWith that being said, statistics are directly visible on the package: https://bintray.com/inexorgame/inexor-conan/grpc%3Ainexorgame#statistics\r\n\r\n___________\r\n\r\n> Would you be interested in writing a blogpost (using gRPC with Conan) for the grpc.io website?\r\n\r\nI'm definitely interested in doing this. However, only after Protobuf/protoc_installer landed in conan-center (see [todo list](https://github.com/grpc/grpc/issues/15363#issuecomment-408198240)), before that we would fight at to many places at the same time I guess.\r\n\r\nWith that being said I still hope for some early tester and contributors.\r\nThere are currently three issues which are non-Conan specific and could be solved/answered by some people who have more insight into grpc than me. Namely:\r\n  * [ ] [Implement a useful test_package](https://github.com/inexorgame/conan-grpc/issues/4)\r\n  * [ ] [Fix x86 builds of Clang 3.9, Clang 4 and Clang 5](https://github.com/inexorgame/conan-grpc/issues/5)\r\n  * [ ] [Figure out if we can update to newer OpenSSL versions](https://github.com/inexorgame/conan-grpc/issues/6)\r\n\r\nI have updated the [todo list](https://github.com/grpc/grpc/issues/15363#issuecomment-408198240) above accordingly.\r\n\r\nThanks! 😄 \r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/452221125",
    "html_url": "https://github.com/grpc/grpc/issues/15363#issuecomment-452221125",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15363",
    "id": 452221125,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjIyMTEyNQ==",
    "user": {
      "login": "Siron777",
      "id": 15027951,
      "node_id": "MDQ6VXNlcjE1MDI3OTUx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/15027951?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Siron777",
      "html_url": "https://github.com/Siron777",
      "followers_url": "https://api.github.com/users/Siron777/followers",
      "following_url": "https://api.github.com/users/Siron777/following{/other_user}",
      "gists_url": "https://api.github.com/users/Siron777/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Siron777/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Siron777/subscriptions",
      "organizations_url": "https://api.github.com/users/Siron777/orgs",
      "repos_url": "https://api.github.com/users/Siron777/repos",
      "events_url": "https://api.github.com/users/Siron777/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Siron777/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-08T08:53:58Z",
    "updated_at": "2019-01-08T08:58:42Z",
    "author_association": "NONE",
    "body": "At the request of Croydon (from the issue #17438), the recipe we are using in my company is the following one:\r\n```\r\nfrom conans import ConanFile, CMake, tools\r\nimport os,sys;\r\n\r\nclass gRPCConan(ConanFile):\r\n    name = \"gRPC\"\r\n    version = \"1.16.0\"\r\n    license = \"MIT\"\r\n    url = \"https://grpc.io/\"\r\n    description = \"gRPC\"\r\n    settings = \"os\", \"compiler\", \"build_type\", \"arch\"\r\n    options =   {   \r\n                    \"withOpenSSL\" : [\"ON\", \"OFF\"]\r\n                }\r\n    default_options = \"withOpenSSL=ON\"\r\n    generators = \"cmake\"\r\n\r\n    scm =   {\r\n                \"type\": \"git\",\r\n                \"subfolder\": \"gRPC_v%s\" % version,\r\n                \"url\": \"https://github.com/grpc/grpc\",\r\n                \"revision\": \"v%s\" % version,\r\n                \"submodule\" : \"recursive\"\r\n            }\r\n\r\n    def build_requirements(self):\r\n        if (self.options.withOpenSSL == \"ON\"):            \r\n            self.build_requires(\"OpenSSL/1.1.1@AI/extern\")\r\n        self.build_requires(\"protobuf/3.6.1@AI/extern\")\r\n\r\n    def requirements(self):\r\n        self.requires(\"zlib/1.2.11@AI/extern\")\r\n        self.requires(\"c-ares/1.14.0@AI/extern\")\r\n        \r\n    def build_cmake_prefix_path(self, cmake, *paths):\r\n        prefix = cmake.definitions[\"CMAKE_PREFIX_PATH\"] = \";\".join(paths)\r\n        \r\n    def build(self):\r\n                        \r\n        cmake = CMake(self, set_cmake_flags=True)    \r\n        \r\n        if (self.options.withOpenSSL):\r\n            cmake.definitions[\"gRPC_SSL_PROVIDER\"]=\"package\"\r\n            cmake.definitions[\"OPENSSL_ROOT_DIR\"] = self.deps_cpp_info[\"OpenSSL\"].rootpath \r\n            \r\n        cmake.definitions[\"gRPC_INSTALL\"] = \"ON\"\r\n        cmake.definitions[\"gRPC_BUILD_TESTS\"] = \"OFF\"\r\n        cmake.definitions[\"gRPC_PROTOBUF_PROVIDER\"] = \"package\"\r\n        cmake.definitions[\"gRPC_ZLIB_PROVIDER\"] = \"package\"\r\n        cmake.definitions[\"gRPC_CARES_PROVIDER\"] = \"package\"\r\n        cmake.definitions[\"gRPC_PROTOBUF_PACKAGE_TYPE\"] = \"CONFIG\"\r\n        cmake.definitions[\"gRPC_GFLAGS_PROVIDER\"] = \"module\"\r\n        cmake.definitions[\"ZLIB_ROOT\"] = self.deps_cpp_info[\"zlib\"].rootpath\r\n        self.build_cmake_prefix_path(cmake,\r\n            self.deps_cpp_info[\"c-ares\"].rootpath,\r\n            self.deps_cpp_info[\"protobuf\"].rootpath\r\n        )\r\n        \r\n        argList = list()      \r\n       \r\n        cmake.configure(source_folder=\"%s\" % self.scm[\"subfolder\"], args=argList)\r\n        cmake.build()\r\n\r\n    def package(self):    \r\n        cmake = CMake(self, set_cmake_flags=True)\r\n        cmake.install()\r\n\r\n    def package_info(self):\r\n        self.cpp_info.libdirs = ['lib']\r\n        self.cpp_info.includedirs = ['include']\r\n        self.cpp_info.bindirs = [\"bin\"] \r\n        self.env_info.path.append(os.path.join(self.package_folder, 'bin'))\r\n        self.env_info.path.append(os.path.join(self.package_folder, 'lib'))        \r\n        self.cpp_info.builddirs = [\"cmake\", \"bin\", \"lib/cmake/grpc\"]     \r\n        self.cpp_info.libs = [\r\n            \"address_sorting\",\r\n            \"gpr\",\r\n            \"grpc\",\r\n            \"grpc_cronet\",\r\n            \"grpc_csharp_ext\",\r\n            \"grpc_plugin_support\",\r\n            \"grpc_unsecure\",\r\n            \"grpc++\",\r\n            \"grpc++_cronet\",\r\n            \"grpc++_error_details\",\r\n            \"grpc++_reflection\",\r\n            \"grpc++_unsecure\"]\r\n```\r\nI think it was inspired from the one of bincrafter."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/452228470",
    "html_url": "https://github.com/grpc/grpc/issues/15363#issuecomment-452228470",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15363",
    "id": 452228470,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjIyODQ3MA==",
    "user": {
      "login": "Croydon",
      "id": 1593194,
      "node_id": "MDQ6VXNlcjE1OTMxOTQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1593194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Croydon",
      "html_url": "https://github.com/Croydon",
      "followers_url": "https://api.github.com/users/Croydon/followers",
      "following_url": "https://api.github.com/users/Croydon/following{/other_user}",
      "gists_url": "https://api.github.com/users/Croydon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Croydon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Croydon/subscriptions",
      "organizations_url": "https://api.github.com/users/Croydon/orgs",
      "repos_url": "https://api.github.com/users/Croydon/repos",
      "events_url": "https://api.github.com/users/Croydon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Croydon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-08T09:19:25Z",
    "updated_at": "2019-01-08T09:19:25Z",
    "author_association": "NONE",
    "body": "@Siron777 Thanks for sharing! \r\n\r\n> I think it was inspired from the one of bincrafter.\r\n\r\n@Bincrafters don't have a grpc recipe. I'm part of Bincrafters, but we will go with the strategy that we want to bring it to a mature state at the [Inexor repository](https://github.com/inexorgame/conan-grpc) and then we would like to see official support upstream 😄 \r\n\r\nPlease consider contributing [to the recipe](https://github.com/inexorgame/conan-grpc)\r\n"
  }
]
