[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/319633596",
    "html_url": "https://github.com/grpc/grpc/issues/11989#issuecomment-319633596",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11989",
    "id": 319633596,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTYzMzU5Ng==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-02T10:27:39Z",
    "updated_at": "2017-08-02T10:28:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Observations:\r\n1. It's always opt tests (dbg tests are passing).\r\n2. They are all  ClientStreaming tests cases.\r\n3. unlike Jenkins mac workers, Kokoro workers have only 1 core (perhaps that exposes some synchronization issue that doesn't exhibit in dbg mode?)."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/319719592",
    "html_url": "https://github.com/grpc/grpc/issues/11989#issuecomment-319719592",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11989",
    "id": 319719592,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTcxOTU5Mg==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-02T16:07:25Z",
    "updated_at": "2017-08-02T16:07:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am able to reproduce locally on my mac laptop:\r\n\r\n`tools/run_tests/run_tests.py -l c++ -r 'AsyncEnd2end/AsyncEnd2endTest.SimpleClientStreaming/0'`\r\n\r\n```\r\n*******************************\r\nCaught signal SIGSEGV\r\n  no backtrace\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/319722063",
    "html_url": "https://github.com/grpc/grpc/issues/11989#issuecomment-319722063",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11989",
    "id": 319722063,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTcyMjA2Mw==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-02T16:15:44Z",
    "updated_at": "2017-08-02T16:15:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "lldb output\r\n```\r\nProcess 55341 stopped\r\n* thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=EXC_I386_GPFLT)\r\n    frame #0: 0x000000010003a585 async_end2end_test`grpc::ClientAsyncWriter<grpc::testing::EchoRequest>::ClientAsyncWriter<grpc::testing::EchoResponse>(this=0x00000001021fd1d8, call=Call @ 0x00007fff5fbfe780, context=0x00007fff5fbfecc8, response=0x00007fff5fbfe918, tag=0x0000000000000001) at async_stream.h:342 [opt]\r\n   339 \t private:\r\n   340 \t  template <class R>\r\n   341 \t  ClientAsyncWriter(Call call, ClientContext* context, R* response, void* tag)\r\n-> 342 \t      : context_(context), call_(call) {\r\n   343 \t    finish_ops_.RecvMessage(response);\r\n   344 \t    finish_ops_.AllowNoMessage();\r\n   345 \t    // if corked bit is set in context, we buffer up the initial metadata to\r\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/319722648",
    "html_url": "https://github.com/grpc/grpc/issues/11989#issuecomment-319722648",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11989",
    "id": 319722648,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTcyMjY0OA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-02T16:17:34Z",
    "updated_at": "2017-08-02T16:17:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\r\n(lldb) bt\r\n* thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=EXC_I386_GPFLT)\r\n  * frame #0: 0x000000010003a585 async_end2end_test`grpc::ClientAsyncWriter<grpc::testing::EchoRequest>::ClientAsyncWriter<grpc::testing::EchoResponse>(this=0x00000001021fd1d8, call=Call @ 0x00007fff5fbfe780, context=0x00007fff5fbfecc8, response=0x00007fff5fbfe918, tag=0x0000000000000001) at async_stream.h:342 [opt]\r\n    frame #1: 0x0000000100036af6 async_end2end_test`grpc::testing::EchoTestService::Stub::AsyncRequestStreamRaw(grpc::ClientContext*, grpc::testing::EchoResponse*, grpc::CompletionQueue*, void*) [inlined] grpc::ClientAsyncWriter<grpc::testing::EchoRequest>::ClientAsyncWriter<grpc::testing::EchoResponse>(this=0x00000001021fd1d8, context=0x00007fff5fbfecc8, response=0x00007fff5fbfe918, tag=0x0000000000000001) at async_stream.h:342 [opt]\r\n    frame #2: 0x0000000100036ac2 async_end2end_test`grpc::testing::EchoTestService::Stub::AsyncRequestStreamRaw(grpc::ClientContext*, grpc::testing::EchoResponse*, grpc::CompletionQueue*, void*) [inlined] grpc::ClientAsyncWriter<grpc::testing::EchoRequest>* grpc::ClientAsyncWriter<grpc::testing::EchoRequest>::Create<grpc::testing::EchoResponse>(channel=<unavailable>, cq=<unavailable>, method=<unavailable>, context=0x00007fff5fbfecc8, response=0x00007fff5fbfe918, tag=0x0000000000000001) at async_stream.h:276 [opt]\r\n    frame #3: 0x0000000100036a93 async_end2end_test`grpc::testing::EchoTestService::Stub::AsyncRequestStreamRaw(this=<unavailable>, context=0x00007fff5fbfecc8, response=<unavailable>, cq=<unavailable>, tag=<unavailable>) at echo.grpc.pb.cc:53 [opt]\r\n    frame #4: 0x0000000100008dc7 async_end2end_test`grpc::testing::(anonymous namespace)::AsyncEnd2endTest_SimpleClientStreaming_Test::TestBody() [inlined] grpc::testing::EchoTestService::Stub::AsyncRequestStream(this=<unavailable>, context=<unavailable>, response=<unavailable>, cq=<unavailable>, tag=<unavailable>) at echo.grpc.pb.h:100 [opt]\r\n    frame #5: 0x0000000100008dbc async_end2end_test`grpc::testing::(anonymous namespace)::AsyncEnd2endTest_SimpleClientStreaming_Test::TestBody(this=0x0000000100a3f450) at async_end2end_test.cc:445 [opt]\r\n    frame #6: 0x00000001001e214a async_end2end_test`void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(object=0x0000000100a3f450, method=21 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00, location=\"the test body\")(), char const*) at gtest.cc:2402\r\n    frame #7: 0x000000010019da27 async_end2end_test`void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(object=0x0000000100a3f450, method=21 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00, location=\"the test body\")(), char const*) at gtest.cc:2438\r\n    frame #8: 0x000000010019d965 async_end2end_test`testing::Test::Run(this=0x0000000100a3f450) at gtest.cc:2474\r\n    frame #9: 0x000000010019f518 async_end2end_test`testing::TestInfo::Run(this=0x0000000100b1b870) at gtest.cc:2656\r\n    frame #10: 0x00000001001a0d27 async_end2end_test`testing::TestCase::Run(this=0x0000000100902ee0) at gtest.cc:2774\r\n    frame #11: 0x00000001001af32c async_end2end_test`testing::internal::UnitTestImpl::RunAllTests(this=0x0000000100b00c90) at gtest.cc:4649\r\n    frame #12: 0x00000001001e609a async_end2end_test`bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(object=0x0000000100b00c90, method=a0 ef 1a 00 01 00 00 00 00 00 00 00 00 00 00 00, location=\"auxiliary test code (environments or event listeners)\")(), char const*) at gtest.cc:2402\r\n    frame #13: 0x00000001001aed37 async_end2end_test`bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(object=0x0000000100b00c90, method=a0 ef 1a 00 01 00 00 00 00 00 00 00 00 00 00 00, location=\"auxiliary test code (environments or event listeners)\")(), char const*) at gtest.cc:2438\r\n    frame #14: 0x00000001001aebe8 async_end2end_test`testing::UnitTest::Run(this=0x00000001002933e8) at gtest.cc:4257\r\n    frame #15: 0x000000010000122a async_end2end_test`main [inlined] RUN_ALL_TESTS() at gtest.h:2233 [opt]\r\n    frame #16: 0x000000010000121d async_end2end_test`main(argc=2, argv=0x00007fff5fbff618) at async_end2end_test.cc:1809 [opt]\r\n    frame #17: 0x00007fffac28d235 libdyld.dylib`start + 1\r\n    frame #18: 0x00007fffac28d235 libdyld.dylib`start + 1\r\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/319725798",
    "html_url": "https://github.com/grpc/grpc/issues/11989#issuecomment-319725798",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11989",
    "id": 319725798,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTcyNTc5OA==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-02T16:28:43Z",
    "updated_at": "2017-08-02T16:28:43Z",
    "author_association": "MEMBER",
    "body": "I can repro this on my laptop. I can look it over.\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/319780141",
    "html_url": "https://github.com/grpc/grpc/issues/11989#issuecomment-319780141",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11989",
    "id": 319780141,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTc4MDE0MQ==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-02T19:54:34Z",
    "updated_at": "2017-08-02T20:05:32Z",
    "author_association": "MEMBER",
    "body": "Playing with lldb, I fear that there is something wrong with arena allocation, like some out-of-bounds error, though I need to look harder to find it. Such errors often materialize faster and more prominently on Mac than other platforms. Looking some more. This is also consistent with the observation that this only happens on ClientStreaming tests since each arena-allocated class is allocated differently and all of those use the ClientAsyncWriter object.\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/319794570",
    "html_url": "https://github.com/grpc/grpc/issues/11989#issuecomment-319794570",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11989",
    "id": 319794570,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTc5NDU3MA==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-02T20:51:17Z",
    "updated_at": "2017-08-03T06:08:00Z",
    "author_association": "MEMBER",
    "body": "`bins/opt/async_end2end_test --gtest_filter=AsyncEnd2end/AsyncEnd2endTest.SimpleClientStreaming/0`\r\n\r\nOn May 2 at commit  158fa3a, this test worked.\r\nOn May 2 at commit ae95edb, this test fails.\r\n\r\nContinuing to test"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/319877428",
    "html_url": "https://github.com/grpc/grpc/issues/11989#issuecomment-319877428",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11989",
    "id": 319877428,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTg3NzQyOA==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-03T06:11:23Z",
    "updated_at": "2017-08-03T06:11:23Z",
    "author_association": "MEMBER",
    "body": "I believe that this was broken by #10828 (my PR) . Haven't investigated why yet but this seems to be the culprit assuming that only merge commits count.\r\n\r\n"
  }
]
