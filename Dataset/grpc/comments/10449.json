[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/291294361",
    "html_url": "https://github.com/grpc/grpc/pull/10449#issuecomment-291294361",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10449",
    "id": 291294361,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTI5NDM2MQ==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-03T22:37:31Z",
    "updated_at": "2017-04-03T22:37:31Z",
    "author_association": "NONE",
    "body": "```\nNo significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/291296770",
    "html_url": "https://github.com/grpc/grpc/pull/10449#issuecomment-291296770",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10449",
    "id": 291296770,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTI5Njc3MA==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-03T22:47:19Z",
    "updated_at": "2017-04-03T22:47:19Z",
    "author_association": "NONE",
    "body": "```\nNo significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/291315457",
    "html_url": "https://github.com/grpc/grpc/pull/10449#issuecomment-291315457",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10449",
    "id": 291315457,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTMxNTQ1Nw==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-03T23:28:58Z",
    "updated_at": "2017-04-03T23:28:58Z",
    "author_association": "NONE",
    "body": "```\nNo significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/291546005",
    "html_url": "https://github.com/grpc/grpc/pull/10449#issuecomment-291546005",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10449",
    "id": 291546005,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTU0NjAwNQ==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-04T15:57:41Z",
    "updated_at": "2017-04-04T15:57:41Z",
    "author_association": "NONE",
    "body": "```\nNo significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/291629732",
    "html_url": "https://github.com/grpc/grpc/pull/10449#issuecomment-291629732",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10449",
    "id": 291629732,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTYyOTczMg==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-04T20:57:47Z",
    "updated_at": "2017-04-04T20:57:47Z",
    "author_association": "NONE",
    "body": "```\nNo significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/291986804",
    "html_url": "https://github.com/grpc/grpc/pull/10449#issuecomment-291986804",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10449",
    "id": 291986804,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTk4NjgwNA==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-05T20:27:45Z",
    "updated_at": "2017-04-05T20:27:45Z",
    "author_association": "NONE",
    "body": "```\nNo significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/292018890",
    "html_url": "https://github.com/grpc/grpc/pull/10449#issuecomment-292018890",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10449",
    "id": 292018890,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjAxODg5MA==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-05T22:45:42Z",
    "updated_at": "2017-04-05T22:45:42Z",
    "author_association": "NONE",
    "body": "```\nNo significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/292208728",
    "html_url": "https://github.com/grpc/grpc/pull/10449#issuecomment-292208728",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10449",
    "id": 292208728,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjIwODcyOA==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-06T15:22:21Z",
    "updated_at": "2017-04-06T15:22:21Z",
    "author_association": "MEMBER",
    "body": "\n\n\n\nReviewed 58 of 78 files at r1, 7 of 9 files at r2, 6 of 8 files at r3, 12 of 12 files at r4, 1 of 1 files at r5.\nReview status: all files reviewed at latest revision, 18 unresolved discussions, some commit checks failed.\n\n---\n\n*[BUILD, line 753 at r5](https://reviewable.io:443/reviews/grpc/grpc/10449#-Kh2esc3gyju-DtbJBx0:-Kh2esc3gyju-DtbJBx1:b-9884il) ([raw file](https://github.com/grpc/grpc/blob/ff558bac5c7be1571db720f23974d70b75385415/BUILD#L753)):*\n> ```Python\n> \n> grpc_cc_library(\n>     name = \"grpc_deadline_filter\",\n> ```\n\nOut of curiosity, in what build will deadline support be optional?\n\n---\n\n*[BUILD, line 783 at r5](https://reviewable.io:443/reviews/grpc/grpc/10449#-Kh2f2GCV4GGKFUM1lLQ:-Kh2f2GCV4GGKFUM1lLR:b-wcmy01) ([raw file](https://github.com/grpc/grpc/blob/ff558bac5c7be1571db720f23974d70b75385415/BUILD#L783)):*\n> ```Python\n>     name = \"grpc_http_filters\",\n>     hdrs = [\n>         \"src/core/ext/filters/http/compress/compress_filter.h\",\n> ```\n\nWhile we're doing this, would it make sense to rename this to something like `message_compress_filter`, so that it's clearly disambiguated from the upcoming stream compression code?\n\n---\n\n*[build.yaml, line 176 at r5](https://reviewable.io:443/reviews/grpc/grpc/10449#-Kh2fOkT_EzvLpBv8e-7:-Kh2fOkT_EzvLpBv8e-8:b-g8kycw) ([raw file](https://github.com/grpc/grpc/blob/ff558bac5c7be1571db720f23974d70b75385415/build.yaml#L176)):*\n> ```YAML\n>   - include/grpc/status.h\n>   headers:\n>   - src/core/ext/filters/deadline/deadline_filter.h\n> ```\n\nI think this should be removed, since it's been moved to its own target.\n\n---\n\n*[build.yaml, line 283 at r5](https://reviewable.io:443/reviews/grpc/grpc/10449#-Kh2fawqTRLsQTrXo84T:-Kh2fawqTRLsQTrXo84U:brhumzt) ([raw file](https://github.com/grpc/grpc/blob/ff558bac5c7be1571db720f23974d70b75385415/build.yaml#L283)):*\n> ```YAML\n>   - src/core/lib/transport/transport_impl.h\n>   src:\n>   - src/core/ext/filters/deadline/deadline_filter.c\n> ```\n\nSame here.\n\n---\n\n*[include/grpc/impl/codegen/grpc_types.h, line 181 at r5](https://reviewable.io:443/reviews/grpc/grpc/10449#-Kh2g-GgZfP-aCL6bhpd:-Kh2g-GgZfP-aCL6bhpe:bz8eyfs) ([raw file](https://github.com/grpc/grpc/blob/ff558bac5c7be1571db720f23974d70b75385415/include/grpc/impl/codegen/grpc_types.h#L181)):*\n> /** Enable/disable support for deadline checking. Defaults to 1, unless\n>     GRPC_ARG_MINIMAL_STACK is enabled, in which case it defaults to 0 */\n\nDo we need to say something here like \"...unless built without deadline support\"?\n\n---\n\n*[src/core/ext/filters/client_channel/client_channel.c, line 1281 at r5](https://reviewable.io:443/reviews/grpc/grpc/10449#-Kh2gflnxYn7B6w9P3Ng:-Kh2gflnxYn7B6w9P3Nh:b47d71y) ([raw file](https://github.com/grpc/grpc/blob/ff558bac5c7be1571db720f23974d70b75385415/src/core/ext/filters/client_channel/client_channel.c#L1281)):*\n>     grpc_deadline_state_init(exec_ctx, elem, args->call_stack);\n>     grpc_deadline_state_start(exec_ctx, elem, calld->deadline);\n\nThese two methods could probably be combined, since I don't think either of them are actually called from anywhere else anymore.\n\n---\n\n*[src/core/ext/filters/deadline/deadline_filter.c, line 356 at r5](https://reviewable.io:443/reviews/grpc/grpc/10449#-Kh2h8ggLvIIavEpuVTt:-Kh2h8ghh8AWylCyX_F6:b-12xnrv) ([raw file](https://github.com/grpc/grpc/blob/ff558bac5c7be1571db720f23974d70b75385415/src/core/ext/filters/deadline/deadline_filter.c#L356)):*\n> ```C\n>   const grpc_arg* a =\n>       grpc_channel_args_find(channel_args, GRPC_ARG_ENABLE_DEADLINE_CHECKS);\n>   if (a != NULL && a->type == GRPC_ARG_INTEGER && a->value.integer != 0) {\n> ```\n\nLet's use `grpc_channel_arg_get_integer()` here.\n\n---\n\n*[src/core/ext/filters/deadline/deadline_filter.c, line 357 at r5](https://reviewable.io:443/reviews/grpc/grpc/10449#-Kh2hP-PinNGqN_WG97N:-Kh2hP-PinNGqN_WG97O:bi6q47z) ([raw file](https://github.com/grpc/grpc/blob/ff558bac5c7be1571db720f23974d70b75385415/src/core/ext/filters/deadline/deadline_filter.c#L357)):*\n> ```C\n>       grpc_channel_args_find(channel_args, GRPC_ARG_ENABLE_DEADLINE_CHECKS);\n>   if (a != NULL && a->type == GRPC_ARG_INTEGER && a->value.integer != 0) {\n>     enable = true;\n> ```\n\nShouldn't this be `&=`?  Otherwise, we're ignoring the value of the want_minimal_stack arg in favor of the enable_deadline_checks arg.\n\n---\n\n*[src/core/ext/filters/http/http_filters_plugin.c, line 54 at r5](https://reviewable.io:443/reviews/grpc/grpc/10449#-Kh2jF0uFcMawGpCW2uO:-Kh2jF0uFcMawGpCW2uP:bpofuk) ([raw file](https://github.com/grpc/grpc/blob/ff558bac5c7be1571db720f23974d70b75385415/src/core/ext/filters/http/http_filters_plugin.c#L54)):*\n> ```C\n>     grpc_channel_stack_builder *builder) {\n>   grpc_transport *t = grpc_channel_stack_builder_get_transport(builder);\n>   return t && strstr(t->vtable->name, \"http\");\n> ```\n\n`t != NULL`\n\n---\n\n*[src/core/ext/filters/http/http_filters_plugin.c, line 68 at r5](https://reviewable.io:443/reviews/grpc/grpc/10449#-Kh2jkSZYlJ3JtB4fHqI:-Kh2jkS_4324mYjseWj7:b-faun3r) ([raw file](https://github.com/grpc/grpc/blob/ff558bac5c7be1571db720f23974d70b75385415/src/core/ext/filters/http/http_filters_plugin.c#L68)):*\n> ```C\n>       grpc_channel_args_find(channel_args, filtarg->control_channel_arg);\n>   if (ctlarg != NULL) {\n>     enable = !(ctlarg->type == GRPC_ARG_INTEGER && ctlarg->value.integer == 0);\n> ```\n\nShouldn't this be `&=`, so that we don't ignore the want_minimal_stack value from above?\n\n---\n\n*[src/core/ext/filters/http/http_filters_plugin.c, line 68 at r5](https://reviewable.io:443/reviews/grpc/grpc/10449#-Kh2ju42QtXQfYtDrSjN:-Kh2ju42QtXQfYtDrSjO:b-12xnrv) ([raw file](https://github.com/grpc/grpc/blob/ff558bac5c7be1571db720f23974d70b75385415/src/core/ext/filters/http/http_filters_plugin.c#L68)):*\n> ```C\n>       grpc_channel_args_find(channel_args, filtarg->control_channel_arg);\n>   if (ctlarg != NULL) {\n>     enable = !(ctlarg->type == GRPC_ARG_INTEGER && ctlarg->value.integer == 0);\n> ```\n\nLet's use `grpc_channel_arg_get_integer()` here.\n\n---\n\n*[src/core/ext/filters/message_size/message_size_filter.c, line 94 at r5](https://reviewable.io:443/reviews/grpc/grpc/10449#-Kh2lSAKDrkQTB0bALMf:-Kh2lSAKDrkQTB0bALMg:bw3zohm) ([raw file](https://github.com/grpc/grpc/blob/ff558bac5c7be1571db720f23974d70b75385415/src/core/ext/filters/message_size/message_size_filter.c#L94)):*\n>   int max_send_size;\n>   int max_recv_size;\n\nPerhaps it would make sense to just replace these two fields with a `message_size_limits` struct.  That way, we could initialize both fields at once by just copying the struct.\n\n---\n\n*[src/core/ext/filters/message_size/message_size_filter.c, line 107 at r5](https://reviewable.io:443/reviews/grpc/grpc/10449#-Kh2nY4QydhiuXk8i9U8:-Kh2nY4RpxF07z9RpW8J:b6kya13) ([raw file](https://github.com/grpc/grpc/blob/ff558bac5c7be1571db720f23974d70b75385415/src/core/ext/filters/message_size/message_size_filter.c#L107)):*\n>   int max_send_size;\n>   int max_recv_size;\n\nSame here.\n\n---\n\n*[src/core/ext/filters/message_size/message_size_filter.c, line 214 at r5](https://reviewable.io:443/reviews/grpc/grpc/10449#-Kh2k_nGslOPCfu6mlLx:-Kh2k_nGslOPCfu6mlLy:bfdia9z) ([raw file](https://github.com/grpc/grpc/blob/ff558bac5c7be1571db720f23974d70b75385415/src/core/ext/filters/message_size/message_size_filter.c#L214)):*\n> ```C\n>                         int without_minimal_stack) {\n>   if (grpc_channel_args_want_minimal_stack(args)) {\n>     return INT_MAX;\n> ```\n\nThe existing code treats -1 as unlimited, so let's do the same thing here.\n\n---\n\n*[src/core/ext/filters/message_size/message_size_filter.c, line 219 at r5](https://reviewable.io:443/reviews/grpc/grpc/10449#-Kh2l4Fxcp_7evRZcVB0:-Kh2l4Fxcp_7evRZcVB1:bczxbvo) ([raw file](https://github.com/grpc/grpc/blob/ff558bac5c7be1571db720f23974d70b75385415/src/core/ext/filters/message_size/message_size_filter.c#L219)):*\n> typedef struct {\n>   int max_recv_size;\n>   int max_send_size;\n> } channel_limits;\n\nThis looks exactly the same as the `message_size_limits` struct defined above.  Might as well re-use it.\n\n---\n\n*[src/core/ext/filters/message_size/message_size_filter.c, line 234 at r5](https://reviewable.io:443/reviews/grpc/grpc/10449#-Kh2ln6Ik0YrVjvp8jAz:-Kh2ln6JIHR0xu0lThIv:ba8l3cr) ([raw file](https://github.com/grpc/grpc/blob/ff558bac5c7be1571db720f23974d70b75385415/src/core/ext/filters/message_size/message_size_filter.c#L234)):*\n> ```C\n>         0) {\n>       const grpc_integer_options options = {\n>           default_size(channel_args, GRPC_DEFAULT_MAX_SEND_MESSAGE_LENGTH), 0,\n> ```\n\nCould use `lim.max_send_size` here instead of calling `default_size()` again.\n\n---\n\n*[src/core/ext/filters/message_size/message_size_filter.c, line 242 at r5](https://reviewable.io:443/reviews/grpc/grpc/10449#-Kh2lsJDnN9iUAAFzPCp:-Kh2lsJDnN9iUAAFzPCq:bvseiah) ([raw file](https://github.com/grpc/grpc/blob/ff558bac5c7be1571db720f23974d70b75385415/src/core/ext/filters/message_size/message_size_filter.c#L242)):*\n> ```C\n>                GRPC_ARG_MAX_RECEIVE_MESSAGE_LENGTH) == 0) {\n>       const grpc_integer_options options = {\n>           default_size(channel_args, GRPC_DEFAULT_MAX_RECV_MESSAGE_LENGTH), 0,\n> ```\n\nCould use `lim.max_recv_size` here instead of calling `default_size()` again.\n\n---\n\n*[src/core/ext/filters/message_size/message_size_filter.c, line 305 at r5](https://reviewable.io:443/reviews/grpc/grpc/10449#-Kh2oZ79fATNwXmd6wGz:-Kh2oZ79fATNwXmd6wH-:b-vst7n6) ([raw file](https://github.com/grpc/grpc/blob/ff558bac5c7be1571db720f23974d70b75385415/src/core/ext/filters/message_size/message_size_filter.c#L305)):*\n>   channel_limits lim = get_channel_limits(channel_args);\n>   if (lim.max_send_size != INT_MAX || lim.max_recv_size != INT_MAX) {\n>     enable = true;\n>   }\n>   const grpc_arg* a =\n>       grpc_channel_args_find(channel_args, GRPC_ARG_SERVICE_CONFIG);\n>   if (a != NULL) {\n>     enable = true;\n>   }\n\nNote that `GRPC_ARG_SERVICE_CONFIG` is only set when injecting a service config via the client API.  It will very rarely be set, but even when it's not, the resolver can still return a service config.  So I think we should unconditionally enable this filter, unless want_minimal_stack is set.\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/10449)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/292232584",
    "html_url": "https://github.com/grpc/grpc/pull/10449#issuecomment-292232584",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10449",
    "id": 292232584,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjIzMjU4NA==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-06T16:39:31Z",
    "updated_at": "2017-04-06T16:39:31Z",
    "author_association": "MEMBER",
    "body": "\n\n\n\nReview status: all files reviewed at latest revision, 18 unresolved discussions, some commit checks failed.\n\n---\n\n*[BUILD, line 753 at r5](https://reviewable.io:443/reviews/grpc/grpc/10449#-Kh2esc3gyju-DtbJBx0:-Kh2z--vMojCYFgOfkTi:b-tw4q02) ([raw file](https://github.com/grpc/grpc/blob/ff558bac5c7be1571db720f23974d70b75385415/BUILD#L753)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nOut of curiosity, in what build will deadline support be optional?\n</blockquote></details>\n\nI'm not sure yet... but being a highly desirable but not strictly required thing still places it in ext/.\n\n---\n\n*[BUILD, line 783 at r5](https://reviewable.io:443/reviews/grpc/grpc/10449#-Kh2f2GCV4GGKFUM1lLQ:-Kh3-b2cz7xLL8yE1OR_:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/ff558bac5c7be1571db720f23974d70b75385415/BUILD#L783)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nWhile we're doing this, would it make sense to rename this to something like `message_compress_filter`, so that it's clearly disambiguated from the upcoming stream compression code?\n</blockquote></details>\n\nDone.\n\n---\n\n*[build.yaml, line 176 at r5](https://reviewable.io:443/reviews/grpc/grpc/10449#-Kh2fOkT_EzvLpBv8e-7:-Kh3-kjfXKcFF-wTPK2V:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/ff558bac5c7be1571db720f23974d70b75385415/build.yaml#L176)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nI think this should be removed, since it's been moved to its own target.\n</blockquote></details>\n\nDone.\n\n---\n\n*[build.yaml, line 283 at r5](https://reviewable.io:443/reviews/grpc/grpc/10449#-Kh2fawqTRLsQTrXo84T:-Kh3-lGkvY1ZRDIorzvo:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/ff558bac5c7be1571db720f23974d70b75385415/build.yaml#L283)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nSame here.\n</blockquote></details>\n\nDone.\n\n---\n\n*[include/grpc/impl/codegen/grpc_types.h, line 181 at r5](https://reviewable.io:443/reviews/grpc/grpc/10449#-Kh2g-GgZfP-aCL6bhpd:-Kh3-oOKDSQ7DxiS3kga:b-90gc3p) ([raw file](https://github.com/grpc/grpc/blob/ff558bac5c7be1571db720f23974d70b75385415/include/grpc/impl/codegen/grpc_types.h#L181)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\n> /** Enable/disable support for deadline checking. Defaults to 1, unless\n>     GRPC_ARG_MINIMAL_STACK is enabled, in which case it defaults to 0 */\n\nDo we need to say something here like \"...unless built without deadline support\"?\n</blockquote></details>\n\nFor the moment no... I have no plans of actually offering a build without deadline support - but I do have a need to be able to call it out.\n\n---\n\n*[src/core/ext/filters/client_channel/client_channel.c, line 1281 at r5](https://reviewable.io:443/reviews/grpc/grpc/10449#-Kh2gflnxYn7B6w9P3Ng:-Kh30xue2oDEBjSzCoH6:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/ff558bac5c7be1571db720f23974d70b75385415/src/core/ext/filters/client_channel/client_channel.c#L1281)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\n>     grpc_deadline_state_init(exec_ctx, elem, args->call_stack);\n>     grpc_deadline_state_start(exec_ctx, elem, calld->deadline);\n\nThese two methods could probably be combined, since I don't think either of them are actually called from anywhere else anymore.\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/ext/filters/deadline/deadline_filter.c, line 356 at r5](https://reviewable.io:443/reviews/grpc/grpc/10449#-Kh2h8ggLvIIavEpuVTt:-Kh37a9I94JvUDWzk4aB:ba01ksr) ([raw file](https://github.com/grpc/grpc/blob/ff558bac5c7be1571db720f23974d70b75385415/src/core/ext/filters/deadline/deadline_filter.c#L356)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nLet's use `grpc_channel_arg_get_integer()` here.\n</blockquote></details>\n\nAdded a get_bool, used it.\n\n---\n\n*[src/core/ext/filters/deadline/deadline_filter.c, line 357 at r5](https://reviewable.io:443/reviews/grpc/grpc/10449#-Kh2hP-PinNGqN_WG97N:-Kh31-v107hcDZFZXoff:b-qfjlxo) ([raw file](https://github.com/grpc/grpc/blob/ff558bac5c7be1571db720f23974d70b75385415/src/core/ext/filters/deadline/deadline_filter.c#L357)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nShouldn't this be `&=`?  Otherwise, we're ignoring the value of the want_minimal_stack arg in favor of the enable_deadline_checks arg.\n</blockquote></details>\n\nMinimal stack changes defaults, but still allows things to be turned on over it. So I can say minimal_stack + deadline, or I can say normal_stack - deadline.\n\nFolks that want flat out performance and a few features get pushed towards minimal stack, and get to track what they need enabled.\n\n98% of users use the default stack, and maybe turn off a few things they don't need if they're causing problems.\n\n---\n\n*[src/core/ext/filters/http/http_filters_plugin.c, line 54 at r5](https://reviewable.io:443/reviews/grpc/grpc/10449#-Kh2jF0uFcMawGpCW2uO:-Kh37cWq8vJuyXTEUZGk:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/ff558bac5c7be1571db720f23974d70b75385415/src/core/ext/filters/http/http_filters_plugin.c#L54)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\n`t != NULL`\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/ext/filters/http/http_filters_plugin.c, line 68 at r5](https://reviewable.io:443/reviews/grpc/grpc/10449#-Kh2jkSZYlJ3JtB4fHqI:-Kh31S6m6VO-1MQpi-DC:b-34vmyd) ([raw file](https://github.com/grpc/grpc/blob/ff558bac5c7be1571db720f23974d70b75385415/src/core/ext/filters/http/http_filters_plugin.c#L68)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nShouldn't this be `&=`, so that we don't ignore the want_minimal_stack value from above?\n</blockquote></details>\n\nSee above\n\n---\n\n*[src/core/ext/filters/http/http_filters_plugin.c, line 68 at r5](https://reviewable.io:443/reviews/grpc/grpc/10449#-Kh2ju42QtXQfYtDrSjN:-Kh35SqZpSZ6ilFXIp0D:b-gybswo) ([raw file](https://github.com/grpc/grpc/blob/ff558bac5c7be1571db720f23974d70b75385415/src/core/ext/filters/http/http_filters_plugin.c#L68)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nLet's use `grpc_channel_arg_get_integer()` here.\n</blockquote></details>\n\nAdded a get_bool, used it all over the place\n\n---\n\n*[src/core/ext/filters/message_size/message_size_filter.c, line 94 at r5](https://reviewable.io:443/reviews/grpc/grpc/10449#-Kh2lSAKDrkQTB0bALMf:-Kh36MLN4KjfI1SpGsU4:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/ff558bac5c7be1571db720f23974d70b75385415/src/core/ext/filters/message_size/message_size_filter.c#L94)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\n>   int max_send_size;\n>   int max_recv_size;\n\nPerhaps it would make sense to just replace these two fields with a `message_size_limits` struct.  That way, we could initialize both fields at once by just copying the struct.\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/ext/filters/message_size/message_size_filter.c, line 107 at r5](https://reviewable.io:443/reviews/grpc/grpc/10449#-Kh2nY4QydhiuXk8i9U8:-Kh36Mc4WXuwFpJa-4LE:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/ff558bac5c7be1571db720f23974d70b75385415/src/core/ext/filters/message_size/message_size_filter.c#L107)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\n>   int max_send_size;\n>   int max_recv_size;\n\nSame here.\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/ext/filters/message_size/message_size_filter.c, line 214 at r5](https://reviewable.io:443/reviews/grpc/grpc/10449#-Kh2k_nGslOPCfu6mlLx:-Kh3749Im8Nkx7ygs4l6:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/ff558bac5c7be1571db720f23974d70b75385415/src/core/ext/filters/message_size/message_size_filter.c#L214)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nThe existing code treats -1 as unlimited, so let's do the same thing here.\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/ext/filters/message_size/message_size_filter.c, line 219 at r5](https://reviewable.io:443/reviews/grpc/grpc/10449#-Kh2l4Fxcp_7evRZcVB0:-Kh373ng-_1t-kIEq-lJ:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/ff558bac5c7be1571db720f23974d70b75385415/src/core/ext/filters/message_size/message_size_filter.c#L219)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\n> typedef struct {\n>   int max_recv_size;\n>   int max_send_size;\n> } channel_limits;\n\nThis looks exactly the same as the `message_size_limits` struct defined above.  Might as well re-use it.\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/ext/filters/message_size/message_size_filter.c, line 234 at r5](https://reviewable.io:443/reviews/grpc/grpc/10449#-Kh2ln6Ik0YrVjvp8jAz:-Kh37GvCu_Z-oqDM9Z62:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/ff558bac5c7be1571db720f23974d70b75385415/src/core/ext/filters/message_size/message_size_filter.c#L234)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nCould use `lim.max_send_size` here instead of calling `default_size()` again.\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/ext/filters/message_size/message_size_filter.c, line 242 at r5](https://reviewable.io:443/reviews/grpc/grpc/10449#-Kh2lsJDnN9iUAAFzPCp:-Kh37GHjTwwJyGURFQi-:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/ff558bac5c7be1571db720f23974d70b75385415/src/core/ext/filters/message_size/message_size_filter.c#L242)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nCould use `lim.max_recv_size` here instead of calling `default_size()` again.\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/ext/filters/message_size/message_size_filter.c, line 305 at r5](https://reviewable.io:443/reviews/grpc/grpc/10449#-Kh2oZ79fATNwXmd6wGz:-Kh37IG2KCZXV11S3jhG:b6ll33z) ([raw file](https://github.com/grpc/grpc/blob/ff558bac5c7be1571db720f23974d70b75385415/src/core/ext/filters/message_size/message_size_filter.c#L305)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\n>   channel_limits lim = get_channel_limits(channel_args);\n>   if (lim.max_send_size != INT_MAX || lim.max_recv_size != INT_MAX) {\n>     enable = true;\n>   }\n>   const grpc_arg* a =\n>       grpc_channel_args_find(channel_args, GRPC_ARG_SERVICE_CONFIG);\n>   if (a != NULL) {\n>     enable = true;\n>   }\n\nNote that `GRPC_ARG_SERVICE_CONFIG` is only set when injecting a service config via the client API.  It will very rarely be set, but even when it's not, the resolver can still return a service config.  So I think we should unconditionally enable this filter, unless want_minimal_stack is set.\n</blockquote></details>\n\nHow does the resolver notify this code of a service config when it's enabled? We should check that here.\n\nThere needs to be a very high bar for unconditionally enabling anything, and if we can detect something can be disabled, we should do so.\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/10449)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/292250687",
    "html_url": "https://github.com/grpc/grpc/pull/10449#issuecomment-292250687",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10449",
    "id": 292250687,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjI1MDY4Nw==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-06T17:37:19Z",
    "updated_at": "2017-04-06T17:37:19Z",
    "author_association": "NONE",
    "body": "```\nPerformance differences noted:\nBenchmark                                                       allocs_per_iteration    atm_add_per_iteration    atm_cas_per_iteration      cpu_time  locks_per_iteration      real_time  writes_per_iteration\n--------------------------------------------------------------  ----------------------  -----------------------  -----------------------  ----------  ---------------------  -----------  ----------------------\nBM_HpackEncoderEncodeHeader<SingleInternedBinaryElem<1>>/0/16k                                                                                 +9.00                               +9.00\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/292282987",
    "html_url": "https://github.com/grpc/grpc/pull/10449#issuecomment-292282987",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10449",
    "id": 292282987,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjI4Mjk4Nw==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-06T19:16:20Z",
    "updated_at": "2017-04-06T19:16:20Z",
    "author_association": "NONE",
    "body": "```\nNo significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/292328580",
    "html_url": "https://github.com/grpc/grpc/pull/10449#issuecomment-292328580",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10449",
    "id": 292328580,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjMyODU4MA==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-06T21:27:58Z",
    "updated_at": "2017-04-06T21:27:58Z",
    "author_association": "NONE",
    "body": "```\nNo significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/292339437",
    "html_url": "https://github.com/grpc/grpc/pull/10449#issuecomment-292339437",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10449",
    "id": 292339437,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjMzOTQzNw==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-06T22:12:26Z",
    "updated_at": "2017-04-06T22:12:26Z",
    "author_association": "MEMBER",
    "body": "\n\n\n\nReviewed 5 of 80 files at r1, 38 of 40 files at r6, 1 of 1 files at r7, 1 of 1 files at r8.\nReview status: all files reviewed at latest revision, 1 unresolved discussion.\n\n---\n\n*[src/core/ext/filters/message_size/message_size_filter.c, line 305 at r5](https://reviewable.io:443/reviews/grpc/grpc/10449#-Kh2oZ79fATNwXmd6wGz:-Kh4HeBnoQsuL6JSPlka:b-pe10fa) ([raw file](https://github.com/grpc/grpc/blob/ff558bac5c7be1571db720f23974d70b75385415/src/core/ext/filters/message_size/message_size_filter.c#L305)):*\n<details><summary><i>Previously, ctiller (Craig Tiller) wrote…</i></summary><blockquote>\n\nHow does the resolver notify this code of a service config when it's enabled? We should check that here.\n\nThere needs to be a very high bar for unconditionally enabling anything, and if we can detect something can be disabled, we should do so.\n</blockquote></details>\n\nHmm... There may not be an issue here after all.\n\nI was thinking that this function gets run at channel stack construction time, which is long before the resolver runs.  However, that's only true of the parent channel stack; the subchannel stack actually does get run based on the args returned by the resolver.  And the resolver will in fact set `GRPC_ARG_SERVICE_CONFIG` to signal to modules like this one (which lives in the subchannel stack) that there's a service config.  So I think this is fine.  Sorry for the confusion.\n\nNothing to see here, please move along... :)\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/10449)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/292557108",
    "html_url": "https://github.com/grpc/grpc/pull/10449#issuecomment-292557108",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10449",
    "id": 292557108,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjU1NzEwOA==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-07T14:47:20Z",
    "updated_at": "2017-04-07T14:47:20Z",
    "author_association": "NONE",
    "body": "```\nPerformance differences noted:\nBenchmark                                                   allocs_per_iteration    atm_add_per_iteration    atm_cas_per_iteration      cpu_time  locks_per_iteration      real_time  writes_per_iteration\n----------------------------------------------------------  ----------------------  -----------------------  -----------------------  ----------  ---------------------  -----------  ----------------------\nBM_IsolatedFilter<ServerDeadlineFilter, SendEmptyMetadata>                                                                                 -7.50                               -7.50\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/292682175",
    "html_url": "https://github.com/grpc/grpc/pull/10449#issuecomment-292682175",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10449",
    "id": 292682175,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjY4MjE3NQ==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-08T00:38:53Z",
    "updated_at": "2017-04-08T00:38:53Z",
    "author_association": "NONE",
    "body": "```\nPerformance differences noted:\nBenchmark                                                          allocs_per_iteration    atm_add_per_iteration    atm_cas_per_iteration      cpu_time  locks_per_iteration      real_time  writes_per_iteration\n-----------------------------------------------------------------  ----------------------  -----------------------  -----------------------  ----------  ---------------------  -----------  ----------------------\nBM_HpackEncoderEncodeHeader<SingleNonInternedBinaryElem<3>>/0/16k                                                                                -22.00                              -22.00\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/293375329",
    "html_url": "https://github.com/grpc/grpc/pull/10449#issuecomment-293375329",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10449",
    "id": 293375329,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzM3NTMyOQ==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-11T19:30:19Z",
    "updated_at": "2017-04-11T19:30:19Z",
    "author_association": "NONE",
    "body": "```\nPerformance differences noted:\nBenchmark                                                                allocs_per_iteration    atm_add_per_iteration    atm_cas_per_iteration      cpu_time  locks_per_iteration      real_time  writes_per_iteration\n-----------------------------------------------------------------------  ----------------------  -----------------------  -----------------------  ----------  ---------------------  -----------  ----------------------\nBM_HpackEncoderEncodeHeader<EmptyBatch>/1/16k                                                                                                           +6.50                               +6.50\nBM_HpackEncoderEncodeHeader<RepresentativeServerTrailingMetadata>/1/16k                                                                                +16.00                              +16.00\nBM_HpackEncoderEncodeHeader<SingleInternedBinaryElem<1>>/0/16k                                                                                         +29.50                              +29.50\nBM_HpackParserParseHeader<RepresentativeServerTrailingMetadata>                                                                                        +15.50                              +15.50\nBM_IsolatedFilter<HttpClientFilter, NoOp>                                                                                                              +46.00                              +46.00\nBM_IsolatedFilter<LoadReportingFilter, SendEmptyMetadata>                                                                                              +39.50                              +39.50\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/293379648",
    "html_url": "https://github.com/grpc/grpc/pull/10449#issuecomment-293379648",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10449",
    "id": 293379648,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzM3OTY0OA==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-11T19:47:56Z",
    "updated_at": "2017-04-11T19:47:56Z",
    "author_association": "NONE",
    "body": "```\nNo significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/293476987",
    "html_url": "https://github.com/grpc/grpc/pull/10449#issuecomment-293476987",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10449",
    "id": 293476987,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzQ3Njk4Nw==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-12T05:23:15Z",
    "updated_at": "2017-04-12T05:23:15Z",
    "author_association": "NONE",
    "body": "```\nPerformance differences noted:\nBenchmark                                allocs_per_iteration    atm_add_per_iteration    atm_cas_per_iteration      cpu_time  locks_per_iteration      real_time  writes_per_iteration\n---------------------------------------  ----------------------  -----------------------  -----------------------  ----------  ---------------------  -----------  ----------------------\nBM_IsolatedFilter<CompressFilter, NoOp>                                                                                 -6.50                               -6.50\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/293478327",
    "html_url": "https://github.com/grpc/grpc/pull/10449#issuecomment-293478327",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10449",
    "id": 293478327,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzQ3ODMyNw==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-12T05:33:42Z",
    "updated_at": "2017-04-12T05:33:42Z",
    "author_association": "NONE",
    "body": "```\nPerformance differences noted:\nBenchmark                                                        allocs_per_iteration    atm_add_per_iteration    atm_cas_per_iteration      cpu_time  locks_per_iteration      real_time  writes_per_iteration\n---------------------------------------------------------------  ----------------------  -----------------------  -----------------------  ----------  ---------------------  -----------  ----------------------\nBM_HpackEncoderEncodeHeader<SingleInternedBinaryElem<31>>/0/16k                                                                                 -8.50                               -8.50\nBM_HpackParserParseHeader<AddIndexedSingleStaticElem>                                                                                          +28.00                              +28.00\nBM_SingleThreadPollOneFd_SpeedOfLight                                                                                                          -55.00                              -55.00\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/293617390",
    "html_url": "https://github.com/grpc/grpc/pull/10449#issuecomment-293617390",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10449",
    "id": 293617390,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzYxNzM5MA==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-12T15:34:50Z",
    "updated_at": "2017-04-12T15:34:50Z",
    "author_association": "NONE",
    "body": "```\nPerformance differences noted:\nBenchmark                   allocs_per_iteration    atm_add_per_iteration    atm_cas_per_iteration      cpu_time  locks_per_iteration      real_time  writes_per_iteration\n--------------------------  ----------------------  -----------------------  -----------------------  ----------  ---------------------  -----------  ----------------------\nBM_HpackEncoderInitDestroy                                                                               +150.50                             +150.50\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/293655608",
    "html_url": "https://github.com/grpc/grpc/pull/10449#issuecomment-293655608",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10449",
    "id": 293655608,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzY1NTYwOA==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-12T17:46:54Z",
    "updated_at": "2017-04-12T17:46:54Z",
    "author_association": "NONE",
    "body": "```\nNo significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/293739195",
    "html_url": "https://github.com/grpc/grpc/pull/10449#issuecomment-293739195",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10449",
    "id": 293739195,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzczOTE5NQ==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-12T23:55:10Z",
    "updated_at": "2017-04-12T23:55:10Z",
    "author_association": "NONE",
    "body": "```\nNo significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/293760747",
    "html_url": "https://github.com/grpc/grpc/pull/10449#issuecomment-293760747",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10449",
    "id": 293760747,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5Mzc2MDc0Nw==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-13T02:35:56Z",
    "updated_at": "2017-04-13T02:35:56Z",
    "author_association": "NONE",
    "body": "```\nPerformance differences noted:\nBenchmark                                 cpu_time    real_time\n--------------------------------------  ----------  -----------\nBM_ErrorCreateAndSetIntAndStr               -43.00       -43.00\nBM_ErrorCreateAndSetStatus                  -32.00       -32.00\nBM_ErrorCreateFromCopied                    -47.00       -47.00\nBM_ErrorCreateFromStatic                    -28.50       -28.50\nBM_MetadataRefUnrefAllocated                 -6.00        -6.00\nBM_PollEmptyPollset_SpeedOfLight/1/100      -12.50       -12.50\nBM_SliceIntern                              -20.00       -20.00\nBM_SliceReIntern                             -9.50        -9.50\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/293917720",
    "html_url": "https://github.com/grpc/grpc/pull/10449#issuecomment-293917720",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10449",
    "id": 293917720,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzkxNzcyMA==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-13T14:49:51Z",
    "updated_at": "2017-04-13T14:49:51Z",
    "author_association": "NONE",
    "body": "```\nPerformance differences noted:\nBenchmark                           cpu_time    real_time\n--------------------------------  ----------  -----------\nBM_ErrorGetStatusCode<ErrorNone>      +16.00       +16.00\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/294089650",
    "html_url": "https://github.com/grpc/grpc/pull/10449#issuecomment-294089650",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10449",
    "id": 294089650,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDA4OTY1MA==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-14T04:50:07Z",
    "updated_at": "2017-04-14T04:50:07Z",
    "author_association": "NONE",
    "body": "```\nPerformance differences noted:\nBenchmark                                                                  cpu_time    real_time\n-----------------------------------------------------------------------  ----------  -----------\nBM_ErrorCreateAndSetStrLoop                                                   -6.00        -6.00\nBM_HpackEncoderEncodeHeader<RepresentativeServerTrailingMetadata>/1/16k       +9.00        +9.00\nBM_TransportStreamRecv/256k                                                -1112.00     -1112.00\nBM_TransportStreamSend/256k                                                 -318.50      -318.50\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/294156492",
    "html_url": "https://github.com/grpc/grpc/pull/10449#issuecomment-294156492",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10449",
    "id": 294156492,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDE1NjQ5Mg==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-14T13:48:22Z",
    "updated_at": "2017-04-14T13:48:22Z",
    "author_association": "MEMBER",
    "body": "Failed: #10659 #10643 "
  }
]
