[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/192408819",
    "html_url": "https://github.com/grpc/grpc/issues/5564#issuecomment-192408819",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5564",
    "id": 192408819,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MjQwODgxOQ==",
    "user": {
      "login": "soltanmm",
      "id": 4889063,
      "node_id": "MDQ6VXNlcjQ4ODkwNjM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4889063?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/soltanmm",
      "html_url": "https://github.com/soltanmm",
      "followers_url": "https://api.github.com/users/soltanmm/followers",
      "following_url": "https://api.github.com/users/soltanmm/following{/other_user}",
      "gists_url": "https://api.github.com/users/soltanmm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/soltanmm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/soltanmm/subscriptions",
      "organizations_url": "https://api.github.com/users/soltanmm/orgs",
      "repos_url": "https://api.github.com/users/soltanmm/repos",
      "events_url": "https://api.github.com/users/soltanmm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/soltanmm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-04T18:55:56Z",
    "updated_at": "2016-03-04T19:00:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "Somehow the response iterator times out with an `ExpirationError` and either the test or underlying layers fail to properly raise the error up and out of the test harness (until keyboard interrupt [which is _really weird behavior_]). Then the response iterator wrapper that handles lock-step-execution (to avoid race conditions in the test code) continues to loop ad infinitum because it was never signaled.\n\nStay tuned...\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/192416693",
    "html_url": "https://github.com/grpc/grpc/issues/5564#issuecomment-192416693",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5564",
    "id": 192416693,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MjQxNjY5Mw==",
    "user": {
      "login": "soltanmm",
      "id": 4889063,
      "node_id": "MDQ6VXNlcjQ4ODkwNjM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4889063?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/soltanmm",
      "html_url": "https://github.com/soltanmm",
      "followers_url": "https://api.github.com/users/soltanmm/followers",
      "following_url": "https://api.github.com/users/soltanmm/following{/other_user}",
      "gists_url": "https://api.github.com/users/soltanmm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/soltanmm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/soltanmm/subscriptions",
      "organizations_url": "https://api.github.com/users/soltanmm/orgs",
      "repos_url": "https://api.github.com/users/soltanmm/repos",
      "events_url": "https://api.github.com/users/soltanmm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/soltanmm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-04T19:07:01Z",
    "updated_at": "2016-03-04T19:07:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "It's the underlying layers.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/192439179",
    "html_url": "https://github.com/grpc/grpc/issues/5564#issuecomment-192439179",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5564",
    "id": 192439179,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MjQzOTE3OQ==",
    "user": {
      "login": "soltanmm",
      "id": 4889063,
      "node_id": "MDQ6VXNlcjQ4ODkwNjM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4889063?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/soltanmm",
      "html_url": "https://github.com/soltanmm",
      "followers_url": "https://api.github.com/users/soltanmm/followers",
      "following_url": "https://api.github.com/users/soltanmm/following{/other_user}",
      "gists_url": "https://api.github.com/users/soltanmm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/soltanmm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/soltanmm/subscriptions",
      "organizations_url": "https://api.github.com/users/soltanmm/orgs",
      "repos_url": "https://api.github.com/users/soltanmm/repos",
      "events_url": "https://api.github.com/users/soltanmm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/soltanmm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-04T19:56:06Z",
    "updated_at": "2016-03-04T19:56:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "Aaaand the above was the wrong interpretation of debug data.\n\nIt **isn't** that the exception is getting passed up, the exception is _registered_ with the test runner's collector as a failure, but then some race condition is keeping the test spinning in `tearDown()` indefinitely.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/192485845",
    "html_url": "https://github.com/grpc/grpc/issues/5564#issuecomment-192485845",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5564",
    "id": 192485845,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MjQ4NTg0NQ==",
    "user": {
      "login": "soltanmm",
      "id": 4889063,
      "node_id": "MDQ6VXNlcjQ4ODkwNjM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4889063?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/soltanmm",
      "html_url": "https://github.com/soltanmm",
      "followers_url": "https://api.github.com/users/soltanmm/followers",
      "following_url": "https://api.github.com/users/soltanmm/following{/other_user}",
      "gists_url": "https://api.github.com/users/soltanmm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/soltanmm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/soltanmm/subscriptions",
      "organizations_url": "https://api.github.com/users/soltanmm/orgs",
      "repos_url": "https://api.github.com/users/soltanmm/repos",
      "events_url": "https://api.github.com/users/soltanmm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/soltanmm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-04T21:52:42Z",
    "updated_at": "2016-03-04T21:54:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "Gonna record my thoughts here so I'll have something to review after I go think about something else for a bit:\n\nThere is something really _really_ **really** weird going on in that `tearDown()`. If one forces an expiration error to occur on the response iterator (e.g. turn the timeout on the stub invocation down to `0.01` and put an `import time; time.sleep(0.1)` just before the `next(response_iterator)` line), some indescribable hell breaks loose if you invoke `pdb.set_trace()` and step-over through the code as opposed to step-into the `tearDown` line that waits for the server to finish shutting down: a `TypeError` asserting that a `NoneType` isn't callable is raised on a line that's checking a primitive in an if-statement conditional in `server.pyx.pxi` in the `shutdown` method. Adding `print self; print queue; print self.registered_completion_queues` to the top of that method alleviates the callable error.\n\nWithout `pdb`, there's a hang during `tearDown()` _but_ hitting ctrl-C results in the test finishing with the proper exception (`ExpirationError`) noted as being raised. This suggests that there's some frozen thread running somewhere at the time of `tearDown`. BUT...\n\nThe freeze happens when assigning `self.dynamic_stub = None`. This suggests that the hang is in a `__del__` method, which then suggests that there's likely a `__dealloc__` method that needs to be investigated, if the error can be found in Cython. Except that investigation down that path has proven unreliable due to Schrodinger's spirit deciding to take up software engineering in its spare time.\n\nAnd somewhere in the midst of that those `NoneType`-not-being-callable errors are chucked in situations where I step a bit from within `pdb` (in arbitrary locations that I cannot recall at the moment) and then hit continue (but never,  it seems, without touching `pdb`).\n\nI think part of the problem is that using `print` statements and `pdb` has side effects that affect Python reference counts and those object references are not necessarily dropped immediately. So... it makes gathering reliable information in this way, ah, difficult...\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/195601492",
    "html_url": "https://github.com/grpc/grpc/issues/5564#issuecomment-195601492",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5564",
    "id": 195601492,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTYwMTQ5Mg==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-11T23:25:33Z",
    "updated_at": "2016-03-11T23:25:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Went through like 10 last builds on master or so and this seems fixed by #5704.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/195775883",
    "html_url": "https://github.com/grpc/grpc/issues/5564#issuecomment-195775883",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5564",
    "id": 195775883,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTc3NTg4Mw==",
    "user": {
      "login": "soltanmm",
      "id": 4889063,
      "node_id": "MDQ6VXNlcjQ4ODkwNjM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4889063?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/soltanmm",
      "html_url": "https://github.com/soltanmm",
      "followers_url": "https://api.github.com/users/soltanmm/followers",
      "following_url": "https://api.github.com/users/soltanmm/following{/other_user}",
      "gists_url": "https://api.github.com/users/soltanmm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/soltanmm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/soltanmm/subscriptions",
      "organizations_url": "https://api.github.com/users/soltanmm/orgs",
      "repos_url": "https://api.github.com/users/soltanmm/repos",
      "events_url": "https://api.github.com/users/soltanmm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/soltanmm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-12T17:12:48Z",
    "updated_at": "2016-03-12T17:12:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm still concerned with the test-harness-hanging-at-`tearDown` part of this issue, but that perhaps warrants a separate filing...\n"
  }
]
