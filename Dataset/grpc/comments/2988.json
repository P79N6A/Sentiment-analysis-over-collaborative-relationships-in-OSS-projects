[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/133185725",
    "html_url": "https://github.com/grpc/grpc/pull/2988#issuecomment-133185725",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/2988",
    "id": 133185725,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMzE4NTcyNQ==",
    "user": {
      "login": "ejona86",
      "id": 2811396,
      "node_id": "MDQ6VXNlcjI4MTEzOTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2811396?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ejona86",
      "html_url": "https://github.com/ejona86",
      "followers_url": "https://api.github.com/users/ejona86/followers",
      "following_url": "https://api.github.com/users/ejona86/following{/other_user}",
      "gists_url": "https://api.github.com/users/ejona86/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ejona86/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ejona86/subscriptions",
      "organizations_url": "https://api.github.com/users/ejona86/orgs",
      "repos_url": "https://api.github.com/users/ejona86/repos",
      "events_url": "https://api.github.com/users/ejona86/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ejona86/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-20T21:36:09Z",
    "updated_at": "2015-08-20T21:36:09Z",
    "author_association": "MEMBER",
    "body": "@madongfly LGTM.\n\nYou may choose to permit implementations to do it after TCP/TLS handshake, but after SETTINGS is preferred. But the text is fine now. That is what we SHOULD be doing.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/133321455",
    "html_url": "https://github.com/grpc/grpc/pull/2988#issuecomment-133321455",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/2988",
    "id": 133321455,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMzMyMTQ1NQ==",
    "user": {
      "login": "dklempner",
      "id": 10135909,
      "node_id": "MDQ6VXNlcjEwMTM1OTA5",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10135909?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dklempner",
      "html_url": "https://github.com/dklempner",
      "followers_url": "https://api.github.com/users/dklempner/followers",
      "following_url": "https://api.github.com/users/dklempner/following{/other_user}",
      "gists_url": "https://api.github.com/users/dklempner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dklempner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dklempner/subscriptions",
      "organizations_url": "https://api.github.com/users/dklempner/orgs",
      "repos_url": "https://api.github.com/users/dklempner/repos",
      "events_url": "https://api.github.com/users/dklempner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dklempner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-21T08:03:35Z",
    "updated_at": "2015-08-21T08:03:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't really like this change, but sadly gmail decided the email about this PR wasn't \"important\" so I didn't see it until now.\n\nFrom my point of view, this entire document describes the protocol for a channel connecting to a server once. The concept of backoff being \"reset\" is nonsensical -- a subsequent round of connection attempts after a successful connection is a completely separate run of this algorithm, with no shared state.\n\n(Obviously that behavior may be wrong: it's possible we should be sharing such state, especially if the connection fails quickly -- this system, as described, has failure modes if connections rapidly succeed and then immediately fail.)\n\nThe question of when a connection attempt is successful is implicitly out of scope (hidden behind an abstract \"TryConnect\"). I don't really like jamming HTTP2 specifics into this document, which up until now lived completely at a higher abstraction layer.\n\nNow, what this document _could_ use is some elaboration on how TryConnect works -- some concrete specifics with HTTP2 would include exactly when we consider a connection attempt successful. (Additionally, the fact that there are both \"timeout\" and \"immediate-rejection\" error modes is important to the design of this algorithm and possibly not obvious to a reader.)\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/134298220",
    "html_url": "https://github.com/grpc/grpc/pull/2988#issuecomment-134298220",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/2988",
    "id": 134298220,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNDI5ODIyMA==",
    "user": {
      "login": "ejona86",
      "id": 2811396,
      "node_id": "MDQ6VXNlcjI4MTEzOTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2811396?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ejona86",
      "html_url": "https://github.com/ejona86",
      "followers_url": "https://api.github.com/users/ejona86/followers",
      "following_url": "https://api.github.com/users/ejona86/following{/other_user}",
      "gists_url": "https://api.github.com/users/ejona86/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ejona86/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ejona86/subscriptions",
      "organizations_url": "https://api.github.com/users/ejona86/orgs",
      "repos_url": "https://api.github.com/users/ejona86/repos",
      "events_url": "https://api.github.com/users/ejona86/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ejona86/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-24T16:54:18Z",
    "updated_at": "2015-08-24T16:54:45Z",
    "author_association": "MEMBER",
    "body": "@dklempner, yes, I think it could be improved by providing expectations of how TryConnect works. However, with the previous state of the document it was impossible to claim an implementation was non-\nconforming and thus impossible to define a test. Or rather, what happened was a test _was_ defined but all implementations failed it when using plaintext. The test itself was over-reaching, but it was also ideal for the implementations to wait longer before considering being connected.\n\nI'm very happy to review improvements that remove HTTP/2-specifics and instead define general expectations, possibly with TCP- or HTTP/2-specifics as examples.\n"
  }
]
