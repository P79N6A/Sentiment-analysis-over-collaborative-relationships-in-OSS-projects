[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/318610996",
    "html_url": "https://github.com/grpc/grpc/issues/11970#issuecomment-318610996",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11970",
    "id": 318610996,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODYxMDk5Ng==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-28T09:50:42Z",
    "updated_at": "2017-07-28T10:54:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "CC @matt-kwong @adelez @sreecha "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/318622962",
    "html_url": "https://github.com/grpc/grpc/issues/11970#issuecomment-318622962",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11970",
    "id": 318622962,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODYyMjk2Mg==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-28T10:53:49Z",
    "updated_at": "2017-07-28T10:53:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "More findings:\r\n- it's always sync tests\r\n- they're set to outstanding_rpcs=16 and channels=64, which requires 1024 threads for each test case. I'll investigate decreasing the number of threads used."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/318688063",
    "html_url": "https://github.com/grpc/grpc/issues/11970#issuecomment-318688063",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11970",
    "id": 318688063,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODY4ODA2Mw==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-28T15:42:30Z",
    "updated_at": "2017-07-28T15:42:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've verified (by modifying thd_test) that on kokoro, one can successfully create at least 5000 concurrent thread insided a docker container, so the reason why new threads cannot be created remains a mystery (AFAIK, the tests have \"core_count\" set to a very high number in tests.json, so that they run exclusively)."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/318715874",
    "html_url": "https://github.com/grpc/grpc/issues/11970#issuecomment-318715874",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11970",
    "id": 318715874,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODcxNTg3NA==",
    "user": {
      "login": "dgquintas",
      "id": 120217,
      "node_id": "MDQ6VXNlcjEyMDIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/120217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgquintas",
      "html_url": "https://github.com/dgquintas",
      "followers_url": "https://api.github.com/users/dgquintas/followers",
      "following_url": "https://api.github.com/users/dgquintas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgquintas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgquintas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgquintas/subscriptions",
      "organizations_url": "https://api.github.com/users/dgquintas/orgs",
      "repos_url": "https://api.github.com/users/dgquintas/repos",
      "events_url": "https://api.github.com/users/dgquintas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgquintas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-28T17:33:09Z",
    "updated_at": "2017-07-28T17:33:09Z",
    "author_association": "NONE",
    "body": "@vjpai once you are done with more pressing current events, could you please take a look at this? json_run_localhost is a recurrent issue."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/318737210",
    "html_url": "https://github.com/grpc/grpc/issues/11970#issuecomment-318737210",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11970",
    "id": 318737210,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODczNzIxMA==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-28T19:04:17Z",
    "updated_at": "2017-07-28T19:05:14Z",
    "author_association": "MEMBER",
    "body": "Can you give the full `ulimit -a` result? The part above seems to be a snippet of it. Also, is this Linux or Mac?\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/318756898",
    "html_url": "https://github.com/grpc/grpc/issues/11970#issuecomment-318756898",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11970",
    "id": 318756898,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODc1Njg5OA==",
    "user": {
      "login": "matt-kwong",
      "id": 22083734,
      "node_id": "MDQ6VXNlcjIyMDgzNzM0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/22083734?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matt-kwong",
      "html_url": "https://github.com/matt-kwong",
      "followers_url": "https://api.github.com/users/matt-kwong/followers",
      "following_url": "https://api.github.com/users/matt-kwong/following{/other_user}",
      "gists_url": "https://api.github.com/users/matt-kwong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matt-kwong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matt-kwong/subscriptions",
      "organizations_url": "https://api.github.com/users/matt-kwong/orgs",
      "repos_url": "https://api.github.com/users/matt-kwong/repos",
      "events_url": "https://api.github.com/users/matt-kwong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matt-kwong/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-28T20:41:29Z",
    "updated_at": "2017-07-28T20:41:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "It's for Linux.\r\n```\r\nulimit -a \r\ncore file size          (blocks, -c) 0\r\ndata seg size           (kbytes, -d) unlimited\r\nscheduling priority             (-e) 0\r\nfile size               (blocks, -f) unlimited\r\npending signals                 (-i) 241492\r\nmax locked memory       (kbytes, -l) 64\r\nmax memory size         (kbytes, -m) unlimited\r\nopen files                      (-n) 262144\r\npipe size            (512 bytes, -p) 8\r\nPOSIX message queues     (bytes, -q) 819200\r\nreal-time priority              (-r) 0\r\nstack size              (kbytes, -s) 8192\r\ncpu time               (seconds, -t) unlimited\r\nmax user processes              (-u) 241492\r\nvirtual memory          (kbytes, -v) unlimited\r\nfile locks                      (-x) unlimited\r\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/319957750",
    "html_url": "https://github.com/grpc/grpc/issues/11970#issuecomment-319957750",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11970",
    "id": 319957750,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTk1Nzc1MA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-03T12:42:12Z",
    "updated_at": "2017-08-03T12:42:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "Observations:\r\n1. the failing tests are all  `GRPC_POLL_STRATEGY=poll-cv`\r\n2. I am able to reproduce locally on my linux desktop"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/319958089",
    "html_url": "https://github.com/grpc/grpc/issues/11970#issuecomment-319958089",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11970",
    "id": 319958089,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTk1ODA4OQ==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-03T12:43:35Z",
    "updated_at": "2017-08-03T12:43:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "To reproduce locally:\r\n````\r\ntools/run_tests/run_tests.py -l c++ -c dbg -r 'json_run_localhost.*cpp_protobuf_sync_streaming_from_client_qps_unconstrained_insecure.*poll-cv'\r\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/319974032",
    "html_url": "https://github.com/grpc/grpc/issues/11970#issuecomment-319974032",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11970",
    "id": 319974032,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTk3NDAzMg==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-03T13:48:37Z",
    "updated_at": "2017-08-03T13:48:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, something seems to be horribly wrong with the qps_workers involved in the tests.\r\n\r\nFrom qps_worker crashdump:\r\n- **client qps_worker has 17000 threads!!!**\r\n- **server qps_worker has 14000 threads!!!**\r\n\r\nHence, the gpr_thd_new  assertion failure is not surprising at all, our benchmarks are nothing else than thread creation machines. ;-)\r\n\r\nWhile the sync test says 64 channels  & 16 outstanding calls per channel so each qps_worker should have ~1000 threads.\r\n\r\nThe test spec\r\n```\r\nbins/dbg/json_run_localhost --scenarios_json '{\"scenarios\": [{\"name\": \"cpp_protobuf_sync_streaming_from_client_qps_unconstrained_insecure\", \"warmup_seconds\": 0, \"benchmark_seconds\": 1, \"num_servers\": 1, \"server_config\": {\"async_server_threads\": 0, \"channel_args\": [{\"str_value\": \"throughput\", \"name\": \"grpc.optimization_target\"}, {\"int_value\": 1, \"name\": \"grpc.minimal_stack\"}], \"security_params\": null, \"threads_per_cq\": 0, \"server_type\": \"SYNC_SERVER\"}, \"num_clients\": 0, \"client_config\": {\"security_params\": null, \"channel_args\": [{\"str_value\": \"throughput\", \"name\": \"grpc.optimization_target\"}, {\"int_value\": 1, \"name\": \"grpc.minimal_stack\"}], \"async_client_threads\": 0, \"outstanding_rpcs_per_channel\": 16, \"rpc_type\": \"STREAMING_FROM_CLIENT\", \"payload_config\": {\"simple_params\": {\"resp_size\": 0, \"req_size\": 0}}, \"client_channels\": 64, \"threads_per_cq\": 0, \"load_params\": {\"closed_loop\": {}}, \"client_type\": \"SYNC_CLIENT\", \"histogram_params\": {\"max_possible\": 60000000000.0, \"resolution\": 0.01}}}]}' GRPC_POLL_STRATEGY=poll-cv\r\n```\r\n\r\nMore details from the crashdump:\r\n\r\nClient qps_worker's main thread:\r\n\r\n```\r\n(gdb) bt\r\n#0  0x00007f39f04ddc37 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56\r\n#1  0x00007f39f04e1028 in __GI_abort () at abort.c:89\r\n#2  0x00000000004efcb0 in cvfd_poll (fds=0x7f38a2d83530, nfds=2, timeout=-1) at src/core/lib/iomgr/ev_poll_posix.c:1376\r\n#3  0x00000000004ee4fc in pollset_work (exec_ctx=0x7f38a2d84890, pollset=0x7f39e1880090, worker_hdl=0x7f38a2d847f8, now=..., deadline=...) at src/core/lib/iomgr/ev_poll_posix.c:964\r\n#4  0x00000000004c54e7 in grpc_pollset_work (exec_ctx=0x7f38a2d84890, pollset=0x7f39e1880090, worker=0x7f38a2d847f8, now=..., deadline=...) at src/core/lib/iomgr/ev_posix.c:214\r\n#5  0x00000000004d7c2c in cq_pluck (cq=0x7f39e187ff50, tag=0x7f38a2d84a00, deadline=..., reserved=0x0) at src/core/lib/surface/completion_queue.c:1130\r\n#6  0x00000000004d7e72 in grpc_completion_queue_pluck (cq=0x7f39e187ff50, tag=0x7f38a2d84a00, deadline=..., reserved=0x0) at src/core/lib/surface/completion_queue.c:1160\r\n#7  0x00000000004ff531 in grpc::CoreCodegen::grpc_completion_queue_pluck (this=0xb40c08 <_ZN4grpc8internalL14g_core_codegenE>, cq=0x7f39e187ff50, tag=0x7f38a2d84a00, deadline=..., reserved=0x0) at src/cpp/common/core_codegen.cc:72\r\n#8  0x000000000040f0b4 in grpc::CompletionQueue::Pluck (this=0x7f39e187ff00, tag=0x7f38a2d84a00) at include/grpc++/impl/codegen/completion_queue.h:224\r\n#9  0x0000000000490854 in grpc::ClientWriter<grpc::testing::SimpleRequest>::Write (this=0x7f39e187fe50, msg=..., options=...) at include/grpc++/impl/codegen/sync_stream.h:327\r\n#10 0x00000000004b0c0d in grpc::WriterInterface<grpc::testing::SimpleRequest>::Write (this=0x7f39e187fe58, msg=...) at include/grpc++/impl/codegen/sync_stream.h:123\r\n#11 0x00000000004af7de in grpc::testing::SynchronousStreamingFromClientClient::ThreadFunc (this=0x7f39e002b860, entry=0x7f38a2d84b50, thread_idx=635) at test/cpp/qps/client_sync.cc:260\r\n#12 0x00000000004986ab in grpc::testing::Client::Thread::ThreadFunc (this=0x7f39e0805a50) at ./test/cpp/qps/client.h:308\r\n#13 0x00000000004ae283 in std::_Mem_fn<void (grpc::testing::Client::Thread::*)()>::operator()<, void>(grpc::testing::Client::Thread*) const (this=0x7f39e08082d8, __object=0x7f39e0805a50) at /usr/include/c++/4.8/functional:601\r\n#14 0x00000000004ade0b in std::_Bind_simple<std::_Mem_fn<void (grpc::testing::Client::Thread::*)()> (grpc::testing::Client::Thread*)>::_M_invoke<0ul>(std::_Index_tuple<0ul>) (this=0x7f39e08082d0) at /usr/include/c++/4.8/functional:1732\r\n#15 0x00000000004ad5cb in std::_Bind_simple<std::_Mem_fn<void (grpc::testing::Client::Thread::*)()> (grpc::testing::Client::Thread*)>::operator()() (this=0x7f39e08082d0) at /usr/include/c++/4.8/functional:1720\r\n#16 0x00000000004ab69c in std::thread::_Impl<std::_Bind_simple<std::_Mem_fn<void (grpc::testing::Client::Thread::*)()> (grpc::testing::Client::Thread*)> >::_M_run() (this=0x7f39e08082b8) at /usr/include/c++/4.8/thread:115\r\n#17 0x00007f39f0e3da60 in std::(anonymous namespace)::execute_native_thread_routine (__p=<optimized out>) at ../../../../../src/libstdc++-v3/src/c++11/thread.cc:84\r\n#18 0x00007f39f14d1184 in start_thread (arg=0x7f38a2d85700) at pthread_create.c:312\r\n#19 0x00007f39f05a4ffd in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\r\n```\r\n\r\n\r\nClient qps_worker polling thread (they all seem to be doing the same):\r\n\r\n```\r\n(gdb) bt\r\n#0  0x00007f39f0597c5d in poll () at ../sysdeps/unix/syscall-template.S:81\r\n#1  0x00000000004ef869 in run_poll (arg=0x7f36f4004610) at src/core/lib/iomgr/ev_poll_posix.c:1300\r\n#2  0x000000000051968e in thread_body (v=0x7f36f4004650) at src/core/lib/support/thd_posix.c:42\r\n#3  0x00007f39f14d1184 in start_thread (arg=0x7f33c82c0700) at pthread_create.c:312\r\n#4  0x00007f39f05a4ffd in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\r\n```\r\n\r\n\r\nServer qps_workers' main thread:\r\n\r\n```\r\n(gdb) bt\r\n#0  0x00007f5deb9c8c37 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56\r\n#1  0x00007f5deb9cc028 in __GI_abort () at abort.c:89\r\n#2  0x00000000004efcb0 in cvfd_poll (fds=0x7f5504257020, nfds=2, timeout=-1) at src/core/lib/iomgr/ev_poll_posix.c:1376\r\n#3  0x00000000004ee4fc in pollset_work (exec_ctx=0x7f5504258380, pollset=0x7f5c84007ef0, worker_hdl=0x7f55042582e8, now=..., deadline=...) at src/core/lib/iomgr/ev_poll_posix.c:964\r\n#4  0x00000000004c54e7 in grpc_pollset_work (exec_ctx=0x7f5504258380, pollset=0x7f5c84007ef0, worker=0x7f55042582e8, now=..., deadline=...) at src/core/lib/iomgr/ev_posix.c:214\r\n#5  0x00000000004d7c2c in cq_pluck (cq=0x7f5c84007db0, tag=0x7f55042584b0, deadline=..., reserved=0x0) at src/core/lib/surface/completion_queue.c:1130\r\n#6  0x00000000004d7e72 in grpc_completion_queue_pluck (cq=0x7f5c84007db0, tag=0x7f55042584b0, deadline=..., reserved=0x0) at src/core/lib/surface/completion_queue.c:1160\r\n#7  0x00000000004ff531 in grpc::CoreCodegen::grpc_completion_queue_pluck (this=0xb40c08 <_ZN4grpc8internalL14g_core_codegenE>, cq=0x7f5c84007db0, tag=0x7f55042584b0, deadline=..., reserved=0x0) at src/cpp/common/core_codegen.cc:72\r\n#8  0x000000000040f0b4 in grpc::CompletionQueue::Pluck (this=0x7f5504258940, tag=0x7f55042584b0) at include/grpc++/impl/codegen/completion_queue.h:224\r\n#9  0x0000000000442f60 in grpc::ServerReader<grpc::testing::SimpleRequest>::Read (this=0x7f5504258790, msg=0x7f5504258560) at include/grpc++/impl/codegen/sync_stream.h:543\r\n#10 0x00000000004428f7 in grpc::testing::BenchmarkServiceImpl::ClientPull<grpc::ServerReader<grpc::testing::SimpleRequest> > (context=0x7f5504258980, stream=0x7f5504258790, response=0x7f55042587b0) at test/cpp/qps/server_sync.cc:119\r\n#11 0x0000000000441ffa in grpc::testing::BenchmarkServiceImpl::StreamingFromClient (this=0x7f5ddc013dc0, context=0x7f5504258980, stream=0x7f5504258790, response=0x7f55042587b0) at test/cpp/qps/server_sync.cc:65\r\n#12 0x0000000000486cb8 in std::_Mem_fn<grpc::Status (grpc::testing::BenchmarkService::Service::*)(grpc::ServerContext*, grpc::ServerReader<grpc::testing::SimpleRequest>*, grpc::testing::SimpleResponse*)>::operator()<grpc::ServerContext*, grpc::ServerReader<grpc::testing::SimpleRequest>*, grpc::testing::SimpleResponse*, void>(grpc::testing::BenchmarkService::Service*, grpc::ServerContext*&&, grpc::ServerReader<grpc::testing::SimpleRequest>*&&, grpc::testing::SimpleResponse*&&) const (this=0x7f5ddc0145e0, __object=0x7f5ddc013dc0) at /usr/include/c++/4.8/functional:601\r\n#13 0x0000000000482f12 in std::_Function_handler<grpc::Status (grpc::testing::BenchmarkService::Service*, grpc::ServerContext*, grpc::ServerReader<grpc::testing::SimpleRequest>*, grpc::testing::SimpleResponse*), std::_Mem_fn<grpc::Status (grpc::testing::BenchmarkService::Service::*)(grpc::ServerContext*, grpc::ServerReader<grpc::testing::SimpleRequest>*, grpc::testing::SimpleResponse*)> >::_M_invoke(std::_Any_data const&, grpc::testing::BenchmarkService::Service*, grpc::ServerContext*, grpc::ServerReader<grpc::testing::SimpleRequest>*, grpc::testing::SimpleResponse*) (__functor=..., __args#0=0x7f5ddc013dc0, __args#1=0x7f5504258980, __args#2=0x7f5504258790, __args#3=0x7f55042587b0)\r\n    at /usr/include/c++/4.8/functional:2057\r\n#14 0x000000000049382a in std::function<grpc::Status (grpc::testing::BenchmarkService::Service*, grpc::ServerContext*, grpc::ServerReader<grpc::testing::SimpleRequest>*, grpc::testing::SimpleResponse*)>::operator()(grpc::testing::BenchmarkService::Service*, grpc::ServerContext*, grpc::ServerReader<grpc::testing::SimpleRequest>*, grpc::testing::SimpleResponse*) const (this=0x7f5ddc014178, __args#0=0x7f5ddc013dc0, __args#1=0x7f5504258980, __args#2=0x7f5504258790, \r\n    __args#3=0x7f55042587b0) at /usr/include/c++/4.8/functional:2471\r\n#15 0x000000000048d540 in grpc::ClientStreamingHandler<grpc::testing::BenchmarkService::Service, grpc::testing::SimpleRequest, grpc::testing::SimpleResponse>::RunHandler (this=0x7f5ddc014170, param=...)\r\n    at include/grpc++/impl/codegen/method_handler_impl.h:87\r\n#16 0x000000000050e26e in grpc::Server::SyncRequest::CallData::Run (this=0x7f5504258940, global_callbacks=std::shared_ptr (count 1022, weak 0) 0xff6b50) at src/cpp/server/server_cc.cc:214\r\n#17 0x000000000050e652 in grpc::Server::SyncRequestThreadManager::DoWork (this=0x7f5ddc00e950, tag=0x7f5ddc015320, ok=true) at src/cpp/server/server_cc.cc:302\r\n#18 0x000000000051398c in grpc::ThreadManager::MainWorkLoop (this=0x7f5ddc00e950) at src/cpp/thread_manager/thread_manager.cc:152\r\n#19 0x000000000051333f in grpc::ThreadManager::WorkerThread::Run (this=0x7f5c84007cd0) at src/cpp/thread_manager/thread_manager.cc:38\r\n#20 0x000000000051505f in std::_Mem_fn<void (grpc::ThreadManager::WorkerThread::*)()>::operator()<, void>(grpc::ThreadManager::WorkerThread*) const (this=0x7f5c84007d48, __object=0x7f5c84007cd0) at /usr/include/c++/4.8/functional:601\r\n#21 0x0000000000514faf in std::_Bind_simple<std::_Mem_fn<void (grpc::ThreadManager::WorkerThread::*)()> (grpc::ThreadManager::WorkerThread*)>::_M_invoke<0ul>(std::_Index_tuple<0ul>) (this=0x7f5c84007d40)\r\n    at /usr/include/c++/4.8/functional:1732\r\n#22 0x0000000000514eb7 in std::_Bind_simple<std::_Mem_fn<void (grpc::ThreadManager::WorkerThread::*)()> (grpc::ThreadManager::WorkerThread*)>::operator()() (this=0x7f5c84007d40) at /usr/include/c++/4.8/functional:1720\r\n#23 0x0000000000514e50 in std::thread::_Impl<std::_Bind_simple<std::_Mem_fn<void (grpc::ThreadManager::WorkerThread::*)()> (grpc::ThreadManager::WorkerThread*)> >::_M_run() (this=0x7f5c84007d28) at /usr/include/c++/4.8/thread:115\r\n#24 0x00007f5dec328a60 in std::(anonymous namespace)::execute_native_thread_routine (__p=<optimized out>) at ../../../../../src/libstdc++-v3/src/c++11/thread.cc:84\r\n#25 0x00007f5dec9bc184 in start_thread (arg=0x7f5504259700) at pthread_create.c:312\r\n#26 0x00007f5deba8fffd in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\r\n```\r\n\r\nServer qps_worker polling thread (they all seem to be doing the same):\r\n\r\n```\r\n(gdb) bt\r\n#0  0x00007f5deba82c5d in poll () at ../sysdeps/unix/syscall-template.S:81\r\n#1  0x00000000004ef869 in run_poll (arg=0x7f5d5800c1f0) at src/core/lib/iomgr/ev_poll_posix.c:1300\r\n#2  0x000000000051968e in thread_body (v=0x7f5d5800a8f0) at src/core/lib/support/thd_posix.c:42\r\n#3  0x00007f5dec9bc184 in start_thread (arg=0x7f535ff11700) at pthread_create.c:312\r\n#4  0x00007f5deba8fffd in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/319974433",
    "html_url": "https://github.com/grpc/grpc/issues/11970#issuecomment-319974433",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11970",
    "id": 319974433,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTk3NDQzMw==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-03T13:49:59Z",
    "updated_at": "2017-08-03T13:49:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "@vjpai  a wild guess:  could the new threads be created because there's a lot of \"server_request_rpc\" tokens in the completion queues?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/320309698",
    "html_url": "https://github.com/grpc/grpc/issues/11970#issuecomment-320309698",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11970",
    "id": 320309698,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDMwOTY5OA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-04T17:39:36Z",
    "updated_at": "2017-08-04T17:39:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "I did some more analysis and it seems there are thousands of polling threads\r\n\r\nthe assertion fails when trying to create a new polling thread:\r\nhttps://github.com/grpc/grpc/blob/9511aefaa9779762daef3040a04627c435f9c392/src/core/lib/iomgr/ev_poll_posix.c#L1376\r\n \r\ng_cvfds.pollcount   is 14934  (seems way to much)\r\ng_cvfds.size = number of oustanding calls * 2  (that's expected)\r\n\r\nAlmost all polling threads are sleeping in a poll with `timeout = CV_POLL_PERIOD_MS` (1000ms)  and `pargs.status = CANCELLED`. \r\nhttps://github.com/grpc/grpc/blob/9511aefaa9779762daef3040a04627c435f9c392/src/core/lib/iomgr/ev_poll_posix.c#L1300\r\n\r\nA new polling thread is started for each streaming operation (which is expected), but it looks like the old polling threads are not getting cleaned up (for each fd, there seems to be too many polling threads - and because CV_POLL_PERIOD_MS is 1000ms, for tests with high throughput, we run out of max number of threads before they are cleaned up. On my desktop I can have ~35000 threads so tests that have throughput >35Kmpps will always fail).\r\nCan we get the polling threads for poll-cv getting cleaned up properly?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/320314644",
    "html_url": "https://github.com/grpc/grpc/issues/11970#issuecomment-320314644",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11970",
    "id": 320314644,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDMxNDY0NA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-04T18:00:17Z",
    "updated_at": "2017-08-04T18:00:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "\r\nPossible workarounds:\r\n1. decrease CV_POLL_PERIOD_MS so that poller threads are cleaned up more quickly.\r\n2. don't run test with high throughput with poll-cv poller at all (they'll fail when QPS > max_threads)\r\n3. experiment with increasing max thread count on kokoro workers (but tests will still fail locally).\r\n\r\nPossible fix:\r\nhttps://github.com/grpc/grpc/pull/8982\r\n\r\n@kpayson64, which solution do you suggest? Ideally we'd like to deflake our tests as soon as possible, but we would also like a real fix."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/320317218",
    "html_url": "https://github.com/grpc/grpc/issues/11970#issuecomment-320317218",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11970",
    "id": 320317218,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDMxNzIxOA==",
    "user": {
      "login": "kpayson64",
      "id": 18316330,
      "node_id": "MDQ6VXNlcjE4MzE2MzMw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18316330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kpayson64",
      "html_url": "https://github.com/kpayson64",
      "followers_url": "https://api.github.com/users/kpayson64/followers",
      "following_url": "https://api.github.com/users/kpayson64/following{/other_user}",
      "gists_url": "https://api.github.com/users/kpayson64/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kpayson64/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kpayson64/subscriptions",
      "organizations_url": "https://api.github.com/users/kpayson64/orgs",
      "repos_url": "https://api.github.com/users/kpayson64/repos",
      "events_url": "https://api.github.com/users/kpayson64/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kpayson64/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-04T18:11:37Z",
    "updated_at": "2017-08-04T18:11:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "I suggest getting #8982 reviewed and merged.  It was passing all the tests last time I worked on it, and it should also speed up our poll-cv test runs."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/321520862",
    "html_url": "https://github.com/grpc/grpc/issues/11970#issuecomment-321520862",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11970",
    "id": 321520862,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTUyMDg2Mg==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-10T11:03:47Z",
    "updated_at": "2017-08-10T11:03:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "Seems fixed by #8982. Thanks @kpayson64 "
  }
]
