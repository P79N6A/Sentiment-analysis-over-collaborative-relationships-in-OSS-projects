[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/292771248",
    "html_url": "https://github.com/grpc/grpc/issues/10533#issuecomment-292771248",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10533",
    "id": 292771248,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5Mjc3MTI0OA==",
    "user": {
      "login": "KanybekMomukeyev",
      "id": 866641,
      "node_id": "MDQ6VXNlcjg2NjY0MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/866641?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/KanybekMomukeyev",
      "html_url": "https://github.com/KanybekMomukeyev",
      "followers_url": "https://api.github.com/users/KanybekMomukeyev/followers",
      "following_url": "https://api.github.com/users/KanybekMomukeyev/following{/other_user}",
      "gists_url": "https://api.github.com/users/KanybekMomukeyev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/KanybekMomukeyev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KanybekMomukeyev/subscriptions",
      "organizations_url": "https://api.github.com/users/KanybekMomukeyev/orgs",
      "repos_url": "https://api.github.com/users/KanybekMomukeyev/repos",
      "events_url": "https://api.github.com/users/KanybekMomukeyev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/KanybekMomukeyev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-09T08:07:46Z",
    "updated_at": "2017-04-09T08:16:16Z",
    "author_association": "NONE",
    "body": "@jcanizales\r\n```\r\n\r\n//Reachibility\r\nreachability?.whenReachable = { reachability in\r\n                dispatch_async_safely_to_main_queue({\r\n                    RPCNetwork.shared.stopStreamingConnection()\r\n                    RPCNetwork.shared.openStreamingConnection()\r\n                })\r\n            }\r\n            \r\n            reachability?.whenUnreachable = { reachability in\r\n                dispatch_async_safely_to_main_queue({\r\n                    RPCNetwork.shared.stopStreamingConnection()\r\n                })\r\n            }\r\n\r\n\r\n\r\nvar updateStreamCall: GRPCProtoCall?\r\nvar updateStreamWriter: GRXBufferedPipe?\r\n\r\nfunc stopStreamingConnection() {\r\n\tself.updateStreamCall?.cancel()\r\n\tself.updateStreamCall = nil\r\n\tself.updateStreamWriter?.writesFinishedWithError(nil)\r\n\tself.updateStreamWriter = nil\r\n}\r\n\r\nfunc openStreamingConnection() {\r\n    let request = StickyNoteRequest()\r\n    request.message = \"hello world\"\r\n    self.updateStreamWriter = GRXBufferedPipe()\r\n    self.updateStreamWriter?.writeValue(request)\r\n    \r\n    if let updateStreamWriter_ = self.updateStreamWriter {\r\n        \r\n        self.updateStreamCall = self.protoService.rpcToUpdateStream(withRequestsWriter: updateStreamWriter_, eventHandler: {[weak self] (boolValue: Bool, response: StickyNoteResponse?, error: Error?) in\r\n            if let strongSelf = self {\r\n                \r\n                if boolValue {\r\n                    print(\"Disconnected from server, took \\(strongSelf.connectionTimer?.stop()) seconds.\")\r\n                } else {\r\n                    print(\"Connected to server, took \\(strongSelf.connectionTimer?.stop()) seconds.\")\r\n                }\r\n                \r\n                if (error != nil) {\r\n                    print(\"error ==> \\(error)\")\r\n                } else if let responseMessage = response?.message {\r\n                    print(\"response_.message ==> \\(responseMessage)\")\r\n                }\r\n            }\r\n        })\r\n       self.updateStreamCall?.start()\r\n    }\r\n}\r\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/292855842",
    "html_url": "https://github.com/grpc/grpc/issues/10533#issuecomment-292855842",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10533",
    "id": 292855842,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5Mjg1NTg0Mg==",
    "user": {
      "login": "KanybekMomukeyev",
      "id": 866641,
      "node_id": "MDQ6VXNlcjg2NjY0MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/866641?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/KanybekMomukeyev",
      "html_url": "https://github.com/KanybekMomukeyev",
      "followers_url": "https://api.github.com/users/KanybekMomukeyev/followers",
      "following_url": "https://api.github.com/users/KanybekMomukeyev/following{/other_user}",
      "gists_url": "https://api.github.com/users/KanybekMomukeyev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/KanybekMomukeyev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KanybekMomukeyev/subscriptions",
      "organizations_url": "https://api.github.com/users/KanybekMomukeyev/orgs",
      "repos_url": "https://api.github.com/users/KanybekMomukeyev/repos",
      "events_url": "https://api.github.com/users/KanybekMomukeyev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/KanybekMomukeyev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-10T05:52:15Z",
    "updated_at": "2017-04-10T05:52:15Z",
    "author_association": "NONE",
    "body": "Find mistake, this is already my mistake."
  }
]
