[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/316455398",
    "html_url": "https://github.com/grpc/grpc/issues/11879#issuecomment-316455398",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11879",
    "id": 316455398,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjQ1NTM5OA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-19T17:14:58Z",
    "updated_at": "2017-07-19T17:14:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "All name resolution functionality is provided by C core. The reason is we don't want to duplicate the effort.\r\nWhat kind of name resolver you need to plug in?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/316503307",
    "html_url": "https://github.com/grpc/grpc/issues/11879#issuecomment-316503307",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11879",
    "id": 316503307,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjUwMzMwNw==",
    "user": {
      "login": "Falco20019",
      "id": 940619,
      "node_id": "MDQ6VXNlcjk0MDYxOQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/940619?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Falco20019",
      "html_url": "https://github.com/Falco20019",
      "followers_url": "https://api.github.com/users/Falco20019/followers",
      "following_url": "https://api.github.com/users/Falco20019/following{/other_user}",
      "gists_url": "https://api.github.com/users/Falco20019/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Falco20019/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Falco20019/subscriptions",
      "organizations_url": "https://api.github.com/users/Falco20019/orgs",
      "repos_url": "https://api.github.com/users/Falco20019/repos",
      "events_url": "https://api.github.com/users/Falco20019/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Falco20019/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-19T20:14:22Z",
    "updated_at": "2017-07-19T20:17:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "I need to be able to give my own responses based on what services are loaded. Most of the time, we don't have a big amount of services and also don't need load balancing but still want to keep the architecture open for that. That's why our central platform, which is configuring and orchestrating the services, should have a small built in discovery service. So that it's easy to use those same modules either on a terminal (small scale) or in the cloud (big scale) in case that the customer has no own infrastructure.\r\n\r\nSome of the services request data right after startup from others. That's why I would also like to use the channels ability for lookup and automatic backoff. We currently have a highly modular software with around 300 modules, but the current platform is somewhat limited. GRPC and ProtoBuf solves already a lot of the issues. That's why we would like to migrate, and to be future proof for our current plans.\r\n\r\nIt's for the company I'm working for. So I can give you more details on the use case, but only on a private channel."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/316703211",
    "html_url": "https://github.com/grpc/grpc/issues/11879#issuecomment-316703211",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11879",
    "id": 316703211,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjcwMzIxMQ==",
    "user": {
      "login": "Falco20019",
      "id": 940619,
      "node_id": "MDQ6VXNlcjk0MDYxOQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/940619?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Falco20019",
      "html_url": "https://github.com/Falco20019",
      "followers_url": "https://api.github.com/users/Falco20019/followers",
      "following_url": "https://api.github.com/users/Falco20019/following{/other_user}",
      "gists_url": "https://api.github.com/users/Falco20019/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Falco20019/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Falco20019/subscriptions",
      "organizations_url": "https://api.github.com/users/Falco20019/orgs",
      "repos_url": "https://api.github.com/users/Falco20019/repos",
      "events_url": "https://api.github.com/users/Falco20019/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Falco20019/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-20T13:29:53Z",
    "updated_at": "2017-07-20T13:33:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "So getting access through the C# library to define a name resolver in c-core would be one option. I don't know how hard this would be to implement. Another option I thought of, would be to go the load-balancer route.\r\n\r\nSince the c-core supports grpclb, I would be fine to implement the [load_balancer.proto](https://github.com/grpc/grpc/blob/master/src/proto/grpc/lb/v1/load_balancer.proto) in C# and just return the correct endpoints. But since authorities are not supported in [DNS resolvers](https://github.com/grpc/grpc/blob/master/doc/naming.md) (only with c-ares, which AFAIK is not supported in GRPC for windows), I would have to define all services as DNS entries to redirect to my name resolving load balancer. So for that scenario, I would still need to be able to define a name resolver in C# API, which is just delegating all requests to a predefined load balancer which is easier to implement since it has no user logic, just the load balancer IP endpoint.\r\n\r\nI don't really like this way of abusing the load balancer concept as name resolver, but I'm just thinking a bit on how to solve the problem until there is native support."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/317978320",
    "html_url": "https://github.com/grpc/grpc/issues/11879#issuecomment-317978320",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11879",
    "id": 317978320,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzk3ODMyMA==",
    "user": {
      "login": "Falco20019",
      "id": 940619,
      "node_id": "MDQ6VXNlcjk0MDYxOQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/940619?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Falco20019",
      "html_url": "https://github.com/Falco20019",
      "followers_url": "https://api.github.com/users/Falco20019/followers",
      "following_url": "https://api.github.com/users/Falco20019/following{/other_user}",
      "gists_url": "https://api.github.com/users/Falco20019/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Falco20019/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Falco20019/subscriptions",
      "organizations_url": "https://api.github.com/users/Falco20019/orgs",
      "repos_url": "https://api.github.com/users/Falco20019/repos",
      "events_url": "https://api.github.com/users/Falco20019/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Falco20019/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-26T07:56:48Z",
    "updated_at": "2017-07-26T07:57:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just for purpose of understanding: AFAIK GRPC has no environment variables or knobs for setting the DNS server to use. So I have to setup a DNS server on the OS level, right?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/318593582",
    "html_url": "https://github.com/grpc/grpc/issues/11879#issuecomment-318593582",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11879",
    "id": 318593582,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODU5MzU4Mg==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-28T08:28:15Z",
    "updated_at": "2017-07-28T08:28:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Falco20019  I think that's right.   \r\nCC @y-zeng who knows more about this topic."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/330170780",
    "html_url": "https://github.com/grpc/grpc/issues/11879#issuecomment-330170780",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11879",
    "id": 330170780,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDE3MDc4MA==",
    "user": {
      "login": "Falco20019",
      "id": 940619,
      "node_id": "MDQ6VXNlcjk0MDYxOQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/940619?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Falco20019",
      "html_url": "https://github.com/Falco20019",
      "followers_url": "https://api.github.com/users/Falco20019/followers",
      "following_url": "https://api.github.com/users/Falco20019/following{/other_user}",
      "gists_url": "https://api.github.com/users/Falco20019/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Falco20019/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Falco20019/subscriptions",
      "organizations_url": "https://api.github.com/users/Falco20019/orgs",
      "repos_url": "https://api.github.com/users/Falco20019/repos",
      "events_url": "https://api.github.com/users/Falco20019/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Falco20019/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-18T09:36:29Z",
    "updated_at": "2017-09-18T09:36:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Any news, plans or other issues on this topic? I'm fine with any approach (wrapper for c-core resolver, C# specific, something like c-ares but working with windows, ...). I only need it by around end of the year, so not time critical yet. I'm also looking forward to https://github.com/grpc/grpc/issues/11646"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/330206965",
    "html_url": "https://github.com/grpc/grpc/issues/11879#issuecomment-330206965",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11879",
    "id": 330206965,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDIwNjk2NQ==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-18T12:39:54Z",
    "updated_at": "2017-09-18T12:39:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Updates:\r\n- we've migrated to c-ares 1.13 recently (because that version comes with cmake support and building on windows has become easier).\r\n- c-ares bindings for windows are currently WIP (https://github.com/grpc/grpc/pull/12416).\r\n\r\nBesides these we don't have any plans, at least not before the end of this year."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/330226442",
    "html_url": "https://github.com/grpc/grpc/issues/11879#issuecomment-330226442",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11879",
    "id": 330226442,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDIyNjQ0Mg==",
    "user": {
      "login": "Falco20019",
      "id": 940619,
      "node_id": "MDQ6VXNlcjk0MDYxOQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/940619?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Falco20019",
      "html_url": "https://github.com/Falco20019",
      "followers_url": "https://api.github.com/users/Falco20019/followers",
      "following_url": "https://api.github.com/users/Falco20019/following{/other_user}",
      "gists_url": "https://api.github.com/users/Falco20019/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Falco20019/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Falco20019/subscriptions",
      "organizations_url": "https://api.github.com/users/Falco20019/orgs",
      "repos_url": "https://api.github.com/users/Falco20019/repos",
      "events_url": "https://api.github.com/users/Falco20019/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Falco20019/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-18T13:46:37Z",
    "updated_at": "2017-09-18T13:46:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, thanks for the news :) then I will use my workaround until then. Should do it for the moment. I could look into wrapping the C stuff myself and do a PR when it becomes relevant to our company. "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/342070712",
    "html_url": "https://github.com/grpc/grpc/issues/11879#issuecomment-342070712",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11879",
    "id": 342070712,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MjA3MDcxMg==",
    "user": {
      "login": "Falco20019",
      "id": 940619,
      "node_id": "MDQ6VXNlcjk0MDYxOQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/940619?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Falco20019",
      "html_url": "https://github.com/Falco20019",
      "followers_url": "https://api.github.com/users/Falco20019/followers",
      "following_url": "https://api.github.com/users/Falco20019/following{/other_user}",
      "gists_url": "https://api.github.com/users/Falco20019/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Falco20019/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Falco20019/subscriptions",
      "organizations_url": "https://api.github.com/users/Falco20019/orgs",
      "repos_url": "https://api.github.com/users/Falco20019/repos",
      "events_url": "https://api.github.com/users/Falco20019/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Falco20019/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-06T07:50:37Z",
    "updated_at": "2017-11-06T07:50:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "Cross referencing question about GRPCLB https://groups.google.com/forum/?pli=1#!topic/grpc-io/D8YYlDh6l-o"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/349879475",
    "html_url": "https://github.com/grpc/grpc/issues/11879#issuecomment-349879475",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11879",
    "id": 349879475,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTg3OTQ3NQ==",
    "user": {
      "login": "dunkymole",
      "id": 2920569,
      "node_id": "MDQ6VXNlcjI5MjA1Njk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2920569?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dunkymole",
      "html_url": "https://github.com/dunkymole",
      "followers_url": "https://api.github.com/users/dunkymole/followers",
      "following_url": "https://api.github.com/users/dunkymole/following{/other_user}",
      "gists_url": "https://api.github.com/users/dunkymole/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dunkymole/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dunkymole/subscriptions",
      "organizations_url": "https://api.github.com/users/dunkymole/orgs",
      "repos_url": "https://api.github.com/users/dunkymole/repos",
      "events_url": "https://api.github.com/users/dunkymole/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dunkymole/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-07T06:52:09Z",
    "updated_at": "2017-12-07T06:52:09Z",
    "author_association": "NONE",
    "body": "Hey. I am hearing not before the end of the year for c-ares on Windows. I am also interested in the dns:/// resolver. Do you have any higher resolution timelines for the c-ares on Windows implementation?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/349888541",
    "html_url": "https://github.com/grpc/grpc/issues/11879#issuecomment-349888541",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11879",
    "id": 349888541,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTg4ODU0MQ==",
    "user": {
      "login": "Falco20019",
      "id": 940619,
      "node_id": "MDQ6VXNlcjk0MDYxOQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/940619?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Falco20019",
      "html_url": "https://github.com/Falco20019",
      "followers_url": "https://api.github.com/users/Falco20019/followers",
      "following_url": "https://api.github.com/users/Falco20019/following{/other_user}",
      "gists_url": "https://api.github.com/users/Falco20019/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Falco20019/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Falco20019/subscriptions",
      "organizations_url": "https://api.github.com/users/Falco20019/orgs",
      "repos_url": "https://api.github.com/users/Falco20019/repos",
      "events_url": "https://api.github.com/users/Falco20019/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Falco20019/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-07T07:44:41Z",
    "updated_at": "2017-12-07T07:44:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "/CC @jtattermusch"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/464753977",
    "html_url": "https://github.com/grpc/grpc/issues/11879#issuecomment-464753977",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11879",
    "id": 464753977,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDc1Mzk3Nw==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-18T14:37:46Z",
    "updated_at": "2019-02-18T14:37:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "GRPC_DNS_RESOLVER=ares will be the default resolver for v1.19.0.\r\n\r\nAlso, this issue now seems obsolete:\r\n- we are not planning to implement grpclb client in C#.\r\n- for opensource use, the plan is to implement a load balancing client that is compatible with xDS Envoy Universal Data API."
  }
]
