[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/452054070",
    "html_url": "https://github.com/grpc/grpc/pull/17630#issuecomment-452054070",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17630",
    "id": 452054070,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjA1NDA3MA==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-07T19:33:25Z",
    "updated_at": "2019-01-07T19:33:25Z",
    "author_association": "MEMBER",
    "body": "Approved. I like the examples, but looks like there are still some leaks. I think it's just a matter of making sure that the function is nulled out on all paths, may be some trial and error there.\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/452132083",
    "html_url": "https://github.com/grpc/grpc/pull/17630#issuecomment-452132083",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17630",
    "id": 452132083,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjEzMjA4Mw==",
    "user": {
      "login": "yashykt",
      "id": 4181124,
      "node_id": "MDQ6VXNlcjQxODExMjQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4181124?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yashykt",
      "html_url": "https://github.com/yashykt",
      "followers_url": "https://api.github.com/users/yashykt/followers",
      "following_url": "https://api.github.com/users/yashykt/following{/other_user}",
      "gists_url": "https://api.github.com/users/yashykt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yashykt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yashykt/subscriptions",
      "organizations_url": "https://api.github.com/users/yashykt/orgs",
      "repos_url": "https://api.github.com/users/yashykt/repos",
      "events_url": "https://api.github.com/users/yashykt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yashykt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-08T00:32:13Z",
    "updated_at": "2019-01-08T00:32:13Z",
    "author_association": "MEMBER",
    "body": "That solved it! :)\r\nThanks for reviewing!"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/452345607",
    "html_url": "https://github.com/grpc/grpc/pull/17630#issuecomment-452345607",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17630",
    "id": 452345607,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjM0NTYwNw==",
    "user": {
      "login": "tsalomie",
      "id": 477955,
      "node_id": "MDQ6VXNlcjQ3Nzk1NQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/477955?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tsalomie",
      "html_url": "https://github.com/tsalomie",
      "followers_url": "https://api.github.com/users/tsalomie/followers",
      "following_url": "https://api.github.com/users/tsalomie/following{/other_user}",
      "gists_url": "https://api.github.com/users/tsalomie/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tsalomie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tsalomie/subscriptions",
      "organizations_url": "https://api.github.com/users/tsalomie/orgs",
      "repos_url": "https://api.github.com/users/tsalomie/repos",
      "events_url": "https://api.github.com/users/tsalomie/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tsalomie/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-08T15:45:11Z",
    "updated_at": "2019-01-08T15:45:11Z",
    "author_association": "NONE",
    "body": "My current understanding of the outcome of this change is:\r\n1) an interceptor can either access the request payload in serialized form or in original form, but not both at the same time.\r\n2) you can go from original form to serialized form, but not back.\r\n3) changing the request is possible in both original and serialized form.\r\n4) changing the original form requires holding onto the new payload until POST_SEND_MESSAGE or until explicitly calling GetSerializedSendMessage()\r\n5) changing the serialized form has not requirement.\r\n6) with chained interceptors, once one moves to serialize the payload, that is final.\r\n\r\nAre the above correct?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/452350440",
    "html_url": "https://github.com/grpc/grpc/pull/17630#issuecomment-452350440",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17630",
    "id": 452350440,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjM1MDQ0MA==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-08T15:57:58Z",
    "updated_at": "2019-01-08T16:11:57Z",
    "author_association": "MEMBER",
    "body": "@tsalomie Here's my response, which I think is correct.\r\n\r\n1. Basically. If you access the serialized form, you're invalidating the non-serialized form since the serialized form is mutable.\r\n1. As above.\r\n1. Yes! The serialized form is mutable. The non-serialized form requires the ModifySendMessage call.\r\n1. Yes. Changing the original form means that the interceptor is the owner of the new payload. If the interceptor calls `GetSerializedSendMessage`, it can drop ownership early. Technically, if another interceptor calls `ModifySendMessage`, you also don't need to maintain the object either, but that would be out of this interceptor's scope so you wouldn't see that behavior.\r\n1. Correct. The library is always the owner of the serialized form.\r\n1. Basically. You could deserialize the message again and use ModifySendMessage to re-establish a non-serialized form.\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/452381365",
    "html_url": "https://github.com/grpc/grpc/pull/17630#issuecomment-452381365",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17630",
    "id": 452381365,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjM4MTM2NQ==",
    "user": {
      "login": "yashykt",
      "id": 4181124,
      "node_id": "MDQ6VXNlcjQxODExMjQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4181124?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yashykt",
      "html_url": "https://github.com/yashykt",
      "followers_url": "https://api.github.com/users/yashykt/followers",
      "following_url": "https://api.github.com/users/yashykt/following{/other_user}",
      "gists_url": "https://api.github.com/users/yashykt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yashykt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yashykt/subscriptions",
      "organizations_url": "https://api.github.com/users/yashykt/orgs",
      "repos_url": "https://api.github.com/users/yashykt/repos",
      "events_url": "https://api.github.com/users/yashykt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yashykt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-08T17:22:57Z",
    "updated_at": "2019-01-08T17:23:15Z",
    "author_association": "MEMBER",
    "body": "Thanks for your comment @tsalomie ! I have stolen your points to add them as part of the documentation in https://github.com/grpc/grpc/pull/17662 :)"
  }
]
