[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/218381903",
    "html_url": "https://github.com/grpc/grpc/issues/6429#issuecomment-218381903",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6429",
    "id": 218381903,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODM4MTkwMw==",
    "user": {
      "login": "mihai-caraman-hs",
      "id": 12171021,
      "node_id": "MDQ6VXNlcjEyMTcxMDIx",
      "avatar_url": "https://avatars0.githubusercontent.com/u/12171021?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mihai-caraman-hs",
      "html_url": "https://github.com/mihai-caraman-hs",
      "followers_url": "https://api.github.com/users/mihai-caraman-hs/followers",
      "following_url": "https://api.github.com/users/mihai-caraman-hs/following{/other_user}",
      "gists_url": "https://api.github.com/users/mihai-caraman-hs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mihai-caraman-hs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mihai-caraman-hs/subscriptions",
      "organizations_url": "https://api.github.com/users/mihai-caraman-hs/orgs",
      "repos_url": "https://api.github.com/users/mihai-caraman-hs/repos",
      "events_url": "https://api.github.com/users/mihai-caraman-hs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mihai-caraman-hs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-11T07:23:00Z",
    "updated_at": "2016-05-11T08:17:38Z",
    "author_association": "NONE",
    "body": "Did some digging and found out that:\n- When the OOPS exception is caught on the client, it also hangs\n- If we remove the entire line `return proof_pb2.ProofResponse(response=\"NOT OK\")` and let it return None, it will always show the OOPS exception (and as previously stated, it will always hang)\n- When the NOT OK response was received:\n\n``` python\n# list of tickets from framework/core/_operation.py:_EasyOperation.handle_ticket:\nTicket(operation_id=UUID('dc3839d3-ad7d-452a-b3e7-a3c9c95edbfc'), sequence_number=0, group=None, method=None, subscription=None, timeout=None, allowance=None, initial_metadata=None, payload=None, terminal_metadata=None, code=None, message=None, termination=None, protocol=Protocol(kind=<Kind.INVOCATION_CONTEXT: 'invocation context'>, value=<grpc._links.invocation._Context object at 0x1c6e390>))\nTicket(operation_id=UUID('dc3839d3-ad7d-452a-b3e7-a3c9c95edbfc'), sequence_number=1, group=None, method=None, subscription=<Subscription.FULL: 'full'>, timeout=None, allowance=None, initial_metadata=<grpc._cython.cygrpc.Metadata object at 0x1c2caa0>, payload=None, terminal_metadata=None, code=None, message=None, termination=None, protocol=None)\nTicket(operation_id=UUID('dc3839d3-ad7d-452a-b3e7-a3c9c95edbfc'), sequence_number=2, group=None, method=None, subscription=None, timeout=None, allowance=None, initial_metadata=None, payload=response: \"NOT OK\", terminal_metadata=None, code=None, message=None, termination=None, protocol=None)\n\n#stacktrace before calling callbacks\n> /usr/local/lib/python2.7/dist-packages/grpc/framework/core/_termination.py(134)_terminate_internal_only()\n-> self._pool.submit(\n> /usr/local/lib/python2.7/dist-packages/grpc/framework/core/_termination.py(140)_terminate_and_notify()\n-> self._terminate_internal_only(outcome)\n> /usr/local/lib/python2.7/dist-packages/grpc/framework/core/_termination.py(201)abort()\n-> self._terminate_and_notify(outcome)\n> /usr/local/lib/python2.7/dist-packages/grpc/framework/core/_operation.py(82)abort()\n-> self._termination_manager.abort(outcome)\n> /usr/local/lib/python2.7/dist-packages/grpc/framework/core/_end.py(72)_abort()\n-> operation.abort(base.Outcome.Kind.LOCAL_SHUTDOWN)\n> /usr/local/lib/python2.7/dist-packages/grpc/framework/core/_end.py(162)stop()\n-> _abort(self._cycle.operations.values())\n> /usr/local/lib/python2.7/dist-packages/grpc/beta/_stub.py(109)down()\n-> self._end_link.stop(0).wait()\n> /usr/local/lib/python2.7/dist-packages/grpc/beta/_stub.py(80)__del__()\n-> self._down()\n> /home/django/web/frontend/x(<module>()\n-> import proof;proof.client()\n*** Oldest frame\n```\n- When the OOPS response was received:\n\n``` python\n# list of tickets from framework/core/_operation.py:_EasyOperation.handle_ticket\nTicket(operation_id=UUID('31a55c28-0a59-4b47-a426-514febff6dd4'), sequence_number=0, group=None, method=None, subscription=None, timeout=None, allowance=None, initial_metadata=None, payload=None, terminal_metadata=None, code=None, message=None, termination=None, protocol=Protocol(kind=<Kind.INVOCATION_CONTEXT: 'invocation context'>, value=<grpc._links.invocation._Context object at 0x277f390>))\nTicket(operation_id=UUID('31a55c28-0a59-4b47-a426-514febff6dd4'), sequence_number=1, group=None, method=None, subscription=<Subscription.FULL: 'full'>, timeout=None, allowance=None, initial_metadata=<grpc._cython.cygrpc.Metadata object at 0x273daa0>, payload=None, terminal_metadata=None, code=None, message=None, termination=None, protocol=None)\nTicket(operation_id=UUID('31a55c28-0a59-4b47-a426-514febff6dd4'), sequence_number=2, group=None, method=None, subscription=None, timeout=None, allowance=None, initial_metadata=None, payload=None, terminal_metadata=<grpc._cython.cygrpc.Metadata object at 0x273daf0>, code=<StatusCode.INTERNAL: 13>, message='OOPS', termination=<Termination.TRANSMISSION_FAILURE: 'transmission failure'>, protocol=None)\n\n#stacktrace before calling callbacks:\n> /usr/local/lib/python2.7/dist-packages/grpc/framework/core/_termination.py(134)_terminate_internal_only()\n-> self._pool.submit(\n> /usr/local/lib/python2.7/dist-packages/grpc/framework/core/_termination.py(140)_terminate_and_notify()\n-> self._terminate_internal_only(outcome)\n> /usr/local/lib/python2.7/dist-packages/grpc/framework/core/_termination.py(201)abort()\n-> self._terminate_and_notify(outcome)\n> /usr/local/lib/python2.7/dist-packages/grpc/framework/core/_reception.py(88)_abort()\n-> self._termination_manager.abort(outcome)\n> /usr/local/lib/python2.7/dist-packages/grpc/framework/core/_reception.py(155)receive_ticket()\n-> _utilities.Outcome(outcome_kind, ticket.code, ticket.message))\n> /usr/local/lib/python2.7/dist-packages/grpc/framework/core/_operation.py(76)handle_ticket()\n-> self._reception_manager.receive_ticket(ticket)\n> /usr/local/lib/python2.7/dist-packages/grpc/framework/core/_end.py(204)accept_ticket()\n-> operation.handle_ticket(ticket)\n> /usr/local/lib/python2.7/dist-packages/grpc/framework/foundation/relay.py(92)_spin()\n-> behavior(value)\n> /usr/local/lib/python2.7/dist-packages/grpc/framework/foundation/logging_pool.py(41)_wrapping()\n-> return behavior(*args, **kwargs)\n> /usr/local/lib/python2.7/dist-packages/concurrent/futures/thread.py(61)run()\n-> result = self.fn(*self.args, **self.kwargs)\n> /usr/local/lib/python2.7/dist-packages/concurrent/futures/thread.py(73)_worker()\n-> work_item.run()\n> /usr/lib/python2.7/threading.py(504)run()\n-> self.__target(*self.__args, **self.__kwargs)\n> /usr/lib/python2.7/threading.py(551)__bootstrap_inner()\n-> self.run()\n> /usr/lib/python2.7/threading.py(524)__bootstrap()\n-> self.__bootstrap_inner()\n*** Oldest frame\n```\n\nSince that hanging always happens when OOPS is shown, we'll return None and keep an eye on memory leaks.\n\nBut I have to say, this is an important problem to solve before grpc would be production ready.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/226523015",
    "html_url": "https://github.com/grpc/grpc/issues/6429#issuecomment-226523015",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6429",
    "id": 226523015,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNjUyMzAxNQ==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-16T15:34:14Z",
    "updated_at": "2016-06-16T15:34:14Z",
    "author_association": "MEMBER",
    "body": "This is now fixed on source control master (or if it isn't, please reopen this issue) and the fix will be released on 0.15.\n"
  }
]
