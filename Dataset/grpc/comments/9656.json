[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/278721708",
    "html_url": "https://github.com/grpc/grpc/issues/9656#issuecomment-278721708",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9656",
    "id": 278721708,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODcyMTcwOA==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-09T18:00:22Z",
    "updated_at": "2017-02-09T18:00:22Z",
    "author_association": "MEMBER",
    "body": "It's not as stable as the wrapped languages: we make changes (mostly for\nperformance) periodically... indeed every minor revision of the wrapped\nAPI's so far has included a breaking change to the core API (and this will\noccur again for 1.2).\n\nSuch changes are usually fairly mechanical, but they will happen.\n\nCan I inquire about your use-case? There have been some efforts to provide\na higher level (and API stable) C API from some folks.\n\nOn Thu, Feb 9, 2017 at 9:55 AM M. Nunberg <notifications@github.com> wrote:\n\n> Not sure if this is the place to ask - but what would your recommendation\n> be regarding developing against the C API (i.e. core) - how stable is it in\n> terms of API. Would you say it's usable externally?\n>\n> —\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/grpc/grpc/issues/9656>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AJpudazizJ4DS6AO4ckoMMbik5vxanroks5ra1MjgaJpZM4L8dVc>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/278723159",
    "html_url": "https://github.com/grpc/grpc/issues/9656#issuecomment-278723159",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9656",
    "id": 278723159,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODcyMzE1OQ==",
    "user": {
      "login": "mnunberg",
      "id": 436049,
      "node_id": "MDQ6VXNlcjQzNjA0OQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/436049?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mnunberg",
      "html_url": "https://github.com/mnunberg",
      "followers_url": "https://api.github.com/users/mnunberg/followers",
      "following_url": "https://api.github.com/users/mnunberg/following{/other_user}",
      "gists_url": "https://api.github.com/users/mnunberg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mnunberg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mnunberg/subscriptions",
      "organizations_url": "https://api.github.com/users/mnunberg/orgs",
      "repos_url": "https://api.github.com/users/mnunberg/repos",
      "events_url": "https://api.github.com/users/mnunberg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mnunberg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-09T18:05:39Z",
    "updated_at": "2017-02-09T18:05:39Z",
    "author_association": "NONE",
    "body": "We're evaluating different protocols to replace HTTP/1.1 for some of our query services. I myself maintain a C core (well, C++ by now - but not C++11) library which due to its nature must be able to integrate into various I/O systems, so the encoding/decoding/processing steps must all be discreet, and the library must ultimately have control over what's sent and when it's sent.\r\n\r\nFrom a cursory glance, the higher level C++ API won't let me do that, but it would be possible using the core C API."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/278724431",
    "html_url": "https://github.com/grpc/grpc/issues/9656#issuecomment-278724431",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9656",
    "id": 278724431,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODcyNDQzMQ==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-09T18:10:00Z",
    "updated_at": "2017-02-09T18:10:00Z",
    "author_association": "MEMBER",
    "body": "The generic C++ API would let you do this (include/grpc++/generic/...) -\nbut we do use C++11, which may be a problem for you.\n\nYou might also consider https://github.com/Juniper/grpc-c.\n\nOn Thu, Feb 9, 2017 at 10:05 AM M. Nunberg <notifications@github.com> wrote:\n\n> We're evaluating different protocols to replace HTTP/1.1 for some of our\n> query services. I myself maintain a C core (well, C++ by now - but not\n> C++11) library which due to its nature must be able to integrate into\n> various I/O systems, so the encoding/decoding/processing steps must all be\n> discreet, and the library must ultimately have control over what's sent and\n> when it's sent.\n>\n> From a cursory glance, the higher level C++ API won't let me do that, but\n> it would be possible using the core C API.\n>\n> —\n> You are receiving this because you commented.\n>\n>\n> Reply to this email directly, view it on GitHub\n> <https://github.com/grpc/grpc/issues/9656#issuecomment-278723159>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AJpudYd36KcJmJ9W7VWG7hmJ7UwNlM7Gks5ra1WBgaJpZM4L8dVc>\n> .\n>\n"
  }
]
