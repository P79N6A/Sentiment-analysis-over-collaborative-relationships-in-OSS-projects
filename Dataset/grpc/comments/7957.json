[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/244175237",
    "html_url": "https://github.com/grpc/grpc/issues/7957#issuecomment-244175237",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7957",
    "id": 244175237,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDE3NTIzNw==",
    "user": {
      "login": "ejona86",
      "id": 2811396,
      "node_id": "MDQ6VXNlcjI4MTEzOTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2811396?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ejona86",
      "html_url": "https://github.com/ejona86",
      "followers_url": "https://api.github.com/users/ejona86/followers",
      "following_url": "https://api.github.com/users/ejona86/following{/other_user}",
      "gists_url": "https://api.github.com/users/ejona86/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ejona86/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ejona86/subscriptions",
      "organizations_url": "https://api.github.com/users/ejona86/orgs",
      "repos_url": "https://api.github.com/users/ejona86/repos",
      "events_url": "https://api.github.com/users/ejona86/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ejona86/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-01T18:50:05Z",
    "updated_at": "2016-09-01T18:50:05Z",
    "author_association": "MEMBER",
    "body": "CC @louiscryan \n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/257725582",
    "html_url": "https://github.com/grpc/grpc/issues/7957#issuecomment-257725582",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7957",
    "id": 257725582,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzcyNTU4Mg==",
    "user": {
      "login": "ejona86",
      "id": 2811396,
      "node_id": "MDQ6VXNlcjI4MTEzOTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2811396?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ejona86",
      "html_url": "https://github.com/ejona86",
      "followers_url": "https://api.github.com/users/ejona86/followers",
      "following_url": "https://api.github.com/users/ejona86/following{/other_user}",
      "gists_url": "https://api.github.com/users/ejona86/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ejona86/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ejona86/subscriptions",
      "organizations_url": "https://api.github.com/users/ejona86/orgs",
      "repos_url": "https://api.github.com/users/ejona86/repos",
      "events_url": "https://api.github.com/users/ejona86/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ejona86/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-01T23:05:47Z",
    "updated_at": "2016-11-01T23:05:47Z",
    "author_association": "MEMBER",
    "body": "I'd love to hear from others if my suggestion would address their L4 woes. It is useful to know whether (1) and/or (2) is what you want.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/258030054",
    "html_url": "https://github.com/grpc/grpc/issues/7957#issuecomment-258030054",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7957",
    "id": 258030054,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODAzMDA1NA==",
    "user": {
      "login": "lukaszx0",
      "id": 11562,
      "node_id": "MDQ6VXNlcjExNTYy",
      "avatar_url": "https://avatars1.githubusercontent.com/u/11562?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lukaszx0",
      "html_url": "https://github.com/lukaszx0",
      "followers_url": "https://api.github.com/users/lukaszx0/followers",
      "following_url": "https://api.github.com/users/lukaszx0/following{/other_user}",
      "gists_url": "https://api.github.com/users/lukaszx0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lukaszx0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lukaszx0/subscriptions",
      "organizations_url": "https://api.github.com/users/lukaszx0/orgs",
      "repos_url": "https://api.github.com/users/lukaszx0/repos",
      "events_url": "https://api.github.com/users/lukaszx0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lukaszx0/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-02T23:26:20Z",
    "updated_at": "2016-11-02T23:26:20Z",
    "author_association": "NONE",
    "body": "@ejona86 in general, we do both (1) and (2) in our proprietary RPC system and we'd like to have it the same way in our gRPC integration\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/285411527",
    "html_url": "https://github.com/grpc/grpc/issues/7957#issuecomment-285411527",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7957",
    "id": 285411527,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTQxMTUyNw==",
    "user": {
      "login": "blakeday",
      "id": 368722,
      "node_id": "MDQ6VXNlcjM2ODcyMg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/368722?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blakeday",
      "html_url": "https://github.com/blakeday",
      "followers_url": "https://api.github.com/users/blakeday/followers",
      "following_url": "https://api.github.com/users/blakeday/following{/other_user}",
      "gists_url": "https://api.github.com/users/blakeday/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blakeday/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blakeday/subscriptions",
      "organizations_url": "https://api.github.com/users/blakeday/orgs",
      "repos_url": "https://api.github.com/users/blakeday/repos",
      "events_url": "https://api.github.com/users/blakeday/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blakeday/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-09T16:57:30Z",
    "updated_at": "2017-03-09T16:57:30Z",
    "author_association": "NONE",
    "body": "Agreed with lukaszx0. We would need both (1) and (2) to alleviate the issue entirely."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/285539985",
    "html_url": "https://github.com/grpc/grpc/issues/7957#issuecomment-285539985",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7957",
    "id": 285539985,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTUzOTk4NQ==",
    "user": {
      "login": "barroca",
      "id": 355251,
      "node_id": "MDQ6VXNlcjM1NTI1MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/355251?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/barroca",
      "html_url": "https://github.com/barroca",
      "followers_url": "https://api.github.com/users/barroca/followers",
      "following_url": "https://api.github.com/users/barroca/following{/other_user}",
      "gists_url": "https://api.github.com/users/barroca/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/barroca/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/barroca/subscriptions",
      "organizations_url": "https://api.github.com/users/barroca/orgs",
      "repos_url": "https://api.github.com/users/barroca/repos",
      "events_url": "https://api.github.com/users/barroca/events{/privacy}",
      "received_events_url": "https://api.github.com/users/barroca/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-10T00:59:20Z",
    "updated_at": "2017-03-10T00:59:20Z",
    "author_association": "NONE",
    "body": "it looks like a similar issue that i'd like to share, maybe we can help each other figuring out what is the issue. I have a docker swarm cluster with 4 servers (2 of each service), one is a http<->grpc proxy in node.js and the other, in python, receives the grpc request.  I facing a similar issue that seems to be something like this, when the servers is idle for a certain time the grcp crashes with 14 on some requests."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/287446750",
    "html_url": "https://github.com/grpc/grpc/issues/7957#issuecomment-287446750",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7957",
    "id": 287446750,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzQ0Njc1MA==",
    "user": {
      "login": "legendpeng",
      "id": 17791864,
      "node_id": "MDQ6VXNlcjE3NzkxODY0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/17791864?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/legendpeng",
      "html_url": "https://github.com/legendpeng",
      "followers_url": "https://api.github.com/users/legendpeng/followers",
      "following_url": "https://api.github.com/users/legendpeng/following{/other_user}",
      "gists_url": "https://api.github.com/users/legendpeng/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/legendpeng/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/legendpeng/subscriptions",
      "organizations_url": "https://api.github.com/users/legendpeng/orgs",
      "repos_url": "https://api.github.com/users/legendpeng/repos",
      "events_url": "https://api.github.com/users/legendpeng/events{/privacy}",
      "received_events_url": "https://api.github.com/users/legendpeng/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-17T19:14:34Z",
    "updated_at": "2017-03-17T19:14:34Z",
    "author_association": "NONE",
    "body": "hi, \r\n  We had this issue and using a managed pool of channels at client side then iterator on each request. While reading latest release notes and according to https://docs.google.com/document/d/1exE0_QNwbHJesD-Opl2D6qX1wujADkUm5OpFykks3C8/edit#\r\n\r\nspecially this:\r\nL4 load-balancing: now LoadBalancer is free to create multiple Subchannels for the same EAG.\r\n\r\nI think #2 has been fixed/improved? however i still don't know what exactly need to be done. any example code?\r\n\r\nThanks!"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/289251927",
    "html_url": "https://github.com/grpc/grpc/issues/7957#issuecomment-289251927",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7957",
    "id": 289251927,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTI1MTkyNw==",
    "user": {
      "login": "lukaszx0",
      "id": 11562,
      "node_id": "MDQ6VXNlcjExNTYy",
      "avatar_url": "https://avatars1.githubusercontent.com/u/11562?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lukaszx0",
      "html_url": "https://github.com/lukaszx0",
      "followers_url": "https://api.github.com/users/lukaszx0/followers",
      "following_url": "https://api.github.com/users/lukaszx0/following{/other_user}",
      "gists_url": "https://api.github.com/users/lukaszx0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lukaszx0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lukaszx0/subscriptions",
      "organizations_url": "https://api.github.com/users/lukaszx0/orgs",
      "repos_url": "https://api.github.com/users/lukaszx0/repos",
      "events_url": "https://api.github.com/users/lukaszx0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lukaszx0/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-26T01:41:21Z",
    "updated_at": "2017-03-26T01:43:47Z",
    "author_association": "NONE",
    "body": "Yeah so with new LBv2 API merged in and promoted as main one you're now able to basically achieve both (1) and (2). In our gRPC in-house integration we have custom `LoadBalancer` implementation which does (2) and could as well do (1) - we didn't implemented (1) for unrelated reasons but it'd be technically possible to do that.\r\n\r\nSo it is possible now to do pretty much everything but it requires a custom `LoadBalancer` implementation - the `RoundRobin` that we ship in core is not able to do it.\r\n\r\nI think we could solve (2) by adding ability to specify some params in `RoundRobin` like `numConnections` which users could use when setting a `loadBalancerFactory` (currently `PickFirst` isn't the default one, so you need to do that anyways if you want `RoundRobin`). This would be relatively easy to implement. It's just a question if we want to grow `RoundRobin` implementation, and since it looks like this will be very common need then maybe it's OK.\r\n\r\nFor (1) we'd need a new API on the `ManagedChannel`. The idea I have in my head is to have something like `loadBalancerLifetime(Integer, TimeUnit)` or maybe extend, or provide an overload for `loadBalancerFactory` which would let specify the `LoadBalancer.Factory` lifetime. When the lifetime would be reached, we'd reboot `LoadBalancer` by shutting it down and recreating using factory. This change is a bit more complicated and would require more consideration.\r\n\r\n@ejona86 and @zhangkun83 could you chime in? what do you think about my proposed solutions?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/289499665",
    "html_url": "https://github.com/grpc/grpc/issues/7957#issuecomment-289499665",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7957",
    "id": 289499665,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTQ5OTY2NQ==",
    "user": {
      "login": "zhangkun83",
      "id": 9053690,
      "node_id": "MDQ6VXNlcjkwNTM2OTA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9053690?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zhangkun83",
      "html_url": "https://github.com/zhangkun83",
      "followers_url": "https://api.github.com/users/zhangkun83/followers",
      "following_url": "https://api.github.com/users/zhangkun83/following{/other_user}",
      "gists_url": "https://api.github.com/users/zhangkun83/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zhangkun83/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zhangkun83/subscriptions",
      "organizations_url": "https://api.github.com/users/zhangkun83/orgs",
      "repos_url": "https://api.github.com/users/zhangkun83/repos",
      "events_url": "https://api.github.com/users/zhangkun83/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zhangkun83/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-27T16:01:52Z",
    "updated_at": "2017-03-27T16:01:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "(1) can be achieved without changing `ManagedChannel` interface. The `LoadBalancer` could periodically close and re-create `Subchannel`s.\r\nFor (2), rather than extending the existing `RoundRobin`,  it might be better to create a L4-specific `LoadBalancer` and does both (1) and (2), and put the common logic between `L4` and `RoundRobin` in a base class."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/289515839",
    "html_url": "https://github.com/grpc/grpc/issues/7957#issuecomment-289515839",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7957",
    "id": 289515839,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTUxNTgzOQ==",
    "user": {
      "login": "ejona86",
      "id": 2811396,
      "node_id": "MDQ6VXNlcjI4MTEzOTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2811396?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ejona86",
      "html_url": "https://github.com/ejona86",
      "followers_url": "https://api.github.com/users/ejona86/followers",
      "following_url": "https://api.github.com/users/ejona86/following{/other_user}",
      "gists_url": "https://api.github.com/users/ejona86/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ejona86/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ejona86/subscriptions",
      "organizations_url": "https://api.github.com/users/ejona86/orgs",
      "repos_url": "https://api.github.com/users/ejona86/repos",
      "events_url": "https://api.github.com/users/ejona86/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ejona86/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-27T16:58:00Z",
    "updated_at": "2017-03-27T16:58:00Z",
    "author_association": "MEMBER",
    "body": "It is possible to implement both (1) and (2) in Java, but that would still be short-term. We're working on features that you just need to configure to be on.\r\n\r\n(1) is being solved with a \"max age\" on the server-side. Work is already underway for this in Java. The other languages should be pretty close as well (I don't know if they are further along or not).\r\n\r\nWe're still figuring out the design for (2). With the new Java LBv2 API we can do this at several layers: 1) at the Channel layer by wrapping the Channel, 2) in the LB, 3) in the name resolver, and 4) in the InternalSubchannel (this is a Java concept; there is something similar in other languages). We're figuring out where. Once we have a design, I imagine the implementation will be fairly easy.\r\n\r\nIf you need a fix for (2) _today_ in Java, I'd suggest the Channel layer, with something like:\r\n```java\r\npublic final class MultiChannel extends Channel {\r\n  private final ImmutableList<Channel> channels;\r\n  private final AtomicInteger pos = new AtomicInteger();\r\n\r\n  public MultiChannel(List<Channel> channels) {\r\n    this.channels = ImmutableList.copyOf(channels);\r\n  }\r\n\r\n  public <ReqT, RespT> ClientCall<ReqT, RespT> newCall(\r\n      MethodDescriptor<ReqT, RespT> m, CallOptions o) {\r\n    int idx = UnsignedInts.remainder(pos.getAndIncrement(), channels.size());\r\n    return channels.get(idx).newCall(m, o);\r\n  }\r\n\r\n  public String authority() {\r\n    return channels.get(0).authority();\r\n  }\r\n}\r\n```\r\n\r\nNote that you could pass in a ManagedChannelBuilder and have the code create channels as necessary. (1) could be solved in a similar way. Only people needing this in many different applications should touch the LB solution, since it is more complex to implement but it probably easier to enable."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/296822166",
    "html_url": "https://github.com/grpc/grpc/issues/7957#issuecomment-296822166",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7957",
    "id": 296822166,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NjgyMjE2Ng==",
    "user": {
      "login": "ejona86",
      "id": 2811396,
      "node_id": "MDQ6VXNlcjI4MTEzOTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2811396?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ejona86",
      "html_url": "https://github.com/ejona86",
      "followers_url": "https://api.github.com/users/ejona86/followers",
      "following_url": "https://api.github.com/users/ejona86/following{/other_user}",
      "gists_url": "https://api.github.com/users/ejona86/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ejona86/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ejona86/subscriptions",
      "organizations_url": "https://api.github.com/users/ejona86/orgs",
      "repos_url": "https://api.github.com/users/ejona86/repos",
      "events_url": "https://api.github.com/users/ejona86/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ejona86/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-24T21:05:32Z",
    "updated_at": "2017-04-24T21:05:32Z",
    "author_association": "MEMBER",
    "body": "I have opened [gRFC A9](https://github.com/grpc/proposal/pull/23) for \"max age\" which addresses (1)."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/337009743",
    "html_url": "https://github.com/grpc/grpc/issues/7957#issuecomment-337009743",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7957",
    "id": 337009743,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzAwOTc0Mw==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-16T19:34:09Z",
    "updated_at": "2017-10-16T19:34:09Z",
    "author_association": "MEMBER",
    "body": "Note that item (2) is being tracked in #11704."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/407867530",
    "html_url": "https://github.com/grpc/grpc/issues/7957#issuecomment-407867530",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7957",
    "id": 407867530,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzg2NzUzMA==",
    "user": {
      "login": "andrewsykim",
      "id": 12699319,
      "node_id": "MDQ6VXNlcjEyNjk5MzE5",
      "avatar_url": "https://avatars0.githubusercontent.com/u/12699319?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewsykim",
      "html_url": "https://github.com/andrewsykim",
      "followers_url": "https://api.github.com/users/andrewsykim/followers",
      "following_url": "https://api.github.com/users/andrewsykim/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewsykim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewsykim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewsykim/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewsykim/orgs",
      "repos_url": "https://api.github.com/users/andrewsykim/repos",
      "events_url": "https://api.github.com/users/andrewsykim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewsykim/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-25T19:25:43Z",
    "updated_at": "2018-07-25T19:33:51Z",
    "author_association": "NONE",
    "body": "@markdroth it doesn't seem like https://github.com/grpc/grpc/issues/11704 (closed) solves the case where we want multiple connections over the same host (L4 balancing with Kubernetes Service IPs). Is that still a WIP? "
  }
]
