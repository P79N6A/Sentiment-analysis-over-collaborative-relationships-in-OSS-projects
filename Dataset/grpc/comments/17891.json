[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/459471631",
    "html_url": "https://github.com/grpc/grpc/issues/17891#issuecomment-459471631",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17891",
    "id": 459471631,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTQ3MTYzMQ==",
    "user": {
      "login": "nicolasnoble",
      "id": 7281574,
      "node_id": "MDQ6VXNlcjcyODE1NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7281574?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nicolasnoble",
      "html_url": "https://github.com/nicolasnoble",
      "followers_url": "https://api.github.com/users/nicolasnoble/followers",
      "following_url": "https://api.github.com/users/nicolasnoble/following{/other_user}",
      "gists_url": "https://api.github.com/users/nicolasnoble/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nicolasnoble/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nicolasnoble/subscriptions",
      "organizations_url": "https://api.github.com/users/nicolasnoble/orgs",
      "repos_url": "https://api.github.com/users/nicolasnoble/repos",
      "events_url": "https://api.github.com/users/nicolasnoble/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nicolasnoble/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-31T19:21:18Z",
    "updated_at": "2019-02-01T18:46:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "`rand(3)` isn't threadsafe, in the sense it won't be reproducible with a given seed. But otherwise, it shouldn't corrupt things. If we don't care about the reproducibility of things, then it should be fine.\r\n\r\nWorst-case scenario however, if this is because TSAN complains, I can re-license my [personal rand code](https://github.com/grumpycoders/uC-sdk/blob/master/libc/src/rand.c). It technically works on `uint32_t`.\r\n\r\nThe RNG function in backoff.cc looks a bit suspect to me, but it does actually work on `uint32_t` too. The magic number `1103515245` is not a prime; it's equal to `3^5*5*7*129749`, so I am calling out the uniformity of the random distribution. The `double` conversion is done afterward, out of the generated uint32_t.\r\n\r\n\r\nLong story short about RNG:\r\n\r\n-) If you NEED reproducible RNG from a given seed, don't use `rand()`.\r\n-) If you NEED secure, unpredictable RNG, don't use `rand()`.\r\n-) If you NEED an RNG that has a proper, uniform distribution, don't use `rand()`.\r\n\r\nAny other usage is fine."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/459547538",
    "html_url": "https://github.com/grpc/grpc/issues/17891#issuecomment-459547538",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17891",
    "id": 459547538,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTU0NzUzOA==",
    "user": {
      "login": "nicolasnoble",
      "id": 7281574,
      "node_id": "MDQ6VXNlcjcyODE1NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7281574?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nicolasnoble",
      "html_url": "https://github.com/nicolasnoble",
      "followers_url": "https://api.github.com/users/nicolasnoble/followers",
      "following_url": "https://api.github.com/users/nicolasnoble/following{/other_user}",
      "gists_url": "https://api.github.com/users/nicolasnoble/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nicolasnoble/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nicolasnoble/subscriptions",
      "organizations_url": "https://api.github.com/users/nicolasnoble/orgs",
      "repos_url": "https://api.github.com/users/nicolasnoble/repos",
      "events_url": "https://api.github.com/users/nicolasnoble/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nicolasnoble/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-31T23:31:18Z",
    "updated_at": "2019-01-31T23:31:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah, I just tried running the prng from backoff.cc, and it is deemed suspicious by [dieharder](https://webhome.phy.duke.edu/~rgb/General/dieharder.php) :-)\r\n\r\n```\r\n#=============================================================================#\r\n#            dieharder version 3.31.1 Copyright 2003 Robert G. Brown          #\r\n#=============================================================================#\r\n   rng_name    |rands/second|   Seed   |\r\nstdin_input_raw|  4.90e+07  |  63605812|\r\n#=============================================================================#\r\n        test_name   |ntup| tsamples |psamples|  p-value |Assessment\r\n#=============================================================================#\r\n   diehard_birthdays|   0|       100|     100|0.37640982|  PASSED\r\n      diehard_operm5|   0|   1000000|     100|0.65765486|  PASSED\r\n  diehard_rank_32x32|   0|     40000|     100|0.00000000|  FAILED\r\n    diehard_rank_6x8|   0|    100000|     100|0.00000000|  FAILED\r\n   diehard_bitstream|   0|   2097152|     100|0.00000000|  FAILED\r\n        diehard_opso|   0|   2097152|     100|0.00000000|  FAILED\r\n        diehard_oqso|   0|   2097152|     100|0.00000000|  FAILED\r\n         diehard_dna|   0|   2097152|     100|0.00000000|  FAILED\r\ndiehard_count_1s_str|   0|    256000|     100|0.00000000|  FAILED\r\ndiehard_count_1s_byt|   0|    256000|     100|0.00000000|  FAILED\r\n diehard_parking_lot|   0|     12000|     100|0.00000000|  FAILED\r\n    diehard_2dsphere|   2|      8000|     100|0.00000000|  FAILED\r\n    diehard_3dsphere|   3|      4000|     100|0.00000000|  FAILED\r\n     diehard_squeeze|   0|    100000|     100|0.00000000|  FAILED\r\n        diehard_sums|   0|       100|     100|0.00000000|  FAILED\r\n        diehard_runs|   0|    100000|     100|0.99107448|  PASSED\r\n        diehard_runs|   0|    100000|     100|0.90072701|  PASSED\r\n       diehard_craps|   0|    200000|     100|0.00000000|  FAILED\r\n       diehard_craps|   0|    200000|     100|0.00000000|  FAILED\r\n marsaglia_tsang_gcd|   0|  10000000|     100|0.00000000|  FAILED\r\n marsaglia_tsang_gcd|   0|  10000000|     100|0.00000000|  FAILED\r\n         sts_monobit|   1|    100000|     100|0.00000000|  FAILED\r\n            sts_runs|   2|    100000|     100|0.00000000|  FAILED\r\n          sts_serial|   1|    100000|     100|0.00000000|  FAILED\r\n          sts_serial|   2|    100000|     100|0.00000000|  FAILED\r\n          sts_serial|   3|    100000|     100|0.00000000|  FAILED\r\n          sts_serial|   3|    100000|     100|0.00000026|  FAILED\r\n          sts_serial|   4|    100000|     100|0.00000000|  FAILED\r\n          sts_serial|   4|    100000|     100|0.00000000|  FAILED\r\n          sts_serial|   5|    100000|     100|0.00000000|  FAILED\r\n          sts_serial|   5|    100000|     100|0.00000000|  FAILED\r\n          sts_serial|   6|    100000|     100|0.00000000|  FAILED\r\n          sts_serial|   6|    100000|     100|0.00000000|  FAILED\r\n          sts_serial|   7|    100000|     100|0.00000000|  FAILED\r\n          sts_serial|   7|    100000|     100|0.00000000|  FAILED\r\n          sts_serial|   8|    100000|     100|0.00000000|  FAILED\r\n          sts_serial|   8|    100000|     100|0.00000000|  FAILED\r\n          sts_serial|   9|    100000|     100|0.00000000|  FAILED\r\n          sts_serial|   9|    100000|     100|0.00000000|  FAILED\r\n          sts_serial|  10|    100000|     100|0.00000000|  FAILED\r\n          sts_serial|  10|    100000|     100|0.00000000|  FAILED\r\n          sts_serial|  11|    100000|     100|0.00000000|  FAILED\r\n          sts_serial|  11|    100000|     100|0.00000000|  FAILED\r\n          sts_serial|  12|    100000|     100|0.00000000|  FAILED\r\n          sts_serial|  12|    100000|     100|0.00000000|  FAILED\r\n          sts_serial|  13|    100000|     100|0.00000000|  FAILED\r\n          sts_serial|  13|    100000|     100|0.00000000|  FAILED\r\n          sts_serial|  14|    100000|     100|0.00000000|  FAILED\r\n          sts_serial|  14|    100000|     100|0.00000000|  FAILED\r\n          sts_serial|  15|    100000|     100|0.00000000|  FAILED\r\n          sts_serial|  15|    100000|     100|0.00000000|  FAILED\r\n          sts_serial|  16|    100000|     100|0.00000000|  FAILED\r\n          sts_serial|  16|    100000|     100|0.00000000|  FAILED\r\n         rgb_bitdist|   1|    100000|     100|0.00000000|  FAILED\r\n         rgb_bitdist|   2|    100000|     100|0.00000000|  FAILED\r\n         rgb_bitdist|   3|    100000|     100|0.00000000|  FAILED\r\n         rgb_bitdist|   4|    100000|     100|0.00000000|  FAILED\r\n         rgb_bitdist|   5|    100000|     100|0.00000000|  FAILED\r\n         rgb_bitdist|   6|    100000|     100|0.00000000|  FAILED\r\n         rgb_bitdist|   7|    100000|     100|0.00000000|  FAILED\r\n         rgb_bitdist|   8|    100000|     100|0.00000000|  FAILED\r\n         rgb_bitdist|   9|    100000|     100|0.00000000|  FAILED\r\n         rgb_bitdist|  10|    100000|     100|0.00000000|  FAILED\r\n         rgb_bitdist|  11|    100000|     100|0.00000000|  FAILED\r\n         rgb_bitdist|  12|    100000|     100|0.00000000|  FAILED\r\nrgb_minimum_distance|   2|     10000|    1000|0.00000000|  FAILED\r\nrgb_minimum_distance|   3|     10000|    1000|0.00000000|  FAILED\r\nrgb_minimum_distance|   4|     10000|    1000|0.00000000|  FAILED\r\nrgb_minimum_distance|   5|     10000|    1000|0.00000000|  FAILED\r\n    rgb_permutations|   2|    100000|     100|0.22610586|  PASSED\r\n    rgb_permutations|   3|    100000|     100|0.90393543|  PASSED\r\n    rgb_permutations|   4|    100000|     100|0.38282233|  PASSED\r\n    rgb_permutations|   5|    100000|     100|0.09747166|  PASSED\r\n      rgb_lagged_sum|   0|   1000000|     100|0.00000000|  FAILED\r\n      rgb_lagged_sum|   1|   1000000|     100|0.00000000|  FAILED\r\n      rgb_lagged_sum|   2|   1000000|     100|0.00000000|  FAILED\r\n      rgb_lagged_sum|   3|   1000000|     100|0.00000000|  FAILED\r\n      rgb_lagged_sum|   4|   1000000|     100|0.00000000|  FAILED\r\n      rgb_lagged_sum|   5|   1000000|     100|0.00000000|  FAILED\r\n      rgb_lagged_sum|   6|   1000000|     100|0.00000000|  FAILED\r\n      rgb_lagged_sum|   7|   1000000|     100|0.00000000|  FAILED\r\n      rgb_lagged_sum|   8|   1000000|     100|0.00000000|  FAILED\r\n      rgb_lagged_sum|   9|   1000000|     100|0.00000000|  FAILED\r\n      rgb_lagged_sum|  10|   1000000|     100|0.00000000|  FAILED\r\n      rgb_lagged_sum|  11|   1000000|     100|0.00000000|  FAILED\r\n      rgb_lagged_sum|  12|   1000000|     100|0.00000000|  FAILED\r\n      rgb_lagged_sum|  13|   1000000|     100|0.00000000|  FAILED\r\n      rgb_lagged_sum|  14|   1000000|     100|0.00000000|  FAILED\r\n      rgb_lagged_sum|  15|   1000000|     100|0.00000000|  FAILED\r\n      rgb_lagged_sum|  16|   1000000|     100|0.00000000|  FAILED\r\n      rgb_lagged_sum|  17|   1000000|     100|0.00000000|  FAILED\r\n      rgb_lagged_sum|  18|   1000000|     100|0.00000000|  FAILED\r\n      rgb_lagged_sum|  19|   1000000|     100|0.00000000|  FAILED\r\n      rgb_lagged_sum|  20|   1000000|     100|0.00000000|  FAILED\r\n      rgb_lagged_sum|  21|   1000000|     100|0.00000000|  FAILED\r\n      rgb_lagged_sum|  22|   1000000|     100|0.00000000|  FAILED\r\n      rgb_lagged_sum|  23|   1000000|     100|0.00000000|  FAILED\r\n      rgb_lagged_sum|  24|   1000000|     100|0.00000000|  FAILED\r\n      rgb_lagged_sum|  25|   1000000|     100|0.00000000|  FAILED\r\n      rgb_lagged_sum|  26|   1000000|     100|0.00000000|  FAILED\r\n      rgb_lagged_sum|  27|   1000000|     100|0.00000000|  FAILED\r\n      rgb_lagged_sum|  28|   1000000|     100|0.00000000|  FAILED\r\n      rgb_lagged_sum|  29|   1000000|     100|0.00000000|  FAILED\r\n      rgb_lagged_sum|  30|   1000000|     100|0.00000000|  FAILED\r\n      rgb_lagged_sum|  31|   1000000|     100|0.00000000|  FAILED\r\n      rgb_lagged_sum|  32|   1000000|     100|0.00000000|  FAILED\r\n     rgb_kstest_test|   0|     10000|    1000|0.00000000|  FAILED\r\n     dab_bytedistrib|   0|  51200000|       1|0.00000000|  FAILED\r\n             dab_dct| 256|     50000|       1|0.00000000|  FAILED\r\nPreparing to run test 207.  ntuple = 0\r\n        dab_filltree|  32|  15000000|       1|0.59971282|  PASSED\r\n        dab_filltree|  32|  15000000|       1|0.69214053|  PASSED\r\nPreparing to run test 208.  ntuple = 0\r\n       dab_filltree2|   0|   5000000|       1|0.00000000|  FAILED\r\n       dab_filltree2|   1|   5000000|       1|0.00000000|  FAILED\r\nPreparing to run test 209.  ntuple = 0\r\n        dab_monobit2|  12|  65000000|       1|1.00000000|  FAILED\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/459819755",
    "html_url": "https://github.com/grpc/grpc/issues/17891#issuecomment-459819755",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17891",
    "id": 459819755,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTgxOTc1NQ==",
    "user": {
      "login": "nicolasnoble",
      "id": 7281574,
      "node_id": "MDQ6VXNlcjcyODE1NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7281574?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nicolasnoble",
      "html_url": "https://github.com/nicolasnoble",
      "followers_url": "https://api.github.com/users/nicolasnoble/followers",
      "following_url": "https://api.github.com/users/nicolasnoble/following{/other_user}",
      "gists_url": "https://api.github.com/users/nicolasnoble/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nicolasnoble/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nicolasnoble/subscriptions",
      "organizations_url": "https://api.github.com/users/nicolasnoble/orgs",
      "repos_url": "https://api.github.com/users/nicolasnoble/repos",
      "events_url": "https://api.github.com/users/nicolasnoble/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nicolasnoble/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-01T18:25:23Z",
    "updated_at": "2019-02-01T18:25:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "And it turns out the code from the backoff code is a reimplementation of the ansi-c rand() code :-D\r\n\r\nhttps://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use"
  }
]
