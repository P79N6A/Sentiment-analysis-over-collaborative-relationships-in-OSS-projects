[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/171049355",
    "html_url": "https://github.com/grpc/grpc/issues/4417#issuecomment-171049355",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/4417",
    "id": 171049355,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTA0OTM1NQ==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-12T20:46:30Z",
    "updated_at": "2016-01-12T20:46:30Z",
    "author_association": "MEMBER",
    "body": "Do you see a `code` method on your `context` object, to which a value from `grpc.beta.interfaces.StatusCode` may be passed?\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/196080397",
    "html_url": "https://github.com/grpc/grpc/issues/4417#issuecomment-196080397",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/4417",
    "id": 196080397,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjA4MDM5Nw==",
    "user": {
      "login": "inconshreveable",
      "id": 836692,
      "node_id": "MDQ6VXNlcjgzNjY5Mg==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/836692?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/inconshreveable",
      "html_url": "https://github.com/inconshreveable",
      "followers_url": "https://api.github.com/users/inconshreveable/followers",
      "following_url": "https://api.github.com/users/inconshreveable/following{/other_user}",
      "gists_url": "https://api.github.com/users/inconshreveable/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/inconshreveable/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/inconshreveable/subscriptions",
      "organizations_url": "https://api.github.com/users/inconshreveable/orgs",
      "repos_url": "https://api.github.com/users/inconshreveable/repos",
      "events_url": "https://api.github.com/users/inconshreveable/events{/privacy}",
      "received_events_url": "https://api.github.com/users/inconshreveable/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-13T23:22:22Z",
    "updated_at": "2016-03-13T23:22:22Z",
    "author_association": "NONE",
    "body": "I can confirm this works\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/242972670",
    "html_url": "https://github.com/grpc/grpc/issues/4417#issuecomment-242972670",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/4417",
    "id": 242972670,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Mjk3MjY3MA==",
    "user": {
      "login": "anentropic",
      "id": 147840,
      "node_id": "MDQ6VXNlcjE0Nzg0MA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/147840?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anentropic",
      "html_url": "https://github.com/anentropic",
      "followers_url": "https://api.github.com/users/anentropic/followers",
      "following_url": "https://api.github.com/users/anentropic/following{/other_user}",
      "gists_url": "https://api.github.com/users/anentropic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anentropic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anentropic/subscriptions",
      "organizations_url": "https://api.github.com/users/anentropic/orgs",
      "repos_url": "https://api.github.com/users/anentropic/repos",
      "events_url": "https://api.github.com/users/anentropic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anentropic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-28T12:40:33Z",
    "updated_at": "2016-08-28T12:40:33Z",
    "author_association": "NONE",
    "body": "are there some more docs anywhere? there seems to be a big gap between the trivial tutorial and the auto-generated api docs at http://www.grpc.io/grpc/python/grpc.html\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/242982992",
    "html_url": "https://github.com/grpc/grpc/issues/4417#issuecomment-242982992",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/4417",
    "id": 242982992,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Mjk4Mjk5Mg==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-28T16:10:18Z",
    "updated_at": "2016-08-28T16:10:18Z",
    "author_association": "MEMBER",
    "body": "@anentropic: if by \"the trivial tutorial\" you mean [the \"hello world\" quick start](http://www.grpc.io/docs/quickstart/python.html), have you seen [the longer \"route guide\" tutorial](http://www.grpc.io/docs/tutorials/basic/python.html)?\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/242983589",
    "html_url": "https://github.com/grpc/grpc/issues/4417#issuecomment-242983589",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/4417",
    "id": 242983589,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Mjk4MzU4OQ==",
    "user": {
      "login": "anentropic",
      "id": 147840,
      "node_id": "MDQ6VXNlcjE0Nzg0MA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/147840?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anentropic",
      "html_url": "https://github.com/anentropic",
      "followers_url": "https://api.github.com/users/anentropic/followers",
      "following_url": "https://api.github.com/users/anentropic/following{/other_user}",
      "gists_url": "https://api.github.com/users/anentropic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anentropic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anentropic/subscriptions",
      "organizations_url": "https://api.github.com/users/anentropic/orgs",
      "repos_url": "https://api.github.com/users/anentropic/repos",
      "events_url": "https://api.github.com/users/anentropic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anentropic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-28T16:21:19Z",
    "updated_at": "2016-08-28T16:21:19Z",
    "author_association": "NONE",
    "body": "I mean the route guide... yes it helps get a client and server off the ground but it raises a bunch of questions, such as the above\n\neg I'm currently experimenting with converting our REST API over to grpc\n\nin the route guide tutorial if you search for a Feature that doesn't exist they return an empty (i.e. all-default-values) Feature.  This seems an odd choice - is this idiomatic in grpc?  Won't that make things more complicated or hopelessly ambiguous for the clients?\n\nIn REST we'd return an Http 404\n\nIt's not clear what you're supposed to do in your servicer methods if you can't return a protobuf of the requested type.  You seem to imply above that you can do `context.set_code(grpc.StatusCode.NOT_FOUND)` and return None ?\n\nIs all this spelled out somewhere that I've missed?\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/242994210",
    "html_url": "https://github.com/grpc/grpc/issues/4417#issuecomment-242994210",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/4417",
    "id": 242994210,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Mjk5NDIxMA==",
    "user": {
      "login": "anentropic",
      "id": 147840,
      "node_id": "MDQ6VXNlcjE0Nzg0MA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/147840?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anentropic",
      "html_url": "https://github.com/anentropic",
      "followers_url": "https://api.github.com/users/anentropic/followers",
      "following_url": "https://api.github.com/users/anentropic/following{/other_user}",
      "gists_url": "https://api.github.com/users/anentropic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anentropic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anentropic/subscriptions",
      "organizations_url": "https://api.github.com/users/anentropic/orgs",
      "repos_url": "https://api.github.com/users/anentropic/repos",
      "events_url": "https://api.github.com/users/anentropic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anentropic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-28T19:29:35Z",
    "updated_at": "2016-08-28T19:29:35Z",
    "author_association": "NONE",
    "body": "that doesn't work anyway, I get:\n\n```\nTypeError: unbound method SerializeToString() must be called with PublicUser instance as first argument (got NoneType instance instead)\n```\n\nin the server, and:\n\n```\n    raise _Rendezvous(state, None, None, deadline)\ngrpc._channel._Rendezvous: <_Rendezvous of RPC that terminated with (StatusCode.NOT_FOUND, Failed to serialize response!)>\n```\n\nin the client (which then exits)\n\nSo this raises more questions: am I supposed to set the status code _and_ return a dummy object?  And then... what exceptions should I be catching in the client?\n\nOr more generally, how are you supposed to communicate error messages between the server and client?  Is there a general mechanism for this, analogous to http status codes, or I need to construct a response message protobuf that wraps my return type with extra fields for 'errors', the optional 'results' etc?\n\nI'm sure I can work most of this out for myself with a few days effort, but this is the sort of elementary stuff people need to know when getting started which doesn't seem to be covered in the docs or tutorial (which is not a tutorial, it's just some example code and how to run it)\n\nI mean, people are using this in production no? there must be an already established 'right way' to do all these things\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/242998794",
    "html_url": "https://github.com/grpc/grpc/issues/4417#issuecomment-242998794",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/4417",
    "id": 242998794,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Mjk5ODc5NA==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-28T20:56:48Z",
    "updated_at": "2017-10-04T17:34:50Z",
    "author_association": "MEMBER",
    "body": "Without right now answering:\r\n- Is Route Guide's returning an empty `Feature` to indicate no-such-`Feature` idiomatic?\r\n- To what extent are gRPC status codes supposed to correspond to HTTP status codes, and to what extent do they do so anyway?\r\n\r\nI'll say:\r\n- [Even after setting a non-`OK` status code, service-side code must still return a value of the appropriate type (perhaps we should soften this to \"may\", but there's one edge-case use case that might get broken by that, so I'll have to think about it).](https://github.com/grpc/grpc/issues/12826)\r\n- [On the client you should be catching `grpc.RpcError`](http://www.grpc.io/grpc/python/grpc.html#grpc.UnaryUnaryMultiCallable.__call__). The `grpc.RpcError` instance raised to your code will also be instances of `grpc.Call` affording access to the metadata, status code, and status details of the RPC.\r\n- The intended use case of the status details string is passing a simple message about the service-side failure to the client-side application. To pass more complex or structured information reporting service-side failure, trailing metadata is the intended use case.\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/243040586",
    "html_url": "https://github.com/grpc/grpc/issues/4417#issuecomment-243040586",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/4417",
    "id": 243040586,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MzA0MDU4Ng==",
    "user": {
      "login": "anentropic",
      "id": 147840,
      "node_id": "MDQ6VXNlcjE0Nzg0MA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/147840?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anentropic",
      "html_url": "https://github.com/anentropic",
      "followers_url": "https://api.github.com/users/anentropic/followers",
      "following_url": "https://api.github.com/users/anentropic/following{/other_user}",
      "gists_url": "https://api.github.com/users/anentropic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anentropic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anentropic/subscriptions",
      "organizations_url": "https://api.github.com/users/anentropic/orgs",
      "repos_url": "https://api.github.com/users/anentropic/repos",
      "events_url": "https://api.github.com/users/anentropic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anentropic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-29T06:16:48Z",
    "updated_at": "2016-08-29T06:16:48Z",
    "author_association": "NONE",
    "body": "thanks very much for the info\n\n'trailing metadata' is something distinct from the message body?\n\nhow do I return that from my servicer methods?\n\nit needs documenting, all I found so far is this https://github.com/grpc/grpc/issues/6142 showing how to read it from the client\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/243134142",
    "html_url": "https://github.com/grpc/grpc/issues/4417#issuecomment-243134142",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/4417",
    "id": 243134142,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MzEzNDE0Mg==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-29T14:07:35Z",
    "updated_at": "2016-08-29T14:07:35Z",
    "author_association": "MEMBER",
    "body": "Yes, trailing metadata is distinct from the messages sent from the service-side application.\n\nService-side code sets it to be returned by calling the [`set_trailing_metadata`](https://github.com/grpc/grpc/blob/b2a9940465bf8faad648f06316e8b6400c10aa9e/src/python/grpcio/grpc/__init__.py#L735) method on the `ServicerContext` object passed to it. In lieu of a proper example, [here is use of the method in our test suite](https://github.com/grpc/grpc/blob/b2a9940465bf8faad648f06316e8b6400c10aa9e/src/python/grpcio_tests/tests/unit/_metadata_code_details_test.py#L89).\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/243166680",
    "html_url": "https://github.com/grpc/grpc/issues/4417#issuecomment-243166680",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/4417",
    "id": 243166680,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MzE2NjY4MA==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-29T15:55:08Z",
    "updated_at": "2016-08-29T15:55:08Z",
    "author_association": "MEMBER",
    "body": "I would like to note that in general (across languages), a non-OK status is not expected to be accompanied by a message.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/286801711",
    "html_url": "https://github.com/grpc/grpc/issues/4417#issuecomment-286801711",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/4417",
    "id": 286801711,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjgwMTcxMQ==",
    "user": {
      "login": "shaoweipng",
      "id": 12703508,
      "node_id": "MDQ6VXNlcjEyNzAzNTA4",
      "avatar_url": "https://avatars2.githubusercontent.com/u/12703508?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shaoweipng",
      "html_url": "https://github.com/shaoweipng",
      "followers_url": "https://api.github.com/users/shaoweipng/followers",
      "following_url": "https://api.github.com/users/shaoweipng/following{/other_user}",
      "gists_url": "https://api.github.com/users/shaoweipng/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shaoweipng/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shaoweipng/subscriptions",
      "organizations_url": "https://api.github.com/users/shaoweipng/orgs",
      "repos_url": "https://api.github.com/users/shaoweipng/repos",
      "events_url": "https://api.github.com/users/shaoweipng/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shaoweipng/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-15T16:38:59Z",
    "updated_at": "2017-03-15T16:38:59Z",
    "author_association": "NONE",
    "body": "is there any update on this?  Is it still true that we must return a dummy value in addition to the error values? \r\n\r\nJust like the other users, I am seeing the SerializeToString() error on my server now.\r\n\r\nIt would be great to have a documented working pattern for this."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/287145202",
    "html_url": "https://github.com/grpc/grpc/issues/4417#issuecomment-287145202",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/4417",
    "id": 287145202,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzE0NTIwMg==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-16T18:12:01Z",
    "updated_at": "2017-03-16T18:12:01Z",
    "author_association": "MEMBER",
    "body": "@shaoweipng: it is still the case that server-side implementations of response-unary methods must return a valid message object even after having set status to a non-`OK` value. Relaxing that restriction is still something about which I think from time to time but because it's not yet known to be a major problem for anyone it's not yet a high priority."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/291817418",
    "html_url": "https://github.com/grpc/grpc/issues/4417#issuecomment-291817418",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/4417",
    "id": 291817418,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTgxNzQxOA==",
    "user": {
      "login": "LewisMcReu",
      "id": 4019489,
      "node_id": "MDQ6VXNlcjQwMTk0ODk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4019489?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LewisMcReu",
      "html_url": "https://github.com/LewisMcReu",
      "followers_url": "https://api.github.com/users/LewisMcReu/followers",
      "following_url": "https://api.github.com/users/LewisMcReu/following{/other_user}",
      "gists_url": "https://api.github.com/users/LewisMcReu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LewisMcReu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LewisMcReu/subscriptions",
      "organizations_url": "https://api.github.com/users/LewisMcReu/orgs",
      "repos_url": "https://api.github.com/users/LewisMcReu/repos",
      "events_url": "https://api.github.com/users/LewisMcReu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LewisMcReu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-05T10:14:27Z",
    "updated_at": "2017-04-05T10:14:27Z",
    "author_association": "NONE",
    "body": "Am I correct in my assumption that when a not-OK status code is sent back to client, an error will be thrown?\r\nOtherwise, how would I access that status code?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/291922483",
    "html_url": "https://github.com/grpc/grpc/issues/4417#issuecomment-291922483",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/4417",
    "id": 291922483,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTkyMjQ4Mw==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-05T16:44:28Z",
    "updated_at": "2017-04-05T16:44:28Z",
    "author_association": "MEMBER",
    "body": "@LewisMcReu: you're correct in the case of a blocking call that an exception will be raised (this exception will be an instance of both `grpc.RpcError` and `grpc.Call`). In asynchronous and response-streaming cases the `grpc.Future` and iterator-of-responses objects will also be instances of `grpc.Call`. [Wherever you have a `grpc.Call`, you can get the status code.](http://www.grpc.io/grpc/python/grpc.html#grpc.Call.code)"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/334231494",
    "html_url": "https://github.com/grpc/grpc/issues/4417#issuecomment-334231494",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/4417",
    "id": 334231494,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDIzMTQ5NA==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-04T17:34:23Z",
    "updated_at": "2017-10-04T17:34:23Z",
    "author_association": "MEMBER",
    "body": "Regarding [\"Even after setting a non-OK status code, service-side code must still return a value of the appropriate type (perhaps we should soften this to 'may', but there's one edge-case use case that might get broken by that, so I'll have to think about it)\"](https://github.com/grpc/grpc/issues/4417#issuecomment-242998794): we'll explore that over in [issue 12826](https://github.com/grpc/grpc/issues/12826)."
  }
]
