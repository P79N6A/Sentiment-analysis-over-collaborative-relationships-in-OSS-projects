[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/393595437",
    "html_url": "https://github.com/grpc/grpc/issues/15588#issuecomment-393595437",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15588",
    "id": 393595437,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzU5NTQzNw==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-31T16:39:26Z",
    "updated_at": "2018-05-31T16:39:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "@deepaklukose @jboeuf @jiangtaoli2016  can you help?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/393595826",
    "html_url": "https://github.com/grpc/grpc/issues/15588#issuecomment-393595826",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15588",
    "id": 393595826,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzU5NTgyNg==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-31T16:40:53Z",
    "updated_at": "2018-05-31T16:40:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "FTR the options have been added in https://github.com/grpc/grpc/pull/5958"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/413595416",
    "html_url": "https://github.com/grpc/grpc/issues/15588#issuecomment-413595416",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15588",
    "id": 413595416,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzU5NTQxNg==",
    "user": {
      "login": "deepaklukose",
      "id": 17751169,
      "node_id": "MDQ6VXNlcjE3NzUxMTY5",
      "avatar_url": "https://avatars0.githubusercontent.com/u/17751169?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepaklukose",
      "html_url": "https://github.com/deepaklukose",
      "followers_url": "https://api.github.com/users/deepaklukose/followers",
      "following_url": "https://api.github.com/users/deepaklukose/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepaklukose/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepaklukose/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepaklukose/subscriptions",
      "organizations_url": "https://api.github.com/users/deepaklukose/orgs",
      "repos_url": "https://api.github.com/users/deepaklukose/repos",
      "events_url": "https://api.github.com/users/deepaklukose/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepaklukose/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-16T15:57:01Z",
    "updated_at": "2018-08-16T15:57:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "Most of the options are relevant only when you are dealing with self-signed certificates. These options essentially give a way to deal with self signed certificates in multiple ways.\r\n\r\nThere are multiple factors at play here:\r\n    a. Did the server request a client certificate during ssl handshake\r\n    b. Did the client present a client certificate (irrespective of whether the server asked for it)\r\n           - If the  client presented a certificate was the certificate self signed by the client or if the signature can be verified using the ssl protocol.\r\n    c. Is the signature verification done by ssl protocol or independently by the app (for self signed certificates for example by inspecting the certificate hash or other information in metadata).\r\n\r\n[Mapping from these option to ssl options](https://github.com/grpc/grpc/blob/614331a50682c74fa8c02dcea674ca2ef5746225/src/core/tsi/ssl_transport_security.cc#L1853-L1873)\r\n\r\n1.  With GRPC_SSL_DONT_REQUEST_CLIENT_CERTIFICATE: Server does not request for a client certificate. So the client can choose to present a self-signed or a signed certificate or not present a certificate at all and all of these should be okay.\r\n   With GRPC_SSL_REQUEST_CLIENT_CERTIFICATE_BUT_DONT_VERIFY: Server requests the client for a certificate but the signature enforcement is not done by grpc server framework but left to the app. The app can use metadata like the certificate hash to verify a certificate (essentially provides the server a \r\n way to verify self signed certificates, provided they have an out of band mechanism to register the certificate with the app)\r\n2.  By \"client authentication done by grpc framework\", I meant certificate signature verification is done using the ssl protocol itself by the grpc server framework (SSL_VERIFY_PEER option is being used in ssl options). The client has to provide a signed certificate which can be verified by the server (using the SSL roots file). \r\n3. \"don't request\"/ \"request\"/ \"require\" / \"verify\"\r\n         - Server has the option to either request or not-request for client cert.\r\n         - Client can choose to either present a certificate or not.\r\n         - Server can choose to verify the client certificate  or not\r\n    Each of these three options are independent of each other and contribute to multiple options presented. \r\n      \"require\" for instance is the case server request for client cert, client has to present a certificate for the ssl handshake to continue but the server will not verify the client certificate using signature but can do so if needed based on certificate metadata.\r\n     \"verify\" - SSL_VERIFY_PEER option is being used in ssl options and the client signature is verified/trusted by the server using the SSL roots file.\r\n4. All of the above pretty much expected that the private key and the public key files were all in okay and the only question was whether they were self signed or signed by a mutually trusted CA. If the public key and private keys don't match up then the connection fails.\r\n5. It is a typo. It should have been \"The client needs to either present a signed cert or not present a\r\n certificate at all for a successful connection\"\r\n6.  grpc_auth_context has various properties of the peer like GRPC_X509_CN_PROPERTY_NAME, GRPC_X509_PEM_CERT_PROPERTY_NAME, GRPC_X509_SAN_PROPERTY_NAME that can be used.\r\n\r\n@jtattermusch Hope this helps!\r\n"
  }
]
