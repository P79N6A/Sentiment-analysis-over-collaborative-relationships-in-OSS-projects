[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/454983688",
    "html_url": "https://github.com/grpc/grpc/pull/17738#issuecomment-454983688",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17738",
    "id": 454983688,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDk4MzY4OA==",
    "user": {
      "login": "ncteisen",
      "id": 6148140,
      "node_id": "MDQ6VXNlcjYxNDgxNDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6148140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ncteisen",
      "html_url": "https://github.com/ncteisen",
      "followers_url": "https://api.github.com/users/ncteisen/followers",
      "following_url": "https://api.github.com/users/ncteisen/following{/other_user}",
      "gists_url": "https://api.github.com/users/ncteisen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ncteisen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ncteisen/subscriptions",
      "organizations_url": "https://api.github.com/users/ncteisen/orgs",
      "repos_url": "https://api.github.com/users/ncteisen/repos",
      "events_url": "https://api.github.com/users/ncteisen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ncteisen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-16T23:28:34Z",
    "updated_at": "2019-01-16T23:28:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Also added a needed check on if rr_policy is null. This can happen when a user quickly queries channelz before the rr policy has been created"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/455251269",
    "html_url": "https://github.com/grpc/grpc/pull/17738#issuecomment-455251269",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17738",
    "id": 455251269,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTI1MTI2OQ==",
    "user": {
      "login": "ncteisen",
      "id": 6148140,
      "node_id": "MDQ6VXNlcjYxNDgxNDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6148140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ncteisen",
      "html_url": "https://github.com/ncteisen",
      "followers_url": "https://api.github.com/users/ncteisen/followers",
      "following_url": "https://api.github.com/users/ncteisen/following{/other_user}",
      "gists_url": "https://api.github.com/users/ncteisen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ncteisen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ncteisen/subscriptions",
      "organizations_url": "https://api.github.com/users/ncteisen/orgs",
      "repos_url": "https://api.github.com/users/ncteisen/repos",
      "events_url": "https://api.github.com/users/ncteisen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ncteisen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-17T17:08:54Z",
    "updated_at": "2019-01-17T17:08:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok I have a good idea of what's happening here.\r\n\r\nThe initial issue is that sometimes we grab `ChannelRegistry->mu_`, then `lb_channel_mu_`. This occurs whenever a user makes a GetTopChannels request. But sometimes we grab them in inverted order. This is whenever a new `lb_channel_` is created, because first it locks `lb_channel_mu_`, then inside of the channel creation code `ChannelRegistry->mu_` is locked.\r\n\r\nGoogle tooling causes a crash at this lock inversion since it could lead to deadlock.\r\n\r\nMy initial idea to fix would be to remove `lb_channel_mu_`, and only use `ChannelRegistry->mu_` (would add API to access it). What do you think of that? \r\n\r\nAnother solutino is to try to get trickier with where we lock in grpclb, but I think we will always have the root problem of a lb channel being constructed when user requests channelz"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/455258394",
    "html_url": "https://github.com/grpc/grpc/pull/17738#issuecomment-455258394",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17738",
    "id": 455258394,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTI1ODM5NA==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-17T17:29:43Z",
    "updated_at": "2019-01-17T17:29:43Z",
    "author_association": "MEMBER",
    "body": "It looks like the only thing we're actually trying to get out of `lb_channel_` is the uuid of the underlying channelz node.  Given that, how about we just add an atomic to store the uuid, which we'll set when we create the LB channel and unset when we destroy the LB channel?  That way, `FillChildRefsForChannelz()` can just check the atomic and doesn't need to get any lock."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/455261962",
    "html_url": "https://github.com/grpc/grpc/pull/17738#issuecomment-455261962",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17738",
    "id": 455261962,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTI2MTk2Mg==",
    "user": {
      "login": "ncteisen",
      "id": 6148140,
      "node_id": "MDQ6VXNlcjYxNDgxNDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6148140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ncteisen",
      "html_url": "https://github.com/ncteisen",
      "followers_url": "https://api.github.com/users/ncteisen/followers",
      "following_url": "https://api.github.com/users/ncteisen/following{/other_user}",
      "gists_url": "https://api.github.com/users/ncteisen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ncteisen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ncteisen/subscriptions",
      "organizations_url": "https://api.github.com/users/ncteisen/orgs",
      "repos_url": "https://api.github.com/users/ncteisen/repos",
      "events_url": "https://api.github.com/users/ncteisen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ncteisen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-17T17:39:57Z",
    "updated_at": "2019-01-17T17:39:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ah yeah I like that. Done"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/455305050",
    "html_url": "https://github.com/grpc/grpc/pull/17738#issuecomment-455305050",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17738",
    "id": 455305050,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTMwNTA1MA==",
    "user": {
      "login": "ncteisen",
      "id": 6148140,
      "node_id": "MDQ6VXNlcjYxNDgxNDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6148140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ncteisen",
      "html_url": "https://github.com/ncteisen",
      "followers_url": "https://api.github.com/users/ncteisen/followers",
      "following_url": "https://api.github.com/users/ncteisen/following{/other_user}",
      "gists_url": "https://api.github.com/users/ncteisen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ncteisen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ncteisen/subscriptions",
      "organizations_url": "https://api.github.com/users/ncteisen/orgs",
      "repos_url": "https://api.github.com/users/ncteisen/repos",
      "events_url": "https://api.github.com/users/ncteisen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ncteisen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-17T19:40:52Z",
    "updated_at": "2019-01-17T19:40:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "Mac failures are all infro related, merging\r\n"
  }
]
