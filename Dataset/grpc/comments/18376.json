[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/473477254",
    "html_url": "https://github.com/grpc/grpc/issues/18376#issuecomment-473477254",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/18376",
    "id": 473477254,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MzQ3NzI1NA==",
    "user": {
      "login": "lidizheng",
      "id": 7394928,
      "node_id": "MDQ6VXNlcjczOTQ5Mjg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/7394928?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lidizheng",
      "html_url": "https://github.com/lidizheng",
      "followers_url": "https://api.github.com/users/lidizheng/followers",
      "following_url": "https://api.github.com/users/lidizheng/following{/other_user}",
      "gists_url": "https://api.github.com/users/lidizheng/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lidizheng/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lidizheng/subscriptions",
      "organizations_url": "https://api.github.com/users/lidizheng/orgs",
      "repos_url": "https://api.github.com/users/lidizheng/repos",
      "events_url": "https://api.github.com/users/lidizheng/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lidizheng/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-16T00:05:50Z",
    "updated_at": "2019-03-16T00:05:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is on the road map of gRPC Python team. We have some experimental proposals, but yet to decide which way to go. One of the promising proposal is supporting AsyncIO, and the async bidirectional streaming API will be added at the same time.\r\n\r\nIf possible, can you give more details about your use case and how you approach it?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/478986153",
    "html_url": "https://github.com/grpc/grpc/issues/18376#issuecomment-478986153",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/18376",
    "id": 478986153,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODk4NjE1Mw==",
    "user": {
      "login": "stephan-tolksdorf",
      "id": 898695,
      "node_id": "MDQ6VXNlcjg5ODY5NQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/898695?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephan-tolksdorf",
      "html_url": "https://github.com/stephan-tolksdorf",
      "followers_url": "https://api.github.com/users/stephan-tolksdorf/followers",
      "following_url": "https://api.github.com/users/stephan-tolksdorf/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephan-tolksdorf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephan-tolksdorf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephan-tolksdorf/subscriptions",
      "organizations_url": "https://api.github.com/users/stephan-tolksdorf/orgs",
      "repos_url": "https://api.github.com/users/stephan-tolksdorf/repos",
      "events_url": "https://api.github.com/users/stephan-tolksdorf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephan-tolksdorf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-02T13:05:22Z",
    "updated_at": "2019-04-02T13:05:22Z",
    "author_association": "NONE",
    "body": "I intended to use the bidirectional streaming RPC for a prototype backend service call that sends a (potentially long) series of sequentially dependent work items that each generate a response message. "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/479126234",
    "html_url": "https://github.com/grpc/grpc/issues/18376#issuecomment-479126234",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/18376",
    "id": 479126234,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTEyNjIzNA==",
    "user": {
      "login": "lidizheng",
      "id": 7394928,
      "node_id": "MDQ6VXNlcjczOTQ5Mjg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/7394928?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lidizheng",
      "html_url": "https://github.com/lidizheng",
      "followers_url": "https://api.github.com/users/lidizheng/followers",
      "following_url": "https://api.github.com/users/lidizheng/following{/other_user}",
      "gists_url": "https://api.github.com/users/lidizheng/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lidizheng/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lidizheng/subscriptions",
      "organizations_url": "https://api.github.com/users/lidizheng/orgs",
      "repos_url": "https://api.github.com/users/lidizheng/repos",
      "events_url": "https://api.github.com/users/lidizheng/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lidizheng/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-02T18:08:47Z",
    "updated_at": "2019-04-02T18:08:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "@stephan-tolksdorf Can you explain more why you want the async bidi-streaming API?\r\n\r\nAs for a workaround, if your backend service is deadlocking due to limited threads, I would recommend to set `max_workers=None` for your thread pool to trade off a little performance for correctness."
  }
]
