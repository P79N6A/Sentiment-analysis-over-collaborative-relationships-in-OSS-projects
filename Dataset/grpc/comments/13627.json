[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/349100108",
    "html_url": "https://github.com/grpc/grpc/issues/13627#issuecomment-349100108",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13627",
    "id": 349100108,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTEwMDEwOA==",
    "user": {
      "login": "dgquintas",
      "id": 120217,
      "node_id": "MDQ6VXNlcjEyMDIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/120217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgquintas",
      "html_url": "https://github.com/dgquintas",
      "followers_url": "https://api.github.com/users/dgquintas/followers",
      "following_url": "https://api.github.com/users/dgquintas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgquintas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgquintas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgquintas/subscriptions",
      "organizations_url": "https://api.github.com/users/dgquintas/orgs",
      "repos_url": "https://api.github.com/users/dgquintas/repos",
      "events_url": "https://api.github.com/users/dgquintas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgquintas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-04T20:47:34Z",
    "updated_at": "2017-12-04T20:47:34Z",
    "author_association": "NONE",
    "body": "Would https://github.com/grpc/grpc/issues/9481 be related?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/349109136",
    "html_url": "https://github.com/grpc/grpc/issues/13627#issuecomment-349109136",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13627",
    "id": 349109136,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTEwOTEzNg==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-04T21:19:33Z",
    "updated_at": "2017-12-04T21:19:33Z",
    "author_association": "MEMBER",
    "body": "I don't think #9481 is actually a problem.  The issue here is not that we keep trying to resolve; it's that the RPC never returns.\r\n\r\nThis may be tangentially related to #12897.  Although from my conversation with Muxi earlier today, he indicated that this was a case where the call was going to be a long-running streaming RPC and thus has no deadline, so it wouldn't actually be affected by that bug anyway.  In that use-case, I don't think there's anything to do except have the application cancel the call if they don't receive initial metadata by some particular time."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/349134260",
    "html_url": "https://github.com/grpc/grpc/issues/13627#issuecomment-349134260",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13627",
    "id": 349134260,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTEzNDI2MA==",
    "user": {
      "login": "muxi",
      "id": 1054404,
      "node_id": "MDQ6VXNlcjEwNTQ0MDQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1054404?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/muxi",
      "html_url": "https://github.com/muxi",
      "followers_url": "https://api.github.com/users/muxi/followers",
      "following_url": "https://api.github.com/users/muxi/following{/other_user}",
      "gists_url": "https://api.github.com/users/muxi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/muxi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/muxi/subscriptions",
      "organizations_url": "https://api.github.com/users/muxi/orgs",
      "repos_url": "https://api.github.com/users/muxi/repos",
      "events_url": "https://api.github.com/users/muxi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/muxi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-04T22:53:59Z",
    "updated_at": "2017-12-04T22:53:59Z",
    "author_association": "MEMBER",
    "body": "@markdroth Receiving initial metadata seems to me not the correct criteria for DNS resolution failure (or any other connection-time failure). In some calls the server might just wait (for a long time) to receive all messages and EOS from client then reply initial metadata after that, and I believe (correct me if I am wrong) that is a legitimate use case.\r\n\r\nIn my understanding the way this should work is: when DNS fails, any pending call waiting for this DNS resolution whose `wait_for_ready` is not set should fail with UNAVAILABLE. More generally speaking, I think any `wait_for_ready=false` call waiting for a channel to connect should fail when the channel's state is set to TRANSIENT_FAILURE. Should this be the case?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/349414241",
    "html_url": "https://github.com/grpc/grpc/issues/13627#issuecomment-349414241",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13627",
    "id": 349414241,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTQxNDI0MQ==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-05T19:28:54Z",
    "updated_at": "2017-12-05T19:28:54Z",
    "author_association": "MEMBER",
    "body": "If we have not yet connected to the server, why does the application care whether the problem is a DNS lookup failure or a connection-level failure?  I don't know of a use-case where the difference between those actually matters.\r\n\r\nIn the use-case you describe where the server does not send initial metadata until reading all of the client messages, I agree that there's no easy way for the application to tell that there's a problem.  But I think that's true regardless of whether it's a name resolution failure or a server that simply loses track of the call due to a bug.  There's no clear way for the application to determine what's wrong, so if it cares about this, it's going to have to apply some sort of deadline.\r\n\r\nIt's not clear to me whether or not `wait_for_ready` should actually apply to name resolution failures.  We could probably make a change to do that, but I'm not sure it's the right thing to do, especially since there would be some implications for our internal resolver design.  We should probably talk with @a11r about this when he gets back."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/349430258",
    "html_url": "https://github.com/grpc/grpc/issues/13627#issuecomment-349430258",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13627",
    "id": 349430258,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTQzMDI1OA==",
    "user": {
      "login": "muxi",
      "id": 1054404,
      "node_id": "MDQ6VXNlcjEwNTQ0MDQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1054404?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/muxi",
      "html_url": "https://github.com/muxi",
      "followers_url": "https://api.github.com/users/muxi/followers",
      "following_url": "https://api.github.com/users/muxi/following{/other_user}",
      "gists_url": "https://api.github.com/users/muxi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/muxi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/muxi/subscriptions",
      "organizations_url": "https://api.github.com/users/muxi/orgs",
      "repos_url": "https://api.github.com/users/muxi/repos",
      "events_url": "https://api.github.com/users/muxi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/muxi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-05T20:26:38Z",
    "updated_at": "2017-12-05T20:26:38Z",
    "author_association": "MEMBER",
    "body": "You are right that there should not be a difference between DNS lookup failure or connection failure.\r\n\r\nFrom [its doc](https://github.com/grpc/grpc/blob/master/doc/wait-for-ready.md), `wait_for_ready` depends on checking channel state. Since name resolution failure sets channel to TRANSIENT_FAILURE, I believe `wait_for_ready` is already applied to name resolution.\r\n\r\nI think the actual issue is, if a channel's state **transits to** TRANSIENT_FAILURE (e.g. due to name resolution failure, connect() timeout, etc.) the calls without `wait_for_ready` should fail with the channel state transition. Without this behavior, a call may initiates a channel connection (IDLE->CONNECTING) then wait for a long time for name resolution retries, connect() retries, etc.\r\n\r\nYes we should talk with @a11r about this."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/349439796",
    "html_url": "https://github.com/grpc/grpc/issues/13627#issuecomment-349439796",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13627",
    "id": 349439796,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTQzOTc5Ng==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-05T21:00:13Z",
    "updated_at": "2017-12-05T21:00:13Z",
    "author_association": "MEMBER",
    "body": "Currently, name resolution failure does *not* cause the channel's state to be set to TRANSIENT_FAILURE.\r\n\r\nNote that it's not actually the case that `wait_for_ready=false` RPCs are failed based on the channel's state being TRANSIENT_FAILURE; in actuality, both setting the channel state to TRANSIENT_FAILURE and returning failure for `wait_for_ready=false` RPCs are triggered by the same underlying error condition.  And since our current resolver design is that the resolver handles errors internally instead of reporting them to the client channel, neither of those things happens on resolver errors."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/349448268",
    "html_url": "https://github.com/grpc/grpc/issues/13627#issuecomment-349448268",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13627",
    "id": 349448268,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTQ0ODI2OA==",
    "user": {
      "login": "muxi",
      "id": 1054404,
      "node_id": "MDQ6VXNlcjEwNTQ0MDQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1054404?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/muxi",
      "html_url": "https://github.com/muxi",
      "followers_url": "https://api.github.com/users/muxi/followers",
      "following_url": "https://api.github.com/users/muxi/following{/other_user}",
      "gists_url": "https://api.github.com/users/muxi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/muxi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/muxi/subscriptions",
      "organizations_url": "https://api.github.com/users/muxi/orgs",
      "repos_url": "https://api.github.com/users/muxi/repos",
      "events_url": "https://api.github.com/users/muxi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/muxi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-05T21:31:45Z",
    "updated_at": "2017-12-05T21:31:59Z",
    "author_association": "MEMBER",
    "body": "Hmm that is interesting to know. I am seeing some different behavior in my logs.\r\n\r\n> Currently, name resolution failure does not cause the channel's state to be set to TRANSIENT_FAILURE.\r\n\r\nMy logs were showing periodical state transitions like this:\r\n```\r\nD1202 10:25:01.196120000 2954387456 connectivity_state.c:172]          SET: 0x7c170f38 client_channel: IDLE --> TRANSIENT_FAILURE [new_lb+resolver] error=0x7c495d70 {\"created\":\"@1512239101.193867000\",\"description\":\"No load balancing policy\",\"file\":\"/Users/mikelehen/src/firebase-ios-sdk/Firestore/Example/Pods/gRPC-Core/src/core/ext/filters/client_channel/client_channel.c\",\"file_line\":561}\r\n```\r\n```\r\nD1202 10:25:32.202904000 2954387456 connectivity_state.c:172]          SET: 0x7c170f38 client_channel: TRANSIENT_FAILURE --> TRANSIENT_FAILURE [new_lb+resolver] error=0x7c170c90 {\"created\":\"@1512239132.200605000\",\"description\":\"No load balancing policy\",\"file\":\"/Users/mikelehen/src/firebase-ios-sdk/Firestore/Example/Pods/gRPC-Core/src/core/ext/filters/client_channel/client_channel.c\",\"file_line\":561}\r\n```\r\n\r\n> both setting the channel state to TRANSIENT_FAILURE and returning failure for wait_for_ready=false RPCs are triggered by the same underlying error condition.\r\n\r\nEven with the channel state transitions above, the call remained pending.\r\n\r\nDoes that look like a bug?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/349459852",
    "html_url": "https://github.com/grpc/grpc/issues/13627#issuecomment-349459852",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13627",
    "id": 349459852,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTQ1OTg1Mg==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-05T22:15:43Z",
    "updated_at": "2017-12-05T22:15:43Z",
    "author_association": "MEMBER",
    "body": "What version of gRPC are you using?  That's clearly not anything near master, since the files have \".c\" suffix instead of \".cc\", which means it's from before the C++ build change.  Can you try again with the code from master?\r\n\r\nWith the current code, that error message should not occur.  If you're seeing that, it means that the resolver *did* return, but it returned no data, which should never happen.  If it is still happening with the current code, then I can look into what's going on."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/349461718",
    "html_url": "https://github.com/grpc/grpc/issues/13627#issuecomment-349461718",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13627",
    "id": 349461718,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTQ2MTcxOA==",
    "user": {
      "login": "muxi",
      "id": 1054404,
      "node_id": "MDQ6VXNlcjEwNTQ0MDQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1054404?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/muxi",
      "html_url": "https://github.com/muxi",
      "followers_url": "https://api.github.com/users/muxi/followers",
      "following_url": "https://api.github.com/users/muxi/following{/other_user}",
      "gists_url": "https://api.github.com/users/muxi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/muxi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/muxi/subscriptions",
      "organizations_url": "https://api.github.com/users/muxi/orgs",
      "repos_url": "https://api.github.com/users/muxi/repos",
      "events_url": "https://api.github.com/users/muxi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/muxi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-05T22:23:14Z",
    "updated_at": "2017-12-05T22:23:14Z",
    "author_association": "MEMBER",
    "body": "I'll try that. The code I was using was v1.7.1."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/349489675",
    "html_url": "https://github.com/grpc/grpc/issues/13627#issuecomment-349489675",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13627",
    "id": 349489675,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTQ4OTY3NQ==",
    "user": {
      "login": "muxi",
      "id": 1054404,
      "node_id": "MDQ6VXNlcjEwNTQ0MDQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1054404?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/muxi",
      "html_url": "https://github.com/muxi",
      "followers_url": "https://api.github.com/users/muxi/followers",
      "following_url": "https://api.github.com/users/muxi/following{/other_user}",
      "gists_url": "https://api.github.com/users/muxi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/muxi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/muxi/subscriptions",
      "organizations_url": "https://api.github.com/users/muxi/orgs",
      "repos_url": "https://api.github.com/users/muxi/repos",
      "events_url": "https://api.github.com/users/muxi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/muxi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-06T00:36:35Z",
    "updated_at": "2017-12-06T00:36:35Z",
    "author_association": "MEMBER",
    "body": "Tried master at 7fbbc23. Behavior is the same:\r\n\r\n* Channel transited to TRANSIENT_FAILURE\r\n* Call stayed pending after channel went to TRANSIENT_FAILURE\r\n\r\n```\r\nD1205 16:27:32.653163000 123145519419392 client_channel.cc:259]        chand=0x7feedfe2f840: setting connectivity state to TRANSIENT_FAILURE\r\nD1205 16:27:32.653245000 123145519419392 connectivity_state.cc:169]    SET: 0x7feedfe2f8e0 client_channel: IDLE --> TRANSIENT_FAILURE [new_lb+resolver] error=0x7feedfc43510 {\"created\":\"@1512520052.653062000\",\"description\":\"No load balancing policy\",\"file\":\"/Users/mxyan/grpc/grpc/src/core/ext/filters/client_channel/client_channel.cc\",\"file_line\":600}\r\n```\r\n```\r\nD1205 16:28:09.008378000 123145519419392 client_channel.cc:259]        chand=0x7feedfe2f840: setting connectivity state to TRANSIENT_FAILURE\r\nD1205 16:28:09.008469000 123145519419392 connectivity_state.cc:169]    SET: 0x7feedfe2f8e0 client_channel: TRANSIENT_FAILURE --> TRANSIENT_FAILURE [new_lb+resolver] error=0x7feedfc43690 {\"created\":\"@1512520089.008294000\",\"description\":\"No load balancing policy\",\"file\":\"/Users/mxyan/grpc/grpc/src/core/ext/filters/client_channel/client_channel.cc\",\"file_line\":600}\r\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/349669172",
    "html_url": "https://github.com/grpc/grpc/issues/13627#issuecomment-349669172",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13627",
    "id": 349669172,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTY2OTE3Mg==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-06T15:13:56Z",
    "updated_at": "2017-12-06T15:13:56Z",
    "author_association": "MEMBER",
    "body": "Can you please show me what code you're running to trigger this and share the complete trace log?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/349727097",
    "html_url": "https://github.com/grpc/grpc/issues/13627#issuecomment-349727097",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13627",
    "id": 349727097,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTcyNzA5Nw==",
    "user": {
      "login": "muxi",
      "id": 1054404,
      "node_id": "MDQ6VXNlcjEwNTQ0MDQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1054404?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/muxi",
      "html_url": "https://github.com/muxi",
      "followers_url": "https://api.github.com/users/muxi/followers",
      "following_url": "https://api.github.com/users/muxi/following{/other_user}",
      "gists_url": "https://api.github.com/users/muxi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/muxi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/muxi/subscriptions",
      "organizations_url": "https://api.github.com/users/muxi/orgs",
      "repos_url": "https://api.github.com/users/muxi/repos",
      "events_url": "https://api.github.com/users/muxi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/muxi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-06T18:13:11Z",
    "updated_at": "2017-12-06T18:13:11Z",
    "author_association": "MEMBER",
    "body": "This is `EmptyUnaryRPC` [test](https://github.com/grpc/grpc/blob/1d4e99508409be052bd129ba507bae1fbe7eb7fa/src/objective-c/tests/InteropTests.m#L106-L122) running on iOS simulator. Precondition is flushing DNS cache and setting the network packet loss rate to 100% with Network Link Conditioner. I can help with setting this up for you if needed.\r\n\r\nComplete trace log is pasted [here](https://docs.google.com/document/d/1Mzt99hSOVybeZ6HOzVmE8tESIGJJaE-QxRk0y7rql_A/edit?usp=sharing)."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/350320728",
    "html_url": "https://github.com/grpc/grpc/issues/13627#issuecomment-350320728",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13627",
    "id": 350320728,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDMyMDcyOA==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-08T17:23:41Z",
    "updated_at": "2017-12-08T17:23:41Z",
    "author_association": "MEMBER",
    "body": "Thanks, that trace was very useful.\r\n\r\nIt looks like the DNS resolver is actually returning a NULL result to the client channel, even when it retries.  I didn't realize it was doing that, and the client channel code is definitely not expecting that, which is why we're getting an unusual result here.\r\n\r\nI'll talk to @a11r when he gets back about the right way to handle `wait_for_ready` here.  If the answer is that DNS failures should not cause `wait_for_ready=false` RPCs to fail, then I'll change the DNS resolver to not return a result in this case.  Alternatively, if the answer is that DNS failures *should* cause `wait_for_ready=false` RPCs to fail, then I'll instead change the client_channel code to do that when it sees the NULL result from the resolver."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/350330182",
    "html_url": "https://github.com/grpc/grpc/issues/13627#issuecomment-350330182",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13627",
    "id": 350330182,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDMzMDE4Mg==",
    "user": {
      "login": "muxi",
      "id": 1054404,
      "node_id": "MDQ6VXNlcjEwNTQ0MDQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1054404?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/muxi",
      "html_url": "https://github.com/muxi",
      "followers_url": "https://api.github.com/users/muxi/followers",
      "following_url": "https://api.github.com/users/muxi/following{/other_user}",
      "gists_url": "https://api.github.com/users/muxi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/muxi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/muxi/subscriptions",
      "organizations_url": "https://api.github.com/users/muxi/orgs",
      "repos_url": "https://api.github.com/users/muxi/repos",
      "events_url": "https://api.github.com/users/muxi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/muxi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-08T18:00:54Z",
    "updated_at": "2017-12-08T18:00:54Z",
    "author_association": "MEMBER",
    "body": "Sounds good, thanks Mark."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/360637768",
    "html_url": "https://github.com/grpc/grpc/issues/13627#issuecomment-360637768",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13627",
    "id": 360637768,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDYzNzc2OA==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-25T23:40:56Z",
    "updated_at": "2018-01-25T23:41:32Z",
    "author_association": "MEMBER",
    "body": "Abhishek has agreed that a name resolution failure should immediately terminate RPCs with wait_for_ready=false.  I'll need to update the C-core code accordingly.\r\n\r\nI'm pretty swamped at the moment and can't give an ETA on this yet, but I will get to it at some point."
  }
]
