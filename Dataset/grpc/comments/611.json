[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/75084967",
    "html_url": "https://github.com/grpc/grpc/issues/611#issuecomment-75084967",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/611",
    "id": 75084967,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MDg0OTY3",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-19T16:36:05Z",
    "updated_at": "2015-02-19T16:36:05Z",
    "author_association": "MEMBER",
    "body": "We'd like to be able to extract counts in each bucket, so that we can visualize the shape of the distribution.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/87287887",
    "html_url": "https://github.com/grpc/grpc/issues/611#issuecomment-87287887",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/611",
    "id": 87287887,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3Mjg3ODg3",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-28T19:22:49Z",
    "updated_at": "2015-03-28T19:22:49Z",
    "author_association": "MEMBER",
    "body": "Revisiting this old issue: The title suggests that this should be in the C core, though I don't know if any wrapped language besides C++ uses the gpr_histogram feature. I don't mind putting it in either C or C++, depending on how it will be used.\n\nAlso, any opinions what the output format should be? I can think of 2:\n1. A CSV that's dumped to a std::ostream (or FILE \\* if this is for C also) specified in an argument, so that it's easy to import into a spreadsheet. The columns could be something like bucket lower bound, bucket upper bound, count. Synchronization mechanism may be needed, or perhaps the user of the histogram is responsible for this.\n2. Output should be as a protobuf. But I find this undesirable since we don't want any dependence on protobuf for the libraries themselves (tests are another matter, of course).\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/90653067",
    "html_url": "https://github.com/grpc/grpc/issues/611#issuecomment-90653067",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/611",
    "id": 90653067,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwNjUzMDY3",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-07T17:21:18Z",
    "updated_at": "2015-04-07T17:21:18Z",
    "author_association": "MEMBER",
    "body": "I'd lean towards having a protobuf based histogram format for communication\nbetween various processes, and a library that can dump said protobuf into\nCSV (or similar formats).\n\nOn Sat, Mar 28, 2015 at 12:23 PM Vijay Pai notifications@github.com wrote:\n\n> Revisiting this old issue: The title suggests that this should be in the C\n> core, though I don't know if any wrapped language besides C++ uses the\n> gpr_histogram feature. I don't mind putting it in either C or C++,\n> depending on how it will be used.\n> \n> Also, any opinions what the output format should be? I can think of 2:\n> \n>    1.\n> \n>    A CSV that's dumped to a std::ostream (or FILE \\* if this is for C\n>    also) specified in an argument, so that it's easy to import into a\n>    spreadsheet. The columns could be something like bucket lower bound, bucket\n>    upper bound, count. Synchronization mechanism may be needed, or perhaps the\n>    user of the histogram is responsible for this.\n>    2.\n> \n>    Output should be as a protobuf. But I find this undesirable since we\n>    don't want any dependence on protobuf for the libraries themselves (tests\n>    are another matter, of course).\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/grpc/grpc/issues/611#issuecomment-87287887.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/214874122",
    "html_url": "https://github.com/grpc/grpc/issues/611#issuecomment-214874122",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/611",
    "id": 214874122,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNDg3NDEyMg==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-26T20:21:43Z",
    "updated_at": "2016-04-26T20:21:43Z",
    "author_association": "MEMBER",
    "body": "Not GA blocking\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/309887059",
    "html_url": "https://github.com/grpc/grpc/issues/611#issuecomment-309887059",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/611",
    "id": 309887059,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTg4NzA1OQ==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-20T20:48:56Z",
    "updated_at": "2017-06-20T20:48:56Z",
    "author_association": "MEMBER",
    "body": "No longer relevant"
  }
]
