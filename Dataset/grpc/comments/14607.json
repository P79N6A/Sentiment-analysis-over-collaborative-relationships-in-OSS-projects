[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/370906757",
    "html_url": "https://github.com/grpc/grpc/pull/14607#issuecomment-370906757",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14607",
    "id": 370906757,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDkwNjc1Nw==",
    "user": {
      "login": "ncteisen",
      "id": 6148140,
      "node_id": "MDQ6VXNlcjYxNDgxNDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6148140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ncteisen",
      "html_url": "https://github.com/ncteisen",
      "followers_url": "https://api.github.com/users/ncteisen/followers",
      "following_url": "https://api.github.com/users/ncteisen/following{/other_user}",
      "gists_url": "https://api.github.com/users/ncteisen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ncteisen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ncteisen/subscriptions",
      "organizations_url": "https://api.github.com/users/ncteisen/orgs",
      "repos_url": "https://api.github.com/users/ncteisen/repos",
      "events_url": "https://api.github.com/users/ncteisen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ncteisen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-06T19:53:34Z",
    "updated_at": "2018-03-06T19:53:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Is this ready for review (I can do it soon, I just see a lot of red tests)?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/370918172",
    "html_url": "https://github.com/grpc/grpc/pull/14607#issuecomment-370918172",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14607",
    "id": 370918172,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDkxODE3Mg==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-06T20:32:36Z",
    "updated_at": "2018-03-06T20:32:36Z",
    "author_association": "MEMBER",
    "body": "Looks like there are still some failures to mop up.  I'll let you know when it's ready for review."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/370929889",
    "html_url": "https://github.com/grpc/grpc/pull/14607#issuecomment-370929889",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14607",
    "id": 370929889,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDkyOTg4OQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-06T21:12:16Z",
    "updated_at": "2018-03-06T21:12:16Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/370936848",
    "html_url": "https://github.com/grpc/grpc/pull/14607#issuecomment-370936848",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14607",
    "id": 370936848,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDkzNjg0OA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-06T21:35:58Z",
    "updated_at": "2018-03-06T21:35:58Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/370948539",
    "html_url": "https://github.com/grpc/grpc/pull/14607#issuecomment-370948539",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14607",
    "id": 370948539,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDk0ODUzOQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-06T22:15:38Z",
    "updated_at": "2018-03-06T22:15:38Z",
    "author_association": "NONE",
    "body": "```\nCorrupt JSON data (indicates timeout or crash): \n    bm_chttp2_transport.BM_TransportStreamSend_32768.opt.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_512.counters.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_16777216.counters.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_1.opt.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_8.counters.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_1.counters.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_64.opt.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_2097152.opt.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_32768.counters.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_16777216.opt.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_512.opt.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_2097152.counters.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_4096.opt.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_262144.counters.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_64.counters.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_8.opt.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_262144.opt.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_134217728.opt.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_134217728.counters.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_4096.counters.new: 10\n\n\n[microbenchmarks] Performance differences noted:\nBenchmark                                                                              cpu_time    real_time\n-------------------------------------------------------------------------------------  ----------  -----------\nBM_HasClearGrpcStatus<ErrorCancelled>                                                  +5%         +5%\nBM_PumpStreamClientToServer<InProcess>/262144                                          +9%         +9%\nBM_PumpStreamServerToClient<InProcess>/262144                                          +9%         +9%\nBM_StreamingPingPongMsgs<InProcess, NoOpMutator, NoOpMutator>/32768                    -5%         -5%\nBM_StreamingPingPongWithCoalescingApi<InProcess, NoOpMutator, NoOpMutator>/262144/1/0  -6%         -6%\nBM_StreamingPingPongWithCoalescingApi<InProcess, NoOpMutator, NoOpMutator>/32768/1/1   -4%         -4%\nBM_UnaryPingPong<MinInProcess, NoOpMutator, NoOpMutator>/0/262144                      +4%         +4%\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/370950506",
    "html_url": "https://github.com/grpc/grpc/pull/14607#issuecomment-370950506",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14607",
    "id": 370950506,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDk1MDUwNg==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-06T22:22:50Z",
    "updated_at": "2018-03-06T22:22:50Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/370956033",
    "html_url": "https://github.com/grpc/grpc/pull/14607#issuecomment-370956033",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14607",
    "id": 370956033,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDk1NjAzMw==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-06T22:43:42Z",
    "updated_at": "2018-03-06T22:43:42Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n  +0.5% +3.11Ki [None]                                                                                +701Ki   +10%\n      +0.5% +2.99Ki [Unmapped]                                                                            +701Ki   +10%\n      [NEW]     +64 vtable for grpc_core::ByteStreamCache::CachingByteStream                                 +64  [NEW]\n      [NEW]     +64 vtable for grpc_core::SliceBufferByteStream                                              +64  [NEW]\n      [NEW]     +64 vtable for grpc_core::Chttp2IncomingByteStream                                           +64  [NEW]\n      +2.9%     +32 [None]                                                                                     0  [ = ]\n  +0.4%    +112 src/core/ext/filters/client_channel/client_channel.cc                                   +112  +0.4%\n      [NEW]    +197 add_retriable_send_message_op(grpc_call_element*, subchannel_call_retry_state*, subc    +197  [NEW]\n       +16%     +50 invoke_recv_message_callback                                                             +50   +16%\n      [NEW]     +47 grpc_core::LoadBalancingPolicy::SetReresolutionClosureLocked(grpc_closure*) [clone .     +47  [NEW]\n      +1.0%     +32 start_retriable_subchannel_batches                                                       +32  +1.0%\n      +1.8%      +7 [Unmapped]                                                                                +7  +1.8%\n      +0.0%      +1 on_complete                                                                               +1  +0.0%\n  +0.7%     +96 src/core/ext/transport/inproc/inproc_transport.cc                                        +96  +0.7%\n      +1.3%     +40 op_state_machine                                                                         +40  +1.3%\n      +4.2%     +24 message_transfer_locked                                                                  +24  +4.2%\n      +8.3%     +16 [Unmapped]                                                                               +16  +8.3%\n      +1.1%     +16 fail_helper_locked                                                                       +16  +1.1%\n  +1.7%     +80 src/core/ext/filters/http/client/http_client_filter.cc                                   +80  +1.7%\n      +4.3%     +72 hc_start_transport_stream_op_batch                                                       +72  +4.3%\n      +5.1%      +8 pull_slice_from_send_message                                                              +8  +5.1%\n  +2.0%     +64 src/core/ext/transport/chttp2/transport/frame_data.cc                                    +64  +2.0%\n      [NEW] +2.05Ki grpc_deframe_unprocessed_incoming_frames                                             +2.05Ki  [NEW]\n      +7.9%      +3 [Unmapped]                                                                                +3  +7.9%\n  +0.4%     +64 src/core/lib/surface/call.cc                                                             +64  +0.4%\n      [NEW]    +506 set_encodings_accepted_by_peer(grpc_call*, grpc_mdelem, unsigned int*, bool) [clone     +506  [NEW]\n      +8.2%     +29 [Unmapped]                                                                               +29  +8.2%\n      +0.5%     +16 call_start_batch                                                                         +16  +0.5%\n      +3.2%     +11 destroy_call                                                                             +11  +3.2%\n      +1.7%      +5 continue_receiving_slices                                                                 +5  +1.7%\n      +0.4%      +2 receiving_stream_ready                                                                    +2  +0.4%\n      +0.3%      +1 receiving_slice_ready                                                                     +1  +0.3%\n  +5.4%     +64 src/core/lib/transport/byte_stream.cc                                                    +64  +5.4%\n      [NEW]    +308 grpc_core::ByteStreamCache::CachingByteStream::Pull                                     +308  [NEW]\n      [NEW]    +228 grpc_core::SliceBufferByteStream::Pull                                                  +228  [NEW]\n      [NEW]    +137 grpc_core::SliceBufferByteStream::SliceBufferByteStream                                 +137  [NEW]\n      [NEW]     +66 grpc_core::SliceBufferByteStream::Next                                                   +66  [NEW]\n      [NEW]     +58 grpc_core::ByteStreamCache::CachingByteStream::Shutdown                                  +58  [NEW]\n      [NEW]     +50 grpc_core::ByteStreamCache::CachingByteStream::CachingByteStream                         +50  [NEW]\n      [NEW]     +39 grpc_core::ByteStreamCache::CachingByteStream::Next                                      +39  [NEW]\n      [NEW]     +38 grpc_core::SliceBufferByteStream::Shutdown                                               +38  [NEW]\n      [NEW]     +35 grpc_core::ByteStreamCache::~ByteStreamCache                                             +35  [NEW]\n      [NEW]     +34 grpc_core::ByteStreamCache::Destroy                                                      +34  [NEW]\n      [NEW]     +26 grpc_core::SliceBufferByteStream::Orphan                                                 +26  [NEW]\n      [NEW]     +23 grpc_core::ByteStreamCache::ByteStreamCache                                              +23  [NEW]\n      [NEW]     +14 grpc_core::ByteStreamCache::CachingByteStream::~CachingByteStream                        +14  [NEW]\n      [NEW]     +14 grpc_core::SliceBufferByteStream::~SliceBufferByteStream                                 +14  [NEW]\n      +6.5%     +10 [Unmapped]                                                                               +10  +6.5%\n      [NEW]      +9 grpc_core::ByteStreamCache::CachingByteStream::Reset                                      +9  [NEW]\n      [NEW]      +9 grpc_core::ByteStreamCache::CachingByteStream::Orphan                                     +9  [NEW]\n      [NEW]      +2 grpc_core::ByteStreamCache::CachingByteStream::~CachingByteStream                         +2  [NEW]\n      [NEW]      +2 grpc_core::SliceBufferByteStream::~SliceBufferByteStream                                  +2  [NEW]\n  +2.3%     +48 src/core/lib/transport/transport_op_string.cc                                            +48  +2.3%\n      +6.1%     +49 grpc_transport_stream_op_batch_string                                                    +49  +6.1%\n  +0.1%     +43 src/core/ext/transport/chttp2/transport/chttp2_transport.cc                              +43  +0.1%\n      [NEW]    +594 grpc_core::Chttp2IncomingByteStream::Pull                                               +594  [NEW]\n      [NEW]    +583 grpc_core::Chttp2IncomingByteStream::NextLocked                                         +583  [NEW]\n      [NEW]    +319 grpc_core::Chttp2IncomingByteStream::Push                                               +319  [NEW]\n      [NEW]    +223 grpc_core::Chttp2IncomingByteStream::Finished                                           +223  [NEW]\n      [NEW]    +181 grpc_core::Chttp2IncomingByteStream::PublishError                                       +181  [NEW]\n      [NEW]    +101 grpc_core::Chttp2IncomingByteStream::Next                                               +101  [NEW]\n      [NEW]     +76 grpc_core::Chttp2IncomingByteStream::Chttp2IncomingByteStream                            +76  [NEW]\n       +16%     +63 continue_fetching_send_locked                                                            +63   +16%\n      [NEW]     +55 grpc_core::Chttp2IncomingByteStream::Orphan                                              +55  [NEW]\n      [NEW]     +53 grpc_core::Chttp2IncomingByteStream::OrphanLocked                                        +53  [NEW]\n      [NEW]     +46 post_destructive_reclaimer(grpc_chttp2_transport*) [clone .part.28]                      +46  [NEW]\n      +4.7%     +44 grpc_chttp2_maybe_complete_recv_message                                                  +44  +4.7%\n      [NEW]     +43 post_benign_reclaimer(grpc_chttp2_transport*) [clone .part.27]                           +43  [NEW]\n      [NEW]     +42 grpc_core::Chttp2IncomingByteStream::Unref                                               +42  [NEW]\n      +1.2%     +40 perform_stream_op_locked                                                                 +40  +1.2%\n      [NEW]     +26 grpc_core::Chttp2IncomingByteStream::Shutdown                                            +26  [NEW]\n       +17%     +17 complete_fetch_locked                                                                    +17   +17%\n      +1.9%     +12 [Unmapped]                                                                               +12  +1.9%\n      [NEW]      +9 grpc_core::Chttp2IncomingByteStream::Ref                                                  +9  [NEW]\n      [NEW]      +9 grpc_core::Chttp2IncomingByteStream::~Chttp2IncomingByteStream                            +9  [NEW]\n      [NEW]      +2 [Other]                                                                                   +2  [NEW]\n  +0.5%     +19 src/core/ext/filters/http/server/http_server_filter.cc                                   +19  +0.5%\n      [NEW] +2.58Ki server_filter_incoming_metadata(grpc_call_element*, grpc_metadata_batch*) [clone .is +2.58Ki  [NEW]\n      [NEW]    +211 server_filter_outgoing_metadata(grpc_call_element*, grpc_metadata_batch*) [clone .is    +211  [NEW]\n       +11%     +16 hs_on_complete                                                                           +16   +11%\n       +21%      +7 destroy_call_elem                                                                         +7   +21%\n\n  +0.3% +3.69Ki TOTAL                                                                                 +701Ki  +9.4%\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE              FILE SIZE\n ++++++++++++++ GROWIN ++++++++++++++\n  [ = ]       0 [None] +10.8Ki  +0.2%\n\n  [ = ]       0 TOTAL  +10.8Ki  +0.2%\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/370958138",
    "html_url": "https://github.com/grpc/grpc/pull/14607#issuecomment-370958138",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14607",
    "id": 370958138,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDk1ODEzOA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-06T22:52:08Z",
    "updated_at": "2018-03-06T22:52:08Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/370961373",
    "html_url": "https://github.com/grpc/grpc/pull/14607#issuecomment-370961373",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14607",
    "id": 370961373,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDk2MTM3Mw==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-06T23:05:05Z",
    "updated_at": "2018-03-06T23:05:05Z",
    "author_association": "NONE",
    "body": "```\nCorrupt JSON data (indicates timeout or crash): \n    bm_chttp2_transport.BM_TransportStreamSend_32768.opt.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_512.counters.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_16777216.counters.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_1.opt.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_8.counters.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_1.counters.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_64.opt.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_2097152.opt.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_32768.counters.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_16777216.opt.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_512.opt.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_2097152.counters.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_4096.opt.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_262144.counters.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_64.counters.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_8.opt.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_262144.opt.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_134217728.opt.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_134217728.counters.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_4096.counters.new: 10\n\n\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/370968067",
    "html_url": "https://github.com/grpc/grpc/pull/14607#issuecomment-370968067",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14607",
    "id": 370968067,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDk2ODA2Nw==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-06T23:34:55Z",
    "updated_at": "2018-03-06T23:34:55Z",
    "author_association": "NONE",
    "body": "```\nCorrupt JSON data (indicates timeout or crash): \n    bm_chttp2_transport.BM_TransportStreamSend_32768.opt.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_512.counters.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_16777216.counters.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_1.opt.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_8.counters.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_1.counters.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_64.opt.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_2097152.opt.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_32768.counters.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_16777216.opt.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_512.opt.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_2097152.counters.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_4096.opt.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_262144.counters.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_64.counters.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_8.opt.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_262144.opt.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_134217728.opt.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_134217728.counters.new: 10\n    bm_chttp2_transport.BM_TransportStreamSend_4096.counters.new: 10\n\n\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/371208575",
    "html_url": "https://github.com/grpc/grpc/pull/14607#issuecomment-371208575",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14607",
    "id": 371208575,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTIwODU3NQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-07T17:04:57Z",
    "updated_at": "2018-03-07T17:04:57Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n  +0.5% +3.08Ki [None]                                                                                +701Ki  +9.5%\n      +0.5% +3.02Ki [Unmapped]                                                                            +701Ki  +9.6%\n      [NEW]     +64 vtable for grpc_core::ByteStreamCache::CachingByteStream                                 +64  [NEW]\n      [NEW]     +64 vtable for grpc_core::SliceBufferByteStream                                              +64  [NEW]\n      [NEW]     +64 vtable for grpc_core::Chttp2IncomingByteStream                                           +64  [NEW]\n  +0.4%    +112 src/core/ext/filters/client_channel/client_channel.cc                                   +112  +0.4%\n      [NEW]    +197 add_retriable_send_message_op(grpc_call_element*, subchannel_call_retry_state*, subc    +197  [NEW]\n       +16%     +50 invoke_recv_message_callback                                                             +50   +16%\n      [NEW]     +47 grpc_core::LoadBalancingPolicy::SetReresolutionClosureLocked(grpc_closure*) [clone .     +47  [NEW]\n      +1.0%     +32 start_retriable_subchannel_batches                                                       +32  +1.0%\n      +1.8%      +7 [Unmapped]                                                                                +7  +1.8%\n      +0.0%      +1 on_complete                                                                               +1  +0.0%\n  +0.7%     +96 src/core/ext/transport/inproc/inproc_transport.cc                                        +96  +0.7%\n      +1.3%     +40 op_state_machine                                                                         +40  +1.3%\n      +4.2%     +24 message_transfer_locked                                                                  +24  +4.2%\n      +8.3%     +16 [Unmapped]                                                                               +16  +8.3%\n      +1.1%     +16 fail_helper_locked                                                                       +16  +1.1%\n  +1.7%     +80 src/core/ext/filters/http/client/http_client_filter.cc                                   +80  +1.7%\n      +4.3%     +72 hc_start_transport_stream_op_batch                                                       +72  +4.3%\n      +5.1%      +8 pull_slice_from_send_message                                                              +8  +5.1%\n  +2.0%     +64 src/core/ext/transport/chttp2/transport/frame_data.cc                                    +64  +2.0%\n      [NEW] +2.05Ki grpc_deframe_unprocessed_incoming_frames                                             +2.05Ki  [NEW]\n      +7.9%      +3 [Unmapped]                                                                                +3  +7.9%\n  +0.4%     +64 src/core/lib/surface/call.cc                                                             +64  +0.4%\n      [NEW]    +506 set_encodings_accepted_by_peer(grpc_call*, grpc_mdelem, unsigned int*, bool) [clone     +506  [NEW]\n      +8.2%     +29 [Unmapped]                                                                               +29  +8.2%\n      +0.5%     +16 call_start_batch                                                                         +16  +0.5%\n      +3.2%     +11 destroy_call                                                                             +11  +3.2%\n      +1.7%      +5 continue_receiving_slices                                                                 +5  +1.7%\n      +0.4%      +2 receiving_stream_ready                                                                    +2  +0.4%\n      +0.3%      +1 receiving_slice_ready                                                                     +1  +0.3%\n  +5.4%     +64 src/core/lib/transport/byte_stream.cc                                                    +64  +5.4%\n      [NEW]    +308 grpc_core::ByteStreamCache::CachingByteStream::Pull                                     +308  [NEW]\n      [NEW]    +228 grpc_core::SliceBufferByteStream::Pull                                                  +228  [NEW]\n      [NEW]    +137 grpc_core::SliceBufferByteStream::SliceBufferByteStream                                 +137  [NEW]\n      [NEW]     +66 grpc_core::SliceBufferByteStream::Next                                                   +66  [NEW]\n      [NEW]     +58 grpc_core::ByteStreamCache::CachingByteStream::Shutdown                                  +58  [NEW]\n      [NEW]     +50 grpc_core::ByteStreamCache::CachingByteStream::CachingByteStream                         +50  [NEW]\n      [NEW]     +39 grpc_core::ByteStreamCache::CachingByteStream::Next                                      +39  [NEW]\n      [NEW]     +38 grpc_core::SliceBufferByteStream::Shutdown                                               +38  [NEW]\n      [NEW]     +35 grpc_core::ByteStreamCache::~ByteStreamCache                                             +35  [NEW]\n      [NEW]     +34 grpc_core::ByteStreamCache::Destroy                                                      +34  [NEW]\n      [NEW]     +26 grpc_core::SliceBufferByteStream::Orphan                                                 +26  [NEW]\n      [NEW]     +23 grpc_core::ByteStreamCache::ByteStreamCache                                              +23  [NEW]\n      [NEW]     +14 grpc_core::ByteStreamCache::CachingByteStream::~CachingByteStream                        +14  [NEW]\n      [NEW]     +14 grpc_core::SliceBufferByteStream::~SliceBufferByteStream                                 +14  [NEW]\n      +6.5%     +10 [Unmapped]                                                                               +10  +6.5%\n      [NEW]      +9 grpc_core::ByteStreamCache::CachingByteStream::Reset                                      +9  [NEW]\n      [NEW]      +9 grpc_core::ByteStreamCache::CachingByteStream::Orphan                                     +9  [NEW]\n      [NEW]      +2 grpc_core::ByteStreamCache::CachingByteStream::~CachingByteStream                         +2  [NEW]\n      [NEW]      +2 grpc_core::SliceBufferByteStream::~SliceBufferByteStream                                  +2  [NEW]\n  +2.3%     +48 src/core/lib/transport/transport_op_string.cc                                            +48  +2.3%\n      +6.1%     +49 grpc_transport_stream_op_batch_string                                                    +49  +6.1%\n  +0.1%     +43 src/core/ext/transport/chttp2/transport/chttp2_transport.cc                              +43  +0.1%\n      [NEW]    +594 grpc_core::Chttp2IncomingByteStream::Pull                                               +594  [NEW]\n      [NEW]    +583 grpc_core::Chttp2IncomingByteStream::NextLocked                                         +583  [NEW]\n      [NEW]    +319 grpc_core::Chttp2IncomingByteStream::Push                                               +319  [NEW]\n      [NEW]    +223 grpc_core::Chttp2IncomingByteStream::Finished                                           +223  [NEW]\n      [NEW]    +181 grpc_core::Chttp2IncomingByteStream::PublishError                                       +181  [NEW]\n      [NEW]    +101 grpc_core::Chttp2IncomingByteStream::Next                                               +101  [NEW]\n      [NEW]     +76 grpc_core::Chttp2IncomingByteStream::Chttp2IncomingByteStream                            +76  [NEW]\n       +16%     +63 continue_fetching_send_locked                                                            +63   +16%\n      [NEW]     +55 grpc_core::Chttp2IncomingByteStream::Orphan                                              +55  [NEW]\n      [NEW]     +53 grpc_core::Chttp2IncomingByteStream::OrphanLocked                                        +53  [NEW]\n      [NEW]     +46 post_destructive_reclaimer(grpc_chttp2_transport*) [clone .part.28]                      +46  [NEW]\n      +4.7%     +44 grpc_chttp2_maybe_complete_recv_message                                                  +44  +4.7%\n      [NEW]     +43 post_benign_reclaimer(grpc_chttp2_transport*) [clone .part.27]                           +43  [NEW]\n      [NEW]     +42 grpc_core::Chttp2IncomingByteStream::Unref                                               +42  [NEW]\n      +1.2%     +40 perform_stream_op_locked                                                                 +40  +1.2%\n      [NEW]     +26 grpc_core::Chttp2IncomingByteStream::Shutdown                                            +26  [NEW]\n       +17%     +17 complete_fetch_locked                                                                    +17   +17%\n      +1.9%     +12 [Unmapped]                                                                               +12  +1.9%\n      [NEW]      +9 grpc_core::Chttp2IncomingByteStream::Ref                                                  +9  [NEW]\n      [NEW]      +9 grpc_core::Chttp2IncomingByteStream::~Chttp2IncomingByteStream                            +9  [NEW]\n      [NEW]      +2 [Other]                                                                                   +2  [NEW]\n  +0.5%     +19 src/core/ext/filters/http/server/http_server_filter.cc                                   +19  +0.5%\n      [NEW] +2.58Ki server_filter_incoming_metadata(grpc_call_element*, grpc_metadata_batch*) [clone .is +2.58Ki  [NEW]\n      [NEW]    +211 server_filter_outgoing_metadata(grpc_call_element*, grpc_metadata_batch*) [clone .is    +211  [NEW]\n       +11%     +16 hs_on_complete                                                                           +16   +11%\n       +21%      +7 destroy_call_elem                                                                         +7   +21%\n\n  +0.3% +3.66Ki TOTAL                                                                                 +702Ki  +8.8%\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE              FILE SIZE\n ++++++++++++++ GROWIN ++++++++++++++\n  [ = ]       0 [None] +10.8Ki  +0.2%\n\n  [ = ]       0 TOTAL  +10.8Ki  +0.2%\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/371211523",
    "html_url": "https://github.com/grpc/grpc/pull/14607#issuecomment-371211523",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14607",
    "id": 371211523,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTIxMTUyMw==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-07T17:13:58Z",
    "updated_at": "2018-03-07T17:13:58Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/371226045",
    "html_url": "https://github.com/grpc/grpc/pull/14607#issuecomment-371226045",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14607",
    "id": 371226045,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTIyNjA0NQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-07T17:57:59Z",
    "updated_at": "2018-03-07T17:57:59Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] Performance differences noted:\nBenchmark                         atm_add_per_iteration    cpu_time    locks_per_iteration    real_time\n--------------------------------  -----------------------  ----------  ---------------------  -----------\nBM_TransportStreamSend/0          +9%\nBM_TransportStreamSend/1          +18%\nBM_TransportStreamSend/134217728  +82%                     +9999%      +9999%                 +9999%\nBM_TransportStreamSend/16777216   +81%                     +9999%      +9999%                 +9999%\nBM_TransportStreamSend/2097152    +81%                     +1057%      +9999%                 +1056%\nBM_TransportStreamSend/262144     +22%                     +177%                              +177%\nBM_TransportStreamSend/32768      +18%                     +28%                               +28%\nBM_TransportStreamSend/4096       +18%\nBM_TransportStreamSend/512        +18%\nBM_TransportStreamSend/64         +18%\nBM_TransportStreamSend/8          +18%\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/371284790",
    "html_url": "https://github.com/grpc/grpc/pull/14607#issuecomment-371284790",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14607",
    "id": 371284790,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTI4NDc5MA==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-07T21:07:02Z",
    "updated_at": "2018-03-07T21:07:02Z",
    "author_association": "MEMBER",
    "body": "I think this is ready to be reviewed now.  The only remaining test failures are cronet issues, which I've asked Muxi to look at for me.\r\n\r\n@ncteisen, please pay close attention to the bm_chttp2_transport changes.  As per our discussion, I think that benchmark has actually been broken since #14416; with that PR, the transport would clear the contents of the byte stream after the first send_message op, so all subsequent send_message ops would send an empty message.  This PR fixes that, but it does so by adding a bit more slice buffer manipulation inside of the loop, so the benchmark is now actually doing a bit more work than it was before my earlier PR.\r\n\r\nPlease let me know if you have any questions.  Thanks!"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/371302834",
    "html_url": "https://github.com/grpc/grpc/pull/14607#issuecomment-371302834",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14607",
    "id": 371302834,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTMwMjgzNA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-07T22:09:34Z",
    "updated_at": "2018-03-07T22:09:34Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n  +0.5% +3.08Ki [None]                                                                                +701Ki  +9.5%\n      +0.5% +3.02Ki [Unmapped]                                                                            +701Ki  +9.6%\n      [NEW]     +64 vtable for grpc_core::ByteStreamCache::CachingByteStream                                 +64  [NEW]\n      [NEW]     +64 vtable for grpc_core::SliceBufferByteStream                                              +64  [NEW]\n      [NEW]     +64 vtable for grpc_core::Chttp2IncomingByteStream                                           +64  [NEW]\n  +0.4%    +112 src/core/ext/filters/client_channel/client_channel.cc                                   +112  +0.4%\n      [NEW]    +197 add_retriable_send_message_op(grpc_call_element*, subchannel_call_retry_state*, subc    +197  [NEW]\n       +16%     +50 invoke_recv_message_callback                                                             +50   +16%\n      [NEW]     +47 grpc_core::LoadBalancingPolicy::SetReresolutionClosureLocked(grpc_closure*) [clone .     +47  [NEW]\n      +1.0%     +32 start_retriable_subchannel_batches                                                       +32  +1.0%\n      +1.8%      +7 [Unmapped]                                                                                +7  +1.8%\n      +0.0%      +1 on_complete                                                                               +1  +0.0%\n  +0.7%     +96 src/core/ext/transport/inproc/inproc_transport.cc                                        +96  +0.7%\n      +1.3%     +40 op_state_machine                                                                         +40  +1.3%\n      +4.2%     +24 message_transfer_locked                                                                  +24  +4.2%\n      +8.3%     +16 [Unmapped]                                                                               +16  +8.3%\n      +1.1%     +16 fail_helper_locked                                                                       +16  +1.1%\n  +1.7%     +80 src/core/ext/filters/http/client/http_client_filter.cc                                   +80  +1.7%\n      +4.3%     +72 hc_start_transport_stream_op_batch                                                       +72  +4.3%\n      +5.1%      +8 pull_slice_from_send_message                                                              +8  +5.1%\n  +2.0%     +64 src/core/ext/transport/chttp2/transport/frame_data.cc                                    +64  +2.0%\n      [NEW] +2.05Ki grpc_deframe_unprocessed_incoming_frames                                             +2.05Ki  [NEW]\n      +7.9%      +3 [Unmapped]                                                                                +3  +7.9%\n  +0.4%     +64 src/core/lib/surface/call.cc                                                             +64  +0.4%\n      [NEW]    +506 set_encodings_accepted_by_peer(grpc_call*, grpc_mdelem, unsigned int*, bool) [clone     +506  [NEW]\n      +8.2%     +29 [Unmapped]                                                                               +29  +8.2%\n      +0.5%     +16 call_start_batch                                                                         +16  +0.5%\n      +3.2%     +11 destroy_call                                                                             +11  +3.2%\n      +1.7%      +5 continue_receiving_slices                                                                 +5  +1.7%\n      +0.4%      +2 receiving_stream_ready                                                                    +2  +0.4%\n      +0.3%      +1 receiving_slice_ready                                                                     +1  +0.3%\n  +5.4%     +64 src/core/lib/transport/byte_stream.cc                                                    +64  +5.4%\n      [NEW]    +308 grpc_core::ByteStreamCache::CachingByteStream::Pull                                     +308  [NEW]\n      [NEW]    +228 grpc_core::SliceBufferByteStream::Pull                                                  +228  [NEW]\n      [NEW]    +137 grpc_core::SliceBufferByteStream::SliceBufferByteStream                                 +137  [NEW]\n      [NEW]     +66 grpc_core::SliceBufferByteStream::Next                                                   +66  [NEW]\n      [NEW]     +58 grpc_core::ByteStreamCache::CachingByteStream::Shutdown                                  +58  [NEW]\n      [NEW]     +50 grpc_core::ByteStreamCache::CachingByteStream::CachingByteStream                         +50  [NEW]\n      [NEW]     +39 grpc_core::ByteStreamCache::CachingByteStream::Next                                      +39  [NEW]\n      [NEW]     +38 grpc_core::SliceBufferByteStream::Shutdown                                               +38  [NEW]\n      [NEW]     +35 grpc_core::ByteStreamCache::~ByteStreamCache                                             +35  [NEW]\n      [NEW]     +34 grpc_core::ByteStreamCache::Destroy                                                      +34  [NEW]\n      [NEW]     +26 grpc_core::SliceBufferByteStream::Orphan                                                 +26  [NEW]\n      [NEW]     +23 grpc_core::ByteStreamCache::ByteStreamCache                                              +23  [NEW]\n      [NEW]     +14 grpc_core::ByteStreamCache::CachingByteStream::~CachingByteStream                        +14  [NEW]\n      [NEW]     +14 grpc_core::SliceBufferByteStream::~SliceBufferByteStream                                 +14  [NEW]\n      +6.5%     +10 [Unmapped]                                                                               +10  +6.5%\n      [NEW]      +9 grpc_core::ByteStreamCache::CachingByteStream::Reset                                      +9  [NEW]\n      [NEW]      +9 grpc_core::ByteStreamCache::CachingByteStream::Orphan                                     +9  [NEW]\n      [NEW]      +2 grpc_core::ByteStreamCache::CachingByteStream::~CachingByteStream                         +2  [NEW]\n      [NEW]      +2 grpc_core::SliceBufferByteStream::~SliceBufferByteStream                                  +2  [NEW]\n  +2.3%     +48 src/core/lib/transport/transport_op_string.cc                                            +48  +2.3%\n      +6.1%     +49 grpc_transport_stream_op_batch_string                                                    +49  +6.1%\n  +0.1%     +43 src/core/ext/transport/chttp2/transport/chttp2_transport.cc                              +43  +0.1%\n      [NEW]    +594 grpc_core::Chttp2IncomingByteStream::Pull                                               +594  [NEW]\n      [NEW]    +583 grpc_core::Chttp2IncomingByteStream::NextLocked                                         +583  [NEW]\n      [NEW]    +319 grpc_core::Chttp2IncomingByteStream::Push                                               +319  [NEW]\n      [NEW]    +223 grpc_core::Chttp2IncomingByteStream::Finished                                           +223  [NEW]\n      [NEW]    +181 grpc_core::Chttp2IncomingByteStream::PublishError                                       +181  [NEW]\n      [NEW]    +101 grpc_core::Chttp2IncomingByteStream::Next                                               +101  [NEW]\n      [NEW]     +76 grpc_core::Chttp2IncomingByteStream::Chttp2IncomingByteStream                            +76  [NEW]\n       +16%     +63 continue_fetching_send_locked                                                            +63   +16%\n      [NEW]     +55 grpc_core::Chttp2IncomingByteStream::Orphan                                              +55  [NEW]\n      [NEW]     +53 grpc_core::Chttp2IncomingByteStream::OrphanLocked                                        +53  [NEW]\n      [NEW]     +46 post_destructive_reclaimer(grpc_chttp2_transport*) [clone .part.28]                      +46  [NEW]\n      +4.7%     +44 grpc_chttp2_maybe_complete_recv_message                                                  +44  +4.7%\n      [NEW]     +43 post_benign_reclaimer(grpc_chttp2_transport*) [clone .part.27]                           +43  [NEW]\n      [NEW]     +42 grpc_core::Chttp2IncomingByteStream::Unref                                               +42  [NEW]\n      +1.2%     +40 perform_stream_op_locked                                                                 +40  +1.2%\n      [NEW]     +26 grpc_core::Chttp2IncomingByteStream::Shutdown                                            +26  [NEW]\n       +17%     +17 complete_fetch_locked                                                                    +17   +17%\n      +1.9%     +12 [Unmapped]                                                                               +12  +1.9%\n      [NEW]      +9 grpc_core::Chttp2IncomingByteStream::Ref                                                  +9  [NEW]\n      [NEW]      +9 grpc_core::Chttp2IncomingByteStream::~Chttp2IncomingByteStream                            +9  [NEW]\n      [NEW]      +2 [Other]                                                                                   +2  [NEW]\n  +0.5%     +19 src/core/ext/filters/http/server/http_server_filter.cc                                   +19  +0.5%\n      [NEW] +2.58Ki server_filter_incoming_metadata(grpc_call_element*, grpc_metadata_batch*) [clone .is +2.58Ki  [NEW]\n      [NEW]    +211 server_filter_outgoing_metadata(grpc_call_element*, grpc_metadata_batch*) [clone .is    +211  [NEW]\n       +11%     +16 hs_on_complete                                                                           +16   +11%\n       +21%      +7 destroy_call_elem                                                                         +7   +21%\n\n  +0.3% +3.66Ki TOTAL                                                                                 +702Ki  +8.7%\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE              FILE SIZE\n ++++++++++++++ GROWIN ++++++++++++++\n  [ = ]       0 [None] +10.8Ki  +0.2%\n\n  [ = ]       0 TOTAL  +10.8Ki  +0.2%\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/371305375",
    "html_url": "https://github.com/grpc/grpc/pull/14607#issuecomment-371305375",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14607",
    "id": 371305375,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTMwNTM3NQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-07T22:18:27Z",
    "updated_at": "2018-03-07T22:18:27Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/371317019",
    "html_url": "https://github.com/grpc/grpc/pull/14607#issuecomment-371317019",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14607",
    "id": 371317019,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTMxNzAxOQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-07T23:02:57Z",
    "updated_at": "2018-03-07T23:02:57Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] Performance differences noted:\nBenchmark                                                              atm_add_per_iteration    cpu_time    locks_per_iteration    real_time\n---------------------------------------------------------------------  -----------------------  ----------  ---------------------  -----------\nBM_StreamingPingPong<MinInProcess, NoOpMutator, NoOpMutator>/262144/2                           +5%                                +5%\nBM_TransportStreamSend/0                                               +9%\nBM_TransportStreamSend/1                                               +18%                     +6%                                +6%\nBM_TransportStreamSend/134217728                                       +82%                     +9999%      +9999%                 +9999%\nBM_TransportStreamSend/16777216                                        +81%                     +9825%      +9999%                 +9999%\nBM_TransportStreamSend/2097152                                         +81%                     +1100%      +9999%                 +1076%\nBM_TransportStreamSend/262144                                          +22%                     +168%                              +168%\nBM_TransportStreamSend/32768                                           +18%                     +13%                               +13%\nBM_TransportStreamSend/4096                                            +18%\nBM_TransportStreamSend/512                                             +18%\nBM_TransportStreamSend/64                                              +18%                     +11%                               +11%\nBM_TransportStreamSend/8                                               +18%                     +5%                                +5%\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/371370307",
    "html_url": "https://github.com/grpc/grpc/pull/14607#issuecomment-371370307",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14607",
    "id": 371370307,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTM3MDMwNw==",
    "user": {
      "login": "ncteisen",
      "id": 6148140,
      "node_id": "MDQ6VXNlcjYxNDgxNDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6148140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ncteisen",
      "html_url": "https://github.com/ncteisen",
      "followers_url": "https://api.github.com/users/ncteisen/followers",
      "following_url": "https://api.github.com/users/ncteisen/following{/other_user}",
      "gists_url": "https://api.github.com/users/ncteisen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ncteisen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ncteisen/subscriptions",
      "organizations_url": "https://api.github.com/users/ncteisen/orgs",
      "repos_url": "https://api.github.com/users/ncteisen/repos",
      "events_url": "https://api.github.com/users/ncteisen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ncteisen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-08T03:51:42Z",
    "updated_at": "2018-03-08T03:51:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Added comments.\n\nAt a high level, could you comment on when the stream should be `reset()` and when it should be `Orphan()`-ed? That would be very helpful.\n\n---\n\nReviewed 3 of 19 files at r1, 5 of 8 files at r2, 1 of 4 files at r3, 6 of 12 files at r7.\nReview status: 15 of 28 files reviewed at latest revision, 10 unresolved discussions, some commit checks broke.\n\n---\n\n*[src/core/ext/filters/client_channel/client_channel.cc, line 971 at r8](https://reviewable.io:443/reviews/grpc/grpc/14607#-L72fnxdDK1Wg1j9Apya:-L72fnxdDK1Wg1j9Apyb:bki0ut5) ([raw file](https://github.com/grpc/grpc/blob/2d80889be7cabdfaa514c6dbe184f4aa16038293/src/core/ext/filters/client_channel/client_channel.cc#L971)):*\n> ```cpp\n>         static_cast<grpc_core::ByteStreamCache*>(\n>             gpr_arena_alloc(calld->arena, sizeof(grpc_core::ByteStreamCache)));\n>     new (cache) grpc_core::ByteStreamCache(\n> ```\n\nNit; naked use of placement new seems messy. Maybe we could add this functionality to the arena? This could wait until arena gets c++ ized.\n\n---\n\n*[src/core/ext/transport/chttp2/transport/chttp2_transport.cc, line 2815 at r8](https://reviewable.io:443/reviews/grpc/grpc/14607#-L72h8YOFwO1ejdp2FIz:-L72h8YOFwO1ejdp2FJ-:b-cy6jkg) ([raw file](https://github.com/grpc/grpc/blob/2d80889be7cabdfaa514c6dbe184f4aa16038293/src/core/ext/transport/chttp2/transport/chttp2_transport.cc#L2815)):*\n> ```cpp\n>                                     grpc_closure* on_complete) {\n>   GPR_TIMER_SCOPE(\"incoming_byte_stream_next\", 0);\n>   grpc_chttp2_stream* s = stream_;\n> ```\n\nJust use stream_ for the whole function\n\n---\n\n*[src/core/ext/transport/chttp2/transport/chttp2_transport.cc, line 2833 at r8](https://reviewable.io:443/reviews/grpc/grpc/14607#-L72hBHd04ALqhz1XKKR:-L72hBHd04ALqhz1XKKS:b-9z9d8t) ([raw file](https://github.com/grpc/grpc/blob/2d80889be7cabdfaa514c6dbe184f4aa16038293/src/core/ext/transport/chttp2/transport/chttp2_transport.cc#L2833)):*\n> ```cpp\n> grpc_error* Chttp2IncomingByteStream::Pull(grpc_slice* slice) {\n>   GPR_TIMER_SCOPE(\"incoming_byte_stream_pull\", 0);\n>   grpc_chttp2_stream* s = stream_;\n> ```\n\nJust use stream_ for the whole function\n\nsame throughout\n\n---\n\n*[src/core/ext/transport/chttp2/transport/internal.h, line 237 at r8](https://reviewable.io:443/reviews/grpc/grpc/14607#-L72iE-WGnL7K_5tSW1R:-L72iE-WGnL7K_5tSW1S:b-6qam2c) ([raw file](https://github.com/grpc/grpc/blob/2d80889be7cabdfaa514c6dbe184f4aa16038293/src/core/ext/transport/chttp2/transport/internal.h#L237)):*\n> ```objc\n>   void Unref();\n> \n>   void PublishError(grpc_error* error);\n> ```\n\nCan you add comments to these new functions that this class adds?\n\n---\n\n*[src/core/lib/transport/byte_stream.h, line 54 at r8](https://reviewable.io:443/reviews/grpc/grpc/14607#-L7254N4LzDdUywKBeao:-L7254N4LzDdUywKBeap:b-j9xca8) ([raw file](https://github.com/grpc/grpc/blob/2d80889be7cabdfaa514c6dbe184f4aa16038293/src/core/lib/transport/byte_stream.h#L54)):*\n> ```objc\n>   // indicated by Next().\n>   //\n>   // Once a slice is returned into *slice, it is owned by the caller.\n> ```\n\nThe only time this will return error!=GRPC_ERROR_NONE is in shutdown case, is that correct? Can you add a comment here about the return\n\n---\n\n*[src/core/lib/transport/byte_stream.h, line 124 at r8](https://reviewable.io:443/reviews/grpc/grpc/14607#-L72crs2d7kt119Gzi2D:-L72crs2d7kt119Gzi2E:bixk3kn) ([raw file](https://github.com/grpc/grpc/blob/2d80889be7cabdfaa514c6dbe184f4aa16038293/src/core/lib/transport/byte_stream.h#L124)):*\n> ```objc\n> class ByteStreamCache {\n>  public:\n>   class CachingByteStream : public ByteStream {\n> ```\n\nWhy nest this class publicly inside of ByteStreamCache?\n\nIt looks like they are both used by app code, so why not keep them separate\n\n---\n\n*[src/core/lib/transport/transport.h, line 220 at r8](https://reviewable.io:443/reviews/grpc/grpc/14607#-L72dDEXf0asLxC4YpEx:-L72dDEXf0asLxC4YpEy:bci1wxs) ([raw file](https://github.com/grpc/grpc/blob/cab01dbfcdba924476feebc55b098b1b709cac3f/src/core/lib/transport/transport.h#L220)):*\n> ```objc\n>     // containing a received message.\n>     // The caller is responsible for calling grpc_byte_stream_destroy()\n>     // on this byte stream.\n> ```\n\nDoes the caller still have the responsibility of Orphaning the ByteStream?\n\n---\n\n*[src/core/lib/transport/transport_op_string.cc, line 85 at r8](https://reviewable.io:443/reviews/grpc/grpc/14607#-L72dWELKA4PjaTxrlHp:-L72dWELKA4PjaTxrlHq:b-5io33o) ([raw file](https://github.com/grpc/grpc/blob/2d80889be7cabdfaa514c6dbe184f4aa16038293/src/core/lib/transport/transport_op_string.cc#L85)):*\n> ```cpp\n>       // This can happen when we check a batch after the transport has\n>       // processed and cleared the send_message op.\n>       tmp = gpr_strdup(\"SEND_MESSAGE(nullptr)\");\n> ```\n\nCan you include the information in the comment in the actual log? It can be shortened. Something like `SEND_MESSAGE(flag and length unknown, transport already cleared op)`\n\n---\n\n*[src/cpp/common/channel_filter.h, line 185 at r8](https://reviewable.io:443/reviews/grpc/grpc/14607#-L72e3J5EtaDp3bImnjG:-L72e3J5EtaDp3bImnjH:b-v8iux5) ([raw file](https://github.com/grpc/grpc/blob/2d80889be7cabdfaa514c6dbe184f4aa16038293/src/cpp/common/channel_filter.h#L185)):*\n> ```objc\n>   }\n> \n>   grpc_core::OrphanablePtr<grpc_core::ByteStream>* send_message() const {\n> ```\n\nWhy change the semantics instead of returning `grpc_core::OrphanablePtr<grpc_core::ByteStream>` and doing:\n\n```\n    return op_->send_message ? std::move(op_->payload->send_message.send_message)\n                             : grpc_core::OrphanablePtr<grpc_core::ByteStream>();\n```\n\n---\n\n*[test/cpp/microbenchmarks/bm_chttp2_transport.cc, line 587 at r8](https://reviewable.io:443/reviews/grpc/grpc/14607#-L72f-FlOJdOaA4C-8Ep:-L72f-FlOJdOaA4C-8Eq:bobl5hv) ([raw file](https://github.com/grpc/grpc/blob/2d80889be7cabdfaa514c6dbe184f4aa16038293/test/cpp/microbenchmarks/bm_chttp2_transport.cc#L587)):*\n> ```cpp\n>     do {\n>       if (received == recv_stream->length()) {\n>         recv_stream.reset();\n> ```\n\nWhy not Orphan? Will that automatically happen when recv_stream goes out of scope at the end of the function? \n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/14607#-:-L72iiJZVTwEFdiMhRRK:b7yw9u7)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/371514898",
    "html_url": "https://github.com/grpc/grpc/pull/14607#issuecomment-371514898",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14607",
    "id": 371514898,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTUxNDg5OA==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-08T15:08:21Z",
    "updated_at": "2018-03-08T15:08:21Z",
    "author_association": "MEMBER",
    "body": "The `reset()` method is called on the `OrphanablePtr<>` containing the `ByteStream` object, not on the `ByteStream` object itself.  It has the effect of calling the `Orphan()` method on the `ByteStream` object contained in the `OrphanablePtr<>`.  So the two do basically the same thing.  But whenever we are holding the byte stream in an `OrphanablePtr<>` (which is almost all cases), we want to use the former instead of the latter, or else the `OrphanablePtr<>` will call `Orphan()` a second time when it goes out of scope.\n\nI've done a quick audit to make sure we're using the right approach in all places, and I found one spot where we were calling `Orphan()` directly instead of resetting the pointer.  That's fixed now.\n\n---\n\nReview status: 15 of 28 files reviewed at latest revision, 10 unresolved discussions, some commit checks broke.\n\n---\n\n*[src/core/ext/filters/client_channel/client_channel.cc, line 971 at r8](https://reviewable.io:443/reviews/grpc/grpc/14607#-L72fnxdDK1Wg1j9Apya:-L750QeSLha4tWxqILqO:bkxjeob) ([raw file](https://github.com/grpc/grpc/blob/2d80889be7cabdfaa514c6dbe184f4aa16038293/src/core/ext/filters/client_channel/client_channel.cc#L971)):*\n<details><summary><i>Previously, ncteisen (Noah Eisen) wrote…</i></summary><blockquote>\n\nNit; naked use of placement new seems messy. Maybe we could add this functionality to the arena? This could wait until arena gets c++ ized.\n</blockquote></details>\n\nYeah, I don't see any reasonable way of cleaning this up until we have time to convert the arena code to C++.  That will have to wait.\n\n---\n\n*[src/core/ext/transport/chttp2/transport/chttp2_transport.cc, line 2815 at r8](https://reviewable.io:443/reviews/grpc/grpc/14607#-L72h8YOFwO1ejdp2FIz:-L751ECYZgX-j2Bl4Rcz:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/2d80889be7cabdfaa514c6dbe184f4aa16038293/src/core/ext/transport/chttp2/transport/chttp2_transport.cc#L2815)):*\n<details><summary><i>Previously, ncteisen (Noah Eisen) wrote…</i></summary><blockquote>\n\nJust use stream_ for the whole function\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/ext/transport/chttp2/transport/chttp2_transport.cc, line 2833 at r8](https://reviewable.io:443/reviews/grpc/grpc/14607#-L72hBHd04ALqhz1XKKR:-L751Fyp7vPksO1AC_Tj:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/2d80889be7cabdfaa514c6dbe184f4aa16038293/src/core/ext/transport/chttp2/transport/chttp2_transport.cc#L2833)):*\n<details><summary><i>Previously, ncteisen (Noah Eisen) wrote…</i></summary><blockquote>\n\nJust use stream_ for the whole function\n\nsame throughout\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/ext/transport/chttp2/transport/internal.h, line 237 at r8](https://reviewable.io:443/reviews/grpc/grpc/14607#-L72iE-WGnL7K_5tSW1R:-L752TeUntmLo-zU821L:busoxy5) ([raw file](https://github.com/grpc/grpc/blob/2d80889be7cabdfaa514c6dbe184f4aa16038293/src/core/ext/transport/chttp2/transport/internal.h#L237)):*\n<details><summary><i>Previously, ncteisen (Noah Eisen) wrote…</i></summary><blockquote>\n\nCan you add comments to these new functions that this class adds?\n</blockquote></details>\n\nTo be honest, I'm not sure enough of what these methods do or their exact semantics to document them effectively.  These aren't actually new methods; they were just previously standalone static functions in the .cc file.  And they weren't documented there, so I'm not sure exactly what to put here.\n\nIf you can tell me what text to use for each one, I'd be happy to add it. :)\n\n---\n\n*[src/core/lib/transport/byte_stream.h, line 54 at r8](https://reviewable.io:443/reviews/grpc/grpc/14607#-L7254N4LzDdUywKBeao:-L7534JBv_6ISvNtS1b0:b-6bn8up) ([raw file](https://github.com/grpc/grpc/blob/2d80889be7cabdfaa514c6dbe184f4aa16038293/src/core/lib/transport/byte_stream.h#L54)):*\n<details><summary><i>Previously, ncteisen (Noah Eisen) wrote…</i></summary><blockquote>\n\nThe only time this will return error!=GRPC_ERROR_NONE is in shutdown case, is that correct? Can you add a comment here about the return\n</blockquote></details>\n\nThis interface does not guarantee that the only time we will return an error is on shutdown.  It's conceivable that an implementation might return an error for some other reason, and I don't see any benefit to disallowing that.\n\n---\n\n*[src/core/lib/transport/byte_stream.h, line 124 at r8](https://reviewable.io:443/reviews/grpc/grpc/14607#-L72crs2d7kt119Gzi2D:-L753H9zVPP4nQXAKo91:bo0919c) ([raw file](https://github.com/grpc/grpc/blob/2d80889be7cabdfaa514c6dbe184f4aa16038293/src/core/lib/transport/byte_stream.h#L124)):*\n<details><summary><i>Previously, ncteisen (Noah Eisen) wrote…</i></summary><blockquote>\n\nWhy nest this class publicly inside of ByteStreamCache?\n\nIt looks like they are both used by app code, so why not keep them separate\n</blockquote></details>\n\nThe two classes are inextricably linked (`CachingByteStream` requires `ByteStreamCache`, and `ByteStreamCache` is useless without `CachingByteStream`), and I think putting them together makes that fact clear.  If they were two independent classes, then it would not be obvious that they're inherently related.  It would also unnecessarily clutter the `grpc_core` namespace.\n\nI was actually thinking that it might make more sense to have `CachingByteStream` contain `ByteStreamCache` instead of the other way around, since the byte stream is the main idea here; the cache exists only to support the byte stream.  But doing it this way allows `CachingByteStream` to access  the internals of `ByteStreamCache` without being a friend, which seems like a nice property.\n\n---\n\n*[src/core/lib/transport/transport.h, line 220 at r8](https://reviewable.io:443/reviews/grpc/grpc/14607#-L72dDEXf0asLxC4YpEx:-L754WjhD80u5NdV1R6Z:bp13io) ([raw file](https://github.com/grpc/grpc/blob/cab01dbfcdba924476feebc55b098b1b709cac3f/src/core/lib/transport/transport.h#L220)):*\n<details><summary><i>Previously, ncteisen (Noah Eisen) wrote…</i></summary><blockquote>\n\nDoes the caller still have the responsibility of Orphaning the ByteStream?\n</blockquote></details>\n\nYes, but that no longer needs to be documented, because the compiler will enforce it.  That's one of the main benefits of smart pointers.\n\n---\n\n*[src/core/lib/transport/transport_op_string.cc, line 85 at r8](https://reviewable.io:443/reviews/grpc/grpc/14607#-L72dWELKA4PjaTxrlHp:-L754q9h9HMWbFfqV__P:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/2d80889be7cabdfaa514c6dbe184f4aa16038293/src/core/lib/transport/transport_op_string.cc#L85)):*\n<details><summary><i>Previously, ncteisen (Noah Eisen) wrote…</i></summary><blockquote>\n\nCan you include the information in the comment in the actual log? It can be shortened. Something like `SEND_MESSAGE(flag and length unknown, transport already cleared op)`\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/cpp/common/channel_filter.h, line 185 at r8](https://reviewable.io:443/reviews/grpc/grpc/14607#-L72e3J5EtaDp3bImnjG:-L754viVmuS-VGzh9tu2:b-ft88m2) ([raw file](https://github.com/grpc/grpc/blob/2d80889be7cabdfaa514c6dbe184f4aa16038293/src/cpp/common/channel_filter.h#L185)):*\n<details><summary><i>Previously, ncteisen (Noah Eisen) wrote…</i></summary><blockquote>\n\nWhy change the semantics instead of returning `grpc_core::OrphanablePtr<grpc_core::ByteStream>` and doing:\n\n```\n    return op_->send_message ? std::move(op_->payload->send_message.send_message)\n                             : grpc_core::OrphanablePtr<grpc_core::ByteStream>();\n```\n</blockquote></details>\n\nBecause there are a lot of cases where a filter wants to inspect the byte stream without modifying it.\n\nIn general, I think this API is fairly ugly.  It will go away completely once we C++-ify the filter API in core.\n\n---\n\n*[test/cpp/microbenchmarks/bm_chttp2_transport.cc, line 587 at r8](https://reviewable.io:443/reviews/grpc/grpc/14607#-L72f-FlOJdOaA4C-8Ep:-L755_j7td3AUpPzJhwN:b-wvfnw2) ([raw file](https://github.com/grpc/grpc/blob/2d80889be7cabdfaa514c6dbe184f4aa16038293/test/cpp/microbenchmarks/bm_chttp2_transport.cc#L587)):*\n<details><summary><i>Previously, ncteisen (Noah Eisen) wrote…</i></summary><blockquote>\n\nWhy not Orphan? Will that automatically happen when recv_stream goes out of scope at the end of the function? \n</blockquote></details>\n\nResetting the `OrphanablePtr<>` here will call the byte stream's `Orphan()` method.\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/14607#-:-L755rnQCIYJOz6fK8_Z:b-77kbfn)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/371515880",
    "html_url": "https://github.com/grpc/grpc/pull/14607#issuecomment-371515880",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14607",
    "id": 371515880,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTUxNTg4MA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-08T15:11:32Z",
    "updated_at": "2018-03-08T15:11:32Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n  +0.5% +3.24Ki [None]                                                                                +701Ki   +10%\n      +0.6% +3.11Ki [Unmapped]                                                                            +701Ki   +10%\n      [NEW]     +64 vtable for grpc_core::ByteStreamCache::CachingByteStream                                 +64  [NEW]\n      [NEW]     +64 vtable for grpc_core::SliceBufferByteStream                                              +64  [NEW]\n      [NEW]     +64 vtable for grpc_core::Chttp2IncomingByteStream                                           +64  [NEW]\n      +2.9%     +32 [None]                                                                                     0  [ = ]\n  +0.4%    +123 src/core/ext/transport/chttp2/transport/chttp2_transport.cc                             +123  +0.4%\n      [NEW]    +668 grpc_core::Chttp2IncomingByteStream::Pull                                               +668  [NEW]\n      [NEW]    +583 grpc_core::Chttp2IncomingByteStream::NextLocked                                         +583  [NEW]\n      [NEW]    +319 grpc_core::Chttp2IncomingByteStream::Push                                               +319  [NEW]\n      [NEW]    +226 grpc_core::Chttp2IncomingByteStream::Finished                                           +226  [NEW]\n      [NEW]    +189 grpc_core::Chttp2IncomingByteStream::PublishError                                       +189  [NEW]\n      [NEW]    +101 grpc_core::Chttp2IncomingByteStream::Next                                               +101  [NEW]\n      [NEW]     +76 grpc_core::Chttp2IncomingByteStream::Chttp2IncomingByteStream                            +76  [NEW]\n       +16%     +63 continue_fetching_send_locked                                                            +63   +16%\n      [NEW]     +55 grpc_core::Chttp2IncomingByteStream::Orphan                                              +55  [NEW]\n      [NEW]     +53 grpc_core::Chttp2IncomingByteStream::OrphanLocked                                        +53  [NEW]\n      [NEW]     +46 post_destructive_reclaimer(grpc_chttp2_transport*) [clone .part.28]                      +46  [NEW]\n      +4.7%     +44 grpc_chttp2_maybe_complete_recv_message                                                  +44  +4.7%\n      [NEW]     +43 post_benign_reclaimer(grpc_chttp2_transport*) [clone .part.27]                           +43  [NEW]\n      [NEW]     +42 grpc_core::Chttp2IncomingByteStream::Unref                                               +42  [NEW]\n      +1.2%     +40 perform_stream_op_locked                                                                 +40  +1.2%\n      [NEW]     +26 grpc_core::Chttp2IncomingByteStream::Shutdown                                            +26  [NEW]\n       +17%     +17 complete_fetch_locked                                                                    +17   +17%\n      [NEW]      +9 grpc_core::Chttp2IncomingByteStream::Ref                                                  +9  [NEW]\n      [NEW]      +9 grpc_core::Chttp2IncomingByteStream::~Chttp2IncomingByteStream                            +9  [NEW]\n      +1.1%      +7 [Unmapped]                                                                                +7  +1.1%\n      [NEW]      +2 [Other]                                                                                   +2  [NEW]\n  +0.4%    +112 src/core/ext/filters/client_channel/client_channel.cc                                   +112  +0.4%\n      [NEW]    +197 add_retriable_send_message_op(grpc_call_element*, subchannel_call_retry_state*, subc    +197  [NEW]\n       +16%     +50 invoke_recv_message_callback                                                             +50   +16%\n      [NEW]     +47 grpc_core::LoadBalancingPolicy::SetReresolutionClosureLocked(grpc_closure*) [clone .     +47  [NEW]\n      +1.0%     +32 start_retriable_subchannel_batches                                                       +32  +1.0%\n      +1.8%      +7 [Unmapped]                                                                                +7  +1.8%\n      +0.0%      +1 on_complete                                                                               +1  +0.0%\n  +0.7%     +96 src/core/ext/transport/inproc/inproc_transport.cc                                        +96  +0.7%\n      +1.3%     +40 op_state_machine                                                                         +40  +1.3%\n      +4.2%     +24 message_transfer_locked                                                                  +24  +4.2%\n      +8.3%     +16 [Unmapped]                                                                               +16  +8.3%\n      +1.1%     +16 fail_helper_locked                                                                       +16  +1.1%\n  +1.7%     +80 src/core/ext/filters/http/client/http_client_filter.cc                                   +80  +1.7%\n      +4.3%     +72 hc_start_transport_stream_op_batch                                                       +72  +4.3%\n      +5.1%      +8 pull_slice_from_send_message                                                              +8  +5.1%\n  +2.0%     +64 src/core/ext/transport/chttp2/transport/frame_data.cc                                    +64  +2.0%\n      [NEW] +2.05Ki grpc_deframe_unprocessed_incoming_frames                                             +2.05Ki  [NEW]\n      +7.9%      +3 [Unmapped]                                                                                +3  +7.9%\n  +0.4%     +64 src/core/lib/surface/call.cc                                                             +64  +0.4%\n      [NEW]    +506 set_encodings_accepted_by_peer(grpc_call*, grpc_mdelem, unsigned int*, bool) [clone     +506  [NEW]\n      +8.2%     +29 [Unmapped]                                                                               +29  +8.2%\n      +0.5%     +16 call_start_batch                                                                         +16  +0.5%\n      +3.2%     +11 destroy_call                                                                             +11  +3.2%\n      +1.7%      +5 continue_receiving_slices                                                                 +5  +1.7%\n      +0.4%      +2 receiving_stream_ready                                                                    +2  +0.4%\n      +0.3%      +1 receiving_slice_ready                                                                     +1  +0.3%\n  +5.4%     +64 src/core/lib/transport/byte_stream.cc                                                    +64  +5.4%\n      [NEW]    +308 grpc_core::ByteStreamCache::CachingByteStream::Pull                                     +308  [NEW]\n      [NEW]    +228 grpc_core::SliceBufferByteStream::Pull                                                  +228  [NEW]\n      [NEW]    +137 grpc_core::SliceBufferByteStream::SliceBufferByteStream                                 +137  [NEW]\n      [NEW]     +66 grpc_core::SliceBufferByteStream::Next                                                   +66  [NEW]\n      [NEW]     +58 grpc_core::ByteStreamCache::CachingByteStream::Shutdown                                  +58  [NEW]\n      [NEW]     +50 grpc_core::ByteStreamCache::CachingByteStream::CachingByteStream                         +50  [NEW]\n      [NEW]     +39 grpc_core::ByteStreamCache::CachingByteStream::Next                                      +39  [NEW]\n      [NEW]     +38 grpc_core::SliceBufferByteStream::Shutdown                                               +38  [NEW]\n      [NEW]     +35 grpc_core::ByteStreamCache::~ByteStreamCache                                             +35  [NEW]\n      [NEW]     +34 grpc_core::ByteStreamCache::Destroy                                                      +34  [NEW]\n      [NEW]     +26 grpc_core::SliceBufferByteStream::Orphan                                                 +26  [NEW]\n      [NEW]     +23 grpc_core::ByteStreamCache::ByteStreamCache                                              +23  [NEW]\n      [NEW]     +14 grpc_core::ByteStreamCache::CachingByteStream::~CachingByteStream                        +14  [NEW]\n      [NEW]     +14 grpc_core::SliceBufferByteStream::~SliceBufferByteStream                                 +14  [NEW]\n      +6.5%     +10 [Unmapped]                                                                               +10  +6.5%\n      [NEW]      +9 grpc_core::ByteStreamCache::CachingByteStream::Reset                                      +9  [NEW]\n      [NEW]      +9 grpc_core::ByteStreamCache::CachingByteStream::Orphan                                     +9  [NEW]\n      [NEW]      +2 grpc_core::ByteStreamCache::CachingByteStream::~CachingByteStream                         +2  [NEW]\n      [NEW]      +2 grpc_core::SliceBufferByteStream::~SliceBufferByteStream                                  +2  [NEW]\n  +2.3%     +48 src/core/lib/transport/transport_op_string.cc                                            +48  +2.3%\n      +6.1%     +49 grpc_transport_stream_op_batch_string                                                    +49  +6.1%\n  +0.5%     +19 src/core/ext/filters/http/server/http_server_filter.cc                                   +19  +0.5%\n      [NEW] +2.58Ki server_filter_incoming_metadata(grpc_call_element*, grpc_metadata_batch*) [clone .is +2.58Ki  [NEW]\n      [NEW]    +211 server_filter_outgoing_metadata(grpc_call_element*, grpc_metadata_batch*) [clone .is    +211  [NEW]\n       +11%     +16 hs_on_complete                                                                           +16   +11%\n       +21%      +7 destroy_call_elem                                                                         +7   +21%\n\n  +0.3% +3.89Ki TOTAL                                                                                 +702Ki  +9.4%\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE              FILE SIZE\n ++++++++++++++ GROWIN ++++++++++++++\n  [ = ]       0 [None] +10.8Ki  +0.2%\n\n  [ = ]       0 TOTAL  +10.8Ki  +0.2%\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/371518894",
    "html_url": "https://github.com/grpc/grpc/pull/14607#issuecomment-371518894",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14607",
    "id": 371518894,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTUxODg5NA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-08T15:20:44Z",
    "updated_at": "2018-03-08T15:20:44Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/371532889",
    "html_url": "https://github.com/grpc/grpc/pull/14607#issuecomment-371532889",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14607",
    "id": 371532889,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTUzMjg4OQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-08T16:03:35Z",
    "updated_at": "2018-03-08T16:03:35Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] Performance differences noted:\nBenchmark                         atm_add_per_iteration    cpu_time    locks_per_iteration    real_time\n--------------------------------  -----------------------  ----------  ---------------------  -----------\nBM_HasClearGrpcStatus<ErrorNone>                           +12%                               +12%\nBM_TransportStreamSend/0          +9%\nBM_TransportStreamSend/1          +18%\nBM_TransportStreamSend/134217728  +82%                     +9999%      +9999%                 +9999%\nBM_TransportStreamSend/16777216   +81%                     +9539%      +9999%                 +9830%\nBM_TransportStreamSend/2097152    +81%                     +1169%      +9999%                 +1235%\nBM_TransportStreamSend/262144     +22%                     +169%                              +169%\nBM_TransportStreamSend/32768      +18%                     +30%                               +30%\nBM_TransportStreamSend/4096       +18%                     +8%                                +8%\nBM_TransportStreamSend/512        +18%\nBM_TransportStreamSend/64         +18%\nBM_TransportStreamSend/8          +18%                     +16%                               +16%\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/371537039",
    "html_url": "https://github.com/grpc/grpc/pull/14607#issuecomment-371537039",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14607",
    "id": 371537039,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTUzNzAzOQ==",
    "user": {
      "login": "ncteisen",
      "id": 6148140,
      "node_id": "MDQ6VXNlcjYxNDgxNDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6148140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ncteisen",
      "html_url": "https://github.com/ncteisen",
      "followers_url": "https://api.github.com/users/ncteisen/followers",
      "following_url": "https://api.github.com/users/ncteisen/following{/other_user}",
      "gists_url": "https://api.github.com/users/ncteisen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ncteisen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ncteisen/subscriptions",
      "organizations_url": "https://api.github.com/users/ncteisen/orgs",
      "repos_url": "https://api.github.com/users/ncteisen/repos",
      "events_url": "https://api.github.com/users/ncteisen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ncteisen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-08T16:16:37Z",
    "updated_at": "2018-03-08T16:16:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the detailed responses. LGTM\n\n---\n\nReviewed 1 of 8 files at r2, 1 of 12 files at r7.\nReview status: 15 of 28 files reviewed at latest revision, 1 unresolved discussion, some commit checks failed.\n\n---\n\n*[src/core/ext/transport/chttp2/transport/internal.h, line 237 at r8](https://reviewable.io:443/reviews/grpc/grpc/14607#-L72iE-WGnL7K_5tSW1R:-L75N-ROkl9u4mTH91MT:bdjh7jp) ([raw file](https://github.com/grpc/grpc/blob/2d80889be7cabdfaa514c6dbe184f4aa16038293/src/core/ext/transport/chttp2/transport/internal.h#L237)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nTo be honest, I'm not sure enough of what these methods do or their exact semantics to document them effectively.  These aren't actually new methods; they were just previously standalone static functions in the .cc file.  And they weren't documented there, so I'm not sure exactly what to put here.\n\nIf you can tell me what text to use for each one, I'd be happy to add it. :)\n</blockquote></details>\n\nOk, I will just take the AI for that and do it separately. Doesn't make sense to block this change\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/14607#-:-L75OSFuujK3d1SK3J4q:b-24rxvk)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/371539208",
    "html_url": "https://github.com/grpc/grpc/pull/14607#issuecomment-371539208",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14607",
    "id": 371539208,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTUzOTIwOA==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-08T16:23:26Z",
    "updated_at": "2018-03-08T16:23:46Z",
    "author_association": "MEMBER",
    "body": "Noah, any concerns about the changes reported by bm_diff?  I suspect that these are due to the fact that the benchmark was previously broken, but I want to make sure they look sane to you before merging.  (Perhaps it would be useful to compare the new performance numbers with those from before #14416?)"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/371555507",
    "html_url": "https://github.com/grpc/grpc/pull/14607#issuecomment-371555507",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14607",
    "id": 371555507,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTU1NTUwNw==",
    "user": {
      "login": "ncteisen",
      "id": 6148140,
      "node_id": "MDQ6VXNlcjYxNDgxNDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6148140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ncteisen",
      "html_url": "https://github.com/ncteisen",
      "followers_url": "https://api.github.com/users/ncteisen/followers",
      "following_url": "https://api.github.com/users/ncteisen/following{/other_user}",
      "gists_url": "https://api.github.com/users/ncteisen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ncteisen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ncteisen/subscriptions",
      "organizations_url": "https://api.github.com/users/ncteisen/orgs",
      "repos_url": "https://api.github.com/users/ncteisen/repos",
      "events_url": "https://api.github.com/users/ncteisen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ncteisen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-08T17:12:10Z",
    "updated_at": "2018-03-08T17:12:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "The logic looked good to me, but I will get some numbers.\r\n\r\nThis should actually be a one liner using the bm_main tool I wrote a while back...."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/371570264",
    "html_url": "https://github.com/grpc/grpc/pull/14607#issuecomment-371570264",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14607",
    "id": 371570264,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTU3MDI2NA==",
    "user": {
      "login": "ncteisen",
      "id": 6148140,
      "node_id": "MDQ6VXNlcjYxNDgxNDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6148140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ncteisen",
      "html_url": "https://github.com/ncteisen",
      "followers_url": "https://api.github.com/users/ncteisen/followers",
      "following_url": "https://api.github.com/users/ncteisen/following{/other_user}",
      "gists_url": "https://api.github.com/users/ncteisen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ncteisen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ncteisen/subscriptions",
      "organizations_url": "https://api.github.com/users/ncteisen/orgs",
      "repos_url": "https://api.github.com/users/ncteisen/repos",
      "events_url": "https://api.github.com/users/ncteisen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ncteisen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-08T17:59:36Z",
    "updated_at": "2018-03-08T17:59:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hmm, using this command: `tools/profiling/microbenchmarks/bm_diff/bm_main.py -b bm_chttp2_transport -d 8224c45866 -l 20` I still see the same microbench difference\r\n\r\n```\r\nBenchmark                         atm_add_per_iteration    cpu_time    locks_per_iteration    real_time\r\n--------------------------------  -----------------------  ----------  ---------------------  -----------\r\nBM_TransportStreamSend/0          +9%\r\nBM_TransportStreamSend/1          +18%\r\nBM_TransportStreamSend/134217728  +82%                     +9999%      +9999%                 +9999%\r\nBM_TransportStreamSend/16777216   +81%                     +7426%      +9999%                 +9085%\r\nBM_TransportStreamSend/2097152    +81%                     +848%       +9999%                 +1174%\r\nBM_TransportStreamSend/262144     +22%                     +134%                              +134%\r\nBM_TransportStreamSend/32768      +18%                     +30%                               +29%\r\nBM_TransportStreamSend/4096       +18%                     +9%                                +9%\r\nBM_TransportStreamSend/512        +18%                     +10%                               +10%\r\nBM_TransportStreamSend/64         +18%                     +20%                               +20%\r\nBM_TransportStreamSend/8          +18%\r\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/371683538",
    "html_url": "https://github.com/grpc/grpc/pull/14607#issuecomment-371683538",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14607",
    "id": 371683538,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTY4MzUzOA==",
    "user": {
      "login": "ncteisen",
      "id": 6148140,
      "node_id": "MDQ6VXNlcjYxNDgxNDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6148140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ncteisen",
      "html_url": "https://github.com/ncteisen",
      "followers_url": "https://api.github.com/users/ncteisen/followers",
      "following_url": "https://api.github.com/users/ncteisen/following{/other_user}",
      "gists_url": "https://api.github.com/users/ncteisen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ncteisen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ncteisen/subscriptions",
      "organizations_url": "https://api.github.com/users/ncteisen/orgs",
      "repos_url": "https://api.github.com/users/ncteisen/repos",
      "events_url": "https://api.github.com/users/ncteisen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ncteisen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-09T01:32:24Z",
    "updated_at": "2018-03-09T01:32:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "I did some performance tests. I think the benchmark has been broken since before #14416, possible since it was created...\r\n\r\nMy guess is that even before the byte_buffer ownership PR, the internals of the slice_buffer were getting cleared out, causing the majority of the sends to be 0-byte. I can do more testing tomorrow to make sure of this. Regardless, we should talk to make sure I am not way off base here"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/371843733",
    "html_url": "https://github.com/grpc/grpc/pull/14607#issuecomment-371843733",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14607",
    "id": 371843733,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTg0MzczMw==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-09T15:24:24Z",
    "updated_at": "2018-03-09T15:24:24Z",
    "author_association": "MEMBER",
    "body": "Actually, I suspect you're right.  This benchmark has probably been broken since #12306.  Can you compare the results of this benchmark from this PR with those from right before #12306?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/371844036",
    "html_url": "https://github.com/grpc/grpc/pull/14607#issuecomment-371844036",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14607",
    "id": 371844036,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTg0NDAzNg==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-09T15:25:35Z",
    "updated_at": "2018-03-09T15:25:35Z",
    "author_association": "MEMBER",
    "body": "As further evidence for #12306 being the problem, note that the bm_diff output for that PR shows a significant reduction in time for this benchmark."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/371870798",
    "html_url": "https://github.com/grpc/grpc/pull/14607#issuecomment-371870798",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14607",
    "id": 371870798,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTg3MDc5OA==",
    "user": {
      "login": "ncteisen",
      "id": 6148140,
      "node_id": "MDQ6VXNlcjYxNDgxNDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6148140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ncteisen",
      "html_url": "https://github.com/ncteisen",
      "followers_url": "https://api.github.com/users/ncteisen/followers",
      "following_url": "https://api.github.com/users/ncteisen/following{/other_user}",
      "gists_url": "https://api.github.com/users/ncteisen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ncteisen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ncteisen/subscriptions",
      "organizations_url": "https://api.github.com/users/ncteisen/orgs",
      "repos_url": "https://api.github.com/users/ncteisen/repos",
      "events_url": "https://api.github.com/users/ncteisen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ncteisen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-09T16:51:43Z",
    "updated_at": "2018-03-09T16:51:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\r\n[microbenchmarks] Performance differences noted:\r\nBenchmark                                                                       allocs_per_iteration    atm_add_per_iteration    atm_cas_per_iteration    cpu_time    locks_per_iteration    nows_per_iteration    real_time\r\n------------------------------------------------------------------------------  ----------------------  -----------------------  -----------------------  ----------  ---------------------  --------------------  -----------\r\nBM_StreamCreateDestroy                                                          +9999%                  +520%                    +100%                    +424%       +9999%                 +9999%                +423%\r\nBM_StreamCreateSendInitialMetadataDestroy<RepresentativeClientInitialMetadata>                          +66%                     +14%                                 +9999%\r\nBM_TransportEmptyOp                                                                                     +50%\r\nBM_TransportStreamRecv/0                                                                                +41%                                                                                 -99%\r\nBM_TransportStreamRecv/1                                                                                +41%                                                                                 -99%\r\nBM_TransportStreamRecv/512                                                                              +25%                                                                                 -99%\r\nBM_TransportStreamRecv/64                                                                               +25%                                                                                 -99%\r\nBM_TransportStreamRecv/8                                                                                +6%                                                                                  -99%\r\nBM_TransportStreamSend/0                                                                                +99%\r\nBM_TransportStreamSend/1                                                                                +116%                                             +14%                                                     +14%\r\nBM_TransportStreamSend/512                                                                              +85%                                              +11%                                                     +10%\r\nBM_TransportStreamSend/64                                                                               +85%                                              +11%                                                     +11%\r\nBM_TransportStreamSend/8                                                                                +116%                                             +20%                                                     +20%\r\n```"
  }
]
