[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/380933779",
    "html_url": "https://github.com/grpc/grpc/pull/15044#issuecomment-380933779",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15044",
    "id": 380933779,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDkzMzc3OQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-12T20:26:29Z",
    "updated_at": "2018-04-12T20:26:29Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n  +0.1%     +48 src/core/ext/transport/chttp2/transport/chttp2_transport.cc                              +48  +0.1%\n      +2.8%     +23 destroy_stream_locked                                                                    +23  +2.8%\n      +4.9%     +18 grpc_chttp2_add_incoming_goaway                                                          +18  +4.9%\n      +7.7%     +17 keepalive_watchdog_fired_locked                                                          +17  +7.7%\n  +0.2%     +32 src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.cc                           +32  +0.2%\n      +3.3%     +35 grpc_core::(anonymous namespace)::GrpcLb::ProcessChannelArgsLocked                       +35  +3.3%\n      +1.7%      +6 [Unmapped]                                                                                +6  +1.7%\n      +0.6%      +3 grpc_core::(anonymous namespace)::GrpcLb::BalancerCallState::SendClientLoadReportLoc      +3  +0.6%\n      +1.4%      +3 grpc_core::(anonymous namespace)::GrpcLb::PendingPickSetMetadataAndContext                +3  +1.4%\n  +0.7%     +18 src/core/ext/transport/chttp2/transport/bin_decoder.cc                                   +18  +0.7%\n      +200%     +26 [Unmapped]                                                                               +26  +200%\n      +0.4%      +3 grpc_chttp2_base64_decode                                                                 +3  +0.4%\n      +0.3%      +2 grpc_chttp2_base64_decode_with_length                                                     +2  +0.3%\n  +2.0%     +17 src/core/ext/transport/chttp2/server/secure/server_secure_chttp2.cc                      +17  +2.0%\n      +2.0%     +17 grpc_server_add_secure_http2_port                                                        +17  +2.0%\n  +0.5%     +16 src/core/ext/filters/client_channel/lb_policy/grpclb/load_balancer_api.cc                +16  +0.5%\n      +8.3%     +12 [Unmapped]                                                                               +12  +8.3%\n      +2.8%      +4 count_serverlist                                                                          +4  +2.8%\n  +0.3%     +16 src/core/ext/transport/chttp2/transport/writing.cc                                       +16  +0.3%\n      +0.4%     +24 grpc_chttp2_begin_write                                                                  +24  +0.4%\n  +3.3%     +13 src/core/ext/transport/chttp2/server/insecure/server_chttp2.cc                           +13  +3.3%\n      +3.3%     +13 grpc_server_add_insecure_http2_port                                                      +13  +3.3%\n\n -------------- SHRINKING                                                                            --------------\n  -2.8%     -48 src/core/ext/filters/client_channel/parse_address.cc                                     -48  -2.8%\n      -4.7%     -35 grpc_parse_ipv6_hostport                                                                 -35  -4.7%\n      -1.8%      -8 grpc_parse_ipv4_hostport                                                                  -8  -1.8%\n     -14.3%      -5 [Unmapped]                                                                                -5 -14.3%\n  -1.9%     -32 src/core/ext/filters/client_channel/http_proxy.cc                                        -32  -1.9%\n      -1.1%     -18 proxy_mapper_map_name                                                                    -18  -1.1%\n     -33.3%     -14 [Unmapped]                                                                               -14 -33.3%\n  -0.8%     -25 src/core/ext/filters/http/message_compress/message_compress_filter.cc                    -25  -0.8%\n      -2.0%     -25 compress_start_transport_stream_op_batch                                                 -25  -2.0%\n  -0.7%     -16 src/core/ext/filters/client_channel/http_connect_handshaker.cc                           -16  -0.7%\n      -1.2%      -9 http_connect_handshaker_do_handshake                                                      -9  -1.2%\n      -7.5%      -7 [Unmapped]                                                                                -7  -7.5%\n  -0.2%     -16 src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc                 -16  -0.2%\n      -2.1%     -17 grpc_core::(anonymous namespace)::RoundRobin::UpdateLocked                               -17  -2.1%\n  -0.0%      -1 src/core/ext/filters/client_channel/subchannel.cc                                         -1  -0.0%\n      -0.1%      -1 on_subchannel_connected                                                                   -1  -0.1%\n      -0.3%      -1 grpc_core::ConnectedSubchannel::CreateCall                                                -1  -0.3%\n\n -+-+-+-+-+-+-+ MIXED                                                                                +-+-+-+-+-+-+-\n  -0.0%     -14 [None]                                                                                  +586  +0.0%\n\n  +0.0%      +8 TOTAL                                                                                   +608  +0.0%\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE        FILE SIZE\n ++++++++++++++  ++++++++++++++\n\n  [ = ]       0        0  [ = ]\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/380936152",
    "html_url": "https://github.com/grpc/grpc/pull/15044#issuecomment-380936152",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15044",
    "id": 380936152,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDkzNjE1Mg==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-12T20:35:04Z",
    "updated_at": "2018-04-12T20:35:04Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/380947626",
    "html_url": "https://github.com/grpc/grpc/pull/15044#issuecomment-380947626",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15044",
    "id": 380947626,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDk0NzYyNg==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-12T21:18:33Z",
    "updated_at": "2018-04-12T21:18:33Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/386078515",
    "html_url": "https://github.com/grpc/grpc/pull/15044#issuecomment-386078515",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15044",
    "id": 386078515,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjA3ODUxNQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-02T18:38:08Z",
    "updated_at": "2018-05-02T18:38:08Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n  +0.5%     +64 src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc                 +64  +0.5%\n      +2.1%     +57 grpc_core::(anonymous namespace)::RoundRobin::UpdateLocked                               +57  +2.1%\n      +2.6%      +7 [Unmapped]                                                                                +7  +2.6%\n  +1.5%     +40 src/core/ext/transport/chttp2/transport/bin_decoder.cc                                   +40  +1.5%\n      +3.0%     +24 grpc_chttp2_base64_decode_with_length                                                    +24  +3.0%\n      +1.9%     +16 grpc_chttp2_base64_decode                                                                +16  +1.9%\n      +100%     +13 [Unmapped]                                                                               +13  +100%\n  +0.1%     +32 src/core/ext/transport/chttp2/transport/chttp2_transport.cc                              +32  +0.1%\n      +4.9%     +18 grpc_chttp2_add_incoming_goaway                                                          +18  +4.9%\n      +7.7%     +17 keepalive_watchdog_fired_locked                                                          +17  +7.7%\n      +0.8%      +7 destroy_stream_locked                                                                     +7  +0.8%\n  +0.5%     +32 src/core/ext/transport/chttp2/transport/writing.cc                                       +32  +0.5%\n      +0.6%     +32 grpc_chttp2_begin_write                                                                  +32  +0.6%\n  +2.0%     +17 src/core/ext/transport/chttp2/server/secure/server_secure_chttp2.cc                      +17  +2.0%\n      +2.0%     +17 grpc_server_add_secure_http2_port                                                        +17  +2.0%\n  +0.1%     +16 src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.cc                           +16  +0.1%\n      +3.3%     +35 grpc_core::(anonymous namespace)::GrpcLb::ProcessChannelArgsLocked                       +35  +3.3%\n      +0.6%      +3 grpc_core::(anonymous namespace)::GrpcLb::BalancerCallState::SendClientLoadReportLoc      +3  +0.6%\n  +0.2%     +16 src/core/ext/transport/chttp2/transport/parsing.cc                                       +16  +0.2%\n      +0.9%     +11 init_header_frame_parser                                                                 +11  +0.9%\n      +6.8%      +5 [Unmapped]                                                                                +5  +6.8%\n  +3.3%     +13 src/core/ext/transport/chttp2/server/insecure/server_chttp2.cc                           +13  +3.3%\n      +3.3%     +13 grpc_server_add_insecure_http2_port                                                      +13  +3.3%\n\n -------------- SHRINKING                                                                            --------------\n  -2.8%     -48 src/core/ext/filters/client_channel/http_proxy.cc                                        -48  -2.8%\n      -2.2%     -36 proxy_mapper_map_name                                                                    -36  -2.2%\n     -28.6%     -12 [Unmapped]                                                                               -12 -28.6%\n  -2.8%     -48 src/core/ext/filters/client_channel/parse_address.cc                                     -48  -2.8%\n      -4.7%     -35 grpc_parse_ipv6_hostport                                                                 -35  -4.7%\n      -1.8%      -8 grpc_parse_ipv4_hostport                                                                  -8  -1.8%\n     -16.7%      -5 [Unmapped]                                                                                -5 -16.7%\n  -0.7%     -16 src/core/ext/filters/client_channel/http_connect_handshaker.cc                           -16  -0.7%\n      -1.2%      -9 http_connect_handshaker_do_handshake                                                      -9  -1.2%\n      -7.5%      -7 [Unmapped]                                                                                -7  -7.5%\n  -0.0%      -1 src/core/ext/filters/client_channel/subchannel.cc                                         -1  -0.0%\n      -0.1%      -1 on_subchannel_connected                                                                   -1  -0.1%\n      -0.3%      -1 grpc_core::ConnectedSubchannel::CreateCall                                                -1  -0.3%\n\n -+-+-+-+-+-+-+ MIXED                                                                                +-+-+-+-+-+-+-\n  -0.0%     -37 [None]                                                                                  +219  +0.0%\n\n  +0.0%     +80 TOTAL                                                                                   +336  +0.0%\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE        FILE SIZE\n ++++++++++++++  ++++++++++++++\n\n  [ = ]       0        0  [ = ]\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/386081330",
    "html_url": "https://github.com/grpc/grpc/pull/15044#issuecomment-386081330",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15044",
    "id": 386081330,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjA4MTMzMA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-02T18:47:20Z",
    "updated_at": "2018-05-02T18:47:20Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/386093350",
    "html_url": "https://github.com/grpc/grpc/pull/15044#issuecomment-386093350",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15044",
    "id": 386093350,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjA5MzM1MA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-02T19:29:48Z",
    "updated_at": "2018-05-02T19:29:48Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/386696066",
    "html_url": "https://github.com/grpc/grpc/pull/15044#issuecomment-386696066",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15044",
    "id": 386696066,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjY5NjA2Ng==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-04T18:39:42Z",
    "updated_at": "2018-05-04T18:39:42Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n  +0.5%     +64 src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc                 +64  +0.5%\n      +2.1%     +57 grpc_core::(anonymous namespace)::RoundRobin::UpdateLocked                               +57  +2.1%\n      +2.6%      +7 [Unmapped]                                                                                +7  +2.6%\n  +1.5%     +40 src/core/ext/transport/chttp2/transport/bin_decoder.cc                                   +40  +1.5%\n      +3.0%     +24 grpc_chttp2_base64_decode_with_length                                                    +24  +3.0%\n      +1.9%     +16 grpc_chttp2_base64_decode                                                                +16  +1.9%\n      +100%     +13 [Unmapped]                                                                               +13  +100%\n  +0.1%     +32 src/core/ext/transport/chttp2/transport/chttp2_transport.cc                              +32  +0.1%\n      +4.9%     +18 grpc_chttp2_add_incoming_goaway                                                          +18  +4.9%\n      +7.7%     +17 keepalive_watchdog_fired_locked                                                          +17  +7.7%\n      +0.8%      +7 destroy_stream_locked                                                                     +7  +0.8%\n  +0.5%     +32 src/core/ext/transport/chttp2/transport/writing.cc                                       +32  +0.5%\n      +0.6%     +32 grpc_chttp2_begin_write                                                                  +32  +0.6%\n  +2.0%     +17 src/core/ext/transport/chttp2/server/secure/server_secure_chttp2.cc                      +17  +2.0%\n      +2.0%     +17 grpc_server_add_secure_http2_port                                                        +17  +2.0%\n  +0.1%     +16 src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.cc                           +16  +0.1%\n      +3.3%     +35 grpc_core::(anonymous namespace)::GrpcLb::ProcessChannelArgsLocked                       +35  +3.3%\n      +0.6%      +3 grpc_core::(anonymous namespace)::GrpcLb::BalancerCallState::SendClientLoadReportLoc      +3  +0.6%\n  +0.2%     +16 src/core/ext/transport/chttp2/transport/parsing.cc                                       +16  +0.2%\n      +0.9%     +11 init_header_frame_parser                                                                 +11  +0.9%\n      +6.8%      +5 [Unmapped]                                                                                +5  +6.8%\n  +3.3%     +13 src/core/ext/transport/chttp2/server/insecure/server_chttp2.cc                           +13  +3.3%\n      +3.3%     +13 grpc_server_add_insecure_http2_port                                                      +13  +3.3%\n\n -------------- SHRINKING                                                                            --------------\n  -2.8%     -48 src/core/ext/filters/client_channel/http_proxy.cc                                        -48  -2.8%\n      -2.2%     -36 proxy_mapper_map_name                                                                    -36  -2.2%\n     -28.6%     -12 [Unmapped]                                                                               -12 -28.6%\n  -2.8%     -48 src/core/ext/filters/client_channel/parse_address.cc                                     -48  -2.8%\n      -4.7%     -35 grpc_parse_ipv6_hostport                                                                 -35  -4.7%\n      -1.8%      -8 grpc_parse_ipv4_hostport                                                                  -8  -1.8%\n     -16.7%      -5 [Unmapped]                                                                                -5 -16.7%\n  -0.7%     -16 src/core/ext/filters/client_channel/http_connect_handshaker.cc                           -16  -0.7%\n      -1.2%      -9 http_connect_handshaker_do_handshake                                                      -9  -1.2%\n      -7.5%      -7 [Unmapped]                                                                                -7  -7.5%\n  -0.0%      -1 src/core/ext/filters/client_channel/subchannel.cc                                         -1  -0.0%\n      -0.1%      -1 on_subchannel_connected                                                                   -1  -0.1%\n      -0.3%      -1 grpc_core::ConnectedSubchannel::CreateCall                                                -1  -0.3%\n\n -+-+-+-+-+-+-+ MIXED                                                                                +-+-+-+-+-+-+-\n  -0.0%     -69 [None]                                                                                  +219  +0.0%\n\n  +0.0%     +48 TOTAL                                                                                   +336  +0.0%\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE        FILE SIZE\n ++++++++++++++  ++++++++++++++\n\n  [ = ]       0        0  [ = ]\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/386696306",
    "html_url": "https://github.com/grpc/grpc/pull/15044#issuecomment-386696306",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15044",
    "id": 386696306,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjY5NjMwNg==",
    "user": {
      "login": "yashykt",
      "id": 4181124,
      "node_id": "MDQ6VXNlcjQxODExMjQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4181124?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yashykt",
      "html_url": "https://github.com/yashykt",
      "followers_url": "https://api.github.com/users/yashykt/followers",
      "following_url": "https://api.github.com/users/yashykt/following{/other_user}",
      "gists_url": "https://api.github.com/users/yashykt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yashykt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yashykt/subscriptions",
      "organizations_url": "https://api.github.com/users/yashykt/orgs",
      "repos_url": "https://api.github.com/users/yashykt/repos",
      "events_url": "https://api.github.com/users/yashykt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yashykt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-04T18:40:29Z",
    "updated_at": "2018-05-04T18:40:29Z",
    "author_association": "MEMBER",
    "body": "@AspirinSJL Can you take a look at the places where I have placed them to verify that those make sense.\r\n\r\nFrom the benchmark runs, it brought the latency of a 1 byte unary RPC from 68 micros to 65.6 micros."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/386698333",
    "html_url": "https://github.com/grpc/grpc/pull/15044#issuecomment-386698333",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15044",
    "id": 386698333,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjY5ODMzMw==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-04T18:48:20Z",
    "updated_at": "2018-05-04T18:48:20Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/386709114",
    "html_url": "https://github.com/grpc/grpc/pull/15044#issuecomment-386709114",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15044",
    "id": 386709114,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjcwOTExNA==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-04T19:29:26Z",
    "updated_at": "2018-05-04T19:29:26Z",
    "author_association": "MEMBER",
    "body": "Out of curiosity, how did you decide which conditionals to add this to?  It looks like a large number of the ones you've modified are related to channel establishment, not things that run on a per-RPC basis, so it seems unlikely that they would have any significant impact on performance."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/386709613",
    "html_url": "https://github.com/grpc/grpc/pull/15044#issuecomment-386709613",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15044",
    "id": 386709613,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjcwOTYxMw==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-04T19:31:25Z",
    "updated_at": "2018-05-04T19:31:25Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/386714480",
    "html_url": "https://github.com/grpc/grpc/pull/15044#issuecomment-386714480",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15044",
    "id": 386714480,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjcxNDQ4MA==",
    "user": {
      "login": "yashykt",
      "id": 4181124,
      "node_id": "MDQ6VXNlcjQxODExMjQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4181124?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yashykt",
      "html_url": "https://github.com/yashykt",
      "followers_url": "https://api.github.com/users/yashykt/followers",
      "following_url": "https://api.github.com/users/yashykt/following{/other_user}",
      "gists_url": "https://api.github.com/users/yashykt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yashykt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yashykt/subscriptions",
      "organizations_url": "https://api.github.com/users/yashykt/orgs",
      "repos_url": "https://api.github.com/users/yashykt/repos",
      "events_url": "https://api.github.com/users/yashykt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yashykt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-04T19:52:12Z",
    "updated_at": "2018-05-04T19:52:12Z",
    "author_association": "MEMBER",
    "body": "@markdroth I just grep'd for error cases in a part of the codebase. That part included the client filter so it also involved looking at channel establishment. I did not reason about how often these paths will be hit. The only criteria was that if it looked like an error condition that shouldn't happen in normal working conditions, I marked it as unlikely."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/386742949",
    "html_url": "https://github.com/grpc/grpc/pull/15044#issuecomment-386742949",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15044",
    "id": 386742949,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4Njc0Mjk0OQ==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-04T21:43:28Z",
    "updated_at": "2018-05-04T21:43:28Z",
    "author_association": "MEMBER",
    "body": "I think we should do something more targetted here.  Let's not do this for code that's not in the call path, since that's not going to make any difference.  Instead, let's actually look at all conditionals that are in the call path and see what we can get from them.\n\nAs an example, I've looked through all of client_channel.cc and made recommendations about where to make changes.\n\n---\n\nReviewed 25 of 25 files at r1.\nReview status: all files reviewed at latest revision, all discussions resolved, some commit checks failed.\n\n---\n\n*[src/core/ext/filters/client_channel/backup_poller.cc, line 64 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBgpf4s5vGzVHuNc1NC:-LBgpf4s5vGzVHuNc1ND:b-z5tnl6) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/filters/client_channel/backup_poller.cc#L64)):*\n> ```cpp\n>   if (env != nullptr) {\n>     int poll_interval_ms = gpr_parse_nonnegative_int(env);\n>     if (GPR_UNLIKELY(poll_interval_ms == -1)) {\n> ```\n\nThis isn't in the call path and probably won't make much difference.\n\n---\n\n*[src/core/ext/filters/client_channel/client_channel.cc, line 1117 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBgielQ1bcAVxpNqCU9:-LBgielQ1bcAVxpNqCUA:b-1jywj7) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/filters/client_channel/client_channel.cc#L1117)):*\n> ```cpp\n>       calld->pending_send_trailing_metadata = true;\n>     }\n>     if (calld->bytes_buffered_for_retry > chand->per_rpc_retry_buffer_size) {\n> ```\n\nThis could use `GPR_UNLIKELY()`.\n\n---\n\n*[src/core/ext/filters/client_channel/client_channel.cc, line 1464 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBgjHTR4SIRdh8jongU:-LBgjHTR4SIRdh8jongV:bii9hgy) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/filters/client_channel/client_channel.cc#L1464)):*\n> ```cpp\n>   }\n>   // Check status.\n>   if (status == GRPC_STATUS_OK) {\n> ```\n\nThis can use `GPR_LIKELY()`.\n\nAll of the rest of the checks in this function could use `GPR_UNLIKELY()`, but there may not be much benefit, since they'll only run in the retry case.\n\n---\n\n*[src/core/ext/filters/client_channel/client_channel.cc, line 1658 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBgk2JiDDxbzVeTRYaq:-LBgk2JiDDxbzVeTRYar:b-g55dpg) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/filters/client_channel/client_channel.cc#L1658)):*\n> ```cpp\n>   // propagating this callback back to the surface.  We can evaluate whether\n>   // to retry when recv_trailing_metadata comes back.\n>   if ((batch_data->trailing_metadata_available || error != GRPC_ERROR_NONE) &&\n> ```\n\nThis can use `GPR_UNLIKELY()`.\n\n---\n\n*[src/core/ext/filters/client_channel/client_channel.cc, line 1747 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBgkAA923CLfwCKiiQv:-LBgkAA923CLfwCKiiQw:b-g55dpg) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/filters/client_channel/client_channel.cc#L1747)):*\n> ```cpp\n>   // propagating this callback back to the surface.  We can evaluate whether\n>   // to retry when recv_trailing_metadata comes back.\n>   if ((batch_data->recv_message == nullptr || error != GRPC_ERROR_NONE) &&\n> ```\n\nThis can use `GPR_UNLIKELY()`.\n\n---\n\n*[src/core/ext/filters/client_channel/client_channel.cc, line 1861 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBgkQyy9D07PRGZckRZ:-LBgkQyz5PVNKNlfeRbQ:b-g55dpg) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/filters/client_channel/client_channel.cc#L1861)):*\n> ```cpp\n>   if (batch_data->batch.recv_trailing_metadata) {\n>     // Add closure for deferred recv_initial_metadata_ready.\n>     if (retry_state->recv_initial_metadata_ready_deferred_batch != nullptr) {\n> ```\n\nThis can use `GPR_UNLIKELY()`.\n\n---\n\n*[src/core/ext/filters/client_channel/client_channel.cc, line 1873 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBgkUBHBZpp10zcVljI:-LBgkUBHBZpp10zcVljJ:b-g55dpg) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/filters/client_channel/client_channel.cc#L1873)):*\n> ```cpp\n>     }\n>     // Add closure for deferred recv_message_ready.\n>     if (retry_state->recv_message_ready_deferred_batch != nullptr) {\n> ```\n\nThis can use `GPR_UNLIKELY()`.\n\n---\n\n*[src/core/ext/filters/client_channel/client_channel.cc, line 2042 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBgkzPQCVS3DFf_4t5a:-LBgkzPQCVS3DFf_4t5b:b-g55dpg) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/filters/client_channel/client_channel.cc#L2042)):*\n> ```cpp\n>     grpc_status_code status = GRPC_STATUS_OK;\n>     grpc_mdelem* server_pushback_md = nullptr;\n>     if (error != GRPC_ERROR_NONE) {  // Case (a).\n> ```\n\nThis can use `GPR_UNLIKELY()`.\n\n---\n\n*[src/core/ext/filters/client_channel/client_channel.cc, line 2188 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBglW3a4rkWN3VDIkbT:-LBglW3b6NtJijEtoO3Q:b-g55dpg) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/filters/client_channel/client_channel.cc#L2188)):*\n> ```cpp\n>                            &batch_data->send_initial_metadata,\n>                            batch_data->send_initial_metadata_storage);\n>   if (batch_data->send_initial_metadata.idx.named.grpc_previous_rpc_attempts !=\n> ```\n\nThis can use `GPR_UNLIKELY()`.\n\n---\n\n*[src/core/ext/filters/client_channel/client_channel.cc, line 2194 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBglPyt4DdxWzViuQq9:-LBglPyt4DdxWzViuQqA:b-g55dpg) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/filters/client_channel/client_channel.cc#L2194)):*\n> ```cpp\n>         batch_data->send_initial_metadata.idx.named.grpc_previous_rpc_attempts);\n>   }\n>   if (calld->num_attempts_completed > 0) {\n> ```\n\nThis can use `GPR_UNLIKELY()`.\n\n---\n\n*[src/core/ext/filters/client_channel/client_channel.cc, line 2444 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBglubV3FfBzDe26D9_:-LBglubV3FfBzDe26D9a:b-g55dpg) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/filters/client_channel/client_channel.cc#L2444)):*\n> ```cpp\n>       // initiated by start_internal_recv_trailing_metadata(), use the\n>       // result of that instead of trying to re-start this op.\n>       if (retry_state->recv_trailing_metadata_internal_batch != nullptr) {\n> ```\n\nThis can use `GPR_UNLIKELY()`.\n\n---\n\n*[src/core/ext/filters/client_channel/client_channel.cc, line 2577 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBgmNHL6-8hQa5vNjfY:-LBgmNHL6-8hQa5vNjfZ:b-g55dpg) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/filters/client_channel/client_channel.cc#L2577)):*\n> ```cpp\n>             chand, calld, calld->subchannel_call, grpc_error_string(new_error));\n>   }\n>   if (new_error != GRPC_ERROR_NONE) {\n> ```\n\nThis can use `GPR_UNLIKELY()`.\n\n---\n\n*[src/core/ext/filters/client_channel/client_channel.cc, line 2598 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBgmTG43Wk0yRhoz45K:-LBgmTG43Wk0yRhoz45L:b-g55dpg) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/filters/client_channel/client_channel.cc#L2598)):*\n> ```cpp\n>   channel_data* chand = static_cast<channel_data*>(elem->channel_data);\n>   call_data* calld = static_cast<call_data*>(elem->call_data);\n>   if (calld->pick.connected_subchannel == nullptr) {\n> ```\n\nThis can use `GPR_UNLIKELY()`.\n\n---\n\n*[src/core/ext/filters/client_channel/client_channel.cc, line 2657 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBgml7XE7yW0NYZpwo2:-LBgml7XE7yW0NYZpwo3:bithrlv) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/filters/client_channel/client_channel.cc#L2657)):*\n> ```cpp\n>   // in which case we will be cancelling the pick on a policy other than\n>   // the one we started it on.  However, this will just be a no-op.\n>   if (error != GRPC_ERROR_NONE && chand->lb_policy != nullptr) {\n> ```\n\nThis can use `GPR_LIKELY()`.\n\n---\n\n*[src/core/ext/filters/client_channel/client_channel.cc, line 2729 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBgn8S-1C9H7ySwPB59:-LBgn8S-1C9H7ySwPB5A:b1hz2d5) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/filters/client_channel/client_channel.cc#L2729)):*\n> ```cpp\n>   }\n>   // Only get service config data on the first attempt.\n>   if (calld->num_attempts_completed == 0) {\n> ```\n\nThis can be `GPR_LIKELY()`.\n\n---\n\n*[src/core/ext/filters/client_channel/client_channel.cc, line 2756 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBgnKMS7ItEpxXRYI4s:-LBgnKMTDpgd7q_NPV03:bvm3onm) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/filters/client_channel/client_channel.cc#L2756)):*\n> ```cpp\n>       calld->method_params->wait_for_ready() !=\n>           ClientChannelMethodParams::WAIT_FOR_READY_UNSET;\n>   if (!wait_for_ready_set_from_api && wait_for_ready_set_from_service_config) {\n> ```\n\nThis can be `GPR_UNLIKELY()`.\n\n---\n\n*[src/core/ext/filters/client_channel/client_channel.cc, line 2770 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBgnOnTAVYPKv9hcjsI:-LBgnOnTAVYPKv9hcjsJ:b1hz2d5) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/filters/client_channel/client_channel.cc#L2770)):*\n> ```cpp\n>   GRPC_CALL_STACK_REF(calld->owning_call, \"pick_callback\");\n>   const bool pick_done = chand->lb_policy->PickLocked(&calld->pick);\n>   if (pick_done) {\n> ```\n\nThis can be `GPR_LIKELY()`.\n\n---\n\n*[src/core/ext/filters/client_channel/client_channel.cc, line 2801 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBgnjuk8h9LOuUpRz3h:-LBgn_Ou-xJvyksZsT4K:bithrlv) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/filters/client_channel/client_channel.cc#L2801)):*\n> ```cpp\n>   pick_after_resolver_result_args* args =\n>       static_cast<pick_after_resolver_result_args*>(arg);\n>   if (args->finished) {\n> ```\n\nThis can use `GPR_LIKELY()`.\n\n---\n\n*[src/core/ext/filters/client_channel/client_channel.cc, line 2834 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBgnfChBBEIbdfTAHLZ:-LBgnfCiE-iOmBKkedxC:b-g55dpg) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/filters/client_channel/client_channel.cc#L2834)):*\n> ```cpp\n>   pick_after_resolver_result_args* args =\n>       static_cast<pick_after_resolver_result_args*>(arg);\n>   if (args->finished) {\n> ```\n\nThis can use `GPR_UNLIKELY()`.\n\n---\n\n*[src/core/ext/filters/client_channel/client_channel.cc, line 2846 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBgnr5I121c4Jc5Ol2-:-LBgnr5I121c4Jc5Ol20:b-g55dpg) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/filters/client_channel/client_channel.cc#L2846)):*\n> ```cpp\n>   channel_data* chand = static_cast<channel_data*>(elem->channel_data);\n>   call_data* calld = static_cast<call_data*>(elem->call_data);\n>   if (error != GRPC_ERROR_NONE) {\n> ```\n\nThis can use `GPR_UNLIKELY()`.\n\n---\n\n*[src/core/ext/filters/client_channel/client_channel.cc, line 2852 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBgnvtKEQvd_apFUxlj:-LBgnvtL5DD2cPJt7lEY:b-g55dpg) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/filters/client_channel/client_channel.cc#L2852)):*\n> ```cpp\n>     }\n>     async_pick_done_locked(elem, GRPC_ERROR_REF(error));\n>   } else if (chand->resolver == nullptr) {\n> ```\n\nThis can use `GPR_UNLIKELY()`.\n\n---\n\n*[src/core/ext/filters/client_channel/client_channel.cc, line 2860 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBgo-Fe5F5MFF8XdFJt:-LBgo-Fe5F5MFF8XdFJu:b-g55dpg) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/filters/client_channel/client_channel.cc#L2860)):*\n> ```cpp\n>     async_pick_done_locked(\n>         elem, GRPC_ERROR_CREATE_FROM_STATIC_STRING(\"Disconnected\"));\n>   } else if (chand->lb_policy == nullptr) {\n> ```\n\nThis can use `GPR_UNLIKELY()`.\n\n---\n\n*[src/core/ext/filters/client_channel/client_channel.cc, line 2895 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBgo2eZElVPh_srthg3:-LBgo2eZElVPh_srthg4:bithrlv) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/filters/client_channel/client_channel.cc#L2895)):*\n> ```cpp\n>               chand, calld);\n>     }\n>     if (pick_callback_start_locked(elem)) {\n> ```\n\nThis can use `GPR_LIKELY()`.\n\n---\n\n*[src/core/ext/filters/client_channel/client_channel.cc, line 2934 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBgoNPq7XQ7t7zp8xTI:-LBgoNPq7XQ7t7zp8xTJ:bithrlv) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/filters/client_channel/client_channel.cc#L2934)):*\n> ```cpp\n>   GPR_ASSERT(calld->pick.connected_subchannel == nullptr);\n>   GPR_ASSERT(calld->subchannel_call == nullptr);\n>   if (chand->lb_policy != nullptr) {\n> ```\n\nThis can use `GPR_LIKELY()`.\n\n---\n\n*[src/core/ext/filters/client_channel/client_channel.cc, line 2936 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBgoQb5ATnVT_ZFzL-t:-LBgoQb5ATnVT_ZFzL-u:bithrlv) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/filters/client_channel/client_channel.cc#L2936)):*\n> ```cpp\n>   if (chand->lb_policy != nullptr) {\n>     // We already have an LB policy, so ask it for a pick.\n>     if (pick_callback_start_locked(elem)) {\n> ```\n\nThis can use `GPR_LIKELY()`.\n\n---\n\n*[src/core/ext/filters/client_channel/client_channel.cc, line 2943 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBgoWQA49l7qD0Pq_iM:-LBgoWQA49l7qD0Pq_iN:b-g55dpg) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/filters/client_channel/client_channel.cc#L2943)):*\n> ```cpp\n>   } else {\n>     // We do not yet have an LB policy, so wait for a resolver result.\n>     if (chand->resolver == nullptr) {\n> ```\n\nThis can use `GPR_UNLIKELY()`.\n\n---\n\n*[src/core/ext/filters/client_channel/client_channel.cc, line 2948 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBgoccu7IMu3PbyRkyL:-LBgoccu7IMu3PbyRkyM:bithrlv) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/filters/client_channel/client_channel.cc#L2948)):*\n> ```cpp\n>       return;\n>     }\n>     if (!chand->started_resolving) {\n> ```\n\nThis can use `GPR_LIKELY()`.\n\n---\n\n*[src/core/ext/filters/client_channel/client_channel.cc, line 2971 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBgogQZ4nuIT64iBExo:-LBgogQZ4nuIT64iBExp:bithrlv) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/filters/client_channel/client_channel.cc#L2971)):*\n> ```cpp\n>   call_data* calld = static_cast<call_data*>(elem->call_data);\n>   channel_data* chand = static_cast<channel_data*>(elem->channel_data);\n>   if (chand->deadline_checking_enabled) {\n> ```\n\nThis can use `GPR_LIKELY()`.\n\n---\n\n*[src/core/ext/filters/client_channel/client_channel.cc, line 2975 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBgokw86vNiaXw8Cp9C:-LBgokw86vNiaXw8Cp9D:b-g55dpg) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/filters/client_channel/client_channel.cc#L2975)):*\n> ```cpp\n>   }\n>   // If we've previously been cancelled, immediately fail any new batches.\n>   if (calld->cancel_error != GRPC_ERROR_NONE) {\n> ```\n\nThis can use `GPR_UNLIKELY()`.\n\n---\n\n*[src/core/ext/filters/client_channel/client_channel.cc, line 2986 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBgopFHBwcIHjYmPF1J:-LBgopFHBwcIHjYmPF1K:b-g55dpg) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/filters/client_channel/client_channel.cc#L2986)):*\n> ```cpp\n>   }\n>   // Handle cancellation.\n>   if (batch->cancel_stream) {\n> ```\n\nThis can use `GPR_UNLIKELY()`.\n\n---\n\n*[src/core/ext/filters/client_channel/client_channel.cc, line 3032 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBgp1uH-WoBgCNW0MQs:-LBgp1uH-WoBgCNW0MQt:bithrlv) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/filters/client_channel/client_channel.cc#L3032)):*\n> ```cpp\n>   // For batches containing a send_initial_metadata op, enter the channel\n>   // combiner to start a pick.\n>   if (batch->send_initial_metadata) {\n> ```\n\nThis can use `GPR_LIKELY()`.\n\n---\n\n*[src/core/ext/filters/client_channel/client_channel.cc, line 3065 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBgp5NI1uJyUTHMFS0R:-LBgp5NI1uJyUTHMFS0S:bithrlv) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/filters/client_channel/client_channel.cc#L3065)):*\n> ```cpp\n>   calld->owning_call = args->call_stack;\n>   calld->call_combiner = args->call_combiner;\n>   if (chand->deadline_checking_enabled) {\n> ```\n\nThis can use `GPR_LIKELY()`.\n\n---\n\n*[src/core/ext/filters/client_channel/client_channel.cc, line 3080 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBgp8aN7joYZUOeWbfI:-LBgp8aN7joYZUOeWbfJ:bithrlv) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/filters/client_channel/client_channel.cc#L3080)):*\n> ```cpp\n>   call_data* calld = static_cast<call_data*>(elem->call_data);\n>   channel_data* chand = static_cast<channel_data*>(elem->channel_data);\n>   if (chand->deadline_checking_enabled) {\n> ```\n\nThis can use `GPR_LIKELY()`.\n\n---\n\n*[src/core/ext/filters/client_channel/client_channel.cc, line 3087 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBgpC1v6JfQCq6xV0uu:-LBgpC1v6JfQCq6xV0uv:bithrlv) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/filters/client_channel/client_channel.cc#L3087)):*\n> ```cpp\n>   calld->method_params.reset();\n>   GRPC_ERROR_UNREF(calld->cancel_error);\n>   if (calld->subchannel_call != nullptr) {\n> ```\n\nThis can use `GPR_LIKELY()`.\n\n---\n\n*[src/core/ext/filters/client_channel/client_channel.cc, line 3097 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBgpF19E9lr8s38yEkj:-LBgpF19E9lr8s38yEkk:bithrlv) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/filters/client_channel/client_channel.cc#L3097)):*\n> ```cpp\n>     GPR_ASSERT(calld->pending_batches[i].batch == nullptr);\n>   }\n>   if (calld->pick.connected_subchannel != nullptr) {\n> ```\n\nThis can use `GPR_LIKELY()`.\n\n---\n\n*[src/core/ext/filters/client_channel/client_channel.cc, line 3101 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBgpHzp4tXS3be3FW5i:-LBgpHzp4tXS3be3FW5j:bithrlv) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/filters/client_channel/client_channel.cc#L3101)):*\n> ```cpp\n>   }\n>   for (size_t i = 0; i < GRPC_CONTEXT_COUNT; ++i) {\n>     if (calld->pick.subchannel_call_context[i].value != nullptr) {\n> ```\n\nThis can use `GPR_LIKELY()`.\n\n---\n\n*[src/core/ext/filters/client_channel/http_connect_handshaker.cc, line 283 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBgpp1s9LJm00v54LSI:-LBgpp1s9LJm00v54LSJ:bodbn50) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/filters/client_channel/http_connect_handshaker.cc#L283)):*\n> ```cpp\n>     for (size_t i = 0; i < num_header_strings; ++i) {\n>       char* sep = strchr(header_strings[i], ':');\n>       if (GPR_UNLIKELY(sep == nullptr)) {\n> ```\n\nThis isn't in the call path and is not likely to make much difference.\n\n---\n\n*[src/core/ext/filters/client_channel/http_proxy.cc, line 53 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBgpusV1vw9hQLASkkt:-LBgpusV1vw9hQLASkku:b-3fvk6a) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/filters/client_channel/http_proxy.cc#L53)):*\n> ```cpp\n>   if (uri_str == nullptr) return nullptr;\n>   grpc_uri* uri = grpc_uri_parse(uri_str, false /* suppress_errors */);\n>   if (GPR_UNLIKELY(uri == nullptr || uri->authority == nullptr)) {\n> ```\n\nNothing in this file is in the call path, so it shouldn't make any difference.\n\nNote that if we really did want to optimize this, a better approach would be to change the code to read the environment variable only once when the proxy mapper is created.\n\n---\n\n*[src/core/ext/filters/client_channel/parse_address.cc, line 42 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBgqA5C1XCNHkqHnusT:-LBgqA5C1XCNHkqHnusU:bsvarwg) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/filters/client_channel/parse_address.cc#L42)):*\n> ```cpp\n> bool grpc_parse_unix(const grpc_uri* uri,\n>                      grpc_resolved_address* resolved_addr) {\n>   if (GPR_UNLIKELY(strcmp(\"unix\", uri->scheme) != 0)) {\n> ```\n\nNothing in this file is in the call path.\n\n---\n\n*[src/core/ext/filters/client_channel/resolver_registry.cc, line 77 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBgqEPxCcn0jLGjbM2k:-LBgqEPxCcn0jLGjbM2l:b-es7by9) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/filters/client_channel/resolver_registry.cc#L77)):*\n> ```cpp\n>       factory =\n>           *uri == nullptr ? nullptr : LookupResolverFactory((*uri)->scheme);\n>       if (GPR_UNLIKELY(factory == nullptr)) {\n> ```\n\nNot in the call path.\n\n---\n\n*[src/core/ext/filters/client_channel/subchannel.cc, line 580 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBgqLHS-6p_WAV32_Qh:-LBgqLHS-6p_WAV32_Qi:b2h6hl1) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/filters/client_channel/subchannel.cc#L580)):*\n> ```cpp\n>       builder, 0, 1, connection_destroy, nullptr,\n>       reinterpret_cast<void**>(&stk));\n>   if (GPR_UNLIKELY(error != GRPC_ERROR_NONE)) {\n> ```\n\nThis one is not in the call path.\n\n---\n\n*[src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc, line 228 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBh4Q-09IBZDcSSU7KZ:-LBh4Q-09IBZDcSSU7K_:b-zi9kac) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc#L228)):*\n> ```cpp\n> char* ChooseServiceConfig(char* service_config_choice_json) {\n>   grpc_json* choices_json = grpc_json_parse_string(service_config_choice_json);\n>   if (GPR_UNLIKELY(choices_json == nullptr ||\n> ```\n\nThe changes in this file are not in the call path.\n\n---\n\n*[src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc, line 313 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBh4afe7SKldl9Xb818:-LBh4afe7SKldl9Xb819:b-es7by9) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc#L313)):*\n> ```cpp\n>   OrphanablePtr<Resolver> CreateResolver(\n>       const ResolverArgs& args) const override {\n>     if (GPR_UNLIKELY(0 != strcmp(args.uri->authority, \"\"))) {\n> ```\n\nNot in the call path.\n\n---\n\n*[src/core/ext/filters/client_channel/resolver/sockaddr/sockaddr_resolver.cc, line 126 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBh4dDyCbWV9_ZxP4TC:-LBh4dDz-ozk-dc5BbDQ:b-es7by9) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/filters/client_channel/resolver/sockaddr/sockaddr_resolver.cc#L126)):*\n> ```cpp\n>     const ResolverArgs& args,\n>     bool parse(const grpc_uri* uri, grpc_resolved_address* dst)) {\n>   if (GPR_UNLIKELY(0 != strcmp(args.uri->authority, \"\"))) {\n> ```\n\nNot in the call path.\n\n---\n\n*[src/core/ext/filters/http/client/http_client_filter.cc, line 463 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBh4i8S3D9x4QJeC-eB:-LBh4i8S3D9x4QJeC-eC:b-zi9kac) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/filters/http/client/http_client_filter.cc#L463)):*\n> ```cpp\n>     for (size_t i = 0; i < args->num_args; ++i) {\n>       if (0 == strcmp(args->args[i].key, GRPC_ARG_MAX_PAYLOAD_SIZE_FOR_GET)) {\n>         if (GPR_UNLIKELY(args->args[i].type != GRPC_ARG_INTEGER)) {\n> ```\n\nThe changes in this file are not in the call path.\n\n---\n\n*[src/core/ext/transport/chttp2/client/insecure/channel_create.cc, line 57 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBh4qJm8UjUF-7nnbOA:-LBh4qJm8UjUF-7nnbOB:b-es7by9) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/transport/chttp2/client/insecure/channel_create.cc#L57)):*\n> ```cpp\n>     grpc_client_channel_factory* cc_factory, const char* target,\n>     grpc_client_channel_type type, const grpc_channel_args* args) {\n>   if (GPR_UNLIKELY(target == nullptr)) {\n> ```\n\nNot in the call path.\n\n---\n\n*[src/core/ext/transport/chttp2/client/secure/secure_channel_create.cc, line 53 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBh4uAu01ri6F8XSDR6:-LBh4uAu01ri6F8XSDR7:b-zi9kac) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/transport/chttp2/client/secure/secure_channel_create.cc#L53)):*\n> ```cpp\n>   grpc_channel_credentials* channel_credentials =\n>       grpc_channel_credentials_find_in_args(args->args);\n>   if (GPR_UNLIKELY(channel_credentials == nullptr)) {\n> ```\n\nThe changes in this file are not in the call path.\n\n---\n\n*[src/core/ext/transport/chttp2/server/insecure/server_chttp2.cc, line 38 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBh4y6u2R4U2Ubz7Mbv:-LBh4y6u2R4U2Ubz7Mbw:b-es7by9) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/transport/chttp2/server/insecure/server_chttp2.cc#L38)):*\n> ```cpp\n>       server, addr,\n>       grpc_channel_args_copy(grpc_server_get_channel_args(server)), &port_num);\n>   if (GPR_UNLIKELY(err != GRPC_ERROR_NONE)) {\n> ```\n\nNot in the call path.\n\n---\n\n*[src/core/ext/transport/chttp2/server/secure/server_secure_chttp2.cc, line 82 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBh557h-g_NdL9JwlDN:-LBh557h-g_NdL9JwlDO:b-es7by9) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/transport/chttp2/server/secure/server_secure_chttp2.cc#L82)):*\n> ```cpp\n>   }\n> \n>   if (GPR_UNLIKELY(err != GRPC_ERROR_NONE)) {\n> ```\n\nNot in the call path.\n\n---\n\n*[src/core/ext/transport/chttp2/transport/chttp2_transport.cc, line 371 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBh5C9524nmg0n3VqvK:-LBh5C9524nmg0n3VqvL:bjxzj6h) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/transport/chttp2/transport/chttp2_transport.cc#L371)):*\n> ```cpp\n>             grpc_channel_arg_get_integer(&channel_args->args[i], options);\n>         if (value >= 0) {\n>           if (GPR_UNLIKELY((t->next_stream_id & 1) != (value & 1))) {\n> ```\n\nChanges in this function are not in the call path.\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io/reviews/grpc/grpc/15044#-:-LBh5e-h7Sxj3jYcpF55:b-anm1t7)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/386747379",
    "html_url": "https://github.com/grpc/grpc/pull/15044#issuecomment-386747379",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15044",
    "id": 386747379,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4Njc0NzM3OQ==",
    "user": {
      "login": "yashykt",
      "id": 4181124,
      "node_id": "MDQ6VXNlcjQxODExMjQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4181124?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yashykt",
      "html_url": "https://github.com/yashykt",
      "followers_url": "https://api.github.com/users/yashykt/followers",
      "following_url": "https://api.github.com/users/yashykt/following{/other_user}",
      "gists_url": "https://api.github.com/users/yashykt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yashykt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yashykt/subscriptions",
      "organizations_url": "https://api.github.com/users/yashykt/orgs",
      "repos_url": "https://api.github.com/users/yashykt/repos",
      "events_url": "https://api.github.com/users/yashykt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yashykt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-04T22:07:15Z",
    "updated_at": "2018-05-04T22:07:15Z",
    "author_association": "MEMBER",
    "body": "Thanks for the recommendations @markdroth ! I'll make a separate PR for those. Also, for all the annotations that are not in the call path, I agree that they shouldn't be making much of a difference. Do you think that we should remove them or let them stay? What do you think @a11r ?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/387095351",
    "html_url": "https://github.com/grpc/grpc/pull/15044#issuecomment-387095351",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15044",
    "id": 387095351,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzA5NTM1MQ==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-07T15:05:50Z",
    "updated_at": "2018-05-07T15:05:50Z",
    "author_association": "MEMBER",
    "body": "My general feeling is that we shouldn't introduce complexity without benefit.  It may not seem like there's much complexity here, but it does add something to the code that will need to be maintained, which both requires anyone maintaining this code to understand these macros and requires us to make changes if any of these assumptions about likelihood change."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/387560230",
    "html_url": "https://github.com/grpc/grpc/pull/15044#issuecomment-387560230",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15044",
    "id": 387560230,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzU2MDIzMA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-08T22:17:54Z",
    "updated_at": "2018-05-08T22:17:54Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n  +0.5%     +64 src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc                 +64  +0.5%\n      +2.1%     +57 grpc_core::(anonymous namespace)::RoundRobin::UpdateLocked                               +57  +2.1%\n      +2.6%      +7 [Unmapped]                                                                                +7  +2.6%\n  +1.5%     +40 src/core/ext/transport/chttp2/transport/bin_decoder.cc                                   +40  +1.5%\n      +3.0%     +24 grpc_chttp2_base64_decode_with_length                                                    +24  +3.0%\n      +1.9%     +16 grpc_chttp2_base64_decode                                                                +16  +1.9%\n      +100%     +13 [Unmapped]                                                                               +13  +100%\n  +0.2%     +32 src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.cc                           +32  +0.2%\n      +4.0%     +43 grpc_core::(anonymous namespace)::GrpcLb::ProcessChannelArgsLocked                       +43  +4.0%\n      +0.8%      +3 [Unmapped]                                                                                +3  +0.8%\n      +0.6%      +3 grpc_core::(anonymous namespace)::GrpcLb::BalancerCallState::SendClientLoadReportLoc      +3  +0.6%\n  +0.1%     +32 src/core/ext/transport/chttp2/transport/chttp2_transport.cc                              +32  +0.1%\n      +4.9%     +18 grpc_chttp2_add_incoming_goaway                                                          +18  +4.9%\n      +7.7%     +17 keepalive_watchdog_fired_locked                                                          +17  +7.7%\n      +0.8%      +7 destroy_stream_locked                                                                     +7  +0.8%\n  +0.5%     +32 src/core/ext/transport/chttp2/transport/writing.cc                                       +32  +0.5%\n      +0.6%     +32 grpc_chttp2_begin_write                                                                  +32  +0.6%\n  +0.2%     +16 src/core/ext/transport/chttp2/transport/parsing.cc                                       +16  +0.2%\n      +0.9%     +11 init_header_frame_parser                                                                 +11  +0.9%\n      +6.8%      +5 [Unmapped]                                                                                +5  +6.8%\n\n -------------- SHRINKING                                                                            --------------\n  -0.0%      -1 src/core/ext/filters/client_channel/subchannel.cc                                         -1  -0.0%\n      -0.3%      -1 grpc_core::ConnectedSubchannel::CreateCall                                                -1  -0.3%\n\n -+-+-+-+-+-+-+ MIXED                                                                                +-+-+-+-+-+-+-\n  -0.0%     -63 [None]                                                                                   +57  +0.0%\n\n  +0.0%    +152 TOTAL                                                                                   +272  +0.0%\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE        FILE SIZE\n ++++++++++++++  ++++++++++++++\n\n  [ = ]       0        0  [ = ]\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/387561908",
    "html_url": "https://github.com/grpc/grpc/pull/15044#issuecomment-387561908",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15044",
    "id": 387561908,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzU2MTkwOA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-08T22:25:51Z",
    "updated_at": "2018-05-08T22:25:51Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/387570698",
    "html_url": "https://github.com/grpc/grpc/pull/15044#issuecomment-387570698",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15044",
    "id": 387570698,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzU3MDY5OA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-08T23:10:40Z",
    "updated_at": "2018-05-08T23:10:40Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] Performance differences noted:\nBenchmark                                                        cpu_time    real_time\n---------------------------------------------------------------  ----------  -----------\nBM_UnaryPingPong<InProcess, NoOpMutator, NoOpMutator>/0/2097152  -4%         -4%\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/388494194",
    "html_url": "https://github.com/grpc/grpc/pull/15044#issuecomment-388494194",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15044",
    "id": 388494194,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODQ5NDE5NA==",
    "user": {
      "login": "yashykt",
      "id": 4181124,
      "node_id": "MDQ6VXNlcjQxODExMjQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4181124?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yashykt",
      "html_url": "https://github.com/yashykt",
      "followers_url": "https://api.github.com/users/yashykt/followers",
      "following_url": "https://api.github.com/users/yashykt/following{/other_user}",
      "gists_url": "https://api.github.com/users/yashykt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yashykt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yashykt/subscriptions",
      "organizations_url": "https://api.github.com/users/yashykt/orgs",
      "repos_url": "https://api.github.com/users/yashykt/repos",
      "events_url": "https://api.github.com/users/yashykt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yashykt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-11T21:48:06Z",
    "updated_at": "2018-05-11T21:48:06Z",
    "author_association": "MEMBER",
    "body": "Known issue : #15310"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/388494566",
    "html_url": "https://github.com/grpc/grpc/pull/15044#issuecomment-388494566",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15044",
    "id": 388494566,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODQ5NDU2Ng==",
    "user": {
      "login": "yashykt",
      "id": 4181124,
      "node_id": "MDQ6VXNlcjQxODExMjQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4181124?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yashykt",
      "html_url": "https://github.com/yashykt",
      "followers_url": "https://api.github.com/users/yashykt/followers",
      "following_url": "https://api.github.com/users/yashykt/following{/other_user}",
      "gists_url": "https://api.github.com/users/yashykt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yashykt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yashykt/subscriptions",
      "organizations_url": "https://api.github.com/users/yashykt/orgs",
      "repos_url": "https://api.github.com/users/yashykt/repos",
      "events_url": "https://api.github.com/users/yashykt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yashykt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-11T21:49:51Z",
    "updated_at": "2018-05-11T21:49:51Z",
    "author_association": "MEMBER",
    "body": "The GPR_LIKELY annotations not in the call path have been removed. I'll create another PR to add annotations for the ones suggested by @markdroth "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/388518992",
    "html_url": "https://github.com/grpc/grpc/pull/15044#issuecomment-388518992",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15044",
    "id": 388518992,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODUxODk5Mg==",
    "user": {
      "login": "yashykt",
      "id": 4181124,
      "node_id": "MDQ6VXNlcjQxODExMjQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4181124?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yashykt",
      "html_url": "https://github.com/yashykt",
      "followers_url": "https://api.github.com/users/yashykt/followers",
      "following_url": "https://api.github.com/users/yashykt/following{/other_user}",
      "gists_url": "https://api.github.com/users/yashykt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yashykt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yashykt/subscriptions",
      "organizations_url": "https://api.github.com/users/yashykt/orgs",
      "repos_url": "https://api.github.com/users/yashykt/repos",
      "events_url": "https://api.github.com/users/yashykt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yashykt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-12T01:01:19Z",
    "updated_at": "2018-05-12T01:01:19Z",
    "author_association": "MEMBER",
    "body": "\n\n\n\n\n\n\n\n*[src/core/ext/filters/client_channel/client_channel.cc, line 3065 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBgp5NI1uJyUTHMFS0R:-LCGXVeQ90WiBICKh2ef:b-gulyta) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/filters/client_channel/client_channel.cc#L3065)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nThis can use `GPR_LIKELY()`.\n</blockquote></details>\n\nDeadline checking is dependent on a channel arg. Doesn't seem like a good idea to affect cases with deadline checking disabled.\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io/reviews/grpc/grpc/15044)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/388519004",
    "html_url": "https://github.com/grpc/grpc/pull/15044#issuecomment-388519004",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15044",
    "id": 388519004,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODUxOTAwNA==",
    "user": {
      "login": "yashykt",
      "id": 4181124,
      "node_id": "MDQ6VXNlcjQxODExMjQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4181124?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yashykt",
      "html_url": "https://github.com/yashykt",
      "followers_url": "https://api.github.com/users/yashykt/followers",
      "following_url": "https://api.github.com/users/yashykt/following{/other_user}",
      "gists_url": "https://api.github.com/users/yashykt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yashykt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yashykt/subscriptions",
      "organizations_url": "https://api.github.com/users/yashykt/orgs",
      "repos_url": "https://api.github.com/users/yashykt/repos",
      "events_url": "https://api.github.com/users/yashykt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yashykt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-12T01:01:28Z",
    "updated_at": "2018-05-12T01:01:28Z",
    "author_association": "MEMBER",
    "body": "\n\n\n\n\n\n\n\n*[src/core/ext/filters/client_channel/client_channel.cc, line 2986 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBgopFHBwcIHjYmPF1J:-LCGX5ky6iLLr0n7huj9:b-jukbuv) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/filters/client_channel/client_channel.cc#L2986)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nThis can use `GPR_UNLIKELY()`.\n</blockquote></details>\n\nIf I remember correctly, RPC cancellation is something that is going to be very frequently used by one of our customers.\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io/reviews/grpc/grpc/15044)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/388519009",
    "html_url": "https://github.com/grpc/grpc/pull/15044#issuecomment-388519009",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15044",
    "id": 388519009,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODUxOTAwOQ==",
    "user": {
      "login": "yashykt",
      "id": 4181124,
      "node_id": "MDQ6VXNlcjQxODExMjQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4181124?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yashykt",
      "html_url": "https://github.com/yashykt",
      "followers_url": "https://api.github.com/users/yashykt/followers",
      "following_url": "https://api.github.com/users/yashykt/following{/other_user}",
      "gists_url": "https://api.github.com/users/yashykt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yashykt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yashykt/subscriptions",
      "organizations_url": "https://api.github.com/users/yashykt/orgs",
      "repos_url": "https://api.github.com/users/yashykt/repos",
      "events_url": "https://api.github.com/users/yashykt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yashykt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-12T01:01:31Z",
    "updated_at": "2018-05-12T01:01:31Z",
    "author_association": "MEMBER",
    "body": "\n\n\n\n\n\n\n\n*[src/core/ext/filters/client_channel/client_channel.cc, line 2948 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBgoccu7IMu3PbyRkyL:-LCGZJml7ID43Vn9ntzm:b58tqj5) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/filters/client_channel/client_channel.cc#L2948)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nThis can use `GPR_LIKELY()`.\n</blockquote></details>\n\nAs far as I understand, this would be false for the first RPC.\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io/reviews/grpc/grpc/15044)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/389613407",
    "html_url": "https://github.com/grpc/grpc/pull/15044#issuecomment-389613407",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15044",
    "id": 389613407,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTYxMzQwNw==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-16T18:08:14Z",
    "updated_at": "2018-05-16T18:08:14Z",
    "author_association": "MEMBER",
    "body": "\n\n\n\nReviewed 14 of 14 files at r2.\nReview status: all files reviewed at latest revision, 50 unresolved discussions, some commit checks failed.\n\n---\n\n*[src/core/ext/filters/client_channel/client_channel.cc, line 2948 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBgoccu7IMu3PbyRkyL:-LCe6T1TDc8ptA9rZZ94:b-ex9kgu) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/filters/client_channel/client_channel.cc#L2948)):*\n<details><summary><i>Previously, yashykt (Yash Tibrewal) wrote…</i></summary><blockquote>\n\nAs far as I understand, this would be false for the first RPC.\n</blockquote></details>\n\nYes.  But the first RPC on a channel will almost always be slower anyway.  I think it's probably fine to slightly penalize the first RPC if it means making every subsequent RPC faster.\n\n---\n\n*[src/core/ext/filters/client_channel/client_channel.cc, line 2986 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBgopFHBwcIHjYmPF1J:-LCe6rLh9OhbKRYvuCEh:b-kgtrr4) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/filters/client_channel/client_channel.cc#L2986)):*\n<details><summary><i>Previously, yashykt (Yash Tibrewal) wrote…</i></summary><blockquote>\n\nIf I remember correctly, RPC cancellation is something that is going to be very frequently used by one of our customers.\n</blockquote></details>\n\nYeah, there's been some discussion of that.  But our code has never assumed that cancellation would be in the fast path.  I think that if we are going to decide that cancellation should be considered part of the fast path, then we have a lot more than just this to optimize.\n\n---\n\n*[src/core/ext/filters/client_channel/client_channel.cc, line 3065 at r1](https://reviewable.io/reviews/grpc/grpc/15044#-LBgp5NI1uJyUTHMFS0R:-LCe7KmrE8ybFgJXx_UM:bcy3aht) ([raw file](https://github.com/grpc/grpc/blob/7f51ba8372b05d92e0ee1af91e9591ac28915d80/src/core/ext/filters/client_channel/client_channel.cc#L3065)):*\n<details><summary><i>Previously, yashykt (Yash Tibrewal) wrote…</i></summary><blockquote>\n\nDeadline checking is dependent on a channel arg. Doesn't seem like a good idea to affect cases with deadline checking disabled.\n</blockquote></details>\n\nThe overwhelmingly common case is for deadline checking to be enabled.  I think Craig intended that this be possible for some embedded cases, but I don't know of any concrete case where anyone is actually disabling it.\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io/reviews/grpc/grpc/15044)*\n<!-- Sent from Reviewable.io -->\n"
  }
]
