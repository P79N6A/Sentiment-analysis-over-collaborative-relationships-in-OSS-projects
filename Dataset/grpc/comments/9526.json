[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/278563794",
    "html_url": "https://github.com/grpc/grpc/issues/9526#issuecomment-278563794",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9526",
    "id": 278563794,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODU2Mzc5NA==",
    "user": {
      "login": "bc-lee",
      "id": 7533290,
      "node_id": "MDQ6VXNlcjc1MzMyOTA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/7533290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bc-lee",
      "html_url": "https://github.com/bc-lee",
      "followers_url": "https://api.github.com/users/bc-lee/followers",
      "following_url": "https://api.github.com/users/bc-lee/following{/other_user}",
      "gists_url": "https://api.github.com/users/bc-lee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bc-lee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bc-lee/subscriptions",
      "organizations_url": "https://api.github.com/users/bc-lee/orgs",
      "repos_url": "https://api.github.com/users/bc-lee/repos",
      "events_url": "https://api.github.com/users/bc-lee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bc-lee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-09T07:06:18Z",
    "updated_at": "2017-02-09T07:06:18Z",
    "author_association": "NONE",
    "body": "Same here. With grpc-1.1.2 and protobuf 3.2.0, somtimes this test hangs, otherwise segfaults. (like `grpc/bins/opt/handshake_client': double free or corruption (!prev)`)\r\n\r\n```\r\n(gdb) i th\r\n  Id   Target Id         Frame \r\n* 1    Thread 0x7f76fa2757c0 (LWP 1900) \"handshake_clien\" 0x00007f76f918f23d in ?? () from /lib/x86_64-linux-gnu/libcrypto.so.1.0.0\r\n  2    Thread 0x7f76f8aa7700 (LWP 1901) \"handshake_clien\" 0x00007f76f918f245 in ?? () from /lib/x86_64-linux-gnu/libcrypto.so.1.0.0\r\n(gdb) bt\r\n#0  0x00007f76f918f23d in ?? () from /lib/x86_64-linux-gnu/libcrypto.so.1.0.0\r\n#1  0x00007f76f918f52c in lh_insert () from /lib/x86_64-linux-gnu/libcrypto.so.1.0.0\r\n#2  0x00007f76f9191c7a in ?? () from /lib/x86_64-linux-gnu/libcrypto.so.1.0.0\r\n#3  0x00007f76f919213b in ERR_load_strings () from /lib/x86_64-linux-gnu/libcrypto.so.1.0.0\r\n#4  0x00007f76f919dcbe in ERR_load_EVP_strings () from /lib/x86_64-linux-gnu/libcrypto.so.1.0.0\r\n#5  0x00007f76f919310d in ERR_load_crypto_strings () from /lib/x86_64-linux-gnu/libcrypto.so.1.0.0\r\n#6  0x00007f76f94f9a69 in SSL_load_error_strings () from /lib/x86_64-linux-gnu/libssl.so.1.0.0\r\n#7  0x000000000043fae0 in init_openssl () at src/core/lib/tsi/ssl_transport_security.c:150\r\n#8  0x00007f76f994aa99 in __pthread_once_slow (once_control=0x68e9f8 <init_openssl_once>, init_routine=0x43fad0 <init_openssl>) at pthread_once.c:116\r\n#9  0x00007f76f994ab35 in __GI___pthread_once (once_control=once_control@entry=0x68e9f8 <init_openssl_once>, init_routine=init_routine@entry=0x43fad0 <init_openssl>) at pthread_once.c:143\r\n#10 0x00000000004497d9 in gpr_once_init (once=once@entry=0x68e9f8 <init_openssl_once>, init_function=init_function@entry=0x43fad0 <init_openssl>) at src/core/lib/support/sync_posix.c:101\r\n#11 0x000000000043fc2f in tsi_create_ssl_client_handshaker_factory (\r\n    pem_private_key=0x1a287c0 \"-----BEGIN PRIVATE KEY-----\\nMIICdQIBADANBgkqhkiG9w0BAQEFAASCAl8wggJbAgEAAoGBAOHDFScoLCVJpYDD\\nM4HYtIdV6Ake/sMNaaKdODjDMsux/4tDydlumN+fm+AjPEK5GHhGn1BgzkWF+slf\\n3BxhrA/8dNsnunstVA7ZBgA/5qQxMfGAq4wHNVX77f\"..., \r\n    pem_private_key_size=912, \r\n    pem_cert_chain=0x1a28b60 \"-----BEGIN CERTIFICATE-----\\nMIICnDCCAgWgAwIBAgIBBzANBgkqhkiG9w0BAQsFADBWMQswCQYDVQQGEwJBVTET\\nMBEGA1UECBMKU29tZS1TdGF0ZTEhMB8GA1UEChMYSW50ZXJuZXQgV2lkZ2l0cyBQ\\ndHkgTHRkMQ8wDQYDVQQDEwZ0ZXN0Y2EwHhcNMTUxMT\"..., \r\n    pem_cert_chain_size=964, \r\n    pem_root_certs=0x1a28460 \"-----BEGIN CERTIFICATE-----\\nMIICSjCCAbOgAwIBAgIJAJHGGR4dGioHMA0GCSqGSIb3DQEBCwUAMFYxCzAJBgNV\\nBAYTAkFVMRMwEQYDVQQIEwpTb21lLVN0YXRlMSEwHwYDVQQKExhJbnRlcm5ldCBX\\naWRnaXRzIFB0eSBMdGQxDzANBgNVBAMTBnRlc3RjYT\"..., \r\n    pem_root_certs_size=pem_root_certs_size@entry=855, cipher_list=0x45c498 \"ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-GCM-SHA384\", alpn_protocols=0x1a28f50, \r\n    alpn_protocols_lengths=0x1a28f70 \"\\b\\002\\006\\371v\\177\", num_alpn_protocols=2, factory=0x1a28fc0) at src/core/lib/tsi/ssl_transport_security.c:1329\r\n#12 0x000000000043bcb4 in grpc_ssl_channel_security_connector_create (exec_ctx=exec_ctx@entry=0x7ffdbdf48ea0, request_metadata_creds=request_metadata_creds@entry=0x0, config=0x1a27d98, target_name=target_name@entry=0x1a28f30 \"127.0.0.1:31900\", \r\n    overridden_target_name=<optimized out>, sc=<optimized out>) at src/core/lib/security/transport/security_connector.c:732\r\n#13 0x000000000043a418 in ssl_create_security_connector (exec_ctx=0x7ffdbdf48ea0, creds=<optimized out>, call_creds=0x0, target=0x1a28f30 \"127.0.0.1:31900\", args=0x7ffdbdf48fb0, sc=<optimized out>, new_args=0x7ffdbdf48e98)\r\n    at src/core/lib/security/credentials/ssl/ssl_credentials.c:87\r\n#14 0x0000000000439e62 in grpc_channel_credentials_create_security_connector (exec_ctx=exec_ctx@entry=0x7ffdbdf48ea0, channel_creds=channel_creds@entry=0x1a27d80, target=target@entry=0x1a28f30 \"127.0.0.1:31900\", args=args@entry=0x7ffdbdf48fb0, \r\n    sc=sc@entry=0x7ffdbdf48e90, new_args=new_args@entry=0x7ffdbdf48e98) at src/core/lib/security/credentials/credentials.c:147\r\n#15 0x0000000000440ec0 in grpc_secure_channel_create (creds=creds@entry=0x1a27d80, target=0x1a28f30 \"127.0.0.1:31900\", args=args@entry=0x7ffdbdf48fb0, reserved=reserved@entry=0x0) at src/core/ext/transport/chttp2/client/secure/secure_channel_create.c:113\r\n#16 0x0000000000404e95 in client_ssl_test (server_alpn_preferred=server_alpn_preferred@entry=0x45c304 \"grpc-exp\") at test/core/handshake/client_ssl.c:259\r\n#17 0x0000000000404630 in main (argc=<optimized out>, argv=<optimized out>) at test/core/handshake/client_ssl.c:304\r\n\r\n(gdb) thread 2\r\n[Switching to thread 2 (Thread 0x7f76f8aa7700 (LWP 1901))]\r\n#0  0x00007f76f918f245 in ?? () from /lib/x86_64-linux-gnu/libcrypto.so.1.0.0\r\n(gdb) bt\r\n#0  0x00007f76f918f245 in ?? () from /lib/x86_64-linux-gnu/libcrypto.so.1.0.0\r\n#1  0x00007f76f918f52c in lh_insert () from /lib/x86_64-linux-gnu/libcrypto.so.1.0.0\r\n#2  0x00007f76f9191c7a in ?? () from /lib/x86_64-linux-gnu/libcrypto.so.1.0.0\r\n#3  0x00007f76f919213b in ERR_load_strings () from /lib/x86_64-linux-gnu/libcrypto.so.1.0.0\r\n#4  0x00007f76f919dcbe in ERR_load_EVP_strings () from /lib/x86_64-linux-gnu/libcrypto.so.1.0.0\r\n#5  0x00007f76f919310d in ERR_load_crypto_strings () from /lib/x86_64-linux-gnu/libcrypto.so.1.0.0\r\n#6  0x00007f76f94f9a69 in SSL_load_error_strings () from /lib/x86_64-linux-gnu/libssl.so.1.0.0\r\n#7  0x0000000000404804 in server_thread (arg=arg@entry=0x7ffdbdf48f90) at test/core/handshake/client_ssl.c:134\r\n#8  0x00000000004498c7 in thread_body (v=<optimized out>) at src/core/lib/support/thd_posix.c:57\r\n#9  0x00007f76f99436ba in start_thread (arg=0x7f76f8aa7700) at pthread_create.c:333\r\n#10 0x00007f76f8db282d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\r\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/319804378",
    "html_url": "https://github.com/grpc/grpc/issues/9526#issuecomment-319804378",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9526",
    "id": 319804378,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTgwNDM3OA==",
    "user": {
      "login": "emmenlau",
      "id": 1098087,
      "node_id": "MDQ6VXNlcjEwOTgwODc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1098087?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/emmenlau",
      "html_url": "https://github.com/emmenlau",
      "followers_url": "https://api.github.com/users/emmenlau/followers",
      "following_url": "https://api.github.com/users/emmenlau/following{/other_user}",
      "gists_url": "https://api.github.com/users/emmenlau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/emmenlau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/emmenlau/subscriptions",
      "organizations_url": "https://api.github.com/users/emmenlau/orgs",
      "repos_url": "https://api.github.com/users/emmenlau/repos",
      "events_url": "https://api.github.com/users/emmenlau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/emmenlau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-02T21:29:26Z",
    "updated_at": "2017-08-02T21:29:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "ping"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/396350872",
    "html_url": "https://github.com/grpc/grpc/issues/9526#issuecomment-396350872",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9526",
    "id": 396350872,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjM1MDg3Mg==",
    "user": {
      "login": "ncteisen",
      "id": 6148140,
      "node_id": "MDQ6VXNlcjYxNDgxNDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6148140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ncteisen",
      "html_url": "https://github.com/ncteisen",
      "followers_url": "https://api.github.com/users/ncteisen/followers",
      "following_url": "https://api.github.com/users/ncteisen/following{/other_user}",
      "gists_url": "https://api.github.com/users/ncteisen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ncteisen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ncteisen/subscriptions",
      "organizations_url": "https://api.github.com/users/ncteisen/orgs",
      "repos_url": "https://api.github.com/users/ncteisen/repos",
      "events_url": "https://api.github.com/users/ncteisen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ncteisen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-11T19:02:26Z",
    "updated_at": "2018-06-11T19:02:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "Is this still occurring? grpc-1.1.0, is quite old at this point. Have you update to a higher version?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/397293731",
    "html_url": "https://github.com/grpc/grpc/issues/9526#issuecomment-397293731",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9526",
    "id": 397293731,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzI5MzczMQ==",
    "user": {
      "login": "emmenlau",
      "id": 1098087,
      "node_id": "MDQ6VXNlcjEwOTgwODc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1098087?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/emmenlau",
      "html_url": "https://github.com/emmenlau",
      "followers_url": "https://api.github.com/users/emmenlau/followers",
      "following_url": "https://api.github.com/users/emmenlau/following{/other_user}",
      "gists_url": "https://api.github.com/users/emmenlau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/emmenlau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/emmenlau/subscriptions",
      "organizations_url": "https://api.github.com/users/emmenlau/orgs",
      "repos_url": "https://api.github.com/users/emmenlau/repos",
      "events_url": "https://api.github.com/users/emmenlau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/emmenlau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-14T13:21:09Z",
    "updated_at": "2018-06-14T13:21:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "I did not test this in a long time, maybe @bc-lee can comment?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/397315953",
    "html_url": "https://github.com/grpc/grpc/issues/9526#issuecomment-397315953",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9526",
    "id": 397315953,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzMxNTk1Mw==",
    "user": {
      "login": "ncteisen",
      "id": 6148140,
      "node_id": "MDQ6VXNlcjYxNDgxNDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6148140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ncteisen",
      "html_url": "https://github.com/ncteisen",
      "followers_url": "https://api.github.com/users/ncteisen/followers",
      "following_url": "https://api.github.com/users/ncteisen/following{/other_user}",
      "gists_url": "https://api.github.com/users/ncteisen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ncteisen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ncteisen/subscriptions",
      "organizations_url": "https://api.github.com/users/ncteisen/orgs",
      "repos_url": "https://api.github.com/users/ncteisen/repos",
      "events_url": "https://api.github.com/users/ncteisen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ncteisen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-14T14:28:25Z",
    "updated_at": "2018-06-14T14:28:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "I actually am able to reproduce the double free on my mac. Not exactly sure what this test is doing but I looked back in time and saw that it was introduced in #8377\r\n\r\n@htuch, can you chime in on what this test is accomplishing? Is it still relevant?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/418333385",
    "html_url": "https://github.com/grpc/grpc/issues/9526#issuecomment-418333385",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9526",
    "id": 418333385,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODMzMzM4NQ==",
    "user": {
      "login": "0xf10413",
      "id": 1663881,
      "node_id": "MDQ6VXNlcjE2NjM4ODE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1663881?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xf10413",
      "html_url": "https://github.com/0xf10413",
      "followers_url": "https://api.github.com/users/0xf10413/followers",
      "following_url": "https://api.github.com/users/0xf10413/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xf10413/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xf10413/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xf10413/subscriptions",
      "organizations_url": "https://api.github.com/users/0xf10413/orgs",
      "repos_url": "https://api.github.com/users/0xf10413/repos",
      "events_url": "https://api.github.com/users/0xf10413/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xf10413/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-04T11:31:41Z",
    "updated_at": "2018-09-04T11:31:41Z",
    "author_association": "NONE",
    "body": "I got almost the same stacktrace as @bc-lee.\r\n\r\nIn test/core/handshake/client_ssl.cc, SSL_load_error_strings() is called on a secondary thread. At the same time, in the main thread,  src/core/tsi/ssl_transport_security.cc calls this function too.\r\nThey're sharing global variables, and calling them twice might cause a random segfault.\r\n\r\nBasically, you end with the same stacktrace if you do this :\r\n```\r\nstd::thread t ([]() {\r\n   SSL_load_error_strings();\r\n});\r\nSSL_load_error_strings();\r\nt.join();\r\nreturn 0;\r\n```\r\nA way to avoid that would be to perform the full SSL init in main() instead of somewhere else in the unit test :\r\n```\r\nint main(int argc, char* argv[]) {\r\n  SSL_library_init();\r\n  OpenSSL_add_ssl_algorithms();\r\n  SSL_load_error_strings();\r\n  ERR_load_crypto_strings();\r\n```\r\nBut i don't know the consequences of calling SSL_library_init and SSL_load_error_strings multiple times. At least if it's not done concurrently, it appears to be fine."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/418338666",
    "html_url": "https://github.com/grpc/grpc/issues/9526#issuecomment-418338666",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9526",
    "id": 418338666,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODMzODY2Ng==",
    "user": {
      "login": "htuch",
      "id": 10914751,
      "node_id": "MDQ6VXNlcjEwOTE0NzUx",
      "avatar_url": "https://avatars1.githubusercontent.com/u/10914751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/htuch",
      "html_url": "https://github.com/htuch",
      "followers_url": "https://api.github.com/users/htuch/followers",
      "following_url": "https://api.github.com/users/htuch/following{/other_user}",
      "gists_url": "https://api.github.com/users/htuch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/htuch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/htuch/subscriptions",
      "organizations_url": "https://api.github.com/users/htuch/orgs",
      "repos_url": "https://api.github.com/users/htuch/repos",
      "events_url": "https://api.github.com/users/htuch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/htuch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-04T11:51:54Z",
    "updated_at": "2018-09-04T11:51:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ncteisen it's relevant as long as we want to preserve the ability to have gRPC as an ALPN negotiated protocol. This is pretty useful in network proxies that want to switch behavior early, prior to HTTP/2 session establishment. My original use case doesn't exist any more, but this does come up from time-to-time in discussions as a capability that some folks are after. I think if we were to do this again, we would have gone via gRFC and had a clear paper trail of the rationale, instead we have some internal mail threads."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/418338972",
    "html_url": "https://github.com/grpc/grpc/issues/9526#issuecomment-418338972",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9526",
    "id": 418338972,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODMzODk3Mg==",
    "user": {
      "login": "htuch",
      "id": 10914751,
      "node_id": "MDQ6VXNlcjEwOTE0NzUx",
      "avatar_url": "https://avatars1.githubusercontent.com/u/10914751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/htuch",
      "html_url": "https://github.com/htuch",
      "followers_url": "https://api.github.com/users/htuch/followers",
      "following_url": "https://api.github.com/users/htuch/following{/other_user}",
      "gists_url": "https://api.github.com/users/htuch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/htuch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/htuch/subscriptions",
      "organizations_url": "https://api.github.com/users/htuch/orgs",
      "repos_url": "https://api.github.com/users/htuch/repos",
      "events_url": "https://api.github.com/users/htuch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/htuch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-04T11:52:59Z",
    "updated_at": "2018-09-04T11:52:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "@0xf10413 doing SSL full init once on main thread seems right, thanks for chasing this down."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/420167924",
    "html_url": "https://github.com/grpc/grpc/issues/9526#issuecomment-420167924",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9526",
    "id": 420167924,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDE2NzkyNA==",
    "user": {
      "login": "0xf10413",
      "id": 1663881,
      "node_id": "MDQ6VXNlcjE2NjM4ODE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1663881?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xf10413",
      "html_url": "https://github.com/0xf10413",
      "followers_url": "https://api.github.com/users/0xf10413/followers",
      "following_url": "https://api.github.com/users/0xf10413/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xf10413/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xf10413/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xf10413/subscriptions",
      "organizations_url": "https://api.github.com/users/0xf10413/orgs",
      "repos_url": "https://api.github.com/users/0xf10413/repos",
      "events_url": "https://api.github.com/users/0xf10413/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xf10413/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-11T06:56:42Z",
    "updated_at": "2018-09-11T07:05:43Z",
    "author_association": "NONE",
    "body": "I took another look at the code because I could not manage to make it work, and I think I understood.\r\n\r\nI was compiling with openssl (not the included boringssl) and the big Makefile. First, there's the init called twice in two threads that was mentioned above.\r\n\r\nThen, there's a missing openssl call to init ECDH parameters. A block of code such as [this one](https://github.com/grpc/grpc/blob/v1.10.1/src/core/tsi/ssl_transport_security.cc#L644). If you don't do that, when negotiating ciphers, openssl will make all ECDH ciphers fail and no available cipher will remain.\r\n\r\nThen, I believe alpn is not initialized properly either. There might be a missing call to SSL_CTX_set_alpn_protos, as in [that code](https://github.com/curl/curl/blob/curl-7_61_1/lib/vtls/openssl.c#L2433), but I couldn't check that.\r\n\r\nBut even with all of this, the test still fails, because when the Makefile detects the OS OpenSSL, a new -DTSI_OPENSSL_ALPN_SUPPORT=0 is added and basically disables ALPN through gRPC. So the client does not send the right ALPN params in the Client Hello, and the test will fail anyway.\r\n\r\nThis test does work with BoringSSL. Why ? I'm not sure, but my guess is that boringssl does more things for its user. The init is 100% static and the [init functions do nothing](https://boringssl.googlesource.com/boringssl/+/HEAD/PORTING.md#initialization), which make them obviously thread-safe (and reentrant). Perhaps the ECDH and ALPN setup are simpler in BoringSSL too ?\r\n\r\nAnyway, for this test. It's protected by a big `#ifdef GRPC_POSIX_SOCKET`, I suggest to change it to a \r\n```\r\n#if defined(GRPC_POSIX_SOCKET) && TSI_OPENSSL_ALPN_SUPPORT\r\n```\r\nto disable the test if ALPN support is disabled.\r\n\r\nEDIT: probably linked to [that issue](https://github.com/grpc/grpc/issues/13809), I got the same error"
  }
]
