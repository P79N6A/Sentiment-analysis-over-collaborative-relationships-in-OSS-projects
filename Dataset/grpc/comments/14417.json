[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/365375170",
    "html_url": "https://github.com/grpc/grpc/pull/14417#issuecomment-365375170",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14417",
    "id": 365375170,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTM3NTE3MA==",
    "user": {
      "login": "mehrdada",
      "id": 900411,
      "node_id": "MDQ6VXNlcjkwMDQxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/900411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mehrdada",
      "html_url": "https://github.com/mehrdada",
      "followers_url": "https://api.github.com/users/mehrdada/followers",
      "following_url": "https://api.github.com/users/mehrdada/following{/other_user}",
      "gists_url": "https://api.github.com/users/mehrdada/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mehrdada/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mehrdada/subscriptions",
      "organizations_url": "https://api.github.com/users/mehrdada/orgs",
      "repos_url": "https://api.github.com/users/mehrdada/repos",
      "events_url": "https://api.github.com/users/mehrdada/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mehrdada/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-13T19:23:20Z",
    "updated_at": "2018-02-13T19:30:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am not confident about the test coverage at all--However, that is orthogonal to clarification of the spec, which in my understanding is the way we *intend* this to work. Are you suggesting that it is not?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/365378906",
    "html_url": "https://github.com/grpc/grpc/pull/14417#issuecomment-365378906",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14417",
    "id": 365378906,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTM3ODkwNg==",
    "user": {
      "login": "mehrdada",
      "id": 900411,
      "node_id": "MDQ6VXNlcjkwMDQxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/900411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mehrdada",
      "html_url": "https://github.com/mehrdada",
      "followers_url": "https://api.github.com/users/mehrdada/followers",
      "following_url": "https://api.github.com/users/mehrdada/following{/other_user}",
      "gists_url": "https://api.github.com/users/mehrdada/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mehrdada/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mehrdada/subscriptions",
      "organizations_url": "https://api.github.com/users/mehrdada/orgs",
      "repos_url": "https://api.github.com/users/mehrdada/repos",
      "events_url": "https://api.github.com/users/mehrdada/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mehrdada/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-13T19:35:54Z",
    "updated_at": "2018-02-13T19:35:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Cool, thanks for the link. I am glad that is the intended behavior, because otherwise it would be a pretty weird future implementation. Considering the documentation of `concurrent.futures.Future` explicitly spells out the behavior too, and that non-zero number of people have been confused by this, I am inclined to say it is worthy of addition. "
  }
]
