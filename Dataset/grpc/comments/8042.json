[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/245900632",
    "html_url": "https://github.com/grpc/grpc/issues/8042#issuecomment-245900632",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8042",
    "id": 245900632,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTkwMDYzMg==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-09T12:36:26Z",
    "updated_at": "2016-09-09T12:36:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "You actually can obtain the trailers using the method `GetTrailers()` from the \"Call\" object.\nhttps://github.com/grpc/grpc/blob/1b5f057995fb2b53746db281ae519d9ae475d24c/src/csharp/Grpc.Core/AsyncUnaryCall.cs#L104\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/246105173",
    "html_url": "https://github.com/grpc/grpc/issues/8042#issuecomment-246105173",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8042",
    "id": 246105173,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjEwNTE3Mw==",
    "user": {
      "login": "RongieZeng",
      "id": 1302662,
      "node_id": "MDQ6VXNlcjEzMDI2NjI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1302662?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RongieZeng",
      "html_url": "https://github.com/RongieZeng",
      "followers_url": "https://api.github.com/users/RongieZeng/followers",
      "following_url": "https://api.github.com/users/RongieZeng/following{/other_user}",
      "gists_url": "https://api.github.com/users/RongieZeng/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RongieZeng/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RongieZeng/subscriptions",
      "organizations_url": "https://api.github.com/users/RongieZeng/orgs",
      "repos_url": "https://api.github.com/users/RongieZeng/repos",
      "events_url": "https://api.github.com/users/RongieZeng/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RongieZeng/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-10T10:47:51Z",
    "updated_at": "2016-09-10T10:49:00Z",
    "author_association": "NONE",
    "body": "But we are using \"BlockingUnaryCall\", and it seems in the \"HandleUnaryResponse\" method,  the field \"responseHeadersTcs\"  which reserve the metadata isn't return, maybe we can add the trailers property to RpcException, and when \"status.StatusCode != StatusCode.OK\",  set \"trailers = responseHeaders\"?\n\n```\n        private void HandleUnaryResponse(bool success, ClientSideStatus receivedStatus, byte[] receivedMessage, Metadata responseHeaders)\n        {\n            // NOTE: because this event is a result of batch containing GRPC_OP_RECV_STATUS_ON_CLIENT,\n            // success will be always set to true.\n\n            using (Profilers.ForCurrentThread().NewScope(\"AsyncCall.HandleUnaryResponse\"))\n            {\n                TResponse msg = default(TResponse);\n                var deserializeException = TryDeserialize(receivedMessage, out msg);\n\n                lock (myLock)\n                {\n                    finished = true;\n\n                    if (deserializeException != null && receivedStatus.Status.StatusCode == StatusCode.OK)\n                    {\n                        receivedStatus = new ClientSideStatus(DeserializeResponseFailureStatus, receivedStatus.Trailers);\n                    }\n                    finishedStatus = receivedStatus;\n\n                    ReleaseResourcesIfPossible();\n                }\n\n                responseHeadersTcs.SetResult(responseHeaders);\n\n                var status = receivedStatus.Status;\n\n                if (status.StatusCode != StatusCode.OK)\n                {\n                    unaryResponseTcs.SetException(new RpcException(status));\n                    return;\n                }\n\n                unaryResponseTcs.SetResult(msg);\n            }\n        }\n\n```\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/246259301",
    "html_url": "https://github.com/grpc/grpc/issues/8042#issuecomment-246259301",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8042",
    "id": 246259301,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjI1OTMwMQ==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-12T06:23:52Z",
    "updated_at": "2016-09-12T06:23:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, you are right that for the blocking unary calls, there's no API to access the trailers. The blocking overload is meant as a convenience and you can always use the non-blocking version of unary call if you need access to the full API. Is using the non-blocking version a problem for you?\n\nOne problem with giving access to trailers through RpcException is that the protocol allows you to also send trailers with an OK status (in which case you don't receive RpcException and there is nowhere to attach trailers besides the existing API for accessing metadata).\nThat said, adding trailers field to the RpcException class seems doable and we might consider that for some of the future releases (right now the biggest priority is to deliver CoreCLR support). \n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/260811311",
    "html_url": "https://github.com/grpc/grpc/issues/8042#issuecomment-260811311",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8042",
    "id": 260811311,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDgxMTMxMQ==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-16T00:06:30Z",
    "updated_at": "2016-11-16T00:06:30Z",
    "author_association": "MEMBER",
    "body": "Please comment on whether or not this bug should remain open.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/260813752",
    "html_url": "https://github.com/grpc/grpc/issues/8042#issuecomment-260813752",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8042",
    "id": 260813752,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDgxMzc1Mg==",
    "user": {
      "login": "apolcyn",
      "id": 9566254,
      "node_id": "MDQ6VXNlcjk1NjYyNTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9566254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apolcyn",
      "html_url": "https://github.com/apolcyn",
      "followers_url": "https://api.github.com/users/apolcyn/followers",
      "following_url": "https://api.github.com/users/apolcyn/following{/other_user}",
      "gists_url": "https://api.github.com/users/apolcyn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apolcyn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apolcyn/subscriptions",
      "organizations_url": "https://api.github.com/users/apolcyn/orgs",
      "repos_url": "https://api.github.com/users/apolcyn/repos",
      "events_url": "https://api.github.com/users/apolcyn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apolcyn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-16T00:19:26Z",
    "updated_at": "2016-11-16T00:19:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think this can stay open to keep it on the road map\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/261879167",
    "html_url": "https://github.com/grpc/grpc/issues/8042#issuecomment-261879167",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8042",
    "id": 261879167,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MTg3OTE2Nw==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-21T08:53:39Z",
    "updated_at": "2016-11-21T08:53:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am planning no action here in the near future."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/273415020",
    "html_url": "https://github.com/grpc/grpc/issues/8042#issuecomment-273415020",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8042",
    "id": 273415020,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MzQxNTAyMA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-18T08:38:10Z",
    "updated_at": "2017-01-18T08:38:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "FTR @neuecc would like to have this feature."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/273497791",
    "html_url": "https://github.com/grpc/grpc/issues/8042#issuecomment-273497791",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8042",
    "id": 273497791,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MzQ5Nzc5MQ==",
    "user": {
      "login": "neuecc",
      "id": 46207,
      "node_id": "MDQ6VXNlcjQ2MjA3",
      "avatar_url": "https://avatars0.githubusercontent.com/u/46207?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/neuecc",
      "html_url": "https://github.com/neuecc",
      "followers_url": "https://api.github.com/users/neuecc/followers",
      "following_url": "https://api.github.com/users/neuecc/following{/other_user}",
      "gists_url": "https://api.github.com/users/neuecc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/neuecc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/neuecc/subscriptions",
      "organizations_url": "https://api.github.com/users/neuecc/orgs",
      "repos_url": "https://api.github.com/users/neuecc/repos",
      "events_url": "https://api.github.com/users/neuecc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/neuecc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-18T14:59:21Z",
    "updated_at": "2017-01-18T14:59:21Z",
    "author_association": "NONE",
    "body": "@jtattermusch \r\n\r\nI've commented why RpcException. https://github.com/grpc/grpc/issues/9235#issuecomment-273052274\r\nCurrent gRPC can not put Japanese in Status.Detail, so as a workaround, we are going to put a message on Trailers instead.\r\nThis is a common process to all calls.\r\n\r\nIdeally I would like to implement such an implementation.\r\n\r\n```csharp\r\npublic static class RpcExceptionExtensions\r\n{\r\n    public static string GetStatusDetailFromTrailers(this RpcException ex)\r\n    {\r\n        // Status.Detail can't take japanese : https://github.com/grpc/grpc/issues/9235\r\n        return ex.GetTrailers()[\"error.details\"].Value;\r\n    }\r\n}\r\n```\r\n\r\nHere is a class probably we will make.\r\n\r\n```csharp\r\npublic interface IResponseAsyncIntercepter\r\n{\r\n    Task<T> ResponseAsync<T>(Func<Task<T>> responseAsync);\r\n}\r\n\r\n// inject this to invoker\r\npublic class ShowDialogIntercepter\r\n{\r\n    public async Task<T> ResponseAsync<T>(Func<Task<T>> responseAsync)\r\n    {\r\n        try\r\n        {\r\n            return await responseAsync();\r\n        }\r\n        catch (RpcException ex)\r\n        {\r\n            var errorDetail = ex.GetStatusDetailFromTrailers();\r\n            MyDialog.Show(errorDetail); // show to user.\r\n            throw new TaskCanceledException(\"top level code handle this and ignore.\", ex);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nHowever, in this case, AsyncUnaryCall can be passed, so I think that it can be avoided as follows.\r\n\r\n```csharp\r\nTask<T> ResponseAsync<T>(Func<Metadata> getTrailers, Func<Task<T>> responseAsync);\r\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/275334395",
    "html_url": "https://github.com/grpc/grpc/issues/8042#issuecomment-275334395",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8042",
    "id": 275334395,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTMzNDM5NQ==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-26T08:40:00Z",
    "updated_at": "2017-01-26T08:40:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am not opposed to reconsidering adding the trailers to RpcException,\r\nbut  the existence of #9235 is a poor reason to do so (there might be others). The right thing is to fix #9235 (I have a fix ready, but it depends on other work to be merged). Fixing #9235 is actually simpler than the workarounds you are suggesting (see the fix in https://github.com/grpc/grpc/pull/9390)."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/313659476",
    "html_url": "https://github.com/grpc/grpc/issues/8042#issuecomment-313659476",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8042",
    "id": 313659476,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzY1OTQ3Ng==",
    "user": {
      "login": "schmitch",
      "id": 1641401,
      "node_id": "MDQ6VXNlcjE2NDE0MDE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1641401?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/schmitch",
      "html_url": "https://github.com/schmitch",
      "followers_url": "https://api.github.com/users/schmitch/followers",
      "following_url": "https://api.github.com/users/schmitch/following{/other_user}",
      "gists_url": "https://api.github.com/users/schmitch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/schmitch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/schmitch/subscriptions",
      "organizations_url": "https://api.github.com/users/schmitch/orgs",
      "repos_url": "https://api.github.com/users/schmitch/repos",
      "events_url": "https://api.github.com/users/schmitch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/schmitch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-07T11:44:17Z",
    "updated_at": "2017-07-07T11:44:17Z",
    "author_association": "NONE",
    "body": "Why is the existence of #9235 a poor reason to support trailing headers in RpcException?\r\n\r\nI mean consider storing Bytes as Metadata, there is no reason to store them inside the Data/Description field.\r\nConsider adding a Protobuf to the Metadata to give a more detailed version of an error, no reason to do that inside a String field?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/317419220",
    "html_url": "https://github.com/grpc/grpc/issues/8042#issuecomment-317419220",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8042",
    "id": 317419220,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzQxOTIyMA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-24T13:16:52Z",
    "updated_at": "2017-07-24T13:16:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "@schmitch   #9235 is a bug in encoding of status details string, and adding a new API element to workaround a bug that can easily be fixed (and already was fixed) is a bad idea.\r\n\r\nAnd yes, you can store binary data in an RPC trailer and use it as protobuf-encoded details about an error (see https://github.com/grpc/grpc/pull/11619/files for an example how to do that), but that has nothing to do with #9235. "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/389345842",
    "html_url": "https://github.com/grpc/grpc/issues/8042#issuecomment-389345842",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8042",
    "id": 389345842,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTM0NTg0Mg==",
    "user": {
      "login": "apolcyn",
      "id": 9566254,
      "node_id": "MDQ6VXNlcjk1NjYyNTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9566254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apolcyn",
      "html_url": "https://github.com/apolcyn",
      "followers_url": "https://api.github.com/users/apolcyn/followers",
      "following_url": "https://api.github.com/users/apolcyn/following{/other_user}",
      "gists_url": "https://api.github.com/users/apolcyn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apolcyn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apolcyn/subscriptions",
      "organizations_url": "https://api.github.com/users/apolcyn/orgs",
      "repos_url": "https://api.github.com/users/apolcyn/repos",
      "events_url": "https://api.github.com/users/apolcyn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apolcyn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-15T23:25:43Z",
    "updated_at": "2018-05-15T23:25:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "should this stay open?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/395707974",
    "html_url": "https://github.com/grpc/grpc/issues/8042#issuecomment-395707974",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8042",
    "id": 395707974,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTcwNzk3NA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-08T09:37:56Z",
    "updated_at": "2018-06-08T09:37:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "Fixed by  #12120."
  }
]
