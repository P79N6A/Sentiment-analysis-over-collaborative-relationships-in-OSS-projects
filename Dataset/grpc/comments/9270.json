[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/270876597",
    "html_url": "https://github.com/grpc/grpc/issues/9270#issuecomment-270876597",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9270",
    "id": 270876597,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MDg3NjU5Nw==",
    "user": {
      "login": "tonicbupt",
      "id": 1748597,
      "node_id": "MDQ6VXNlcjE3NDg1OTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1748597?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tonicbupt",
      "html_url": "https://github.com/tonicbupt",
      "followers_url": "https://api.github.com/users/tonicbupt/followers",
      "following_url": "https://api.github.com/users/tonicbupt/following{/other_user}",
      "gists_url": "https://api.github.com/users/tonicbupt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tonicbupt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tonicbupt/subscriptions",
      "organizations_url": "https://api.github.com/users/tonicbupt/orgs",
      "repos_url": "https://api.github.com/users/tonicbupt/repos",
      "events_url": "https://api.github.com/users/tonicbupt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tonicbupt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-06T10:33:45Z",
    "updated_at": "2017-01-06T10:33:45Z",
    "author_association": "NONE",
    "body": "same problem, used to be `AbortionError`, now it's `_Rendezvous`.\r\nthe error was that `err` returned by golang server"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/270991114",
    "html_url": "https://github.com/grpc/grpc/issues/9270#issuecomment-270991114",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9270",
    "id": 270991114,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MDk5MTExNA==",
    "user": {
      "login": "kpayson64",
      "id": 18316330,
      "node_id": "MDQ6VXNlcjE4MzE2MzMw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18316330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kpayson64",
      "html_url": "https://github.com/kpayson64",
      "followers_url": "https://api.github.com/users/kpayson64/followers",
      "following_url": "https://api.github.com/users/kpayson64/following{/other_user}",
      "gists_url": "https://api.github.com/users/kpayson64/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kpayson64/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kpayson64/subscriptions",
      "organizations_url": "https://api.github.com/users/kpayson64/orgs",
      "repos_url": "https://api.github.com/users/kpayson64/repos",
      "events_url": "https://api.github.com/users/kpayson64/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kpayson64/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-06T19:57:14Z",
    "updated_at": "2017-01-06T19:57:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "The exception API changed between the beta and GA API.\r\n\r\nIn the GA API, clients should catch ```grpc.RpcError```s.  ```_Rendezvous``` is the underlying internal type, and is subject to change so you should avoid catching this type directly."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/271063859",
    "html_url": "https://github.com/grpc/grpc/issues/9270#issuecomment-271063859",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9270",
    "id": 271063859,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTA2Mzg1OQ==",
    "user": {
      "login": "tonicbupt",
      "id": 1748597,
      "node_id": "MDQ6VXNlcjE3NDg1OTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1748597?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tonicbupt",
      "html_url": "https://github.com/tonicbupt",
      "followers_url": "https://api.github.com/users/tonicbupt/followers",
      "following_url": "https://api.github.com/users/tonicbupt/following{/other_user}",
      "gists_url": "https://api.github.com/users/tonicbupt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tonicbupt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tonicbupt/subscriptions",
      "organizations_url": "https://api.github.com/users/tonicbupt/orgs",
      "repos_url": "https://api.github.com/users/tonicbupt/repos",
      "events_url": "https://api.github.com/users/tonicbupt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tonicbupt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-07T05:14:27Z",
    "updated_at": "2017-01-07T05:14:27Z",
    "author_association": "NONE",
    "body": "ðŸ™€ so exceptions like `AbortionError` are replaced by `grpc.RpcError` ... got ... "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/271063967",
    "html_url": "https://github.com/grpc/grpc/issues/9270#issuecomment-271063967",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9270",
    "id": 271063967,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTA2Mzk2Nw==",
    "user": {
      "login": "tonicbupt",
      "id": 1748597,
      "node_id": "MDQ6VXNlcjE3NDg1OTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1748597?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tonicbupt",
      "html_url": "https://github.com/tonicbupt",
      "followers_url": "https://api.github.com/users/tonicbupt/followers",
      "following_url": "https://api.github.com/users/tonicbupt/following{/other_user}",
      "gists_url": "https://api.github.com/users/tonicbupt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tonicbupt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tonicbupt/subscriptions",
      "organizations_url": "https://api.github.com/users/tonicbupt/orgs",
      "repos_url": "https://api.github.com/users/tonicbupt/repos",
      "events_url": "https://api.github.com/users/tonicbupt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tonicbupt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-07T05:17:29Z",
    "updated_at": "2017-01-07T05:17:29Z",
    "author_association": "NONE",
    "body": "but as I see, `NoStubError` and `AbortionError` has no inherited relationship with `RpcError` ... does this mean that in GA API, only `RpcError` will be raised and no more exceptions in `framework/interfaces/face/face.py` will be raised?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/271199944",
    "html_url": "https://github.com/grpc/grpc/issues/9270#issuecomment-271199944",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9270",
    "id": 271199944,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTE5OTk0NA==",
    "user": {
      "login": "kpayson64",
      "id": 18316330,
      "node_id": "MDQ6VXNlcjE4MzE2MzMw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18316330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kpayson64",
      "html_url": "https://github.com/kpayson64",
      "followers_url": "https://api.github.com/users/kpayson64/followers",
      "following_url": "https://api.github.com/users/kpayson64/following{/other_user}",
      "gists_url": "https://api.github.com/users/kpayson64/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kpayson64/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kpayson64/subscriptions",
      "organizations_url": "https://api.github.com/users/kpayson64/orgs",
      "repos_url": "https://api.github.com/users/kpayson64/repos",
      "events_url": "https://api.github.com/users/kpayson64/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kpayson64/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-09T02:08:39Z",
    "updated_at": "2017-01-09T02:08:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "Correct.  The old exception types are not part of the GA API."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/271209325",
    "html_url": "https://github.com/grpc/grpc/issues/9270#issuecomment-271209325",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9270",
    "id": 271209325,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTIwOTMyNQ==",
    "user": {
      "login": "timfeirg",
      "id": 4319104,
      "node_id": "MDQ6VXNlcjQzMTkxMDQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4319104?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/timfeirg",
      "html_url": "https://github.com/timfeirg",
      "followers_url": "https://api.github.com/users/timfeirg/followers",
      "following_url": "https://api.github.com/users/timfeirg/following{/other_user}",
      "gists_url": "https://api.github.com/users/timfeirg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/timfeirg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/timfeirg/subscriptions",
      "organizations_url": "https://api.github.com/users/timfeirg/orgs",
      "repos_url": "https://api.github.com/users/timfeirg/repos",
      "events_url": "https://api.github.com/users/timfeirg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/timfeirg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-09T04:23:56Z",
    "updated_at": "2017-01-09T04:23:56Z",
    "author_association": "NONE",
    "body": "closing this issue now, however I think it's best to reflect this conclusion somewhere in the documents."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/306337517",
    "html_url": "https://github.com/grpc/grpc/issues/9270#issuecomment-306337517",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9270",
    "id": 306337517,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjMzNzUxNw==",
    "user": {
      "login": "genericmoniker",
      "id": 2375404,
      "node_id": "MDQ6VXNlcjIzNzU0MDQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2375404?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/genericmoniker",
      "html_url": "https://github.com/genericmoniker",
      "followers_url": "https://api.github.com/users/genericmoniker/followers",
      "following_url": "https://api.github.com/users/genericmoniker/following{/other_user}",
      "gists_url": "https://api.github.com/users/genericmoniker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/genericmoniker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/genericmoniker/subscriptions",
      "organizations_url": "https://api.github.com/users/genericmoniker/orgs",
      "repos_url": "https://api.github.com/users/genericmoniker/repos",
      "events_url": "https://api.github.com/users/genericmoniker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/genericmoniker/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-05T23:20:07Z",
    "updated_at": "2017-06-05T23:20:07Z",
    "author_association": "NONE",
    "body": "I'm still confused. In #3436, there is the suggestion to call `context.set_details` on the server side, but on the client side, the only way I see to access the details is through `_Rendezvous._state.details`. `RpcError` doesn't have `_state` itself, and even if it did it is \"private\".  \r\n\r\nIs there up-to-date guidance somewhere about how to send application errors over gRPC?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/366797858",
    "html_url": "https://github.com/grpc/grpc/issues/9270#issuecomment-366797858",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9270",
    "id": 366797858,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Njc5Nzg1OA==",
    "user": {
      "login": "eaglo",
      "id": 6476057,
      "node_id": "MDQ6VXNlcjY0NzYwNTc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6476057?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eaglo",
      "html_url": "https://github.com/eaglo",
      "followers_url": "https://api.github.com/users/eaglo/followers",
      "following_url": "https://api.github.com/users/eaglo/following{/other_user}",
      "gists_url": "https://api.github.com/users/eaglo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eaglo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eaglo/subscriptions",
      "organizations_url": "https://api.github.com/users/eaglo/orgs",
      "repos_url": "https://api.github.com/users/eaglo/repos",
      "events_url": "https://api.github.com/users/eaglo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eaglo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-19T20:40:46Z",
    "updated_at": "2018-02-19T20:40:46Z",
    "author_association": "NONE",
    "body": "Was the above question ever answered?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/367612367",
    "html_url": "https://github.com/grpc/grpc/issues/9270#issuecomment-367612367",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9270",
    "id": 367612367,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzYxMjM2Nw==",
    "user": {
      "login": "timfeirg",
      "id": 4319104,
      "node_id": "MDQ6VXNlcjQzMTkxMDQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4319104?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/timfeirg",
      "html_url": "https://github.com/timfeirg",
      "followers_url": "https://api.github.com/users/timfeirg/followers",
      "following_url": "https://api.github.com/users/timfeirg/following{/other_user}",
      "gists_url": "https://api.github.com/users/timfeirg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/timfeirg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/timfeirg/subscriptions",
      "organizations_url": "https://api.github.com/users/timfeirg/orgs",
      "repos_url": "https://api.github.com/users/timfeirg/repos",
      "events_url": "https://api.github.com/users/timfeirg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/timfeirg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-22T09:03:45Z",
    "updated_at": "2018-02-22T09:03:45Z",
    "author_association": "NONE",
    "body": "see https://github.com/grpc/grpc/issues/9270#issuecomment-270991114 @eaglo ?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/367628297",
    "html_url": "https://github.com/grpc/grpc/issues/9270#issuecomment-367628297",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9270",
    "id": 367628297,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzYyODI5Nw==",
    "user": {
      "login": "eaglo",
      "id": 6476057,
      "node_id": "MDQ6VXNlcjY0NzYwNTc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6476057?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eaglo",
      "html_url": "https://github.com/eaglo",
      "followers_url": "https://api.github.com/users/eaglo/followers",
      "following_url": "https://api.github.com/users/eaglo/following{/other_user}",
      "gists_url": "https://api.github.com/users/eaglo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eaglo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eaglo/subscriptions",
      "organizations_url": "https://api.github.com/users/eaglo/orgs",
      "repos_url": "https://api.github.com/users/eaglo/repos",
      "events_url": "https://api.github.com/users/eaglo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eaglo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-22T09:57:32Z",
    "updated_at": "2018-02-22T09:57:32Z",
    "author_association": "NONE",
    "body": "thanks, but i was referring to this comment here:\r\n\r\n> I'm still confused. In #3436, there is the suggestion to call context.set_details on the server side, but on the client side, the only way I see to access the details is through _Rendezvous._state.details. RpcError doesn't have _state itself, and even if it did it is \"private\".\r\n> Is there up-to-date guidance somewhere about how to send application errors over gRPC?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/367741206",
    "html_url": "https://github.com/grpc/grpc/issues/9270#issuecomment-367741206",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9270",
    "id": 367741206,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Nzc0MTIwNg==",
    "user": {
      "login": "genericmoniker",
      "id": 2375404,
      "node_id": "MDQ6VXNlcjIzNzU0MDQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2375404?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/genericmoniker",
      "html_url": "https://github.com/genericmoniker",
      "followers_url": "https://api.github.com/users/genericmoniker/followers",
      "following_url": "https://api.github.com/users/genericmoniker/following{/other_user}",
      "gists_url": "https://api.github.com/users/genericmoniker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/genericmoniker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/genericmoniker/subscriptions",
      "organizations_url": "https://api.github.com/users/genericmoniker/orgs",
      "repos_url": "https://api.github.com/users/genericmoniker/repos",
      "events_url": "https://api.github.com/users/genericmoniker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/genericmoniker/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-22T16:39:40Z",
    "updated_at": "2018-02-22T16:39:40Z",
    "author_association": "NONE",
    "body": "If an `RpcError` happens to be a `_Rendezvous`, it will have a `details` method, so I ended up doing something like:\r\n\r\n``` \r\n    try:\r\n        message = rpc_error.details()\r\n    except AttributeError:\r\n        message = str(rpc_error)\r\n```\r\nI'm open to better guidance, though."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/398726629",
    "html_url": "https://github.com/grpc/grpc/issues/9270#issuecomment-398726629",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9270",
    "id": 398726629,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODcyNjYyOQ==",
    "user": {
      "login": "eaglo",
      "id": 6476057,
      "node_id": "MDQ6VXNlcjY0NzYwNTc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6476057?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eaglo",
      "html_url": "https://github.com/eaglo",
      "followers_url": "https://api.github.com/users/eaglo/followers",
      "following_url": "https://api.github.com/users/eaglo/following{/other_user}",
      "gists_url": "https://api.github.com/users/eaglo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eaglo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eaglo/subscriptions",
      "organizations_url": "https://api.github.com/users/eaglo/orgs",
      "repos_url": "https://api.github.com/users/eaglo/repos",
      "events_url": "https://api.github.com/users/eaglo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eaglo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-20T12:10:09Z",
    "updated_at": "2018-06-20T12:10:09Z",
    "author_association": "NONE",
    "body": "yeah i think i'm going to do the same ... thats very unsatisfying ... i wonder how other people solve it"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/398796613",
    "html_url": "https://github.com/grpc/grpc/issues/9270#issuecomment-398796613",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9270",
    "id": 398796613,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODc5NjYxMw==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-20T15:39:10Z",
    "updated_at": "2018-06-20T15:39:10Z",
    "author_association": "MEMBER",
    "body": "This part of the API hinges on the fact that where `grpc.RpcError`s are raised on the invocation-side of an RPC, the object that is raised is never _solely_ a `grpc.RpcError`. See [the `Raises` section of `grpc.UnaryUnaryMultiCallable.__call__`: \"The raised RpcError will also be a Call for the RPC affording the RPCâ€™s metadata, status code, and details.\".](https://grpc.io/grpc/python/grpc.html#grpc.UnaryUnaryMultiCallable.__call__) So invocation-side code that needs to handle errors (probably all but the simplest code) should look like\r\n```python\r\ntry:\r\n  my_response = my_stub.MyMethod(my_request)\r\nexcept grpc.RpcError as rpc_error_call:  # Since this object is guaranteed to be a grpc.Call, might as well include that in its name.\r\n  my_code = rpc_error_call.code()\r\n  my_details = rpc_error_call.details()\r\n```\r\n. Yes, you should not write abstraction-violating code that accesses underscore-prefixed private code elements of another system. We are going to get rid of `grpc._channel._Rendezvous` at some point..."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/400970921",
    "html_url": "https://github.com/grpc/grpc/issues/9270#issuecomment-400970921",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9270",
    "id": 400970921,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDk3MDkyMQ==",
    "user": {
      "login": "eaglo",
      "id": 6476057,
      "node_id": "MDQ6VXNlcjY0NzYwNTc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6476057?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eaglo",
      "html_url": "https://github.com/eaglo",
      "followers_url": "https://api.github.com/users/eaglo/followers",
      "following_url": "https://api.github.com/users/eaglo/following{/other_user}",
      "gists_url": "https://api.github.com/users/eaglo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eaglo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eaglo/subscriptions",
      "organizations_url": "https://api.github.com/users/eaglo/orgs",
      "repos_url": "https://api.github.com/users/eaglo/repos",
      "events_url": "https://api.github.com/users/eaglo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eaglo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-28T09:21:25Z",
    "updated_at": "2018-06-28T09:21:25Z",
    "author_association": "NONE",
    "body": "Hi @nathanielmanistaatgoogle thanks thats actually very helpful. Would be nice if this snippet and the mention of the grpc.Call was part of the python grpc introduction as well - it is kind of hard imo to find that out from the API reference. \r\n\r\nAre there any plans to extend the interface of an RpcError as well?\r\n\r\nI only know of this page atm http://avi.im/grpc-errors/ and the handling they present on the python client isn't really reassuring. If i would have known that the error is guaranteed to be an grpc.Call it would have been more obvious that i can use these methods. \r\n\r\nAdditionally i was wondering if there is some kind of specification of what an error has to conform to or how it is transmitted and which fields it should have. If you take a look at Node at the website i mentioned earlier: they use 'code' and 'message' instead of 'code' and 'details'. The 'code' field seems to be the only constant thing.\r\n\r\nWould it be allowed (or even possible) to use for example a custom error code and a protobuf message as details?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/407131377",
    "html_url": "https://github.com/grpc/grpc/issues/9270#issuecomment-407131377",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9270",
    "id": 407131377,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzEzMTM3Nw==",
    "user": {
      "login": "hozn",
      "id": 391939,
      "node_id": "MDQ6VXNlcjM5MTkzOQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/391939?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hozn",
      "html_url": "https://github.com/hozn",
      "followers_url": "https://api.github.com/users/hozn/followers",
      "following_url": "https://api.github.com/users/hozn/following{/other_user}",
      "gists_url": "https://api.github.com/users/hozn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hozn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hozn/subscriptions",
      "organizations_url": "https://api.github.com/users/hozn/orgs",
      "repos_url": "https://api.github.com/users/hozn/repos",
      "events_url": "https://api.github.com/users/hozn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hozn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-23T17:08:29Z",
    "updated_at": "2018-07-23T17:08:29Z",
    "author_association": "NONE",
    "body": "This is kinda terrible ... \r\n\r\nIf the RpcError have these attributes/methods, they should be defined on that class.  Or create multiple concrete RpcError subclasses that mixin the appropriate \"parent\" Call etc. classes that define these methods."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/409533881",
    "html_url": "https://github.com/grpc/grpc/issues/9270#issuecomment-409533881",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9270",
    "id": 409533881,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTUzMzg4MQ==",
    "user": {
      "login": "eaglo",
      "id": 6476057,
      "node_id": "MDQ6VXNlcjY0NzYwNTc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6476057?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eaglo",
      "html_url": "https://github.com/eaglo",
      "followers_url": "https://api.github.com/users/eaglo/followers",
      "following_url": "https://api.github.com/users/eaglo/following{/other_user}",
      "gists_url": "https://api.github.com/users/eaglo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eaglo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eaglo/subscriptions",
      "organizations_url": "https://api.github.com/users/eaglo/orgs",
      "repos_url": "https://api.github.com/users/eaglo/repos",
      "events_url": "https://api.github.com/users/eaglo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eaglo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-01T10:48:22Z",
    "updated_at": "2018-08-01T10:48:22Z",
    "author_association": "NONE",
    "body": "any more information on this? :/"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/414084096",
    "html_url": "https://github.com/grpc/grpc/issues/9270#issuecomment-414084096",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9270",
    "id": 414084096,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDA4NDA5Ng==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-18T20:22:37Z",
    "updated_at": "2018-08-18T20:22:37Z",
    "author_association": "MEMBER",
    "body": "@eaglo: not really, at least not in code? We don't have a strong desire to create multiply-inheriting-but-otherwise-empty classes that bloat gRPC Python's public API; we think a narrow API is a sustainable API and [if Python's type system doesn't yet let us describe how our code works, we should expand the type system rather than degrading our code](https://github.com/python/typing/issues/529). On the documentation side: [yes, the documentation absolutely should cover error handling](https://github.com/grpc/grpc.github.io/issues/368)."
  }
]
