[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/278341316",
    "html_url": "https://github.com/grpc/grpc/issues/9591#issuecomment-278341316",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9591",
    "id": 278341316,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODM0MTMxNg==",
    "user": {
      "login": "pollen8",
      "id": 28268,
      "node_id": "MDQ6VXNlcjI4MjY4",
      "avatar_url": "https://avatars0.githubusercontent.com/u/28268?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pollen8",
      "html_url": "https://github.com/pollen8",
      "followers_url": "https://api.github.com/users/pollen8/followers",
      "following_url": "https://api.github.com/users/pollen8/following{/other_user}",
      "gists_url": "https://api.github.com/users/pollen8/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pollen8/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pollen8/subscriptions",
      "organizations_url": "https://api.github.com/users/pollen8/orgs",
      "repos_url": "https://api.github.com/users/pollen8/repos",
      "events_url": "https://api.github.com/users/pollen8/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pollen8/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-08T14:21:47Z",
    "updated_at": "2017-02-08T14:21:47Z",
    "author_association": "NONE",
    "body": "I'm a grpc n00b but try,....\r\n```\r\n  const proto = grpc.load({root: __dirname, file: 'test.proto'});\r\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/278496284",
    "html_url": "https://github.com/grpc/grpc/issues/9591#issuecomment-278496284",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9591",
    "id": 278496284,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODQ5NjI4NA==",
    "user": {
      "login": "konsumer",
      "id": 83857,
      "node_id": "MDQ6VXNlcjgzODU3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/83857?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/konsumer",
      "html_url": "https://github.com/konsumer",
      "followers_url": "https://api.github.com/users/konsumer/followers",
      "following_url": "https://api.github.com/users/konsumer/following{/other_user}",
      "gists_url": "https://api.github.com/users/konsumer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/konsumer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/konsumer/subscriptions",
      "organizations_url": "https://api.github.com/users/konsumer/orgs",
      "repos_url": "https://api.github.com/users/konsumer/repos",
      "events_url": "https://api.github.com/users/konsumer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/konsumer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-08T23:24:37Z",
    "updated_at": "2017-02-08T23:24:37Z",
    "author_association": "NONE",
    "body": "@pollen8 that still doesn't resolve the issue that I can't include my system-wide copy of googleapis, but if I put it in the same dir as __dirname & test.proto, it does work, which is a great workaround, even if it is a bit of a compromise.\r\n\r\nIs it not desired for it to work like protoc? For reference, to generate javascript with protoc, I can do this without issue:\r\n\r\n```\r\nprotoc -I/protobuf -I$(pwd) $(pwd)/test.proto --js_out=import_style=commonjs,binary:generated\r\n```\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/278499875",
    "html_url": "https://github.com/grpc/grpc/issues/9591#issuecomment-278499875",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9591",
    "id": 278499875,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODQ5OTg3NQ==",
    "user": {
      "login": "konsumer",
      "id": 83857,
      "node_id": "MDQ6VXNlcjgzODU3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/83857?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/konsumer",
      "html_url": "https://github.com/konsumer",
      "followers_url": "https://api.github.com/users/konsumer/followers",
      "following_url": "https://api.github.com/users/konsumer/following{/other_user}",
      "gists_url": "https://api.github.com/users/konsumer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/konsumer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/konsumer/subscriptions",
      "organizations_url": "https://api.github.com/users/konsumer/orgs",
      "repos_url": "https://api.github.com/users/konsumer/repos",
      "events_url": "https://api.github.com/users/konsumer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/konsumer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-08T23:43:08Z",
    "updated_at": "2017-02-08T23:43:08Z",
    "author_association": "NONE",
    "body": "For now, I can just have a single include dir that has all the google stuff in it, too, and use that as `root`. I guess it's not a huge deal, and it will work in protoc and grpc."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/278598448",
    "html_url": "https://github.com/grpc/grpc/issues/9591#issuecomment-278598448",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9591",
    "id": 278598448,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODU5ODQ0OA==",
    "user": {
      "login": "pollen8",
      "id": 28268,
      "node_id": "MDQ6VXNlcjI4MjY4",
      "avatar_url": "https://avatars0.githubusercontent.com/u/28268?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pollen8",
      "html_url": "https://github.com/pollen8",
      "followers_url": "https://api.github.com/users/pollen8/followers",
      "following_url": "https://api.github.com/users/pollen8/following{/other_user}",
      "gists_url": "https://api.github.com/users/pollen8/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pollen8/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pollen8/subscriptions",
      "organizations_url": "https://api.github.com/users/pollen8/orgs",
      "repos_url": "https://api.github.com/users/pollen8/repos",
      "events_url": "https://api.github.com/users/pollen8/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pollen8/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-09T10:05:32Z",
    "updated_at": "2017-02-09T10:05:32Z",
    "author_association": "NONE",
    "body": "yes, that's what I ended up doing as well.\r\nIt looks like in protobuf6 you can do this\r\n\r\n```\r\nconst protoFile = path.join(__dirname, '/protos/myproto.proto');\r\nconst root = new protobuf.Root();\r\n\r\nroot.resolvePath = function(origin, target) {\r\n    return path/to/protofile\r\n};\r\n\r\nprotobuf.load(protoFile, root, function(err, root) {\r\n....\r\n})\r\n```\r\n\r\nbut grpc is currently on protobuf5 and I'm not sure if the grpc.load method will be updated to allow the injection of the root object. "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/278733309",
    "html_url": "https://github.com/grpc/grpc/issues/9591#issuecomment-278733309",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9591",
    "id": 278733309,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODczMzMwOQ==",
    "user": {
      "login": "konsumer",
      "id": 83857,
      "node_id": "MDQ6VXNlcjgzODU3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/83857?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/konsumer",
      "html_url": "https://github.com/konsumer",
      "followers_url": "https://api.github.com/users/konsumer/followers",
      "following_url": "https://api.github.com/users/konsumer/following{/other_user}",
      "gists_url": "https://api.github.com/users/konsumer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/konsumer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/konsumer/subscriptions",
      "organizations_url": "https://api.github.com/users/konsumer/orgs",
      "repos_url": "https://api.github.com/users/konsumer/repos",
      "events_url": "https://api.github.com/users/konsumer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/konsumer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-09T18:40:51Z",
    "updated_at": "2017-02-09T18:41:04Z",
    "author_association": "NONE",
    "body": "Yeh, we explored some of that [here](https://github.com/dcodeIO/protobuf.js/issues/368). So, maybe the better question is \"How can I help upgrade the dependency version of protobuffjs?\""
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/279877207",
    "html_url": "https://github.com/grpc/grpc/issues/9591#issuecomment-279877207",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9591",
    "id": 279877207,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTg3NzIwNw==",
    "user": {
      "login": "konsumer",
      "id": 83857,
      "node_id": "MDQ6VXNlcjgzODU3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/83857?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/konsumer",
      "html_url": "https://github.com/konsumer",
      "followers_url": "https://api.github.com/users/konsumer/followers",
      "following_url": "https://api.github.com/users/konsumer/following{/other_user}",
      "gists_url": "https://api.github.com/users/konsumer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/konsumer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/konsumer/subscriptions",
      "organizations_url": "https://api.github.com/users/konsumer/orgs",
      "repos_url": "https://api.github.com/users/konsumer/repos",
      "events_url": "https://api.github.com/users/konsumer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/konsumer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-15T00:07:33Z",
    "updated_at": "2017-02-15T00:07:33Z",
    "author_association": "NONE",
    "body": "Actually, I spoke too soon. I made a minimal example that better illustrates what I am trying to accomplish [here](https://github.com/konsumer/grpc_issue_9591).\r\n\r\nI want to keep my definitions in a namespaced directory, and import them from each other.\r\n\r\n\r\nWhen I run it, I get this:\r\n\r\n```\r\n> grpc_issue@0.0.1 start /Users/konsumer/Desktop/grpc_issue\r\n> node index.js\r\n\r\n/Users/konsumer/Desktop/grpc_issue/node_modules/grpc/src/node/index.js:124\r\n  return loadObject(builder.ns, options);\r\n                           ^\r\n\r\nTypeError: Cannot read property 'ns' of null\r\n    at Object.load (/Users/konsumer/Desktop/grpc_issue/node_modules/grpc/src/node/index.js:124:28)\r\n    at Object.<anonymous> (/Users/konsumer/Desktop/grpc_issue/index.js:5:20)\r\n    at Module._compile (module.js:571:32)\r\n    at Object.Module._extensions..js (module.js:580:10)\r\n    at Module.load (module.js:488:32)\r\n    at tryModuleLoad (module.js:447:12)\r\n    at Function.Module._load (module.js:439:3)\r\n    at Module.runMain (module.js:605:10)\r\n    at run (bootstrap_node.js:420:7)\r\n    at startup (bootstrap_node.js:139:9)\r\n```\r\n\r\nWhich is grpc's way of saying \"couldn't find a proto file\" (see #9652)\r\n\r\nNo probs if I run protoc like this:\r\n\r\n```\r\nprotoc -I$(pwd)/proto/ $(pwd)/proto/demo/rpc/helloworld.proto --js_out=import_style=commonjs,binary:generated\r\n```\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/279880923",
    "html_url": "https://github.com/grpc/grpc/issues/9591#issuecomment-279880923",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9591",
    "id": 279880923,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTg4MDkyMw==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-15T00:29:06Z",
    "updated_at": "2017-02-15T00:29:06Z",
    "author_association": "MEMBER",
    "body": "Did you try the above suggestion with `{root: 'path/to/proto/', file: 'demo/rpc/helloworld.proto'}`? I think that should be functionally equivalent to that protoc command. Alternatively, you could just use protoc. You can get a copy of protoc that comes with the JavaScript gRPC code generator by installing the npm package `grpc-tools`, and that just requires an extra parameter `--grpc_out=out_path` to get service files for gRPC."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/279882521",
    "html_url": "https://github.com/grpc/grpc/issues/9591#issuecomment-279882521",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9591",
    "id": 279882521,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTg4MjUyMQ==",
    "user": {
      "login": "konsumer",
      "id": 83857,
      "node_id": "MDQ6VXNlcjgzODU3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/83857?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/konsumer",
      "html_url": "https://github.com/konsumer",
      "followers_url": "https://api.github.com/users/konsumer/followers",
      "following_url": "https://api.github.com/users/konsumer/following{/other_user}",
      "gists_url": "https://api.github.com/users/konsumer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/konsumer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/konsumer/subscriptions",
      "organizations_url": "https://api.github.com/users/konsumer/orgs",
      "repos_url": "https://api.github.com/users/konsumer/repos",
      "events_url": "https://api.github.com/users/konsumer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/konsumer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-15T00:38:42Z",
    "updated_at": "2017-02-15T00:38:42Z",
    "author_association": "NONE",
    "body": "Aha!\r\n\r\nIn [the example](https://github.com/konsumer/grpc_issue_9591) I had this:\r\n\r\n```js\r\nconst proto = grpc.load({\r\n  file: resolve(__dirname, 'proto/demo/rpc/helloworld.proto'),\r\n  root: resolve(__dirname, 'proto')\r\n})\r\n```\r\n\r\nIf I strip off the path for `file`, it actually works fine. Sort of confusing, because it's not exactly equivalent to protoc command (with full path.) So I ended up with this:\r\n\r\n```js\r\nconst proto = grpc.load({\r\n  file: 'demo/rpc/helloworld.proto',\r\n  root: resolve(__dirname, 'proto')\r\n})\r\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/279882985",
    "html_url": "https://github.com/grpc/grpc/issues/9591#issuecomment-279882985",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9591",
    "id": 279882985,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTg4Mjk4NQ==",
    "user": {
      "login": "konsumer",
      "id": 83857,
      "node_id": "MDQ6VXNlcjgzODU3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/83857?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/konsumer",
      "html_url": "https://github.com/konsumer",
      "followers_url": "https://api.github.com/users/konsumer/followers",
      "following_url": "https://api.github.com/users/konsumer/following{/other_user}",
      "gists_url": "https://api.github.com/users/konsumer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/konsumer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/konsumer/subscriptions",
      "organizations_url": "https://api.github.com/users/konsumer/orgs",
      "repos_url": "https://api.github.com/users/konsumer/repos",
      "events_url": "https://api.github.com/users/konsumer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/konsumer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-15T00:41:40Z",
    "updated_at": "2017-02-15T00:41:40Z",
    "author_association": "NONE",
    "body": "@murgatroid99 Re: using protoc, I am trying to make dynamic tools that use the proto files directly, so I can generate a client & server from a minimal server implementation + proto file. I want to not have to keep generated stuff in sync with the proto file, and just use the definition directly."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/358064888",
    "html_url": "https://github.com/grpc/grpc/issues/9591#issuecomment-358064888",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9591",
    "id": 358064888,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODA2NDg4OA==",
    "user": {
      "login": "jamezmoran",
      "id": 6832121,
      "node_id": "MDQ6VXNlcjY4MzIxMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6832121?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamezmoran",
      "html_url": "https://github.com/jamezmoran",
      "followers_url": "https://api.github.com/users/jamezmoran/followers",
      "following_url": "https://api.github.com/users/jamezmoran/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamezmoran/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamezmoran/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamezmoran/subscriptions",
      "organizations_url": "https://api.github.com/users/jamezmoran/orgs",
      "repos_url": "https://api.github.com/users/jamezmoran/repos",
      "events_url": "https://api.github.com/users/jamezmoran/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamezmoran/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-16T18:47:48Z",
    "updated_at": "2018-01-16T18:48:31Z",
    "author_association": "NONE",
    "body": "Where did you guys find the documentation for that object you're passing into .load? The official gRPC docs for node.js simply state you can pass an 'Object' in but with no elaboration on the fields that are checked."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/372590602",
    "html_url": "https://github.com/grpc/grpc/issues/9591#issuecomment-372590602",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9591",
    "id": 372590602,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjU5MDYwMg==",
    "user": {
      "login": "tomoat",
      "id": 7428698,
      "node_id": "MDQ6VXNlcjc0Mjg2OTg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7428698?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tomoat",
      "html_url": "https://github.com/tomoat",
      "followers_url": "https://api.github.com/users/tomoat/followers",
      "following_url": "https://api.github.com/users/tomoat/following{/other_user}",
      "gists_url": "https://api.github.com/users/tomoat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tomoat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tomoat/subscriptions",
      "organizations_url": "https://api.github.com/users/tomoat/orgs",
      "repos_url": "https://api.github.com/users/tomoat/repos",
      "events_url": "https://api.github.com/users/tomoat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tomoat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-13T08:51:13Z",
    "updated_at": "2018-03-13T08:51:13Z",
    "author_association": "NONE",
    "body": "This is a very similar problem to #7524 "
  }
]
