[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/292979149",
    "html_url": "https://github.com/grpc/grpc/issues/10547#issuecomment-292979149",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10547",
    "id": 292979149,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5Mjk3OTE0OQ==",
    "user": {
      "login": "JelteF",
      "id": 1162278,
      "node_id": "MDQ6VXNlcjExNjIyNzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1162278?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JelteF",
      "html_url": "https://github.com/JelteF",
      "followers_url": "https://api.github.com/users/JelteF/followers",
      "following_url": "https://api.github.com/users/JelteF/following{/other_user}",
      "gists_url": "https://api.github.com/users/JelteF/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JelteF/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JelteF/subscriptions",
      "organizations_url": "https://api.github.com/users/JelteF/orgs",
      "repos_url": "https://api.github.com/users/JelteF/repos",
      "events_url": "https://api.github.com/users/JelteF/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JelteF/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-10T15:09:25Z",
    "updated_at": "2017-04-10T15:09:25Z",
    "author_association": "NONE",
    "body": "A simple `isinstance` check on the passed value would probably be enough to fix this issue."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/297532986",
    "html_url": "https://github.com/grpc/grpc/issues/10547#issuecomment-297532986",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10547",
    "id": 297532986,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzUzMjk4Ng==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-26T20:34:16Z",
    "updated_at": "2017-04-26T20:34:16Z",
    "author_association": "MEMBER",
    "body": "I think this is more of a Protocol Buffers issue than a gRPC issue, but without rerouting you to [the other issue tracker](https://github.com/google/protobuf/issues): I'm pretty sure this is as it is intended to be. While a little extra code here and there to detect and diagnose defects is in general a good thing, in this case the detection would take place on the super-optimized \"hot path\" of message serialization. I think it's likely the case that a dynamic check on the type of the message to be serialized has been considered and decided against.\r\n\r\n@haberman or another member of the Protocol Buffers team might know more.\r\n\r\nI think I'd be also against dynamic type-checking. Cases like these seems like the kind of problem that static type systems like [mypy](http://mypy-lang.org) or [pytype](https://github.com/google/pytype) should be solving."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/304927624",
    "html_url": "https://github.com/grpc/grpc/issues/10547#issuecomment-304927624",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10547",
    "id": 304927624,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDkyNzYyNA==",
    "user": {
      "login": "JelteF",
      "id": 1162278,
      "node_id": "MDQ6VXNlcjExNjIyNzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1162278?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JelteF",
      "html_url": "https://github.com/JelteF",
      "followers_url": "https://api.github.com/users/JelteF/followers",
      "following_url": "https://api.github.com/users/JelteF/following{/other_user}",
      "gists_url": "https://api.github.com/users/JelteF/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JelteF/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JelteF/subscriptions",
      "organizations_url": "https://api.github.com/users/JelteF/orgs",
      "repos_url": "https://api.github.com/users/JelteF/repos",
      "events_url": "https://api.github.com/users/JelteF/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JelteF/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-30T16:07:18Z",
    "updated_at": "2017-05-30T16:07:18Z",
    "author_association": "NONE",
    "body": "I really think it makes sense to check this. It's not as if types don't\nexist in Python. It's quite common to throw a TypeError when the type does\nnot match the expected type. Passing the wrong message type to an rpc\nreally doesn't make any sense at all and can cause really weird bugs\nespecially if the field encoding is different. That it is in the hot path\ndoesn't make it any difference in my opinion, it's only a single isinstance\ncheck not something complicated.\n\nOn Wed, Apr 26, 2017, 22:34 Nathaniel Manista <notifications@github.com>\nwrote:\n\n> I think this is more of a Protocol Buffers issue than a gRPC issue, but\n> without rerouting you to the other issue tracker\n> <https://github.com/google/protobuf/issues>: I'm pretty sure this is as\n> it is intended to be. While a little extra code here and there to detect\n> and diagnose defects is in general a good thing, in this case the detection\n> would take place on the super-optimized \"hot path\" of message\n> serialization. I think it's likely the case that a dynamic check on the\n> type of the message to be serialized has been considered and decided\n> against.\n>\n> @haberman <https://github.com/haberman> or another member of the Protocol\n> Buffers team might know more.\n>\n> I think I'd be also against dynamic type-checking. Cases like these seems\n> like the kind of problem that static type systems like mypy\n> <http://mypy-lang.org> or pytype <https://github.com/google/pytype>\n> should be solving.\n>\n> â€”\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/grpc/grpc/issues/10547#issuecomment-297532986>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/ABG8JuGxp-zTB8MLvIZQ7gq8cG7dTCjeks5rz6pWgaJpZM4M46Vg>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/305241096",
    "html_url": "https://github.com/grpc/grpc/issues/10547#issuecomment-305241096",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10547",
    "id": 305241096,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTI0MTA5Ng==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-31T16:25:12Z",
    "updated_at": "2017-05-31T16:25:12Z",
    "author_association": "MEMBER",
    "body": "@JelteF: we have users that really care about everything that happens on the hot path, so adding something there would have to be really, really justified by some run-time need. [mypy](http://mypy-lang.org/) and [pytype](https://github.com/google/pytype) are still young and growing but aren't they the proper solution to this problem?\r\n\r\nAlso, if run-time type-checking were to be added, it would be added in Protocol Buffers Python (I think your \"simple `isinstance` check on the passed value\" would be inserted in the class-scope `SerializeToString` method), not gRPC Python. Have you filed a feature request in [the Protocol Buffers issue tracker](https://github.com/google/protobuf/issues)? What has the reaction there been?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/356764933",
    "html_url": "https://github.com/grpc/grpc/issues/10547#issuecomment-356764933",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10547",
    "id": 356764933,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Njc2NDkzMw==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-10T22:53:57Z",
    "updated_at": "2018-01-10T22:53:57Z",
    "author_association": "MEMBER",
    "body": "Closing; I still believe that we're not going to take any action in this area and I am still almost certain that Protocol Buffers Python also will not. Too many users like their hot paths super-optimized and not executing any behavior that they needn't execute."
  }
]
