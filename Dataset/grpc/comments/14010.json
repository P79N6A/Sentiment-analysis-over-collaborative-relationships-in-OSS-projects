[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/357334512",
    "html_url": "https://github.com/grpc/grpc/pull/14010#issuecomment-357334512",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14010",
    "id": 357334512,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzMzNDUxMg==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-12T19:39:52Z",
    "updated_at": "2018-01-12T19:39:52Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE        FILE SIZE\n ++++++++++++++  ++++++++++++++\n\n  [ = ]       0        0  [ = ]\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n  +2.1%    +739 src/cpp/server/server_cc.cc                                                             +739  +2.1%\n      [NEW] +2.54Ki grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>::RunHandler                 +2.54Ki  [NEW]\n      [NEW] +2.54Ki grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>::RunHandler                  +2.54Ki  [NEW]\n      [NEW] +2.06Ki grpc::Server::Server                                                                 +2.06Ki  [NEW]\n      [NEW] +1.41Ki grpc::Server::SyncRequestThreadManager::DoWork(void*, bool, bool) [clone .part.61]   +1.41Ki  [NEW]\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n      +7.6%     +80 grpc::Server::~Server                                                                    +80  +7.6%\n      [NEW]     +63 grpc::Server::SyncRequestThreadManager::DoWork                                           +63  [NEW]\n      +1.8%     +32 grpc::Server::Start                                                                      +32  +1.8%\n      [NEW]      +5 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>::~ErrorMethodHandler             +5  [NEW]\n      [NEW]      +5 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>::~ErrorMethodHandler              +5  [NEW]\n      [NEW]      +2 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>::~ErrorMethodHandler             +2  [NEW]\n      [NEW]      +2 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>::~ErrorMethodHandler              +2  [NEW]\n   +13%    +532 src/cpp/server/dynamic_thread_pool.cc                                                   +532   +13%\n      [NEW] +1.22Ki grpc::DynamicThreadPool::DynamicThreadPool                                           +1.22Ki  [NEW]\n      [NEW]    +299 grpc::DynamicThreadPool::DynamicThread::DynamicThread                                   +299  [NEW]\n      +168%    +119 grpc::DynamicThreadPool::DynamicThread::~DynamicThread                                  +119  +168%\n       +24%     +69 grpc::DynamicThreadPool::Add                                                             +69   +24%\n       +11%     +56 grpc::DynamicThreadPool::~DynamicThreadPool                                              +56   +11%\n       +13%      +7 [Unmapped]                                                                                +7   +13%\n      [NEW]      +5 grpc::DynamicThreadPool::DynamicThread::DynamicThread(grpc::DynamicThreadPool*, bool      +5  [NEW]\n   +19%    +444 src/cpp/thread_manager/thread_manager.cc                                                +444   +19%\n      [NEW]    +335 grpc::ThreadManager::ThreadManager                                                      +335  [NEW]\n      [NEW]    +296 grpc::ThreadManager::WorkerThread::WorkerThread                                         +296  [NEW]\n       +24%    +107 grpc::ThreadManager::MainWorkLoop                                                       +107   +24%\n       +85%    +104 grpc::ThreadManager::Initialize                                                         +104   +85%\n      +100%     +95 grpc::ThreadManager::WorkerThread::~WorkerThread                                         +95  +100%\n       +26%     +52 grpc::ThreadManager::~ThreadManager                                                      +52   +26%\n       +13%     +12 [Unmapped]                                                                               +12   +13%\n      [NEW]      +5 grpc::ThreadManager::WorkerThread::WorkerThread(grpc::ThreadManager*, bool*)::{lambd      +5  [NEW]\n  +4.0%    +383 src/cpp/server/server_builder.cc                                                        +383  +4.0%\n      +8.8%    +239 grpc::ServerBuilder::BuildAndStart                                                      +239  +8.8%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +21%     +96 grpc::ServerBuilder::ServerBuilder                                                       +96   +21%\n      +7.7%     +48 grpc::ServerBuilder::~ServerBuilder                                                      +48  +7.7%\n  +350%    +308 src/cpp/server/create_default_thread_pool.cc                                            +308  +350%\n      +314%    +176 grpc::(anonymous namespace)::CreateDefaultThreadPoolImpl                                +176  +314%\n      [NEW]     +46 std::_Function_base::_Base_manager<int (*)(unsigned long*, char const*, void (*)(voi     +46  [NEW]\n      [NEW]     +46 std::_Function_base::_Base_manager<void (*)(unsigned long)>::_M_manager                  +46  [NEW]\n      [NEW]     +32 std::_Function_handler<int (unsigned long*, char const*, void (*)(void*), void*, gpr     +32  [NEW]\n      [NEW]      +8 std::_Function_handler<void (unsigned long), void (*)(unsigned long)>::_M_invoke          +8  [NEW]\n  +0.8%     +64 src/cpp/client/secure_credentials.cc                                                     +64  +0.8%\n       +12%     +64 grpc::MetadataCredentialsPluginWrapper::GetMetadata                                      +64   +12%\n  +0.7%     +32 src/cpp/server/secure_server_credentials.cc                                              +32  +0.7%\n      +9.3%     +32 grpc::AuthMetadataProcessorAyncWrapper::Process                                          +32  +9.3%\n\n -+-+-+-+-+-+-+ MIXED                                                                                +-+-+-+-+-+-+-\n  +0.2%    +498 [None]                                                                               -27.1Ki  -0.6%\n      [NEW]     +59 typeinfo name for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>               +59  [NEW]\n      [NEW]     +58 typeinfo name for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>                +58  [NEW]\n      [NEW]     +40 vtable for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>                      +40  [NEW]\n      [NEW]     +40 vtable for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>                       +40  [NEW]\n      [NEW]     +38 typeinfo name for int (*)                                                                +38  [NEW]\n      [NEW]     +37 typeinfo name for int                                                                    +37  [NEW]\n      [NEW]     +32 typeinfo for int (*)                                                                     +32  [NEW]\n      [NEW]     +32 typeinfo for void (*)                                                                    +32  [NEW]\n      [NEW]     +24 typeinfo for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>                    +24  [NEW]\n      [NEW]     +24 typeinfo for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>                     +24  [NEW]\n      [NEW]     +16 typeinfo for int                                                                         +16  [NEW]\n      [NEW]     +16 typeinfo for void                                                                        +16  [NEW]\n      [NEW]      +6 typeinfo name for void (*)                                                                +6  [NEW]\n      [NEW]      +5 typeinfo name for void                                                                    +5  [NEW]\n      [DEL]    -109 typeinfo name for std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (grpc    -109  [DEL]\n      [DEL]    -104 typeinfo name for std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (grpc    -104  [DEL]\n      [DEL]     -40 vtable for grpc::internal::UnknownMethodHandler                                          -40  [DEL]\n      [DEL]     -40 vtable for std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (grpc::Threa     -40  [DEL]\n      [DEL]     -40 vtable for std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (grpc::Dynam     -40  [DEL]\n      [DEL]     -39 typeinfo name for grpc::internal::UnknownMethodHandler                                   -39  [DEL]\n      [DEL]     -24 typeinfo for grpc::internal::UnknownMethodHandler                                        -24  [DEL]\n      [DEL]     -24 typeinfo for std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (grpc::Thr     -24  [DEL]\n      [DEL]     -24 typeinfo for std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (grpc::Dyn     -24  [DEL]\n\n  +0.9% +2.93Ki TOTAL                                                                                -24.7Ki  -0.5%\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/357337441",
    "html_url": "https://github.com/grpc/grpc/pull/14010#issuecomment-357337441",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14010",
    "id": 357337441,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzMzNzQ0MQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-12T19:51:53Z",
    "updated_at": "2018-01-12T19:51:53Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/357346090",
    "html_url": "https://github.com/grpc/grpc/pull/14010#issuecomment-357346090",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14010",
    "id": 357346090,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzM0NjA5MA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-12T20:31:12Z",
    "updated_at": "2018-01-12T20:31:12Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/357866202",
    "html_url": "https://github.com/grpc/grpc/pull/14010#issuecomment-357866202",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14010",
    "id": 357866202,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Nzg2NjIwMg==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-16T06:33:01Z",
    "updated_at": "2018-01-16T06:33:01Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE        FILE SIZE\n ++++++++++++++  ++++++++++++++\n\n  [ = ]       0        0  [ = ]\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n  +0.6% +1.24Ki [None]                                                                               +5.35Ki  +0.1%\n      +0.6% +1.27Ki [Unmapped]                                                                           +5.37Ki  +0.1%\n      [NEW]     +59 typeinfo name for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>               +59  [NEW]\n      [NEW]     +58 typeinfo name for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>                +58  [NEW]\n      [NEW]     +40 vtable for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>                      +40  [NEW]\n      [NEW]     +40 vtable for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>                       +40  [NEW]\n      [NEW]     +38 typeinfo name for int (*)                                                                +38  [NEW]\n      [NEW]     +37 typeinfo name for int                                                                    +37  [NEW]\n      [NEW]     +32 typeinfo for int (*)                                                                     +32  [NEW]\n      [NEW]     +32 typeinfo for void (*)                                                                    +32  [NEW]\n      [NEW]     +24 typeinfo for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>                    +24  [NEW]\n      [NEW]     +24 typeinfo for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>                     +24  [NEW]\n      [NEW]     +16 typeinfo for int                                                                         +16  [NEW]\n      [NEW]     +16 typeinfo for void                                                                        +16  [NEW]\n      [NEW]      +6 typeinfo name for void (*)                                                                +6  [NEW]\n      [NEW]      +5 typeinfo name for void                                                                    +5  [NEW]\n   +11% +3.63Ki src/cpp/server/server_cc.cc                                                          +3.63Ki   +11%\n      [NEW] +2.69Ki grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>::RunHandler                 +2.69Ki  [NEW]\n      [NEW] +2.69Ki grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>::RunHandler                  +2.69Ki  [NEW]\n      [NEW] +2.26Ki grpc::Server::Server                                                                 +2.26Ki  [NEW]\n      [NEW] +1.63Ki grpc::Server::SyncRequestThreadManager::DoWork                                       +1.63Ki  [NEW]\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n      [NEW]     +93 std::function<int (unsigned long*, char const*, void (*)(void*), void*, gpr_thd_opti     +93  [NEW]\n      [NEW]     +93 std::function<void (unsigned long)>::function                                            +93  [NEW]\n      +7.6%     +80 grpc::Server::~Server                                                                    +80  +7.6%\n      +2.4%     +45 grpc::Server::Start                                                                      +45  +2.4%\n      [NEW]      +5 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>::~ErrorMethodHandler             +5  [NEW]\n      [NEW]      +5 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>::~ErrorMethodHandler              +5  [NEW]\n      [NEW]      +2 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>::~ErrorMethodHandler             +2  [NEW]\n      [NEW]      +2 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>::~ErrorMethodHandler              +2  [NEW]\n   +14%    +660 src/cpp/server/dynamic_thread_pool.cc                                                   +660   +14%\n      [NEW] +1.51Ki grpc::DynamicThreadPool::DynamicThreadPool                                           +1.51Ki  [NEW]\n      [NEW]    +323 grpc::DynamicThreadPool::DynamicThread::DynamicThread                                   +323  [NEW]\n      +168%    +119 grpc::DynamicThreadPool::DynamicThread::~DynamicThread                                  +119  +168%\n       +23%     +69 grpc::DynamicThreadPool::Add                                                             +69   +23%\n       +11%     +56 grpc::DynamicThreadPool::~DynamicThreadPool                                              +56   +11%\n       +23%     +14 [Unmapped]                                                                               +14   +23%\n      [NEW]      +5 grpc::DynamicThreadPool::DynamicThread::DynamicThread(grpc::DynamicThreadPool*, bool      +5  [NEW]\n  +4.8%    +531 src/cpp/server/server_builder.cc                                                        +531  +4.8%\n       +10%    +339 grpc::ServerBuilder::BuildAndStart                                                      +339   +10%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +20%    +149 grpc::ServerBuilder::ServerBuilder                                                      +149   +20%\n      +7.7%     +48 grpc::ServerBuilder::~ServerBuilder                                                      +48  +7.7%\n   +21%    +508 src/cpp/thread_manager/thread_manager.cc                                                +508   +21%\n      [NEW]    +455 grpc::ThreadManager::ThreadManager                                                      +455  [NEW]\n      [NEW]    +320 grpc::ThreadManager::WorkerThread::WorkerThread                                         +320  [NEW]\n       +77%    +109 grpc::ThreadManager::Initialize                                                         +109   +77%\n      +100%     +95 grpc::ThreadManager::WorkerThread::~WorkerThread                                         +95  +100%\n       +22%     +89 grpc::ThreadManager::MainWorkLoop                                                        +89   +22%\n       +24%     +48 grpc::ThreadManager::~ThreadManager                                                      +48   +24%\n      +4.0%      +8 grpc::ThreadManager::MarkAsCompleted                                                      +8  +4.0%\n      [NEW]      +5 grpc::ThreadManager::WorkerThread::WorkerThread(grpc::ThreadManager*, bool*)::{lambd      +5  [NEW]\n      +2.1%      +2 [Unmapped]                                                                                +2  +2.1%\n  +342%    +356 src/cpp/server/create_default_thread_pool.cc                                            +356  +342%\n      +305%    +229 grpc::(anonymous namespace)::CreateDefaultThreadPoolImpl                                +229  +305%\n      [NEW]     +46 std::_Function_base::_Base_manager<int (*)(unsigned long*, char const*, void (*)(voi     +46  [NEW]\n      [NEW]     +46 std::_Function_base::_Base_manager<void (*)(unsigned long)>::_M_manager                  +46  [NEW]\n      [NEW]     +32 std::_Function_handler<int (unsigned long*, char const*, void (*)(void*), void*, gpr     +32  [NEW]\n      [NEW]      +8 std::_Function_handler<void (unsigned long), void (*)(unsigned long)>::_M_invoke          +8  [NEW]\n  +0.5%     +43 src/cpp/client/secure_credentials.cc                                                     +43  +0.5%\n      +7.7%     +43 grpc::MetadataCredentialsPluginWrapper::GetMetadata                                      +43  +7.7%\n  +0.5%     +24 src/cpp/server/secure_server_credentials.cc                                              +24  +0.5%\n      +5.8%     +24 grpc::AuthMetadataProcessorAyncWrapper::Process                                          +24  +5.8%\n\n  +2.0% +6.94Ki TOTAL                                                                                +11.1Ki  +0.2%\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/357867892",
    "html_url": "https://github.com/grpc/grpc/pull/14010#issuecomment-357867892",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14010",
    "id": 357867892,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Nzg2Nzg5Mg==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-16T06:44:35Z",
    "updated_at": "2018-01-16T06:44:35Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/357871246",
    "html_url": "https://github.com/grpc/grpc/pull/14010#issuecomment-357871246",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14010",
    "id": 357871246,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Nzg3MTI0Ng==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-16T07:05:37Z",
    "updated_at": "2018-01-16T07:05:37Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE        FILE SIZE\n ++++++++++++++  ++++++++++++++\n\n  [ = ]       0        0  [ = ]\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n  +0.6% +1.25Ki [None]                                                                               +6.04Ki  +0.1%\n      +0.6% +1.28Ki [Unmapped]                                                                           +6.05Ki  +0.1%\n      [NEW]     +59 typeinfo name for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>               +59  [NEW]\n      [NEW]     +58 typeinfo name for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>                +58  [NEW]\n      [NEW]     +40 vtable for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>                      +40  [NEW]\n      [NEW]     +40 vtable for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>                       +40  [NEW]\n      [NEW]     +38 typeinfo name for int (*)                                                                +38  [NEW]\n      [NEW]     +37 typeinfo name for int                                                                    +37  [NEW]\n      [NEW]     +32 typeinfo for int (*)                                                                     +32  [NEW]\n      [NEW]     +32 typeinfo for void (*)                                                                    +32  [NEW]\n      [NEW]     +24 typeinfo for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>                    +24  [NEW]\n      [NEW]     +24 typeinfo for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>                     +24  [NEW]\n      [NEW]     +16 typeinfo for int                                                                         +16  [NEW]\n      [NEW]     +16 typeinfo for void                                                                        +16  [NEW]\n      [NEW]      +6 typeinfo name for void (*)                                                                +6  [NEW]\n      [NEW]      +5 typeinfo name for void                                                                    +5  [NEW]\n   +11% +3.81Ki src/cpp/server/server_cc.cc                                                          +3.81Ki   +11%\n      [NEW] +2.69Ki grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>::RunHandler                 +2.69Ki  [NEW]\n      [NEW] +2.69Ki grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>::RunHandler                  +2.69Ki  [NEW]\n      [NEW] +2.26Ki grpc::Server::Server                                                                 +2.26Ki  [NEW]\n      [NEW] +1.63Ki grpc::Server::SyncRequestThreadManager::DoWork                                       +1.63Ki  [NEW]\n       +23%    +241 grpc::Server::~Server                                                                   +241   +23%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n      [NEW]     +93 std::function<int (unsigned long*, char const*, void (*)(void*), void*, gpr_thd_opti     +93  [NEW]\n      [NEW]     +93 std::function<void (unsigned long)>::function                                            +93  [NEW]\n      +3.3%     +61 grpc::Server::Start                                                                      +61  +3.3%\n      [NEW]      +5 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>::~ErrorMethodHandler             +5  [NEW]\n      [NEW]      +5 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>::~ErrorMethodHandler              +5  [NEW]\n      [NEW]      +2 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>::~ErrorMethodHandler             +2  [NEW]\n      [NEW]      +2 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>::~ErrorMethodHandler              +2  [NEW]\n   +30%    +732 src/cpp/thread_manager/thread_manager.cc                                                +732   +30%\n      [NEW]    +455 grpc::ThreadManager::ThreadManager                                                      +455  [NEW]\n       +82%    +339 grpc::ThreadManager::MainWorkLoop                                                       +339   +82%\n      [NEW]    +320 grpc::ThreadManager::WorkerThread::WorkerThread                                         +320  [NEW]\n      +113%    +159 grpc::ThreadManager::Initialize                                                         +159  +113%\n      +100%     +95 grpc::ThreadManager::WorkerThread::~WorkerThread                                         +95  +100%\n      +4.0%      +8 grpc::ThreadManager::MarkAsCompleted                                                      +8  +4.0%\n      [NEW]      +5 grpc::ThreadManager::WorkerThread::WorkerThread(grpc::ThreadManager*, bool*)::{lambd      +5  [NEW]\n   +14%    +660 src/cpp/server/dynamic_thread_pool.cc                                                   +660   +14%\n      [NEW] +1.51Ki grpc::DynamicThreadPool::DynamicThreadPool                                           +1.51Ki  [NEW]\n      [NEW]    +323 grpc::DynamicThreadPool::DynamicThread::DynamicThread                                   +323  [NEW]\n      +168%    +119 grpc::DynamicThreadPool::DynamicThread::~DynamicThread                                  +119  +168%\n       +23%     +69 grpc::DynamicThreadPool::Add                                                             +69   +23%\n       +11%     +56 grpc::DynamicThreadPool::~DynamicThreadPool                                              +56   +11%\n       +23%     +14 [Unmapped]                                                                               +14   +23%\n      [NEW]      +5 grpc::DynamicThreadPool::DynamicThread::DynamicThread(grpc::DynamicThreadPool*, bool      +5  [NEW]\n  +4.8%    +531 src/cpp/server/server_builder.cc                                                        +531  +4.8%\n       +10%    +339 grpc::ServerBuilder::BuildAndStart                                                      +339   +10%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +20%    +149 grpc::ServerBuilder::ServerBuilder                                                      +149   +20%\n      +7.7%     +48 grpc::ServerBuilder::~ServerBuilder                                                      +48  +7.7%\n  +342%    +356 src/cpp/server/create_default_thread_pool.cc                                            +356  +342%\n      +305%    +229 grpc::(anonymous namespace)::CreateDefaultThreadPoolImpl                                +229  +305%\n      [NEW]     +46 std::_Function_base::_Base_manager<int (*)(unsigned long*, char const*, void (*)(voi     +46  [NEW]\n      [NEW]     +46 std::_Function_base::_Base_manager<void (*)(unsigned long)>::_M_manager                  +46  [NEW]\n      [NEW]     +32 std::_Function_handler<int (unsigned long*, char const*, void (*)(void*), void*, gpr     +32  [NEW]\n      [NEW]      +8 std::_Function_handler<void (unsigned long), void (*)(unsigned long)>::_M_invoke          +8  [NEW]\n  +0.5%     +43 src/cpp/client/secure_credentials.cc                                                     +43  +0.5%\n      +7.7%     +43 grpc::MetadataCredentialsPluginWrapper::GetMetadata                                      +43  +7.7%\n  +0.5%     +24 src/cpp/server/secure_server_credentials.cc                                              +24  +0.5%\n      +5.8%     +24 grpc::AuthMetadataProcessorAyncWrapper::Process                                          +24  +5.8%\n\n  +2.1% +7.35Ki TOTAL                                                                                +12.1Ki  +0.2%\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/357873220",
    "html_url": "https://github.com/grpc/grpc/pull/14010#issuecomment-357873220",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14010",
    "id": 357873220,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Nzg3MzIyMA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-16T07:17:43Z",
    "updated_at": "2018-01-16T07:17:43Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/357874064",
    "html_url": "https://github.com/grpc/grpc/pull/14010#issuecomment-357874064",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14010",
    "id": 357874064,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Nzg3NDA2NA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-16T07:22:14Z",
    "updated_at": "2018-01-16T07:22:14Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE        FILE SIZE\n ++++++++++++++  ++++++++++++++\n\n  [ = ]       0        0  [ = ]\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n  +0.5% +1.21Ki [None]                                                                               +3.99Ki  +0.1%\n      +0.6% +1.24Ki [Unmapped]                                                                           +4.01Ki  +0.1%\n      [NEW]     +59 typeinfo name for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>               +59  [NEW]\n      [NEW]     +58 typeinfo name for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>                +58  [NEW]\n      [NEW]     +40 vtable for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>                      +40  [NEW]\n      [NEW]     +40 vtable for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>                       +40  [NEW]\n      [NEW]     +38 typeinfo name for int (*)                                                                +38  [NEW]\n      [NEW]     +37 typeinfo name for int                                                                    +37  [NEW]\n      [NEW]     +32 typeinfo for int (*)                                                                     +32  [NEW]\n      [NEW]     +32 typeinfo for void (*)                                                                    +32  [NEW]\n      [NEW]     +24 typeinfo for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>                    +24  [NEW]\n      [NEW]     +24 typeinfo for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>                     +24  [NEW]\n      [NEW]     +16 typeinfo for int                                                                         +16  [NEW]\n      [NEW]     +16 typeinfo for void                                                                        +16  [NEW]\n      [NEW]      +6 typeinfo name for void (*)                                                                +6  [NEW]\n      [NEW]      +5 typeinfo name for void                                                                    +5  [NEW]\n   +11% +3.81Ki src/cpp/server/server_cc.cc                                                          +3.81Ki   +11%\n      [NEW] +2.69Ki grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>::RunHandler                 +2.69Ki  [NEW]\n      [NEW] +2.69Ki grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>::RunHandler                  +2.69Ki  [NEW]\n      [NEW] +2.26Ki grpc::Server::Server                                                                 +2.26Ki  [NEW]\n      [NEW] +1.63Ki grpc::Server::SyncRequestThreadManager::DoWork                                       +1.63Ki  [NEW]\n       +23%    +241 grpc::Server::~Server                                                                   +241   +23%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n      [NEW]     +93 std::function<int (unsigned long*, char const*, void (*)(void*), void*, gpr_thd_opti     +93  [NEW]\n      [NEW]     +93 std::function<void (unsigned long)>::function                                            +93  [NEW]\n      +3.3%     +61 grpc::Server::Start                                                                      +61  +3.3%\n      [NEW]      +5 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>::~ErrorMethodHandler             +5  [NEW]\n      [NEW]      +5 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>::~ErrorMethodHandler              +5  [NEW]\n      [NEW]      +2 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>::~ErrorMethodHandler             +2  [NEW]\n      [NEW]      +2 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>::~ErrorMethodHandler              +2  [NEW]\n   +14%    +660 src/cpp/server/dynamic_thread_pool.cc                                                   +660   +14%\n      [NEW] +1.51Ki grpc::DynamicThreadPool::DynamicThreadPool                                           +1.51Ki  [NEW]\n      [NEW]    +323 grpc::DynamicThreadPool::DynamicThread::DynamicThread                                   +323  [NEW]\n      +168%    +119 grpc::DynamicThreadPool::DynamicThread::~DynamicThread                                  +119  +168%\n       +23%     +69 grpc::DynamicThreadPool::Add                                                             +69   +23%\n       +11%     +56 grpc::DynamicThreadPool::~DynamicThreadPool                                              +56   +11%\n       +23%     +14 [Unmapped]                                                                               +14   +23%\n      [NEW]      +5 grpc::DynamicThreadPool::DynamicThread::DynamicThread(grpc::DynamicThreadPool*, bool      +5  [NEW]\n  +4.8%    +531 src/cpp/server/server_builder.cc                                                        +531  +4.8%\n       +10%    +339 grpc::ServerBuilder::BuildAndStart                                                      +339   +10%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +20%    +149 grpc::ServerBuilder::ServerBuilder                                                      +149   +20%\n      +7.7%     +48 grpc::ServerBuilder::~ServerBuilder                                                      +48  +7.7%\n   +15%    +380 src/cpp/thread_manager/thread_manager.cc                                                +380   +15%\n      [NEW]    +455 grpc::ThreadManager::ThreadManager                                                      +455  [NEW]\n      [NEW]    +320 grpc::ThreadManager::WorkerThread::WorkerThread                                         +320  [NEW]\n      +100%     +95 grpc::ThreadManager::WorkerThread::~WorkerThread                                         +95  +100%\n       +22%     +89 grpc::ThreadManager::MainWorkLoop                                                        +89   +22%\n       +36%     +51 grpc::ThreadManager::Initialize                                                          +51   +36%\n      +4.0%      +8 grpc::ThreadManager::MarkAsCompleted                                                      +8  +4.0%\n      [NEW]      +5 grpc::ThreadManager::WorkerThread::WorkerThread(grpc::ThreadManager*, bool*)::{lambd      +5  [NEW]\n  +342%    +356 src/cpp/server/create_default_thread_pool.cc                                            +356  +342%\n      +305%    +229 grpc::(anonymous namespace)::CreateDefaultThreadPoolImpl                                +229  +305%\n      [NEW]     +46 std::_Function_base::_Base_manager<int (*)(unsigned long*, char const*, void (*)(voi     +46  [NEW]\n      [NEW]     +46 std::_Function_base::_Base_manager<void (*)(unsigned long)>::_M_manager                  +46  [NEW]\n      [NEW]     +32 std::_Function_handler<int (unsigned long*, char const*, void (*)(void*), void*, gpr     +32  [NEW]\n      [NEW]      +8 std::_Function_handler<void (unsigned long), void (*)(unsigned long)>::_M_invoke          +8  [NEW]\n  +0.5%     +43 src/cpp/client/secure_credentials.cc                                                     +43  +0.5%\n      +7.7%     +43 grpc::MetadataCredentialsPluginWrapper::GetMetadata                                      +43  +7.7%\n  +0.5%     +24 src/cpp/server/secure_server_credentials.cc                                              +24  +0.5%\n      +5.8%     +24 grpc::AuthMetadataProcessorAyncWrapper::Process                                          +24  +5.8%\n\n  +2.0% +6.96Ki TOTAL                                                                                +9.74Ki  +0.2%\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/357874555",
    "html_url": "https://github.com/grpc/grpc/pull/14010#issuecomment-357874555",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14010",
    "id": 357874555,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Nzg3NDU1NQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-16T07:24:47Z",
    "updated_at": "2018-01-16T07:24:47Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/357875932",
    "html_url": "https://github.com/grpc/grpc/pull/14010#issuecomment-357875932",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14010",
    "id": 357875932,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Nzg3NTkzMg==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-16T07:32:42Z",
    "updated_at": "2018-01-16T07:32:42Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/357880385",
    "html_url": "https://github.com/grpc/grpc/pull/14010#issuecomment-357880385",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14010",
    "id": 357880385,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Nzg4MDM4NQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-16T07:56:58Z",
    "updated_at": "2018-01-16T07:56:58Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] Performance differences noted:\nBenchmark                                                          cpu_time    real_time\n-----------------------------------------------------------------  ----------  -----------\nBM_UnaryPingPong<MinInProcess, NoOpMutator, NoOpMutator>/0/262144  -6%         -6%\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/357883984",
    "html_url": "https://github.com/grpc/grpc/pull/14010#issuecomment-357883984",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14010",
    "id": 357883984,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Nzg4Mzk4NA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-16T08:13:57Z",
    "updated_at": "2018-01-16T08:13:57Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/358054492",
    "html_url": "https://github.com/grpc/grpc/pull/14010#issuecomment-358054492",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14010",
    "id": 358054492,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODA1NDQ5Mg==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-16T18:12:56Z",
    "updated_at": "2018-01-16T18:12:56Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE        FILE SIZE\n ++++++++++++++  ++++++++++++++\n\n  [ = ]       0        0  [ = ]\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n   +11% +3.79Ki src/cpp/server/server_cc.cc                                                          +3.79Ki   +11%\n      [NEW] +2.69Ki grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>::RunHandler                 +2.69Ki  [NEW]\n      [NEW] +2.69Ki grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>::RunHandler                  +2.69Ki  [NEW]\n      [NEW] +2.26Ki grpc::Server::Server                                                                 +2.26Ki  [NEW]\n      [NEW] +1.63Ki grpc::Server::SyncRequestThreadManager::DoWork                                       +1.63Ki  [NEW]\n       +23%    +244 grpc::Server::~Server                                                                   +244   +23%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n      [NEW]     +93 std::function<int (unsigned long*, char const*, void (*)(void*), void*, gpr_thd_opti     +93  [NEW]\n      [NEW]     +93 std::function<void (unsigned long)>::function                                            +93  [NEW]\n      +3.3%     +61 grpc::Server::Start                                                                      +61  +3.3%\n      [NEW]      +5 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>::~ErrorMethodHandler             +5  [NEW]\n      [NEW]      +5 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>::~ErrorMethodHandler              +5  [NEW]\n       +14%      +3 grpc::Server::SyncRequestThreadManager::Shutdown                                          +3   +14%\n      [NEW]      +2 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>::~ErrorMethodHandler             +2  [NEW]\n      [NEW]      +2 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>::~ErrorMethodHandler              +2  [NEW]\n  +0.5% +1.19Ki [None]                                                                               +3.63Ki  +0.1%\n      +0.6% +1.23Ki [Unmapped]                                                                           +3.65Ki  +0.1%\n      [NEW]     +59 typeinfo name for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>               +59  [NEW]\n      [NEW]     +58 typeinfo name for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>                +58  [NEW]\n      [NEW]     +40 vtable for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>                      +40  [NEW]\n      [NEW]     +40 vtable for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>                       +40  [NEW]\n      [NEW]     +38 typeinfo name for int (*)                                                                +38  [NEW]\n      [NEW]     +37 typeinfo name for int                                                                    +37  [NEW]\n      [NEW]     +32 typeinfo for int (*)                                                                     +32  [NEW]\n      [NEW]     +32 typeinfo for void (*)                                                                    +32  [NEW]\n      [NEW]     +24 typeinfo for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>                    +24  [NEW]\n      [NEW]     +24 typeinfo for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>                     +24  [NEW]\n      [NEW]     +16 typeinfo for int                                                                         +16  [NEW]\n      [NEW]     +16 typeinfo for void                                                                        +16  [NEW]\n      [NEW]      +6 typeinfo name for void (*)                                                                +6  [NEW]\n      [NEW]      +5 typeinfo name for void                                                                    +5  [NEW]\n   +14%    +660 src/cpp/server/dynamic_thread_pool.cc                                                   +660   +14%\n      [NEW] +1.51Ki grpc::DynamicThreadPool::DynamicThreadPool                                           +1.51Ki  [NEW]\n      [NEW]    +323 grpc::DynamicThreadPool::DynamicThread::DynamicThread                                   +323  [NEW]\n      +168%    +119 grpc::DynamicThreadPool::DynamicThread::~DynamicThread                                  +119  +168%\n       +23%     +69 grpc::DynamicThreadPool::Add                                                             +69   +23%\n       +11%     +56 grpc::DynamicThreadPool::~DynamicThreadPool                                              +56   +11%\n       +23%     +14 [Unmapped]                                                                               +14   +23%\n      [NEW]      +5 grpc::DynamicThreadPool::DynamicThread::DynamicThread(grpc::DynamicThreadPool*, bool      +5  [NEW]\n  +4.8%    +531 src/cpp/server/server_builder.cc                                                        +531  +4.8%\n       +10%    +339 grpc::ServerBuilder::BuildAndStart                                                      +339   +10%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +20%    +149 grpc::ServerBuilder::ServerBuilder                                                      +149   +20%\n      +7.7%     +48 grpc::ServerBuilder::~ServerBuilder                                                      +48  +7.7%\n   +15%    +380 src/cpp/thread_manager/thread_manager.cc                                                +380   +15%\n      [NEW]    +455 grpc::ThreadManager::ThreadManager                                                      +455  [NEW]\n      [NEW]    +320 grpc::ThreadManager::WorkerThread::WorkerThread                                         +320  [NEW]\n      +100%     +95 grpc::ThreadManager::WorkerThread::~WorkerThread                                         +95  +100%\n       +22%     +89 grpc::ThreadManager::MainWorkLoop                                                        +89   +22%\n       +36%     +51 grpc::ThreadManager::Initialize                                                          +51   +36%\n      +4.0%      +8 grpc::ThreadManager::MarkAsCompleted                                                      +8  +4.0%\n      [NEW]      +5 grpc::ThreadManager::WorkerThread::WorkerThread(grpc::ThreadManager*, bool*)::{lambd      +5  [NEW]\n  +342%    +356 src/cpp/server/create_default_thread_pool.cc                                            +356  +342%\n      +305%    +229 grpc::(anonymous namespace)::CreateDefaultThreadPoolImpl                                +229  +305%\n      [NEW]     +46 std::_Function_base::_Base_manager<int (*)(unsigned long*, char const*, void (*)(voi     +46  [NEW]\n      [NEW]     +46 std::_Function_base::_Base_manager<void (*)(unsigned long)>::_M_manager                  +46  [NEW]\n      [NEW]     +32 std::_Function_handler<int (unsigned long*, char const*, void (*)(void*), void*, gpr     +32  [NEW]\n      [NEW]      +8 std::_Function_handler<void (unsigned long), void (*)(unsigned long)>::_M_invoke          +8  [NEW]\n  +0.5%     +43 src/cpp/client/secure_credentials.cc                                                     +43  +0.5%\n      +7.7%     +43 grpc::MetadataCredentialsPluginWrapper::GetMetadata                                      +43  +7.7%\n  +0.5%     +24 src/cpp/server/secure_server_credentials.cc                                              +24  +0.5%\n      +5.8%     +24 grpc::AuthMetadataProcessorAyncWrapper::Process                                          +24  +5.8%\n\n  +2.0% +6.93Ki TOTAL                                                                                +9.38Ki  +0.2%\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/358057786",
    "html_url": "https://github.com/grpc/grpc/pull/14010#issuecomment-358057786",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14010",
    "id": 358057786,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODA1Nzc4Ng==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-16T18:23:45Z",
    "updated_at": "2018-01-16T18:23:45Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/358070001",
    "html_url": "https://github.com/grpc/grpc/pull/14010#issuecomment-358070001",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14010",
    "id": 358070001,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODA3MDAwMQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-16T19:04:49Z",
    "updated_at": "2018-01-16T19:04:49Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/358140448",
    "html_url": "https://github.com/grpc/grpc/pull/14010#issuecomment-358140448",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14010",
    "id": 358140448,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODE0MDQ0OA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-16T23:18:20Z",
    "updated_at": "2018-01-16T23:18:20Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE        FILE SIZE\n ++++++++++++++  ++++++++++++++\n\n  [ = ]       0        0  [ = ]\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n  +0.7% +1.58Ki [None]                                                                               +22.6Ki  +0.5%\n      +0.8% +1.59Ki [Unmapped]                                                                           +22.6Ki  +0.5%\n      [NEW]     +59 typeinfo name for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>               +59  [NEW]\n      [NEW]     +58 typeinfo name for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>                +58  [NEW]\n      [NEW]     +40 vtable for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>                      +40  [NEW]\n      [NEW]     +40 vtable for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>                       +40  [NEW]\n      [NEW]     +38 typeinfo name for int (*)                                                                +38  [NEW]\n      [NEW]     +37 typeinfo name for int                                                                    +37  [NEW]\n      [NEW]     +32 typeinfo for int (*)                                                                     +32  [NEW]\n      [NEW]     +32 typeinfo for void (*)                                                                    +32  [NEW]\n      [NEW]     +24 typeinfo for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>                    +24  [NEW]\n      [NEW]     +24 typeinfo for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>                     +24  [NEW]\n      [NEW]     +16 typeinfo for int                                                                         +16  [NEW]\n      [NEW]     +16 typeinfo for void                                                                        +16  [NEW]\n      +6.6%      +8 [None]                                                                                     0  [ = ]\n      [NEW]      +6 typeinfo name for void (*)                                                                +6  [NEW]\n      [NEW]      +5 typeinfo name for void                                                                    +5  [NEW]\n   +10% +3.59Ki src/cpp/server/server_cc.cc                                                          +3.59Ki   +10%\n      [NEW] +2.69Ki grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>::RunHandler                 +2.69Ki  [NEW]\n      [NEW] +2.69Ki grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>::RunHandler                  +2.69Ki  [NEW]\n      [NEW] +2.26Ki grpc::Server::Server                                                                 +2.26Ki  [NEW]\n      [NEW] +1.63Ki grpc::Server::SyncRequestThreadManager::DoWork                                       +1.63Ki  [NEW]\n      [NEW]    +308 void grpc::(anonymous namespace)::MgrShutdownAndWait<grpc::Server::SyncRequestThread    +308  [NEW]\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n      [NEW]     +93 std::function<int (unsigned long*, char const*, void (*)(void*), void*, gpr_thd_opti     +93  [NEW]\n      [NEW]     +93 std::function<void (unsigned long)>::function                                            +93  [NEW]\n      +3.3%     +61 grpc::Server::Start                                                                      +61  +3.3%\n      +5.1%     +12 [Unmapped]                                                                               +12  +5.1%\n      [NEW]      +5 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>::~ErrorMethodHandler             +5  [NEW]\n      [NEW]      +5 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>::~ErrorMethodHandler              +5  [NEW]\n       +14%      +3 grpc::Server::SyncRequestThreadManager::Shutdown                                          +3   +14%\n      [NEW]      +2 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>::~ErrorMethodHandler             +2  [NEW]\n      [NEW]      +2 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>::~ErrorMethodHandler              +2  [NEW]\n   +14%    +660 src/cpp/server/dynamic_thread_pool.cc                                                   +660   +14%\n      [NEW] +1.51Ki grpc::DynamicThreadPool::DynamicThreadPool                                           +1.51Ki  [NEW]\n      [NEW]    +323 grpc::DynamicThreadPool::DynamicThread::DynamicThread                                   +323  [NEW]\n      +168%    +119 grpc::DynamicThreadPool::DynamicThread::~DynamicThread                                  +119  +168%\n       +23%     +69 grpc::DynamicThreadPool::Add                                                             +69   +23%\n       +11%     +56 grpc::DynamicThreadPool::~DynamicThreadPool                                              +56   +11%\n       +23%     +14 [Unmapped]                                                                               +14   +23%\n      [NEW]      +5 grpc::DynamicThreadPool::DynamicThread::DynamicThread(grpc::DynamicThreadPool*, bool      +5  [NEW]\n  +4.8%    +531 src/cpp/server/server_builder.cc                                                        +531  +4.8%\n       +10%    +339 grpc::ServerBuilder::BuildAndStart                                                      +339   +10%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +20%    +149 grpc::ServerBuilder::ServerBuilder                                                      +149   +20%\n      +7.7%     +48 grpc::ServerBuilder::~ServerBuilder                                                      +48  +7.7%\n   +18%    +445 src/cpp/thread_manager/thread_manager.cc                                                +445   +18%\n      [NEW]    +401 grpc::ThreadManager::ThreadManager                                                      +401  [NEW]\n      [NEW]    +337 void std::vector<std::unique_ptr<grpc::ThreadManager::WorkerThread, std::default_del    +337  [NEW]\n      [NEW]    +237 grpc::ThreadManager::WorkerThread::WorkerThread                                         +237  [NEW]\n       +22%     +89 grpc::ThreadManager::MainWorkLoop                                                        +89   +22%\n       +36%     +51 grpc::ThreadManager::Initialize                                                          +51   +36%\n       +19%     +39 grpc::ThreadManager::~ThreadManager                                                      +39   +19%\n       +14%     +14 [Unmapped]                                                                               +14   +14%\n      [NEW]      +5 grpc::ThreadManager::WorkerThread::WorkerThread(grpc::ThreadManager*, bool*)::{lambd      +5  [NEW]\n  +342%    +356 src/cpp/server/create_default_thread_pool.cc                                            +356  +342%\n      +305%    +229 grpc::(anonymous namespace)::CreateDefaultThreadPoolImpl                                +229  +305%\n      [NEW]     +46 std::_Function_base::_Base_manager<int (*)(unsigned long*, char const*, void (*)(voi     +46  [NEW]\n      [NEW]     +46 std::_Function_base::_Base_manager<void (*)(unsigned long)>::_M_manager                  +46  [NEW]\n      [NEW]     +32 std::_Function_handler<int (unsigned long*, char const*, void (*)(void*), void*, gpr     +32  [NEW]\n      [NEW]      +8 std::_Function_handler<void (unsigned long), void (*)(unsigned long)>::_M_invoke          +8  [NEW]\n  +0.5%     +43 src/cpp/client/secure_credentials.cc                                                     +43  +0.5%\n      +7.7%     +43 grpc::MetadataCredentialsPluginWrapper::GetMetadata                                      +43  +7.7%\n  +0.5%     +24 src/cpp/server/secure_server_credentials.cc                                              +24  +0.5%\n      +5.8%     +24 grpc::AuthMetadataProcessorAyncWrapper::Process                                          +24  +5.8%\n\n  +2.1% +7.18Ki TOTAL                                                                                +28.2Ki  +0.5%\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/358141487",
    "html_url": "https://github.com/grpc/grpc/pull/14010#issuecomment-358141487",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14010",
    "id": 358141487,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODE0MTQ4Nw==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-16T23:23:13Z",
    "updated_at": "2018-01-16T23:23:13Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE        FILE SIZE\n ++++++++++++++  ++++++++++++++\n\n  [ = ]       0        0  [ = ]\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n  +0.7% +1.58Ki [None]                                                                               +22.6Ki  +0.5%\n      +0.8% +1.59Ki [Unmapped]                                                                           +22.6Ki  +0.5%\n      [NEW]     +59 typeinfo name for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>               +59  [NEW]\n      [NEW]     +58 typeinfo name for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>                +58  [NEW]\n      [NEW]     +40 vtable for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>                      +40  [NEW]\n      [NEW]     +40 vtable for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>                       +40  [NEW]\n      [NEW]     +38 typeinfo name for int (*)                                                                +38  [NEW]\n      [NEW]     +37 typeinfo name for int                                                                    +37  [NEW]\n      [NEW]     +32 typeinfo for int (*)                                                                     +32  [NEW]\n      [NEW]     +32 typeinfo for void (*)                                                                    +32  [NEW]\n      [NEW]     +24 typeinfo for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>                    +24  [NEW]\n      [NEW]     +24 typeinfo for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>                     +24  [NEW]\n      [NEW]     +16 typeinfo for int                                                                         +16  [NEW]\n      [NEW]     +16 typeinfo for void                                                                        +16  [NEW]\n      +6.6%      +8 [None]                                                                                     0  [ = ]\n      [NEW]      +6 typeinfo name for void (*)                                                                +6  [NEW]\n      [NEW]      +5 typeinfo name for void                                                                    +5  [NEW]\n   +10% +3.59Ki src/cpp/server/server_cc.cc                                                          +3.59Ki   +10%\n      [NEW] +2.69Ki grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>::RunHandler                 +2.69Ki  [NEW]\n      [NEW] +2.69Ki grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>::RunHandler                  +2.69Ki  [NEW]\n      [NEW] +2.26Ki grpc::Server::Server                                                                 +2.26Ki  [NEW]\n      [NEW] +1.63Ki grpc::Server::SyncRequestThreadManager::DoWork                                       +1.63Ki  [NEW]\n      [NEW]    +308 void grpc::(anonymous namespace)::MgrShutdownAndWait<grpc::Server::SyncRequestThread    +308  [NEW]\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n      [NEW]     +93 std::function<int (unsigned long*, char const*, void (*)(void*), void*, gpr_thd_opti     +93  [NEW]\n      [NEW]     +93 std::function<void (unsigned long)>::function                                            +93  [NEW]\n      +3.3%     +61 grpc::Server::Start                                                                      +61  +3.3%\n      +5.1%     +12 [Unmapped]                                                                               +12  +5.1%\n      [NEW]      +5 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>::~ErrorMethodHandler             +5  [NEW]\n      [NEW]      +5 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>::~ErrorMethodHandler              +5  [NEW]\n       +14%      +3 grpc::Server::SyncRequestThreadManager::Shutdown                                          +3   +14%\n      [NEW]      +2 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>::~ErrorMethodHandler             +2  [NEW]\n      [NEW]      +2 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>::~ErrorMethodHandler              +2  [NEW]\n   +14%    +660 src/cpp/server/dynamic_thread_pool.cc                                                   +660   +14%\n      [NEW] +1.51Ki grpc::DynamicThreadPool::DynamicThreadPool                                           +1.51Ki  [NEW]\n      [NEW]    +323 grpc::DynamicThreadPool::DynamicThread::DynamicThread                                   +323  [NEW]\n      +168%    +119 grpc::DynamicThreadPool::DynamicThread::~DynamicThread                                  +119  +168%\n       +23%     +69 grpc::DynamicThreadPool::Add                                                             +69   +23%\n       +11%     +56 grpc::DynamicThreadPool::~DynamicThreadPool                                              +56   +11%\n       +23%     +14 [Unmapped]                                                                               +14   +23%\n      [NEW]      +5 grpc::DynamicThreadPool::DynamicThread::DynamicThread(grpc::DynamicThreadPool*, bool      +5  [NEW]\n  +4.8%    +531 src/cpp/server/server_builder.cc                                                        +531  +4.8%\n       +10%    +339 grpc::ServerBuilder::BuildAndStart                                                      +339   +10%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +20%    +149 grpc::ServerBuilder::ServerBuilder                                                      +149   +20%\n      +7.7%     +48 grpc::ServerBuilder::~ServerBuilder                                                      +48  +7.7%\n   +18%    +445 src/cpp/thread_manager/thread_manager.cc                                                +445   +18%\n      [NEW]    +401 grpc::ThreadManager::ThreadManager                                                      +401  [NEW]\n      [NEW]    +337 void std::vector<std::unique_ptr<grpc::ThreadManager::WorkerThread, std::default_del    +337  [NEW]\n      [NEW]    +237 grpc::ThreadManager::WorkerThread::WorkerThread                                         +237  [NEW]\n       +22%     +89 grpc::ThreadManager::MainWorkLoop                                                        +89   +22%\n       +36%     +51 grpc::ThreadManager::Initialize                                                          +51   +36%\n       +19%     +39 grpc::ThreadManager::~ThreadManager                                                      +39   +19%\n       +14%     +14 [Unmapped]                                                                               +14   +14%\n      [NEW]      +5 grpc::ThreadManager::WorkerThread::WorkerThread(grpc::ThreadManager*, bool*)::{lambd      +5  [NEW]\n  +342%    +356 src/cpp/server/create_default_thread_pool.cc                                            +356  +342%\n      +305%    +229 grpc::(anonymous namespace)::CreateDefaultThreadPoolImpl                                +229  +305%\n      [NEW]     +46 std::_Function_base::_Base_manager<int (*)(unsigned long*, char const*, void (*)(voi     +46  [NEW]\n      [NEW]     +46 std::_Function_base::_Base_manager<void (*)(unsigned long)>::_M_manager                  +46  [NEW]\n      [NEW]     +32 std::_Function_handler<int (unsigned long*, char const*, void (*)(void*), void*, gpr     +32  [NEW]\n      [NEW]      +8 std::_Function_handler<void (unsigned long), void (*)(unsigned long)>::_M_invoke          +8  [NEW]\n  +0.5%     +43 src/cpp/client/secure_credentials.cc                                                     +43  +0.5%\n      +7.7%     +43 grpc::MetadataCredentialsPluginWrapper::GetMetadata                                      +43  +7.7%\n  +0.5%     +24 src/cpp/server/secure_server_credentials.cc                                              +24  +0.5%\n      +5.8%     +24 grpc::AuthMetadataProcessorAyncWrapper::Process                                          +24  +5.8%\n\n  +2.1% +7.18Ki TOTAL                                                                                +28.2Ki  +0.5%\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/358142711",
    "html_url": "https://github.com/grpc/grpc/pull/14010#issuecomment-358142711",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14010",
    "id": 358142711,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODE0MjcxMQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-16T23:29:25Z",
    "updated_at": "2018-01-16T23:29:25Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/358144074",
    "html_url": "https://github.com/grpc/grpc/pull/14010#issuecomment-358144074",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14010",
    "id": 358144074,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODE0NDA3NA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-16T23:36:04Z",
    "updated_at": "2018-01-16T23:36:04Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/358144338",
    "html_url": "https://github.com/grpc/grpc/pull/14010#issuecomment-358144338",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14010",
    "id": 358144338,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODE0NDMzOA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-16T23:37:27Z",
    "updated_at": "2018-01-16T23:37:27Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE        FILE SIZE\n ++++++++++++++  ++++++++++++++\n\n  [ = ]       0        0  [ = ]\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n  +0.7% +1.58Ki [None]                                                                               +22.6Ki  +0.5%\n      +0.8% +1.59Ki [Unmapped]                                                                           +22.6Ki  +0.5%\n      [NEW]     +59 typeinfo name for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>               +59  [NEW]\n      [NEW]     +58 typeinfo name for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>                +58  [NEW]\n      [NEW]     +40 vtable for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>                      +40  [NEW]\n      [NEW]     +40 vtable for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>                       +40  [NEW]\n      [NEW]     +38 typeinfo name for int (*)                                                                +38  [NEW]\n      [NEW]     +37 typeinfo name for int                                                                    +37  [NEW]\n      [NEW]     +32 typeinfo for int (*)                                                                     +32  [NEW]\n      [NEW]     +32 typeinfo for void (*)                                                                    +32  [NEW]\n      [NEW]     +24 typeinfo for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>                    +24  [NEW]\n      [NEW]     +24 typeinfo for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>                     +24  [NEW]\n      [NEW]     +16 typeinfo for int                                                                         +16  [NEW]\n      [NEW]     +16 typeinfo for void                                                                        +16  [NEW]\n      +6.6%      +8 [None]                                                                                     0  [ = ]\n      [NEW]      +6 typeinfo name for void (*)                                                                +6  [NEW]\n      [NEW]      +5 typeinfo name for void                                                                    +5  [NEW]\n   +10% +3.59Ki src/cpp/server/server_cc.cc                                                          +3.59Ki   +10%\n      [NEW] +2.69Ki grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>::RunHandler                 +2.69Ki  [NEW]\n      [NEW] +2.69Ki grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>::RunHandler                  +2.69Ki  [NEW]\n      [NEW] +2.26Ki grpc::Server::Server                                                                 +2.26Ki  [NEW]\n      [NEW] +1.63Ki grpc::Server::SyncRequestThreadManager::DoWork                                       +1.63Ki  [NEW]\n      [NEW]    +308 void grpc::(anonymous namespace)::MgrShutdownAndWait<grpc::Server::SyncRequestThread    +308  [NEW]\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n      [NEW]     +93 std::function<int (unsigned long*, char const*, void (*)(void*), void*, gpr_thd_opti     +93  [NEW]\n      [NEW]     +93 std::function<void (unsigned long)>::function                                            +93  [NEW]\n      +3.3%     +61 grpc::Server::Start                                                                      +61  +3.3%\n      +5.1%     +12 [Unmapped]                                                                               +12  +5.1%\n      [NEW]      +5 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>::~ErrorMethodHandler             +5  [NEW]\n      [NEW]      +5 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>::~ErrorMethodHandler              +5  [NEW]\n       +14%      +3 grpc::Server::SyncRequestThreadManager::Shutdown                                          +3   +14%\n      [NEW]      +2 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>::~ErrorMethodHandler             +2  [NEW]\n      [NEW]      +2 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>::~ErrorMethodHandler              +2  [NEW]\n   +14%    +660 src/cpp/server/dynamic_thread_pool.cc                                                   +660   +14%\n      [NEW] +1.51Ki grpc::DynamicThreadPool::DynamicThreadPool                                           +1.51Ki  [NEW]\n      [NEW]    +323 grpc::DynamicThreadPool::DynamicThread::DynamicThread                                   +323  [NEW]\n      +168%    +119 grpc::DynamicThreadPool::DynamicThread::~DynamicThread                                  +119  +168%\n       +23%     +69 grpc::DynamicThreadPool::Add                                                             +69   +23%\n       +11%     +56 grpc::DynamicThreadPool::~DynamicThreadPool                                              +56   +11%\n       +23%     +14 [Unmapped]                                                                               +14   +23%\n      [NEW]      +5 grpc::DynamicThreadPool::DynamicThread::DynamicThread(grpc::DynamicThreadPool*, bool      +5  [NEW]\n  +4.8%    +531 src/cpp/server/server_builder.cc                                                        +531  +4.8%\n       +10%    +339 grpc::ServerBuilder::BuildAndStart                                                      +339   +10%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +20%    +149 grpc::ServerBuilder::ServerBuilder                                                      +149   +20%\n      +7.7%     +48 grpc::ServerBuilder::~ServerBuilder                                                      +48  +7.7%\n   +18%    +445 src/cpp/thread_manager/thread_manager.cc                                                +445   +18%\n      [NEW]    +401 grpc::ThreadManager::ThreadManager                                                      +401  [NEW]\n      [NEW]    +337 void std::vector<std::unique_ptr<grpc::ThreadManager::WorkerThread, std::default_del    +337  [NEW]\n      [NEW]    +237 grpc::ThreadManager::WorkerThread::WorkerThread                                         +237  [NEW]\n       +22%     +89 grpc::ThreadManager::MainWorkLoop                                                        +89   +22%\n       +36%     +51 grpc::ThreadManager::Initialize                                                          +51   +36%\n       +19%     +39 grpc::ThreadManager::~ThreadManager                                                      +39   +19%\n       +14%     +14 [Unmapped]                                                                               +14   +14%\n      [NEW]      +5 grpc::ThreadManager::WorkerThread::WorkerThread(grpc::ThreadManager*, bool*)::{lambd      +5  [NEW]\n  +342%    +356 src/cpp/server/create_default_thread_pool.cc                                            +356  +342%\n      +305%    +229 grpc::(anonymous namespace)::CreateDefaultThreadPoolImpl                                +229  +305%\n      [NEW]     +46 std::_Function_base::_Base_manager<int (*)(unsigned long*, char const*, void (*)(voi     +46  [NEW]\n      [NEW]     +46 std::_Function_base::_Base_manager<void (*)(unsigned long)>::_M_manager                  +46  [NEW]\n      [NEW]     +32 std::_Function_handler<int (unsigned long*, char const*, void (*)(void*), void*, gpr     +32  [NEW]\n      [NEW]      +8 std::_Function_handler<void (unsigned long), void (*)(unsigned long)>::_M_invoke          +8  [NEW]\n  +0.5%     +43 src/cpp/client/secure_credentials.cc                                                     +43  +0.5%\n      +7.7%     +43 grpc::MetadataCredentialsPluginWrapper::GetMetadata                                      +43  +7.7%\n  +0.5%     +24 src/cpp/server/secure_server_credentials.cc                                              +24  +0.5%\n      +5.8%     +24 grpc::AuthMetadataProcessorAyncWrapper::Process                                          +24  +5.8%\n\n  +2.1% +7.18Ki TOTAL                                                                                +28.2Ki  +0.5%\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/358145872",
    "html_url": "https://github.com/grpc/grpc/pull/14010#issuecomment-358145872",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14010",
    "id": 358145872,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODE0NTg3Mg==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-16T23:45:20Z",
    "updated_at": "2018-01-16T23:45:20Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE        FILE SIZE\n ++++++++++++++  ++++++++++++++\n\n  [ = ]       0        0  [ = ]\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n  +0.7% +1.47Ki [None]                                                                               +23.1Ki  +0.5%\n      +0.7% +1.48Ki [Unmapped]                                                                           +23.1Ki  +0.5%\n      [NEW]     +59 typeinfo name for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>               +59  [NEW]\n      [NEW]     +58 typeinfo name for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>                +58  [NEW]\n      [NEW]     +40 vtable for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>                      +40  [NEW]\n      [NEW]     +40 vtable for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>                       +40  [NEW]\n      [NEW]     +38 typeinfo name for int (*)                                                                +38  [NEW]\n      [NEW]     +37 typeinfo name for int                                                                    +37  [NEW]\n      [NEW]     +32 typeinfo for int (*)                                                                     +32  [NEW]\n      [NEW]     +32 typeinfo for void (*)                                                                    +32  [NEW]\n      [NEW]     +24 typeinfo for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>                    +24  [NEW]\n      [NEW]     +24 typeinfo for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>                     +24  [NEW]\n      [NEW]     +16 typeinfo for int                                                                         +16  [NEW]\n      [NEW]     +16 typeinfo for void                                                                        +16  [NEW]\n      +6.6%      +8 [None]                                                                                     0  [ = ]\n      [NEW]      +6 typeinfo name for void (*)                                                                +6  [NEW]\n      [NEW]      +5 typeinfo name for void                                                                    +5  [NEW]\n   +11% +3.78Ki src/cpp/server/server_cc.cc                                                          +3.78Ki   +11%\n      [NEW] +2.69Ki grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>::RunHandler                 +2.69Ki  [NEW]\n      [NEW] +2.69Ki grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>::RunHandler                  +2.69Ki  [NEW]\n      [NEW] +2.26Ki grpc::Server::Server                                                                 +2.26Ki  [NEW]\n      [NEW] +1.63Ki grpc::Server::SyncRequestThreadManager::DoWork                                       +1.63Ki  [NEW]\n       +23%    +244 grpc::Server::~Server                                                                   +244   +23%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n      [NEW]     +93 std::function<int (unsigned long*, char const*, void (*)(void*), void*, gpr_thd_opti     +93  [NEW]\n      [NEW]     +93 std::function<void (unsigned long)>::function                                            +93  [NEW]\n      +3.3%     +61 grpc::Server::Start                                                                      +61  +3.3%\n      [NEW]      +5 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>::~ErrorMethodHandler             +5  [NEW]\n      [NEW]      +5 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>::~ErrorMethodHandler              +5  [NEW]\n       +14%      +3 grpc::Server::SyncRequestThreadManager::Shutdown                                          +3   +14%\n      [NEW]      +2 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>::~ErrorMethodHandler             +2  [NEW]\n      [NEW]      +2 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>::~ErrorMethodHandler              +2  [NEW]\n   +14%    +660 src/cpp/server/dynamic_thread_pool.cc                                                   +660   +14%\n      [NEW] +1.51Ki grpc::DynamicThreadPool::DynamicThreadPool                                           +1.51Ki  [NEW]\n      [NEW]    +323 grpc::DynamicThreadPool::DynamicThread::DynamicThread                                   +323  [NEW]\n      +168%    +119 grpc::DynamicThreadPool::DynamicThread::~DynamicThread                                  +119  +168%\n       +23%     +69 grpc::DynamicThreadPool::Add                                                             +69   +23%\n       +11%     +56 grpc::DynamicThreadPool::~DynamicThreadPool                                              +56   +11%\n       +23%     +14 [Unmapped]                                                                               +14   +23%\n      [NEW]      +5 grpc::DynamicThreadPool::DynamicThread::DynamicThread(grpc::DynamicThreadPool*, bool      +5  [NEW]\n  +4.8%    +531 src/cpp/server/server_builder.cc                                                        +531  +4.8%\n       +10%    +339 grpc::ServerBuilder::BuildAndStart                                                      +339   +10%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +20%    +149 grpc::ServerBuilder::ServerBuilder                                                      +149   +20%\n      +7.7%     +48 grpc::ServerBuilder::~ServerBuilder                                                      +48  +7.7%\n   +18%    +445 src/cpp/thread_manager/thread_manager.cc                                                +445   +18%\n      [NEW]    +401 grpc::ThreadManager::ThreadManager                                                      +401  [NEW]\n      [NEW]    +337 void std::vector<std::unique_ptr<grpc::ThreadManager::WorkerThread, std::default_del    +337  [NEW]\n      [NEW]    +237 grpc::ThreadManager::WorkerThread::WorkerThread                                         +237  [NEW]\n       +22%     +89 grpc::ThreadManager::MainWorkLoop                                                        +89   +22%\n       +36%     +51 grpc::ThreadManager::Initialize                                                          +51   +36%\n       +19%     +39 grpc::ThreadManager::~ThreadManager                                                      +39   +19%\n       +14%     +14 [Unmapped]                                                                               +14   +14%\n      [NEW]      +5 grpc::ThreadManager::WorkerThread::WorkerThread(grpc::ThreadManager*, bool*)::{lambd      +5  [NEW]\n  +342%    +356 src/cpp/server/create_default_thread_pool.cc                                            +356  +342%\n      +305%    +229 grpc::(anonymous namespace)::CreateDefaultThreadPoolImpl                                +229  +305%\n      [NEW]     +46 std::_Function_base::_Base_manager<int (*)(unsigned long*, char const*, void (*)(voi     +46  [NEW]\n      [NEW]     +46 std::_Function_base::_Base_manager<void (*)(unsigned long)>::_M_manager                  +46  [NEW]\n      [NEW]     +32 std::_Function_handler<int (unsigned long*, char const*, void (*)(void*), void*, gpr     +32  [NEW]\n      [NEW]      +8 std::_Function_handler<void (unsigned long), void (*)(unsigned long)>::_M_invoke          +8  [NEW]\n  +0.5%     +43 src/cpp/client/secure_credentials.cc                                                     +43  +0.5%\n      +7.7%     +43 grpc::MetadataCredentialsPluginWrapper::GetMetadata                                      +43  +7.7%\n  +0.5%     +24 src/cpp/server/secure_server_credentials.cc                                              +24  +0.5%\n      +5.8%     +24 grpc::AuthMetadataProcessorAyncWrapper::Process                                          +24  +5.8%\n\n  +2.1% +7.26Ki TOTAL                                                                                +28.9Ki  +0.6%\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/358146281",
    "html_url": "https://github.com/grpc/grpc/pull/14010#issuecomment-358146281",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14010",
    "id": 358146281,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODE0NjI4MQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-16T23:47:30Z",
    "updated_at": "2018-01-16T23:47:30Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/358148127",
    "html_url": "https://github.com/grpc/grpc/pull/14010#issuecomment-358148127",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14010",
    "id": 358148127,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODE0ODEyNw==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-16T23:57:47Z",
    "updated_at": "2018-01-16T23:57:47Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/358150572",
    "html_url": "https://github.com/grpc/grpc/pull/14010#issuecomment-358150572",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14010",
    "id": 358150572,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODE1MDU3Mg==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-17T00:10:11Z",
    "updated_at": "2018-01-17T00:10:11Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/358151420",
    "html_url": "https://github.com/grpc/grpc/pull/14010#issuecomment-358151420",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14010",
    "id": 358151420,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODE1MTQyMA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-17T00:14:43Z",
    "updated_at": "2018-01-17T00:14:43Z",
    "author_association": "NONE",
    "body": "```\nCorrupt JSON data (indicates timeout or crash): \n    bm_fullstack_unary_ping_pong.BM_UnaryPingPong_MinInProcessCHTTP2_NoOpMutator_NoOpMutator__16777216_16777216.counters.new: 1\n\n\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/358153904",
    "html_url": "https://github.com/grpc/grpc/pull/14010#issuecomment-358153904",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14010",
    "id": 358153904,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODE1MzkwNA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-17T00:28:50Z",
    "updated_at": "2018-01-17T00:28:50Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/358155522",
    "html_url": "https://github.com/grpc/grpc/pull/14010#issuecomment-358155522",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14010",
    "id": 358155522,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODE1NTUyMg==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-17T00:37:32Z",
    "updated_at": "2018-01-17T00:37:32Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/358195064",
    "html_url": "https://github.com/grpc/grpc/pull/14010#issuecomment-358195064",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14010",
    "id": 358195064,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODE5NTA2NA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-17T04:39:28Z",
    "updated_at": "2018-01-17T04:39:28Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE        FILE SIZE\n ++++++++++++++  ++++++++++++++\n\n  [ = ]       0        0  [ = ]\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n  +0.7% +1.47Ki [None]                                                                               +23.1Ki  +0.5%\n      +0.7% +1.48Ki [Unmapped]                                                                           +23.1Ki  +0.5%\n      [NEW]     +59 typeinfo name for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>               +59  [NEW]\n      [NEW]     +58 typeinfo name for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>                +58  [NEW]\n      [NEW]     +40 vtable for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>                      +40  [NEW]\n      [NEW]     +40 vtable for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>                       +40  [NEW]\n      [NEW]     +38 typeinfo name for int (*)                                                                +38  [NEW]\n      [NEW]     +37 typeinfo name for int                                                                    +37  [NEW]\n      [NEW]     +32 typeinfo for int (*)                                                                     +32  [NEW]\n      [NEW]     +32 typeinfo for void (*)                                                                    +32  [NEW]\n      [NEW]     +24 typeinfo for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>                    +24  [NEW]\n      [NEW]     +24 typeinfo for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>                     +24  [NEW]\n      [NEW]     +16 typeinfo for int                                                                         +16  [NEW]\n      [NEW]     +16 typeinfo for void                                                                        +16  [NEW]\n      +6.6%      +8 [None]                                                                                     0  [ = ]\n      [NEW]      +6 typeinfo name for void (*)                                                                +6  [NEW]\n      [NEW]      +5 typeinfo name for void                                                                    +5  [NEW]\n   +11% +3.78Ki src/cpp/server/server_cc.cc                                                          +3.78Ki   +11%\n      [NEW] +2.69Ki grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>::RunHandler                 +2.69Ki  [NEW]\n      [NEW] +2.69Ki grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>::RunHandler                  +2.69Ki  [NEW]\n      [NEW] +2.26Ki grpc::Server::Server                                                                 +2.26Ki  [NEW]\n      [NEW] +1.63Ki grpc::Server::SyncRequestThreadManager::DoWork                                       +1.63Ki  [NEW]\n       +23%    +244 grpc::Server::~Server                                                                   +244   +23%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n      [NEW]     +93 std::function<int (unsigned long*, char const*, void (*)(void*), void*, gpr_thd_opti     +93  [NEW]\n      [NEW]     +93 std::function<void (unsigned long)>::function                                            +93  [NEW]\n      +3.3%     +61 grpc::Server::Start                                                                      +61  +3.3%\n      [NEW]      +5 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>::~ErrorMethodHandler             +5  [NEW]\n      [NEW]      +5 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>::~ErrorMethodHandler              +5  [NEW]\n       +14%      +3 grpc::Server::SyncRequestThreadManager::Shutdown                                          +3   +14%\n      [NEW]      +2 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>::~ErrorMethodHandler             +2  [NEW]\n      [NEW]      +2 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>::~ErrorMethodHandler              +2  [NEW]\n   +14%    +660 src/cpp/server/dynamic_thread_pool.cc                                                   +660   +14%\n      [NEW] +1.51Ki grpc::DynamicThreadPool::DynamicThreadPool                                           +1.51Ki  [NEW]\n      [NEW]    +323 grpc::DynamicThreadPool::DynamicThread::DynamicThread                                   +323  [NEW]\n      +168%    +119 grpc::DynamicThreadPool::DynamicThread::~DynamicThread                                  +119  +168%\n       +23%     +69 grpc::DynamicThreadPool::Add                                                             +69   +23%\n       +11%     +56 grpc::DynamicThreadPool::~DynamicThreadPool                                              +56   +11%\n       +23%     +14 [Unmapped]                                                                               +14   +23%\n      [NEW]      +5 grpc::DynamicThreadPool::DynamicThread::DynamicThread(grpc::DynamicThreadPool*, bool      +5  [NEW]\n  +4.8%    +531 src/cpp/server/server_builder.cc                                                        +531  +4.8%\n       +10%    +339 grpc::ServerBuilder::BuildAndStart                                                      +339   +10%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +20%    +149 grpc::ServerBuilder::ServerBuilder                                                      +149   +20%\n      +7.7%     +48 grpc::ServerBuilder::~ServerBuilder                                                      +48  +7.7%\n   +18%    +445 src/cpp/thread_manager/thread_manager.cc                                                +445   +18%\n      [NEW]    +401 grpc::ThreadManager::ThreadManager                                                      +401  [NEW]\n      [NEW]    +337 void std::vector<std::unique_ptr<grpc::ThreadManager::WorkerThread, std::default_del    +337  [NEW]\n      [NEW]    +237 grpc::ThreadManager::WorkerThread::WorkerThread                                         +237  [NEW]\n       +22%     +89 grpc::ThreadManager::MainWorkLoop                                                        +89   +22%\n       +36%     +51 grpc::ThreadManager::Initialize                                                          +51   +36%\n       +19%     +39 grpc::ThreadManager::~ThreadManager                                                      +39   +19%\n       +14%     +14 [Unmapped]                                                                               +14   +14%\n      [NEW]      +5 grpc::ThreadManager::WorkerThread::WorkerThread(grpc::ThreadManager*, bool*)::{lambd      +5  [NEW]\n  +342%    +356 src/cpp/server/create_default_thread_pool.cc                                            +356  +342%\n      +305%    +229 grpc::(anonymous namespace)::CreateDefaultThreadPoolImpl                                +229  +305%\n      [NEW]     +46 std::_Function_base::_Base_manager<int (*)(unsigned long*, char const*, void (*)(voi     +46  [NEW]\n      [NEW]     +46 std::_Function_base::_Base_manager<void (*)(unsigned long)>::_M_manager                  +46  [NEW]\n      [NEW]     +32 std::_Function_handler<int (unsigned long*, char const*, void (*)(void*), void*, gpr     +32  [NEW]\n      [NEW]      +8 std::_Function_handler<void (unsigned long), void (*)(unsigned long)>::_M_invoke          +8  [NEW]\n  +0.5%     +43 src/cpp/client/secure_credentials.cc                                                     +43  +0.5%\n      +7.7%     +43 grpc::MetadataCredentialsPluginWrapper::GetMetadata                                      +43  +7.7%\n  +0.5%     +24 src/cpp/server/secure_server_credentials.cc                                              +24  +0.5%\n      +5.8%     +24 grpc::AuthMetadataProcessorAyncWrapper::Process                                          +24  +5.8%\n\n  +2.1% +7.26Ki TOTAL                                                                                +28.9Ki  +0.6%\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/358195521",
    "html_url": "https://github.com/grpc/grpc/pull/14010#issuecomment-358195521",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14010",
    "id": 358195521,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODE5NTUyMQ==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-17T04:43:31Z",
    "updated_at": "2018-01-17T04:44:14Z",
    "author_association": "MEMBER",
    "body": "@sreecha : this is ready for review. The new code is in commit 0bf4d7e . The main component of that commit is to make sure that the `ThreadManager` goes through `Wait` before destruction. There are also some superfluous locks that are removed (the `wt_mu_` is actually not needed, as I have commented) and I've improved the code-health and idiomaticity of, for example, the `completed_threads_` pool (which in turn allowed for dropping the separate `completed_mu_`).\r\n\r\nCc @jtattermusch "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/358196351",
    "html_url": "https://github.com/grpc/grpc/pull/14010#issuecomment-358196351",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14010",
    "id": 358196351,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODE5NjM1MQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-17T04:49:48Z",
    "updated_at": "2018-01-17T04:49:48Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  }
]
