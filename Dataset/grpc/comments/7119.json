[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/229166508",
    "html_url": "https://github.com/grpc/grpc/issues/7119#issuecomment-229166508",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7119",
    "id": 229166508,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTE2NjUwOA==",
    "user": {
      "login": "soltanmm",
      "id": 4889063,
      "node_id": "MDQ6VXNlcjQ4ODkwNjM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4889063?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/soltanmm",
      "html_url": "https://github.com/soltanmm",
      "followers_url": "https://api.github.com/users/soltanmm/followers",
      "following_url": "https://api.github.com/users/soltanmm/following{/other_user}",
      "gists_url": "https://api.github.com/users/soltanmm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/soltanmm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/soltanmm/subscriptions",
      "organizations_url": "https://api.github.com/users/soltanmm/orgs",
      "repos_url": "https://api.github.com/users/soltanmm/repos",
      "events_url": "https://api.github.com/users/soltanmm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/soltanmm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-28T20:06:18Z",
    "updated_at": "2016-06-28T20:06:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "Duplicate of #7101.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/229166997",
    "html_url": "https://github.com/grpc/grpc/issues/7119#issuecomment-229166997",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7119",
    "id": 229166997,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTE2Njk5Nw==",
    "user": {
      "login": "bgilmore",
      "id": 90837,
      "node_id": "MDQ6VXNlcjkwODM3",
      "avatar_url": "https://avatars0.githubusercontent.com/u/90837?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bgilmore",
      "html_url": "https://github.com/bgilmore",
      "followers_url": "https://api.github.com/users/bgilmore/followers",
      "following_url": "https://api.github.com/users/bgilmore/following{/other_user}",
      "gists_url": "https://api.github.com/users/bgilmore/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bgilmore/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bgilmore/subscriptions",
      "organizations_url": "https://api.github.com/users/bgilmore/orgs",
      "repos_url": "https://api.github.com/users/bgilmore/repos",
      "events_url": "https://api.github.com/users/bgilmore/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bgilmore/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-28T20:08:03Z",
    "updated_at": "2016-06-28T20:08:14Z",
    "author_association": "NONE",
    "body": "Will the proto_path behavior be fixed by the commit linked from #7101?\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/229168252",
    "html_url": "https://github.com/grpc/grpc/issues/7119#issuecomment-229168252",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7119",
    "id": 229168252,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTE2ODI1Mg==",
    "user": {
      "login": "soltanmm",
      "id": 4889063,
      "node_id": "MDQ6VXNlcjQ4ODkwNjM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4889063?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/soltanmm",
      "html_url": "https://github.com/soltanmm",
      "followers_url": "https://api.github.com/users/soltanmm/followers",
      "following_url": "https://api.github.com/users/soltanmm/following{/other_user}",
      "gists_url": "https://api.github.com/users/soltanmm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/soltanmm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/soltanmm/subscriptions",
      "organizations_url": "https://api.github.com/users/soltanmm/orgs",
      "repos_url": "https://api.github.com/users/soltanmm/repos",
      "events_url": "https://api.github.com/users/soltanmm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/soltanmm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-28T20:12:34Z",
    "updated_at": "2016-06-28T20:12:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Is that behavior on the current release (... if so how'd you check that...?), or for a previous release?\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/229170588",
    "html_url": "https://github.com/grpc/grpc/issues/7119#issuecomment-229170588",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7119",
    "id": 229170588,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTE3MDU4OA==",
    "user": {
      "login": "bgilmore",
      "id": 90837,
      "node_id": "MDQ6VXNlcjkwODM3",
      "avatar_url": "https://avatars0.githubusercontent.com/u/90837?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bgilmore",
      "html_url": "https://github.com/bgilmore",
      "followers_url": "https://api.github.com/users/bgilmore/followers",
      "following_url": "https://api.github.com/users/bgilmore/following{/other_user}",
      "gists_url": "https://api.github.com/users/bgilmore/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bgilmore/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bgilmore/subscriptions",
      "organizations_url": "https://api.github.com/users/bgilmore/orgs",
      "repos_url": "https://api.github.com/users/bgilmore/repos",
      "events_url": "https://api.github.com/users/bgilmore/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bgilmore/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-28T20:21:13Z",
    "updated_at": "2016-06-28T20:21:13Z",
    "author_association": "NONE",
    "body": "Setting aside the broken codegen in #7101, there's a visible behavior change between 0.14.0 and 0.15.0 that prevents codegen unless you specify --proto_path which _should_ be using the current working directory as a default.\n\n```\n~ % source grpc-0.14.0/bin/activate\n~ % pip show 'grpcio-tools'\n---\nMetadata-Version: 2.0\nName: grpcio-tools\nVersion: 0.14.0\nSummary: UNKNOWN\nHome-page: UNKNOWN\nAuthor: UNKNOWN\nAuthor-email: UNKNOWN\nInstaller: pip\nLicense: 3-clause BSD\nLocation: /home/bgilmore/grpc-0.14.0/lib/python2.7/site-packages\nRequires: protobuf\nClassifiers:\n~ % python -m grpc.tools.protoc test.proto --python_out=. --grpc_python_out=.\n[codegen succeeds]\n```\n\n```\n~ % source grpc-0.15.0/bin/activate\n~ % pip show 'grpcio-tools'\n---\nMetadata-Version: 2.0\nName: grpcio-tools\nVersion: 0.15.0\nSummary: UNKNOWN\nHome-page: UNKNOWN\nAuthor: UNKNOWN\nAuthor-email: UNKNOWN\nInstaller: pip\nLicense: 3-clause BSD\nLocation: /home/bgilmore/grpc-0.15.0/lib/python2.7/site-packages\nRequires: grpcio, protobuf\nClassifiers:\n~ % python -m grpc.tools.protoc test.proto --python_out=. --grpc_python_out=.\nD0628 22:15:57.197173456   22016 ev_posix.c:101]             Using polling engine: poll\ntest.proto: File does not reside within any path specified using --proto_path (or -I).  You must specify a --proto_path which encompasses this file.  Note that the proto_path must be an exact prefix of the .proto file names -- protoc is too dumb to figure out when two paths (e.g. absolute and relative) are equivalent (it's harder than you think).\n~ % python -m grpc.tools.protoc test.proto --python_out=. --grpc_python_out=. --proto_path=.\nD0628 22:20:28.452959186   22086 ev_posix.c:101]             Using polling engine: poll\n[codegen succeeds, but code is broken per #7101]\n```\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/229172318",
    "html_url": "https://github.com/grpc/grpc/issues/7119#issuecomment-229172318",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7119",
    "id": 229172318,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTE3MjMxOA==",
    "user": {
      "login": "soltanmm",
      "id": 4889063,
      "node_id": "MDQ6VXNlcjQ4ODkwNjM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4889063?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/soltanmm",
      "html_url": "https://github.com/soltanmm",
      "followers_url": "https://api.github.com/users/soltanmm/followers",
      "following_url": "https://api.github.com/users/soltanmm/following{/other_user}",
      "gists_url": "https://api.github.com/users/soltanmm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/soltanmm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/soltanmm/subscriptions",
      "organizations_url": "https://api.github.com/users/soltanmm/orgs",
      "repos_url": "https://api.github.com/users/soltanmm/repos",
      "events_url": "https://api.github.com/users/soltanmm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/soltanmm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-28T20:27:25Z",
    "updated_at": "2016-06-28T20:27:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ah, okay, I _think_ the problem is that when we started packaging the well-known protos, the underlying `protoc` implementation was made aware of them in locations via user-space flags, which then (for whatever reason) disables automatic inclusion of the present working directory.\n\nGonna hijack this thread for _just_ that issue.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/232826828",
    "html_url": "https://github.com/grpc/grpc/issues/7119#issuecomment-232826828",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7119",
    "id": 232826828,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjgyNjgyOA==",
    "user": {
      "login": "soltanmm",
      "id": 4889063,
      "node_id": "MDQ6VXNlcjQ4ODkwNjM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4889063?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/soltanmm",
      "html_url": "https://github.com/soltanmm",
      "followers_url": "https://api.github.com/users/soltanmm/followers",
      "following_url": "https://api.github.com/users/soltanmm/following{/other_user}",
      "gists_url": "https://api.github.com/users/soltanmm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/soltanmm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/soltanmm/subscriptions",
      "organizations_url": "https://api.github.com/users/soltanmm/orgs",
      "repos_url": "https://api.github.com/users/soltanmm/repos",
      "events_url": "https://api.github.com/users/soltanmm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/soltanmm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-15T00:05:05Z",
    "updated_at": "2016-07-15T00:05:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "@kpayson64 @nathanielmanistaatgoogle So, AFAICT this is a really, really, really quick fix (just tack on a `-I.` [or `\"-I{}\".format(os.getcwd())`, or whatever] in the invocation at the end of `tools/distrib/python/grpcio_tools/grpc/tools/protoc.py`).\n\nI don't know if `protoc` has some sort of ordering deal with multiple include paths and conflicting file names along identical relative paths to the include paths. Also, from the protobuf tutorial:\n\n> In general you should set the --proto_path flag to the root of your project and use fully qualified names for all imports.\n\n... How deep down the rabbit hole do we want to go with this? I can imagine that somewhere in protobuf there's a way to inject the WKTs as something other than a `--proto_path` flag that mucks with the default behavior (but that involves possibly complicating the compilation process and code maintenance). Or that there's a way to `argparse` those flags at the Python-level, munge them a bit, then pass them through to `protoc`.\n"
  }
]
