[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/278862144",
    "html_url": "https://github.com/grpc/grpc/pull/9660#issuecomment-278862144",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9660",
    "id": 278862144,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODg2MjE0NA==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-10T05:37:44Z",
    "updated_at": "2017-02-10T05:37:44Z",
    "author_association": "MEMBER",
    "body": "Now built on #9666 "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/279016531",
    "html_url": "https://github.com/grpc/grpc/pull/9660#issuecomment-279016531",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9660",
    "id": 279016531,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTAxNjUzMQ==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-10T17:55:10Z",
    "updated_at": "2017-02-10T17:55:10Z",
    "author_association": "MEMBER",
    "body": "On the whole, this looks really good.  Most of my comments are minor; my only significant concern is the use of the transport_private data in a couple of places.\n\nNote that I have not reviewed any of the pollset or completion_queue changes, since I assume that Sree will do that in #9666.  That having been said, I'm curious as to why you merged that in to this PR, since the two changes seem orthogonal.  Am I missing some connection between them?\n\n---\n\nReviewed 19 of 19 files at r1.\nReview status: all files reviewed at latest revision, 7 unresolved discussions, some commit checks failed.\n\n---\n\n*[src/core/ext/client_channel/client_channel.c, line 427 at r1](https://reviewable.io:443/reviews/grpc/grpc/9660#-KcczbwpRpQCU_BjKzgU:-KcczbwpRpQCU_BjKzgV:b-d67ifc) ([raw file](https://github.com/grpc/grpc/blob/3fc3408cd33eb2e221863e0881ec82eb8e21414f/src/core/ext/client_channel/client_channel.c#L427)):*\n> ```C\n>                                          grpc_error *error_ignored) {\n>   grpc_transport_op *op = arg;\n>   grpc_channel_element *elem = op->transport_private.args[0];\n> ```\n\nIt seems a bit messy to use transport private data here, since this is not transport code.  Could we instead create some sort of local data structure to pass in both op and elem via args?\n\n---\n\n*[src/core/ext/client_channel/client_channel.c, line 876 at r1](https://reviewable.io:443/reviews/grpc/grpc/9660#-Kcd0XSCchVKu8_DRk-4:-Kcd0XSCchVKu8_DRk-5:biguv80) ([raw file](https://github.com/grpc/grpc/blob/3fc3408cd33eb2e221863e0881ec82eb8e21414f/src/core/ext/client_channel/client_channel.c#L876)):*\n> ```C\n>                                                 grpc_error *error_ignored) {\n>   grpc_transport_stream_op *op = arg;\n>   grpc_call_element *elem = op->transport_private.args[0];\n> ```\n\nSame comment here as above -- I'd prefer to use some other mechanism to pass both op and elem in via args.\n\n---\n\n*[src/core/ext/client_channel/client_channel.c, line 881 at r1](https://reviewable.io:443/reviews/grpc/grpc/9660#-Kcd1xz3nTvQgyjCQKwN:-Kcd1xz3nTvQgyjCQKwO:bbomoat) ([raw file](https://github.com/grpc/grpc/blob/3fc3408cd33eb2e221863e0881ec82eb8e21414f/src/core/ext/client_channel/client_channel.c#L881)):*\n> ```C\n>   grpc_subchannel_call *call;\n> \n> retry:\n> ```\n\nNow that the logic here is a bit simpler, would it make sense to use a loop instead of a goto for this?\n\nFeel free to push back on this -- I'm honestly not sure whether or not this would improve readability.  I do generally prefer loops to gotos, but in this particular case, it might be that \"goto retry\" and \"goto done\" are a bit more self-documenting than \"continue\" and \"break\".\n\n---\n\n*[src/core/ext/client_channel/client_channel.c, line 971 at r1](https://reviewable.io:443/reviews/grpc/grpc/9660#-Kcd2k4MIbTU_xuMFhTb:-Kcd2k4MIbTU_xuMFhTc:b-5u1znr) ([raw file](https://github.com/grpc/grpc/blob/3fc3408cd33eb2e221863e0881ec82eb8e21414f/src/core/ext/client_channel/client_channel.c#L971)):*\n> ```C\n> // initial metadata op, and (b) the need for efficiency, especially in\n> // the streaming case.\n> // TODO(ctiller): Explain this more thoroughly.\n> ```\n\nMight be a good time to address this TODO, as long as you're in here.\n\n---\n\n*[src/core/ext/client_channel/client_channel.c, line 1201 at r1](https://reviewable.io:443/reviews/grpc/grpc/9660#-Kcd5CwkxBidqpkgSBVY:-Kcd5CwkxBidqpkgSBVZ:b6jjdta) ([raw file](https://github.com/grpc/grpc/blob/3fc3408cd33eb2e221863e0881ec82eb8e21414f/src/core/ext/client_channel/client_channel.c#L1201)):*\n> ```C\n>   channel_data *chand = elem->channel_data;\n>   grpc_connectivity_state out;\n>   out = grpc_connectivity_state_check(&chand->state_tracker);\n> ```\n\nCan combine this with the previous line.\n\n---\n\n*[src/core/ext/client_channel/client_channel.c, line 1206 at r1](https://reviewable.io:443/reviews/grpc/grpc/9660#-Kcd5PzEmvd3dBSwjdX5:-Kcd5PzEmvd3dBSwjdX6:b-pn0l9i) ([raw file](https://github.com/grpc/grpc/blob/3fc3408cd33eb2e221863e0881ec82eb8e21414f/src/core/ext/client_channel/client_channel.c#L1206)):*\n> ```C\n>     grpc_closure_sched(\n>         exec_ctx,\n>         grpc_closure_create(try_to_connect_locked, chand,\n> ```\n\nI notice that, due to this change, this function may now return before we've called grpc_lb_policy_exit_idle() or grpc_resolver_next().  But since both of those functions operate asynchronously anyway, I'm guessing that's okay, right?\n\n---\n\n*[src/core/ext/client_channel/client_channel.c, line 1233 at r1](https://reviewable.io:443/reviews/grpc/grpc/9660#-Kcd6IEx_d47bWNk9Kd5:-Kcd6IEy_5GCgTwEg5bX:b-6znw86) ([raw file](https://github.com/grpc/grpc/blob/3fc3408cd33eb2e221863e0881ec82eb8e21414f/src/core/ext/client_channel/client_channel.c#L1233)):*\n> ```C\n> }\n> \n> static void cc_watch_connectivity_state_locked(grpc_exec_ctx *exec_ctx,\n> ```\n\nThe convention I've been trying to hold to in this code is that the \"cc_\" prefix is used only for methods that go in the filter's vtable.\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/9660#-:-Kcd8lwsfraW4cE4tfgq:b-677jey)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/279786330",
    "html_url": "https://github.com/grpc/grpc/pull/9660#issuecomment-279786330",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9660",
    "id": 279786330,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTc4NjMzMA==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-14T18:04:59Z",
    "updated_at": "2017-02-14T18:04:59Z",
    "author_association": "MEMBER",
    "body": "\n\n\n\nReview status: all files reviewed at latest revision, 7 unresolved discussions, some commit checks failed.\n\n---\n\n*[src/core/ext/client_channel/client_channel.c, line 427 at r1](https://reviewable.io:443/reviews/grpc/grpc/9660#-KcczbwpRpQCU_BjKzgU:-KcxhjUSLR3SWTzQhhmW:b6js0w7) ([raw file](https://github.com/grpc/grpc/blob/3fc3408cd33eb2e221863e0881ec82eb8e21414f/src/core/ext/client_channel/client_channel.c#L427)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nIt seems a bit messy to use transport private data here, since this is not transport code.  Could we instead create some sort of local data structure to pass in both op and elem via args?\n</blockquote></details>\n\nIt's not possible to use a local data structure (possibly unbounded number of ops coming through), and we need to avoid the allocation.\n\nI'll rename transport_private to handler_private instead.\n\n---\n\n*[src/core/ext/client_channel/client_channel.c, line 876 at r1](https://reviewable.io:443/reviews/grpc/grpc/9660#-Kcd0XSCchVKu8_DRk-4:-Kcxn-mWbEeAq_tftxT-:b-xku6h3) ([raw file](https://github.com/grpc/grpc/blob/3fc3408cd33eb2e221863e0881ec82eb8e21414f/src/core/ext/client_channel/client_channel.c#L876)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nSame comment here as above -- I'd prefer to use some other mechanism to pass both op and elem in via args.\n</blockquote></details>\n\nIt needs to be this or we incur all sorts of overhead - but I've updated the field name to be more obvious that this is ok.\n\n---\n\n*[src/core/ext/client_channel/client_channel.c, line 881 at r1](https://reviewable.io:443/reviews/grpc/grpc/9660#-Kcd1xz3nTvQgyjCQKwN:-KcxlDcpnISFfuucPY_O:b-jqlj71) ([raw file](https://github.com/grpc/grpc/blob/3fc3408cd33eb2e221863e0881ec82eb8e21414f/src/core/ext/client_channel/client_channel.c#L881)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nNow that the logic here is a bit simpler, would it make sense to use a loop instead of a goto for this?\n\nFeel free to push back on this -- I'm honestly not sure whether or not this would improve readability.  I do generally prefer loops to gotos, but in this particular case, it might be that \"goto retry\" and \"goto done\" are a bit more self-documenting than \"continue\" and \"break\".\n</blockquote></details>\n\nI moved the done branch into its own function (so we can just return).\nThe remaining retry cases I moved to a recursion... it's 50/50 to me whether that part reads better, but it'll be super useful when debugging...\n\n---\n\n*[src/core/ext/client_channel/client_channel.c, line 971 at r1](https://reviewable.io:443/reviews/grpc/grpc/9660#-Kcd2k4MIbTU_xuMFhTb:-KcxmBNAv5Gw_N2Daze_:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/3fc3408cd33eb2e221863e0881ec82eb8e21414f/src/core/ext/client_channel/client_channel.c#L971)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nMight be a good time to address this TODO, as long as you're in here.\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/ext/client_channel/client_channel.c, line 1201 at r1](https://reviewable.io:443/reviews/grpc/grpc/9660#-Kcd5CwkxBidqpkgSBVY:-KcxmLoJcapeI16Z2dTh:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/3fc3408cd33eb2e221863e0881ec82eb8e21414f/src/core/ext/client_channel/client_channel.c#L1201)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nCan combine this with the previous line.\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/ext/client_channel/client_channel.c, line 1206 at r1](https://reviewable.io:443/reviews/grpc/grpc/9660#-Kcd5PzEmvd3dBSwjdX5:-KcxmGTNwTNT48qIB0wW:b-vmmom0) ([raw file](https://github.com/grpc/grpc/blob/3fc3408cd33eb2e221863e0881ec82eb8e21414f/src/core/ext/client_channel/client_channel.c#L1206)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nI notice that, due to this change, this function may now return before we've called grpc_lb_policy_exit_idle() or grpc_resolver_next().  But since both of those functions operate asynchronously anyway, I'm guessing that's okay, right?\n</blockquote></details>\n\nI think so.\n\n---\n\n*[src/core/ext/client_channel/client_channel.c, line 1233 at r1](https://reviewable.io:443/reviews/grpc/grpc/9660#-Kcd6IEx_d47bWNk9Kd5:-KcxmbzOIlhgSiM3o66f:b-om39e2) ([raw file](https://github.com/grpc/grpc/blob/3fc3408cd33eb2e221863e0881ec82eb8e21414f/src/core/ext/client_channel/client_channel.c#L1233)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nThe convention I've been trying to hold to in this code is that the \"cc_\" prefix is used only for methods that go in the filter's vtable.\n</blockquote></details>\n\nI've tried to update new functions as appropriate\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/9660)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/280081465",
    "html_url": "https://github.com/grpc/grpc/pull/9660#issuecomment-280081465",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9660",
    "id": 280081465,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDA4MTQ2NQ==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-15T17:38:05Z",
    "updated_at": "2017-02-15T17:38:05Z",
    "author_association": "MEMBER",
    "body": "@dgquintas: can you finish up this review since @markdroth is out?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/280097378",
    "html_url": "https://github.com/grpc/grpc/pull/9660#issuecomment-280097378",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9660",
    "id": 280097378,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDA5NzM3OA==",
    "user": {
      "login": "dgquintas",
      "id": 120217,
      "node_id": "MDQ6VXNlcjEyMDIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/120217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgquintas",
      "html_url": "https://github.com/dgquintas",
      "followers_url": "https://api.github.com/users/dgquintas/followers",
      "following_url": "https://api.github.com/users/dgquintas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgquintas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgquintas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgquintas/subscriptions",
      "organizations_url": "https://api.github.com/users/dgquintas/orgs",
      "repos_url": "https://api.github.com/users/dgquintas/repos",
      "events_url": "https://api.github.com/users/dgquintas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgquintas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-15T18:33:29Z",
    "updated_at": "2017-02-15T18:33:29Z",
    "author_association": "NONE",
    "body": "On it"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/280495076",
    "html_url": "https://github.com/grpc/grpc/pull/9660#issuecomment-280495076",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9660",
    "id": 280495076,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDQ5NTA3Ng==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-16T23:14:57Z",
    "updated_at": "2017-02-16T23:14:57Z",
    "author_association": "MEMBER",
    "body": "How's this one looking?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/280512505",
    "html_url": "https://github.com/grpc/grpc/pull/9660#issuecomment-280512505",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9660",
    "id": 280512505,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDUxMjUwNQ==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-17T00:36:13Z",
    "updated_at": "2017-02-17T00:36:13Z",
    "author_association": "MEMBER",
    "body": "Failed tests: #9550 "
  }
]
