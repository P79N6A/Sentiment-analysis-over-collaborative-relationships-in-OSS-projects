[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/220701213",
    "html_url": "https://github.com/grpc/grpc/pull/6667#issuecomment-220701213",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6667",
    "id": 220701213,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDcwMTIxMw==",
    "user": {
      "login": "kpayson64",
      "id": 18316330,
      "node_id": "MDQ6VXNlcjE4MzE2MzMw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18316330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kpayson64",
      "html_url": "https://github.com/kpayson64",
      "followers_url": "https://api.github.com/users/kpayson64/followers",
      "following_url": "https://api.github.com/users/kpayson64/following{/other_user}",
      "gists_url": "https://api.github.com/users/kpayson64/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kpayson64/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kpayson64/subscriptions",
      "organizations_url": "https://api.github.com/users/kpayson64/orgs",
      "repos_url": "https://api.github.com/users/kpayson64/repos",
      "events_url": "https://api.github.com/users/kpayson64/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kpayson64/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-20T19:45:30Z",
    "updated_at": "2016-05-20T19:46:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ctiller \n\nAs part of an offiline discussion, a question was raised about completion queues for server requests.  Should we have 1 completion queue per request as we do for clients?  And if so, do we need to register each of these completion queues?\n\nA rough example of what we are currently doing:\n\nMain thread:\n\n```\ngrpc_server* srv = ...\ngrpc_completion_queue* cq = ...\ngrpc_server_register_completion_queue(srv, cq, NULL);\ngrpc_server_request_call(.., &call, cq, cq, ...)\ngrpc_completion_queue_pluck_event(cq, ...)\nspawn_child_thread...\n```\n\nThen in the child thread:\n\n```\ngrpc_call_start_batch(call,...) //Recv Metdata/recv message ext\ngrpc_completion_queue_pluck_event(cq)\n```\n\nCan we have \"Too Many Pluckers\" on cq?\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/220867905",
    "html_url": "https://github.com/grpc/grpc/pull/6667#issuecomment-220867905",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6667",
    "id": 220867905,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDg2NzkwNQ==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-23T01:00:12Z",
    "updated_at": "2016-05-23T01:00:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "Trying to answer your questions:\n-- for a sync api, you need to pluck on completion queues and there's a limit of 6 plucks per completion queue (because there are 6 possible batch operation that can be in progress theoretically). For sync API the right thing to do it to create a new cq for each call  (theoretically you could recycle existing cq's for new calls once the previous call finishes, but that's more trouble than it's worth).\n\nhttp://www.grpc.io/grpc/core/grpc_8h.html#a7fa47963513b9ce50ca4006b9db94c5e\n\nRegarding the grpc_server_register_completion_queue question:\n\nI think you only need to call that one for\n1. completion queue that you will use to receive server shutdown notification\n2. completion queue that you will use to request new calls (e.g. from that completion queue you will receive a notification about a new incoming call and all the other operations for that call you can handle on a separate per-call completion queue that you don't need to register with the server).\n1. and 2. can be the same cq.\n\nhttp://www.grpc.io/grpc/core/grpc_8h.html#a098116a78dbf2f635a9934be014d2bd8\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/220868820",
    "html_url": "https://github.com/grpc/grpc/pull/6667#issuecomment-220868820",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6667",
    "id": 220868820,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDg2ODgyMA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-23T01:13:33Z",
    "updated_at": "2016-05-23T01:13:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Is ruby also doing pluck for requesting incoming calls?\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/220897771",
    "html_url": "https://github.com/grpc/grpc/pull/6667#issuecomment-220897771",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6667",
    "id": 220897771,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDg5Nzc3MQ==",
    "user": {
      "login": "kpayson64",
      "id": 18316330,
      "node_id": "MDQ6VXNlcjE4MzE2MzMw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18316330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kpayson64",
      "html_url": "https://github.com/kpayson64",
      "followers_url": "https://api.github.com/users/kpayson64/followers",
      "following_url": "https://api.github.com/users/kpayson64/following{/other_user}",
      "gists_url": "https://api.github.com/users/kpayson64/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kpayson64/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kpayson64/subscriptions",
      "organizations_url": "https://api.github.com/users/kpayson64/orgs",
      "repos_url": "https://api.github.com/users/kpayson64/repos",
      "events_url": "https://api.github.com/users/kpayson64/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kpayson64/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-23T06:34:02Z",
    "updated_at": "2016-05-23T06:34:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jtattermusch \n1.  Thanks for the pointers.  I think in this case it makes sense to attach the completion queue lifecycle to the ActiveCall life cycle for both servers and clients, which will let us simplify the API a bit.\n1. Yes the ruby server performs a `grpc_server_request_call()` followed by a pluck.\n   https://github.com/grpc/grpc/blob/master/src/ruby/ext/grpc/rb_server.c#L234 \n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/220898183",
    "html_url": "https://github.com/grpc/grpc/pull/6667#issuecomment-220898183",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6667",
    "id": 220898183,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDg5ODE4Mw==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-23T06:37:17Z",
    "updated_at": "2016-05-23T06:37:17Z",
    "author_association": "MEMBER",
    "body": "Re plucking new calls: let's file a bug at least and not do that. It'll\nfall apart the first time someone has more than six methods... or we need\nto find a way to make plucking scale (which would be a nice paper for\nsomeone).\n\nOn Sun, May 22, 2016, 11:34 PM kpayson64 notifications@github.com wrote:\n\n> @jtattermusch https://github.com/jtattermusch\n> 1. Thanks for the pointers. I think in this case it makes sense to attach\n> the completion queue lifecycle to the ActiveCall life cycle for both\n> servers and clients, which will let us simplify the API a bit.\n> 1. Yes the ruby server performs a grpc_server_request_call() followed\n>    by a pluck.\n>    https://github.com/grpc/grpc/blob/master/src/ruby/ext/grpc/rb_server.c#L234\n> \n> —\n> You are receiving this because you were mentioned.\n> \n> Reply to this email directly or view it on GitHub\n> https://github.com/grpc/grpc/pull/6667#issuecomment-220897771\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/220982586",
    "html_url": "https://github.com/grpc/grpc/pull/6667#issuecomment-220982586",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6667",
    "id": 220982586,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDk4MjU4Ng==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-23T13:38:27Z",
    "updated_at": "2016-05-23T13:38:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think the pluck for new call is not bound to a specific method (it's not a request_registered_call). But it will fall apart if one tries to have 6 request_call tokens in the completion queue at the same time. \n\nSo yes, we should call cq.next to request new call and then handle them on their own ad-hoc completion queue.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/222731968",
    "html_url": "https://github.com/grpc/grpc/pull/6667#issuecomment-222731968",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6667",
    "id": 222731968,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjczMTk2OA==",
    "user": {
      "login": "kpayson64",
      "id": 18316330,
      "node_id": "MDQ6VXNlcjE4MzE2MzMw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18316330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kpayson64",
      "html_url": "https://github.com/kpayson64",
      "followers_url": "https://api.github.com/users/kpayson64/followers",
      "following_url": "https://api.github.com/users/kpayson64/following{/other_user}",
      "gists_url": "https://api.github.com/users/kpayson64/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kpayson64/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kpayson64/subscriptions",
      "organizations_url": "https://api.github.com/users/kpayson64/orgs",
      "repos_url": "https://api.github.com/users/kpayson64/repos",
      "events_url": "https://api.github.com/users/kpayson64/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kpayson64/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-31T15:50:01Z",
    "updated_at": "2016-05-31T15:50:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "This latest commit fixes 1 completion queue per Active call on both server and client side.  \n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/222778282",
    "html_url": "https://github.com/grpc/grpc/pull/6667#issuecomment-222778282",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6667",
    "id": 222778282,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjc3ODI4Mg==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-31T18:30:40Z",
    "updated_at": "2016-05-31T18:30:40Z",
    "author_association": "MEMBER",
    "body": "It looks like the Ruby opt test segfaulted at some point in the rpc_server_spec tests. One thing you should probably verify is that no operations can ever be made on a call after that call's underlying wrapper object is destroyed.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/222861856",
    "html_url": "https://github.com/grpc/grpc/pull/6667#issuecomment-222861856",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6667",
    "id": 222861856,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjg2MTg1Ng==",
    "user": {
      "login": "kpayson64",
      "id": 18316330,
      "node_id": "MDQ6VXNlcjE4MzE2MzMw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18316330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kpayson64",
      "html_url": "https://github.com/kpayson64",
      "followers_url": "https://api.github.com/users/kpayson64/followers",
      "following_url": "https://api.github.com/users/kpayson64/following{/other_user}",
      "gists_url": "https://api.github.com/users/kpayson64/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kpayson64/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kpayson64/subscriptions",
      "organizations_url": "https://api.github.com/users/kpayson64/orgs",
      "repos_url": "https://api.github.com/users/kpayson64/repos",
      "events_url": "https://api.github.com/users/kpayson64/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kpayson64/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-01T00:38:18Z",
    "updated_at": "2016-06-01T00:38:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "Reran the build, but here is the failed build for our records:\nhttps://grpc-testing.appspot.com/job/gRPC_pull_requests/9404/\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/223119135",
    "html_url": "https://github.com/grpc/grpc/pull/6667#issuecomment-223119135",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6667",
    "id": 223119135,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzExOTEzNQ==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-01T20:45:39Z",
    "updated_at": "2016-06-01T20:45:39Z",
    "author_association": "MEMBER",
    "body": "OK, I'm going to say LGTM. This fixes a major issue, and we can figure out the flake later.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/223126583",
    "html_url": "https://github.com/grpc/grpc/pull/6667#issuecomment-223126583",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6667",
    "id": 223126583,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzEyNjU4Mw==",
    "user": {
      "login": "kpayson64",
      "id": 18316330,
      "node_id": "MDQ6VXNlcjE4MzE2MzMw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18316330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kpayson64",
      "html_url": "https://github.com/kpayson64",
      "followers_url": "https://api.github.com/users/kpayson64/followers",
      "following_url": "https://api.github.com/users/kpayson64/following{/other_user}",
      "gists_url": "https://api.github.com/users/kpayson64/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kpayson64/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kpayson64/subscriptions",
      "organizations_url": "https://api.github.com/users/kpayson64/orgs",
      "repos_url": "https://api.github.com/users/kpayson64/repos",
      "events_url": "https://api.github.com/users/kpayson64/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kpayson64/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-01T21:13:33Z",
    "updated_at": "2016-06-01T21:13:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've added null checks on all the `GRPC::Core::Call` external methods.  If this issue reappears and is actually caused by using a closed call, we should get a ruby exception instead of a segmentation fault.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/223152275",
    "html_url": "https://github.com/grpc/grpc/pull/6667#issuecomment-223152275",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6667",
    "id": 223152275,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzE1MjI3NQ==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-01T23:13:06Z",
    "updated_at": "2016-06-01T23:13:06Z",
    "author_association": "MEMBER",
    "body": "OK, all of the relevant tests passed.\n"
  }
]
