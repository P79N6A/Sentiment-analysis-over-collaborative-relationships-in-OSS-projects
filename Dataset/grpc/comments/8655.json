[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/258995323",
    "html_url": "https://github.com/grpc/grpc/issues/8655#issuecomment-258995323",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8655",
    "id": 258995323,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODk5NTMyMw==",
    "user": {
      "login": "soltanmm-google",
      "id": 21180148,
      "node_id": "MDQ6VXNlcjIxMTgwMTQ4",
      "avatar_url": "https://avatars2.githubusercontent.com/u/21180148?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/soltanmm-google",
      "html_url": "https://github.com/soltanmm-google",
      "followers_url": "https://api.github.com/users/soltanmm-google/followers",
      "following_url": "https://api.github.com/users/soltanmm-google/following{/other_user}",
      "gists_url": "https://api.github.com/users/soltanmm-google/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/soltanmm-google/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/soltanmm-google/subscriptions",
      "organizations_url": "https://api.github.com/users/soltanmm-google/orgs",
      "repos_url": "https://api.github.com/users/soltanmm-google/repos",
      "events_url": "https://api.github.com/users/soltanmm-google/events{/privacy}",
      "received_events_url": "https://api.github.com/users/soltanmm-google/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-07T23:19:16Z",
    "updated_at": "2016-11-07T23:19:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "If I'm combo-remembering/reading-the-code right, you're going to want to call the [`future()`](https://github.com/grpc/grpc/blob/v1.0.1/src/python/grpcio_tests/tests/protoc_plugin/_python_plugin_test.py#L275) method on your stub invocation to get a [`grpc.Call`](https://github.com/grpc/grpc/blob/v1.0.1/src/python/grpcio/grpc/__init__.py#L305) object back. That object should then provide you the metadata for non-streaming calls.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/260295918",
    "html_url": "https://github.com/grpc/grpc/issues/8655#issuecomment-260295918",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8655",
    "id": 260295918,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDI5NTkxOA==",
    "user": {
      "login": "Lars-H",
      "id": 15857484,
      "node_id": "MDQ6VXNlcjE1ODU3NDg0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/15857484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Lars-H",
      "html_url": "https://github.com/Lars-H",
      "followers_url": "https://api.github.com/users/Lars-H/followers",
      "following_url": "https://api.github.com/users/Lars-H/following{/other_user}",
      "gists_url": "https://api.github.com/users/Lars-H/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Lars-H/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Lars-H/subscriptions",
      "organizations_url": "https://api.github.com/users/Lars-H/orgs",
      "repos_url": "https://api.github.com/users/Lars-H/repos",
      "events_url": "https://api.github.com/users/Lars-H/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Lars-H/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-14T10:08:48Z",
    "updated_at": "2016-11-14T10:08:48Z",
    "author_association": "NONE",
    "body": "Hi,\nthanks! This works. The `future()` method returns a `grpc._channel._Rendezvous` object, from which I can then call `initial_metadata()`.\n"
  }
]
