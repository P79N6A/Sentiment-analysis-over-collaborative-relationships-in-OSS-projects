[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/295491775",
    "html_url": "https://github.com/grpc/grpc/issues/10701#issuecomment-295491775",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10701",
    "id": 295491775,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NTQ5MTc3NQ==",
    "user": {
      "login": "wisotzky",
      "id": 10410757,
      "node_id": "MDQ6VXNlcjEwNDEwNzU3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10410757?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wisotzky",
      "html_url": "https://github.com/wisotzky",
      "followers_url": "https://api.github.com/users/wisotzky/followers",
      "following_url": "https://api.github.com/users/wisotzky/following{/other_user}",
      "gists_url": "https://api.github.com/users/wisotzky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wisotzky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wisotzky/subscriptions",
      "organizations_url": "https://api.github.com/users/wisotzky/orgs",
      "repos_url": "https://api.github.com/users/wisotzky/repos",
      "events_url": "https://api.github.com/users/wisotzky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wisotzky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-19T23:29:52Z",
    "updated_at": "2017-04-19T23:29:52Z",
    "author_association": "NONE",
    "body": "Items 2) and 3) are fixed now:\r\n2. Using channel option \"grpc.ssl_target_name_override\"\r\n3. Use os.environ[\"GRPC_SSL_CIPHER_SUITES\"] = \"xxxxx\"\r\n\r\nAnyhow, I did not yet found a solution for 1) and 4). Interesting enough, even if I change the environment using \"os.environ\" gRPC logging is not getting enabled. Python code:\r\n        os.environ[\"GRPC_TRACE\"] = \"all\"\r\n        os.environ[\"GRPC_VERBOSITY\"] = \"DEBUG\"\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/295659061",
    "html_url": "https://github.com/grpc/grpc/issues/10701#issuecomment-295659061",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10701",
    "id": 295659061,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NTY1OTA2MQ==",
    "user": {
      "login": "wisotzky",
      "id": 10410757,
      "node_id": "MDQ6VXNlcjEwNDEwNzU3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10410757?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wisotzky",
      "html_url": "https://github.com/wisotzky",
      "followers_url": "https://api.github.com/users/wisotzky/followers",
      "following_url": "https://api.github.com/users/wisotzky/following{/other_user}",
      "gists_url": "https://api.github.com/users/wisotzky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wisotzky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wisotzky/subscriptions",
      "organizations_url": "https://api.github.com/users/wisotzky/orgs",
      "repos_url": "https://api.github.com/users/wisotzky/repos",
      "events_url": "https://api.github.com/users/wisotzky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wisotzky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-20T09:54:00Z",
    "updated_at": "2017-04-20T09:54:00Z",
    "author_association": "NONE",
    "body": "What I am actually looking for, is an equivalent for the following python code:\r\n\r\n```\r\nimport ssl\r\ncontext = ssl.SSLContext(ssl.PROTOCOL_SSLv23)\r\ncontext.options |= ssl.OP_NO_SSLv2\r\ncontext.options |= ssl.OP_NO_SSLv3\r\ncontext.options |= ssl.OP_NO_COMPRESSION\r\ncontext.set_ciphers(\"AES128\")\r\n\r\nif secure:\r\n  context.verify_mode = ssl.CERT_REQUIRED\r\n  context.check_hostname = True\r\nelse:\r\n  context.verify_mode = ssl.CERT_NONE\r\n  context.check_hostname = False\r\n```\r\n\r\nFor me it seems, we don't have native access to those SSL/TLS related objects from python, as the python module for grpc is using the native C library as backend. Therefore potentially the answer is, to use the \"grpc.socket_mutator\" for this. Anyhow, I haven't found any example on how to use the socket_mutator - and even unclear on how to provide GRPC_ARG_POINTER from python."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/295660571",
    "html_url": "https://github.com/grpc/grpc/issues/10701#issuecomment-295660571",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10701",
    "id": 295660571,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NTY2MDU3MQ==",
    "user": {
      "login": "wisotzky",
      "id": 10410757,
      "node_id": "MDQ6VXNlcjEwNDEwNzU3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10410757?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wisotzky",
      "html_url": "https://github.com/wisotzky",
      "followers_url": "https://api.github.com/users/wisotzky/followers",
      "following_url": "https://api.github.com/users/wisotzky/following{/other_user}",
      "gists_url": "https://api.github.com/users/wisotzky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wisotzky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wisotzky/subscriptions",
      "organizations_url": "https://api.github.com/users/wisotzky/orgs",
      "repos_url": "https://api.github.com/users/wisotzky/repos",
      "events_url": "https://api.github.com/users/wisotzky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wisotzky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-20T09:58:13Z",
    "updated_at": "2017-04-20T09:58:13Z",
    "author_association": "NONE",
    "body": "Beside of the \"GO\" example mentioned in my original description, the GRPC documentation contains a reference on [how to do this in JAVA](http://www.grpc.io/docs/guides/auth.html#with-server-authentication-ssltls-4):\r\n\r\n> If the issuing certificate authority is not known to the client then a properly configured SslContext or SSLSocketFactory should be provided to the NettyChannelBuilder or OkHttpChannelBuilder, respectively.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/295665327",
    "html_url": "https://github.com/grpc/grpc/issues/10701#issuecomment-295665327",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10701",
    "id": 295665327,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NTY2NTMyNw==",
    "user": {
      "login": "wisotzky",
      "id": 10410757,
      "node_id": "MDQ6VXNlcjEwNDEwNzU3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10410757?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wisotzky",
      "html_url": "https://github.com/wisotzky",
      "followers_url": "https://api.github.com/users/wisotzky/followers",
      "following_url": "https://api.github.com/users/wisotzky/following{/other_user}",
      "gists_url": "https://api.github.com/users/wisotzky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wisotzky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wisotzky/subscriptions",
      "organizations_url": "https://api.github.com/users/wisotzky/orgs",
      "repos_url": "https://api.github.com/users/wisotzky/repos",
      "events_url": "https://api.github.com/users/wisotzky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wisotzky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-20T10:10:16Z",
    "updated_at": "2017-04-20T10:10:16Z",
    "author_association": "NONE",
    "body": "In consequence, if there is no ability to provide those SSL options using python today, I would ask to add the following to the next GRPC maintenance release:\r\n\r\n1. Extend [Environment Options](https://github.com/grpc/grpc/blob/master/doc/environment_variables.md) for GRPC Clients:\r\n```\r\nGRPC_SSL_CERT_REQUIRED = True | False\r\nGRPC_SSL_CHECK_HOSTNAME = True | False\r\n```\r\n\r\n2. Extend [GRPC Channel Options](http://www.grpc.io/grpc/core/group__grpc__arg__keys.html):\r\n```\r\ngrpc.cert_required = 0 | 1\r\ngrpc.check_hostname = 0 | 1\r\ngrpc.cipher_suite = \"<string>\"\r\n````\r\n\r\n3. Extend [GRPC Auth Guide](https://github.com/grpc/grpc.github.io/blob/master/docs/guides/auth.md):\r\nAdd info, how to set TLS options in python.\r\n\r\n4. Add API to enable GRPC logging from python\r\n\r\n5. Improve logging and error codes\r\nFor example if cipher suites do not match between server and client"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/297553550",
    "html_url": "https://github.com/grpc/grpc/issues/10701#issuecomment-297553550",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10701",
    "id": 297553550,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzU1MzU1MA==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-26T21:58:36Z",
    "updated_at": "2017-04-26T21:58:36Z",
    "author_association": "MEMBER",
    "body": "Setting `GRPC_TRACE` and `GRPC_VERBOSITY` should certainly work. Have you tried rather than setting them from inside your python code, setting them when you invoke the Python interpreter?\r\n\r\n@jboeuf: what do you think of the security feature requests here?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/297607439",
    "html_url": "https://github.com/grpc/grpc/issues/10701#issuecomment-297607439",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10701",
    "id": 297607439,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzYwNzQzOQ==",
    "user": {
      "login": "jboeuf",
      "id": 6262765,
      "node_id": "MDQ6VXNlcjYyNjI3NjU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6262765?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jboeuf",
      "html_url": "https://github.com/jboeuf",
      "followers_url": "https://api.github.com/users/jboeuf/followers",
      "following_url": "https://api.github.com/users/jboeuf/following{/other_user}",
      "gists_url": "https://api.github.com/users/jboeuf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jboeuf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jboeuf/subscriptions",
      "organizations_url": "https://api.github.com/users/jboeuf/orgs",
      "repos_url": "https://api.github.com/users/jboeuf/repos",
      "events_url": "https://api.github.com/users/jboeuf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jboeuf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-27T04:18:10Z",
    "updated_at": "2017-04-27T04:18:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sorry @wisotzky but I'm very much not in favor of adding these features which degrade security and provide our users more ways to shoot themselves in the foot. In particular, I will not approve of an option that does \"InsecureSkipVerify\" as experience has shown me that these types of features are triggered in test environments because it's practical and then shipped to prod because everyone forgets about them.\r\n\r\nOn the cipher suite bit, gRPC/HTTP2/TLS stack must support the TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 cipher suite as per http://httpwg.org/specs/rfc7540.html#rfc.section.9.2.2.\r\nThe env var trick is mostly for users who want better cipher suites which would be preferred than that one but I understand the potential abuse for this which is unfortunate.\r\n\r\nRegarding debugging, this is more of a gRPC request than a security one. It looks like the core `grpc_tracer_set_enabled` function would make it easier to be controllable directly with python (or any wrapped languages). @ctiller do you agree with that?\r\n\r\n\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/297657341",
    "html_url": "https://github.com/grpc/grpc/issues/10701#issuecomment-297657341",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10701",
    "id": 297657341,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzY1NzM0MQ==",
    "user": {
      "login": "wisotzky",
      "id": 10410757,
      "node_id": "MDQ6VXNlcjEwNDEwNzU3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10410757?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wisotzky",
      "html_url": "https://github.com/wisotzky",
      "followers_url": "https://api.github.com/users/wisotzky/followers",
      "following_url": "https://api.github.com/users/wisotzky/following{/other_user}",
      "gists_url": "https://api.github.com/users/wisotzky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wisotzky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wisotzky/subscriptions",
      "organizations_url": "https://api.github.com/users/wisotzky/orgs",
      "repos_url": "https://api.github.com/users/wisotzky/repos",
      "events_url": "https://api.github.com/users/wisotzky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wisotzky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-27T09:05:52Z",
    "updated_at": "2017-04-27T09:05:52Z",
    "author_association": "NONE",
    "body": "@jboeuf, you've indicated - having the options (1) not to validate the server certificate against the CA root certificate and (2) not to validate the subjectAltName/CN against the server hostname/ip-address should only be used lab/testing. But I would add \"during development\" and \"for trouble-shooting purposes\" as other potential applications.\r\n\r\nSaying this, I am NOT convinced that gRPC should dictate how application MUST implement security features, while I am okay, that gRPC enforces security by default. If you want to write an application which enforces security - developers should just use default settings, and they are done. If you want to write a validation/troubleshooting tool or provide those options to a more sophisticated application, I want to have all the options. Please remind, that most web-browser allow you to accept self-signed certificates - so unclear, why this should not be possible for web-applications."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/297659025",
    "html_url": "https://github.com/grpc/grpc/issues/10701#issuecomment-297659025",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10701",
    "id": 297659025,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzY1OTAyNQ==",
    "user": {
      "login": "wisotzky",
      "id": 10410757,
      "node_id": "MDQ6VXNlcjEwNDEwNzU3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10410757?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wisotzky",
      "html_url": "https://github.com/wisotzky",
      "followers_url": "https://api.github.com/users/wisotzky/followers",
      "following_url": "https://api.github.com/users/wisotzky/following{/other_user}",
      "gists_url": "https://api.github.com/users/wisotzky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wisotzky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wisotzky/subscriptions",
      "organizations_url": "https://api.github.com/users/wisotzky/orgs",
      "repos_url": "https://api.github.com/users/wisotzky/repos",
      "events_url": "https://api.github.com/users/wisotzky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wisotzky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-27T09:12:35Z",
    "updated_at": "2017-04-27T09:12:35Z",
    "author_association": "NONE",
    "body": "@jboeuf, about tweaking cipher suites - I would not consider this as \"abuse\". Depending on the server implementation, there are some HTTP/2 over TLS 1.2 stacks - which simply do not support the TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 cipher suite. Even this is violating rfc7540 there are some environments where this cannot easily be changed (for example: java8 does not support ECDHE cipher suites)."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/297692011",
    "html_url": "https://github.com/grpc/grpc/issues/10701#issuecomment-297692011",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10701",
    "id": 297692011,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzY5MjAxMQ==",
    "user": {
      "login": "wisotzky",
      "id": 10410757,
      "node_id": "MDQ6VXNlcjEwNDEwNzU3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10410757?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wisotzky",
      "html_url": "https://github.com/wisotzky",
      "followers_url": "https://api.github.com/users/wisotzky/followers",
      "following_url": "https://api.github.com/users/wisotzky/following{/other_user}",
      "gists_url": "https://api.github.com/users/wisotzky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wisotzky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wisotzky/subscriptions",
      "organizations_url": "https://api.github.com/users/wisotzky/orgs",
      "repos_url": "https://api.github.com/users/wisotzky/repos",
      "events_url": "https://api.github.com/users/wisotzky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wisotzky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-27T11:52:02Z",
    "updated_at": "2017-04-27T11:52:02Z",
    "author_association": "NONE",
    "body": "@nathanielmanistaatgoogle @jboeuf @ctiller \r\nI do not like change environment variables from python to manipulate parameters like client cipher-suites and logging/debugging. Even if I change the environment from python it is unclear, if those changes make it to become active. In my early testing, I've had sometimes the feeling that environment variables must be set before importing grpc - else those changes are simply ignored.\r\n\r\nThe preferred solution is clearly to use the environment to define/overwrite defaults - but allow the actual process to overwrite any of this as needed. Also keep in mind, that sometimes processes run over hours/days and you might want to increase/decrease log-levels or change other settings during run time. This is basically impossible, if those values need to be set before the library is imported.\r\n\r\nAlso I would prefer if grpc/tls logging would use a wrapper, to use the standard python logger for this. Some people including me prefer to write debug logs into files and influence the log-format. It is rather unclear how to do this with grpc, as everything is just dumped to the terminal session in its predefined format."
  }
]
