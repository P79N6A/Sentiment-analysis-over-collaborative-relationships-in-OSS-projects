[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/465301030",
    "html_url": "https://github.com/grpc/grpc/issues/18083#issuecomment-465301030",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/18083",
    "id": 465301030,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTMwMTAzMA==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-19T20:40:38Z",
    "updated_at": "2019-02-19T20:40:38Z",
    "author_association": "MEMBER",
    "body": "Cc @nicolasnoble @jtattermusch : I discussed this offline with @equinox1993 and the reporter is planning to send in a PR to fix this problem . This issue is interesting since this is a user case wanting to use clang with Windows. Is this something that we need to support in our CI?\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/465365044",
    "html_url": "https://github.com/grpc/grpc/issues/18083#issuecomment-465365044",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/18083",
    "id": 465365044,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTM2NTA0NA==",
    "user": {
      "login": "equinox1993",
      "id": 5727628,
      "node_id": "MDQ6VXNlcjU3Mjc2Mjg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5727628?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/equinox1993",
      "html_url": "https://github.com/equinox1993",
      "followers_url": "https://api.github.com/users/equinox1993/followers",
      "following_url": "https://api.github.com/users/equinox1993/following{/other_user}",
      "gists_url": "https://api.github.com/users/equinox1993/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/equinox1993/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/equinox1993/subscriptions",
      "organizations_url": "https://api.github.com/users/equinox1993/orgs",
      "repos_url": "https://api.github.com/users/equinox1993/repos",
      "events_url": "https://api.github.com/users/equinox1993/events{/privacy}",
      "received_events_url": "https://api.github.com/users/equinox1993/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-20T00:13:03Z",
    "updated_at": "2019-02-20T00:13:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "FYI I seem to be able to run `run_tests.py` with clang-cl. Here are what I did:\r\n\r\n1. [Install LLVM](http://releases.llvm.org/download.html)\r\n1. Install the [LLVM compiler toolchain](https://marketplace.visualstudio.com/items?itemName=LLVMExtensions.llvm-toolchain) on visual studio\r\n1. Modify `pre_build_cmake.bat` to add `-T LLVM` to the cmake flag.\r\n1. Run `python tools/run_tests/run_tests.py -l c++ --build_only`\r\n\r\nThen I can reproduce the the error I saw when building on Chromium:\r\n\r\n```\r\n\"C:\\src\\grpc\\cmake\\build\\buildtests_cxx.vcxproj\" (default target) (1) ->\r\n\"C:\\src\\grpc\\cmake\\build\\address_sorting_test.vcxproj\" (default target) (3) ->\r\n\"C:\\src\\grpc\\cmake\\build\\gpr.vcxproj\" (default target) (45) ->\r\n(ClCompile target) ->\r\n  C:\\src\\grpc\\src\\core\\lib\\gprpp\\thd_windows.cc(74): error : no matching function for call to 'CreateThread' [C:\\src\\grpc\\cmake\\build\\gpr.vcxproj]\r\n```\r\n\r\nI'm also seeing some other warnings/errors that I didn't see on Chromium. Maybe Chromium has suppressed some warnings for third party code and the GN build file I wrote didn't build some of the files that failed to build."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/465376538",
    "html_url": "https://github.com/grpc/grpc/issues/18083#issuecomment-465376538",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/18083",
    "id": 465376538,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTM3NjUzOA==",
    "user": {
      "login": "nicolasnoble",
      "id": 7281574,
      "node_id": "MDQ6VXNlcjcyODE1NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7281574?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nicolasnoble",
      "html_url": "https://github.com/nicolasnoble",
      "followers_url": "https://api.github.com/users/nicolasnoble/followers",
      "following_url": "https://api.github.com/users/nicolasnoble/following{/other_user}",
      "gists_url": "https://api.github.com/users/nicolasnoble/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nicolasnoble/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nicolasnoble/subscriptions",
      "organizations_url": "https://api.github.com/users/nicolasnoble/orgs",
      "repos_url": "https://api.github.com/users/nicolasnoble/repos",
      "events_url": "https://api.github.com/users/nicolasnoble/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nicolasnoble/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-20T01:06:39Z",
    "updated_at": "2019-02-20T01:06:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm not really eager to add yet another blocking edge case scenario in our PRs, no. I would personally deem that only Visual Studio is our main supported compiler, and that other cases is supported on best effort, as we do with many of our edge case scenarios.\r\n\r\nIt is true that Visual Studio now has added clang/llvm support so that people can now easily build their code using clang/llvm using Visual Studio directly, but the installation procedure is still painful, and I'm still not seeing indicators this usage is more prevalent than Microsoft's compiler in general.\r\n\r\nBottom line is: we can't do first-class compiler/platform support for every single combinations out there. \r\n\r\nThat being said, since this is about another Google product, I'm open to discussion."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/465381730",
    "html_url": "https://github.com/grpc/grpc/issues/18083#issuecomment-465381730",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/18083",
    "id": 465381730,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTM4MTczMA==",
    "user": {
      "login": "equinox1993",
      "id": 5727628,
      "node_id": "MDQ6VXNlcjU3Mjc2Mjg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5727628?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/equinox1993",
      "html_url": "https://github.com/equinox1993",
      "followers_url": "https://api.github.com/users/equinox1993/followers",
      "following_url": "https://api.github.com/users/equinox1993/following{/other_user}",
      "gists_url": "https://api.github.com/users/equinox1993/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/equinox1993/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/equinox1993/subscriptions",
      "organizations_url": "https://api.github.com/users/equinox1993/orgs",
      "repos_url": "https://api.github.com/users/equinox1993/repos",
      "events_url": "https://api.github.com/users/equinox1993/events{/privacy}",
      "received_events_url": "https://api.github.com/users/equinox1993/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-20T01:29:16Z",
    "updated_at": "2019-02-20T01:29:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "We don't plan to roll dependency on gRPC very often unless there is blocking bug or security concern, so I think it's fine not to run CI for clang+Windows. I'm happy to fix bug on gRPC if it blocks development on Chromium.\r\n\r\nAlso I think it would be great if `run_tests.py` has an option to build on clang+Windows. This can be done by simply adding a `-T LLVM` flag to the cmake parameter in addition to the existing `-G \"Visual Studio 14 2015\"` flag. This can make testing easier for us."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/465383470",
    "html_url": "https://github.com/grpc/grpc/issues/18083#issuecomment-465383470",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/18083",
    "id": 465383470,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTM4MzQ3MA==",
    "user": {
      "login": "nicolasnoble",
      "id": 7281574,
      "node_id": "MDQ6VXNlcjcyODE1NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7281574?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nicolasnoble",
      "html_url": "https://github.com/nicolasnoble",
      "followers_url": "https://api.github.com/users/nicolasnoble/followers",
      "following_url": "https://api.github.com/users/nicolasnoble/following{/other_user}",
      "gists_url": "https://api.github.com/users/nicolasnoble/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nicolasnoble/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nicolasnoble/subscriptions",
      "organizations_url": "https://api.github.com/users/nicolasnoble/orgs",
      "repos_url": "https://api.github.com/users/nicolasnoble/repos",
      "events_url": "https://api.github.com/users/nicolasnoble/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nicolasnoble/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-20T01:37:10Z",
    "updated_at": "2019-02-20T01:37:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah, that last part is fine and good to have. I'd like to point out that we'd rather move towards bazel as a test framework however. If this can be achieved using bazel instead, I'd be even more supportive. "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/465385537",
    "html_url": "https://github.com/grpc/grpc/issues/18083#issuecomment-465385537",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/18083",
    "id": 465385537,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTM4NTUzNw==",
    "user": {
      "login": "equinox1993",
      "id": 5727628,
      "node_id": "MDQ6VXNlcjU3Mjc2Mjg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5727628?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/equinox1993",
      "html_url": "https://github.com/equinox1993",
      "followers_url": "https://api.github.com/users/equinox1993/followers",
      "following_url": "https://api.github.com/users/equinox1993/following{/other_user}",
      "gists_url": "https://api.github.com/users/equinox1993/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/equinox1993/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/equinox1993/subscriptions",
      "organizations_url": "https://api.github.com/users/equinox1993/orgs",
      "repos_url": "https://api.github.com/users/equinox1993/repos",
      "events_url": "https://api.github.com/users/equinox1993/events{/privacy}",
      "received_events_url": "https://api.github.com/users/equinox1993/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-20T01:46:25Z",
    "updated_at": "2019-02-20T01:46:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "Looks like this PR makes it possible to use clang-cl on Bazel by setting a `USE_CLANG_CL` environment variable: https://github.com/bazelbuild/bazel/pull/6553\r\n\r\nSo we probably don't need to do anything on gRPC to support that :)"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/465534381",
    "html_url": "https://github.com/grpc/grpc/issues/18083#issuecomment-465534381",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/18083",
    "id": 465534381,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTUzNDM4MQ==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-20T11:21:41Z",
    "updated_at": "2019-02-20T11:21:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "AFAIK our only supported compiler on Windows is MSVC. Other compilers are supported on best effort basis (and we don't have the capacity to test them continuously and monitor the test results).\r\nWe're fine with accepting a one-time fix for your problem, but I don't want to add more stuff to run_tests.py."
  }
]
