[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/104712093",
    "html_url": "https://github.com/grpc/grpc/issues/1722#issuecomment-104712093",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/1722",
    "id": 104712093,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNDcxMjA5Mw==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-22T16:53:35Z",
    "updated_at": "2015-05-22T16:53:35Z",
    "author_association": "MEMBER",
    "body": "This is worrying.\n\nOn Fri, May 22, 2015 at 9:40 AM Nicolas Noble notifications@github.com\nwrote:\n\n> D0522 03:44:51.999410080    4816 test_config.c:52] test slowdown: machine=1.000000 build=1.000000 total=1.000000\n> [==========] Running 22 tests from 1 test case.\n> [----------] Global test environment set-up.\n> [----------] 22 tests from End2endTest\n> [ RUN      ] End2endTest.SimpleRpc\n> D0522 03:44:52.600553122    4816 iomgr.c:114] Waiting for 1 iomgr objects to be destroyed and executing final callbacks\n> [       OK ] End2endTest.SimpleRpc (701 ms)\n> [ RUN      ] End2endTest.MultipleRpcs\n> D0522 03:44:53.601085423    4816 iomgr.c:114] Waiting for 1 iomgr objects to be destroyed and executing final callbacks\n> [       OK ] End2endTest.MultipleRpcs (1000 ms)\n> [ RUN      ] End2endTest.RpcDeadlineExpires\n> D0522 03:44:53.901175167    4816 iomgr.c:114] Waiting for 1 iomgr objects to be destroyed and executing final callbacks\n> E0522 03:44:54.001226886    4889 tcp_client_posix.c:149] socket error: 104\n> D0522 03:44:54.001324788    4816 iomgr.c:114] Waiting for 0 iomgr objects to be destroyed and executing final callbacks\n> [       OK ] End2endTest.RpcDeadlineExpires (401 ms)\n> [ RUN      ] End2endTest.RpcLongDeadline\n> D0522 03:44:55.001823456    4816 iomgr.c:114] Waiting for 1 iomgr objects to be destroyed and executing final callbacks\n> [       OK ] End2endTest.RpcLongDeadline (1000 ms)\n> [ RUN      ] End2endTest.EchoDeadline\n> D0522 03:44:56.102438013    4816 iomgr.c:114] Waiting for 2 iomgr objects to be destroyed and executing final callbacks\n> [       OK ] End2endTest.EchoDeadline (1101 ms)\n> [ RUN      ] End2endTest.EchoDeadlineForNoDeadlineRpc\n> D0522 03:44:57.102525348    4816 iomgr.c:114] Waiting for 1 iomgr objects to be destroyed and executing final callbacks\n> [       OK ] End2endTest.EchoDeadlineForNoDeadlineRpc (1000 ms)\n> [ RUN      ] End2endTest.UnimplementedRpc\n> D0522 03:44:58.003133342    4816 iomgr.c:114] Waiting for 1 iomgr objects to be destroyed and executing final callbacks\n> [       OK ] End2endTest.UnimplementedRpc (900 ms)\n> [ RUN      ] End2endTest.RequestStreamOneRequest\n> D0522 03:44:59.017269357    4816 iomgr.c:114] Waiting for 1 iomgr objects to be destroyed and executing final callbacks\n> [       OK ] End2endTest.RequestStreamOneRequest (1014 ms)\n> [ RUN      ] End2endTest.RequestStreamTwoRequests\n> D0522 03:45:00.031926688    4816 iomgr.c:114] Waiting for 1 iomgr objects to be destroyed and executing final callbacks\n> [       OK ] End2endTest.RequestStreamTwoRequests (1015 ms)\n> [ RUN      ] End2endTest.ResponseStream\n> D0522 03:45:01.131882175    4816 iomgr.c:114] Waiting for 2 iomgr objects to be destroyed and executing final callbacks\n> [       OK ] End2endTest.ResponseStream (1100 ms)\n> [ RUN      ] End2endTest.BidiStream\n> I0522 03:45:02.032465765    5419 end2end_test.cc:158] recv msg hello0\n> I0522 03:45:02.032661692    5419 end2end_test.cc:158] recv msg hello1\n> I0522 03:45:02.032809591    5419 end2end_test.cc:158] recv msg hello2\n> D0522 03:45:02.132284065    4816 iomgr.c:114] Waiting for 1 iomgr objects to be destroyed and executing final callbacks\n> [       OK ] End2endTest.BidiStream (1001 ms)\n> [ RUN      ] End2endTest.DiffPackageServices\n> [       OK ] End2endTest.DiffPackageServices (800 ms)\n> [ RUN      ] End2endTest.BadCredentials\n> E0522 03:45:03.033322694    4816 json_token.c:106] Invalid json string\n> E0522 03:45:03.033347137    4816 credentials.c:755] Invalid input for service account credentials creation\n> [       OK ] End2endTest.BadCredentials (401 ms)\n> [ RUN      ] End2endTest.ClientCancelsRpc\n> D0522 03:45:04.434311238    4816 iomgr.c:114] Waiting for 2 iomgr objects to be destroyed and executing final callbacks\n> [       OK ] End2endTest.ClientCancelsRpc (1100 ms)\n> [ RUN      ] End2endTest.ServerCancelsRpc\n> D0522 03:45:05.534562148    4816 iomgr.c:114] Waiting for 1 iomgr objects to be destroyed and executing final callbacks\n> [       OK ] End2endTest.ServerCancelsRpc (1101 ms)\n> [ RUN      ] End2endTest.ClientCancelsRequestStream\n> D0522 03:45:06.635109207    4816 iomgr.c:114] Waiting for 2 iomgr objects to be destroyed and executing final callbacks\n> [       OK ] End2endTest.ClientCancelsRequestStream (1100 ms)\n> [ RUN      ] End2endTest.ClientCancelsResponseStream\n> D0522 03:45:07.735207902    4816 iomgr.c:114] Waiting for 2 iomgr objects to be destroyed and executing final callbacks\n> [       OK ] End2endTest.ClientCancelsResponseStream (1101 ms)\n> [ RUN      ] End2endTest.ClientCancelsBidi\n> I0522 03:45:08.636017295    5881 end2end_test.cc:158] recv msg hello0\n> I0522 03:45:08.636551608    5881 end2end_test.cc:158] recv msg hello1\n> D0522 03:45:08.835890062    4816 iomgr.c:114] Waiting for 2 iomgr objects to be destroyed and executing final callbacks\n> [       OK ] End2endTest.ClientCancelsBidi (1100 ms)\n> [ RUN      ] End2endTest.RpcMaxMessageSize\n> D0522 03:45:09.936381928    4816 iomgr.c:114] Waiting for 2 iomgr objects to be destroyed and executing final callbacks\n> [       OK ] End2endTest.RpcMaxMessageSize (1101 ms)\n> [ RUN      ] End2endTest.SetPerCallCredentials\n> E0522 03:45:10.736659154    5933 metadata.c:564] assertion failed: ctx == elem_ctx\n> FAILED: bins/dbg/end2end_test [ret=-6, pid=4816]\n> \n> Seen only once so far.\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/grpc/grpc/issues/1722.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/104718835",
    "html_url": "https://github.com/grpc/grpc/issues/1722#issuecomment-104718835",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/1722",
    "id": 104718835,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNDcxODgzNQ==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-22T17:18:16Z",
    "updated_at": "2015-05-22T17:18:16Z",
    "author_association": "MEMBER",
    "body": "@jboeuf \nThis also likely warrants a re-architecture of how we handle metadata in credentials.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/104751000",
    "html_url": "https://github.com/grpc/grpc/issues/1722#issuecomment-104751000",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/1722",
    "id": 104751000,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNDc1MTAwMA==",
    "user": {
      "login": "nicolasnoble",
      "id": 7281574,
      "node_id": "MDQ6VXNlcjcyODE1NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7281574?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nicolasnoble",
      "html_url": "https://github.com/nicolasnoble",
      "followers_url": "https://api.github.com/users/nicolasnoble/followers",
      "following_url": "https://api.github.com/users/nicolasnoble/following{/other_user}",
      "gists_url": "https://api.github.com/users/nicolasnoble/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nicolasnoble/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nicolasnoble/subscriptions",
      "organizations_url": "https://api.github.com/users/nicolasnoble/orgs",
      "repos_url": "https://api.github.com/users/nicolasnoble/repos",
      "events_url": "https://api.github.com/users/nicolasnoble/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nicolasnoble/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-22T19:42:16Z",
    "updated_at": "2015-05-22T19:42:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "Got that one 5 times on a 5000 run.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/104754831",
    "html_url": "https://github.com/grpc/grpc/issues/1722#issuecomment-104754831",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/1722",
    "id": 104754831,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNDc1NDgzMQ==",
    "user": {
      "login": "jboeuf",
      "id": 6262765,
      "node_id": "MDQ6VXNlcjYyNjI3NjU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6262765?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jboeuf",
      "html_url": "https://github.com/jboeuf",
      "followers_url": "https://api.github.com/users/jboeuf/followers",
      "following_url": "https://api.github.com/users/jboeuf/following{/other_user}",
      "gists_url": "https://api.github.com/users/jboeuf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jboeuf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jboeuf/subscriptions",
      "organizations_url": "https://api.github.com/users/jboeuf/orgs",
      "repos_url": "https://api.github.com/users/jboeuf/repos",
      "events_url": "https://api.github.com/users/jboeuf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jboeuf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-22T20:01:13Z",
    "updated_at": "2015-05-22T20:01:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK... looks like we're going to have to change something. Craig do you want\nto make a proposal?\n\nOn Fri, May 22, 2015 at 12:42 PM, Nicolas Noble notifications@github.com\nwrote:\n\n> Got that one 5 times on a 5000 run.\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/grpc/grpc/issues/1722#issuecomment-104751000.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/104786063",
    "html_url": "https://github.com/grpc/grpc/issues/1722#issuecomment-104786063",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/1722",
    "id": 104786063,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNDc4NjA2Mw==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-22T22:03:15Z",
    "updated_at": "2015-05-22T22:03:15Z",
    "author_association": "MEMBER",
    "body": "I do... next week when I've got hands to write.\n\nOn Fri, May 22, 2015 at 1:01 PM jboeuf notifications@github.com wrote:\n\n> OK... looks like we're going to have to change something. Craig do you want\n> to make a proposal?\n> \n> On Fri, May 22, 2015 at 12:42 PM, Nicolas Noble notifications@github.com\n> wrote:\n> \n> > Got that one 5 times on a 5000 run.\n> > \n> > â€”\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/grpc/grpc/issues/1722#issuecomment-104751000.\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/grpc/grpc/issues/1722#issuecomment-104754831.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/106108566",
    "html_url": "https://github.com/grpc/grpc/issues/1722#issuecomment-106108566",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/1722",
    "id": 106108566,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNjEwODU2Ng==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-27T23:25:17Z",
    "updated_at": "2015-05-27T23:25:17Z",
    "author_association": "MEMBER",
    "body": "Is this function implementable?:\n\n``` c\ngrpc_creds_are_current_credentials_still_current(creds, some_token_returned_with_metadata_callback)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/106110824",
    "html_url": "https://github.com/grpc/grpc/issues/1722#issuecomment-106110824",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/1722",
    "id": 106110824,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNjExMDgyNA==",
    "user": {
      "login": "jboeuf",
      "id": 6262765,
      "node_id": "MDQ6VXNlcjYyNjI3NjU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6262765?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jboeuf",
      "html_url": "https://github.com/jboeuf",
      "followers_url": "https://api.github.com/users/jboeuf/followers",
      "following_url": "https://api.github.com/users/jboeuf/following{/other_user}",
      "gists_url": "https://api.github.com/users/jboeuf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jboeuf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jboeuf/subscriptions",
      "organizations_url": "https://api.github.com/users/jboeuf/orgs",
      "repos_url": "https://api.github.com/users/jboeuf/repos",
      "events_url": "https://api.github.com/users/jboeuf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jboeuf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-27T23:42:55Z",
    "updated_at": "2015-05-27T23:42:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "what does current mean here? That it is cached and still valid?\n\nOn Wed, May 27, 2015 at 4:25 PM, Craig Tiller notifications@github.com\nwrote:\n\n> Is this function implementable?:\n> \n> grpc_creds_are_current_credentials_still_current(creds, some_token_returned_with_metadata_callback)\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/grpc/grpc/issues/1722#issuecomment-106108566.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/106112356",
    "html_url": "https://github.com/grpc/grpc/issues/1722#issuecomment-106112356",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/1722",
    "id": 106112356,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNjExMjM1Ng==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-27T23:47:38Z",
    "updated_at": "2015-05-27T23:47:38Z",
    "author_association": "MEMBER",
    "body": "Yeah. Trying to determine if the current set of strings needs to be\nrefreshed or not.\n\nMy thought is to:\n- remove mdctx from credentials\n- pass back just a set of strings when a metadata query is made\n- cache the strings as mdelems on the channel data of the auth filter\n- perform a quick check before sending them out for a given request\n\nOn Wed, May 27, 2015 at 4:43 PM jboeuf notifications@github.com wrote:\n\n> what does current mean here? That it is cached and still valid?\n> \n> On Wed, May 27, 2015 at 4:25 PM, Craig Tiller notifications@github.com\n> wrote:\n> \n> > Is this function implementable?:\n> > \n> > grpc_creds_are_current_credentials_still_current(creds,\n> > some_token_returned_with_metadata_callback)\n> > \n> > â€”\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/grpc/grpc/issues/1722#issuecomment-106108566.\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/grpc/grpc/issues/1722#issuecomment-106110824.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/106112894",
    "html_url": "https://github.com/grpc/grpc/issues/1722#issuecomment-106112894",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/1722",
    "id": 106112894,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNjExMjg5NA==",
    "user": {
      "login": "jboeuf",
      "id": 6262765,
      "node_id": "MDQ6VXNlcjYyNjI3NjU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6262765?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jboeuf",
      "html_url": "https://github.com/jboeuf",
      "followers_url": "https://api.github.com/users/jboeuf/followers",
      "following_url": "https://api.github.com/users/jboeuf/following{/other_user}",
      "gists_url": "https://api.github.com/users/jboeuf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jboeuf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jboeuf/subscriptions",
      "organizations_url": "https://api.github.com/users/jboeuf/orgs",
      "repos_url": "https://api.github.com/users/jboeuf/repos",
      "events_url": "https://api.github.com/users/jboeuf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jboeuf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-27T23:51:08Z",
    "updated_at": "2015-05-27T23:51:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "2 thoughts.\n1. Will that work with credentials attached to just a call as well?\n2. why do you need a check before sending them out? The credentials has\n   already done its work at this point.\n\nOn Wed, May 27, 2015 at 4:47 PM, Craig Tiller notifications@github.com\nwrote:\n\n> Yeah. Trying to determine if the current set of strings needs to be\n> refreshed or not.\n> \n> My thought is to:\n> - remove mdctx from credentials\n> - pass back just a set of strings when a metadata query is made\n> - cache the strings as mdelems on the channel data of the auth filter\n> - perform a quick check before sending them out for a given request\n> \n> On Wed, May 27, 2015 at 4:43 PM jboeuf notifications@github.com wrote:\n> \n> > what does current mean here? That it is cached and still valid?\n> > \n> > On Wed, May 27, 2015 at 4:25 PM, Craig Tiller notifications@github.com\n> > wrote:\n> > \n> > > Is this function implementable?:\n> > > \n> > > grpc_creds_are_current_credentials_still_current(creds,\n> > > some_token_returned_with_metadata_callback)\n> > > \n> > > â€”\n> > > Reply to this email directly or view it on GitHub\n> > > https://github.com/grpc/grpc/issues/1722#issuecomment-106108566.\n> > \n> > â€”\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/grpc/grpc/issues/1722#issuecomment-106110824.\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/grpc/grpc/issues/1722#issuecomment-106112356.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/106113963",
    "html_url": "https://github.com/grpc/grpc/issues/1722#issuecomment-106113963",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/1722",
    "id": 106113963,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNjExMzk2Mw==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-27T23:55:33Z",
    "updated_at": "2015-05-27T23:55:33Z",
    "author_association": "MEMBER",
    "body": "So for (1), I think it works just fine, except that we don't cache on the\nchannel.\nAnd agreed for (2), we just need to do the quick check on subsequent\nrequests.\n\nOn Wed, May 27, 2015 at 4:51 PM jboeuf notifications@github.com wrote:\n\n> 2 thoughts.\n> 1. Will that work with credentials attached to just a call as well?\n> 2. why do you need a check before sending them out? The credentials has\n>    already done its work at this point.\n> \n> On Wed, May 27, 2015 at 4:47 PM, Craig Tiller notifications@github.com\n> wrote:\n> \n> > Yeah. Trying to determine if the current set of strings needs to be\n> > refreshed or not.\n> > \n> > My thought is to:\n> > - remove mdctx from credentials\n> > - pass back just a set of strings when a metadata query is made\n> > - cache the strings as mdelems on the channel data of the auth filter\n> > - perform a quick check before sending them out for a given request\n> > \n> > On Wed, May 27, 2015 at 4:43 PM jboeuf notifications@github.com wrote:\n> > \n> > > what does current mean here? That it is cached and still valid?\n> > > \n> > > On Wed, May 27, 2015 at 4:25 PM, Craig Tiller <\n> > > notifications@github.com>\n> > > wrote:\n> > > \n> > > > Is this function implementable?:\n> > > > \n> > > > grpc_creds_are_current_credentials_still_current(creds,\n> > > > some_token_returned_with_metadata_callback)\n> > > > \n> > > > â€”\n> > > > Reply to this email directly or view it on GitHub\n> > > > https://github.com/grpc/grpc/issues/1722#issuecomment-106108566.\n> > > \n> > > â€”\n> > > Reply to this email directly or view it on GitHub\n> > > https://github.com/grpc/grpc/issues/1722#issuecomment-106110824.\n> > \n> > â€”\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/grpc/grpc/issues/1722#issuecomment-106112356.\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/grpc/grpc/issues/1722#issuecomment-106112894.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/106174499",
    "html_url": "https://github.com/grpc/grpc/issues/1722#issuecomment-106174499",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/1722",
    "id": 106174499,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNjE3NDQ5OQ==",
    "user": {
      "login": "jboeuf",
      "id": 6262765,
      "node_id": "MDQ6VXNlcjYyNjI3NjU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6262765?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jboeuf",
      "html_url": "https://github.com/jboeuf",
      "followers_url": "https://api.github.com/users/jboeuf/followers",
      "following_url": "https://api.github.com/users/jboeuf/following{/other_user}",
      "gists_url": "https://api.github.com/users/jboeuf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jboeuf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jboeuf/subscriptions",
      "organizations_url": "https://api.github.com/users/jboeuf/orgs",
      "repos_url": "https://api.github.com/users/jboeuf/repos",
      "events_url": "https://api.github.com/users/jboeuf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jboeuf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-28T05:18:49Z",
    "updated_at": "2015-05-28T05:18:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK. As long as we do 2. outside of the credentials object (on the auth\nfilter for example), I'm ok with it.\n\nOn Wed, May 27, 2015 at 4:55 PM, Craig Tiller notifications@github.com\nwrote:\n\n> So for (1), I think it works just fine, except that we don't cache on the\n> channel.\n> And agreed for (2), we just need to do the quick check on subsequent\n> requests.\n> \n> On Wed, May 27, 2015 at 4:51 PM jboeuf notifications@github.com wrote:\n> \n> > 2 thoughts.\n> > 1. Will that work with credentials attached to just a call as well?\n> > 2. why do you need a check before sending them out? The credentials has\n> >    already done its work at this point.\n> > \n> > On Wed, May 27, 2015 at 4:47 PM, Craig Tiller notifications@github.com\n> > wrote:\n> > \n> > > Yeah. Trying to determine if the current set of strings needs to be\n> > > refreshed or not.\n> > > \n> > > My thought is to:\n> > > - remove mdctx from credentials\n> > > - pass back just a set of strings when a metadata query is made\n> > > - cache the strings as mdelems on the channel data of the auth filter\n> > > - perform a quick check before sending them out for a given request\n> > > \n> > > On Wed, May 27, 2015 at 4:43 PM jboeuf notifications@github.com\n> > > wrote:\n> > > \n> > > > what does current mean here? That it is cached and still valid?\n> > > > \n> > > > On Wed, May 27, 2015 at 4:25 PM, Craig Tiller <\n> > > > notifications@github.com>\n> > > > wrote:\n> > > > \n> > > > > Is this function implementable?:\n> > > > > \n> > > > > grpc_creds_are_current_credentials_still_current(creds,\n> > > > > some_token_returned_with_metadata_callback)\n> > > > > \n> > > > > â€”\n> > > > > Reply to this email directly or view it on GitHub\n> > > > > https://github.com/grpc/grpc/issues/1722#issuecomment-106108566.\n> > > > \n> > > > â€”\n> > > > Reply to this email directly or view it on GitHub\n> > > > https://github.com/grpc/grpc/issues/1722#issuecomment-106110824.\n> > > \n> > > â€”\n> > > Reply to this email directly or view it on GitHub\n> > > https://github.com/grpc/grpc/issues/1722#issuecomment-106112356.\n> > \n> > â€”\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/grpc/grpc/issues/1722#issuecomment-106112894.\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/grpc/grpc/issues/1722#issuecomment-106113963.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/106187954",
    "html_url": "https://github.com/grpc/grpc/issues/1722#issuecomment-106187954",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/1722",
    "id": 106187954,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNjE4Nzk1NA==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-28T05:59:40Z",
    "updated_at": "2015-05-28T05:59:40Z",
    "author_association": "MEMBER",
    "body": "The auth filter should ask the question for sure. I'm not certain whether\nit should be the creds object or something it supplies that answers the\nquestion though. Looking to you for advice.\n\nOn Wed, May 27, 2015, 10:19 PM jboeuf notifications@github.com wrote:\n\n> OK. As long as we do 2. outside of the credentials object (on the auth\n> filter for example), I'm ok with it.\n> \n> On Wed, May 27, 2015 at 4:55 PM, Craig Tiller notifications@github.com\n> wrote:\n> \n> > So for (1), I think it works just fine, except that we don't cache on the\n> > channel.\n> > And agreed for (2), we just need to do the quick check on subsequent\n> > requests.\n> > \n> > On Wed, May 27, 2015 at 4:51 PM jboeuf notifications@github.com wrote:\n> > \n> > > 2 thoughts.\n> > > 1. Will that work with credentials attached to just a call as well?\n> > > 2. why do you need a check before sending them out? The credentials has\n> > >    already done its work at this point.\n> > > \n> > > On Wed, May 27, 2015 at 4:47 PM, Craig Tiller <\n> > > notifications@github.com>\n> > > wrote:\n> > > \n> > > > Yeah. Trying to determine if the current set of strings needs to be\n> > > > refreshed or not.\n> > > > \n> > > > My thought is to:\n> > > > - remove mdctx from credentials\n> > > > - pass back just a set of strings when a metadata query is made\n> > > > - cache the strings as mdelems on the channel data of the auth filter\n> > > > - perform a quick check before sending them out for a given request\n> > > > \n> > > > On Wed, May 27, 2015 at 4:43 PM jboeuf notifications@github.com\n> > > > wrote:\n> > > > \n> > > > > what does current mean here? That it is cached and still valid?\n> > > > > \n> > > > > On Wed, May 27, 2015 at 4:25 PM, Craig Tiller <\n> > > > > notifications@github.com>\n> > > > > wrote:\n> > > > > \n> > > > > > Is this function implementable?:\n> > > > > > \n> > > > > > grpc_creds_are_current_credentials_still_current(creds,\n> > > > > > some_token_returned_with_metadata_callback)\n> > > > > > \n> > > > > > â€”\n> > > > > > Reply to this email directly or view it on GitHub\n> > > > > > <https://github.com/grpc/grpc/issues/1722#issuecomment-106108566\n> > > > > > .\n> > > > > \n> > > > > â€”\n> > > > > Reply to this email directly or view it on GitHub\n> > > > > https://github.com/grpc/grpc/issues/1722#issuecomment-106110824.\n> > > > \n> > > > â€”\n> > > > Reply to this email directly or view it on GitHub\n> > > > https://github.com/grpc/grpc/issues/1722#issuecomment-106112356.\n> > > \n> > > â€”\n> > > Reply to this email directly or view it on GitHub\n> > > https://github.com/grpc/grpc/issues/1722#issuecomment-106112894.\n> > \n> > â€”\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/grpc/grpc/issues/1722#issuecomment-106113963.\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/grpc/grpc/issues/1722#issuecomment-106174499.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/106199081",
    "html_url": "https://github.com/grpc/grpc/issues/1722#issuecomment-106199081",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/1722",
    "id": 106199081,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNjE5OTA4MQ==",
    "user": {
      "login": "jboeuf",
      "id": 6262765,
      "node_id": "MDQ6VXNlcjYyNjI3NjU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6262765?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jboeuf",
      "html_url": "https://github.com/jboeuf",
      "followers_url": "https://api.github.com/users/jboeuf/followers",
      "following_url": "https://api.github.com/users/jboeuf/following{/other_user}",
      "gists_url": "https://api.github.com/users/jboeuf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jboeuf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jboeuf/subscriptions",
      "organizations_url": "https://api.github.com/users/jboeuf/orgs",
      "repos_url": "https://api.github.com/users/jboeuf/repos",
      "events_url": "https://api.github.com/users/jboeuf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jboeuf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-28T06:51:55Z",
    "updated_at": "2015-05-28T06:51:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "Let's talk tomorrow.\n\nOn Wed, May 27, 2015 at 10:59 PM, Craig Tiller notifications@github.com\nwrote:\n\n> The auth filter should ask the question for sure. I'm not certain whether\n> it should be the creds object or something it supplies that answers the\n> question though. Looking to you for advice.\n> \n> On Wed, May 27, 2015, 10:19 PM jboeuf notifications@github.com wrote:\n> \n> > OK. As long as we do 2. outside of the credentials object (on the auth\n> > filter for example), I'm ok with it.\n> > \n> > On Wed, May 27, 2015 at 4:55 PM, Craig Tiller notifications@github.com\n> > wrote:\n> > \n> > > So for (1), I think it works just fine, except that we don't cache on\n> > > the\n> > > channel.\n> > > And agreed for (2), we just need to do the quick check on subsequent\n> > > requests.\n> > > \n> > > On Wed, May 27, 2015 at 4:51 PM jboeuf notifications@github.com\n> > > wrote:\n> > > \n> > > > 2 thoughts.\n> > > > 1. Will that work with credentials attached to just a call as well?\n> > > > 2. why do you need a check before sending them out? The credentials\n> > > >    has\n> > > >    already done its work at this point.\n> > > > \n> > > > On Wed, May 27, 2015 at 4:47 PM, Craig Tiller <\n> > > > notifications@github.com>\n> > > > wrote:\n> > > > \n> > > > > Yeah. Trying to determine if the current set of strings needs to be\n> > > > > refreshed or not.\n> > > > > \n> > > > > My thought is to:\n> > > > > - remove mdctx from credentials\n> > > > > - pass back just a set of strings when a metadata query is made\n> > > > > - cache the strings as mdelems on the channel data of the auth\n> > > > >   filter\n> > > > > - perform a quick check before sending them out for a given request\n> > > > > \n> > > > > On Wed, May 27, 2015 at 4:43 PM jboeuf notifications@github.com\n> > > > > wrote:\n> > > > > \n> > > > > > what does current mean here? That it is cached and still valid?\n> > > > > > \n> > > > > > On Wed, May 27, 2015 at 4:25 PM, Craig Tiller <\n> > > > > > notifications@github.com>\n> > > > > > wrote:\n> > > > > > \n> > > > > > > Is this function implementable?:\n> > > > > > > \n> > > > > > > grpc_creds_are_current_credentials_still_current(creds,\n> > > > > > > some_token_returned_with_metadata_callback)\n> > > > > > > \n> > > > > > > â€”\n> > > > > > > Reply to this email directly or view it on GitHub\n> > > > > > > <\n> > > > > > > https://github.com/grpc/grpc/issues/1722#issuecomment-106108566\n> > > > > > > .\n> > > > > > \n> > > > > > â€”\n> > > > > > Reply to this email directly or view it on GitHub\n> > > > > > <https://github.com/grpc/grpc/issues/1722#issuecomment-106110824\n> > > > > > .\n> > > > > \n> > > > > â€”\n> > > > > Reply to this email directly or view it on GitHub\n> > > > > https://github.com/grpc/grpc/issues/1722#issuecomment-106112356.\n> > > > \n> > > > â€”\n> > > > Reply to this email directly or view it on GitHub\n> > > > https://github.com/grpc/grpc/issues/1722#issuecomment-106112894.\n> > > \n> > > â€”\n> > > Reply to this email directly or view it on GitHub\n> > > https://github.com/grpc/grpc/issues/1722#issuecomment-106113963.\n> > \n> > â€”\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/grpc/grpc/issues/1722#issuecomment-106174499.\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/grpc/grpc/issues/1722#issuecomment-106187954.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/106517029",
    "html_url": "https://github.com/grpc/grpc/issues/1722#issuecomment-106517029",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/1722",
    "id": 106517029,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNjUxNzAyOQ==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-28T17:40:52Z",
    "updated_at": "2015-05-28T17:40:52Z",
    "author_association": "MEMBER",
    "body": "Assigning since it looks like you're fixing it :)\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/106517601",
    "html_url": "https://github.com/grpc/grpc/issues/1722#issuecomment-106517601",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/1722",
    "id": 106517601,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNjUxNzYwMQ==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-28T17:41:28Z",
    "updated_at": "2015-05-28T17:41:28Z",
    "author_association": "MEMBER",
    "body": "Tentatively placing this on the 0.9.1 release - per-call credentials are likely currently broken due to this.\n"
  }
]
