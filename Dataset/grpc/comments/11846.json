[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/316470551",
    "html_url": "https://github.com/grpc/grpc/issues/11846#issuecomment-316470551",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11846",
    "id": 316470551,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjQ3MDU1MQ==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-19T18:09:31Z",
    "updated_at": "2017-07-19T18:09:31Z",
    "author_association": "MEMBER",
    "body": "@denis-trofimov: you've reported this as a problem between a C++ client and a Python server. Have you confirmed that it does not exist between a C++ client and a C++ server? Have you confirmed that it does not exist between a Python client and a Python server?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/316480307",
    "html_url": "https://github.com/grpc/grpc/issues/11846#issuecomment-316480307",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11846",
    "id": 316480307,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjQ4MDMwNw==",
    "user": {
      "login": "denis-trofimov",
      "id": 24657082,
      "node_id": "MDQ6VXNlcjI0NjU3MDgy",
      "avatar_url": "https://avatars1.githubusercontent.com/u/24657082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/denis-trofimov",
      "html_url": "https://github.com/denis-trofimov",
      "followers_url": "https://api.github.com/users/denis-trofimov/followers",
      "following_url": "https://api.github.com/users/denis-trofimov/following{/other_user}",
      "gists_url": "https://api.github.com/users/denis-trofimov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/denis-trofimov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/denis-trofimov/subscriptions",
      "organizations_url": "https://api.github.com/users/denis-trofimov/orgs",
      "repos_url": "https://api.github.com/users/denis-trofimov/repos",
      "events_url": "https://api.github.com/users/denis-trofimov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/denis-trofimov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-19T18:45:44Z",
    "updated_at": "2017-07-19T18:46:56Z",
    "author_association": "NONE",
    "body": "Hi @nathanielmanistaatgoogle \r\nYou asked reasonable questions. I don't check others because it is outside of my use case at work. \r\nI did a workaround just for now, add a dummy key with the zero value for all messages I send from the CPP code. It works just fine. \r\n```javascript\r\nenum Sex {\r\n        SEX0 = 0;\r\n        MALE = 1;\r\n        FEMALE = 2;\r\n    }\r\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/316518855",
    "html_url": "https://github.com/grpc/grpc/issues/11846#issuecomment-316518855",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11846",
    "id": 316518855,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjUxODg1NQ==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-19T21:12:06Z",
    "updated_at": "2017-07-19T21:49:10Z",
    "author_association": "MEMBER",
    "body": "Could the problem be that the zero values are simply not printed by your server-side `print(request)`? What happens if you print `request.sex` in your server-side Python code? Could it be that the problem is that zero values _are_ passed from client to server, but that they simply aren't printed?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/316527488",
    "html_url": "https://github.com/grpc/grpc/issues/11846#issuecomment-316527488",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11846",
    "id": 316527488,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjUyNzQ4OA==",
    "user": {
      "login": "denis-trofimov",
      "id": 24657082,
      "node_id": "MDQ6VXNlcjI0NjU3MDgy",
      "avatar_url": "https://avatars1.githubusercontent.com/u/24657082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/denis-trofimov",
      "html_url": "https://github.com/denis-trofimov",
      "followers_url": "https://api.github.com/users/denis-trofimov/followers",
      "following_url": "https://api.github.com/users/denis-trofimov/following{/other_user}",
      "gists_url": "https://api.github.com/users/denis-trofimov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/denis-trofimov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/denis-trofimov/subscriptions",
      "organizations_url": "https://api.github.com/users/denis-trofimov/orgs",
      "repos_url": "https://api.github.com/users/denis-trofimov/repos",
      "events_url": "https://api.github.com/users/denis-trofimov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/denis-trofimov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-19T21:45:56Z",
    "updated_at": "2017-07-19T21:46:08Z",
    "author_association": "NONE",
    "body": "@nathanielmanistaatgoogle As it prints `sex: FEMALE` I don't check python server generated code. But it could also be a server flaw, but not in my custom code, as you can see. It just prints given request as a dict."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/316528935",
    "html_url": "https://github.com/grpc/grpc/issues/11846#issuecomment-316528935",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11846",
    "id": 316528935,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjUyODkzNQ==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-19T21:51:32Z",
    "updated_at": "2017-07-19T21:51:32Z",
    "author_association": "MEMBER",
    "body": "Aside from what is printed to the console, in what way is you program behaving incorrectly because of this defect? If the client-side code assigns the zero value of an enum to a field of the request, does the server-side code not see the zero value of the enum assigned to the field when it reads the request?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/316530206",
    "html_url": "https://github.com/grpc/grpc/issues/11846#issuecomment-316530206",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11846",
    "id": 316530206,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjUzMDIwNg==",
    "user": {
      "login": "yang-g",
      "id": 10122250,
      "node_id": "MDQ6VXNlcjEwMTIyMjUw",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10122250?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yang-g",
      "html_url": "https://github.com/yang-g",
      "followers_url": "https://api.github.com/users/yang-g/followers",
      "following_url": "https://api.github.com/users/yang-g/following{/other_user}",
      "gists_url": "https://api.github.com/users/yang-g/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yang-g/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yang-g/subscriptions",
      "organizations_url": "https://api.github.com/users/yang-g/orgs",
      "repos_url": "https://api.github.com/users/yang-g/repos",
      "events_url": "https://api.github.com/users/yang-g/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yang-g/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-19T21:56:42Z",
    "updated_at": "2017-07-19T21:56:42Z",
    "author_association": "MEMBER",
    "body": "This may be working as intended. In proto3, enum default value is 0 and if you are using default value, it does not go on the wire. I do not know about python but maybe it does not (cannot) distinguish whether you did not set the value or set to default. If you do not want MALE to be default, you should do your workaround like `UNKNOWN = 0`.\r\n\r\nSee: https://developers.google.com/protocol-buffers/docs/proto3#default"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/316535810",
    "html_url": "https://github.com/grpc/grpc/issues/11846#issuecomment-316535810",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11846",
    "id": 316535810,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjUzNTgxMA==",
    "user": {
      "login": "denis-trofimov",
      "id": 24657082,
      "node_id": "MDQ6VXNlcjI0NjU3MDgy",
      "avatar_url": "https://avatars1.githubusercontent.com/u/24657082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/denis-trofimov",
      "html_url": "https://github.com/denis-trofimov",
      "followers_url": "https://api.github.com/users/denis-trofimov/followers",
      "following_url": "https://api.github.com/users/denis-trofimov/following{/other_user}",
      "gists_url": "https://api.github.com/users/denis-trofimov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/denis-trofimov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/denis-trofimov/subscriptions",
      "organizations_url": "https://api.github.com/users/denis-trofimov/orgs",
      "repos_url": "https://api.github.com/users/denis-trofimov/repos",
      "events_url": "https://api.github.com/users/denis-trofimov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/denis-trofimov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-19T22:20:30Z",
    "updated_at": "2017-07-21T11:56:56Z",
    "author_association": "NONE",
    "body": "@nathanielmanistaatgoogle  \r\n\r\n> What happens if you print request.sex in your server-side Python code?\r\n>  If the client-side code assigns the zero value of an enum to a field of the request, does the server-side code not see the zero value of the enum assigned to the field when it reads the request?\r\n\r\nYes, where is no such object as request.sex. \r\nI can not test it now (I tried but old code not working to test.) but I am sure request.sex is None of NoneType. it is not exist. If it existed and equal 0, it would be printed out.\r\n\r\n\r\n\r\n\r\n@yang-g yes the most plausible that it is not go over wire.\r\nhttps://developers.google.com/protocol-buffers/docs/reference/python-generated#enum\r\n@nathanielmanistaatgoogle \r\nThe functioning of enum zero value as a default is achieved in a C++ client/server by the means of class structure. The result is that object Person_Sex exist in memory, and have internal int = 0 for both of  client/server.\r\nThen if enum is not contained in message, it is moved to `0` state.\r\n \r\n```cpp\r\n// cyclop.pb.h\r\nenum Person_Sex {\r\n  Person_Sex_SEX0 = 0,\r\n  Person_Sex_MALE = 1,\r\n  Person_Sex_FEMALE = 2,\r\n  Person_Sex_Person_Sex_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,\r\n  Person_Sex_Person_Sex_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max\r\n};\r\n\r\n\r\n// .cyclop.Person.Sex sex = 5;\r\n  void clear_sex();\r\n  static const int kSexFieldNumber = 5;\r\n  ::cyclop::Person_Sex sex() const;\r\n  void set_sex(::cyclop::Person_Sex value);\r\n\r\n\r\n// .cyclop.Person.Sex sex = 5;\r\ninline void Person::clear_sex() {\r\n  sex_ = 0;\r\n}\r\ninline ::cyclop::Person_Sex Person::sex() const {\r\n  // @@protoc_insertion_point(field_get:cyclop.Person.sex)\r\n  return static_cast< ::cyclop::Person_Sex >(sex_);\r\n}\r\ninline void Person::set_sex(::cyclop::Person_Sex value) {\r\n  \r\n  sex_ = value;\r\n  // @@protoc_insertion_point(field_set:cyclop.Person.sex)\r\n}\r\n\r\n```\r\n**For Python, it is not working as I want it. *smile* \r\nThe object of class enum  Person_Sex not exist in memory for both of client/server, at least for server 100% true as I have tested.**\r\nThen if enum is not contained in message, it is not exist. If it existed and equal 0, it would be printed out.\r\nIf I look for 'sex' in request it will be false (not checked yet)\r\nThe simple example show d is a dict in Python.\r\n```python\r\nPython 2.7.13 (default, Jan 19 2017, 14:48:08) \r\n[GCC 6.3.0 20170118] on linux2\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> d = {'sex': 0}\r\n>>> print d\r\n{'sex': 0}\r\n>>> 'some' in d\r\nFalse\r\n```\r\nIf you confirm, the issue is concerned only with Python. It can be renamed and tagged python. "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/316536542",
    "html_url": "https://github.com/grpc/grpc/issues/11846#issuecomment-316536542",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11846",
    "id": 316536542,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjUzNjU0Mg==",
    "user": {
      "login": "denis-trofimov",
      "id": 24657082,
      "node_id": "MDQ6VXNlcjI0NjU3MDgy",
      "avatar_url": "https://avatars1.githubusercontent.com/u/24657082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/denis-trofimov",
      "html_url": "https://github.com/denis-trofimov",
      "followers_url": "https://api.github.com/users/denis-trofimov/followers",
      "following_url": "https://api.github.com/users/denis-trofimov/following{/other_user}",
      "gists_url": "https://api.github.com/users/denis-trofimov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/denis-trofimov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/denis-trofimov/subscriptions",
      "organizations_url": "https://api.github.com/users/denis-trofimov/orgs",
      "repos_url": "https://api.github.com/users/denis-trofimov/repos",
      "events_url": "https://api.github.com/users/denis-trofimov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/denis-trofimov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-19T22:23:39Z",
    "updated_at": "2017-07-20T08:08:28Z",
    "author_association": "NONE",
    "body": "@yang-g   I checked that  good idea it to set unique names for dummy fields. There would be names conflict otherwise, I have example at work.\r\n```python\r\n// A Person corresponds to Person ORM.\r\nmessage Person {\r\n    uint32 id = 1;\r\n    string first_name = 2;\r\n    string last_name = 3;\r\n    string patronymic = 4;\r\n    // A person`s sex.\r\n    enum Sex {\r\n        BUG = 0;\r\n        MALE = 1;\r\n        FEMALE = 2;\r\n    }\r\n    Sex sex = 5;\r\n    // A birthday date.\r\n    string birthday = 6;\r\n\r\n    // A status of a person record.\r\n    enum Status {\r\n        BUG = 0;\r\n        VALID = 1;\r\n        ARCHIVE = 2;\r\n        BLACK = 3;\r\n    }\r\n    Status person_status = 7;\r\n\r\n    // An iris code(s).\r\n    Code code = 8;\r\n}\r\n```\r\nCan not generate\r\n```cpp\r\n\"BUG\" is already defined in \"cyclop.Person\".\r\n    cyclop.proto:37:9: Note that enum values use C++ scoping rules, meaning that enum values are siblings of their type, not children of it.  Therefore, \"BUG\" must be unique within \"cyclop.Person\", not just within \"Status\".\r\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/316542385",
    "html_url": "https://github.com/grpc/grpc/issues/11846#issuecomment-316542385",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11846",
    "id": 316542385,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjU0MjM4NQ==",
    "user": {
      "login": "y-zeng",
      "id": 17460127,
      "node_id": "MDQ6VXNlcjE3NDYwMTI3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/17460127?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/y-zeng",
      "html_url": "https://github.com/y-zeng",
      "followers_url": "https://api.github.com/users/y-zeng/followers",
      "following_url": "https://api.github.com/users/y-zeng/following{/other_user}",
      "gists_url": "https://api.github.com/users/y-zeng/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/y-zeng/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/y-zeng/subscriptions",
      "organizations_url": "https://api.github.com/users/y-zeng/orgs",
      "repos_url": "https://api.github.com/users/y-zeng/repos",
      "events_url": "https://api.github.com/users/y-zeng/events{/privacy}",
      "received_events_url": "https://api.github.com/users/y-zeng/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-19T22:51:29Z",
    "updated_at": "2017-07-19T22:51:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "@denis-trofimov You probably wanted to mention @yang-g? "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/316622165",
    "html_url": "https://github.com/grpc/grpc/issues/11846#issuecomment-316622165",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11846",
    "id": 316622165,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjYyMjE2NQ==",
    "user": {
      "login": "denis-trofimov",
      "id": 24657082,
      "node_id": "MDQ6VXNlcjI0NjU3MDgy",
      "avatar_url": "https://avatars1.githubusercontent.com/u/24657082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/denis-trofimov",
      "html_url": "https://github.com/denis-trofimov",
      "followers_url": "https://api.github.com/users/denis-trofimov/followers",
      "following_url": "https://api.github.com/users/denis-trofimov/following{/other_user}",
      "gists_url": "https://api.github.com/users/denis-trofimov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/denis-trofimov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/denis-trofimov/subscriptions",
      "organizations_url": "https://api.github.com/users/denis-trofimov/orgs",
      "repos_url": "https://api.github.com/users/denis-trofimov/repos",
      "events_url": "https://api.github.com/users/denis-trofimov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/denis-trofimov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-20T07:35:20Z",
    "updated_at": "2017-07-20T07:35:20Z",
    "author_association": "NONE",
    "body": "@y-zeng Yes , sorry it was 1 A.M. and I was sleepy."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/316716246",
    "html_url": "https://github.com/grpc/grpc/issues/11846#issuecomment-316716246",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11846",
    "id": 316716246,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjcxNjI0Ng==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-20T14:13:28Z",
    "updated_at": "2017-07-20T14:13:28Z",
    "author_association": "MEMBER",
    "body": "Closing since I think this is a Protocol Buffers issue rather than a gRPC issue: whatever behavior you're seeing that is a problem, you see the behavior when you simply serialize and deserialize a message (possibly writing it to your filesystem and reading it back if you need to cross a programming language barrier), right?\r\n\r\nIt's not the case that transmitting the message via gRPC is required to demonstrate the problem, right?\r\n\r\n@xfxyjwf and @anandolee, what do you make of what's reported here?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/316982740",
    "html_url": "https://github.com/grpc/grpc/issues/11846#issuecomment-316982740",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11846",
    "id": 316982740,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjk4Mjc0MA==",
    "user": {
      "login": "denis-trofimov",
      "id": 24657082,
      "node_id": "MDQ6VXNlcjI0NjU3MDgy",
      "avatar_url": "https://avatars1.githubusercontent.com/u/24657082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/denis-trofimov",
      "html_url": "https://github.com/denis-trofimov",
      "followers_url": "https://api.github.com/users/denis-trofimov/followers",
      "following_url": "https://api.github.com/users/denis-trofimov/following{/other_user}",
      "gists_url": "https://api.github.com/users/denis-trofimov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/denis-trofimov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/denis-trofimov/subscriptions",
      "organizations_url": "https://api.github.com/users/denis-trofimov/orgs",
      "repos_url": "https://api.github.com/users/denis-trofimov/repos",
      "events_url": "https://api.github.com/users/denis-trofimov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/denis-trofimov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-21T11:58:44Z",
    "updated_at": "2017-07-21T11:58:44Z",
    "author_association": "NONE",
    "body": "@nathanielmanistaatgoogle Should I put this issue up in Protocol Buffers describing it from the start? What do you recommend?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/317017377",
    "html_url": "https://github.com/grpc/grpc/issues/11846#issuecomment-317017377",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11846",
    "id": 317017377,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzAxNzM3Nw==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-21T14:33:46Z",
    "updated_at": "2017-07-21T14:33:46Z",
    "author_association": "MEMBER",
    "body": "Yes, I'd recommend [filing an issue with Protocol Buffers](https://github.com/google/protobuf/issues) with a minimal reproduction that doesn't involve gRPC."
  }
]
