[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/369777212",
    "html_url": "https://github.com/grpc/grpc/issues/14569#issuecomment-369777212",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14569",
    "id": 369777212,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTc3NzIxMg==",
    "user": {
      "login": "kpayson64",
      "id": 18316330,
      "node_id": "MDQ6VXNlcjE4MzE2MzMw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18316330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kpayson64",
      "html_url": "https://github.com/kpayson64",
      "followers_url": "https://api.github.com/users/kpayson64/followers",
      "following_url": "https://api.github.com/users/kpayson64/following{/other_user}",
      "gists_url": "https://api.github.com/users/kpayson64/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kpayson64/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kpayson64/subscriptions",
      "organizations_url": "https://api.github.com/users/kpayson64/orgs",
      "repos_url": "https://api.github.com/users/kpayson64/repos",
      "events_url": "https://api.github.com/users/kpayson64/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kpayson64/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-02T00:18:10Z",
    "updated_at": "2018-03-02T00:18:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "A few things:\r\n\r\n1. Calls that haven't had any batches started (successfully) don't need to be cancelled.\r\n2. For unary calls, you should be able to make a single call to ```grpc_call_start_batch```.  If we are doing something else in Python, that is an artifact of the Python usage, rather than a limitation of the c-core.\r\n\r\nFWIW, C++ ```assert()```s on ```grpc_call_start_batch``` failure.  This indicates that the c-core has been invoked incorrectly, and is not recoverable.\r\n\r\nI think it makes the most sense to just do some pre-processing on the application supplied metadata, and throw a Python exception if there is a failure.\r\n\r\nAs far as a 1-and-done c-core API, at most it would be able to merge ```grpc_channel_create_call``` and ```grpc_call_set_credentials```.  Being able to do batches independently is needed for streaming.\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/369797057",
    "html_url": "https://github.com/grpc/grpc/issues/14569#issuecomment-369797057",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14569",
    "id": 369797057,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTc5NzA1Nw==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-02T02:10:50Z",
    "updated_at": "2018-03-02T02:10:50Z",
    "author_association": "MEMBER",
    "body": "Thanks for considering!\r\n\r\n1. Good to know!\r\n2. Yes, for unary-unary calls we do make a single call to `grpc_call_start_batch` at RPC invocation time (and this is also the only `grpc_call_start_batch` call for the entire RPC). For other cardinalities of calls we make as many as two calls to `grpc_call_start_batch` at RPC invocation time (and other `grpc_call_start_batch` calls may follow later). But the API in its current form suggests that we could make as many as six calls if we really wanted to.\r\n\r\nAround... Beta, I think (mid-2015?) we did in fact talk about vetting the metadata before starting a batch with it, but the decision at the time was that we didn't want to reimplement or repeat the vetting that is done at batch start time. I'd be open to revisiting that decision... if Core wants to expose a vetting function. I'd be skittish about implementing a separate vetting function in the Python subcodebase.\r\n\r\nI'm not sure your last paragraph is on-topic - this feature request is for one-and-call-creation-done, not one-and-RPC-done. Even if implemented as described and one or two or six batches are allowed to be included in a single call creation function that wouldn't preclude starting later batches on the created call. Right?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/408215415",
    "html_url": "https://github.com/grpc/grpc/issues/14569#issuecomment-408215415",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14569",
    "id": 408215415,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwODIxNTQxNQ==",
    "user": {
      "login": "kpayson64",
      "id": 18316330,
      "node_id": "MDQ6VXNlcjE4MzE2MzMw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18316330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kpayson64",
      "html_url": "https://github.com/kpayson64",
      "followers_url": "https://api.github.com/users/kpayson64/followers",
      "following_url": "https://api.github.com/users/kpayson64/following{/other_user}",
      "gists_url": "https://api.github.com/users/kpayson64/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kpayson64/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kpayson64/subscriptions",
      "organizations_url": "https://api.github.com/users/kpayson64/orgs",
      "repos_url": "https://api.github.com/users/kpayson64/repos",
      "events_url": "https://api.github.com/users/kpayson64/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kpayson64/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-26T19:52:18Z",
    "updated_at": "2018-07-26T19:52:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "There are currently no plans to add rich call creation.  We can re-open this issue if someone plans on re-visiting it."
  }
]
