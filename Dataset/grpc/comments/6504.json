[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/218054398",
    "html_url": "https://github.com/grpc/grpc/issues/6504#issuecomment-218054398",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6504",
    "id": 218054398,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODA1NDM5OA==",
    "user": {
      "login": "nscsekhar",
      "id": 410198,
      "node_id": "MDQ6VXNlcjQxMDE5OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/410198?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nscsekhar",
      "html_url": "https://github.com/nscsekhar",
      "followers_url": "https://api.github.com/users/nscsekhar/followers",
      "following_url": "https://api.github.com/users/nscsekhar/following{/other_user}",
      "gists_url": "https://api.github.com/users/nscsekhar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nscsekhar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nscsekhar/subscriptions",
      "organizations_url": "https://api.github.com/users/nscsekhar/orgs",
      "repos_url": "https://api.github.com/users/nscsekhar/repos",
      "events_url": "https://api.github.com/users/nscsekhar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nscsekhar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-10T04:08:08Z",
    "updated_at": "2016-05-10T04:08:08Z",
    "author_association": "NONE",
    "body": "Attaching the snippets of server and client used to test the performance.\n[client-snippet.txt](https://github.com/grpc/grpc/files/256344/client-snippet.txt)\n[server-snippet.txt](https://github.com/grpc/grpc/files/256345/server-snippet.txt)\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/218248508",
    "html_url": "https://github.com/grpc/grpc/issues/6504#issuecomment-218248508",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6504",
    "id": 218248508,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODI0ODUwOA==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-10T18:31:50Z",
    "updated_at": "2016-05-10T18:31:50Z",
    "author_association": "MEMBER",
    "body": "There's no intrinsic limit; I'll look at your snippets to offer suggestions.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/218250013",
    "html_url": "https://github.com/grpc/grpc/issues/6504#issuecomment-218250013",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6504",
    "id": 218250013,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODI1MDAxMw==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-10T18:37:12Z",
    "updated_at": "2016-05-10T18:37:12Z",
    "author_association": "MEMBER",
    "body": "Ok, the biggest problem in your code right now is that you're only registering one RPC at a time on the server-side. You should actually register lots of them at once; a good example of this is how we do it in the QPS test. If an incoming RPC matches a pre-registered RPC when it reaches the server, it goes on a fast path but otherwise it ends up on a slow path.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/218250522",
    "html_url": "https://github.com/grpc/grpc/issues/6504#issuecomment-218250522",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6504",
    "id": 218250522,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODI1MDUyMg==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-10T18:38:57Z",
    "updated_at": "2016-05-10T18:38:57Z",
    "author_association": "MEMBER",
    "body": "The second issue is something that's missing from your snippets - I don't see where you're actually calling cq.Next . I presume that you're doing that somewhere? But unlike greeter_async_server.cc and greeter_async_client.cc, I would suggest that you have each process have 2 threads and have each of them do cq.Next in each thread. The reason is that your workflow has the client sending a bunch of RPCs, then the server picking up a bunch of RPCs, then the client picking up a bunch of responses. Bursty traffic like that would benefit from having enough threads to support the burst load, not just the steady-state load.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/218251260",
    "html_url": "https://github.com/grpc/grpc/issues/6504#issuecomment-218251260",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6504",
    "id": 218251260,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODI1MTI2MA==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-10T18:41:44Z",
    "updated_at": "2016-05-10T18:41:44Z",
    "author_association": "MEMBER",
    "body": "And a third issue that I would bring up is possible client-side limitation. You have 10 RPCs outstanding a time and then wait on all of them. I would suggest two things here:\n1. 10->100 or some larger number. The async API's purpose is to push/process a lot of RPCs on a channel from a single thread, so go ahead and try to fill the channel. \n2. Don't wait for all your RPCs to return; just send your next one as soon as one returns. Make the RPCs independent of each other. Otherwise you're counting the stall time waiting on load-balance issues rather than just waiting on the RPCs.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/219155378",
    "html_url": "https://github.com/grpc/grpc/issues/6504#issuecomment-219155378",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6504",
    "id": 219155378,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTE1NTM3OA==",
    "user": {
      "login": "nscsekhar",
      "id": 410198,
      "node_id": "MDQ6VXNlcjQxMDE5OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/410198?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nscsekhar",
      "html_url": "https://github.com/nscsekhar",
      "followers_url": "https://api.github.com/users/nscsekhar/followers",
      "following_url": "https://api.github.com/users/nscsekhar/following{/other_user}",
      "gists_url": "https://api.github.com/users/nscsekhar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nscsekhar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nscsekhar/subscriptions",
      "organizations_url": "https://api.github.com/users/nscsekhar/orgs",
      "repos_url": "https://api.github.com/users/nscsekhar/repos",
      "events_url": "https://api.github.com/users/nscsekhar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nscsekhar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-13T20:48:46Z",
    "updated_at": "2016-05-13T20:48:46Z",
    "author_association": "NONE",
    "body": "Hi Vijay,\n\nThanks for your suggestions. I tried these by looking at test/cpp/qps - server_async.cc and client_async.cc. (Attached the files.)\n1. Client operates as two threads : sender of rpcs and collector of the responses.\n2. Server operates as five threads, all working off same socket. \n\nWith this, I see that client is able to push rpcs faster at 100K per second. However, it comes with a set of limitations.\n1. Given that I have only one core for Client and one core for Server - multithreading actually degrades the overall performance. The total time taken, i.e. when the collector is done, has now gone up to 170 seconds. In my previous attempt, it was 86 seconds.\n2. I had to pause the collector till the sender is done with all RPCs, otherwise sharing/locking the rpc state is degrading the performance quite a bit.\n3. The amount of transient memory for the outstanding rpcs (i.e. from the sender allocating it and the collector freeing it) is high. For 1M RPCs, it took 5GB. \n4. More on memory management - the GRPC Async calls did not allow to pass smart pointers. And I could not free the ClientContext in the context of collector thread, as ClientContext is referenced as a private member of the ClientAsyncResponseReader which the collector has.\n\nCan you please take a look at my test code and suggest if I try anything else.\n\nOne question - Can we have RPCs that dont need a response, so that we can skip the wait overhead. Something like a void return rpc. Today, protoc doesn’t allow specifying such as rpc. If required, the end user can define another RPC to verify if the previous RPCs really did the job.\n\nThanks,\nSurya\n\n[PerfTest.proto.txt](https://github.com/grpc/grpc/files/264060/PerfTest.proto.txt)\n[PerfTestClient.cpp.txt](https://github.com/grpc/grpc/files/264059/PerfTestClient.cpp.txt)\n[PerfTestServer.cpp.txt](https://github.com/grpc/grpc/files/264061/PerfTestServer.cpp.txt)\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/219479806",
    "html_url": "https://github.com/grpc/grpc/issues/6504#issuecomment-219479806",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6504",
    "id": 219479806,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTQ3OTgwNg==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-16T16:55:18Z",
    "updated_at": "2016-05-16T16:55:18Z",
    "author_association": "MEMBER",
    "body": "Hi there, I'm glad this was able to push your performance higher. On your topics:\n1. If performance is better with single-threading, then no problem, use single-threading. I can definitely see that this would be a very platform-specific parameter, and having only 2 cores can lead to very different design choices than having more cores.\n2. By all RPCs, do you mean all 1 million? That shouldn't be required.\n3. Again, do you have 1 million RPCs outstanding at the same time?\n4. The Async API essentially assumes that you know what you're doing. You can free the ClientContext when the RPC is actually correctly Finish'ed . Until then there is always the chance that the ClientContext will still be needed\n\nI will try to look at the test code some time in the next few days. Best of luck and please keep us posted!\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/219480133",
    "html_url": "https://github.com/grpc/grpc/issues/6504#issuecomment-219480133",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6504",
    "id": 219480133,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTQ4MDEzMw==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-16T16:56:38Z",
    "updated_at": "2016-05-16T16:56:38Z",
    "author_association": "MEMBER",
    "body": "One more thing: for one-directional RPCs, you can get this effect by using a streaming RPC rather than a unary RPC.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/219512970",
    "html_url": "https://github.com/grpc/grpc/issues/6504#issuecomment-219512970",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6504",
    "id": 219512970,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTUxMjk3MA==",
    "user": {
      "login": "nscsekhar",
      "id": 410198,
      "node_id": "MDQ6VXNlcjQxMDE5OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/410198?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nscsekhar",
      "html_url": "https://github.com/nscsekhar",
      "followers_url": "https://api.github.com/users/nscsekhar/followers",
      "following_url": "https://api.github.com/users/nscsekhar/following{/other_user}",
      "gists_url": "https://api.github.com/users/nscsekhar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nscsekhar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nscsekhar/subscriptions",
      "organizations_url": "https://api.github.com/users/nscsekhar/orgs",
      "repos_url": "https://api.github.com/users/nscsekhar/repos",
      "events_url": "https://api.github.com/users/nscsekhar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nscsekhar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-16T18:54:24Z",
    "updated_at": "2016-05-16T18:54:24Z",
    "author_association": "NONE",
    "body": "Thanks.. I will try the streaming RPCs first.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/219518296",
    "html_url": "https://github.com/grpc/grpc/issues/6504#issuecomment-219518296",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6504",
    "id": 219518296,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTUxODI5Ng==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-16T19:13:43Z",
    "updated_at": "2016-05-16T19:13:43Z",
    "author_association": "MEMBER",
    "body": "I would highly recommend against having 1 million RPCs outstanding at the same time also. This is technically legal but will not be good for latency. 1000 would be very reasonable.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/219533072",
    "html_url": "https://github.com/grpc/grpc/issues/6504#issuecomment-219533072",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6504",
    "id": 219533072,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTUzMzA3Mg==",
    "user": {
      "login": "nscsekhar",
      "id": 410198,
      "node_id": "MDQ6VXNlcjQxMDE5OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/410198?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nscsekhar",
      "html_url": "https://github.com/nscsekhar",
      "followers_url": "https://api.github.com/users/nscsekhar/followers",
      "following_url": "https://api.github.com/users/nscsekhar/following{/other_user}",
      "gists_url": "https://api.github.com/users/nscsekhar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nscsekhar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nscsekhar/subscriptions",
      "organizations_url": "https://api.github.com/users/nscsekhar/orgs",
      "repos_url": "https://api.github.com/users/nscsekhar/repos",
      "events_url": "https://api.github.com/users/nscsekhar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nscsekhar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-16T20:11:27Z",
    "updated_at": "2016-05-16T20:11:27Z",
    "author_association": "NONE",
    "body": "Yeah, and not a practical scenario too. I did that just to measure the max performance to push the RPCs before having to collect the responses. With streaming, I can keep it more practical - like stream a 100 messages per RPC. \n\nMy previous attempt with async streaming didnt go well. The examples I looked at were more of ping-pong type. When I ran a loop to just write from client and just receive on the server, both of them asserted. Will spend more time on it now.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/222914526",
    "html_url": "https://github.com/grpc/grpc/issues/6504#issuecomment-222914526",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6504",
    "id": 222914526,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjkxNDUyNg==",
    "user": {
      "login": "nscsekhar",
      "id": 410198,
      "node_id": "MDQ6VXNlcjQxMDE5OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/410198?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nscsekhar",
      "html_url": "https://github.com/nscsekhar",
      "followers_url": "https://api.github.com/users/nscsekhar/followers",
      "following_url": "https://api.github.com/users/nscsekhar/following{/other_user}",
      "gists_url": "https://api.github.com/users/nscsekhar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nscsekhar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nscsekhar/subscriptions",
      "organizations_url": "https://api.github.com/users/nscsekhar/orgs",
      "repos_url": "https://api.github.com/users/nscsekhar/repos",
      "events_url": "https://api.github.com/users/nscsekhar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nscsekhar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-01T07:28:29Z",
    "updated_at": "2016-06-01T07:28:29Z",
    "author_association": "NONE",
    "body": "I could test the async streaming and the performance looks great now. I could see a best case of around 200K RPCs/sec\n\nI measured the total time taken for 1 Million RPC requests sent from client and the server to send 1 response for N requests, where N is 1,2,5,10,20,100,1000. Here are the numbers I observed:\n\nReply for every Request      : 15K /sec\nReply for every 2 Requests : 34K /sec\nReply for every 5 Requests : 66K /sec\nReply for every 10 Requests : 71K /sec\nReply for every 20 Requests : 111K /sec\nReply for every 100 Requests : 166K /sec\nReply for every 1000 Requests : 166K ~ 200K/sec\n\nThanks again for your help! \n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/230092868",
    "html_url": "https://github.com/grpc/grpc/issues/6504#issuecomment-230092868",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6504",
    "id": 230092868,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMDA5Mjg2OA==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-02T09:30:04Z",
    "updated_at": "2016-07-02T09:30:04Z",
    "author_association": "MEMBER",
    "body": "Do you need any further assistance on this issue, or can we close it up?\n"
  }
]
