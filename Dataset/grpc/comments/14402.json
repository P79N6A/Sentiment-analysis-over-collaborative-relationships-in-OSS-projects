[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/367325053",
    "html_url": "https://github.com/grpc/grpc/issues/14402#issuecomment-367325053",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14402",
    "id": 367325053,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzMyNTA1Mw==",
    "user": {
      "login": "zaneclaes",
      "id": 2084821,
      "node_id": "MDQ6VXNlcjIwODQ4MjE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2084821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zaneclaes",
      "html_url": "https://github.com/zaneclaes",
      "followers_url": "https://api.github.com/users/zaneclaes/followers",
      "following_url": "https://api.github.com/users/zaneclaes/following{/other_user}",
      "gists_url": "https://api.github.com/users/zaneclaes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zaneclaes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zaneclaes/subscriptions",
      "organizations_url": "https://api.github.com/users/zaneclaes/orgs",
      "repos_url": "https://api.github.com/users/zaneclaes/repos",
      "events_url": "https://api.github.com/users/zaneclaes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zaneclaes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-21T13:26:54Z",
    "updated_at": "2018-02-21T13:26:54Z",
    "author_association": "NONE",
    "body": "Thank you for triaging, @ncteisen and @jtattermusch . I would very much appreciate any recommendations or direction you might provide in attempts to successfully bring GRPC to Unity game development.\r\n\r\nAt the recommendation of a friend, I have attempted to use [DockCross](**https://github.com/dockcross/dockcross**) to compile the C# plugin for the Android arm architecture, but quickly ran into the problem of `dotnet` dependencies. Before I get sucked into the wormhole of trying to create a perfect Docker container that has all the right dependencies to compile the CSharp plugin for ARMv7, do you think that this is the right road to head down? If not, do you have a better recommendation?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/368061327",
    "html_url": "https://github.com/grpc/grpc/issues/14402#issuecomment-368061327",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14402",
    "id": 368061327,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODA2MTMyNw==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-23T16:32:07Z",
    "updated_at": "2018-02-23T16:32:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "@zaneclaes  thanks for experimenting with the crosscompiling.  I think using a docker image with the right environment to crosscompile for android is a good idea (especially because we are using docker quite extensively for grpc testing already, so if you could provide a well curated Dockerfile, we would be able put tests in place for the work that's done - or even automate the building of grpc_csharp_ext.so in the future).\r\n\r\nI'm pretty sure other developers have been able to build grpc C core on ARM before - see my comment here https://github.com/grpc/grpc/issues/1620#issuecomment-368057678 (perhaps you can join forces).\r\n\r\nBtw, once you have some success, please share your work somewhere so others can build on top of your results - I suspect that we have several developers trying to achieve the same thing but I haven't seen much collaboration between the individual engineers. If we all join forces I think we'll be able to tackle this much more easily.\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/368062868",
    "html_url": "https://github.com/grpc/grpc/issues/14402#issuecomment-368062868",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14402",
    "id": 368062868,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODA2Mjg2OA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-23T16:37:17Z",
    "updated_at": "2018-02-23T16:37:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "@zaneclaes some ideas for your docker experiments:\r\n1. can't you just take the  standard docker image for dotnet and just install android native SDK into that image, which would give you both working dotnet and android native SDK.\r\n2. When you are building grpc_csharp_ext.so (just the native library) - you actually don't need dotnet at all. You can have a 2-step build - first step builds the native library   and the other step just takes the native library produced before and builds the nuget file (if the nuget file is what you need for running on unity)."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/368066503",
    "html_url": "https://github.com/grpc/grpc/issues/14402#issuecomment-368066503",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14402",
    "id": 368066503,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODA2NjUwMw==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-23T16:48:36Z",
    "updated_at": "2018-02-23T16:48:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here's some additional resources on compiling on ARM:\r\n\r\nWe've actually successfully setup the native library compilation for Node.js and Python. Here are the PRs:\r\nhttps://github.com/grpc/grpc/pull/11457/files (uses crosscompiler, see the PR for command line arguments to use)\r\nhttps://github.com/grpc/grpc/pull/11108/files (uses qemu based crosscompiler for ARM).\r\n\r\nhttps://github.com/murgatroid99/grpc/blob/17e016869a22b13b1f568ec534444928ff136a8e/tools/dockerfile/grpc_artifact_linux_x64/Dockerfile#L107\r\n\r\nhttps://github.com/grpc/grpc/blob/a2310c00005bdaa9066e70d8af45dc1739bd7b44/tools/dockerfile/grpc_artifact_linux_armv7/Dockerfile\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/368920459",
    "html_url": "https://github.com/grpc/grpc/issues/14402#issuecomment-368920459",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14402",
    "id": 368920459,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODkyMDQ1OQ==",
    "user": {
      "login": "zaneclaes",
      "id": 2084821,
      "node_id": "MDQ6VXNlcjIwODQ4MjE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2084821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zaneclaes",
      "html_url": "https://github.com/zaneclaes",
      "followers_url": "https://api.github.com/users/zaneclaes/followers",
      "following_url": "https://api.github.com/users/zaneclaes/following{/other_user}",
      "gists_url": "https://api.github.com/users/zaneclaes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zaneclaes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zaneclaes/subscriptions",
      "organizations_url": "https://api.github.com/users/zaneclaes/orgs",
      "repos_url": "https://api.github.com/users/zaneclaes/repos",
      "events_url": "https://api.github.com/users/zaneclaes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zaneclaes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-27T15:39:49Z",
    "updated_at": "2018-02-27T15:39:49Z",
    "author_association": "NONE",
    "body": "Thanks so much @jtattermusch . I'm afraid I'm in a bit over my head, and have (embarrassingly) sunk dozens of hours into this already, but let me describe where I'm at and maybe you can provide a few more tips...\r\n\r\nFirst, the only thing I need is the `libgrpc_csharp_ext.so` file compiled for arm-v7a; so your \"step 2\" is not needed. I used the `dockcross` open-source project and modified their `android-arm` Dockerfile to build `./dockcross-android-arm`. With this, I'm trying to cross-compile with: `./dockcross-android-arm make grpc_csharp_ext -B`\r\n\r\nThe first thing I run into is `/usr/arm-linux-androideabi/bin/arm-linux-androideabi-ld: -pthread: unknown option`. Based upon some StackOverflow searches, I gather Android NDK may not support this. If I comment out the following:\r\n```\r\n# LIBS = dl rt m pthread\r\n# LDFLAGS += -pthread\r\n```\r\nAs well as remove the `-Werror` flag, I get much further (albeit with warnings). It finally craps out at:\r\n```\r\n[CXX]     Compiling src/core/ext/transport/chttp2/transport/flow_control.cc\r\nsrc/core/ext/transport/chttp2/transport/flow_control.cc: In member function 'double grpc_core::chttp2::TransportFlowControl::TargetLogBdp()':\r\nsrc/core/ext/transport/chttp2/transport/flow_control.cc:326:44: error: 'log2' was not declared in this scope\r\n       1 + log2(bdp_estimator_.EstimateBdp()));\r\n```\r\n\r\nI'm a bit at a loss now =/"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/368924580",
    "html_url": "https://github.com/grpc/grpc/issues/14402#issuecomment-368924580",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14402",
    "id": 368924580,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODkyNDU4MA==",
    "user": {
      "login": "ncteisen",
      "id": 6148140,
      "node_id": "MDQ6VXNlcjYxNDgxNDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6148140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ncteisen",
      "html_url": "https://github.com/ncteisen",
      "followers_url": "https://api.github.com/users/ncteisen/followers",
      "following_url": "https://api.github.com/users/ncteisen/following{/other_user}",
      "gists_url": "https://api.github.com/users/ncteisen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ncteisen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ncteisen/subscriptions",
      "organizations_url": "https://api.github.com/users/ncteisen/orgs",
      "repos_url": "https://api.github.com/users/ncteisen/repos",
      "events_url": "https://api.github.com/users/ncteisen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ncteisen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-27T15:51:09Z",
    "updated_at": "2018-02-27T15:51:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "Going off a hunch here, but could you try changing that entire line to be:\r\n\r\n```\r\n  return AdjustForMemoryPressure(\r\n      grpc_resource_user_quota(grpc_endpoint_get_resource_user(t_->ep)),\r\n      1 + log2(static_cast<double>(bdp_estimator_.EstimateBdp())));\r\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/368998079",
    "html_url": "https://github.com/grpc/grpc/issues/14402#issuecomment-368998079",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14402",
    "id": 368998079,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODk5ODA3OQ==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-27T19:31:44Z",
    "updated_at": "2018-02-27T19:31:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "Not sure about how things work on android, but you might need the \"m\"  from `# LIBS = dl rt m pthread` back for log2 to be available (https://stackoverflow.com/questions/1033898/why-do-you-have-to-link-the-math-library-in-c)"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/369267933",
    "html_url": "https://github.com/grpc/grpc/issues/14402#issuecomment-369267933",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14402",
    "id": 369267933,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTI2NzkzMw==",
    "user": {
      "login": "zaneclaes",
      "id": 2084821,
      "node_id": "MDQ6VXNlcjIwODQ4MjE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2084821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zaneclaes",
      "html_url": "https://github.com/zaneclaes",
      "followers_url": "https://api.github.com/users/zaneclaes/followers",
      "following_url": "https://api.github.com/users/zaneclaes/following{/other_user}",
      "gists_url": "https://api.github.com/users/zaneclaes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zaneclaes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zaneclaes/subscriptions",
      "organizations_url": "https://api.github.com/users/zaneclaes/orgs",
      "repos_url": "https://api.github.com/users/zaneclaes/repos",
      "events_url": "https://api.github.com/users/zaneclaes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zaneclaes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-28T15:06:12Z",
    "updated_at": "2018-02-28T15:49:55Z",
    "author_association": "NONE",
    "body": "@ncteisen great guess! That gets me further, but indeed, @jtattermusch was correct... the same line ends up erroring, now with: `error: 'log2' was not declared in this scope`. Even after linking to `m`, it appears `log2` is [not part of Android, but there is a workaround](https://stackoverflow.com/questions/11080118/does-android-support-log2). This led me to this flag, which got me past the error:\r\n`CXXFLAGS += \"-Dlog2(x)=(log(x)/log(2))\"`\r\n\r\nNext I ran in to a `No such file or directory` error for `#include <openssl/rsa.h>` (later, I ran into a similar problem with `ares.h`). My problems ended up being a [lot like this question](https://github.com/grpc/grpc/issues/6925) -- I ended up needing to add the `AROPTS='-r'`, for example. However, I'm afraid I'm not sure I understand how I compile the third party libraries; there is no `Makefile` or `README` in the `third_party` directory. I get further if I naively add this to manually link to their headers...\r\n`CPPFLAGS := -Ithird_party/boringssl/include -Ithird_party/cares -Ithird_party/cares/cares $(CPPFLAGS)`\r\n\r\nBut I still end up with...\r\n```\r\n[LD]      Linking /work/libs/opt/libgrpc.so.5.0.0\r\n/usr/arm-linux-androideabi/bin/arm-linux-androideabi-ld: error: cannot find -lssl\r\n/usr/arm-linux-androideabi/bin/arm-linux-androideabi-ld: error: cannot find -lcrypto\r\n/usr/arm-linux-androideabi/bin/arm-linux-androideabi-ld: error: /work/objs/opt/src/core/lib/channel/channel_stack.o: requires unsupported dynamic reloc R_ARM_REL32; recompile with -fPIC\r\n/usr/arm-linux-androideabi/bin/arm-linux-androideabi-ld: error: /work/objs/opt/src/core/lib/channel/channel_stack_builder.o: requires unsupported dynamic reloc R_ARM_REL32; recompile with -fPIC\r\n/usr/arm-linux-androideabi/bin/arm-linux-androideabi-ld: error: /work/objs/opt/src/core/lib/http/parser.o: requires unsupported dynamic reloc R_ARM_REL32; recompile with -fPIC\r\n/usr/arm-linux-androideabi/bin/arm-linux-androideabi-ld: error: /work/objs/opt/src/core/lib/iomgr/call_combiner.o: requires unsupported dynamic reloc R_ARM_REL32; recompile with -fPIC\r\n/usr/arm-linux-androideabi/bin/arm-linux-androideabi-ld: error: /work/objs/opt/src/core/lib/iomgr/combiner.o: requires unsupported dynamic reloc R_ARM_REL32; recompile with -fPIC\r\n/usr/arm-linux-androideabi/bin/arm-linux-androideabi-ld: error: /work/objs/opt/src/core/lib/iomgr/ev_posix.o: requires unsupported dynamic reloc R_ARM_REL32; recompile with -fPIC\r\n/usr/arm-linux-androideabi/bin/arm-linux-androideabi-ld: error: /work/objs/opt/src/core/lib/iomgr/executor.o: requires unsupported dynamic reloc R_ARM_REL32; recompile with -fPIC\r\n/usr/arm-linux-androideabi/bin/arm-linux-androideabi-ld: error: /work/objs/opt/src/core/lib/iomgr/resource_quota.o: requires unsupported dynamic reloc R_ARM_REL32; recompile with -fPIC\r\n/usr/arm-linux-androideabi/bin/arm-linux-androideabi-ld: error: /work/objs/opt/src/core/lib/iomgr/tcp_posix.o: requires unsupported dynamic reloc R_ARM_REL32; recompile with -fPIC\r\n/usr/arm-linux-androideabi/bin/arm-linux-androideabi-ld: error: /work/objs/opt/src/core/lib/iomgr/timer_generic.o: requires unsupported dynamic reloc R_ARM_REL32; recompile with -fPIC\r\n/usr/arm-linux-androideabi/bin/arm-linux-androideabi-ld: error: /work/objs/opt/src/core/lib/surface/api_trace.o: requires unsupported dynamic reloc R_ARM_REL32; recompile with -fPIC\r\n/usr/arm-linux-androideabi/bin/arm-linux-androideabi-ld: error: /work/objs/opt/src/core/lib/surface/call.o: requires unsupported dynamic reloc R_ARM_REL32; recompile with -fPIC\r\n/usr/arm-linux-androideabi/bin/arm-linux-androideabi-ld: error: /work/objs/opt/src/core/lib/surface/completion_queue.o: requires unsupported dynamic reloc R_ARM_REL32; recompile with -fPIC\r\n/usr/arm-linux-androideabi/bin/arm-linux-androideabi-ld: error: /work/objs/opt/src/core/lib/surface/server.o: requires unsupported dynamic reloc R_ARM_REL32; recompile with -fPIC\r\n/usr/arm-linux-androideabi/bin/arm-linux-androideabi-ld: error: /work/objs/opt/src/core/lib/transport/bdp_estimator.o: requires unsupported dynamic reloc R_ARM_REL32; recompile with -fPIC\r\n/usr/arm-linux-androideabi/bin/arm-linux-androideabi-ld: error: /work/objs/opt/src/core/lib/transport/connectivity_state.o: requires unsupported dynamic reloc R_ARM_REL32; recompile with -fPIC\r\n/usr/arm-linux-androideabi/bin/arm-linux-androideabi-ld: error: /work/objs/opt/src/core/ext/transport/chttp2/transport/chttp2_transport.o: requires unsupported dynamic reloc R_ARM_REL32; recompile with -fPIC\r\n/usr/arm-linux-androideabi/bin/arm-linux-androideabi-ld: error: /work/objs/opt/src/core/ext/transport/chttp2/transport/flow_control.o: requires unsupported dynamic reloc R_ARM_REL32; recompile with -fPIC\r\n/usr/arm-linux-androideabi/bin/arm-linux-androideabi-ld: error: /work/objs/opt/src/core/ext/transport/chttp2/transport/stream_lists.o: requires unsupported dynamic reloc R_ARM_REL32; recompile with -fPIC\r\n/usr/arm-linux-androideabi/bin/arm-linux-androideabi-ld: error: /work/objs/opt/src/core/lib/security/credentials/plugin/plugin_credentials.o: requires unsupported dynamic reloc R_ARM_REL32; recompile with -fPIC\r\n/usr/arm-linux-androideabi/bin/arm-linux-androideabi-ld: error: /work/objs/opt/src/core/lib/security/transport/secure_endpoint.o: requires unsupported dynamic reloc R_ARM_REL32; recompile with -fPIC\r\n/usr/arm-linux-androideabi/bin/arm-linux-androideabi-ld: error: /work/objs/opt/src/core/tsi/transport_security.o: requires unsupported dynamic reloc R_ARM_REL32; recompile with -fPIC\r\n/usr/arm-linux-androideabi/bin/arm-linux-androideabi-ld: error: /work/objs/opt/src/core/ext/filters/client_channel/client_channel.o: requires unsupported dynamic reloc R_ARM_REL32; recompile with -fPIC\r\n/usr/arm-linux-androideabi/bin/arm-linux-androideabi-ld: error: /work/objs/opt/src/core/ext/transport/inproc/inproc_plugin.o: requires unsupported dynamic reloc R_ARM_REL32; recompile with -fPIC\r\n/usr/arm-linux-androideabi/bin/arm-linux-androideabi-ld: error: /work/objs/opt/src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.o: requires unsupported dynamic reloc R_ARM_REL32; recompile with -fPIC\r\n/usr/arm-linux-androideabi/bin/arm-linux-androideabi-ld: error: /work/objs/opt/src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.o: requires unsupported dynamic reloc R_ARM_REL32; recompile with -fPIC\r\n/usr/arm-linux-androideabi/bin/arm-linux-androideabi-ld: error: /work/objs/opt/src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.o: requires unsupported dynamic reloc R_ARM_REL32; recompile with -fPIC\r\nsrc/core/lib/channel/channel_stack.cc:26: error: undefined reference to '__dso_handle'\r\nsrc/core/lib/channel/channel_stack_builder.cc:26: error: undefined reference to '__dso_handle'\r\nsrc/core/lib/http/parser.cc:28: error: undefined reference to '__dso_handle'\r\nsrc/core/lib/iomgr/call_combiner.cc:27: error: undefined reference to '__dso_handle'\r\nMakefile:3323: recipe for target '/work/libs/opt/libgrpc.so.5.0.0' failed\r\nmake: *** [/work/libs/opt/libgrpc.so.5.0.0] Error 1\r\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/369647356",
    "html_url": "https://github.com/grpc/grpc/issues/14402#issuecomment-369647356",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14402",
    "id": 369647356,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTY0NzM1Ng==",
    "user": {
      "login": "zaneclaes",
      "id": 2084821,
      "node_id": "MDQ6VXNlcjIwODQ4MjE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2084821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zaneclaes",
      "html_url": "https://github.com/zaneclaes",
      "followers_url": "https://api.github.com/users/zaneclaes/followers",
      "following_url": "https://api.github.com/users/zaneclaes/following{/other_user}",
      "gists_url": "https://api.github.com/users/zaneclaes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zaneclaes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zaneclaes/subscriptions",
      "organizations_url": "https://api.github.com/users/zaneclaes/orgs",
      "repos_url": "https://api.github.com/users/zaneclaes/repos",
      "events_url": "https://api.github.com/users/zaneclaes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zaneclaes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-01T16:26:09Z",
    "updated_at": "2018-03-01T17:09:38Z",
    "author_association": "NONE",
    "body": "For reference I'm following this in the makefile:\r\n```\r\n# The steps for cross-compiling are as follows:\r\n# First, clone and make install of grpc using the native compilers for the host.\r\n# Also, install protoc (e.g., from a package like apt-get)\r\n# Then clone a fresh grpc for the actual cross-compiled build\r\n# Set the environment variable GRPC_CROSS_COMPILE to true\r\n# Set CC, CXX, LD, LDXX, AR, and STRIP to the cross-compiling binaries\r\n# Also set PROTOBUF_CONFIG_OPTS to indicate cross-compilation to protobuf (e.g.,\r\n#  PROTOBUF_CONFIG_OPTS=\"--host=arm-linux --with-protoc=/usr/local/bin/protoc\" )\r\n# Set HAS_PKG_CONFIG=false\r\n# To build tests, go to third_party/gflags and follow its ccmake instructions\r\n# Make sure that you enable building shared libraries and set your prefix to\r\n# something useful like /usr/local/cross\r\n# You will also need to set GRPC_CROSS_LDOPTS and GRPC_CROSS_AROPTS to hold\r\n# additional required arguments for LD and AR (examples below)\r\n# Then you can do a make from the cross-compiling fresh clone!\r\n#\r\n```\r\nI've started afresh following these instructions, adding more flags which seemed relevant. I make it through every step until the last. Based upon these instructions, the command I'm running is:\r\n```\r\n./dc-android-grpc make grpc_csharp_ext HAS_PKG_CONFIG=false GRPC_CROSS_COMPILE=true PROTOBUF_CONFIG_OPTS=\"--host=arm-linux --with-protoc=/usr/local/bin/protoc\"  GRPC_CROSS_AROPTS=\"rc --target=elf32-little\" HOST_CC=cc HOST_CXX=c++ HOST_LD=cc EMBED_CARES=true EMBED_ZLIB=true HOST_LDXX=c++ -B\r\n```\r\nThis gets rid of the `-lssl` and `-lcrypto` errors, but still leaves me with all of the `requires unsupported dynamic reloc R_ARM_REL32; recompile with -fPIC` and `undefined reference to '__dso_handle'` errors.\r\n\r\nThis seems odd because `CPPFLAGS` definitely includes `-fPIC`.\r\n\r\nHere's a gist with the entire output: https://gist.github.com/zaneclaes/6312bf9c984882d7c8256b2c298795f3"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/369889002",
    "html_url": "https://github.com/grpc/grpc/issues/14402#issuecomment-369889002",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14402",
    "id": 369889002,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTg4OTAwMg==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-02T10:49:01Z",
    "updated_at": "2018-03-02T10:49:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "@zaneclaes   have you seen this comment: https://github.com/grpc/grpc/issues/1620#issuecomment-369847174"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/369942250",
    "html_url": "https://github.com/grpc/grpc/issues/14402#issuecomment-369942250",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14402",
    "id": 369942250,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTk0MjI1MA==",
    "user": {
      "login": "zaneclaes",
      "id": 2084821,
      "node_id": "MDQ6VXNlcjIwODQ4MjE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2084821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zaneclaes",
      "html_url": "https://github.com/zaneclaes",
      "followers_url": "https://api.github.com/users/zaneclaes/followers",
      "following_url": "https://api.github.com/users/zaneclaes/following{/other_user}",
      "gists_url": "https://api.github.com/users/zaneclaes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zaneclaes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zaneclaes/subscriptions",
      "organizations_url": "https://api.github.com/users/zaneclaes/orgs",
      "repos_url": "https://api.github.com/users/zaneclaes/repos",
      "events_url": "https://api.github.com/users/zaneclaes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zaneclaes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-02T14:54:34Z",
    "updated_at": "2018-03-02T14:54:34Z",
    "author_association": "NONE",
    "body": "Success! For future searchers, full instructions follow...\r\n\r\n1. Checkout the grpc repo and do the usual `git submodule update --init`\r\n2. Make sure the Android NDK is installed at `$ANDROID_NDK`\r\n3. Modify `./grpc/CMakeLists.txt` to change the `_gRPC_ALLTARGETS_LIBRARIES` in `Unix` to not include `rt` or `pthread`. In my case, it now looks like:\r\n```\r\nif(_gRPC_PLATFORM_MAC)\r\n  set(_gRPC_ALLTARGETS_LIBRARIES ${CMAKE_DL_LIBS} m pthread)\r\nelseif(UNIX)\r\n  set(_gRPC_ALLTARGETS_LIBRARIES ${CMAKE_DL_LIBS} m)\r\nendif()\r\n```\r\n4. `cd ./grpc`\r\n5. Run:\r\n```\r\n cmake \\\r\n  -DCMAKE_SYSTEM_NAME=Android \\\r\n  -DCMAKE_SYSTEM_VERSION=15 \\\r\n  -DCMAKE_ANDROID_ARCH_ABI=armeabi-v7a \\\r\n  -DCMAKE_ANDROID_NDK=$ANDROID_NDK \\\r\n  -DCMAKE_ANDROID_STL_TYPE=c++_static \\\r\n  -DRUN_HAVE_POSIX_REGEX=0 \\\r\n  -DRUN_HAVE_STD_REGEX=0 \\\r\n  -DRUN_HAVE_STEADY_CLOCK=0 \\\r\n  -DCMAKE_BUILD_TYPE=Release\r\n```\r\n5. Run `make grpc_csharp_ext` ... on OSX, I also used `EMBED_OPENSSL=true`.\r\n6. Copy `./libgrpc_csharp_ext.so` to the necessary directory (i.e., `Assets/Plugins/Android/`)\r\n\r\nNote that I also ran into https://github.com/google/protobuf/issues/2719. I ended up commenting out the use of the native log function all together, and rewriting `NativeLogRedirector.cs` in my `Grpc.Core`.\r\n\r\nNote that in my build, I've also modified some of the Grpc Core to handle Unity's needs. I've got a full blog post on it going here: http://examinedself.com/cross-compile-grpc-unity/"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/369966442",
    "html_url": "https://github.com/grpc/grpc/issues/14402#issuecomment-369966442",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14402",
    "id": 369966442,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTk2NjQ0Mg==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-02T16:08:12Z",
    "updated_at": "2018-03-02T16:08:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "@zaneclaes nice work on the blogpost, very useful resources!  One thing I didn't see in the blogpost is a link to the diffs you've made to Grpc.Core (you're mentioning the changes you've done, but a full diff would be very useful - a link to your fork of Grpc.Core on github would be the best)."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/369969128",
    "html_url": "https://github.com/grpc/grpc/issues/14402#issuecomment-369969128",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14402",
    "id": 369969128,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTk2OTEyOA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-02T16:16:06Z",
    "updated_at": "2018-03-02T16:16:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "To encourage collaboration, I'm making the instructions available in the main repo:\r\nhttps://github.com/grpc/grpc/pull/14576\r\nThanks everyone for helping out!"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/369978293",
    "html_url": "https://github.com/grpc/grpc/issues/14402#issuecomment-369978293",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14402",
    "id": 369978293,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTk3ODI5Mw==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-02T16:44:42Z",
    "updated_at": "2018-03-02T16:44:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "I guess it's safe to close this issue now (as we have a way to compile now)."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/369983766",
    "html_url": "https://github.com/grpc/grpc/issues/14402#issuecomment-369983766",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14402",
    "id": 369983766,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTk4Mzc2Ng==",
    "user": {
      "login": "zaneclaes",
      "id": 2084821,
      "node_id": "MDQ6VXNlcjIwODQ4MjE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2084821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zaneclaes",
      "html_url": "https://github.com/zaneclaes",
      "followers_url": "https://api.github.com/users/zaneclaes/followers",
      "following_url": "https://api.github.com/users/zaneclaes/following{/other_user}",
      "gists_url": "https://api.github.com/users/zaneclaes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zaneclaes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zaneclaes/subscriptions",
      "organizations_url": "https://api.github.com/users/zaneclaes/orgs",
      "repos_url": "https://api.github.com/users/zaneclaes/repos",
      "events_url": "https://api.github.com/users/zaneclaes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zaneclaes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-02T17:02:44Z",
    "updated_at": "2018-03-02T17:02:44Z",
    "author_association": "NONE",
    "body": "Thanks @jtattermusch ! You're right, I should do a real fork of the library. There are a few more polish touches I'd like to make to the Core library before posting such a fork; right now, I've got each target compiling separately. The problem is bridging the UnmanagedLibrary to a static library in such a way that doesn't require preprocessor macros, since I wish to compile only one version of the library (as opposed to having one target compiled with `DllImport(\"__Internal\")`, one with `DllImport(\"grpc_csharp_ext\")`, etc). I'm hoping to get to it this weekend."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/369985580",
    "html_url": "https://github.com/grpc/grpc/issues/14402#issuecomment-369985580",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14402",
    "id": 369985580,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTk4NTU4MA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-02T17:08:29Z",
    "updated_at": "2018-03-02T17:08:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "@zaneclaes  feel free to share whatever work-in-progress you might have. It would help me to see what pieces I could easily cherrypick into upstream gRPC (my mileage with gRPC c# codebase is pretty good so I'm sure I'd know what cleanup to do ;-) ). If you have two forks currently, that's fine too."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/369985998",
    "html_url": "https://github.com/grpc/grpc/issues/14402#issuecomment-369985998",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14402",
    "id": 369985998,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTk4NTk5OA==",
    "user": {
      "login": "zaneclaes",
      "id": 2084821,
      "node_id": "MDQ6VXNlcjIwODQ4MjE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2084821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zaneclaes",
      "html_url": "https://github.com/zaneclaes",
      "followers_url": "https://api.github.com/users/zaneclaes/followers",
      "following_url": "https://api.github.com/users/zaneclaes/following{/other_user}",
      "gists_url": "https://api.github.com/users/zaneclaes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zaneclaes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zaneclaes/subscriptions",
      "organizations_url": "https://api.github.com/users/zaneclaes/orgs",
      "repos_url": "https://api.github.com/users/zaneclaes/repos",
      "events_url": "https://api.github.com/users/zaneclaes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zaneclaes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-02T17:09:45Z",
    "updated_at": "2018-03-02T17:09:45Z",
    "author_association": "NONE",
    "body": "Okay, will do ASAP! Not sitting in front of the project at the moment."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/369986834",
    "html_url": "https://github.com/grpc/grpc/issues/14402#issuecomment-369986834",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14402",
    "id": 369986834,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTk4NjgzNA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-02T17:12:23Z",
    "updated_at": "2018-03-02T17:12:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "@zaneclaes  thanks! Btw, preprocessor macros are not necessarily a bad thing  - there's going to be more considerations in play. I'll basically try to think of what would be the best way to define DllImports and native delegates for all the platform we'd want to support (and if it becomes too repetitive, we can use other approaches like codegenerating platform-specific definitions from a template)."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/369987785",
    "html_url": "https://github.com/grpc/grpc/issues/14402#issuecomment-369987785",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14402",
    "id": 369987785,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTk4Nzc4NQ==",
    "user": {
      "login": "zaneclaes",
      "id": 2084821,
      "node_id": "MDQ6VXNlcjIwODQ4MjE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2084821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zaneclaes",
      "html_url": "https://github.com/zaneclaes",
      "followers_url": "https://api.github.com/users/zaneclaes/followers",
      "following_url": "https://api.github.com/users/zaneclaes/following{/other_user}",
      "gists_url": "https://api.github.com/users/zaneclaes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zaneclaes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zaneclaes/subscriptions",
      "organizations_url": "https://api.github.com/users/zaneclaes/orgs",
      "repos_url": "https://api.github.com/users/zaneclaes/repos",
      "events_url": "https://api.github.com/users/zaneclaes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zaneclaes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-02T17:15:31Z",
    "updated_at": "2018-03-02T18:20:24Z",
    "author_association": "NONE",
    "body": "Very true. More accurately described, the problem is that I'd like to use the Unity defines which already come prepackaged for each platform instead of building multiple Grpc.Core targets for each Unity platform. However, doing so means that we need to either (1) make the Grpc.Core code live in the actual Unity project [*no*] or (2) bridge the defines from Unity into the Grpc.Core DLL's code. I'm not sure if (2) even makes sense, so instead, I was naively thinking to build 3 different bridge (one of each flavor of import), and use a runtime flag (set by Unity) to switch which one ends up being loaded in the Native bridge."
  }
]
