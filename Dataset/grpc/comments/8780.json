[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/262122054",
    "html_url": "https://github.com/grpc/grpc/issues/8780#issuecomment-262122054",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8780",
    "id": 262122054,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjEyMjA1NA==",
    "user": {
      "login": "soltanmm-google",
      "id": 21180148,
      "node_id": "MDQ6VXNlcjIxMTgwMTQ4",
      "avatar_url": "https://avatars2.githubusercontent.com/u/21180148?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/soltanmm-google",
      "html_url": "https://github.com/soltanmm-google",
      "followers_url": "https://api.github.com/users/soltanmm-google/followers",
      "following_url": "https://api.github.com/users/soltanmm-google/following{/other_user}",
      "gists_url": "https://api.github.com/users/soltanmm-google/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/soltanmm-google/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/soltanmm-google/subscriptions",
      "organizations_url": "https://api.github.com/users/soltanmm-google/orgs",
      "repos_url": "https://api.github.com/users/soltanmm-google/repos",
      "events_url": "https://api.github.com/users/soltanmm-google/events{/privacy}",
      "received_events_url": "https://api.github.com/users/soltanmm-google/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-22T01:34:53Z",
    "updated_at": "2016-11-22T01:34:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "Oh, hey, cool, Python's *only* 4x slower than C++.\r\n\r\nI'm going to assume that you were running this all locally and that there was no network variability. Then you have a loop going, wherein Python is going to increment reference counts, decrement reference counts, allocate, deallocate, hash-lookup, acquire/release the GIL, and error check, again and again and again (and that's all in the language runtime, outside anything gRPC can do without becoming an even thinner wrapper around the core and telling users to not implement their servers in pure Python), things that C++ as a language doesn't do without the developer's explicit instruction (and thus things that C++ devs can avoid). So, Python's going to be slower, and for idiomatic implementations of the same algorithm vanilla-Python will almost always (I'd even say 'always') be slower.\r\n\r\nI can't specifically point at anything without running profiles, but it's unreasonable to expect Python implementations to be competitive performance-wise with tuned C/C++, even if it's only a thin-wrapper."
  }
]
