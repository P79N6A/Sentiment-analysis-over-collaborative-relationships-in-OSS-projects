[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/274584549",
    "html_url": "https://github.com/grpc/grpc/issues/9443#issuecomment-274584549",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9443",
    "id": 274584549,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDU4NDU0OQ==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-23T19:04:16Z",
    "updated_at": "2017-01-23T19:04:16Z",
    "author_association": "MEMBER",
    "body": "We do not support per-request/response deadlines. The deadline is set and sent to the server only at the beginning of a stream. For what you're trying to do, you would need to implement it yourself in JavaScript. For example, you could set a timeout that would cancel the call (and do whatever else you want to do when your deadline expires), then remove it whenever you get a response and re-create it whenever you send another request."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/275106763",
    "html_url": "https://github.com/grpc/grpc/issues/9443#issuecomment-275106763",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9443",
    "id": 275106763,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTEwNjc2Mw==",
    "user": {
      "login": "jjblum",
      "id": 6081782,
      "node_id": "MDQ6VXNlcjYwODE3ODI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6081782?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jjblum",
      "html_url": "https://github.com/jjblum",
      "followers_url": "https://api.github.com/users/jjblum/followers",
      "following_url": "https://api.github.com/users/jjblum/following{/other_user}",
      "gists_url": "https://api.github.com/users/jjblum/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jjblum/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jjblum/subscriptions",
      "organizations_url": "https://api.github.com/users/jjblum/orgs",
      "repos_url": "https://api.github.com/users/jjblum/repos",
      "events_url": "https://api.github.com/users/jjblum/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jjblum/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-25T13:24:50Z",
    "updated_at": "2017-01-25T13:24:50Z",
    "author_association": "NONE",
    "body": "I implemented something as you suggested. Works well enough, but the ClientDuplexStream emits an error on the cancel() call. Specifically, inside _emitStatusIfDone() if the grpc status is not just OK. What is the purpose behind emitting an error after a cancel? Is there a way to cancel the rpc without emitting and handling that error?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/276169584",
    "html_url": "https://github.com/grpc/grpc/issues/9443#issuecomment-276169584",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9443",
    "id": 276169584,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjE2OTU4NA==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-30T19:47:31Z",
    "updated_at": "2017-01-30T19:47:31Z",
    "author_association": "MEMBER",
    "body": "That error is emitted whenever a call terminates without completing successfully. Cancelling a call causes that.\r\n\r\nIf a call is cancelled, that error will be emitted. But keep in mind that a very similar error would be emitted to the same event handlers if the call's deadline is exceeded instead."
  }
]
