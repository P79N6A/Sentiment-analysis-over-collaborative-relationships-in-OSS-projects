[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/320301228",
    "html_url": "https://github.com/grpc/grpc/issues/12075#issuecomment-320301228",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12075",
    "id": 320301228,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDMwMTIyOA==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-04T17:03:27Z",
    "updated_at": "2017-08-04T17:03:27Z",
    "author_association": "MEMBER",
    "body": "I am not sure that we want to commit to avoiding anonymous structs in all public APIs.  We certainly have no test infrastructure to enforce this, so even if this PR goes in, there's no guarantee that parts of it won't be undone later, or that we won't add new anonymous structs in the future.  And it does make the structures a bit bulkier and harder to read.\r\n\r\nThose aren't insurmountable problems -- we could live with the bulky structs and could avoid anonymous structs at least on a best-effort basis -- but I think that in order to justify doing this, we need to know that the benefit is worth the hassle.  How many users will ever actually benefit from this?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/320303818",
    "html_url": "https://github.com/grpc/grpc/issues/12075#issuecomment-320303818",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12075",
    "id": 320303818,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDMwMzgxOA==",
    "user": {
      "login": "yallop",
      "id": 1736496,
      "node_id": "MDQ6VXNlcjE3MzY0OTY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1736496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yallop",
      "html_url": "https://github.com/yallop",
      "followers_url": "https://api.github.com/users/yallop/followers",
      "following_url": "https://api.github.com/users/yallop/following{/other_user}",
      "gists_url": "https://api.github.com/users/yallop/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yallop/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yallop/subscriptions",
      "organizations_url": "https://api.github.com/users/yallop/orgs",
      "repos_url": "https://api.github.com/users/yallop/repos",
      "events_url": "https://api.github.com/users/yallop/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yallop/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-04T17:14:53Z",
    "updated_at": "2017-08-04T17:14:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "I suppose it'd be possible to add test infrastructure, but I think it'd be overkill to do so.  It wouldn't be disastrous if new anonymous structs appeared in future, since they can always be given tags if needed, without breaking anything.\r\n\r\nI think the real question is about cost/benefit.  The cost is pretty small: while there are some extra names to read, the names are useful in themselves, since they make it possible to refer to the struct types in conversation, documentation, etc.  And the benefit is clear and immediate -- for example, I would benefit from named structs right now, since I'm in the middle of building OCaml gRPC bindings.\r\n\r\nIf the names in #12059 are too long, I've no objection to changing them, and welcome suggestions for better names."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/320306762",
    "html_url": "https://github.com/grpc/grpc/issues/12075#issuecomment-320306762",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12075",
    "id": 320306762,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDMwNjc2Mg==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-04T17:27:10Z",
    "updated_at": "2017-08-04T17:27:10Z",
    "author_association": "MEMBER",
    "body": "I agree that the real question here is cost/benefit and that the costs aren't huge.  But I am not sure there's much benefit here either, and I am reluctant to take any cost unless there's benefit for more than one user.  This is why I asked how many users will ever actually benefit from this -- if there are other users that will benefit from this, then it may make more sense to do this.  But if it's just one, I'm not sure it's worth it."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/320313752",
    "html_url": "https://github.com/grpc/grpc/issues/12075#issuecomment-320313752",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12075",
    "id": 320313752,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDMxMzc1Mg==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-04T17:56:52Z",
    "updated_at": "2017-08-04T17:58:43Z",
    "author_association": "MEMBER",
    "body": "Hi there, I'd like to suggest that we can allow this. This will break on a best-effort basis, but language-binding-writers already know that grpc core has no guarantee of a stable API (I think it's already on v 4.x compared to 1.5 at C++). And when it does break, the language-binding community will submit a followon PR to do what they need. If this enables new bindings that we don't have to support anyway, I don't see the downside for us. Just to be clear, #12059 in no way changes how we access the struct's or anything else related to member properties. It just gives a typename for things that previously had no typename."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/320314777",
    "html_url": "https://github.com/grpc/grpc/issues/12075#issuecomment-320314777",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12075",
    "id": 320314777,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDMxNDc3Nw==",
    "user": {
      "login": "dgquintas",
      "id": 120217,
      "node_id": "MDQ6VXNlcjEyMDIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/120217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgquintas",
      "html_url": "https://github.com/dgquintas",
      "followers_url": "https://api.github.com/users/dgquintas/followers",
      "following_url": "https://api.github.com/users/dgquintas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgquintas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgquintas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgquintas/subscriptions",
      "organizations_url": "https://api.github.com/users/dgquintas/orgs",
      "repos_url": "https://api.github.com/users/dgquintas/repos",
      "events_url": "https://api.github.com/users/dgquintas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgquintas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-04T18:00:47Z",
    "updated_at": "2017-08-04T18:00:47Z",
    "author_association": "NONE",
    "body": "I agree with @vjpai . There's no downside, and in my opinion the code becomes more readable, not less. In addition, we don't know how many users this benefits. It doesn't hurt any one. It feels it's up upsides and no downside."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/320329526",
    "html_url": "https://github.com/grpc/grpc/issues/12075#issuecomment-320329526",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12075",
    "id": 320329526,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDMyOTUyNg==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-04T19:05:42Z",
    "updated_at": "2017-08-04T19:05:42Z",
    "author_association": "MEMBER",
    "body": "Okay.  I'm still a little concerned that this will cause problems down the road, but it seems that I'm in the minority on this, so I won't stand in the way."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/320380794",
    "html_url": "https://github.com/grpc/grpc/issues/12075#issuecomment-320380794",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12075",
    "id": 320380794,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDM4MDc5NA==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-05T00:48:31Z",
    "updated_at": "2017-08-05T00:48:31Z",
    "author_association": "MEMBER",
    "body": "Well, I don't want to run roughshod over your opinion either; can we summon @a11r for some additional consultation? My understanding is that there's not a huge rush to merge this at master right this second or anything like that.\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/320480517",
    "html_url": "https://github.com/grpc/grpc/issues/12075#issuecomment-320480517",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12075",
    "id": 320480517,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDQ4MDUxNw==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-06T01:55:07Z",
    "updated_at": "2017-08-06T02:00:41Z",
    "author_association": "MEMBER",
    "body": "Also, @markdroth, we could add this to sanity checks:\r\n\r\n```sh\r\negrep -Irn '^ *(struct|union) *{' include/grpc | diff - /dev/null\r\n```\r\n\r\nAs long as we're clang-formatted, that should solve the issue of struct's without typenames or typedefs in the public headers.\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/320980510",
    "html_url": "https://github.com/grpc/grpc/issues/12075#issuecomment-320980510",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12075",
    "id": 320980510,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDk4MDUxMA==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-08T14:52:11Z",
    "updated_at": "2017-08-08T14:52:11Z",
    "author_association": "MEMBER",
    "body": "If we can add a reliable sanity check for this, and if we use shorter names for the structs (I'll add some suggestions in the PR), then I'll be okay with this.\r\n\r\n@vjpai, I think your suggested check would also need to somehow exclude internal-only structs, like the one discussed in the PR."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/320983321",
    "html_url": "https://github.com/grpc/grpc/issues/12075#issuecomment-320983321",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12075",
    "id": 320983321,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDk4MzMyMQ==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-08T15:00:42Z",
    "updated_at": "2017-08-08T15:00:42Z",
    "author_association": "MEMBER",
    "body": "Just looked at the PR again.  Given that the struct definitions will have global scope, I guess the proposed names are about as short as we can reasonably use, so I guess I don't have any suggestions on how to improve this. :(\r\n\r\nAnyway, I can live with this if we can write a reasonable sanity checker for it."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/320984806",
    "html_url": "https://github.com/grpc/grpc/issues/12075#issuecomment-320984806",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12075",
    "id": 320984806,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDk4NDgwNg==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-08T15:05:32Z",
    "updated_at": "2017-08-08T15:05:32Z",
    "author_association": "MEMBER",
    "body": "The problem with excluding internal-only structs is that we can't tell what is internal only at the sanity-checker level. The only clue that we have is its directory, so clearly we won't check anything besides include/grpc and its subdirectories. "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/320987285",
    "html_url": "https://github.com/grpc/grpc/issues/12075#issuecomment-320987285",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12075",
    "id": 320987285,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDk4NzI4NQ==",
    "user": {
      "login": "yallop",
      "id": 1736496,
      "node_id": "MDQ6VXNlcjE3MzY0OTY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1736496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yallop",
      "html_url": "https://github.com/yallop",
      "followers_url": "https://api.github.com/users/yallop/followers",
      "following_url": "https://api.github.com/users/yallop/following{/other_user}",
      "gists_url": "https://api.github.com/users/yallop/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yallop/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yallop/subscriptions",
      "organizations_url": "https://api.github.com/users/yallop/orgs",
      "repos_url": "https://api.github.com/users/yallop/repos",
      "events_url": "https://api.github.com/users/yallop/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yallop/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-08T15:13:22Z",
    "updated_at": "2017-08-08T15:13:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here's one possible way to satisfy the sanity check regex:\r\n````C\r\nstruct /* internal */ {\r\n```"
  }
]
