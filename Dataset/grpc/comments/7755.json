[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/240516650",
    "html_url": "https://github.com/grpc/grpc/issues/7755#issuecomment-240516650",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7755",
    "id": 240516650,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDUxNjY1MA==",
    "user": {
      "login": "yang-g",
      "id": 10122250,
      "node_id": "MDQ6VXNlcjEwMTIyMjUw",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10122250?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yang-g",
      "html_url": "https://github.com/yang-g",
      "followers_url": "https://api.github.com/users/yang-g/followers",
      "following_url": "https://api.github.com/users/yang-g/following{/other_user}",
      "gists_url": "https://api.github.com/users/yang-g/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yang-g/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yang-g/subscriptions",
      "organizations_url": "https://api.github.com/users/yang-g/orgs",
      "repos_url": "https://api.github.com/users/yang-g/repos",
      "events_url": "https://api.github.com/users/yang-g/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yang-g/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-17T19:14:02Z",
    "updated_at": "2016-08-17T19:14:02Z",
    "author_association": "MEMBER",
    "body": "Shutdown will wait for existing rpc's to finish. You can use the version of\nShutdown with deadline to cancel the pending rpc's when the deadline\nexpires.\n\nOn Tue, Aug 16, 2016 at 4:39 PM, Vink notifications@github.com wrote:\n\n> I have a modified sample code for the async hellostreamingworld. In this\n> example, my rpc has streaming request and streaming response. as seen here\n> https://github.com/vink007/grpc_streaming_test/blob/master/protos/hellostreamingworld.proto\n> \n> Here is the async server\n> https://github.com/vink007/grpc_streaming_test/blob/master/cpp/helloworld/multi_greeter_async_server.cc\n> .\n> and the corresponding client\n> https://github.com/vink007/grpc_streaming_test/blob/master/cpp/helloworld/multi_greeter_client.cc\n> .\n> \n> Once the server is up, I run the client that is not behaving properly.\n> (the lines commented here\n> https://github.com/vink007/grpc_streaming_test/blob/master/cpp/helloworld/multi_greeter_client.cc#L83\n> causes my server-side CallData object to enter into READ state and issue a\n> \"ServerAsyncReaderWriter::Read(&req_, this)\". After that I try to bring\n> down my server with \"Ctrl-C\" or \"kill -SIGINT processIdHere\". The signal\n> handler is invoked and calls \"server_->Shutdown() followed by\n> \"cq_->Shutdown()\" as can be seen here\n> https://github.com/vink007/grpc_streaming_test/blob/master/cpp/helloworld/multi_greeter_async_server.cc#L196\n> .\n> \n> The call \"server->Shutdown()\" hangs and never returns. Note that the\n> CallData statemachine has issued a Read() and waiting on the completion\n> queue.\n> \n> I have tried with scheduling a thread instead of executing shutdown in the\n> signal handler, but it still wont shutdown cleanly.\n> \n> â€”\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/grpc/grpc/issues/7755, or mute the thread\n> https://github.com/notifications/unsubscribe-auth/AJp0CmR-UODpSTYAgydkEcZ15Qi_gAqTks5qgkoigaJpZM4Jl9O-\n> .\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/243874764",
    "html_url": "https://github.com/grpc/grpc/issues/7755#issuecomment-243874764",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7755",
    "id": 243874764,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Mzg3NDc2NA==",
    "user": {
      "login": "vink007",
      "id": 5241977,
      "node_id": "MDQ6VXNlcjUyNDE5Nzc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5241977?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vink007",
      "html_url": "https://github.com/vink007",
      "followers_url": "https://api.github.com/users/vink007/followers",
      "following_url": "https://api.github.com/users/vink007/following{/other_user}",
      "gists_url": "https://api.github.com/users/vink007/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vink007/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vink007/subscriptions",
      "organizations_url": "https://api.github.com/users/vink007/orgs",
      "repos_url": "https://api.github.com/users/vink007/repos",
      "events_url": "https://api.github.com/users/vink007/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vink007/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-31T19:31:31Z",
    "updated_at": "2016-08-31T19:31:31Z",
    "author_association": "NONE",
    "body": "Yes, that works.\nI was hoping that all the outstanding rpc's will return with 'ok' as false in the _cq.next() call. This will let me cleanup any held resources for that request.\n"
  }
]
