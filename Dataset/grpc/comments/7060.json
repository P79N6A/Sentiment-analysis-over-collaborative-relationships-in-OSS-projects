[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/228483693",
    "html_url": "https://github.com/grpc/grpc/issues/7060#issuecomment-228483693",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7060",
    "id": 228483693,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyODQ4MzY5Mw==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-24T23:00:11Z",
    "updated_at": "2016-06-24T23:00:11Z",
    "author_association": "MEMBER",
    "body": "Also @ctiller how should `host` be documented? From the core API it kind of looks like a namespace-like thing that travels with the method name entering on the invocation side and emerging on the service side. Does its value alter the behavior of core in any way?\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/229480154",
    "html_url": "https://github.com/grpc/grpc/issues/7060#issuecomment-229480154",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7060",
    "id": 229480154,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTQ4MDE1NA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-29T20:35:36Z",
    "updated_at": "2016-06-29T20:35:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "1. I do not think we need `host` exposed for GA if there's a non-breaking way to add it later (I don't think it's exposed in all wrapped languages anyway - e.gg C# support it on the client side only and it can be added to the server side later).\n2. setting host per-stub should be fully sufficient. \"host\" is a concept of virtual server and looks like it only makes sense to use it for a service as a whole (so stub should work fine), not per-method.\n\nAd documentation:\nWith using the host parameter, you can basically have several \"virtual\" host on the same server.\nI THINK the \"host\" parameter basically gets translated into an \"authority\" HTTP2 header (which should be enough info for users that want to dig deeper\").\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/229480395",
    "html_url": "https://github.com/grpc/grpc/issues/7060#issuecomment-229480395",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7060",
    "id": 229480395,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTQ4MDM5NQ==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-29T20:36:25Z",
    "updated_at": "2016-06-29T20:36:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "@nathanielmanistaatgoogle  feel free to remove the milestone if you think we can add it in a non-breaking fashion later.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/229516588",
    "html_url": "https://github.com/grpc/grpc/issues/7060#issuecomment-229516588",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7060",
    "id": 229516588,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTUxNjU4OA==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-29T23:10:24Z",
    "updated_at": "2016-06-29T23:10:24Z",
    "author_association": "MEMBER",
    "body": "I think we're close to confirmation that on the client side `host` can be a post-GA addition of an optional parameter to stub construction, but I'm less clear on the server side. @ctiller: should `host` be an optional parameter added to [`add_generic_rpc_handlers`](https://github.com/grpc/grpc/blob/01d7dbac1f747ca45135f1d79c38656db0701ec6/src/python/grpcio/grpc/__init__.py#L846) (and also to generated methods like `add_MyServiceServicer_to_server`) or do we intend to support use cases such as server code sending five streaming responses, examining the host value, taking some action based on the host value, and then sending five more streaming responses than it would have sent had the host value been different?\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/229707287",
    "html_url": "https://github.com/grpc/grpc/issues/7060#issuecomment-229707287",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7060",
    "id": 229707287,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTcwNzI4Nw==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-30T16:08:37Z",
    "updated_at": "2016-06-30T16:08:37Z",
    "author_association": "MEMBER",
    "body": "I think a per service registration scheme is sufficient (with a wildcard any host default)\n"
  }
]
