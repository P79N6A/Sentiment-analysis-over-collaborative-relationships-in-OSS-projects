[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/217688026",
    "html_url": "https://github.com/grpc/grpc/issues/6484#issuecomment-217688026",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6484",
    "id": 217688026,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzY4ODAyNg==",
    "user": {
      "login": "sunwangme",
      "id": 1357031,
      "node_id": "MDQ6VXNlcjEzNTcwMzE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1357031?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sunwangme",
      "html_url": "https://github.com/sunwangme",
      "followers_url": "https://api.github.com/users/sunwangme/followers",
      "following_url": "https://api.github.com/users/sunwangme/following{/other_user}",
      "gists_url": "https://api.github.com/users/sunwangme/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sunwangme/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sunwangme/subscriptions",
      "organizations_url": "https://api.github.com/users/sunwangme/orgs",
      "repos_url": "https://api.github.com/users/sunwangme/repos",
      "events_url": "https://api.github.com/users/sunwangme/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sunwangme/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-08T03:03:11Z",
    "updated_at": "2016-05-08T03:03:11Z",
    "author_association": "NONE",
    "body": "i got it.timer-->channel->getstate(try_connect).\nand find one bug in python's pull thread.\nthe pull thread dont reconnect after shutdown.\n\n_connectivity_channel.py\n  def _poll_connectivity(self, low_channel, initial_try_to_connect):\n   ......\n    while True:\n      low_channel.watch_connectivity_state(\n          low_connectivity, time.time() + 0.2, completion_queue, None)\n      event = completion_queue.next()\n      with self._lock:\n        if not self._callbacks_and_connectivities and not self._try_to_connect:\n          self._polling = False\n          self._connectivity = None\n          completion_queue.shutdown()\n          break\n        try_to_connect = self._try_to_connect           //<--------\n        self._try_to_connect = False                         //<--------- dont reconnect after shutdown\n"
  }
]
