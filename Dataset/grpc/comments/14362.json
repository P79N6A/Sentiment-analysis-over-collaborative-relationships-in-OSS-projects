[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/370475106",
    "html_url": "https://github.com/grpc/grpc/issues/14362#issuecomment-370475106",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14362",
    "id": 370475106,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDQ3NTEwNg==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-05T16:23:17Z",
    "updated_at": "2018-03-05T16:23:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "Seen on master: \r\nhttps://sponge.corp.google.com/invocation?id=77c0694f-57ad-494f-8a66-aa3577ec92ad"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/370475416",
    "html_url": "https://github.com/grpc/grpc/issues/14362#issuecomment-370475416",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14362",
    "id": 370475416,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDQ3NTQxNg==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-05T16:24:12Z",
    "updated_at": "2018-03-05T16:24:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "@AspirinSJL , we occasionally see this on master and  it can be reproduced locally. Can you please take a look?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/370493099",
    "html_url": "https://github.com/grpc/grpc/issues/14362#issuecomment-370493099",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14362",
    "id": 370493099,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDQ5MzA5OQ==",
    "user": {
      "login": "AspirinSJL",
      "id": 3314176,
      "node_id": "MDQ6VXNlcjMzMTQxNzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3314176?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AspirinSJL",
      "html_url": "https://github.com/AspirinSJL",
      "followers_url": "https://api.github.com/users/AspirinSJL/followers",
      "following_url": "https://api.github.com/users/AspirinSJL/following{/other_user}",
      "gists_url": "https://api.github.com/users/AspirinSJL/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AspirinSJL/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AspirinSJL/subscriptions",
      "organizations_url": "https://api.github.com/users/AspirinSJL/orgs",
      "repos_url": "https://api.github.com/users/AspirinSJL/repos",
      "events_url": "https://api.github.com/users/AspirinSJL/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AspirinSJL/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-05T17:16:21Z",
    "updated_at": "2018-03-05T17:16:21Z",
    "author_association": "MEMBER",
    "body": "Sure, I'm checking it."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/370503873",
    "html_url": "https://github.com/grpc/grpc/issues/14362#issuecomment-370503873",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14362",
    "id": 370503873,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDUwMzg3Mw==",
    "user": {
      "login": "AspirinSJL",
      "id": 3314176,
      "node_id": "MDQ6VXNlcjMzMTQxNzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3314176?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AspirinSJL",
      "html_url": "https://github.com/AspirinSJL",
      "followers_url": "https://api.github.com/users/AspirinSJL/followers",
      "following_url": "https://api.github.com/users/AspirinSJL/following{/other_user}",
      "gists_url": "https://api.github.com/users/AspirinSJL/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AspirinSJL/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AspirinSJL/subscriptions",
      "organizations_url": "https://api.github.com/users/AspirinSJL/orgs",
      "repos_url": "https://api.github.com/users/AspirinSJL/repos",
      "events_url": "https://api.github.com/users/AspirinSJL/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AspirinSJL/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-05T17:49:46Z",
    "updated_at": "2018-03-05T17:49:46Z",
    "author_association": "MEMBER",
    "body": "I'm having problem building with asan after upgrading my OS. After ignoring all the make warnings and switching to clang-5.0, I'm still having numerous `undefined reference to `__sanitizer_cov_module_init'` issues. Trying to fix this first."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/370507790",
    "html_url": "https://github.com/grpc/grpc/issues/14362#issuecomment-370507790",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14362",
    "id": 370507790,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDUwNzc5MA==",
    "user": {
      "login": "AspirinSJL",
      "id": 3314176,
      "node_id": "MDQ6VXNlcjMzMTQxNzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3314176?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AspirinSJL",
      "html_url": "https://github.com/AspirinSJL",
      "followers_url": "https://api.github.com/users/AspirinSJL/followers",
      "following_url": "https://api.github.com/users/AspirinSJL/following{/other_user}",
      "gists_url": "https://api.github.com/users/AspirinSJL/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AspirinSJL/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AspirinSJL/subscriptions",
      "organizations_url": "https://api.github.com/users/AspirinSJL/orgs",
      "repos_url": "https://api.github.com/users/AspirinSJL/repos",
      "events_url": "https://api.github.com/users/AspirinSJL/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AspirinSJL/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-05T18:02:23Z",
    "updated_at": "2018-03-05T18:02:23Z",
    "author_association": "MEMBER",
    "body": "Fixed the asan build issue. Checking the original problem now."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/370512150",
    "html_url": "https://github.com/grpc/grpc/issues/14362#issuecomment-370512150",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14362",
    "id": 370512150,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDUxMjE1MA==",
    "user": {
      "login": "AspirinSJL",
      "id": 3314176,
      "node_id": "MDQ6VXNlcjMzMTQxNzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3314176?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AspirinSJL",
      "html_url": "https://github.com/AspirinSJL",
      "followers_url": "https://api.github.com/users/AspirinSJL/followers",
      "following_url": "https://api.github.com/users/AspirinSJL/following{/other_user}",
      "gists_url": "https://api.github.com/users/AspirinSJL/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AspirinSJL/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AspirinSJL/subscriptions",
      "organizations_url": "https://api.github.com/users/AspirinSJL/orgs",
      "repos_url": "https://api.github.com/users/AspirinSJL/repos",
      "events_url": "https://api.github.com/users/AspirinSJL/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AspirinSJL/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-05T18:16:24Z",
    "updated_at": "2018-03-05T18:16:24Z",
    "author_association": "MEMBER",
    "body": "@sreecha Actually, when I am trying to reproduce this issue, I find that the test failure is overwhelmed by #12917. The flakiness is around 1/400. Maybe we need to fix that one first?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/371751069",
    "html_url": "https://github.com/grpc/grpc/issues/14362#issuecomment-371751069",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14362",
    "id": 371751069,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTc1MTA2OQ==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-09T08:50:06Z",
    "updated_at": "2018-03-09T08:56:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "Recent failures on master:\r\nhttps://sponge.corp.google.com/invocation?id=7d34afc2-21ef-4a26-be86-5d20f3b81d90 (poll)\r\nhttps://sponge.corp.google.com/invocation?id=e2e774bd-ac0d-4922-9fa2-27e4679e82cd (poll)\r\nhttps://sponge.corp.google.com/invocation?id=77c0694f-57ad-494f-8a66-aa3577ec92ad (poll)\r\nhttps://sponge.corp.google.com/invocation?id=b067b883-94af-4ec4-ad5f-fe92d766ab2d (epollex)\r\nhttps://sponge.corp.google.com/invocation?id=ec0f05db-89f5-4b51-b1cf-222f6d8174ec (epollex)\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/371751796",
    "html_url": "https://github.com/grpc/grpc/issues/14362#issuecomment-371751796",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14362",
    "id": 371751796,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTc1MTc5Ng==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-09T08:53:13Z",
    "updated_at": "2018-03-09T08:53:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "There seems to be two distinct failures:\r\nFirst one is `sync.cc:93: void gpr_ref_non_zero(gpr_refcount *): Assertion 'prior > 0' failed.`:\r\n```\r\nD0302 21:26:27.169451562   30611 end2end_test.cc:217]        TestScenario{use_proxy=true, inproc=false, credentials='INSECURE_CREDENTIALS'}\r\nD0302 21:26:27.169780577   30611 ev_posix.cc:142]            Using polling engine: poll\r\nD0302 21:26:27.169837144   30611 dns_resolver.cc:331]        Using native dns resolver\r\nD0302 21:26:27.172992463   30611 ev_posix.cc:142]            Using polling engine: poll\r\nD0302 21:26:27.173081934   30611 dns_resolver.cc:331]        Using native dns resolver\r\nI0302 21:26:27.173439099   30611 server_builder.cc:269]      Synchronous server. Num CQs: 4, Min pollers: 1, Max Pollers: 2, CQ timeout (msec): 10\r\nI0302 21:26:27.179491964   30611 server_builder.cc:269]      Synchronous server. Num CQs: 4, Min pollers: 1, Max Pollers: 2, CQ timeout (msec): 10\r\nI0302 21:26:27.182784893   30611 subchannel.cc:607]          New connected subchannel at 0x603000023bf0 for subchannel 0x61600008d980\r\nend2end_test: src/core/lib/gpr/sync.cc:93: void gpr_ref_non_zero(gpr_refcount *): Assertion `prior > 0' failed.\r\n```\r\n\r\nand the other one is a memory leak (or a heap-use-after-free)."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/371759463",
    "html_url": "https://github.com/grpc/grpc/issues/14362#issuecomment-371759463",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14362",
    "id": 371759463,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTc1OTQ2Mw==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-09T09:25:28Z",
    "updated_at": "2018-03-09T09:28:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "When trying to reproduce locally, all I'm getting is \r\n```\r\nI0309 10:15:46.813531448  142565 subchannel.cc:607]          New connected subchannel at 0x60300006d9c0 for subchannel 0x61600005e280\r\ntest/cpp/end2end/end2end_test.cc:1300: Failure\r\n      Expected: StatusCode::DEADLINE_EXCEEDED\r\n      Which is: 4\r\nTo be equal to: s.error_code()\r\n      Which is: 0\r\n```\r\nnot sure if that's because  the 40ms server sleep in the test case is not sufficient or if there's some newly introduce change has made the test more prone to failure.\r\nhttps://github.com/grpc/grpc/blob/59ea0ae3ebcca0aef5a15c5aa5b4d27b7f3fc9c4/test/cpp/end2end/end2end_test.cc#L1293\r\n\r\nUpdate:\r\nafter increasing the `set_server_sleep_us` I was able to reproduce locally the `sync.cc:93: void gpr_ref_non_zero(gpr_refcount *): Assertion 'prior > 0' failed.` issue."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/371810178",
    "html_url": "https://github.com/grpc/grpc/issues/14362#issuecomment-371810178",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14362",
    "id": 371810178,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTgxMDE3OA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-09T13:20:56Z",
    "updated_at": "2018-03-09T13:27:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "The leaks seem to be caused by failure to cleanly shutdown tcp-server-connection (in which case there's an obvious leak). I checked and some of the sponge logs and they are also reporting this problem.\r\n\r\n`D0306 06:13:31.618856486    5647 iomgr.cc:127]               Failed to free 1 iomgr objects before shutdown deadline: memory leaks are likely\r\nD0306 06:13:31.618919351    5647 iomgr.cc:75]                LEAKED OBJECT: tcp-server-connection:ipv4:127.0.0.1:53600 fd=14 0x61100004ffa8`\r\n\r\n(which could also explain why we aren't seeing failures for opt and dbg - although I thought that for our tests we are setting a flag that whenever we fail to free iomgr objects on time, that results in assertion error precisely because we want to be able to catch these error).\r\n\r\n```\r\nD0309 14:00:02.889189881   73534 iomgr.cc:96]                Waiting for 1 iomgr objects to be destroyed\r\nD0309 14:00:03.890059685   73534 iomgr.cc:96]                Waiting for 1 iomgr objects to be destroyed\r\nD0309 14:00:04.891072058   73534 iomgr.cc:96]                Waiting for 1 iomgr objects to be destroyed\r\nD0309 14:00:05.891947877   73534 iomgr.cc:96]                Waiting for 1 iomgr objects to be destroyed\r\nD0309 14:00:06.892810588   73534 iomgr.cc:96]                Waiting for 1 iomgr objects to be destroyed\r\nD0309 14:00:07.893724424   73534 iomgr.cc:96]                Waiting for 1 iomgr objects to be destroyed\r\nD0309 14:00:08.894589311   73534 iomgr.cc:96]                Waiting for 1 iomgr objects to be destroyed\r\nD0309 14:00:09.895448848   73534 iomgr.cc:96]                Waiting for 1 iomgr objects to be destroyed\r\nD0309 14:00:10.896345572   73534 iomgr.cc:96]                Waiting for 1 iomgr objects to be destroyed\r\nD0309 14:00:11.897251412   73534 iomgr.cc:127]               Failed to free 1 iomgr objects before shutdown deadline: memory leaks are likely\r\nD0309 14:00:11.897303182   73534 iomgr.cc:75]                LEAKED OBJECT: tcp-server-connection:ipv4:127.0.0.1:54766 fd=15 0x60d0000137e8\r\nD0309 14:00:11.897362021   73534 metadata.cc:135]            WARNING: 1 metadata elements were leaked\r\nD0309 14:00:11.897387537   73534 metadata.cc:135]            WARNING: 1 metadata elements were leaked\r\nD0309 14:00:11.897400514   73534 metadata.cc:135]            WARNING: 1 metadata elements were leaked\r\nD0309 14:00:11.897410692   73534 metadata.cc:135]            WARNING: 1 metadata elements were leaked\r\nD0309 14:00:11.897427074   73534 slice_intern.cc:315]        WARNING: 2 metadata strings were leaked\r\nD0309 14:00:11.897452034   73534 slice_intern.cc:322]        LEAKED: 66 6f 6f 2e 74 65 73 74 2e 79 6f 75 74 75 62 65 2e 63 6f 6d 'foo.test.youtube.com'\r\nD0309 14:00:11.897470103   73534 slice_intern.cc:322]        LEAKED: 31 32 37 2e 30 2e 30 2e 31 3a 31 34 39 35 33 '127.0.0.1:14953'\r\nD0309 14:00:11.897484861   73534 slice_intern.cc:315]        WARNING: 1 metadata strings were leaked\r\nD0309 14:00:11.897507697   73534 slice_intern.cc:322]        LEAKED: 2f 67 72 70 63 2e 74 65 73 74 69 6e 67 2e 64 75 70 6c 69 63 61 74 65 2e 45 63 68 6f 54 65 73 74 53 65 72 76 69 63 65 2f 52 65 73 70 6f 6e 73 65 53 74 72 65 61 6d '/grpc.testing.duplicate.EchoTestService/ResponseStream'\r\nD0309 14:00:11.897519274   73534 slice_intern.cc:315]        WARNING: 1 metadata strings were leaked\r\nD0309 14:00:11.897539794   73534 slice_intern.cc:322]        LEAKED: 2f 67 72 70 63 2e 74 65 73 74 69 6e 67 2e 45 63 68 6f 54 65 73 74 53 65 72 76 69 63 65 2f 52 65 71 75 65 73 74 53 74 72 65 61 6d '/grpc.testing.EchoTestService/RequestStream'\r\nD0309 14:00:11.897550324   73534 slice_intern.cc:315]        WARNING: 1 metadata strings were leaked\r\nD0309 14:00:11.897566487   73534 slice_intern.cc:322]        LEAKED: 2f 67 72 70 63 2e 74 65 73 74 69 6e 67 2e 45 63 68 6f 54 65 73 74 53 65 72 76 69 63 65 2f 45 63 68 6f '/grpc.testing.EchoTestService/Echo'\r\nD0309 14:00:11.897577480   73534 slice_intern.cc:315]        WARNING: 2 metadata strings were leaked\r\nD0309 14:00:11.897599402   73534 slice_intern.cc:322]        LEAKED: 2f 67 72 70 63 2e 74 65 73 74 69 6e 67 2e 45 63 68 6f 54 65 73 74 53 65 72 76 69 63 65 2f 55 6e 69 6d 70 6c 65 6d 65 6e 74 65 64 '/grpc.testing.EchoTestService/Unimplemented'\r\nD0309 14:00:11.897627497   73534 slice_intern.cc:322]        LEAKED: 67 72 70 63 2d 63 2b 2b 2f 31 2e 31 31 2e 30 2d 64 65 76 20 67 72 70 63 2d 63 2f 36 2e 30 2e 30 2d 64 65 76 20 28 6c 69 6e 75 78 3b 20 63 68 74 74 70 32 3b 20 67 6f 72 67 65 6f 75 73 29 20 65 6e 64 32 65 6e 64 5f 74 65 73 74 'grpc-c++/1.11.0-dev grpc-c/6.0.0-dev (linux; chttp2; gorgeous) end2end_test'\r\nD0309 14:00:11.897638269   73534 slice_intern.cc:315]        WARNING: 1 metadata strings were leaked\r\nD0309 14:00:11.897654518   73534 slice_intern.cc:322]        LEAKED: 2f 67 72 70 63 2e 74 65 73 74 69 6e 67 2e 64 75 70 6c 69 63 61 74 65 2e 45 63 68 6f 54 65 73 74 53 65 72 76 69 63 65 2f 45 63 68 6f '/grpc.testing.duplicate.EchoTestService/Echo'\r\nD0309 14:00:11.897666824   73534 slice_intern.cc:315]        WARNING: 2 metadata strings were leaked\r\nD0309 14:00:11.897684496   73534 slice_intern.cc:322]        LEAKED: 2f 67 72 70 63 2e 74 65 73 74 69 6e 67 2e 45 63 68 6f 54 65 73 74 53 65 72 76 69 63 65 2f 52 65 73 70 6f 6e 73 65 53 74 72 65 61 6d '/grpc.testing.EchoTestService/ResponseStream'\r\nD0309 14:00:11.897695797   73534 slice_intern.cc:322]        LEAKED: 31 6d '1m'\r\nD0309 14:00:11.897706118   73534 slice_intern.cc:315]        WARNING: 1 metadata strings were leaked\r\nD0309 14:00:11.897722876   73534 slice_intern.cc:322]        LEAKED: 2f 67 72 70 63 2e 74 65 73 74 69 6e 67 2e 45 63 68 6f 54 65 73 74 53 65 72 76 69 63 65 2f 42 69 64 69 53 74 72 65 61 6d '/grpc.testing.EchoTestService/BidiStream'\r\n[       OK ] ProxyEnd2end/ProxyEnd2endTest.RpcDeadlineExpires/2 (10188 ms)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/371838820",
    "html_url": "https://github.com/grpc/grpc/issues/14362#issuecomment-371838820",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14362",
    "id": 371838820,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTgzODgyMA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-09T15:07:36Z",
    "updated_at": "2018-03-09T15:07:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here's a stacktrace for the `sync.cc:93: void gpr_ref_non_zero(gpr_refcount *): Assertion 'prior > 0' failed. ` issue. (from a local reproduction).\r\n\r\n```\r\n#0  0x00007f844b7b5fcf in raise () from /lib/x86_64-linux-gnu/libc.so.6\r\n#1  0x00007f844b7b73fa in abort () from /lib/x86_64-linux-gnu/libc.so.6\r\n#2  0x00007f844b7aee37 in __assert_fail_base () from /lib/x86_64-linux-gnu/libc.so.6\r\n#3  0x00007f844b7aeee2 in __assert_fail () from /lib/x86_64-linux-gnu/libc.so.6\r\n#4  0x000055e815e20e16 in gpr_ref_non_zero (r=0x7f842c00d7e0) at src/core/lib/gpr/sync.cc:93\r\n#5  0x000055e815e3c76f in grpc_stream_ref (refcount=0x7f842c00d7e0, reason=0x55e815fe09a9 \"propagate_cancel\") at src/core/lib/transport/transport.cc:50\r\n#6  0x000055e815e2a9de in grpc_call_internal_ref (c=0x7f842c00ce20, reason=0x55e815fe09a9 \"propagate_cancel\") at src/core/lib/surface/call.cc:500\r\n#7  0x000055e815e2cbca in post_batch_completion (bctl=0x7f842c007500) at src/core/lib/surface/call.cc:1230\r\n#8  0x000055e815e2cdbc in finish_batch_step (bctl=0x7f842c007500) at src/core/lib/surface/call.cc:1276\r\n#9  0x000055e815e2d9cd in finish_batch (bctlp=0x7f842c007500, error=0x0) at src/core/lib/surface/call.cc:1543\r\n#10 0x000055e815dd0e11 in exec_ctx_run (closure=0x7f842c007580, error=0x0) at src/core/lib/iomgr/exec_ctx.cc:40\r\n#11 0x000055e815dd4b9d in grpc_closure_run (file=0x55e815fe9c28 \"src/core/ext/filters/deadline/deadline_filter.cc\", line=137, c=0x7f842c007580, error=0x0)\r\n    at ./src/core/lib/iomgr/closure.h:258\r\n#12 0x000055e815e6255a in on_complete (arg=0x7f842c005a70, error=0x0) at src/core/ext/filters/deadline/deadline_filter.cc:137\r\n#13 0x000055e815dd0e11 in exec_ctx_run (closure=0x7f842c005b08, error=0x0) at src/core/lib/iomgr/exec_ctx.cc:40\r\n#14 0x000055e815dd121d in grpc_core::ExecCtx::Flush (this=0x7f84407f7d40) at src/core/lib/iomgr/exec_ctx.cc:128\r\n#15 0x000055e815ddbcf6 in run_some_timers () at src/core/lib/iomgr/timer_manager.cc:121\r\n#16 0x000055e815ddbfb6 in timer_main_loop () at src/core/lib/iomgr/timer_manager.cc:223\r\n#17 0x000055e815ddc0e3 in timer_thread (completed_thread_ptr=0x55e817e2e980) at src/core/lib/iomgr/timer_manager.cc:270\r\n#18 0x000055e815e2220a in grpc_core::(anonymous namespace)::ThreadInternalsPosix::<lambda(void*)>::operator()(void *) const (__closure=0x0, v=0x55e817e2d850)\r\n    at src/core/lib/gprpp/thd_posix.cc:105\r\n#19 0x000055e815e22233 in grpc_core::(anonymous namespace)::ThreadInternalsPosix::<lambda(void*)>::_FUN(void *) () at src/core/lib/gprpp/thd_posix.cc:108\r\n#20 0x00007f844cf02494 in start_thread (arg=0x7f84407f8700) at pthread_create.c:333\r\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/371839990",
    "html_url": "https://github.com/grpc/grpc/issues/14362#issuecomment-371839990",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14362",
    "id": 371839990,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTgzOTk5MA==",
    "user": {
      "login": "ncteisen",
      "id": 6148140,
      "node_id": "MDQ6VXNlcjYxNDgxNDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6148140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ncteisen",
      "html_url": "https://github.com/ncteisen",
      "followers_url": "https://api.github.com/users/ncteisen/followers",
      "following_url": "https://api.github.com/users/ncteisen/following{/other_user}",
      "gists_url": "https://api.github.com/users/ncteisen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ncteisen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ncteisen/subscriptions",
      "organizations_url": "https://api.github.com/users/ncteisen/orgs",
      "repos_url": "https://api.github.com/users/ncteisen/repos",
      "events_url": "https://api.github.com/users/ncteisen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ncteisen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-09T15:11:52Z",
    "updated_at": "2018-03-09T15:11:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "I was poking into this a few nights ago. As the logs above show, the crash comes from this line:\r\n\r\nhttps://github.com/grpc/grpc/blob/59ea0ae3ebcca0aef5a15c5aa5b4d27b7f3fc9c4/src/core/lib/surface/call.cc#L1230\r\n\r\nSo it looks like some race condition in which the server thinks it has child calls but doesn't."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/371850267",
    "html_url": "https://github.com/grpc/grpc/issues/14362#issuecomment-371850267",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14362",
    "id": 371850267,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTg1MDI2Nw==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-09T15:46:25Z",
    "updated_at": "2018-03-09T15:46:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ncteisen I think there is a child call (there's a proxy in place).  https://github.com/grpc/grpc/blob/59ea0ae3ebcca0aef5a15c5aa5b4d27b7f3fc9c4/test/cpp/end2end/end2end_test.cc#L177  (please doublecheck, you know the code better than I do)\r\n\r\nBut I agree that there's some kind of race - we're probably hitting some edge case in the parent - child propagation."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/371868184",
    "html_url": "https://github.com/grpc/grpc/issues/14362#issuecomment-371868184",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14362",
    "id": 371868184,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTg2ODE4NA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-09T16:44:32Z",
    "updated_at": "2018-03-09T16:44:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "the last line ` (null) 0x7f79a000d9d0:(nil)   REF 0->1 propagate_cancel`   is pretty odd.   It looks like the refcount object wasn't yet initialized or it was already destroyed. See the end of this comment for explanation why I think the refcount is not fully initialized yet.\r\n\r\nA failing test run:\r\n```\r\n[ RUN      ] ProxyEnd2end/ProxyEnd2endTest.RpcDeadlineExpires/1\r\nD0309 17:03:31.003112374  165243 end2end_test.cc:216]        TestScenario{use_proxy=true, inproc=false, credentials='ssl'}\r\nD0309 17:03:31.003189494  165243 ev_posix.cc:142]            Using polling engine: epollex\r\nD0309 17:03:31.003212709  165243 dns_resolver.cc:331]        Using native dns resolver\r\nD0309 17:03:31.005022120  165243 ev_posix.cc:142]            Using polling engine: epollex\r\nD0309 17:03:31.005051490  165243 dns_resolver.cc:331]        Using native dns resolver\r\nI0309 17:03:31.005113580  165243 server_builder.cc:269]      Synchronous server. Num CQs: 4, Min pollers: 1, Max Pollers: 2, CQ timeout (msec): 10\r\nI0309 17:03:31.008327986  165243 server_builder.cc:269]      Synchronous server. Num CQs: 4, Min pollers: 1, Max Pollers: 2, CQ timeout (msec): 10\r\nD0309 17:03:31.008730035  165243 transport.cc:43]            CLIENT_CHANNEL 0x561273ba09f0:0x561273ba0990   REF 1->2 call\r\nD0309 17:03:31.008752892  165243 transport.cc:43]            CALL_STACK 0x561273ba2ec0:0x561273ba2500   REF 1->2 deadline_timer\r\nD0309 17:03:31.008799705  165243 transport.cc:43]            CALL_STACK 0x561273ba2ec0:0x561273ba2500   REF 2->3 completion\r\nD0309 17:03:31.008814976  165243 transport.cc:43]            CLIENT_CHANNEL 0x561273ba09f0:0x561273ba0990   REF 2->3 resolver\r\nD0309 17:03:31.008978360  165888 subchannel_index.cc:189]    SUBCHANNEL: 0x7f79b8007f40     WEAK_REF 0x10000 -> 0x10001 [index_register]\r\nD0309 17:03:31.009013640  165888 subchannel_index.cc:189]    SUBCHANNEL: 0x7f79b80089e0     WEAK_REF 0x10000 -> 0x10001 [index_register]\r\nD0309 17:03:31.009026926  165888 subchannel_index.cc:111]    SUBCHANNEL: 0x7f79b8007f40     WEAK_REF 0x10001 -> 0x10002 [subchannel_index]\r\nD0309 17:03:31.009035505  165888 subchannel_index.cc:107]    SUBCHANNEL: 0x7f79b8007f40   WEAK_UNREF 0x10002 -> 0x10001 [subchannel_index]\r\nD0309 17:03:31.009044235  165888 transport.cc:43]            CLIENT_CHANNEL 0x561273ba09f0:0x561273ba0990   REF 3->4 re-resolution\r\nD0309 17:03:31.009055957  165888 transport.cc:43]            CLIENT_CHANNEL 0x561273ba09f0:0x561273ba0990   REF 4->5 watch_lb_policy\r\nD0309 17:03:31.009064693  165888 transport.cc:43]            CALL_STACK 0x561273ba2ec0:0x561273ba2500   REF 3->4 pick_callback\r\nD0309 17:03:31.009072719  165888 subchannel.cc:502]          SUBCHANNEL: 0x7f79b8007f40     WEAK_REF 0x10001 -> 0x10002 [external_state_watcher]\r\nD0309 17:03:31.009083865  165888 subchannel.cc:456]          SUBCHANNEL: 0x7f79b8007f40     WEAK_REF 0x10002 -> 0x10003 [connecting]\r\nD0309 17:03:31.009168348  165888 transport.cc:43]            CALL_STACK 0x561273ba2ec0:0x561273ba2500   REF 4->5 pick_callback_cancel\r\nD0309 17:03:31.009182202  165888 subchannel.cc:408]          SUBCHANNEL: 0x7f79b8007f40   WEAK_UNREF 0x10003 -> 0x10002 [external_state_watcher]\r\nD0309 17:03:31.009190239  165888 subchannel.cc:502]          SUBCHANNEL: 0x7f79b8007f40     WEAK_REF 0x10002 -> 0x10003 [external_state_watcher]\r\nD0309 17:03:31.009197438  165888 transport.cc:43]            CLIENT_CHANNEL 0x561273ba09f0:0x561273ba0990   REF 5->6 watch_lb_policy\r\nD0309 17:03:31.009203685  165888 transport.cc:57]            CLIENT_CHANNEL 0x561273ba09f0:0x561273ba0990 UNREF 6->5 watch_lb_policy\r\nD0309 17:03:31.009251853  165243 subchannel.cc:628]          SUBCHANNEL: 0x7f79b8007f40     WEAK_REF 0x10003 -> 0x10004 [on_subchannel_connected]\r\nI0309 17:03:31.009281043  165243 subchannel.cc:607]          New connected subchannel at 0x561273b9aaf0 for subchannel 0x7f79b8007f40\r\nD0309 17:03:31.009290701  165243 subchannel.cc:612]          SUBCHANNEL: 0x7f79b8007f40     WEAK_REF 0x10004 -> 0x10005 [state_watcher]\r\nD0309 17:03:31.009287717  165913 transport.cc:43]            SERVER_CHANNEL 0x7f79a8006300:0x7f79a80062a0   REF 1->2 connectivity\r\nD0309 17:03:31.009299984  165243 subchannel.cc:613]          SUBCHANNEL: 0x7f79b8007f40   WEAK_UNREF 0x10005 -> 0x10004 [connecting]\r\nD0309 17:03:31.009323832  165243 subchannel.cc:651]          SUBCHANNEL: 0x7f79b8007f40   WEAK_UNREF 0x10004 -> 0x10003 [connected]\r\nD0309 17:03:31.009332238  165243 subchannel.cc:408]          SUBCHANNEL: 0x7f79b8007f40   WEAK_UNREF 0x10003 -> 0x10002 [external_state_watcher]\r\nD0309 17:03:31.009376851  165243 subchannel_list.cc:45]      SUBCHANNEL: 0x7f79b80089e0 STRONG_UNREF 0x10001 -> 0x2 [selected_different_subchannel]\r\nD0309 17:03:31.009389565  165243 subchannel_index.cc:111]    SUBCHANNEL: 0x7f79b8007f40     WEAK_REF 0x10002 -> 0x10003 [subchannel_index]\r\nD0309 17:03:31.009399301  165243 subchannel_index.cc:107]    SUBCHANNEL: 0x7f79b8007f40   WEAK_UNREF 0x10003 -> 0x10002 [subchannel_index]\r\nD0309 17:03:31.009406419  165243 subchannel_index.cc:107]    SUBCHANNEL: 0x7f79b80089e0   WEAK_UNREF 0x2 -> 0x1 [subchannel_index]\r\nD0309 17:03:31.009414078  165243 subchannel.cc:252]          SUBCHANNEL: 0x7f79b80089e0   WEAK_UNREF 0x1 -> 0x0 [strong-unref]\r\nD0309 17:03:31.009421705  165243 subchannel.cc:502]          SUBCHANNEL: 0x7f79b8007f40     WEAK_REF 0x10002 -> 0x10003 [external_state_watcher]\r\nD0309 17:03:31.009432073  165243 transport.cc:43]            CLIENT_CHANNEL 0x561273ba09f0:0x561273ba0990   REF 5->6 watch_lb_policy\r\nD0309 17:03:31.009453753  165243 transport.cc:57]            CLIENT_CHANNEL 0x561273ba09f0:0x561273ba0990 UNREF 6->5 watch_lb_policy\r\nD0309 17:03:31.009468026  165243 transport.cc:57]            CALL_STACK 0x561273ba2ec0:0x561273ba2500 UNREF 5->4 pick_callback\r\nD0309 17:03:31.009488583  165243 ref_counted.h:103]          stream_refcount:0x561273b9aaf0 src/core/ext/filters/client_channel/subchannel.cc:790 ref 3 -> 4 subchannel_call\r\nD0309 17:03:31.009497954  165243 transport.cc:43]            CALL_STACK 0x561273bab120:0x561273bab110   REF 1->2 chttp2\r\nD0309 17:03:31.009515624  165243 transport.cc:43]            CALL_STACK 0x561273bab120:0x561273bab110   REF 2->3 perform_stream_op\r\nD0309 17:03:31.009526831  165243 transport.cc:43]            CALL_STACK 0x561273bab120:0x561273bab110   REF 3->4 chttp2_writing:become\r\nD0309 17:03:31.009538809  165243 transport.cc:57]            CALL_STACK 0x561273bab120:0x561273bab110 UNREF 4->3 perform_stream_op\r\nD0309 17:03:31.009590968  165243 transport.cc:57]            CALL_STACK 0x561273bab120:0x561273bab110 UNREF 3->2 chttp2_writing:end\r\nD0309 17:03:31.009618524  165910 transport.cc:43]            SERVER_CHANNEL 0x7f79a8006300:0x7f79a80062a0   REF 2->3 call\r\nD0309 17:03:31.009643435  165910 transport.cc:43]            CALL_STACK 0x7f79a0007730:0x7f79a0006d70   REF 1->2 chttp2\r\nD0309 17:03:31.009666318  165910 transport.cc:43]            CALL_STACK 0x7f79a0007730:0x7f79a0006d70   REF 2->3 completion\r\nD0309 17:03:31.009714592  165910 transport.cc:43]            CALL_STACK 0x7f79a0007730:0x7f79a0006d70   REF 3->4 perform_stream_op\r\nD0309 17:03:31.009750824  165910 transport.cc:57]            CALL_STACK 0x7f79a0007730:0x7f79a0006d70 UNREF 4->3 perform_stream_op\r\nD0309 17:03:31.009766600  165910 transport.cc:43]            CALL_STACK 0x7f79a0007730:0x7f79a0006d70   REF 3->4 deadline_timer\r\nD0309 17:03:31.009791220  165910 transport.cc:43]            CALL_STACK 0x7f79a0007730:0x7f79a0006d70   REF 4->5 completion\r\nD0309 17:03:31.009806645  165910 transport.cc:57]            CALL_STACK 0x7f79a0007730:0x7f79a0006d70 UNREF 5->4 completion\r\nD0309 17:03:31.009818246  165910 transport.cc:43]            CALL_STACK 0x7f79a0007730:0x7f79a0006d70   REF 4->5 perform_stream_op\r\nD0309 17:03:31.009836497  165910 transport.cc:57]            CALL_STACK 0x7f79a0007730:0x7f79a0006d70 UNREF 5->4 perform_stream_op\r\nD0309 17:03:31.009910269  165910 transport.cc:57]            CALL_STACK 0x7f79a0007730:0x7f79a0006d70 UNREF 4->3 completion\r\nD0309 17:03:31.009977098  165910 transport.cc:43]            CALL_STACK 0x7f79a0007730:0x7f79a0006d70   REF 3->4 completion\r\nD0309 17:03:31.009994851  165910 transport.cc:43]            CALL_STACK 0x7f79a0007730:0x7f79a0006d70   REF 4->5 perform_stream_op\r\nD0309 17:03:31.010031125  165910 transport.cc:57]            CALL_STACK 0x7f79a0007730:0x7f79a0006d70 UNREF 5->4 perform_stream_op\r\nD0309 17:03:31.010065163  165889 transport.cc:43]            CALL_STACK 0x561273bab120:0x561273bab110   REF 2->3 perform_stream_op\r\nD0309 17:03:31.010085597  165910 transport.cc:43]            CALL_STACK 0x7f79a0007730:0x7f79a0006d70   REF 4->5 child\r\nD0309 17:03:31.010088826  165889 transport.cc:43]            CALL_STACK 0x7f79a0007730:0x7f79a0006d70   REF 4->5 perform_stream_op\r\nD0309 17:03:31.010115723  165889 transport.cc:57]            CALL_STACK 0x561273ba2ec0:0x561273ba2500 UNREF 4->3 pick_callback_cancel\r\nD0309 17:03:31.010132611  165889 transport.cc:57]            CALL_STACK 0x561273bab120:0x561273bab110 UNREF 3->2 chttp2\r\nD0309 17:03:31.010140858  165889 transport.cc:57]            CALL_STACK 0x561273bab120:0x561273bab110 UNREF 2->1 perform_stream_op\r\nD0309 17:03:31.010149034  165889 transport.cc:57]            CALL_STACK 0x561273ba2ec0:0x561273ba2500 UNREF 3->2 deadline_timer\r\nD0309 17:03:31.010186242  165889 transport.cc:57]            CALL_STACK 0x7f79a0007730:0x7f79a0006d70 UNREF 6->5 chttp2\r\nD0309 17:03:31.010202353  165889 transport.cc:57]            CALL_STACK 0x7f79a0007730:0x7f79a0006d70 UNREF 5->4 perform_stream_op\r\nD0309 17:03:31.010216771  165889 transport.cc:43]            (null) 0x7f79a000d9d0:(nil)   REF 0->1 propagate_cancel\r\nend2end_test: src/core/lib/gpr/sync.cc:93: void gpr_ref_non_zero(gpr_refcount*): Assertion `prior > 0' failed.\r\n```\r\n\r\nInterestingly, in one of the successful test run, I saw this log where it looks like the refcount starts as not fully initialized but in the following log lines, it is already fully populated.\r\n```\r\n...\r\nD0309 17:14:02.802507683  168525 transport.cc:43]            CLIENT_CHANNEL 0x559e58f06cb0:0x559e58f06c50   REF 1->2 call\r\nD0309 17:14:02.802517948  168519 transport.cc:43]            (null) 0x7f91c000d730:(nil)   REF 0->1 propagate_cancel\r\nD0309 17:14:02.802531707  168525 transport.cc:43]            CALL_STACK 0x7f91c000d730:0x7f91c000cd70   REF 1->2 deadline_timer\r\nD0309 17:14:02.802534986  168519 transport.cc:43]            CALL_STACK 0x7f91c000d730:0x7f91c000cd70   REF 2->3 termination\r\nD0309 17:14:02.802548018  168525 transport.cc:57]            CALL_STACK 0x7f91c000d730:0x7f91c000cd70 UNREF 3->2 deadline_timer\r\nD0309 17:14:02.802550357  168519 transport.cc:57]            CALL_STACK 0x7f91c000d730:0x7f91c000cd70 UNREF 4->3 propagate_cancel\r\n...\r\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/371888418",
    "html_url": "https://github.com/grpc/grpc/issues/14362#issuecomment-371888418",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14362",
    "id": 371888418,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTg4ODQxOA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-09T17:45:08Z",
    "updated_at": "2018-03-09T17:45:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, I'm now 99% sure that the stream_refcount is getting initialized by another thread concurrently with the refcount being updated.\r\n\r\nThread 160601  calls  grpc_stream_ref_init  but thread 160560 is accessing it before it's fully populated.\r\n```\r\nD0309 18:18:22.534668087  160601 transport.cc:43]            CLIENT_CHANNEL 0x5629f305f500:0x5629f305f4a0   REF 1->2 call\r\nD0309 18:18:22.534677981  160560 transport.cc:43]            (null) 0x7f62a000d790:(nil)   REF 0->1 propagate_cancel\r\nI0309 18:18:22.534682411  160601 transport.cc:127]           grpc_stream_ref_init 0x7f62a000d790\r\nend2end_test: src/core/lib/gpr/sync.cc:93: void gpr_ref_non_zero(gpr_refcount*): Assertion `prior > 0' failed.\r\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/371894011",
    "html_url": "https://github.com/grpc/grpc/issues/14362#issuecomment-371894011",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14362",
    "id": 371894011,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTg5NDAxMQ==",
    "user": {
      "login": "ncteisen",
      "id": 6148140,
      "node_id": "MDQ6VXNlcjYxNDgxNDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6148140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ncteisen",
      "html_url": "https://github.com/ncteisen",
      "followers_url": "https://api.github.com/users/ncteisen/followers",
      "following_url": "https://api.github.com/users/ncteisen/following{/other_user}",
      "gists_url": "https://api.github.com/users/ncteisen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ncteisen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ncteisen/subscriptions",
      "organizations_url": "https://api.github.com/users/ncteisen/orgs",
      "repos_url": "https://api.github.com/users/ncteisen/repos",
      "events_url": "https://api.github.com/users/ncteisen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ncteisen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-09T18:00:36Z",
    "updated_at": "2018-03-09T18:00:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "Good point about the proxy... definitely will be child call.\r\n\r\nThe refcount modification is protected by `child_list_mu`. I bet the initialization code should be taking that lock, but is not"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/371899665",
    "html_url": "https://github.com/grpc/grpc/issues/14362#issuecomment-371899665",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14362",
    "id": 371899665,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTg5OTY2NQ==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-09T18:17:47Z",
    "updated_at": "2018-03-09T18:17:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think the rootcause is in `grpc_call_create`.\r\n\r\n1. While the new call is being initialized, if there's a parent call, the call is published in the parent's call child list (that's part is protected child_list_mu)\r\nhttps://github.com/grpc/grpc/blob/59ea0ae3ebcca0aef5a15c5aa5b4d27b7f3fc9c4/src/core/lib/surface/call.cc#L381\r\n\r\n2. But the call published is actually not fully initialized yet  - the next thing that's done is  actually initializing the call's  refcount  (which boils down to grpc_stream_ref_init).\r\nhttps://github.com/grpc/grpc/blob/59ea0ae3ebcca0aef5a15c5aa5b4d27b7f3fc9c4/src/core/lib/surface/call.cc#L447 \r\n\r\n3. Another thread takes hold of the parent's child list (which contained pointer to the ininitialized call) and if the timing is right and the parent call is just finalizing, it also accesses  the new call's  refcount - which is not fully initialized yet (there's a race).\r\n\r\nHere's a log with partial proof:\r\n```\r\nD0309 19:07:33.600651637  191558 transport.cc:57]            CALL_STACK 0x7fa59800b770:0x7fa59800adb0 UNREF 4->3 chttp2\r\nI0309 19:07:33.600663594  191527 call.cc:448]                calling grpc_call_stack_init from grpc_call_create. call: 0x7fa5a8002440, parent_call: 0x7fa59800d720\r\nD0309 19:07:33.600690298  190776 transport.cc:57]            CALL_STACK 0x55f8ed15f280:0x55f8ed15e8c0 UNREF 1->0 destroy\r\nD0309 19:07:33.600693093  191558 transport.cc:43]            (null) 0x7fa5a8002e00:(nil)   REF 0->1 propagate_cancel\r\nD0309 19:07:33.600714623  190776 transport.cc:57]            CALL_STACK 0x55f8ed166f00:0x55f8ed166ef0 UNREF 1->0 client_channel_destroy_call\r\nI0309 19:07:33.600702508  191527 transport.cc:127]           grpc_stream_ref_init 0x7fa5a8002e00 (initial_refs: 1)\r\nD0309 19:07:33.600725890  190776 ref_counted.h:124]          stream_refcount:0x55f8ed1604a0 src/core/ext/filters/client_channel/subchannel.cc:665 unref 3 -> 2 subchannel_call\r\nD0309 19:07:33.600736519  191527 transport.cc:43]            CALL_STACK 0x7fa5a8002e00:0x7fa5a8002440   REF 1->2 deadline_timer\r\nD0309 19:07:33.600743309  190776 transport.cc:57]            CLIENT_CHANNEL 0x55f8ed15cea0:0x55f8ed15ce40 UNREF 5->4 call\r\nD0309 19:07:33.600753604  191527 transport.cc:57]            CALL_STACK 0x7fa5a8002e00:0x7fa5a8002440 UNREF 2->1 deadline_timer\r\nD0309 19:07:33.600775007  191527 transport.cc:43]            CALL_STACK 0x7fa5a8002e00:0x7fa5a8002440   REF 1->2 completion\r\nD0309 19:07:33.600786062  191527 transport.cc:43]            CALL_STACK 0x7fa5a8002e00:0x7fa5a8002440   REF 2->3 termination\r\nD0309 19:07:33.600796804  191527 transport.cc:43]            CALL_STACK 0x7fa5a8002e00:0x7fa5a8002440   REF 3->4 termination\r\nD0309 19:07:33.600815730  191527 transport.cc:57]            CALL_STACK 0x7fa5a8002e00:0x7fa5a8002440 UNREF 4->3 termination\r\nD0309 19:07:33.600822001  191527 transport.cc:57]            CALL_STACK 0x7fa5a8002e00:0x7fa5a8002440 UNREF 3->2 termination\r\nD0309 19:07:33.600828055  191527 transport.cc:57]            CALL_STACK 0x7fa5a8002e00:0x7fa5a8002440 UNREF 2->1 completion\r\nend2end_test: src/core/lib/gpr/sync.cc:93: void gpr_ref_non_zero(gpr_refcount*): Assertion `prior > 0' failed.\r\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/371901181",
    "html_url": "https://github.com/grpc/grpc/issues/14362#issuecomment-371901181",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14362",
    "id": 371901181,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTkwMTE4MQ==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-09T18:21:37Z",
    "updated_at": "2018-03-09T18:21:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ncteisen @AspirinSJL  feel free to take over from here. I think I rootcaused the problem correctly but the fix might need some reoganizing of grpc_call_create and I don't understand the performance consequences of that doing that very well - so I'll better leave this to domain experts."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/371906645",
    "html_url": "https://github.com/grpc/grpc/issues/14362#issuecomment-371906645",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14362",
    "id": 371906645,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTkwNjY0NQ==",
    "user": {
      "login": "AspirinSJL",
      "id": 3314176,
      "node_id": "MDQ6VXNlcjMzMTQxNzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3314176?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AspirinSJL",
      "html_url": "https://github.com/AspirinSJL",
      "followers_url": "https://api.github.com/users/AspirinSJL/followers",
      "following_url": "https://api.github.com/users/AspirinSJL/following{/other_user}",
      "gists_url": "https://api.github.com/users/AspirinSJL/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AspirinSJL/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AspirinSJL/subscriptions",
      "organizations_url": "https://api.github.com/users/AspirinSJL/orgs",
      "repos_url": "https://api.github.com/users/AspirinSJL/repos",
      "events_url": "https://api.github.com/users/AspirinSJL/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AspirinSJL/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-09T18:37:20Z",
    "updated_at": "2018-03-09T18:37:20Z",
    "author_association": "MEMBER",
    "body": "Thanks, @jtattermusch, for finding the root cause! I'm sorry that I'm not very familiar with the transport and surface code. @ncteisen do you want to continue to fix this? Also CCing @kpayson64 since he is the new owner of the surface component."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/371908294",
    "html_url": "https://github.com/grpc/grpc/issues/14362#issuecomment-371908294",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14362",
    "id": 371908294,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTkwODI5NA==",
    "user": {
      "login": "ncteisen",
      "id": 6148140,
      "node_id": "MDQ6VXNlcjYxNDgxNDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6148140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ncteisen",
      "html_url": "https://github.com/ncteisen",
      "followers_url": "https://api.github.com/users/ncteisen/followers",
      "following_url": "https://api.github.com/users/ncteisen/following{/other_user}",
      "gists_url": "https://api.github.com/users/ncteisen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ncteisen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ncteisen/subscriptions",
      "organizations_url": "https://api.github.com/users/ncteisen/orgs",
      "repos_url": "https://api.github.com/users/ncteisen/repos",
      "events_url": "https://api.github.com/users/ncteisen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ncteisen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-09T18:43:26Z",
    "updated_at": "2018-03-09T18:43:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think that analysis is correct. It certainly matches up with the data. I can take a look at this for the rest of the day, but am OOO all next week, so if the fix is not trivial, I will have to pass it off"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/371910306",
    "html_url": "https://github.com/grpc/grpc/issues/14362#issuecomment-371910306",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14362",
    "id": 371910306,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTkxMDMwNg==",
    "user": {
      "login": "AspirinSJL",
      "id": 3314176,
      "node_id": "MDQ6VXNlcjMzMTQxNzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3314176?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AspirinSJL",
      "html_url": "https://github.com/AspirinSJL",
      "followers_url": "https://api.github.com/users/AspirinSJL/followers",
      "following_url": "https://api.github.com/users/AspirinSJL/following{/other_user}",
      "gists_url": "https://api.github.com/users/AspirinSJL/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AspirinSJL/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AspirinSJL/subscriptions",
      "organizations_url": "https://api.github.com/users/AspirinSJL/orgs",
      "repos_url": "https://api.github.com/users/AspirinSJL/repos",
      "events_url": "https://api.github.com/users/AspirinSJL/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AspirinSJL/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-09T18:50:48Z",
    "updated_at": "2018-03-09T18:50:48Z",
    "author_association": "MEMBER",
    "body": "@ncteisen sounds good. If it's not fixed, I will continue to fix it."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/372266126",
    "html_url": "https://github.com/grpc/grpc/issues/14362#issuecomment-372266126",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14362",
    "id": 372266126,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjI2NjEyNg==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-12T10:45:05Z",
    "updated_at": "2018-03-12T10:45:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "FTR, this is the command I've been using for local debugging:\r\n`GRPC_TRACE=stream_refcount GRPC_ABORT_ON_LEAKS=true tools/run_tests/run_tests.py -l c++ -cdbg -r \".*RpcDeadlineExpires\" -j 30 -n inf -S` (it takes several minutes to reproduce)"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/372379452",
    "html_url": "https://github.com/grpc/grpc/issues/14362#issuecomment-372379452",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14362",
    "id": 372379452,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjM3OTQ1Mg==",
    "user": {
      "login": "AspirinSJL",
      "id": 3314176,
      "node_id": "MDQ6VXNlcjMzMTQxNzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3314176?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AspirinSJL",
      "html_url": "https://github.com/AspirinSJL",
      "followers_url": "https://api.github.com/users/AspirinSJL/followers",
      "following_url": "https://api.github.com/users/AspirinSJL/following{/other_user}",
      "gists_url": "https://api.github.com/users/AspirinSJL/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AspirinSJL/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AspirinSJL/subscriptions",
      "organizations_url": "https://api.github.com/users/AspirinSJL/orgs",
      "repos_url": "https://api.github.com/users/AspirinSJL/repos",
      "events_url": "https://api.github.com/users/AspirinSJL/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AspirinSJL/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-12T16:47:01Z",
    "updated_at": "2018-03-12T16:47:01Z",
    "author_association": "MEMBER",
    "body": "I'm looking into it. But since I'm new to this part of code, I need to take some time to get familiar with the code first, so please expect the fixing time to be a little longer."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/372474611",
    "html_url": "https://github.com/grpc/grpc/issues/14362#issuecomment-372474611",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14362",
    "id": 372474611,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjQ3NDYxMQ==",
    "user": {
      "login": "AspirinSJL",
      "id": 3314176,
      "node_id": "MDQ6VXNlcjMzMTQxNzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3314176?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AspirinSJL",
      "html_url": "https://github.com/AspirinSJL",
      "followers_url": "https://api.github.com/users/AspirinSJL/followers",
      "following_url": "https://api.github.com/users/AspirinSJL/following{/other_user}",
      "gists_url": "https://api.github.com/users/AspirinSJL/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AspirinSJL/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AspirinSJL/subscriptions",
      "organizations_url": "https://api.github.com/users/AspirinSJL/orgs",
      "repos_url": "https://api.github.com/users/AspirinSJL/repos",
      "events_url": "https://api.github.com/users/AspirinSJL/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AspirinSJL/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-12T21:49:55Z",
    "updated_at": "2018-03-12T21:49:55Z",
    "author_association": "MEMBER",
    "body": "The use-before-init problem can be solved by extending the time that the call creation thread holds the mutex.\r\n\r\nThe flakiness significantly drops, but still exists for another refcounting issue. It seems that somewhere else we have a use-after-destroy problem. Trying to figure out who is reffing.\r\n\r\n```\r\nD0312 14:41:34.781092091  102549 transport.cc:43]            CALL_STACK 0x55ba9388bc80:0x55ba9388b2c0   REF 3->4 termination\r\nD0312 14:41:34.781134497  102549 transport.cc:57]            CALL_STACK 0x55ba9388bc80:0x55ba9388b2c0 UNREF 4->3 termination\r\nD0312 14:41:34.781141133  102549 transport.cc:57]            CALL_STACK 0x55ba9388bc80:0x55ba9388b2c0 UNREF 3->2 termination\r\nD0312 14:41:34.781156489   79159 transport.cc:57]            CALL_STACK 0x55ba9388bc80:0x55ba9388b2c0 UNREF 2->1 completion\r\nD0312 14:41:34.781177536   79159 transport.cc:57]            CALL_STACK 0x55ba9388bc80:0x55ba9388b2c0 UNREF 1->0 destroy\r\nD0312 14:41:34.781187997   79159 transport.cc:57]            CLIENT_CHANNEL 0x55ba93889190:0x55ba93889130 UNREF 5->4 call\r\nend2end_test: src/core/lib/gpr/sync.cc:93: void gpr_ref_non_zero(gpr_refcount*): Assertion `prior > 0' failed.\r\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/372476693",
    "html_url": "https://github.com/grpc/grpc/issues/14362#issuecomment-372476693",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14362",
    "id": 372476693,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjQ3NjY5Mw==",
    "user": {
      "login": "AspirinSJL",
      "id": 3314176,
      "node_id": "MDQ6VXNlcjMzMTQxNzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3314176?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AspirinSJL",
      "html_url": "https://github.com/AspirinSJL",
      "followers_url": "https://api.github.com/users/AspirinSJL/followers",
      "following_url": "https://api.github.com/users/AspirinSJL/following{/other_user}",
      "gists_url": "https://api.github.com/users/AspirinSJL/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AspirinSJL/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AspirinSJL/subscriptions",
      "organizations_url": "https://api.github.com/users/AspirinSJL/orgs",
      "repos_url": "https://api.github.com/users/AspirinSJL/repos",
      "events_url": "https://api.github.com/users/AspirinSJL/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AspirinSJL/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-12T21:58:09Z",
    "updated_at": "2018-03-12T21:58:09Z",
    "author_association": "MEMBER",
    "body": "Actually, that might still be a use-before-init issue, if we are reffing a new call."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/372515111",
    "html_url": "https://github.com/grpc/grpc/issues/14362#issuecomment-372515111",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14362",
    "id": 372515111,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjUxNTExMQ==",
    "user": {
      "login": "AspirinSJL",
      "id": 3314176,
      "node_id": "MDQ6VXNlcjMzMTQxNzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3314176?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AspirinSJL",
      "html_url": "https://github.com/AspirinSJL",
      "followers_url": "https://api.github.com/users/AspirinSJL/followers",
      "following_url": "https://api.github.com/users/AspirinSJL/following{/other_user}",
      "gists_url": "https://api.github.com/users/AspirinSJL/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AspirinSJL/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AspirinSJL/subscriptions",
      "organizations_url": "https://api.github.com/users/AspirinSJL/orgs",
      "repos_url": "https://api.github.com/users/AspirinSJL/repos",
      "events_url": "https://api.github.com/users/AspirinSJL/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AspirinSJL/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-13T01:25:24Z",
    "updated_at": "2018-03-13T01:25:24Z",
    "author_association": "MEMBER",
    "body": "We are reffing something that isn't any existing channel or call, at least. But I don't know what it is.\r\n\r\n```\r\nD0312 16:58:45.280036763   34625 end2end_test.cc:216]        TestScenario{use_proxy=false, inproc=false, credentials='ssl'}\r\nD0312 16:58:45.280099293   34625 ev_posix.cc:142]            Using polling engine: poll-cv\r\nD0312 16:58:45.280114820   34625 dns_resolver.cc:331]        Using native dns resolver\r\nD0312 16:58:46.287528265   34625 ev_posix.cc:142]            Using polling engine: poll-cv\r\nD0312 16:58:46.287554799   34625 dns_resolver.cc:331]        Using native dns resolver\r\nI0312 16:58:46.287609758   34625 server_builder.cc:269]      Synchronous server. Num CQs: 4, Min pollers: 1, Max Pollers: 2, CQ timeout (msec): 10\r\nD0312 16:58:46.291138127   34625 transport.cc:43]            CLIENT_CHANNEL 0x559a15b9c200:0x559a15b9c1a0   REF 1->2 call\r\nD0312 16:58:46.291155856   34625 transport.cc:43]            CALL_STACK 0x559a15b9ed30:0x559a15b9e370   REF 1->2 deadline_timer\r\nD0312 16:58:46.291186219   34625 transport.cc:43]            CALL_STACK 0x559a15b9ed30:0x559a15b9e370   REF 2->3 completion\r\nD0312 16:58:46.291196511   34625 transport.cc:43]            CLIENT_CHANNEL 0x559a15b9c200:0x559a15b9c1a0   REF 2->3 resolver\r\nD0312 16:58:46.291734585   55995 subchannel_index.cc:189]    SUBCHANNEL: 0x7fd66c0047f0     WEAK_REF 0x10000 -> 0x10001 [index_register]\r\nD0312 16:58:46.291757979   55995 transport.cc:43]            CLIENT_CHANNEL 0x559a15b9c200:0x559a15b9c1a0   REF 3->4 re-resolution\r\nD0312 16:58:46.291774029   55995 transport.cc:43]            CLIENT_CHANNEL 0x559a15b9c200:0x559a15b9c1a0   REF 4->5 watch_lb_policy\r\nD0312 16:58:46.291782289   55995 transport.cc:43]            CALL_STACK 0x559a15b9ed30:0x559a15b9e370   REF 3->4 pick_callback\r\nD0312 16:58:46.291788812   55995 subchannel.cc:502]          SUBCHANNEL: 0x7fd66c0047f0     WEAK_REF 0x10001 -> 0x10002 [external_state_watcher]\r\nD0312 16:58:46.291794034   55995 subchannel.cc:456]          SUBCHANNEL: 0x7fd66c0047f0     WEAK_REF 0x10002 -> 0x10003 [connecting]\r\nD0312 16:58:46.291901559   55995 transport.cc:43]            CALL_STACK 0x559a15b9ed30:0x559a15b9e370   REF 4->5 pick_callback_cancel\r\nD0312 16:58:46.291913109   55995 subchannel.cc:408]          SUBCHANNEL: 0x7fd66c0047f0   WEAK_UNREF 0x10003 -> 0x10002 [external_state_watcher]\r\nD0312 16:58:46.291920874   55995 subchannel.cc:502]          SUBCHANNEL: 0x7fd66c0047f0     WEAK_REF 0x10002 -> 0x10003 [external_state_watcher]\r\nD0312 16:58:46.291933533   55995 transport.cc:43]            CLIENT_CHANNEL 0x559a15b9c200:0x559a15b9c1a0   REF 5->6 watch_lb_policy\r\nD0312 16:58:46.291939002   55995 transport.cc:57]            CLIENT_CHANNEL 0x559a15b9c200:0x559a15b9c1a0 UNREF 6->5 watch_lb_policy\r\nD0312 16:58:46.292700116   55998 transport.cc:57]            CALL_STACK 0x559a15b9ed30:0x559a15b9e370 UNREF 5->4 pick_callback_cancel\r\nD0312 16:58:46.292720048   55998 transport.cc:57]            CALL_STACK 0x559a15b9ed30:0x559a15b9e370 UNREF 4->3 pick_callback\r\nD0312 16:58:46.292731376   55998 transport.cc:43]            CALL_STACK 0x559a15b9ed30:0x559a15b9e370   REF 3->4 termination\r\nD0312 16:58:46.292744646   55998 transport.cc:57]            CALL_STACK 0x559a15b9ed30:0x559a15b9e370 UNREF 4->3 deadline_timer\r\nD0312 16:58:46.292751117   55998 transport.cc:43]            CALL_STACK 0x559a15b9ed30:0x559a15b9e370   REF 3->4 termination\r\nD0312 16:58:46.292792714   55998 transport.cc:57]            CALL_STACK 0x559a15b9ed30:0x559a15b9e370 UNREF 4->3 termination\r\nD0312 16:58:46.292800074   55998 transport.cc:57]            CALL_STACK 0x559a15b9ed30:0x559a15b9e370 UNREF 3->2 termination\r\nD0312 16:58:46.292945554   34625 transport.cc:57]            CALL_STACK 0x559a15b9ed30:0x559a15b9e370 UNREF 2->1 completion\r\nD0312 16:58:46.292976307   34625 transport.cc:57]            CALL_STACK 0x559a15b9ed30:0x559a15b9e370 UNREF 1->0 destroy\r\nD0312 16:58:46.292989579   34625 transport.cc:57]            CLIENT_CHANNEL 0x559a15b9c200:0x559a15b9c1a0 UNREF 5->4 call\r\nI0312 16:58:46.297141862   56117 sync.cc:94]                 PRIOR <= 0 (0x559a15b91590)\r\nend2end_test: src/core/lib/gpr/sync.cc:96: void gpr_ref_non_zero(gpr_refcount*): Assertion `prior > 0' failed.\r\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/372592384",
    "html_url": "https://github.com/grpc/grpc/issues/14362#issuecomment-372592384",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14362",
    "id": 372592384,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjU5MjM4NA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-13T08:58:18Z",
    "updated_at": "2018-03-13T08:58:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "@AspirinSJL  do we have a stacktrace?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/372732996",
    "html_url": "https://github.com/grpc/grpc/issues/14362#issuecomment-372732996",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14362",
    "id": 372732996,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjczMjk5Ng==",
    "user": {
      "login": "AspirinSJL",
      "id": 3314176,
      "node_id": "MDQ6VXNlcjMzMTQxNzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3314176?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AspirinSJL",
      "html_url": "https://github.com/AspirinSJL",
      "followers_url": "https://api.github.com/users/AspirinSJL/followers",
      "following_url": "https://api.github.com/users/AspirinSJL/following{/other_user}",
      "gists_url": "https://api.github.com/users/AspirinSJL/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AspirinSJL/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AspirinSJL/subscriptions",
      "organizations_url": "https://api.github.com/users/AspirinSJL/orgs",
      "repos_url": "https://api.github.com/users/AspirinSJL/repos",
      "events_url": "https://api.github.com/users/AspirinSJL/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AspirinSJL/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-13T16:40:39Z",
    "updated_at": "2018-03-13T16:44:12Z",
    "author_association": "MEMBER",
    "body": "It's like \r\n```\r\nD0313 09:36:55.268856651  211407 transport.cc:57]            CALL_STACK 0x5636c80e82d0:0x5636c80e7910 UNREF 2->1 completion\r\nD0313 09:36:55.268875389  211407 transport.cc:57]            CALL_STACK 0x5636c80e82d0:0x5636c80e7910 UNREF 1->0 destroy\r\nD0313 09:36:55.268886054  211407 transport.cc:57]            CALL_STACK 0x5636c80eff50:0x5636c80eff40 UNREF 1->0 client_channel_destroy_call\r\nD0313 09:36:55.268892952  211407 ref_counted.h:124]          stream_refcount:0x5636c80e9440 src/core/ext/filters/client_channel/subchannel.cc:665 unref 3 -> 2 subchannel_call\r\nD0313 09:36:55.268899794  211407 transport.cc:57]            CLIENT_CHANNEL 0x5636c80e5cf0:0x5636c80e5c90 UNREF 5->4 call\r\nend2end_test: src/core/lib/gpr/sync.cc:93: void gpr_ref_non_zero(gpr_refcount*): Assertion `prior > 0' failed.\r\n\r\n\r\n*******************************\r\nCaught signal SIGABRT\r\nbins/dbg/end2end_test(+0x1b62f5)[0x5636c79942f5]\r\n/lib/x86_64-linux-gnu/libpthread.so.0(+0x110c0)[0x7fa17420f0c0]\r\n/lib/x86_64-linux-gnu/libc.so.6(gsignal+0xcf)[0x7fa1726a5fcf]\r\n/lib/x86_64-linux-gnu/libc.so.6(abort+0x16a)[0x7fa1726a73fa]\r\n/lib/x86_64-linux-gnu/libc.so.6(+0x2be37)[0x7fa17269ee37]\r\n/lib/x86_64-linux-gnu/libc.so.6(+0x2bee2)[0x7fa17269eee2]\r\nbins/dbg/end2end_test(+0x10ea1a)[0x5636c78eca1a]\r\nbins/dbg/end2end_test(+0x160b26)[0x5636c793eb26]\r\nbins/dbg/end2end_test(+0x13e2cd)[0x5636c791c2cd]\r\nbins/dbg/end2end_test(+0x15fd49)[0x5636c793dd49]\r\nbins/dbg/end2end_test(+0xbe0ad)[0x5636c789c0ad]\r\nbins/dbg/end2end_test(+0xbe4a9)[0x5636c789c4a9]\r\nbins/dbg/end2end_test(+0xdf3af)[0x5636c78bd3af]\r\nbins/dbg/end2end_test(+0xbda49)[0x5636c789ba49]\r\nbins/dbg/end2end_test(+0x1204d2)[0x5636c78fe4d2]\r\nbins/dbg/end2end_test(+0x120917)[0x5636c78fe917]\r\nbins/dbg/end2end_test(+0xf39b8)[0x5636c78d19b8]\r\nbins/dbg/end2end_test(+0x1047c4)[0x5636c78e27c4]\r\nbins/dbg/end2end_test(+0x103adb)[0x5636c78e1adb]\r\nbins/dbg/end2end_test(+0x10a6ce)[0x5636c78e86ce]\r\nbins/dbg/end2end_test(+0x10a1a9)[0x5636c78e81a9]\r\nbins/dbg/end2end_test(+0x10a0a2)[0x5636c78e80a2]\r\nbins/dbg/end2end_test(+0x10a0c2)[0x5636c78e80c2]\r\nbins/dbg/end2end_test(+0x10fe06)[0x5636c78ede06]\r\nbins/dbg/end2end_test(+0x10fe2f)[0x5636c78ede2f]\r\n/lib/x86_64-linux-gnu/libpthread.so.0(+0x7494)[0x7fa174205494]\r\n/lib/x86_64-linux-gnu/libc.so.6(clone+0x3f)[0x7fa17275ba8f]\r\n```\r\n\r\nIs there any way to find the code mapped from the addresses? I tried `addr2line`, but got\r\n```\r\ngrpc git:(head) ✗ addr2line -e bins/dbg/end2end_test  0x5636c79942f5\r\n??:0\r\n\r\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/372735030",
    "html_url": "https://github.com/grpc/grpc/issues/14362#issuecomment-372735030",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14362",
    "id": 372735030,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjczNTAzMA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-13T16:46:16Z",
    "updated_at": "2018-03-13T16:46:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "@AspirinSJL  I don't know why the function names are not there in this case, but if you open the coredump file in gdb, you'll be able to see the backtrace."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/372833924",
    "html_url": "https://github.com/grpc/grpc/issues/14362#issuecomment-372833924",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14362",
    "id": 372833924,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjgzMzkyNA==",
    "user": {
      "login": "AspirinSJL",
      "id": 3314176,
      "node_id": "MDQ6VXNlcjMzMTQxNzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3314176?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AspirinSJL",
      "html_url": "https://github.com/AspirinSJL",
      "followers_url": "https://api.github.com/users/AspirinSJL/followers",
      "following_url": "https://api.github.com/users/AspirinSJL/following{/other_user}",
      "gists_url": "https://api.github.com/users/AspirinSJL/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AspirinSJL/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AspirinSJL/subscriptions",
      "organizations_url": "https://api.github.com/users/AspirinSJL/orgs",
      "repos_url": "https://api.github.com/users/AspirinSJL/repos",
      "events_url": "https://api.github.com/users/AspirinSJL/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AspirinSJL/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-13T22:02:05Z",
    "updated_at": "2018-03-13T22:02:46Z",
    "author_association": "MEMBER",
    "body": "I'm trying to debug in gdb, but the stacktrace in the coredump doesn't match the failure log. The log shows `end2end_test: src/core/lib/gpr/sync.cc:93: void gpr_ref_non_zero(gpr_refcount*): Assertion prior > 0 failed`, but the stack shows that the abortion is due to `gpr_mu_lock()` [here](https://github.com/grpc/grpc/blob/master/src/core/lib/gpr/sync_posix.cc#L47). Any idea?\r\n\r\n```\r\n(gdb) info threads\r\n  Id   Target Id         Frame \r\n  25   Thread 0x7f8d537fe700 (LWP 26496) __lll_lock_wait () at ../sysdeps/unix/sysv/linux/x86_64/lowlevellock.S:135\r\n  24   Thread 0x7f8d99ee9700 (LWP 26498) __lll_lock_wait () at ../sysdeps/unix/sysv/linux/x86_64/lowlevellock.S:135\r\n  23   Thread 0x7f8d98cd5700 (LWP 26499) 0x000055ea8a0df941 in pollset_work (pollset=0x0, worker_hdl=0x0, deadline=0)\r\n    at src/core/lib/iomgr/ev_poll_posix.cc:877\r\n  22   Thread 0x7f8d73fff700 (LWP 17787) __lll_lock_wait () at ../sysdeps/unix/sysv/linux/x86_64/lowlevellock.S:135\r\n  21   Thread 0x7f8d717fa700 (LWP 17808) pthread_cond_timedwait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S:225\r\n  20   Thread 0x7f8d6a7fc700 (LWP 17815) pthread_cond_timedwait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S:225\r\n  19   Thread 0x7f8d797fa700 (LWP 17784) __lll_lock_wait () at ../sysdeps/unix/sysv/linux/x86_64/lowlevellock.S:135\r\n  18   Thread 0x7f8d71ffb700 (LWP 17803) pthread_cond_timedwait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S:225\r\n  17   Thread 0x7f8d72ffd700 (LWP 17797) pthread_cond_timedwait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S:225\r\n  16   Thread 0x7f8d737fe700 (LWP 17795) pthread_cond_timedwait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S:225\r\n  15   Thread 0x7f8d69ffb700 (LWP 17826) pthread_cond_timedwait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S:225\r\n  14   Thread 0x7f8d6affd700 (LWP 17811) __lll_lock_wait () at ../sysdeps/unix/sysv/linux/x86_64/lowlevellock.S:135\r\n  13   Thread 0x7f8d6b7fe700 (LWP 17810) 0x00007f8d99fc963d in poll () from /lib/x86_64-linux-gnu/libc.so.6\r\n  12   Thread 0x7f8d727fc700 (LWP 17801) pthread_cond_timedwait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S:225\r\n  11   Thread 0x7f8d8eff5700 (LWP 17546) pthread_cond_wait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n  10   Thread 0x7f8d78ff9700 (LWP 17786) pthread_cond_timedwait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S:225\r\n  9    Thread 0x7f8d79ffb700 (LWP 17595) pthread_cond_timedwait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S:225\r\n  8    Thread 0x7f8d8f7f6700 (LWP 17544) pthread_cond_wait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n  7    Thread 0x7f8d6bfff700 (LWP 17791) pthread_cond_timedwait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S:225\r\n  6    Thread 0x7f8d7b7fe700 (LWP 17587) pthread_cond_signal@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_signal.S:87\r\n  5    Thread 0x7f8d70ff9700 (LWP 17809) __lll_lock_wait () at ../sysdeps/unix/sysv/linux/x86_64/lowlevellock.S:135\r\n  4    Thread 0x7f8d7affd700 (LWP 17590) pthread_cond_timedwait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S:225\r\n  3    Thread 0x7f8d7bfff700 (LWP 17586) pthread_cond_timedwait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S:225\r\n  2    Thread 0x7f8d7a7fc700 (LWP 17591) pthread_cond_timedwait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S:225\r\n* 1    Thread 0x7f8d9be87840 (LWP 256854) raise (sig=3) at ../sysdeps/unix/sysv/linux/raise.c:51\r\n(gdb) t 1\r\n[Switching to thread 1 (Thread 0x7f8d9be87840 (LWP 256854))]\r\n#0  raise (sig=3) at ../sysdeps/unix/sysv/linux/raise.c:51\r\n51\tin ../sysdeps/unix/sysv/linux/raise.c\r\n(gdb) bt\r\n#0  raise (sig=3) at ../sysdeps/unix/sysv/linux/raise.c:51\r\n#1  0x000055ea8a1b7345 in crash_handler (signum=3, info=0x55ea8a6045b0 <g_alt_stack+64528>, data=0x55ea8a604480 <g_alt_stack+64224>)\r\n    at test/core/util/test_config.cc:255\r\n#2  <signal handler called>\r\n#3  __lll_lock_wait () at ../sysdeps/unix/sysv/linux/x86_64/lowlevellock.S:135\r\n#4  0x00007f8d9ba7eb95 in __GI___pthread_mutex_lock (mutex=0x55ea8a5f2680 <g_cvfds>) at ../nptl/pthread_mutex_lock.c:80\r\n#5  0x000055ea8a10fbbd in gpr_mu_lock (mu=0x55ea8a5f2680 <g_cvfds>) at src/core/lib/gpr/sync_posix.cc:47\r\n#6  0x000055ea8a0e4711 in cv_fd_wakeup (fd_info=0x7f8d740017b0) at src/core/lib/iomgr/wakeup_fd_cv.cc:71\r\n#7  0x000055ea8a0cacc5 in grpc_wakeup_fd_wakeup (fd_info=0x7f8d740017b0) at src/core/lib/iomgr/wakeup_fd_posix.cc:74\r\n#8  0x000055ea8a0df27a in pollset_kick_ext (p=0x55ea8a7ed350, specific_worker=0x7f8d6affc9a0, flags=2) at src/core/lib/iomgr/ev_poll_posix.cc:745\r\n#9  0x000055ea8a0de3d2 in pollset_kick_locked (watcher=0x7f8d6affb7b8) at src/core/lib/iomgr/ev_poll_posix.cc:377\r\n#10 0x000055ea8a0de4cc in wake_all_watchers_locked (fd=0x55ea8a7ef840) at src/core/lib/iomgr/ev_poll_posix.cc:399\r\n#11 0x000055ea8a0de6ae in fd_orphan (fd=0x55ea8a7ef840, on_done=0x55ea8a7ef7d0, release_fd=0x0, already_closed=false, \r\n    reason=0x55ea8a2dba9f \"tcp_listener_shutdown\") at src/core/lib/iomgr/ev_poll_posix.cc:442\r\n#12 0x000055ea8a0be79c in grpc_fd_orphan (fd=0x55ea8a7ef840, on_done=0x55ea8a7ef7d0, release_fd=0x0, already_closed=false, \r\n    reason=0x55ea8a2dba9f \"tcp_listener_shutdown\") at src/core/lib/iomgr/ev_posix.cc:207\r\n#13 0x000055ea8a160963 in deactivated_all_ports (s=0x55ea8a7ef5d0) at src/core/lib/iomgr/tcp_server_posix.cc:168\r\n#14 0x000055ea8a160de2 in on_read (arg=0x7f8d80001bb0, err=0x55ea8a7f5040) at src/core/lib/iomgr/tcp_server_posix.cc:275\r\n#15 0x000055ea8a0bf0ad in exec_ctx_run (closure=0x7f8d80001c60, error=0x55ea8a7f5040) at src/core/lib/iomgr/exec_ctx.cc:40\r\n#16 0x000055ea8a0bf4a9 in grpc_core::ExecCtx::Flush (this=0x7ffe2b59b2a0) at src/core/lib/iomgr/exec_ctx.cc:128\r\n#17 0x000055ea8a0b92a7 in grpc_core::ExecCtx::~ExecCtx (this=0x7ffe2b59b2a0, __in_chrg=<optimized out>) at ./src/core/lib/iomgr/exec_ctx.h:87\r\n#18 0x000055ea8a126d0e in grpc_server_shutdown_and_notify (server=0x55ea8a7ede60, cq=0x55ea8a7dd9b0, tag=0x7ffe2b59b3b8)\r\n    at src/core/lib/surface/server.cc:1223\r\n#19 0x000055ea8a10288c in grpc::Server::ShutdownInternal (this=0x55ea8a7ed3f0, deadline=...) at src/cpp/server/server_cc.cc:565\r\n#20 0x000055ea8a07e656 in grpc::ServerInterface::Shutdown (this=0x55ea8a7ed3f0) at include/grpcpp/impl/codegen/server_interface.h:71\r\n#21 0x000055ea8a0421ac in grpc::testing::(anonymous namespace)::End2endTest::TearDown (this=0x55ea8a78ebc0) at test/cpp/end2end/end2end_test.cc:232\r\n#22 0x000055ea8a294e1f in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (object=0x55ea8a78ebc0, \r\n    method=&virtual testing::Test::TearDown(), location=0x55ea8a2f9e01 \"TearDown()\") at third_party/googletest/googletest/src/gtest.cc:2402\r\n#23 0x000055ea8a28fca2 in testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=0x55ea8a78ebc0, \r\n    method=&virtual testing::Test::TearDown(), location=0x55ea8a2f9e01 \"TearDown()\") at third_party/googletest/googletest/src/gtest.cc:2438\r\n#24 0x000055ea8a2760d7 in testing::Test::Run (this=0x55ea8a78ebc0) at third_party/googletest/googletest/src/gtest.cc:2482\r\n#25 0x000055ea8a276910 in testing::TestInfo::Run (this=0x55ea8a7af090) at third_party/googletest/googletest/src/gtest.cc:2656\r\n#26 0x000055ea8a276f67 in testing::TestCase::Run (this=0x55ea8a7ac9c0) at third_party/googletest/googletest/src/gtest.cc:2774\r\n#27 0x000055ea8a27dadb in testing::internal::UnitTestImpl::RunAllTests (this=0x55ea8a77bad0) at third_party/googletest/googletest/src/gtest.cc:4649\r\n#28 0x000055ea8a295d63 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x55ea8a77bad0, \r\n    method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x55ea8a27d818 <testing::internal::UnitTestImpl::RunAllTests()>, location=0x55ea8a2fa630 \"auxiliary test code (environments or event listeners)\") at third_party/googletest/googletest/src/gtest.cc:2402\r\n#29 0x000055ea8a2909e0 in testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x55ea8a77bad0, \r\n    method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x55ea8a27d818 <testing::internal::UnitTestImpl::RunAllTests()>, location=0x55ea8a2fa630 \"auxiliary test code (environments or event listeners)\") at third_party/googletest/googletest/src/gtest.cc:2438\r\n#30 0x000055ea8a27c7b2 in testing::UnitTest::Run (this=0x55ea8a605d20 <testing::UnitTest::GetInstance()::instance>)\r\n    at third_party/googletest/googletest/src/gtest.cc:4257\r\n#31 0x000055ea8a080f42 in RUN_ALL_TESTS () at third_party/googletest/googletest/include/gtest/gtest.h:2233\r\n#32 0x000055ea8a061339 in main (argc=1, argv=0x7ffe2b59b8e8) at test/cpp/end2end/end2end_test.cc:1836\r\n(gdb) \r\n\r\n```"
  }
]
