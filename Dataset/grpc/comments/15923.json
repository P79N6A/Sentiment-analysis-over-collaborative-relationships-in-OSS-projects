[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/409659737",
    "html_url": "https://github.com/grpc/grpc/issues/15923#issuecomment-409659737",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15923",
    "id": 409659737,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTY1OTczNw==",
    "user": {
      "login": "bastova",
      "id": 1167846,
      "node_id": "MDQ6VXNlcjExNjc4NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1167846?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bastova",
      "html_url": "https://github.com/bastova",
      "followers_url": "https://api.github.com/users/bastova/followers",
      "following_url": "https://api.github.com/users/bastova/following{/other_user}",
      "gists_url": "https://api.github.com/users/bastova/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bastova/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bastova/subscriptions",
      "organizations_url": "https://api.github.com/users/bastova/orgs",
      "repos_url": "https://api.github.com/users/bastova/repos",
      "events_url": "https://api.github.com/users/bastova/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bastova/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-01T17:40:48Z",
    "updated_at": "2018-08-01T17:42:33Z",
    "author_association": "NONE",
    "body": "Hi, I have a very similar setup and seeing similar errors when trying to use grpc with gevent. From quick online search it seems like it's coming from the incompatibility between grpc and greenlet (even though initial experimental support for gevent was introduced to grpcio half a year ago).\r\nMy error stack:\r\n```\r\n2018-08-01 08:24:08,146 ERROR [root] request_id=None AuthMetadataPluginCallback \"<google.auth.transport.grpc.AuthMetadataPlugin object at 0x152a040fe610>\" raised exception!\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python2.7/site-packages/grpc/_plugin_wrapping.py\", line 77, in __call__\r\n    callback_state, callback))\r\n  File \"/usr/lib/python2.7/site-packages/google/auth/transport/grpc.py\", line 77, in __call__\r\n    callback(self._get_authorization_headers(context), None)\r\n  File \"/usr/lib/python2.7/site-packages/google/auth/transport/grpc.py\", line 65, in _get_authorization_headers\r\n    headers)\r\n  File \"/usr/lib/python2.7/site-packages/google/auth/credentials.py\", line 122, in before_request\r\n    self.refresh(request)\r\n  File \"/usr/lib/python2.7/site-packages/google/oauth2/service_account.py\", line 322, in refresh\r\n    request, self._token_uri, assertion)\r\n  File \"/usr/lib/python2.7/site-packages/google/oauth2/_client.py\", line 145, in jwt_grant\r\n    response_data = _token_endpoint_request(request, token_uri, body)\r\n  File \"/usr/lib/python2.7/site-packages/google/oauth2/_client.py\", line 106, in _token_endpoint_request\r\n    method='POST', url=token_uri, headers=headers, body=body)\r\n  File \"/usr/lib/python2.7/site-packages/google_auth_httplib2.py\", line 116, in __call__\r\n    url, method=method, body=body, headers=headers, **kwargs)\r\n  File \"/usr/lib64/python2.7/site-packages/newrelic-2.50.0.39/newrelic/api/external_trace.py\", line 103, in dynamic_wrapper\r\n    return wrapped(*args, **kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/httplib2/__init__.py\", line 1609, in request\r\n    (response, content) = self._request(conn, authority, uri, request_uri, method, body, headers, redirections, cachekey)\r\n  File \"/usr/lib/python2.7/site-packages/httplib2/__init__.py\", line 1351, in _request\r\n    (response, content) = self._conn_request(conn, request_uri, method, body, headers)\r\n  File \"/usr/lib/python2.7/site-packages/httplib2/__init__.py\", line 1307, in _conn_request\r\n    response = conn.getresponse()\r\n  File \"/usr/lib64/python2.7/site-packages/newrelic-2.50.0.39/newrelic/hooks/external_httplib.py\", line 65, in httplib_getresponse_wrapper\r\n    return wrapped(*args, **kwargs)\r\n  File \"/usr/lib64/python2.7/httplib.py\", line 1132, in getresponse\r\n    response.begin()\r\n  File \"/usr/lib64/python2.7/httplib.py\", line 453, in begin\r\n    version, status, reason = self._read_status()\r\n  File \"/usr/lib64/python2.7/httplib.py\", line 409, in _read_status\r\n    line = self.fp.readline(_MAXLINE + 1)\r\n  File \"/usr/lib64/python2.7/socket.py\", line 480, in readline\r\n    data = self._sock.recv(self._rbufsize)\r\n  File \"/usr/lib64/python2.7/site-packages/gevent/_sslgte279.py\", line 457, in recv\r\n    return self.read(buflen)\r\n  File \"/usr/lib64/python2.7/site-packages/gevent/_sslgte279.py\", line 318, in read\r\n    self._wait(self._read_event, timeout_exc=_SSLErrorReadTimeout)\r\n  File \"src/gevent/_hub_primitives.py\", line 265, in gevent.__hub_primitives.wait_on_socket\r\n  File \"src/gevent/_hub_primitives.py\", line 266, in gevent.__hub_primitives.wait_on_socket\r\n  File \"src/gevent/_hub_primitives.py\", line 245, in gevent.__hub_primitives._primitive_wait\r\nConcurrentObjectUseError: This socket is already used by another greenlet: <bound method Waiter.switch of <gevent.__waiter.Waiter object at 0x152a03bfe9f0>>\r\n```\r\n\r\nI am using:\r\ngrpcio==1.12.1\r\ngevent==1.3.5\r\ngreenlet==0.4.14"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/409662179",
    "html_url": "https://github.com/grpc/grpc/issues/15923#issuecomment-409662179",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15923",
    "id": 409662179,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTY2MjE3OQ==",
    "user": {
      "login": "mehrdada",
      "id": 900411,
      "node_id": "MDQ6VXNlcjkwMDQxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/900411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mehrdada",
      "html_url": "https://github.com/mehrdada",
      "followers_url": "https://api.github.com/users/mehrdada/followers",
      "following_url": "https://api.github.com/users/mehrdada/following{/other_user}",
      "gists_url": "https://api.github.com/users/mehrdada/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mehrdada/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mehrdada/subscriptions",
      "organizations_url": "https://api.github.com/users/mehrdada/orgs",
      "repos_url": "https://api.github.com/users/mehrdada/repos",
      "events_url": "https://api.github.com/users/mehrdada/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mehrdada/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-01T17:48:33Z",
    "updated_at": "2018-08-01T17:48:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "@gszpura There are no current plans to extend support to other event loops like `eventlet`.\r\n\r\n@bastova `gevent` support has been in alpha status and there are known issues (does not support `libuv` engine, for example), but if there are bugs using `libev` please file them separately."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/409664080",
    "html_url": "https://github.com/grpc/grpc/issues/15923#issuecomment-409664080",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15923",
    "id": 409664080,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTY2NDA4MA==",
    "user": {
      "login": "bastova",
      "id": 1167846,
      "node_id": "MDQ6VXNlcjExNjc4NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1167846?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bastova",
      "html_url": "https://github.com/bastova",
      "followers_url": "https://api.github.com/users/bastova/followers",
      "following_url": "https://api.github.com/users/bastova/following{/other_user}",
      "gists_url": "https://api.github.com/users/bastova/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bastova/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bastova/subscriptions",
      "organizations_url": "https://api.github.com/users/bastova/orgs",
      "repos_url": "https://api.github.com/users/bastova/repos",
      "events_url": "https://api.github.com/users/bastova/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bastova/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-01T17:54:25Z",
    "updated_at": "2018-08-01T17:54:25Z",
    "author_association": "NONE",
    "body": "I see, so mine is a different issue. Ok will force the 'libev' engine and open separate issues if it doesn't work. Thanks"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/461700317",
    "html_url": "https://github.com/grpc/grpc/issues/15923#issuecomment-461700317",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15923",
    "id": 461700317,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTcwMDMxNw==",
    "user": {
      "login": "vijaykramesh",
      "id": 556288,
      "node_id": "MDQ6VXNlcjU1NjI4OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/556288?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vijaykramesh",
      "html_url": "https://github.com/vijaykramesh",
      "followers_url": "https://api.github.com/users/vijaykramesh/followers",
      "following_url": "https://api.github.com/users/vijaykramesh/following{/other_user}",
      "gists_url": "https://api.github.com/users/vijaykramesh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vijaykramesh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vijaykramesh/subscriptions",
      "organizations_url": "https://api.github.com/users/vijaykramesh/orgs",
      "repos_url": "https://api.github.com/users/vijaykramesh/repos",
      "events_url": "https://api.github.com/users/vijaykramesh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vijaykramesh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-08T06:01:23Z",
    "updated_at": "2019-02-08T06:01:23Z",
    "author_association": "NONE",
    "body": "is there any option for using, e.g., google-cloud-spanner in a django app running with eventlet + gunicorn? I don't really want to have to change my entire app server just to support calling an API... but setting `GOOGLE_CLOUD_DISABLE_GRPC` doesn't seem to work for me "
  }
]
