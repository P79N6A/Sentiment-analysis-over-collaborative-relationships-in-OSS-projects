[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/336193947",
    "html_url": "https://github.com/grpc/grpc/issues/12830#issuecomment-336193947",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12830",
    "id": 336193947,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjE5Mzk0Nw==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-12T16:37:59Z",
    "updated_at": "2017-10-12T16:37:59Z",
    "author_association": "MEMBER",
    "body": "Duplicate of #12867."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/339379254",
    "html_url": "https://github.com/grpc/grpc/issues/12830#issuecomment-339379254",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12830",
    "id": 339379254,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTM3OTI1NA==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-25T15:57:16Z",
    "updated_at": "2017-10-25T15:57:29Z",
    "author_association": "MEMBER",
    "body": "I take back what I said above; I think this is actually a separate issue from #12867.\r\n\r\nWe definitely cannot eliminate the deadline for handshaking.  There needs to be one, or else there is the possibility of DoS attacks by clients establishing many TCP connections and then never sending any subsequent packets.  However, I am open to the possibility of setting the deadline for this to some other value, rather than using the time of the next backoff reconnect attempt.\r\n\r\n@dgquintas and/or @ctiller, do either of you have any historical knowledge about why we use the next reconnection attempt time as the deadline for handshaking?  I guess it sort of makes sense if we consider that the back-off applies to the entire connection establishment process, which includes both establishing the TCP connection and doing any necessary handshaking.  But it does seem like we should not give up on establishing a connection if we are actually making forward progress (e.g., we have established the TCP connection and are in the process of handshaking).\r\n\r\n@ejona86 @dfawley as an FYI about the DoS issues we've been discussing."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/339379778",
    "html_url": "https://github.com/grpc/grpc/issues/12830#issuecomment-339379778",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12830",
    "id": 339379778,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTM3OTc3OA==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-25T15:59:01Z",
    "updated_at": "2017-10-25T15:59:01Z",
    "author_association": "MEMBER",
    "body": "Actually, further thought: This may not be a DoS attack issue, since this is the client side, not the server side.  I need to check where we set this deadline on the server side, but that's a separate issue.\r\n\r\nStill, I do think a deadline on the client side is also valuable, although as I said above, it may make sense to set it to something unrelated to the reconnection backoff value."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/339383050",
    "html_url": "https://github.com/grpc/grpc/issues/12830#issuecomment-339383050",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12830",
    "id": 339383050,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTM4MzA1MA==",
    "user": {
      "login": "actgardner",
      "id": 3100188,
      "node_id": "MDQ6VXNlcjMxMDAxODg=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3100188?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/actgardner",
      "html_url": "https://github.com/actgardner",
      "followers_url": "https://api.github.com/users/actgardner/followers",
      "following_url": "https://api.github.com/users/actgardner/following{/other_user}",
      "gists_url": "https://api.github.com/users/actgardner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/actgardner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/actgardner/subscriptions",
      "organizations_url": "https://api.github.com/users/actgardner/orgs",
      "repos_url": "https://api.github.com/users/actgardner/repos",
      "events_url": "https://api.github.com/users/actgardner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/actgardner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-25T16:09:08Z",
    "updated_at": "2017-10-25T16:09:40Z",
    "author_association": "NONE",
    "body": "> I guess it sort of makes sense if we consider that the back-off applies to the entire connection establishment process, which includes both establishing the TCP connection and doing any necessary handshaking.\r\n\r\nTo provide an example of how I'm thinking about backoff, look at [gax-go](https://github.com/googleapis/gax-go/blob/master/call_option.go#L83-L95) - the backoff retrier:\r\n- issues the call (which may have an associated timeout)\r\n- the call returns an error\r\n- the backoff retrier starts the backoff window\r\n- the retrier makes another call after the backoff window has elapsed\r\n\r\nBy contrast this code:\r\n- Starts the backoff window\r\n- Starts the handshake with a deadline equal to the backoff window\r\n- Cancels the handshake when the deadline is exceeded\r\n- Immediately retries the handshake since the backoff window has already elapsed\r\n\r\nI think it's pretty clearly a bug to conflate the deadline for the handshake to complete, and the backoff, which is by definition the time between failed handshakes to wait before retrying. I think it would be appropriate to have two different options, one to control the handshake timeout, and a second to control the interval between handshake attempts when they need to be retried."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/339388249",
    "html_url": "https://github.com/grpc/grpc/issues/12830#issuecomment-339388249",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12830",
    "id": 339388249,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTM4ODI0OQ==",
    "user": {
      "login": "dfawley",
      "id": 26072277,
      "node_id": "MDQ6VXNlcjI2MDcyMjc3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26072277?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dfawley",
      "html_url": "https://github.com/dfawley",
      "followers_url": "https://api.github.com/users/dfawley/followers",
      "following_url": "https://api.github.com/users/dfawley/following{/other_user}",
      "gists_url": "https://api.github.com/users/dfawley/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dfawley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dfawley/subscriptions",
      "organizations_url": "https://api.github.com/users/dfawley/orgs",
      "repos_url": "https://api.github.com/users/dfawley/repos",
      "events_url": "https://api.github.com/users/dfawley/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dfawley/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-25T16:25:52Z",
    "updated_at": "2017-10-25T16:25:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "FWIW, Go uses a 20 second minimum timeout for client-side connection establishment, and goes up from there as the backoff grows.  I am not familiar with the history/rationale of that implementation.\r\n\r\nRelevant code:\r\nhttps://github.com/grpc/grpc-go/blob/5856538706dc3abc44dd5ba1a8bb19a0dfb1ab25/clientconn.go#L918"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/339409457",
    "html_url": "https://github.com/grpc/grpc/issues/12830#issuecomment-339409457",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12830",
    "id": 339409457,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTQwOTQ1Nw==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-25T17:35:48Z",
    "updated_at": "2017-10-25T17:35:48Z",
    "author_association": "MEMBER",
    "body": "Doug, the connection backoff spec for establishing a TCP connection is here:\r\n\r\nhttps://github.com/grpc/grpc/blob/master/doc/connection-backoff.md\r\n\r\nThe question in this particular bug is what deadline to use for whatever handshaking has to be done after the TCP connection has been established."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/339422800",
    "html_url": "https://github.com/grpc/grpc/issues/12830#issuecomment-339422800",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12830",
    "id": 339422800,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTQyMjgwMA==",
    "user": {
      "login": "actgardner",
      "id": 3100188,
      "node_id": "MDQ6VXNlcjMxMDAxODg=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3100188?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/actgardner",
      "html_url": "https://github.com/actgardner",
      "followers_url": "https://api.github.com/users/actgardner/followers",
      "following_url": "https://api.github.com/users/actgardner/following{/other_user}",
      "gists_url": "https://api.github.com/users/actgardner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/actgardner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/actgardner/subscriptions",
      "organizations_url": "https://api.github.com/users/actgardner/orgs",
      "repos_url": "https://api.github.com/users/actgardner/repos",
      "events_url": "https://api.github.com/users/actgardner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/actgardner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-25T18:18:23Z",
    "updated_at": "2017-10-25T18:21:42Z",
    "author_association": "NONE",
    "body": "Reading that pseudocode made it clearer to me how this parameter is intended to work - you set a deadline for the connection to succeed, and if it times out you immediately retry. In other failure modes you may end up sleeping for some time during the backoff, but in the timeout case the timeout pulls double duty as the backoff time. There is no way to have a timeout longer than the backoff interval because you would end up with multiple concurrent connection attempts.\r\n\r\nTo my earlier point, I don't know that it's a very common definition of \"backoff\" to include the time spent in the call you're backing off from. My naive interpretation of how a backoff parameter should work is:\r\n\r\n```\r\nConnectWithBackoff()\r\n  // Potentially accept some user-specified timeout for reconnecting, which must be > MIN_CONNECT_TIMEOUT\r\n  connect_timeout = Max(user_specified_timeout, MIN_CONNECT_TIMEOUT)\r\n  current_backoff = INITIAL_BACKOFF\r\n\r\n  // Make a connection attempt with the given timeout\r\n  while (TryConnect(connect_timeout) != SUCCESS)\r\n\r\n    // Once the connection attempt has failed, then backoff before trying again\r\n    current_deadline = now() + current_backoff\r\n    SleepUntil(current_deadline)\r\n    current_backoff = Min(current_backoff * MULTIPLIER + UniformRandom(-JITTER * current_backoff, JITTER * current_backoff), MAX_BACKOFF)\r\n```\r\n\r\nWhere the backoff and timeout are decoupled, and backoff is actual idle time between connection attempts. I can't speak to whether this is better or worse, but it's what I expected when setting the parameter.\r\n\r\nIt might be worth revisiting the docs because language like `how long to wait after the first failure before retrying` is unclear - you don't wait at all after a timeout failure, you immediately retry."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/339427006",
    "html_url": "https://github.com/grpc/grpc/issues/12830#issuecomment-339427006",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12830",
    "id": 339427006,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTQyNzAwNg==",
    "user": {
      "login": "dfawley",
      "id": 26072277,
      "node_id": "MDQ6VXNlcjI2MDcyMjc3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26072277?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dfawley",
      "html_url": "https://github.com/dfawley",
      "followers_url": "https://api.github.com/users/dfawley/followers",
      "following_url": "https://api.github.com/users/dfawley/following{/other_user}",
      "gists_url": "https://api.github.com/users/dfawley/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dfawley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dfawley/subscriptions",
      "organizations_url": "https://api.github.com/users/dfawley/orgs",
      "repos_url": "https://api.github.com/users/dfawley/repos",
      "events_url": "https://api.github.com/users/dfawley/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dfawley/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-25T18:31:37Z",
    "updated_at": "2017-10-25T18:31:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "> The question in this particular bug is what deadline to use for whatever handshaking has to be done after the TCP connection has been established.\r\n\r\nI think the spec isn't clear.  Apparently Go's interpretation of it was that \"TryConnect\" _included_ the TLS and HTTP/2 handshaking steps as well, while it sounds like you're saying C is only counting the TCP handshake.\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/339457003",
    "html_url": "https://github.com/grpc/grpc/issues/12830#issuecomment-339457003",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12830",
    "id": 339457003,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTQ1NzAwMw==",
    "user": {
      "login": "ejona86",
      "id": 2811396,
      "node_id": "MDQ6VXNlcjI4MTEzOTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2811396?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ejona86",
      "html_url": "https://github.com/ejona86",
      "followers_url": "https://api.github.com/users/ejona86/followers",
      "following_url": "https://api.github.com/users/ejona86/following{/other_user}",
      "gists_url": "https://api.github.com/users/ejona86/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ejona86/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ejona86/subscriptions",
      "organizations_url": "https://api.github.com/users/ejona86/orgs",
      "repos_url": "https://api.github.com/users/ejona86/repos",
      "events_url": "https://api.github.com/users/ejona86/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ejona86/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-25T20:15:12Z",
    "updated_at": "2017-10-25T20:15:12Z",
    "author_association": "MEMBER",
    "body": "Java teams' understanding of TryConnect is that it includes TLS and HTTP/2. Note that otherwise you would need another timeout in place (which we'd all agree there is no such other timeout defined). Using the deadline from TryConnect allows you to get the auto-increasing timeout that allows connecting in pathological conditions. But I will note that the proper timeout handling [is not implemented in Java](https://github.com/grpc/grpc-java/issues/1943).\r\n\r\n@alanctgardner, if you view the algorithm's backoff from the server's perspective, you'll generally see normal backoff behavior. So coupling backoff and timeout decreases time to retry without removing the benefit of the backoff. Also, if the connection attempt is timing out, there was likely no/minimal progress the majority of the time (it's effectively sleeping waiting for retransmits and the like)."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/339689295",
    "html_url": "https://github.com/grpc/grpc/issues/12830#issuecomment-339689295",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12830",
    "id": 339689295,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTY4OTI5NQ==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-26T14:43:45Z",
    "updated_at": "2017-10-26T14:44:24Z",
    "author_association": "MEMBER",
    "body": "I agree that the spec for this is not entirely clear.  We will at some point in the future write a new spec for all aspects of client channel behavior, including reconnection backoff, connectivity state semantics, and resolver and LB policy behavior.  But for now, let's do the best we can with what we've got.\r\n\r\nC-core does actually include TLS handshaking in the connection attempt.  It does *not* currently include the HTTP/2 settings exchange, but that's something we can fix separately as part of addressing the DoS concern.\r\n\r\nWith regard to this bug, after discussing this in detail with Doug and Eric yesterday, I think we are indeed doing this wrong.  The problem with our current code is that the backoff deadline is being used for both the next time we should start a retry and the deadline for the current attempt, but these should actually be two different numbers: the deadline of a given connection attempt can be larger than the backoff deadline.\r\n\r\nFor example, for the first connection attempt, the backoff is 1 second, but the minimum timeout is 20 seconds.  What that means is that if the first connection attempt fails in less than 1 second, we should wait until 1 second has elapsed before trying again.  However, if the connection attempt is still in progress after 1 second, we should let it continue until either it finishes or 20 seconds have elapsed, at which point we immediately make the next attempt.\r\n\r\nGiven that, I think the fix needs to be linked to David's work in #12867 after all.  His initially proposed solution for that bug will actually make the problem described in this bug worse if we don't fix both at the same time, because it will lower the initial backoff deadline to 1 second and continue to use that as the connection deadline as well.  Instead, we'll need to change our code to understand both numbers independently.\r\n\r\nReassigning to David to work on a fix for both bugs."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/339691847",
    "html_url": "https://github.com/grpc/grpc/issues/12830#issuecomment-339691847",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12830",
    "id": 339691847,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTY5MTg0Nw==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-26T14:51:36Z",
    "updated_at": "2017-10-26T14:51:36Z",
    "author_association": "MEMBER",
    "body": "Hoping we end up somewhere like:\n- next retry attempt is the initial deadline\n- we guarantee not to time out for at least 20 seconds after any progress\ntowards connecting is made\n\nOn Thu, Oct 26, 2017, 7:44 AM Mark D. Roth <notifications@github.com> wrote:\n\n> I agree that the spec for this is not entirely clear. We will at some\n> point in the future write a new spec for all aspects of client channel\n> behavior, including reconnection backoff, connectivity state semantics, and\n> resolver and LB policy behavior. But for now, let's do the best we can with\n> what we've got.\n>\n> C-core does actually include TLS handshaking in the connection attempt. It\n> does *not* currently include the HTTP/2 settings exchange, but that's\n> something we can fix separately as part of addressing the DoS concern.\n>\n> With regard to this bug, after discussing this in detail with Doug and\n> Eric yesterday, I think we are indeed doing this wrong. The problem with\n> our current code is that the backoff deadline is being used for both the\n> next time we should start a retry and the deadline for the current attempt,\n> but these should actually be two different numbers: the deadline of a given\n> connection attempt can be larger than the backoff deadline.\n>\n> For example, for the first connection attempt, the backoff is 1 second,\n> but the minimum timeout is 20 seconds. What that means is that if the first\n> connection attempt fails in less than 1 second, we should until 1 second\n> has elapsed before trying again. However, if the connection attempt is\n> still in progress after 1 second, we should let it continue until either it\n> finishes or 20 seconds have elapsed, at which point we immediately make the\n> next attempt.\n>\n> Given that, I think the fix needs to be linked to David's work in #12867\n> <https://github.com/grpc/grpc/issues/12867> after all. His initially\n> proposed solution for that bug will actually make the problem described in\n> this bug worse if we don't fix both at the same time, because it will lower\n> the initial backoff deadline to 1 second and continue to use that as the\n> connection deadline as well. Instead, we'll need to change our code to\n> understand both numbers independently.\n>\n> Reassigning to David to work on a fix for both bugs.\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/grpc/grpc/issues/12830#issuecomment-339689295>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AJpudatzWrP3KqNDhW61MNfVhpyrv7KSks5swJqzgaJpZM4PuOIr>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/339709191",
    "html_url": "https://github.com/grpc/grpc/issues/12830#issuecomment-339709191",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12830",
    "id": 339709191,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTcwOTE5MQ==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-26T15:43:44Z",
    "updated_at": "2017-10-26T15:43:44Z",
    "author_association": "MEMBER",
    "body": "We can probably do that as a future optimization.  Right now, let's focus on fixing our existing broken behavior."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/339750970",
    "html_url": "https://github.com/grpc/grpc/issues/12830#issuecomment-339750970",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12830",
    "id": 339750970,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTc1MDk3MA==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-26T18:08:27Z",
    "updated_at": "2017-10-26T18:08:27Z",
    "author_association": "MEMBER",
    "body": "I mention it because not moving the timeout is broken behavior if we're\nmaking progress, and the implementation ought to be trivial:\n\nExpose a grpc_millis for the last activity to each component (this is also\nhelpful a gpr_atm). Store now blindly to it whenever we make progress.\n\nAt connection start time, start a timer with our initial guess. When it\nexpires check if now >= 20+last activity, if it is about the attempt. If\nnot, start a new timer to expire at that time.\n\nOn Thu, Oct 26, 2017, 8:43 AM Mark D. Roth <notifications@github.com> wrote:\n\n> We can probably do that as a future optimization. Right now, let's focus\n> on fixing our existing broken behavior.\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/grpc/grpc/issues/12830#issuecomment-339709191>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AJpudVtIZU1aX8CGWNTgok20ybfzcxtIks5swKi8gaJpZM4PuOIr>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/339760439",
    "html_url": "https://github.com/grpc/grpc/issues/12830#issuecomment-339760439",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12830",
    "id": 339760439,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTc2MDQzOQ==",
    "user": {
      "login": "dfawley",
      "id": 26072277,
      "node_id": "MDQ6VXNlcjI2MDcyMjc3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26072277?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dfawley",
      "html_url": "https://github.com/dfawley",
      "followers_url": "https://api.github.com/users/dfawley/followers",
      "following_url": "https://api.github.com/users/dfawley/following{/other_user}",
      "gists_url": "https://api.github.com/users/dfawley/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dfawley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dfawley/subscriptions",
      "organizations_url": "https://api.github.com/users/dfawley/orgs",
      "repos_url": "https://api.github.com/users/dfawley/repos",
      "events_url": "https://api.github.com/users/dfawley/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dfawley/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-26T18:40:44Z",
    "updated_at": "2017-10-26T18:40:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I mention it because not moving the timeout is broken behavior if we're making progress, and the implementation ought to be trivial:\r\n\r\nThis assumes that activity is an indication of making progress, and I don't believe that's necessarily true, because we are running user handshaking code for at least one phase of this.  I think it would be more appropriate to set a deadline on the full connection establishment so that if the handshaking is confused and can't properly complete (but still generates traffic), it will still eventually terminate.  Yes that's unlikely, but any potential for an unbounded operation worries me.\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/339760874",
    "html_url": "https://github.com/grpc/grpc/issues/12830#issuecomment-339760874",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12830",
    "id": 339760874,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTc2MDg3NA==",
    "user": {
      "login": "dgquintas",
      "id": 120217,
      "node_id": "MDQ6VXNlcjEyMDIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/120217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgquintas",
      "html_url": "https://github.com/dgquintas",
      "followers_url": "https://api.github.com/users/dgquintas/followers",
      "following_url": "https://api.github.com/users/dgquintas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgquintas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgquintas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgquintas/subscriptions",
      "organizations_url": "https://api.github.com/users/dgquintas/orgs",
      "repos_url": "https://api.github.com/users/dgquintas/repos",
      "events_url": "https://api.github.com/users/dgquintas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgquintas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-26T18:42:35Z",
    "updated_at": "2017-10-26T18:42:35Z",
    "author_association": "NONE",
    "body": "@markdroth , regarding \"we should let it continue until either it finishes or 20 seconds have elapsed, at which point we immediately make the next attempt.\", that's not the way the spec currently describes the behavior. I presume you are suggesting the following:\r\n\r\n```\r\nConnectWithBackoff() {\r\n  current_backoff = INITIAL_BACKOFF\r\n  current_deadline = now() + INITIAL_BACKOFF\r\n\r\n  // TryConnect returns {SUCCESS, TIMEOUT, FAILED}\r\n  while ( \r\n    (connection_result = TryConnect(Max(current_deadline, now() + MIN_CONNECT_TIMEOUT)))\r\n       != SUCCESS) {\r\n    if (connection_result == FAILED) {\r\n      SleepUntil(current_deadline)\r\n      current_backoff = Min(current_backoff * MULTIPLIER, MAX_BACKOFF)\r\n      current_deadline = now() + current_backoff +\r\n        UniformRandom(-JITTER * current_backoff, JITTER * current_backoff)\r\n    }  \r\n  }\r\n}\r\n```\r\n\r\nThat is to say, we only backoff upon **explicit failures**, not _timeouts_. \r\n\r\n@markdroth does this describe your intent?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/339783057",
    "html_url": "https://github.com/grpc/grpc/issues/12830#issuecomment-339783057",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12830",
    "id": 339783057,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTc4MzA1Nw==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-26T19:58:06Z",
    "updated_at": "2017-10-26T19:58:06Z",
    "author_association": "MEMBER",
    "body": "No, I did not mean that we should differentiate between explicit failures and timeouts; that difference should be irrelevant to the backoff calculation.  I think the pseudo-code in the spec is fine as-is.\r\n\r\nWhat I mean is that, because the deadline for the current connection attempt may be longer than the backoff, if the current attempt fails after taking longer than the backoff amount, we should retry immediately.\r\n\r\nIn other words, in the pseudo-code shown in the spec, the SleepUntil() will be a no-op if current_deadline is in the past when the attempt completes.\r\n\r\nI think the problem in our code is that we actually need two different values, current_backoff and current_deadline, and our code is currently structured to use only a single value for both.  I think that's the part that needs to change."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/339787628",
    "html_url": "https://github.com/grpc/grpc/issues/12830#issuecomment-339787628",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12830",
    "id": 339787628,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTc4NzYyOA==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-26T20:15:08Z",
    "updated_at": "2017-10-26T20:15:08Z",
    "author_association": "MEMBER",
    "body": "Doug, I'm not actually worried about that case, because if the handshaking code is actively talking but not making progress, there's no reason to think that it will behave any differently on the next attempt.  So in principle, I agree with Craig that it should be preferable to defer the timeout if we are making progress.\r\n\r\nThat having been said, I would prefer not to make this change now, for two reasons.  First, I think will be more invasive, because it will require changes to the handshaker API.  And second, I would prefer to take more time to think through the exact parameters and make sure that there are no other implications before we implement this.  So for now, let's hold off on that change.  However, I will add a note about this in my client channel roadmap doc, so we can tackle it later (perhaps as part of writing up a comprehensive spec for client channel behavior)."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/339809270",
    "html_url": "https://github.com/grpc/grpc/issues/12830#issuecomment-339809270",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12830",
    "id": 339809270,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTgwOTI3MA==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-26T21:41:14Z",
    "updated_at": "2017-10-26T21:41:14Z",
    "author_association": "MEMBER",
    "body": "Sounds good. A small nuance I think was missed and worth noting: the\ntimestamp should be updated when progress is made. This is different to\nreceiving or sending bytes: I'd lean towards only updating on state\ntransition boundaries, and possibly not even all of them. Such a scheme\nwould (I believe) be robust against the failure case Doug is concerned with\nalso.\n\nOn Thu, Oct 26, 2017, 1:15 PM Mark D. Roth <notifications@github.com> wrote:\n\n> Doug, I'm not actually worried about that case, because if the handshaking\n> code is actively talking but not making progress, there's no reason to\n> think that it will behave any differently on the next attempt. So in\n> principle, I agree with Craig that it should be preferable to defer the\n> timeout if we are making progress.\n>\n> That having been said, I would prefer not to make this change now, for two\n> reasons. First, I think will be more invasive, because it will require\n> changes to the handshaker API. And second, I would prefer to take more time\n> to think through the exact parameters and make sure that there are no other\n> implications before we implement this. So for now, let's hold off on that\n> change. However, I will add a note about this in my client channel roadmap\n> doc, so we can tackle it later (perhaps as part of writing up a\n> comprehensive spec for client channel behavior).\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/grpc/grpc/issues/12830#issuecomment-339787628>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AJpudaSITumIJivp9wimeizQN7IVCSi6ks5swOhfgaJpZM4PuOIr>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/339813263",
    "html_url": "https://github.com/grpc/grpc/issues/12830#issuecomment-339813263",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12830",
    "id": 339813263,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTgxMzI2Mw==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-26T21:59:02Z",
    "updated_at": "2017-10-26T21:59:02Z",
    "author_association": "MEMBER",
    "body": "Ah, I see -- so instead of updating the timestamp when we send or receive bytes, we would instead update it when (e.g.) an individual handshaker completes.  That makes sense.\r\n\r\nAnyway, I've added this to my doc, so we can consider this further when we get a chance to look at this in more detail."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/342671410",
    "html_url": "https://github.com/grpc/grpc/issues/12830#issuecomment-342671410",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12830",
    "id": 342671410,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MjY3MTQxMA==",
    "user": {
      "login": "dgquintas",
      "id": 120217,
      "node_id": "MDQ6VXNlcjEyMDIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/120217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgquintas",
      "html_url": "https://github.com/dgquintas",
      "followers_url": "https://api.github.com/users/dgquintas/followers",
      "following_url": "https://api.github.com/users/dgquintas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgquintas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgquintas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgquintas/subscriptions",
      "organizations_url": "https://api.github.com/users/dgquintas/orgs",
      "repos_url": "https://api.github.com/users/dgquintas/repos",
      "events_url": "https://api.github.com/users/dgquintas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgquintas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-08T00:38:35Z",
    "updated_at": "2017-11-08T00:38:35Z",
    "author_association": "NONE",
    "body": "Fixed by https://github.com/grpc/grpc/pull/13121"
  }
]
