[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/425577443",
    "html_url": "https://github.com/grpc/grpc/pull/16737#issuecomment-425577443",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16737",
    "id": 425577443,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTU3NzQ0Mw==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-28T21:57:45Z",
    "updated_at": "2018-09-28T21:57:45Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE        FILE SIZE\n ++++++++++++++  ++++++++++++++\n\n  [ = ]       0        0  [ = ]\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE        FILE SIZE\n ++++++++++++++  ++++++++++++++\n\n  [ = ]       0        0  [ = ]\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/425578848",
    "html_url": "https://github.com/grpc/grpc/pull/16737#issuecomment-425578848",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16737",
    "id": 425578848,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTU3ODg0OA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-28T22:04:46Z",
    "updated_at": "2018-09-28T22:04:46Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/425585031",
    "html_url": "https://github.com/grpc/grpc/pull/16737#issuecomment-425585031",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16737",
    "id": 425585031,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTU4NTAzMQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-28T22:37:35Z",
    "updated_at": "2018-09-28T22:37:35Z",
    "author_association": "NONE",
    "body": "```\nObjective-C binary sizes\n*****************STATIC******************\n  New size                      Old size\n 1,964,802      Total (=)      1,964,802\n\n No significant differences in binary sizes\n\n***************FRAMEWORKS****************\n  New size                      Old size\n10,887,468      Total (>)     10,887,464\n\n No significant differences in binary sizes\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/425587276",
    "html_url": "https://github.com/grpc/grpc/pull/16737#issuecomment-425587276",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16737",
    "id": 425587276,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTU4NzI3Ng==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-28T22:48:58Z",
    "updated_at": "2018-09-28T22:48:58Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/426322113",
    "html_url": "https://github.com/grpc/grpc/pull/16737#issuecomment-426322113",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16737",
    "id": 426322113,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjMyMjExMw==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-02T15:39:04Z",
    "updated_at": "2018-10-02T15:39:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "@apolcyn, I'm not sure I fully understand this: \r\n\r\n> We often need to use clients built from master instead of a release tag because of a bug fix, etc. When doing this, however, tests need to be configured to pull images from the uri of gcr.io/grpc-testing/<language>:master\r\n\r\nI thought that the client for interop matrix should always be built from given version with patches applied (see https://github.com/grpc/grpc/tree/master/tools/interop_matrix/patches), I don't think we should ever build from master.\r\nI agree that what you're describing sound scary, but I think the right way is to always apply patches so that the tag becomes buildable, not adding new command line arguments - but perhaps I'm out of context here, so please correct me if needed.\r\n\r\nBtw I think the whole process for interop_matrix is pretty cumbersome and would need some simplification."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/426429383",
    "html_url": "https://github.com/grpc/grpc/pull/16737#issuecomment-426429383",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16737",
    "id": 426429383,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjQyOTM4Mw==",
    "user": {
      "login": "apolcyn",
      "id": 9566254,
      "node_id": "MDQ6VXNlcjk1NjYyNTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9566254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apolcyn",
      "html_url": "https://github.com/apolcyn",
      "followers_url": "https://api.github.com/users/apolcyn/followers",
      "following_url": "https://api.github.com/users/apolcyn/following{/other_user}",
      "gists_url": "https://api.github.com/users/apolcyn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apolcyn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apolcyn/subscriptions",
      "organizations_url": "https://api.github.com/users/apolcyn/orgs",
      "repos_url": "https://api.github.com/users/apolcyn/repos",
      "events_url": "https://api.github.com/users/apolcyn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apolcyn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-02T21:03:15Z",
    "updated_at": "2018-10-02T21:03:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I thought that the client for interop matrix should always be built from given version with patches applied (see https://github.com/grpc/grpc/tree/master/tools/interop_matrix/patches), I don't think we should ever build from master.\r\n\r\nI think the patches thing is really best suited for the case in which we want to test a certain release branch `1.x` of a certain language in the interop tests, but where there is something wrong specifically with the interop client on that branch preventing it from building and running suitably in the interop test suite. For example, the ruby client on the 1.0.x branch (the original motivation for that patches feature) works fine on its latest point release of that branch, but there is a bug in its version of protobuf that prevents the protobuf library from loading on ruby versions with more than two digits in its minor  version (which the interop client docker image happens to use); so the ruby patch on that branch changes the interop client docker image's ruby version. I tend to think that for cases in which the client has a legitimate bug that prevents it from being testable, there should probably be an actual source code patch and subsequent release of that language on that branch (with a new updated tag).\r\n\r\nThe cases where I'm using the `master` tag builds of these images is to pick up e.g. new gRPC feature additions that haven't made it into a release yet... like, for example, grpc-go's addition of the \"google default credentials\" API that was [merged one week ago](https://github.com/grpc/grpc-go/pull/2315).\r\n\r\nI'm actually not sure if/who there is anyone else using the `master` tag builds... I personally would be ok getting rid of the extra command arg and having this new behavior be the default for `master` tag builds, as an alternative.\r\n\r\nWDYT?\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/426434962",
    "html_url": "https://github.com/grpc/grpc/pull/16737#issuecomment-426434962",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16737",
    "id": 426434962,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjQzNDk2Mg==",
    "user": {
      "login": "apolcyn",
      "id": 9566254,
      "node_id": "MDQ6VXNlcjk1NjYyNTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9566254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apolcyn",
      "html_url": "https://github.com/apolcyn",
      "followers_url": "https://api.github.com/users/apolcyn/followers",
      "following_url": "https://api.github.com/users/apolcyn/following{/other_user}",
      "gists_url": "https://api.github.com/users/apolcyn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apolcyn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apolcyn/subscriptions",
      "organizations_url": "https://api.github.com/users/apolcyn/orgs",
      "repos_url": "https://api.github.com/users/apolcyn/repos",
      "events_url": "https://api.github.com/users/apolcyn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apolcyn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-02T21:22:09Z",
    "updated_at": "2018-10-02T21:22:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Btw I think the whole process for interop_matrix is pretty cumbersome and would need some simplification.\r\n\r\nack, but no useful ideas atm on this end :)"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/427065687",
    "html_url": "https://github.com/grpc/grpc/pull/16737#issuecomment-427065687",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16737",
    "id": 427065687,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzA2NTY4Nw==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-04T15:36:37Z",
    "updated_at": "2018-10-04T15:37:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "I never understood what the `master` tag builds were useful for besides being confusing. :-)\r\nIsn't the regular interop tests (from run_interop_tests.py) what should be used for testing on master?\r\n\r\nTo be honest, the entire run_interop_matrix.py is so confusing to me that I'm kind of afraid to approve anything without re-reading the entire script :-(."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/427201806",
    "html_url": "https://github.com/grpc/grpc/pull/16737#issuecomment-427201806",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16737",
    "id": 427201806,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzIwMTgwNg==",
    "user": {
      "login": "apolcyn",
      "id": 9566254,
      "node_id": "MDQ6VXNlcjk1NjYyNTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9566254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apolcyn",
      "html_url": "https://github.com/apolcyn",
      "followers_url": "https://api.github.com/users/apolcyn/followers",
      "following_url": "https://api.github.com/users/apolcyn/following{/other_user}",
      "gists_url": "https://api.github.com/users/apolcyn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apolcyn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apolcyn/subscriptions",
      "organizations_url": "https://api.github.com/users/apolcyn/orgs",
      "repos_url": "https://api.github.com/users/apolcyn/repos",
      "events_url": "https://api.github.com/users/apolcyn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apolcyn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-04T23:31:55Z",
    "updated_at": "2018-10-04T23:31:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Isn't the regular interop tests (from run_interop_tests.py) what should be used for testing on master?\r\n\r\nFWIW actually, the only real reasons I'm using the interop client docker images built from the interop matrix right now are:\r\n  1) Having the client pre-built in a docker image cuts down test time a lot by skipping the build step\r\n  2) It simplifies test environment setup: tests on new VM's just need to install docker, pull an image, run\r\n  3) `docker pull` from GCR is (from my observations) a lot less flak than `git clone` or debian package downloads\r\n\r\nI'm using the interop clients in these environment in ways which `run_interop_tests.py` isn't suited for, and so there is basically another `run_interop_tests` python script for this environment, which happens to use imagess built by this script. All in all I'd actually like to move away from this since it's a sort of unintended use case . . . but it's also convenient. "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/430932940",
    "html_url": "https://github.com/grpc/grpc/pull/16737#issuecomment-430932940",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16737",
    "id": 430932940,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDkzMjk0MA==",
    "user": {
      "login": "apolcyn",
      "id": 9566254,
      "node_id": "MDQ6VXNlcjk1NjYyNTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9566254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apolcyn",
      "html_url": "https://github.com/apolcyn",
      "followers_url": "https://api.github.com/users/apolcyn/followers",
      "following_url": "https://api.github.com/users/apolcyn/following{/other_user}",
      "gists_url": "https://api.github.com/users/apolcyn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apolcyn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apolcyn/subscriptions",
      "organizations_url": "https://api.github.com/users/apolcyn/orgs",
      "repos_url": "https://api.github.com/users/apolcyn/repos",
      "events_url": "https://api.github.com/users/apolcyn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apolcyn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-18T09:04:49Z",
    "updated_at": "2018-10-18T09:04:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm not using the mentioned thing anymore so I have no need for this myself"
  }
]
