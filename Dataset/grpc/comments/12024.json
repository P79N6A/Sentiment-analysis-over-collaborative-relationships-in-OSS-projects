[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/319528832",
    "html_url": "https://github.com/grpc/grpc/pull/12024#issuecomment-319528832",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12024",
    "id": 319528832,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTUyODgzMg==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-01T23:53:58Z",
    "updated_at": "2017-08-01T23:53:58Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/319533125",
    "html_url": "https://github.com/grpc/grpc/pull/12024#issuecomment-319533125",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12024",
    "id": 319533125,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTUzMzEyNQ==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-02T00:24:03Z",
    "updated_at": "2017-08-02T00:24:03Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/319730768",
    "html_url": "https://github.com/grpc/grpc/pull/12024#issuecomment-319730768",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12024",
    "id": 319730768,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTczMDc2OA==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-02T16:47:13Z",
    "updated_at": "2017-08-02T16:47:13Z",
    "author_association": "MEMBER",
    "body": "I think the API here could be improved to make tests easier to write.  However, I'd really like to see an example of a test using this framework, since that will make it clearer how it's expected to be used.\n\n---\n\nReviewed 10 of 10 files at r1.\nReview status: all files reviewed at latest revision, 9 unresolved discussions, some commit checks failed.\n\n---\n\n*[build.yaml, line 732 at r1](https://reviewable.io:443/reviews/grpc/grpc/12024#-KqYZd5ObcO5-hoC5mRj:-KqYZd5ObcO5-hoC5mRk:bcoc19g) ([raw file](https://github.com/grpc/grpc/blob/7d276fe4bc2808ec3e9f5548b0de22fa0020c918/build.yaml#L732)):*\n> ```YAML\n>   - test/core/end2end/fixtures/proxy.c\n>   - test/core/iomgr/endpoint_tests.c\n>   - test/core/tsi/transport_security_test_lib.c\n> ```\n\nPlease add a rule for this new library in `test/core/tsi/BUILD`.\n\n---\n\n*[test/core/tsi/transport_security_test_lib.c, line 40 at r1](https://reviewable.io:443/reviews/grpc/grpc/12024#-KqYcvO66LefRZF6QzG4:-KqYcvO66LefRZF6QzG5:b4ol8yr) ([raw file](https://github.com/grpc/grpc/blob/7d276fe4bc2808ec3e9f5548b0de22fa0020c918/test/core/tsi/transport_security_test_lib.c#L40)):*\n> ```C\n> static handshaker_args *handshaker_args_create(transport_security_test_lib *lib,\n>                                                bool is_client) {\n>   GPR_ASSERT(lib != NULL && lib->config != NULL);\n> ```\n\nPlease split these into two separate asserts, so that if there's a problem, we know which condition was not met.\n\nSame thing in all cases where you have a `&&` inside of an assert.\n\n---\n\n*[test/core/tsi/transport_security_test_lib.c, line 401 at r1](https://reviewable.io:443/reviews/grpc/grpc/12024#-KqYpBt5NrI0VKmnmsea:-KqYpBt5NrI0VKmnmseb:b-dfc7jq) ([raw file](https://github.com/grpc/grpc/blob/7d276fe4bc2808ec3e9f5548b0de22fa0020c918/test/core/tsi/transport_security_test_lib.c#L401)):*\n> ```C\n> }\n> \n> void transport_security_test_do_round_trip(transport_security_test_lib *lib) {\n> ```\n\nWhat is the difference between this test and the ping_pong test, in terms of code coverage?  Are there cases covered by each that are not covered by the other, or is one a subset of the other (in which case, why is the subset needed)?\n\n---\n\n*[test/core/tsi/transport_security_test_lib.h, line 39 at r1](https://reviewable.io:443/reviews/grpc/grpc/12024#-KqYa1PVLcsrKOpYUpef:-KqYa1PVLcsrKOpYUpeg:b9wmc7q) ([raw file](https://github.com/grpc/grpc/blob/7d276fe4bc2808ec3e9f5548b0de22fa0020c918/test/core/tsi/transport_security_test_lib.h#L39)):*\n> ```objc\n> #define TSI_TEST_NUM_OF_COMBINATIONS 256\n> \n> /* Main struct for transport_security_test_lib. */\n> ```\n\nThis comment is not very helpful.  What exactly is a `transport_security_test_lib`?  What does it represent or do?  How is it used?\n\n---\n\n*[test/core/tsi/transport_security_test_lib.h, line 40 at r1](https://reviewable.io:443/reviews/grpc/grpc/12024#-KqYZsuK7nV1QxxeNR3t:-KqYZsuK7nV1QxxeNR3u:byzpsd9) ([raw file](https://github.com/grpc/grpc/blob/7d276fe4bc2808ec3e9f5548b0de22fa0020c918/test/core/tsi/transport_security_test_lib.h#L40)):*\n> ```objc\n> \n> /* Main struct for transport_security_test_lib. */\n> typedef struct transport_security_test_lib transport_security_test_lib;\n> ```\n\n`_lib` seems like an odd suffix for a struct.  `_fixture` might be a better choice.\n\n---\n\n*[test/core/tsi/transport_security_test_lib.h, line 44 at r1](https://reviewable.io:443/reviews/grpc/grpc/12024#-KqYee3EPLZIBtaKB6Ue:-KqYee3EPLZIBtaKB6Uf:b-5r602w) ([raw file](https://github.com/grpc/grpc/blob/7d276fe4bc2808ec3e9f5548b0de22fa0020c918/test/core/tsi/transport_security_test_lib.h#L44)):*\n> ```objc\n> /* V-table for transport_security_test_lib operations. */\n> typedef struct transport_security_test_vtable {\n>   void (*setup_handshakers)(transport_security_test_lib *lib);\n> ```\n\nThis interface seems a bit clunky for tests.  Would it make more sense to have an API where the tests directly set up their handshakers, check the results, and destroy the handshakers, and simply use some helper functions to run the tests in between?\n\nMore generally, I think it would really help to see some of the tests that will be using this interface.  It's hard to get an idea of how effective this interface will be without seeing it being used.\n\n---\n\n*[test/core/tsi/transport_security_test_lib.h, line 61 at r1](https://reviewable.io:443/reviews/grpc/grpc/12024#-KqY_wvQI2HtsNnWl454:-KqY_wvQI2HtsNnWl455:b-891ois) ([raw file](https://github.com/grpc/grpc/blob/7d276fe4bc2808ec3e9f5548b0de22fa0020c918/test/core/tsi/transport_security_test_lib.h#L61)):*\n> ```objc\n> };\n> \n> struct transport_security_test_config {\n> ```\n\nNeed a comment here explaining what this struct is.\n\nWhat's the relationship between a `transport_security_test_config` and `transport_security_test_lib`?  I don't actually see any API here that uses both of them.\n\n---\n\n*[test/core/tsi/transport_security_test_lib.h, line 62 at r1](https://reviewable.io:443/reviews/grpc/grpc/12024#-KqYaJ3reB_kxNe0H7Fd:-KqYaJ3reB_kxNe0H7Fe:b-gdt5m8) ([raw file](https://github.com/grpc/grpc/blob/7d276fe4bc2808ec3e9f5548b0de22fa0020c918/test/core/tsi/transport_security_test_lib.h#L62)):*\n> ```objc\n> \n> struct transport_security_test_config {\n>   size_t read_buffer_allocated_size;\n> ```\n\nPlease add short comments explaining what each field is for and how it is used.\n\n---\n\n*[test/core/tsi/transport_security_test_lib.h, line 84 at r1](https://reviewable.io:443/reviews/grpc/grpc/12024#-KqYboylxrtc_mkOyTYb:-KqYboylxrtc_mkOyTYc:be0cwe9) ([raw file](https://github.com/grpc/grpc/blob/7d276fe4bc2808ec3e9f5548b0de22fa0020c918/test/core/tsi/transport_security_test_lib.h#L84)):*\n> ```objc\n> /* This method creates a transport_security_test_config instance. */\n> transport_security_test_config *transport_security_test_config_create(\n>     bool use_default_read_buffer_allocated_size,\n> ```\n\nPlease document the parameters.\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/12024#-:-KqYpo8Eo3_JwOAYwXiO:bywmyhf)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/320785937",
    "html_url": "https://github.com/grpc/grpc/pull/12024#issuecomment-320785937",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12024",
    "id": 320785937,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDc4NTkzNw==",
    "user": {
      "login": "yihuazhang",
      "id": 26934891,
      "node_id": "MDQ6VXNlcjI2OTM0ODkx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/26934891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yihuazhang",
      "html_url": "https://github.com/yihuazhang",
      "followers_url": "https://api.github.com/users/yihuazhang/followers",
      "following_url": "https://api.github.com/users/yihuazhang/following{/other_user}",
      "gists_url": "https://api.github.com/users/yihuazhang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yihuazhang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yihuazhang/subscriptions",
      "organizations_url": "https://api.github.com/users/yihuazhang/orgs",
      "repos_url": "https://api.github.com/users/yihuazhang/repos",
      "events_url": "https://api.github.com/users/yihuazhang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yihuazhang/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-07T21:29:04Z",
    "updated_at": "2017-08-07T21:29:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "I added fake and SSL test instances that use the test libraries. \n\n---\n\nReview status: 0 of 15 files reviewed at latest revision, 10 unresolved discussions.\n\n---\n\n*[build.yaml, line 732 at r1](https://reviewable.io:443/reviews/grpc/grpc/12024#-KqYZd5ObcO5-hoC5mRj:-KqfYEGl3yHI1dbCO-9h:bs7wumx) ([raw file](https://github.com/grpc/grpc/blob/7d276fe4bc2808ec3e9f5548b0de22fa0020c918/build.yaml#L732)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nPlease add a rule for this new library in `test/core/tsi/BUILD`.\n</blockquote></details>\n\nDone. \n\n---\n\n*[test/core/tsi/transport_security_test_lib.c, line 40 at r1](https://reviewable.io:443/reviews/grpc/grpc/12024#-KqYcvO66LefRZF6QzG4:-KqfYm-QFwx6R94IZuyX:bxz9hzb) ([raw file](https://github.com/grpc/grpc/blob/7d276fe4bc2808ec3e9f5548b0de22fa0020c918/test/core/tsi/transport_security_test_lib.c#L40)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nPlease split these into two separate asserts, so that if there's a problem, we know which condition was not met.\n\nSame thing in all cases where you have a `&&` inside of an assert.\n</blockquote></details>\n\nGood suggestion, and changes are applied. \n\n---\n\n*[test/core/tsi/transport_security_test_lib.c, line 401 at r1](https://reviewable.io:443/reviews/grpc/grpc/12024#-KqYpBt5NrI0VKmnmsea:-KqfZo9fLlxKr1mHLgm2:bu6em31) ([raw file](https://github.com/grpc/grpc/blob/7d276fe4bc2808ec3e9f5548b0de22fa0020c918/test/core/tsi/transport_security_test_lib.c#L401)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nWhat is the difference between this test and the ping_pong test, in terms of code coverage?  Are there cases covered by each that are not covered by the other, or is one a subset of the other (in which case, why is the subset needed)?\n</blockquote></details>\n\nThe ping_pong test is used to validate frame protector APIs on small messages, which means the sender only needs to call protect and flush once, and the receiver needs to call unprotect once. The do_round_trip test validates the APIS on big messages, and the sender and receiver will call respective APIs repeatedly (see send_message_to_peer() and receive_message_from_peer()). So, yes, the ping_pong test is the subset of the rount_trip test, and I removed it from the test library. To make it complete, I added a test that uses do_round_trip on small messages. \n\n---\n\n*[test/core/tsi/transport_security_test_lib.h, line 39 at r1](https://reviewable.io:443/reviews/grpc/grpc/12024#-KqYa1PVLcsrKOpYUpef:-Kqn2gfIo-vqYFLdOrOP:b-81jabi) ([raw file](https://github.com/grpc/grpc/blob/7d276fe4bc2808ec3e9f5548b0de22fa0020c918/test/core/tsi/transport_security_test_lib.h#L39)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nThis comment is not very helpful.  What exactly is a `transport_security_test_lib`?  What does it represent or do?  How is it used?\n</blockquote></details>\n\nThe comment is revised. In general, transport_security_test_fixture is an object that wraps all information common to TSI implementations, and will be used to test correctness of TSI handshakes and frame protect/unprotect operations with respect to the implementations.  So, when testing TSI implementations, each of them will have its own struct (e.g., ssl_transport_security_test_fixture) that has transport_security_test_fixture as its base, and other members that are specific to the implementation. Then, they will call do_round_trip to test common TSI functionalities, and validate other implementation-specific tests. \n\n---\n\n*[test/core/tsi/transport_security_test_lib.h, line 40 at r1](https://reviewable.io:443/reviews/grpc/grpc/12024#-KqYZsuK7nV1QxxeNR3t:-Kqfdqkq4vFIN-mwZvzc:bmqgsbk) ([raw file](https://github.com/grpc/grpc/blob/7d276fe4bc2808ec3e9f5548b0de22fa0020c918/test/core/tsi/transport_security_test_lib.h#L40)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\n`_lib` seems like an odd suffix for a struct.  `_fixture` might be a better choice.\n</blockquote></details>\n\nThe struct name is changed to use _fixture.                  \n\n---\n\n*[test/core/tsi/transport_security_test_lib.h, line 44 at r1](https://reviewable.io:443/reviews/grpc/grpc/12024#-KqYee3EPLZIBtaKB6Ue:-KqhIdmwYldCwGcm-HDC:b-9thw0l) ([raw file](https://github.com/grpc/grpc/blob/7d276fe4bc2808ec3e9f5548b0de22fa0020c918/test/core/tsi/transport_security_test_lib.h#L44)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nThis interface seems a bit clunky for tests.  Would it make more sense to have an API where the tests directly set up their handshakers, check the results, and destroy the handshakers, and simply use some helper functions to run the tests in between?\n\nMore generally, I think it would really help to see some of the tests that will be using this interface.  It's hard to get an idea of how effective this interface will be without seeing it being used.\n</blockquote></details>\n\nI added ssl and fake TSI implementations to this PR, which might provide better insight regarding the use of these APIs. So, in general, since each TSI implementation has its own way of constructing (i.e., setup) handshakers, validating handshake results, and destructing the fixture, which leads me to think that it might be a good idea to treat them as \"virtual\" APIs, separately. Similar pattern is used in C++ version of TSI  test library in security/loas/l2/internal/transport_security/transport_security_test_lib.cc. \n\n---\n\n*[test/core/tsi/transport_security_test_lib.h, line 61 at r1](https://reviewable.io:443/reviews/grpc/grpc/12024#-KqY_wvQI2HtsNnWl454:-KqhKfGHKXOPINfNUes7:b89696k) ([raw file](https://github.com/grpc/grpc/blob/7d276fe4bc2808ec3e9f5548b0de22fa0020c918/test/core/tsi/transport_security_test_lib.h#L61)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nNeed a comment here explaining what this struct is.\n\nWhat's the relationship between a `transport_security_test_config` and `transport_security_test_lib`?  I don't actually see any API here that uses both of them.\n</blockquote></details>\n\nI added comments that explain each of those two structs. transport_security_test_config (which is now renamed to tsi_test_frame_protector_config) is a member of transport_security_test_lib (which is now renamed to tsi_test_fixture), and is mainly used to configure parameters of TSI frame protector APIs.\n\n---\n\n*[test/core/tsi/transport_security_test_lib.h, line 62 at r1](https://reviewable.io:443/reviews/grpc/grpc/12024#-KqYaJ3reB_kxNe0H7Fd:-KqhLToxD3Qw-HAytZhs:b-qu9uj2) ([raw file](https://github.com/grpc/grpc/blob/7d276fe4bc2808ec3e9f5548b0de22fa0020c918/test/core/tsi/transport_security_test_lib.h#L62)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nPlease add short comments explaining what each field is for and how it is used.\n</blockquote></details>\n\nThe comments are added.\n\n---\n\n*[test/core/tsi/transport_security_test_lib.h, line 84 at r1](https://reviewable.io:443/reviews/grpc/grpc/12024#-KqYboylxrtc_mkOyTYb:-KqhLguFyQcrNZwTZgMt:b5k1f5m) ([raw file](https://github.com/grpc/grpc/blob/7d276fe4bc2808ec3e9f5548b0de22fa0020c918/test/core/tsi/transport_security_test_lib.h#L84)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nPlease document the parameters.\n</blockquote></details>\n\nThe parameters are documented. \n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/12024#-:-KqhMDa2ZQgqW8TrLUOT:b-qv49t2)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/320797354",
    "html_url": "https://github.com/grpc/grpc/pull/12024#issuecomment-320797354",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12024",
    "id": 320797354,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDc5NzM1NA==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-07T22:24:38Z",
    "updated_at": "2017-08-07T22:24:38Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/320802311",
    "html_url": "https://github.com/grpc/grpc/pull/12024#issuecomment-320802311",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12024",
    "id": 320802311,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDgwMjMxMQ==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-07T22:53:22Z",
    "updated_at": "2017-08-07T22:53:22Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/320812423",
    "html_url": "https://github.com/grpc/grpc/pull/12024#issuecomment-320812423",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12024",
    "id": 320812423,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDgxMjQyMw==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-08T00:00:05Z",
    "updated_at": "2017-08-08T00:00:05Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/320816968",
    "html_url": "https://github.com/grpc/grpc/pull/12024#issuecomment-320816968",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12024",
    "id": 320816968,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDgxNjk2OA==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-08T00:33:16Z",
    "updated_at": "2017-08-08T00:33:16Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/320842860",
    "html_url": "https://github.com/grpc/grpc/pull/12024#issuecomment-320842860",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12024",
    "id": 320842860,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDg0Mjg2MA==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-08T03:51:36Z",
    "updated_at": "2017-08-08T03:51:36Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/320846218",
    "html_url": "https://github.com/grpc/grpc/pull/12024#issuecomment-320846218",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12024",
    "id": 320846218,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDg0NjIxOA==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-08T04:22:20Z",
    "updated_at": "2017-08-08T04:22:20Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/321008966",
    "html_url": "https://github.com/grpc/grpc/pull/12024#issuecomment-321008966",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12024",
    "id": 321008966,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTAwODk2Ng==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-08T16:27:09Z",
    "updated_at": "2017-08-08T16:27:09Z",
    "author_association": "MEMBER",
    "body": "\n\n\n\nReviewed 15 of 15 files at r2.\nReview status: 7 of 15 files reviewed at latest revision, 21 unresolved discussions, some commit checks broke.\n\n---\n\n*[test/core/tsi/fake_transport_security_test.c, line 36 at r2](https://reviewable.io:443/reviews/grpc/grpc/12024#-Kr1aoV7QClz9l-7Z4Lx:-Kr1aoV7QClz9l-7Z4Ly:bdh8jwg) ([raw file](https://github.com/grpc/grpc/blob/04eb9df6aba4dabb81d4f4cf0281b284ae47e2e7/test/core/tsi/fake_transport_security_test.c#L36)):*\n>   fixture->client_handshaker = tsi_create_fake_handshaker(1 /* is_client. */);\n>   fixture->server_handshaker = tsi_create_fake_handshaker(0 /* is_client. */);\n\nCan use `true` and `false` instead of `1` and `0`.\n\n---\n\n*[test/core/tsi/fake_transport_security_test.c, line 46 at r2](https://reviewable.io:443/reviews/grpc/grpc/12024#-Kr1bHtFXyNfB4HpJ-mS:-Kr1bHtFXyNfB4HpJ-mT:bbekns8) ([raw file](https://github.com/grpc/grpc/blob/04eb9df6aba4dabb81d4f4cf0281b284ae47e2e7/test/core/tsi/fake_transport_security_test.c#L46)):*\n> ```C\n>   GPR_ASSERT(tsi_handshaker_result_extract_peer(fixture->client_result,\n>                                                 &peer) == TSI_OK);\n>   tsi_peer_destruct(&peer);\n> ```\n\nNot checking the value of peer here?\n\n---\n\n*[test/core/tsi/fake_transport_security_test.c, line 56 at r2](https://reviewable.io:443/reviews/grpc/grpc/12024#-Kr1b-58Ber5HgAE-iPR:-Kr1b-58Ber5HgAE-iPS:b-r80c88) ([raw file](https://github.com/grpc/grpc/blob/04eb9df6aba4dabb81d4f4cf0281b284ae47e2e7/test/core/tsi/fake_transport_security_test.c#L56)):*\n>   tsi_test_frame_protector_config_destroy(fixture->config);\n>   tsi_handshaker_destroy(fixture->client_handshaker);\n>   tsi_handshaker_destroy(fixture->server_handshaker);\n>   tsi_handshaker_result_destroy(fixture->client_result);\n>   tsi_handshaker_result_destroy(fixture->server_result);\n>   gpr_free(fixture->client_channel);\n>   gpr_free(fixture->server_channel);\n\nNone of this code looks specific to the fake TSI implementation.  Doesn't this belong in `tsi_test_fixture_destroy()`?\n\n---\n\n*[test/core/tsi/fake_transport_security_test.c, line 76 at r2](https://reviewable.io:443/reviews/grpc/grpc/12024#-Kr1eNdreRn9XsFl-s1w:-Kr1eNdreRn9XsFl-s1x:bj8lwp4) ([raw file](https://github.com/grpc/grpc/blob/04eb9df6aba4dabb81d4f4cf0281b284ae47e2e7/test/core/tsi/fake_transport_security_test.c#L76)):*\n>   fake_fixture->base.handshake_buffer_size = TSI_TEST_DEFAULT_BUFFER_SIZE;\n>   fake_fixture->base.client_channel = gpr_zalloc(TSI_TEST_DEFAULT_CHANNEL_SIZE);\n>   fake_fixture->base.server_channel = gpr_zalloc(TSI_TEST_DEFAULT_CHANNEL_SIZE);\n>   fake_fixture->base.bytes_written_to_client_channel = 0;\n>   fake_fixture->base.bytes_written_to_server_channel = 0;\n>   fake_fixture->base.bytes_read_from_client_channel = 0;\n>   fake_fixture->base.bytes_read_from_server_channel = 0;\n\nWe should probably have a `tsi_test_fixture_init()` function that does all of this, so the individual tests don't need to do it themselves.\n\n---\n\n*[test/core/tsi/fake_transport_security_test.c, line 109 at r2](https://reviewable.io:443/reviews/grpc/grpc/12024#-Kr1cPsrCI64Ihn-_M30:-Kr1cPsrCI64Ihn-_M31:b-7s4sqq) ([raw file](https://github.com/grpc/grpc/blob/04eb9df6aba4dabb81d4f4cf0281b284ae47e2e7/test/core/tsi/fake_transport_security_test.c#L109)):*\n> ```C\n>   unsigned int *bit_array =\n>       gpr_zalloc(sizeof(unsigned int) * TSI_TEST_NUM_OF_ARGUMENTS);\n>   unsigned int mask = 1U << (TSI_TEST_NUM_OF_ARGUMENTS - 1);\n> ```\n\nconst\n\n---\n\n*[test/core/tsi/fake_transport_security_test.c, line 110 at r2](https://reviewable.io:443/reviews/grpc/grpc/12024#-Kr1cRAdMqRNCdSl_38B:-Kr1cRAdMqRNCdSl_38C:b-eo0gda) ([raw file](https://github.com/grpc/grpc/blob/04eb9df6aba4dabb81d4f4cf0281b284ae47e2e7/test/core/tsi/fake_transport_security_test.c#L110)):*\n> ```C\n>       gpr_zalloc(sizeof(unsigned int) * TSI_TEST_NUM_OF_ARGUMENTS);\n>   unsigned int mask = 1U << (TSI_TEST_NUM_OF_ARGUMENTS - 1);\n>   unsigned int val = 0, ind = 0;\n> ```\n\nPlease declare these variables directly in the for loops where they're used:\n\n```\nfor (unsigned int val = 0; val < TSI_TEST_NUM_OF_COMBINATIONS; ++val) {\n  unsigned int v = val;\n  for (unsigned int ind = 0; ind < TSI_TEST_NUM_OF_ARGUMENTS; ++ind) {\n```\n\n---\n\n*[test/core/tsi/fake_transport_security_test.c, line 130 at r2](https://reviewable.io:443/reviews/grpc/grpc/12024#-Kr1bzodZG-rbpJYS5k6:-Kr1bzodZG-rbpJYS5k7:bqzvqvl) ([raw file](https://github.com/grpc/grpc/blob/04eb9df6aba4dabb81d4f4cf0281b284ae47e2e7/test/core/tsi/fake_transport_security_test.c#L130)):*\n>   size_t odd_sizes[] = {1025, 2051, 4103, 8207, 16409};\n>   size_t size = sizeof(odd_sizes) / sizeof(size_t);\n\nThese can be const.\n\n---\n\n*[test/core/tsi/fake_transport_security_test.c, line 132 at r2](https://reviewable.io:443/reviews/grpc/grpc/12024#-Kr1c0VLeGm2kaizYd2T:-Kr1c0VLeGm2kaizYd2U:b8c1xka) ([raw file](https://github.com/grpc/grpc/blob/04eb9df6aba4dabb81d4f4cf0281b284ae47e2e7/test/core/tsi/fake_transport_security_test.c#L132)):*\n> ```C\n>   size_t odd_sizes[] = {1025, 2051, 4103, 8207, 16409};\n>   size_t size = sizeof(odd_sizes) / sizeof(size_t);\n>   size_t ind1 = 0, ind2 = 0, ind3 = 0, ind4 = 0, ind5 = 0;\n> ```\n\nPlease declare these variables in-line in the for loops in which they are used.\n\n---\n\n*[test/core/tsi/ssl_transport_security_test.c, line 295 at r2](https://reviewable.io:443/reviews/grpc/grpc/12024#-Kr1dL8yRle4AtV6RMpx:-Kr1dL8zDSFPGimS8K_Y:b-jy7q3z) ([raw file](https://github.com/grpc/grpc/blob/04eb9df6aba4dabb81d4f4cf0281b284ae47e2e7/test/core/tsi/ssl_transport_security_test.c#L295)):*\n>   tsi_test_frame_protector_config_destroy(ssl_fixture->base.config);\n>   tsi_handshaker_destroy(ssl_fixture->base.client_handshaker);\n>   tsi_handshaker_destroy(ssl_fixture->base.server_handshaker);\n>   tsi_handshaker_result_destroy(ssl_fixture->base.client_result);\n>   tsi_handshaker_result_destroy(ssl_fixture->base.server_result);\n>   gpr_free(ssl_fixture->base.client_channel);\n>   gpr_free(ssl_fixture->base.server_channel);\n\nI think this code belongs in `tsi_test_fixture_destroy()`.\n\n---\n\n*[test/core/tsi/ssl_transport_security_test.c, line 345 at r2](https://reviewable.io:443/reviews/grpc/grpc/12024#-Kr1e1Ui81dCcxxw2A1Q:-Kr1e1Ui81dCcxxw2A1R:b-s5lkzf) ([raw file](https://github.com/grpc/grpc/blob/04eb9df6aba4dabb81d4f4cf0281b284ae47e2e7/test/core/tsi/ssl_transport_security_test.c#L345)):*\n> ```C\n>     ssl_test_destruct};\n> \n> static void malloc_and_copy(const char *src, char **dst) {\n> ```\n\nMight be simpler to return dst instead of setting it via a parameter.\n\n---\n\n*[test/core/tsi/ssl_transport_security_test.c, line 424 at r2](https://reviewable.io:443/reviews/grpc/grpc/12024#-Kr1eYrYw37109tQ8p2M:-Kr1eYrYw37109tQ8p2N:b-pkdelx) ([raw file](https://github.com/grpc/grpc/blob/04eb9df6aba4dabb81d4f4cf0281b284ae47e2e7/test/core/tsi/ssl_transport_security_test.c#L424)):*\n>   ssl_fixture->base.handshake_buffer_size = TSI_TEST_DEFAULT_BUFFER_SIZE;\n>   ssl_fixture->base.client_channel = gpr_zalloc(TSI_TEST_DEFAULT_CHANNEL_SIZE);\n>   ssl_fixture->base.server_channel = gpr_zalloc(TSI_TEST_DEFAULT_CHANNEL_SIZE);\n>   ssl_fixture->base.bytes_written_to_client_channel = 0;\n>   ssl_fixture->base.bytes_written_to_server_channel = 0;\n>   ssl_fixture->base.bytes_read_from_client_channel = 0;\n>   ssl_fixture->base.bytes_read_from_server_channel = 0;\n\nSee comment elsewhere about having a `tsi_test_fixture_init()` function.\n\n---\n\n*[test/core/tsi/ssl_transport_security_test.c, line 534 at r2](https://reviewable.io:443/reviews/grpc/grpc/12024#-Kr1elDPDGHYCXnpG08t:-Kr1elDPDGHYCXnpG08u:b-7s4sqq) ([raw file](https://github.com/grpc/grpc/blob/04eb9df6aba4dabb81d4f4cf0281b284ae47e2e7/test/core/tsi/ssl_transport_security_test.c#L534)):*\n> ```C\n>   unsigned int *bit_array =\n>       gpr_zalloc(sizeof(unsigned int) * TSI_TEST_NUM_OF_ARGUMENTS);\n>   unsigned int mask = 1U << (TSI_TEST_NUM_OF_ARGUMENTS - 1);\n> ```\n\nconst\n\n---\n\n*[test/core/tsi/ssl_transport_security_test.c, line 535 at r2](https://reviewable.io:443/reviews/grpc/grpc/12024#-Kr1elv3uZ5OhZpQePPz:-Kr1elv3uZ5OhZpQePQ-:b-urae4h) ([raw file](https://github.com/grpc/grpc/blob/04eb9df6aba4dabb81d4f4cf0281b284ae47e2e7/test/core/tsi/ssl_transport_security_test.c#L535)):*\n> ```C\n>       gpr_zalloc(sizeof(unsigned int) * TSI_TEST_NUM_OF_ARGUMENTS);\n>   unsigned int mask = 1U << (TSI_TEST_NUM_OF_ARGUMENTS - 1);\n>   unsigned int val = 0, ind = 0;\n> ```\n\nPlease declare these directly in the for loops in which they are used.\n\n---\n\n*[test/core/tsi/ssl_transport_security_test.c, line 556 at r2](https://reviewable.io:443/reviews/grpc/grpc/12024#-Kr1eqctBA8ycnmswbOQ:-Kr1eqctBA8ycnmswbOR:b1gbuc9) ([raw file](https://github.com/grpc/grpc/blob/04eb9df6aba4dabb81d4f4cf0281b284ae47e2e7/test/core/tsi/ssl_transport_security_test.c#L556)):*\n>   size_t odd_sizes[] = {1025, 2051, 4103, 8207, 16409};\n>   size_t size = sizeof(odd_sizes) / sizeof(size_t);\n\nconst\n\n---\n\n*[test/core/tsi/ssl_transport_security_test.c, line 557 at r2](https://reviewable.io:443/reviews/grpc/grpc/12024#-Kr1esCQ7AyECrpDHvQL:-Kr1esCQ7AyECrpDHvQM:b-urae4h) ([raw file](https://github.com/grpc/grpc/blob/04eb9df6aba4dabb81d4f4cf0281b284ae47e2e7/test/core/tsi/ssl_transport_security_test.c#L557)):*\n> ```C\n>   size_t odd_sizes[] = {1025, 2051, 4103, 8207, 16409};\n>   size_t size = sizeof(odd_sizes) / sizeof(size_t);\n>   size_t ind1 = 0, ind2 = 0, ind3 = 0, ind4 = 0, ind5 = 0;\n> ```\n\nPlease declare these directly in the for loops in which they are used.\n\n---\n\n*[test/core/tsi/transport_security_test_lib.h, line 39 at r1](https://reviewable.io:443/reviews/grpc/grpc/12024#-KqYa1PVLcsrKOpYUpef:-Kr1ZB29S_TtdP9SBPpa:bidouhj) ([raw file](https://github.com/grpc/grpc/blob/7d276fe4bc2808ec3e9f5548b0de22fa0020c918/test/core/tsi/transport_security_test_lib.h#L39)):*\n<details><summary><i>Previously, yihuazhang (yihuaz) wrote…</i></summary><blockquote>\n\nThe comment is revised. In general, transport_security_test_fixture is an object that wraps all information common to TSI implementations, and will be used to test correctness of TSI handshakes and frame protect/unprotect operations with respect to the implementations.  So, when testing TSI implementations, each of them will have its own struct (e.g., ssl_transport_security_test_fixture) that has transport_security_test_fixture as its base, and other members that are specific to the implementation. Then, they will call do_round_trip to test common TSI functionalities, and validate other implementation-specific tests. \n</blockquote></details>\n\nAh, okay.  Then please expand the comment here to explain that it is expected that the tests for specific TSI implementations will create their own custom \"subclass\" of this fixture.\n\n---\n\n*[test/core/tsi/transport_security_test_lib.h, line 44 at r1](https://reviewable.io:443/reviews/grpc/grpc/12024#-KqYee3EPLZIBtaKB6Ue:-Kr1d0fH3P2HoS9U5zAl:bcetp5n) ([raw file](https://github.com/grpc/grpc/blob/7d276fe4bc2808ec3e9f5548b0de22fa0020c918/test/core/tsi/transport_security_test_lib.h#L44)):*\n<details><summary><i>Previously, yihuazhang (yihuaz) wrote…</i></summary><blockquote>\n\nI added ssl and fake TSI implementations to this PR, which might provide better insight regarding the use of these APIs. So, in general, since each TSI implementation has its own way of constructing (i.e., setup) handshakers, validating handshake results, and destructing the fixture, which leads me to think that it might be a good idea to treat them as \"virtual\" APIs, separately. Similar pattern is used in C++ version of TSI  test library in security/loas/l2/internal/transport_security/transport_security_test_lib.cc. \n</blockquote></details>\n\nThanks -- this was really helpful.  I wasn't really convinced that this approach made sense until I saw it being used, but that made it much clearer.\n\n---\n\n*[test/core/tsi/transport_security_test_lib.h, line 19 at r2](https://reviewable.io:443/reviews/grpc/grpc/12024#-Kr1Yw3JJJRDJdKauKpl:-Kr1Yw3JJJRDJdKauKpm:br4ruws) ([raw file](https://github.com/grpc/grpc/blob/04eb9df6aba4dabb81d4f4cf0281b284ae47e2e7/test/core/tsi/transport_security_test_lib.h#L19)):*\n> ```objc\n>  */\n> \n> #ifndef GRPC_TEST_CORE_TSI_TRANSPORT_SECURITY_TEST_FIXTURE_H_\n> ```\n\nThis change is wrong -- the include guard should use the filename, not the name of one of the data structures in the file.\n\n---\n\n*[test/core/tsi/transport_security_test_lib.h, line 134 at r2](https://reviewable.io:443/reviews/grpc/grpc/12024#-Kr1_fXAH5-9AqTu5O7T:-Kr1_fXAH5-9AqTu5O7U:bm27uba) ([raw file](https://github.com/grpc/grpc/blob/04eb9df6aba4dabb81d4f4cf0281b284ae47e2e7/test/core/tsi/transport_security_test_lib.h#L134)):*\n> ```objc\n> \n> /* This method destroys a tsi_test_fixture instance. */\n> void tsi_test_destroy(tsi_test_fixture *fixture);\n> ```\n\nSuggest calling this `tsi_test_fixture_destroy()`.\n\n---\n\n*[test/core/tsi/transport_security_test_lib.h, line 134 at r2](https://reviewable.io:443/reviews/grpc/grpc/12024#-Kr1aaVAnCa2-YvYUwed:-Kr1aaVAnCa2-YvYUwee:b8tqk2e) ([raw file](https://github.com/grpc/grpc/blob/04eb9df6aba4dabb81d4f4cf0281b284ae47e2e7/test/core/tsi/transport_security_test_lib.h#L134)):*\n> ```objc\n> \n> /* This method destroys a tsi_test_fixture instance. */\n> void tsi_test_destroy(tsi_test_fixture *fixture);\n> ```\n\nPlease document that `fixture` must have been dynamically allocated and will be freed by this function.\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/12024)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/321016129",
    "html_url": "https://github.com/grpc/grpc/pull/12024#issuecomment-321016129",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12024",
    "id": 321016129,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTAxNjEyOQ==",
    "user": {
      "login": "jiangtaoli2016",
      "id": 19913700,
      "node_id": "MDQ6VXNlcjE5OTEzNzAw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/19913700?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jiangtaoli2016",
      "html_url": "https://github.com/jiangtaoli2016",
      "followers_url": "https://api.github.com/users/jiangtaoli2016/followers",
      "following_url": "https://api.github.com/users/jiangtaoli2016/following{/other_user}",
      "gists_url": "https://api.github.com/users/jiangtaoli2016/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jiangtaoli2016/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jiangtaoli2016/subscriptions",
      "organizations_url": "https://api.github.com/users/jiangtaoli2016/orgs",
      "repos_url": "https://api.github.com/users/jiangtaoli2016/repos",
      "events_url": "https://api.github.com/users/jiangtaoli2016/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jiangtaoli2016/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-08T16:53:26Z",
    "updated_at": "2017-08-08T16:53:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks Mark for review. Per conversation with Yihua, I will take a look this PR today after he addressed the current comments (soon)."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/321087172",
    "html_url": "https://github.com/grpc/grpc/pull/12024#issuecomment-321087172",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12024",
    "id": 321087172,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTA4NzE3Mg==",
    "user": {
      "login": "yihuazhang",
      "id": 26934891,
      "node_id": "MDQ6VXNlcjI2OTM0ODkx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/26934891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yihuazhang",
      "html_url": "https://github.com/yihuazhang",
      "followers_url": "https://api.github.com/users/yihuazhang/followers",
      "following_url": "https://api.github.com/users/yihuazhang/following{/other_user}",
      "gists_url": "https://api.github.com/users/yihuazhang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yihuazhang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yihuazhang/subscriptions",
      "organizations_url": "https://api.github.com/users/yihuazhang/orgs",
      "repos_url": "https://api.github.com/users/yihuazhang/repos",
      "events_url": "https://api.github.com/users/yihuazhang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yihuazhang/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-08T21:28:57Z",
    "updated_at": "2017-08-08T21:28:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "\n\n\n\nReview status: 7 of 15 files reviewed at latest revision, 20 unresolved discussions, some commit checks broke.\n\n---\n\n*[test/core/tsi/fake_transport_security_test.c, line 36 at r2](https://reviewable.io:443/reviews/grpc/grpc/12024#-Kr1aoV7QClz9l-7Z4Lx:-Kr1kNVlgyn8MHokCh2H:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/04eb9df6aba4dabb81d4f4cf0281b284ae47e2e7/test/core/tsi/fake_transport_security_test.c#L36)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\n>   fixture->client_handshaker = tsi_create_fake_handshaker(1 /* is_client. */);\n>   fixture->server_handshaker = tsi_create_fake_handshaker(0 /* is_client. */);\n\nCan use `true` and `false` instead of `1` and `0`.\n</blockquote></details>\n\nDone.\n\n---\n\n*[test/core/tsi/fake_transport_security_test.c, line 46 at r2](https://reviewable.io:443/reviews/grpc/grpc/12024#-Kr1bHtFXyNfB4HpJ-mS:-Kr1m1glCB0AwOb18FMM:bvdyogc) ([raw file](https://github.com/grpc/grpc/blob/04eb9df6aba4dabb81d4f4cf0281b284ae47e2e7/test/core/tsi/fake_transport_security_test.c#L46)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nNot checking the value of peer here?\n</blockquote></details>\n\nGood point. The corresponding check is added.\n\n---\n\n*[test/core/tsi/fake_transport_security_test.c, line 56 at r2](https://reviewable.io:443/reviews/grpc/grpc/12024#-Kr1b-58Ber5HgAE-iPR:-Kr1y9okoFY4CYVmHjMZ:behab6t) ([raw file](https://github.com/grpc/grpc/blob/04eb9df6aba4dabb81d4f4cf0281b284ae47e2e7/test/core/tsi/fake_transport_security_test.c#L56)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\n>   tsi_test_frame_protector_config_destroy(fixture->config);\n>   tsi_handshaker_destroy(fixture->client_handshaker);\n>   tsi_handshaker_destroy(fixture->server_handshaker);\n>   tsi_handshaker_result_destroy(fixture->client_result);\n>   tsi_handshaker_result_destroy(fixture->server_result);\n>   gpr_free(fixture->client_channel);\n>   gpr_free(fixture->server_channel);\n\nNone of this code looks specific to the fake TSI implementation.  Doesn't this belong in `tsi_test_fixture_destroy()`?\n</blockquote></details>\n\nI agree. The code that is common to TSI implementations is now moved to tsi_test_fixture_destroy().  \n\n---\n\n*[test/core/tsi/fake_transport_security_test.c, line 76 at r2](https://reviewable.io:443/reviews/grpc/grpc/12024#-Kr1eNdreRn9XsFl-s1w:-Kr1yS2IhMHZJ9eoaCDN:b-o82wrf) ([raw file](https://github.com/grpc/grpc/blob/04eb9df6aba4dabb81d4f4cf0281b284ae47e2e7/test/core/tsi/fake_transport_security_test.c#L76)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\n>   fake_fixture->base.handshake_buffer_size = TSI_TEST_DEFAULT_BUFFER_SIZE;\n>   fake_fixture->base.client_channel = gpr_zalloc(TSI_TEST_DEFAULT_CHANNEL_SIZE);\n>   fake_fixture->base.server_channel = gpr_zalloc(TSI_TEST_DEFAULT_CHANNEL_SIZE);\n>   fake_fixture->base.bytes_written_to_client_channel = 0;\n>   fake_fixture->base.bytes_written_to_server_channel = 0;\n>   fake_fixture->base.bytes_read_from_client_channel = 0;\n>   fake_fixture->base.bytes_read_from_server_channel = 0;\n\nWe should probably have a `tsi_test_fixture_init()` function that does all of this, so the individual tests don't need to do it themselves.\n</blockquote></details>\n\nYes, I agree. tsi_test_fixture_init is added now. \n\n---\n\n*[test/core/tsi/fake_transport_security_test.c, line 109 at r2](https://reviewable.io:443/reviews/grpc/grpc/12024#-Kr1cPsrCI64Ihn-_M30:-Kr20aGSEAq-_d8YGSnw:b-7rl0jd) ([raw file](https://github.com/grpc/grpc/blob/04eb9df6aba4dabb81d4f4cf0281b284ae47e2e7/test/core/tsi/fake_transport_security_test.c#L109)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nconst\n</blockquote></details>\n\ndone.\n\n---\n\n*[test/core/tsi/fake_transport_security_test.c, line 110 at r2](https://reviewable.io:443/reviews/grpc/grpc/12024#-Kr1cRAdMqRNCdSl_38B:-Kr21Vv5oXUf1xsahr_6:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/04eb9df6aba4dabb81d4f4cf0281b284ae47e2e7/test/core/tsi/fake_transport_security_test.c#L110)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nPlease declare these variables directly in the for loops where they're used:\n\n```\nfor (unsigned int val = 0; val < TSI_TEST_NUM_OF_COMBINATIONS; ++val) {\n  unsigned int v = val;\n  for (unsigned int ind = 0; ind < TSI_TEST_NUM_OF_ARGUMENTS; ++ind) {\n```\n</blockquote></details>\n\nDone.\n\n---\n\n*[test/core/tsi/fake_transport_security_test.c, line 130 at r2](https://reviewable.io:443/reviews/grpc/grpc/12024#-Kr1bzodZG-rbpJYS5k6:-Kr21crVKfGrvrk7Qt75:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/04eb9df6aba4dabb81d4f4cf0281b284ae47e2e7/test/core/tsi/fake_transport_security_test.c#L130)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\n>   size_t odd_sizes[] = {1025, 2051, 4103, 8207, 16409};\n>   size_t size = sizeof(odd_sizes) / sizeof(size_t);\n\nThese can be const.\n</blockquote></details>\n\nDone.\n\n---\n\n*[test/core/tsi/fake_transport_security_test.c, line 132 at r2](https://reviewable.io:443/reviews/grpc/grpc/12024#-Kr1c0VLeGm2kaizYd2T:-Kr23IMfrXfGjKXLhaRh:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/04eb9df6aba4dabb81d4f4cf0281b284ae47e2e7/test/core/tsi/fake_transport_security_test.c#L132)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nPlease declare these variables in-line in the for loops in which they are used.\n</blockquote></details>\n\nDone.\n\n---\n\n*[test/core/tsi/ssl_transport_security_test.c, line 295 at r2](https://reviewable.io:443/reviews/grpc/grpc/12024#-Kr1dL8yRle4AtV6RMpx:-Kr23OvXVOfOpFaLffHl:b-mni1z5) ([raw file](https://github.com/grpc/grpc/blob/04eb9df6aba4dabb81d4f4cf0281b284ae47e2e7/test/core/tsi/ssl_transport_security_test.c#L295)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\n>   tsi_test_frame_protector_config_destroy(ssl_fixture->base.config);\n>   tsi_handshaker_destroy(ssl_fixture->base.client_handshaker);\n>   tsi_handshaker_destroy(ssl_fixture->base.server_handshaker);\n>   tsi_handshaker_result_destroy(ssl_fixture->base.client_result);\n>   tsi_handshaker_result_destroy(ssl_fixture->base.server_result);\n>   gpr_free(ssl_fixture->base.client_channel);\n>   gpr_free(ssl_fixture->base.server_channel);\n\nI think this code belongs in `tsi_test_fixture_destroy()`.\n</blockquote></details>\n\nYes, they are now moved to tsi_test_fixture_destroy(). \n\n---\n\n*[test/core/tsi/ssl_transport_security_test.c, line 345 at r2](https://reviewable.io:443/reviews/grpc/grpc/12024#-Kr1e1Ui81dCcxxw2A1Q:-Kr23YG0wl2RiS89fmdr:bs7wumx) ([raw file](https://github.com/grpc/grpc/blob/04eb9df6aba4dabb81d4f4cf0281b284ae47e2e7/test/core/tsi/ssl_transport_security_test.c#L345)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nMight be simpler to return dst instead of setting it via a parameter.\n</blockquote></details>\n\nDone. \n\n---\n\n*[test/core/tsi/ssl_transport_security_test.c, line 424 at r2](https://reviewable.io:443/reviews/grpc/grpc/12024#-Kr1eYrYw37109tQ8p2M:-Kr25CAab2r5kX_KnX7e:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/04eb9df6aba4dabb81d4f4cf0281b284ae47e2e7/test/core/tsi/ssl_transport_security_test.c#L424)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\n>   ssl_fixture->base.handshake_buffer_size = TSI_TEST_DEFAULT_BUFFER_SIZE;\n>   ssl_fixture->base.client_channel = gpr_zalloc(TSI_TEST_DEFAULT_CHANNEL_SIZE);\n>   ssl_fixture->base.server_channel = gpr_zalloc(TSI_TEST_DEFAULT_CHANNEL_SIZE);\n>   ssl_fixture->base.bytes_written_to_client_channel = 0;\n>   ssl_fixture->base.bytes_written_to_server_channel = 0;\n>   ssl_fixture->base.bytes_read_from_client_channel = 0;\n>   ssl_fixture->base.bytes_read_from_server_channel = 0;\n\nSee comment elsewhere about having a `tsi_test_fixture_init()` function.\n</blockquote></details>\n\nDone.\n\n---\n\n*[test/core/tsi/ssl_transport_security_test.c, line 534 at r2](https://reviewable.io:443/reviews/grpc/grpc/12024#-Kr1elDPDGHYCXnpG08t:-Kr25FbYJwCMjdUhtv6_:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/04eb9df6aba4dabb81d4f4cf0281b284ae47e2e7/test/core/tsi/ssl_transport_security_test.c#L534)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nconst\n</blockquote></details>\n\nDone.\n\n---\n\n*[test/core/tsi/ssl_transport_security_test.c, line 535 at r2](https://reviewable.io:443/reviews/grpc/grpc/12024#-Kr1elv3uZ5OhZpQePPz:-Kr25HHW35Qlwve0-DmE:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/04eb9df6aba4dabb81d4f4cf0281b284ae47e2e7/test/core/tsi/ssl_transport_security_test.c#L535)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nPlease declare these directly in the for loops in which they are used.\n</blockquote></details>\n\nDone.\n\n---\n\n*[test/core/tsi/ssl_transport_security_test.c, line 556 at r2](https://reviewable.io:443/reviews/grpc/grpc/12024#-Kr1eqctBA8ycnmswbOQ:-Kr25J8xh1kgrWEpIVx_:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/04eb9df6aba4dabb81d4f4cf0281b284ae47e2e7/test/core/tsi/ssl_transport_security_test.c#L556)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\n>   size_t odd_sizes[] = {1025, 2051, 4103, 8207, 16409};\n>   size_t size = sizeof(odd_sizes) / sizeof(size_t);\n\nconst\n</blockquote></details>\n\nDone.\n\n---\n\n*[test/core/tsi/ssl_transport_security_test.c, line 557 at r2](https://reviewable.io:443/reviews/grpc/grpc/12024#-Kr1esCQ7AyECrpDHvQL:-Kr25L0hhn_zUC2e2Njc:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/04eb9df6aba4dabb81d4f4cf0281b284ae47e2e7/test/core/tsi/ssl_transport_security_test.c#L557)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nPlease declare these directly in the for loops in which they are used.\n</blockquote></details>\n\nDone.\n\n---\n\n*[test/core/tsi/transport_security_test_lib.h, line 39 at r1](https://reviewable.io:443/reviews/grpc/grpc/12024#-KqYa1PVLcsrKOpYUpef:-Kr26-zQxMEDO1svfY82:b-fwwgmb) ([raw file](https://github.com/grpc/grpc/blob/7d276fe4bc2808ec3e9f5548b0de22fa0020c918/test/core/tsi/transport_security_test_lib.h#L39)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nAh, okay.  Then please expand the comment here to explain that it is expected that the tests for specific TSI implementations will create their own custom \"subclass\" of this fixture.\n</blockquote></details>\n\nThe comment is revised now.\n\n---\n\n*[test/core/tsi/transport_security_test_lib.h, line 44 at r1](https://reviewable.io:443/reviews/grpc/grpc/12024#-KqYee3EPLZIBtaKB6Ue:-Kr26AxLeH-kWcr1mXSq:b-ucfkn4) ([raw file](https://github.com/grpc/grpc/blob/7d276fe4bc2808ec3e9f5548b0de22fa0020c918/test/core/tsi/transport_security_test_lib.h#L44)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nThanks -- this was really helpful.  I wasn't really convinced that this approach made sense until I saw it being used, but that made it much clearer.\n</blockquote></details>\n\nThanks.\n\n---\n\n*[test/core/tsi/transport_security_test_lib.h, line 19 at r2](https://reviewable.io:443/reviews/grpc/grpc/12024#-Kr1Yw3JJJRDJdKauKpl:-Kr25Qp-zIe7RGFCblUw:bnt7y99) ([raw file](https://github.com/grpc/grpc/blob/04eb9df6aba4dabb81d4f4cf0281b284ae47e2e7/test/core/tsi/transport_security_test_lib.h#L19)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nThis change is wrong -- the include guard should use the filename, not the name of one of the data structures in the file.\n</blockquote></details>\n\nThe include guard is changed now. \n\n---\n\n*[test/core/tsi/transport_security_test_lib.h, line 134 at r2](https://reviewable.io:443/reviews/grpc/grpc/12024#-Kr1_fXAH5-9AqTu5O7T:-Kr26EyzF6RTQIpGnYHl:bknu2rv) ([raw file](https://github.com/grpc/grpc/blob/04eb9df6aba4dabb81d4f4cf0281b284ae47e2e7/test/core/tsi/transport_security_test_lib.h#L134)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nSuggest calling this `tsi_test_fixture_destroy()`.\n</blockquote></details>\n\nThe change is applied.\n\n---\n\n*[test/core/tsi/transport_security_test_lib.h, line 134 at r2](https://reviewable.io:443/reviews/grpc/grpc/12024#-Kr1aaVAnCa2-YvYUwed:-Kr26sVzsf5LJGs-m8ln:boovqvh) ([raw file](https://github.com/grpc/grpc/blob/04eb9df6aba4dabb81d4f4cf0281b284ae47e2e7/test/core/tsi/transport_security_test_lib.h#L134)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nPlease document that `fixture` must have been dynamically allocated and will be freed by this function.\n</blockquote></details>\n\nThe comment is revised now.\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/12024)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/321092539",
    "html_url": "https://github.com/grpc/grpc/pull/12024#issuecomment-321092539",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12024",
    "id": 321092539,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTA5MjUzOQ==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-08T21:52:20Z",
    "updated_at": "2017-08-08T21:52:20Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/321098796",
    "html_url": "https://github.com/grpc/grpc/pull/12024#issuecomment-321098796",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12024",
    "id": 321098796,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTA5ODc5Ng==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-08T22:23:32Z",
    "updated_at": "2017-08-08T22:23:32Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/321273885",
    "html_url": "https://github.com/grpc/grpc/pull/12024#issuecomment-321273885",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12024",
    "id": 321273885,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTI3Mzg4NQ==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-09T14:33:50Z",
    "updated_at": "2017-08-09T14:33:50Z",
    "author_association": "MEMBER",
    "body": "Overall, this looks good -- just a few minor nits remaining.\n\n---\n\nReviewed 4 of 8 files at r3, 9 of 9 files at r4.\nReview status: all files reviewed at latest revision, 4 unresolved discussions, some commit checks failed.\n\n---\n\n*[test/core/tsi/ssl_transport_security_test.c, line 334 at r4](https://reviewable.io:443/reviews/grpc/grpc/12024#-Kr6P2rwSqwMm0x7UuxO:-Kr6P2rwSqwMm0x7UuxP:b-hbzght) ([raw file](https://github.com/grpc/grpc/blob/339650612a9e55215d28da3a6dc3c5cd96bacddd/test/core/tsi/ssl_transport_security_test.c#L334)):*\n> ```C\n>     ssl_test_destruct};\n> \n> static char *malloc_and_copy(const char *src) {\n> ```\n\nActually, I just realized that this is operating on strings.  In that case, this isn't needed at all, because you can use `gpr_strdup()` instead.\n\n---\n\n*[test/core/tsi/transport_security_test_lib.c, line 487 at r4](https://reviewable.io:443/reviews/grpc/grpc/12024#-Kr6OJ8ZKX2rsfEbmU5b:-Kr6OJ8ZKX2rsfEbmU5c:bj1m6e9) ([raw file](https://github.com/grpc/grpc/blob/339650612a9e55215d28da3a6dc3c5cd96bacddd/test/core/tsi/transport_security_test_lib.c#L487)):*\n> ```C\n> \n> void tsi_test_fixture_init(tsi_test_fixture *fixture) {\n>   tsi_test_frame_protector_config *config =\n> ```\n\nThere's probably no need for this temporary variable.  Instead, we can just set `fixture->config` directly.\n\n---\n\n*[test/core/tsi/transport_security_test_lib.h, line 45 at r4](https://reviewable.io:443/reviews/grpc/grpc/12024#-Kr6NPoncB0yKJVVFMr_:-Kr6NPoncB0yKJVVFMra:bvbu3o4) ([raw file](https://github.com/grpc/grpc/blob/339650612a9e55215d28da3a6dc3c5cd96bacddd/test/core/tsi/transport_security_test_lib.h#L45)):*\n> ```objc\n>   implementations. The tests for specific TSI implementations should create\n>   their\n>   own custom \"subclass\" of this fixture. */\n> ```\n\nPlease move this to the end of the previous line.\n\n---\n\n*[test/core/tsi/transport_security_test_lib.h, line 140 at r4](https://reviewable.io:443/reviews/grpc/grpc/12024#-Kr6O5w0tTY3f_ZEqDdl:-Kr6O5w0tTY3f_ZEqDdm:bcqwk7h) ([raw file](https://github.com/grpc/grpc/blob/339650612a9e55215d28da3a6dc3c5cd96bacddd/test/core/tsi/transport_security_test_lib.h#L140)):*\n> ```objc\n> /* This method destroys a tsi_test_fixture instance. Notice that the\n>    fixture intance must be dynamically allocated and will be freed by\n>    this functoin. */\n> ```\n\ns/functoin/function/\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/12024#-:-Kr6PZBMPc8RSGK8sgfc:beryzuv)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/321289316",
    "html_url": "https://github.com/grpc/grpc/pull/12024#issuecomment-321289316",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12024",
    "id": 321289316,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTI4OTMxNg==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-09T15:24:06Z",
    "updated_at": "2017-08-09T15:24:06Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/321295737",
    "html_url": "https://github.com/grpc/grpc/pull/12024#issuecomment-321295737",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12024",
    "id": 321295737,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTI5NTczNw==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-09T15:44:59Z",
    "updated_at": "2017-08-09T15:44:59Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/321392526",
    "html_url": "https://github.com/grpc/grpc/pull/12024#issuecomment-321392526",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12024",
    "id": 321392526,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTM5MjUyNg==",
    "user": {
      "login": "yihuazhang",
      "id": 26934891,
      "node_id": "MDQ6VXNlcjI2OTM0ODkx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/26934891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yihuazhang",
      "html_url": "https://github.com/yihuazhang",
      "followers_url": "https://api.github.com/users/yihuazhang/followers",
      "following_url": "https://api.github.com/users/yihuazhang/following{/other_user}",
      "gists_url": "https://api.github.com/users/yihuazhang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yihuazhang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yihuazhang/subscriptions",
      "organizations_url": "https://api.github.com/users/yihuazhang/orgs",
      "repos_url": "https://api.github.com/users/yihuazhang/repos",
      "events_url": "https://api.github.com/users/yihuazhang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yihuazhang/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-09T21:55:15Z",
    "updated_at": "2017-08-09T21:55:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "All comments are addressed .\n\n---\n\nReview status: 3 of 11 files reviewed at latest revision, 16 unresolved discussions.\n\n---\n\n*[test/core/tsi/ssl_transport_security_test.c, line 334 at r4](https://reviewable.io:443/reviews/grpc/grpc/12024#-Kr6P2rwSqwMm0x7UuxO:-Kr6SclRTayZKf9wRKe0:b-3mr47s) ([raw file](https://github.com/grpc/grpc/blob/339650612a9e55215d28da3a6dc3c5cd96bacddd/test/core/tsi/ssl_transport_security_test.c#L334)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nActually, I just realized that this is operating on strings.  In that case, this isn't needed at all, because you can use `gpr_strdup()` instead.\n</blockquote></details>\n\nThanks for pointing out the API. It is applied. \n\n---\n\n*[test/core/tsi/transport_security_test_lib.c, line 487 at r4](https://reviewable.io:443/reviews/grpc/grpc/12024#-Kr6OJ8ZKX2rsfEbmU5b:-Kr6TxGwmitItHOzKK5w:bs7wumx) ([raw file](https://github.com/grpc/grpc/blob/339650612a9e55215d28da3a6dc3c5cd96bacddd/test/core/tsi/transport_security_test_lib.c#L487)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nThere's probably no need for this temporary variable.  Instead, we can just set `fixture->config` directly.\n</blockquote></details>\n\nDone. \n\n---\n\n*[test/core/tsi/transport_security_test_lib.h, line 45 at r4](https://reviewable.io:443/reviews/grpc/grpc/12024#-Kr6NPoncB0yKJVVFMr_:-Kr6UE2AxeuWmas2SuI5:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/339650612a9e55215d28da3a6dc3c5cd96bacddd/test/core/tsi/transport_security_test_lib.h#L45)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nPlease move this to the end of the previous line.\n</blockquote></details>\n\nDone.\n\n---\n\n*[test/core/tsi/transport_security_test_lib.h, line 140 at r4](https://reviewable.io:443/reviews/grpc/grpc/12024#-Kr6O5w0tTY3f_ZEqDdl:-Kr6V40iuEmik7dHqEKO:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/339650612a9e55215d28da3a6dc3c5cd96bacddd/test/core/tsi/transport_security_test_lib.h#L140)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\ns/functoin/function/\n</blockquote></details>\n\nDone.\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/12024#-:-Kr2kCctWNl7xaSTJG3N:b-82hn83)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/321400913",
    "html_url": "https://github.com/grpc/grpc/pull/12024#issuecomment-321400913",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12024",
    "id": 321400913,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTQwMDkxMw==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-09T22:39:38Z",
    "updated_at": "2017-08-09T22:39:38Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/321403244",
    "html_url": "https://github.com/grpc/grpc/pull/12024#issuecomment-321403244",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12024",
    "id": 321403244,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTQwMzI0NA==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-09T22:52:37Z",
    "updated_at": "2017-08-09T22:52:37Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/321575347",
    "html_url": "https://github.com/grpc/grpc/pull/12024#issuecomment-321575347",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12024",
    "id": 321575347,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTU3NTM0Nw==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-10T14:52:47Z",
    "updated_at": "2017-08-10T14:52:47Z",
    "author_association": "MEMBER",
    "body": "This looks good to me, but I'll review again when you've addressed @jiangtaoli2016's comments."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/321702237",
    "html_url": "https://github.com/grpc/grpc/pull/12024#issuecomment-321702237",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12024",
    "id": 321702237,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTcwMjIzNw==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-10T23:44:29Z",
    "updated_at": "2017-08-10T23:44:29Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/321706089",
    "html_url": "https://github.com/grpc/grpc/pull/12024#issuecomment-321706089",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12024",
    "id": 321706089,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTcwNjA4OQ==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-11T00:13:35Z",
    "updated_at": "2017-08-11T00:13:35Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/321709805",
    "html_url": "https://github.com/grpc/grpc/pull/12024#issuecomment-321709805",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12024",
    "id": 321709805,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTcwOTgwNQ==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-11T00:45:28Z",
    "updated_at": "2017-08-11T00:45:28Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/321905099",
    "html_url": "https://github.com/grpc/grpc/pull/12024#issuecomment-321905099",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12024",
    "id": 321905099,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTkwNTA5OQ==",
    "user": {
      "login": "yihuazhang",
      "id": 26934891,
      "node_id": "MDQ6VXNlcjI2OTM0ODkx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/26934891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yihuazhang",
      "html_url": "https://github.com/yihuazhang",
      "followers_url": "https://api.github.com/users/yihuazhang/followers",
      "following_url": "https://api.github.com/users/yihuazhang/following{/other_user}",
      "gists_url": "https://api.github.com/users/yihuazhang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yihuazhang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yihuazhang/subscriptions",
      "organizations_url": "https://api.github.com/users/yihuazhang/orgs",
      "repos_url": "https://api.github.com/users/yihuazhang/repos",
      "events_url": "https://api.github.com/users/yihuazhang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yihuazhang/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-11T19:57:22Z",
    "updated_at": "2017-08-11T19:57:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "\n\n\n\nReview status: 2 of 11 files reviewed at latest revision, 11 unresolved discussions, some commit checks failed.\n\n---\n\n*[test/core/tsi/transport_security_test_lib.c, line 66 at r5](https://reviewable.io:443/reviews/grpc/grpc/12024#-KqYZSsb94UZJGQqu_Zh-r5-66:-KrHNYBQa8-Xni5XaCax:b-ah8wcd) ([raw file](https://github.com/grpc/grpc/blob/f49990d0eeed6f6f437b388fcfd80d0d38d1cba0/test/core/tsi/transport_security_test_lib.c#L66)):*\n<details><summary><i>Previously, jiangtaoli2016 (Jiangtao Li) wrote…</i></summary><blockquote>\n\nYou can still name check_handshake_results here. You do two things here\r\n1. check_unused_bytes (this is common for all tsi implementation)\r\n2. check_handshaker_peers (you can call vtable for each tsi implementation).\n</blockquote></details>\n\nYes, the code is revised as suggested. \n\n---\n\n*[test/core/tsi/transport_security_test_lib.c, line 70 at r5](https://reviewable.io:443/reviews/grpc/grpc/12024#-KqYZSsb94UZJGQqu_Zh-r5-70:-KrHPsDMzzb8mUtE8YhC:bif691z) ([raw file](https://github.com/grpc/grpc/blob/f49990d0eeed6f6f437b388fcfd80d0d38d1cba0/test/core/tsi/transport_security_test_lib.c#L70)):*\n<details><summary><i>Previously, jiangtaoli2016 (Jiangtao Li) wrote…</i></summary><blockquote>\n\ntsi_handshaker_result_get_unused_bytes() is not tested in this PR. \r\nI think we can test in the following way: When client/server finds handshake finishes and needs to send the final message back to peer, we cam concatenate a pre-defined string to the message. \r\nLater, when we verify the handshake result, we can call get_unused_bytes and compare with the predefined string.\n</blockquote></details>\n\nPer our discussion yesterday, tsi_handshaker_result_get_unused_bytes() is tested for fake TSI implementation but not for SSL. \n\n---\n\n*[test/core/tsi/transport_security_test_lib.c, line 221 at r5](https://reviewable.io:443/reviews/grpc/grpc/12024#-KqYZSsb94UZJGQqu_Zh-r5-221:-KrHQ5-WDjcqO10Gqo-e:b-7rl0jd) ([raw file](https://github.com/grpc/grpc/blob/f49990d0eeed6f6f437b388fcfd80d0d38d1cba0/test/core/tsi/transport_security_test_lib.c#L221)):*\n<details><summary><i>Previously, jiangtaoli2016 (Jiangtao Li) wrote…</i></summary><blockquote>\n\nrename to on_handshake_next_done()\r\nThere is no lock in this test library.\n</blockquote></details>\n\ndone.\n\n---\n\n*[test/core/tsi/transport_security_test_lib.c, line 273 at r5](https://reviewable.io:443/reviews/grpc/grpc/12024#-KqYZSsb94UZJGQqu_Zh-r5-273:-KrHQGX-DvwUPOi91oVu:b-7rl0jd) ([raw file](https://github.com/grpc/grpc/blob/f49990d0eeed6f6f437b388fcfd80d0d38d1cba0/test/core/tsi/transport_security_test_lib.c#L273)):*\n<details><summary><i>Previously, jiangtaoli2016 (Jiangtao Li) wrote…</i></summary><blockquote>\n\nrename to \"do_handshaker_next\"\n</blockquote></details>\n\ndone.\n\n---\n\n*[test/core/tsi/transport_security_test_lib.c, line 414 at r5](https://reviewable.io:443/reviews/grpc/grpc/12024#-KqYZSsb94UZJGQqu_Zh-r5-414:-KrHQJALJlnTaZH0KMRx:b-jm3ov6) ([raw file](https://github.com/grpc/grpc/blob/f49990d0eeed6f6f437b388fcfd80d0d38d1cba0/test/core/tsi/transport_security_test_lib.c#L414)):*\n<details><summary><i>Previously, jiangtaoli2016 (Jiangtao Li) wrote…</i></summary><blockquote>\n\nnit: remove empty lines inside function body. I think it is a grpc team coding style. Apply throughout this PR.\n</blockquote></details>\n\nThe change is applied to all files.\n\n---\n\n*[test/core/tsi/transport_security_test_lib.c, line 450 at r5](https://reviewable.io:443/reviews/grpc/grpc/12024#-KqYZSsb94UZJGQqu_Zh-r5-450:-KrHRrxh6lJvEFD0EAip:b-xjv9m2) ([raw file](https://github.com/grpc/grpc/blob/f49990d0eeed6f6f437b388fcfd80d0d38d1cba0/test/core/tsi/transport_security_test_lib.c#L450)):*\n<details><summary><i>Previously, jiangtaoli2016 (Jiangtao Li) wrote…</i></summary><blockquote>\n\nFor readability, maybe add a comment that if client_max_output_protected_frame_size is 0, we will pass NULL as max_output_protected_frame_size in tsi_handshaker_result_create_frame_protector(). \r\n\r\nOtherwise, it may be confusing.\n</blockquote></details>\n\nGood point. The change is applied. \n\n---\n\n*[test/core/tsi/transport_security_test_lib.c, line 481 at r5](https://reviewable.io:443/reviews/grpc/grpc/12024#-KqYZSsb94UZJGQqu_Zh-r5-481:-KrHV5mVfG3PSw2q_vIP:b-7rl0jd) ([raw file](https://github.com/grpc/grpc/blob/f49990d0eeed6f6f437b388fcfd80d0d38d1cba0/test/core/tsi/transport_security_test_lib.c#L481)):*\n<details><summary><i>Previously, jiangtaoli2016 (Jiangtao Li) wrote…</i></summary><blockquote>\n\nAdd GPR_ASSERT(config != NULL);\n</blockquote></details>\n\ndone.\n\n---\n\n*[test/core/tsi/transport_security_test_lib.h, line 45 at r5](https://reviewable.io:443/reviews/grpc/grpc/12024#-KqYZSsb94UZJGQqu_Zi-r5-45:-KrHVPYSPgQWOipEcjQx:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/f49990d0eeed6f6f437b388fcfd80d0d38d1cba0/test/core/tsi/transport_security_test_lib.h#L45)):*\n<details><summary><i>Previously, jiangtaoli2016 (Jiangtao Li) wrote…</i></summary><blockquote>\n\nnit, merge this line with previous line.\n</blockquote></details>\n\nDone.\n\n---\n\n*[test/core/tsi/transport_security_test_lib.h, line 58 at r5](https://reviewable.io:443/reviews/grpc/grpc/12024#-KqYZSsb94UZJGQqu_Zi-r5-58:-Kr80Irgc9lhcJaWXXDf:bb154rq) ([raw file](https://github.com/grpc/grpc/blob/f49990d0eeed6f6f437b388fcfd80d0d38d1cba0/test/core/tsi/transport_security_test_lib.h#L58)):*\n<details><summary><i>Previously, jiangtaoli2016 (Jiangtao Li) wrote…</i></summary><blockquote>\n\nMaybe call check_handshaker_peers? \r\nThere are 3 functions from handshaker_result: extract_peer, create_frame_protector, get_unused_bytes. frame protector is tested separately. You actually only test extract_peer.\n</blockquote></details>\n\nThe function name is changed to check_handshaker_peers.\n\n---\n\n*[test/core/tsi/transport_security_test_lib.h, line 135 at r5](https://reviewable.io:443/reviews/grpc/grpc/12024#-KqYZSsb94UZJGQqu_Zi-r5-135:-KrHW4Nx7Ba7tmjz4IP0:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/f49990d0eeed6f6f437b388fcfd80d0d38d1cba0/test/core/tsi/transport_security_test_lib.h#L135)):*\n<details><summary><i>Previously, jiangtaoli2016 (Jiangtao Li) wrote…</i></summary><blockquote>\n\nAdd a comment that tsi_test_fixture struct has to be allocated before calling this init.\n</blockquote></details>\n\nDone.\n\n---\n\n*[test/core/tsi/transport_security_test_lib.h, line 143 at r5](https://reviewable.io:443/reviews/grpc/grpc/12024#-KqYZSsb94UZJGQqu_Zi-r5-143:-KrHWltgOyiST2m59blu:bs7wumx) ([raw file](https://github.com/grpc/grpc/blob/f49990d0eeed6f6f437b388fcfd80d0d38d1cba0/test/core/tsi/transport_security_test_lib.h#L143)):*\n<details><summary><i>Previously, jiangtaoli2016 (Jiangtao Li) wrote…</i></summary><blockquote>\n\nAdd a comment that this test library only tests handshake using new TSI handshaker API.\n</blockquote></details>\n\nDone. \n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/12024)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/321906476",
    "html_url": "https://github.com/grpc/grpc/pull/12024#issuecomment-321906476",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12024",
    "id": 321906476,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTkwNjQ3Ng==",
    "user": {
      "login": "jiangtaoli2016",
      "id": 19913700,
      "node_id": "MDQ6VXNlcjE5OTEzNzAw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/19913700?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jiangtaoli2016",
      "html_url": "https://github.com/jiangtaoli2016",
      "followers_url": "https://api.github.com/users/jiangtaoli2016/followers",
      "following_url": "https://api.github.com/users/jiangtaoli2016/following{/other_user}",
      "gists_url": "https://api.github.com/users/jiangtaoli2016/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jiangtaoli2016/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jiangtaoli2016/subscriptions",
      "organizations_url": "https://api.github.com/users/jiangtaoli2016/orgs",
      "repos_url": "https://api.github.com/users/jiangtaoli2016/repos",
      "events_url": "https://api.github.com/users/jiangtaoli2016/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jiangtaoli2016/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-11T20:04:45Z",
    "updated_at": "2017-08-11T20:04:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "I will let Mark to do final check, if needed :)"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/321911568",
    "html_url": "https://github.com/grpc/grpc/pull/12024#issuecomment-321911568",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12024",
    "id": 321911568,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTkxMTU2OA==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-11T20:30:27Z",
    "updated_at": "2017-08-11T20:30:27Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/321918470",
    "html_url": "https://github.com/grpc/grpc/pull/12024#issuecomment-321918470",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12024",
    "id": 321918470,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTkxODQ3MA==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-11T21:04:21Z",
    "updated_at": "2017-08-11T21:04:21Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/321919004",
    "html_url": "https://github.com/grpc/grpc/pull/12024#issuecomment-321919004",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12024",
    "id": 321919004,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTkxOTAwNA==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-11T21:06:38Z",
    "updated_at": "2017-08-11T21:06:38Z",
    "author_association": "MEMBER",
    "body": "<img class=\"emoji\" title=\":lgtm:\" alt=\":lgtm:\" align=\"absmiddle\" src=\"https://reviewable.io/lgtm.png\" height=\"20\" width=\"61\"/>\n\n---\n\nReviewed 1 of 10 files at r5, 7 of 7 files at r6, 4 of 7 files at r7, 4 of 4 files at r8.\nReview status: all files reviewed at latest revision, 11 unresolved discussions, some commit checks failed.\n\n---\n\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/12024#-:-KrI6gJbE2YMcaeWcFAW:bnfp4nl)*\n<!-- Sent from Reviewable.io -->\n"
  }
]
