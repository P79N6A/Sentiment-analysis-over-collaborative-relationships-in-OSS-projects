[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/192533986",
    "html_url": "https://github.com/grpc/grpc/issues/5614#issuecomment-192533986",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5614",
    "id": 192533986,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MjUzMzk4Ng==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-05T00:21:47Z",
    "updated_at": "2016-03-05T00:21:47Z",
    "author_association": "MEMBER",
    "body": "I'd argue that you should not release the grpc_channel unless you see fatal\nfailure.\n\nOn Fri, Mar 4, 2016, 4:19 PM Jorge Canizales notifications@github.com\nwrote:\n\n> Some HTTP/2 servers send a go_away to streams that are idle for too long,\n> at which point the stream can't be used again by the client. This is\n> supposed to surface in the C library as the grpc_channel transitioning to\n> one of the failure states. GRPCHost has to listen to state changes and,\n> on failure, release its GRPCChannel so that the grpc_channel it wraps\n> isn't reused, and is properly destroyed.\n> \n> We need the following test:\n> 1. Client connects to server (completing an RPC to make sure the\n>    connection was established).\n> 2. Server sends go_away on that stream after the RPC is completed.\n> 3. Client sends another RPC to the same host.\n> \n> The second RPC wouldn't currently succeed, and this fix has to make it\n> succeed.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/grpc/grpc/issues/5614.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/192534810",
    "html_url": "https://github.com/grpc/grpc/issues/5614#issuecomment-192534810",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5614",
    "id": 192534810,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MjUzNDgxMA==",
    "user": {
      "login": "jcanizales",
      "id": 5120183,
      "node_id": "MDQ6VXNlcjUxMjAxODM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5120183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jcanizales",
      "html_url": "https://github.com/jcanizales",
      "followers_url": "https://api.github.com/users/jcanizales/followers",
      "following_url": "https://api.github.com/users/jcanizales/following{/other_user}",
      "gists_url": "https://api.github.com/users/jcanizales/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jcanizales/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jcanizales/subscriptions",
      "organizations_url": "https://api.github.com/users/jcanizales/orgs",
      "repos_url": "https://api.github.com/users/jcanizales/repos",
      "events_url": "https://api.github.com/users/jcanizales/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jcanizales/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-05T00:25:06Z",
    "updated_at": "2016-03-05T00:25:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "Is that what it'll transition to upon receiving a `go_away`? My understanding is after the server sends that, the stream can't be reused.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/192536380",
    "html_url": "https://github.com/grpc/grpc/issues/5614#issuecomment-192536380",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5614",
    "id": 192536380,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MjUzNjM4MA==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-05T00:34:24Z",
    "updated_at": "2016-03-05T00:34:24Z",
    "author_association": "MEMBER",
    "body": "A transport can't be reused, but a channel can reconnect to a new backend.\n\nOn Fri, Mar 4, 2016, 4:25 PM Jorge Canizales notifications@github.com\nwrote:\n\n> Is that what it'll transition to upon receiving a go_away? My\n> understanding is after the server sends that, the stream can't be reused.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/grpc/grpc/issues/5614#issuecomment-192534810.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/192541030",
    "html_url": "https://github.com/grpc/grpc/issues/5614#issuecomment-192541030",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5614",
    "id": 192541030,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MjU0MTAzMA==",
    "user": {
      "login": "jcanizales",
      "id": 5120183,
      "node_id": "MDQ6VXNlcjUxMjAxODM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5120183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jcanizales",
      "html_url": "https://github.com/jcanizales",
      "followers_url": "https://api.github.com/users/jcanizales/followers",
      "following_url": "https://api.github.com/users/jcanizales/following{/other_user}",
      "gists_url": "https://api.github.com/users/jcanizales/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jcanizales/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jcanizales/subscriptions",
      "organizations_url": "https://api.github.com/users/jcanizales/orgs",
      "repos_url": "https://api.github.com/users/jcanizales/repos",
      "events_url": "https://api.github.com/users/jcanizales/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jcanizales/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-05T01:02:17Z",
    "updated_at": "2016-03-05T01:04:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "> can\n\nAre you trying to tell me the C layer is expected to take care of goaways automatically, and so this is a bug that should be filed for core? The problem here isn't necessarily having to pick a different backend. From a previous conversation with Nico, my understanding was \"goaways should transition the channel to one of the failure states, and it shouldn't be used again\".\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/192542213",
    "html_url": "https://github.com/grpc/grpc/issues/5614#issuecomment-192542213",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5614",
    "id": 192542213,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MjU0MjIxMw==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-05T01:13:40Z",
    "updated_at": "2016-03-05T01:13:40Z",
    "author_association": "MEMBER",
    "body": "So grpc streams (the individual calls) are going to finish upon disconnect,\nbut a grpc channel will reconnect upon the next new call being started.\n\nOn Fri, Mar 4, 2016, 5:02 PM Jorge Canizales notifications@github.com\nwrote:\n\n> can\n> \n> Are you trying to tell me the C layer is expected to take care of goaways\n> automatically, and so this is a bug that should be filed for core? The\n> problem here isn't necessarily having to pick a different backend.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/grpc/grpc/issues/5614#issuecomment-192541030.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/192544470",
    "html_url": "https://github.com/grpc/grpc/issues/5614#issuecomment-192544470",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5614",
    "id": 192544470,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MjU0NDQ3MA==",
    "user": {
      "login": "jcanizales",
      "id": 5120183,
      "node_id": "MDQ6VXNlcjUxMjAxODM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5120183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jcanizales",
      "html_url": "https://github.com/jcanizales",
      "followers_url": "https://api.github.com/users/jcanizales/followers",
      "following_url": "https://api.github.com/users/jcanizales/following{/other_user}",
      "gists_url": "https://api.github.com/users/jcanizales/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jcanizales/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jcanizales/subscriptions",
      "organizations_url": "https://api.github.com/users/jcanizales/orgs",
      "repos_url": "https://api.github.com/users/jcanizales/repos",
      "events_url": "https://api.github.com/users/jcanizales/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jcanizales/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-05T01:32:10Z",
    "updated_at": "2016-03-05T01:32:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ah, that's not what people are seeing. I'll CC you on the internal tracker.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/215844712",
    "html_url": "https://github.com/grpc/grpc/issues/5614#issuecomment-215844712",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5614",
    "id": 215844712,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNTg0NDcxMg==",
    "user": {
      "login": "hsaliak",
      "id": 150108,
      "node_id": "MDQ6VXNlcjE1MDEwOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/150108?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hsaliak",
      "html_url": "https://github.com/hsaliak",
      "followers_url": "https://api.github.com/users/hsaliak/followers",
      "following_url": "https://api.github.com/users/hsaliak/following{/other_user}",
      "gists_url": "https://api.github.com/users/hsaliak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hsaliak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hsaliak/subscriptions",
      "organizations_url": "https://api.github.com/users/hsaliak/orgs",
      "repos_url": "https://api.github.com/users/hsaliak/repos",
      "events_url": "https://api.github.com/users/hsaliak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hsaliak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-29T18:43:45Z",
    "updated_at": "2016-04-29T18:43:45Z",
    "author_association": "MEMBER",
    "body": "Duplicate of #5851, let's continue the discussion there. \n"
  }
]
