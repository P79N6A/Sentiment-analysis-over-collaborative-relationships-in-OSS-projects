[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/435637753",
    "html_url": "https://github.com/grpc/grpc/issues/17093#issuecomment-435637753",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17093",
    "id": 435637753,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTYzNzc1Mw==",
    "user": {
      "login": "nicolasnoble",
      "id": 7281574,
      "node_id": "MDQ6VXNlcjcyODE1NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7281574?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nicolasnoble",
      "html_url": "https://github.com/nicolasnoble",
      "followers_url": "https://api.github.com/users/nicolasnoble/followers",
      "following_url": "https://api.github.com/users/nicolasnoble/following{/other_user}",
      "gists_url": "https://api.github.com/users/nicolasnoble/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nicolasnoble/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nicolasnoble/subscriptions",
      "organizations_url": "https://api.github.com/users/nicolasnoble/orgs",
      "repos_url": "https://api.github.com/users/nicolasnoble/repos",
      "events_url": "https://api.github.com/users/nicolasnoble/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nicolasnoble/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-04T02:52:54Z",
    "updated_at": "2018-11-04T02:52:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "How is this usage case different from #16001?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/435713979",
    "html_url": "https://github.com/grpc/grpc/issues/17093#issuecomment-435713979",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17093",
    "id": 435713979,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTcxMzk3OQ==",
    "user": {
      "login": "dcoles",
      "id": 1007415,
      "node_id": "MDQ6VXNlcjEwMDc0MTU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1007415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dcoles",
      "html_url": "https://github.com/dcoles",
      "followers_url": "https://api.github.com/users/dcoles/followers",
      "following_url": "https://api.github.com/users/dcoles/following{/other_user}",
      "gists_url": "https://api.github.com/users/dcoles/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dcoles/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dcoles/subscriptions",
      "organizations_url": "https://api.github.com/users/dcoles/orgs",
      "repos_url": "https://api.github.com/users/dcoles/repos",
      "events_url": "https://api.github.com/users/dcoles/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dcoles/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-04T22:25:55Z",
    "updated_at": "2018-11-04T22:25:55Z",
    "author_association": "NONE",
    "body": "@nicolasnoble Both #14436 and #16001 appeared to be specifically about `futures.ProcessPoolExecutor` as the executor for a gRPC server while this is about using fork() inside a handler. Additionally the examples provided all appear to work with Python 2.7, but cause `Failed accept4: Invalid argument` on Python 3.6.\r\n\r\nWhile `preexec_fn` is known to be problematic with multi-threaded applications, it's currently the only mechanism for dropping privileges during `fork+exec`. Similarly it's concerning that even `fork+_exit` (the minimal usage of fork) causes this error.\r\n\r\nI opened this issue as none of the existing `fork` issues the general use of `fork` in Python 3. However I'm happy to mark this as a duplicate if being addressed elsewhere."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/440896680",
    "html_url": "https://github.com/grpc/grpc/issues/17093#issuecomment-440896680",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17093",
    "id": 440896680,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDg5NjY4MA==",
    "user": {
      "login": "srini100",
      "id": 35056280,
      "node_id": "MDQ6VXNlcjM1MDU2Mjgw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/35056280?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/srini100",
      "html_url": "https://github.com/srini100",
      "followers_url": "https://api.github.com/users/srini100/followers",
      "following_url": "https://api.github.com/users/srini100/following{/other_user}",
      "gists_url": "https://api.github.com/users/srini100/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/srini100/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/srini100/subscriptions",
      "organizations_url": "https://api.github.com/users/srini100/orgs",
      "repos_url": "https://api.github.com/users/srini100/repos",
      "events_url": "https://api.github.com/users/srini100/events{/privacy}",
      "received_events_url": "https://api.github.com/users/srini100/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-22T02:48:23Z",
    "updated_at": "2018-11-22T02:48:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "@dcoles, this is an interesting problem. How many greeter servers do you see running after sending one request? I see two with python3 and one with python2. I didn't dig into why this is the case but seems like os.execl and os._exit are not really killing the forked child process in python 3.6. Obviously, the child process starts interfering with the parent process when it also tries to accept on the same FD and fails. Child process closes the socket upon error and hence parent process also stops working. "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/441098499",
    "html_url": "https://github.com/grpc/grpc/issues/17093#issuecomment-441098499",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17093",
    "id": 441098499,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTA5ODQ5OQ==",
    "user": {
      "login": "dcoles",
      "id": 1007415,
      "node_id": "MDQ6VXNlcjEwMDc0MTU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1007415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dcoles",
      "html_url": "https://github.com/dcoles",
      "followers_url": "https://api.github.com/users/dcoles/followers",
      "following_url": "https://api.github.com/users/dcoles/following{/other_user}",
      "gists_url": "https://api.github.com/users/dcoles/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dcoles/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dcoles/subscriptions",
      "organizations_url": "https://api.github.com/users/dcoles/orgs",
      "repos_url": "https://api.github.com/users/dcoles/repos",
      "events_url": "https://api.github.com/users/dcoles/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dcoles/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-22T18:15:44Z",
    "updated_at": "2018-11-22T18:15:44Z",
    "author_association": "NONE",
    "body": "I see the same behaviour. With python2 I start with 1 process containing 4 sub-tasks: 1 thread per request (to a maximum of 10 additional threads). With python3 I also start with 1 process with 4 sub-threads, however when sending the RPC I get 2 new sub-tasks: 1 thread and 1 child process.\r\n\r\nI tried debugging the hanging process this via `gdb` and did get a useful backtrace: https://gist.github.com/dcoles/95ca1699de766b5eb2901865c9bf56d8. Looks like it's stuck on `_Server.__del__` waiting for the GRPC server to shutdown due to a bunch of finalizers being called in `PyOS_AfterFork`.\r\n\r\nYou'll notice that the Python code doesn't even reach `os.execl` or `os._exit` - it's still stuck in `os.fork`. This can be seen by the lack of \"Hello, world!\" being printed when using `greeter_server_fork_exec.py`."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/441134066",
    "html_url": "https://github.com/grpc/grpc/issues/17093#issuecomment-441134066",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17093",
    "id": 441134066,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTEzNDA2Ng==",
    "user": {
      "login": "srini100",
      "id": 35056280,
      "node_id": "MDQ6VXNlcjM1MDU2Mjgw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/35056280?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/srini100",
      "html_url": "https://github.com/srini100",
      "followers_url": "https://api.github.com/users/srini100/followers",
      "following_url": "https://api.github.com/users/srini100/following{/other_user}",
      "gists_url": "https://api.github.com/users/srini100/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/srini100/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/srini100/subscriptions",
      "organizations_url": "https://api.github.com/users/srini100/orgs",
      "repos_url": "https://api.github.com/users/srini100/repos",
      "events_url": "https://api.github.com/users/srini100/events{/privacy}",
      "received_events_url": "https://api.github.com/users/srini100/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-22T23:38:09Z",
    "updated_at": "2018-11-22T23:38:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "@dcoles, I went as far back as 1.9.0 and see the same problem so this couldn't be due to post fork handlers added in 1.15.0 release to support client side forking. It'll be great if you can investigate this further and find the root cause. There was a mention of this issue about a year ago [here](https://github.com/grpc/grpc/issues/13873#issuecomment-354528889)."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/441149826",
    "html_url": "https://github.com/grpc/grpc/issues/17093#issuecomment-441149826",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17093",
    "id": 441149826,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTE0OTgyNg==",
    "user": {
      "login": "dcoles",
      "id": 1007415,
      "node_id": "MDQ6VXNlcjEwMDc0MTU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1007415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dcoles",
      "html_url": "https://github.com/dcoles",
      "followers_url": "https://api.github.com/users/dcoles/followers",
      "following_url": "https://api.github.com/users/dcoles/following{/other_user}",
      "gists_url": "https://api.github.com/users/dcoles/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dcoles/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dcoles/subscriptions",
      "organizations_url": "https://api.github.com/users/dcoles/orgs",
      "repos_url": "https://api.github.com/users/dcoles/repos",
      "events_url": "https://api.github.com/users/dcoles/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dcoles/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-23T03:28:40Z",
    "updated_at": "2018-11-23T03:28:40Z",
    "author_association": "NONE",
    "body": "I believe the root cause is garbage collection for all the threads that no longer exist (including the main thread) being cleaned up and calling any `__del__` methods. If that was the case, a fairly easy fix would be to have `_Server` remember it's owner process and refusing to call `_stop` if the process doesn't match. I tried this out and was able to call all three repro-cases RPCs multiple times.\r\n\r\nI think this is probably a reasonable approach since according to the [POSIX spec](http://pubs.opengroup.org/onlinepubs/000095399/functions/fork.html), you should only call async-signal-safe operations before doing an `exec` :\r\n> If a multi-threaded process calls fork(), the new process shall contain a replica of the calling thread and its entire address space, possibly including the states of mutexes and other resources. Consequently, to avoid errors, the child process may only execute async-signal-safe operations until such time as one of the exec functions is called.\r\n\r\nI'll prepare a PR shortly."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/444346390",
    "html_url": "https://github.com/grpc/grpc/issues/17093#issuecomment-444346390",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17093",
    "id": 444346390,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NDM0NjM5MA==",
    "user": {
      "login": "ericgribkoff",
      "id": 5067076,
      "node_id": "MDQ6VXNlcjUwNjcwNzY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5067076?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ericgribkoff",
      "html_url": "https://github.com/ericgribkoff",
      "followers_url": "https://api.github.com/users/ericgribkoff/followers",
      "following_url": "https://api.github.com/users/ericgribkoff/following{/other_user}",
      "gists_url": "https://api.github.com/users/ericgribkoff/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ericgribkoff/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ericgribkoff/subscriptions",
      "organizations_url": "https://api.github.com/users/ericgribkoff/orgs",
      "repos_url": "https://api.github.com/users/ericgribkoff/repos",
      "events_url": "https://api.github.com/users/ericgribkoff/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ericgribkoff/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-05T03:32:27Z",
    "updated_at": "2018-12-05T03:32:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "Seemingly the same underlying issue: https://github.com/grpc/grpc/issues/15756"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/444346795",
    "html_url": "https://github.com/grpc/grpc/issues/17093#issuecomment-444346795",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17093",
    "id": 444346795,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NDM0Njc5NQ==",
    "user": {
      "login": "ericgribkoff",
      "id": 5067076,
      "node_id": "MDQ6VXNlcjUwNjcwNzY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5067076?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ericgribkoff",
      "html_url": "https://github.com/ericgribkoff",
      "followers_url": "https://api.github.com/users/ericgribkoff/followers",
      "following_url": "https://api.github.com/users/ericgribkoff/following{/other_user}",
      "gists_url": "https://api.github.com/users/ericgribkoff/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ericgribkoff/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ericgribkoff/subscriptions",
      "organizations_url": "https://api.github.com/users/ericgribkoff/orgs",
      "repos_url": "https://api.github.com/users/ericgribkoff/repos",
      "events_url": "https://api.github.com/users/ericgribkoff/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ericgribkoff/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-05T03:34:56Z",
    "updated_at": "2018-12-05T03:34:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "I realize that I replied to the PR, but not here on the issue. The full details are at https://github.com/grpc/grpc/pull/17288#issuecomment-443032967, but to summarize: we are doing work in our `__del__` methods to clean up and shut down gRPC that, combined with Python's clean-up of deceased threads in the child's post-fork handler, can lead to a hanging process. We are working to get this fixed in the next release."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/448332946",
    "html_url": "https://github.com/grpc/grpc/issues/17093#issuecomment-448332946",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17093",
    "id": 448332946,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODMzMjk0Ng==",
    "user": {
      "login": "ericgribkoff",
      "id": 5067076,
      "node_id": "MDQ6VXNlcjUwNjcwNzY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5067076?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ericgribkoff",
      "html_url": "https://github.com/ericgribkoff",
      "followers_url": "https://api.github.com/users/ericgribkoff/followers",
      "following_url": "https://api.github.com/users/ericgribkoff/following{/other_user}",
      "gists_url": "https://api.github.com/users/ericgribkoff/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ericgribkoff/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ericgribkoff/subscriptions",
      "organizations_url": "https://api.github.com/users/ericgribkoff/orgs",
      "repos_url": "https://api.github.com/users/ericgribkoff/repos",
      "events_url": "https://api.github.com/users/ericgribkoff/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ericgribkoff/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-18T19:03:44Z",
    "updated_at": "2018-12-18T19:03:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "The fix for this (#17444) is now merged and will be available in the next release. The next nightly build at https://packages.grpc.io/ (installable via pip) will also include the fix. I'll close this issue for now.\r\n\r\n@dcoles If any issues remain, please comment here and we will reopen. Thanks."
  }
]
