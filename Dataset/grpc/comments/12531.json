[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/348035185",
    "html_url": "https://github.com/grpc/grpc/issues/12531#issuecomment-348035185",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12531",
    "id": 348035185,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODAzNTE4NQ==",
    "user": {
      "login": "dvaldivia",
      "id": 18384552,
      "node_id": "MDQ6VXNlcjE4Mzg0NTUy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/18384552?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dvaldivia",
      "html_url": "https://github.com/dvaldivia",
      "followers_url": "https://api.github.com/users/dvaldivia/followers",
      "following_url": "https://api.github.com/users/dvaldivia/following{/other_user}",
      "gists_url": "https://api.github.com/users/dvaldivia/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dvaldivia/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dvaldivia/subscriptions",
      "organizations_url": "https://api.github.com/users/dvaldivia/orgs",
      "repos_url": "https://api.github.com/users/dvaldivia/repos",
      "events_url": "https://api.github.com/users/dvaldivia/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dvaldivia/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-29T23:47:09Z",
    "updated_at": "2017-11-29T23:47:09Z",
    "author_association": "NONE",
    "body": "+1"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/362376537",
    "html_url": "https://github.com/grpc/grpc/issues/12531#issuecomment-362376537",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12531",
    "id": 362376537,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjM3NjUzNw==",
    "user": {
      "login": "aamitdb",
      "id": 30242850,
      "node_id": "MDQ6VXNlcjMwMjQyODUw",
      "avatar_url": "https://avatars0.githubusercontent.com/u/30242850?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aamitdb",
      "html_url": "https://github.com/aamitdb",
      "followers_url": "https://api.github.com/users/aamitdb/followers",
      "following_url": "https://api.github.com/users/aamitdb/following{/other_user}",
      "gists_url": "https://api.github.com/users/aamitdb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aamitdb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aamitdb/subscriptions",
      "organizations_url": "https://api.github.com/users/aamitdb/orgs",
      "repos_url": "https://api.github.com/users/aamitdb/repos",
      "events_url": "https://api.github.com/users/aamitdb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aamitdb/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-01T19:32:40Z",
    "updated_at": "2018-02-01T19:33:27Z",
    "author_association": "NONE",
    "body": "Hey, this is an example of the type of issue I'd like to have resolved by this ticket. \r\n\r\n1. Start a gRPC server e.g. https://github.com/grpc/grpc/blob/master/examples/python/route_guide/route_guide_server.py#L29\r\n2. Spawn a daemon thread that is calling the server\r\n```\r\nimport threading\r\nimport sys\r\nimport time\r\n\r\nimport grpc\r\n\r\nimport route_guide_pb2\r\nimport route_guide_pb2_grpc\r\n\r\n\r\ndef guide_list_features(stub):\r\n    rectangle = route_guide_pb2.Rectangle(\r\n        lo=route_guide_pb2.Point(latitude=400000000, longitude=-750000000),\r\n        hi=route_guide_pb2.Point(latitude=420000000, longitude=-730000000))\r\n    features = stub.ListFeatures(rectangle)\r\n    for f in features:\r\n        pass\r\n\r\n\r\ndef send_messages():\r\n    channel = grpc.insecure_channel('localhost:50051')\r\n    stub = route_guide_pb2_grpc.RouteGuideStub(channel)\r\n    while True:\r\n        guide_list_features(stub)\r\n\r\n\r\nif __name__ == '__main__':\r\n    t = threading.Thread(target=send_messages)\r\n    t.daemon = True\r\n    t.start()\r\n    time.sleep(float(sys.argv[1]))\r\n    print(time.time())\r\n```\r\n3. Run it in a loop\r\n```\r\nfor i in {1..1000000};\r\ndo\r\npython sample.py .2 >> /tmp/attempt.log 2>&1\r\ndone\r\n```\r\n\r\nObserver a variety of errors e.g.\r\n1. `Exception in thread Thread-2 (most likely raised during interpreter shutdown):Exception in thread Thread-22 (most likely raised during interpreter shutdown):1517513380.4\r\n1517513380.74`\r\n2. \r\n```\r\nTraceback (most recent call last):\r\n   File \"/usr/lib/python2.7/threading.py\", line 801, in __bootstrap_innerException in thread Thread-2 (most likely raised during interpreter shutdown):\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python2.7/threading.py\", line 801, in __bootstrap_inner\r\n  File \"/usr/lib/python2.7/threading.py\", line 754, in run\r\n  File \"/tmp/grpc18/local/lib/python2.7/site-packages/grpc/_channel.py\", line 816, in _poll_connectivity\r\n  File \"/usr/lib/python2.7/threading.py\", line 168, in acquire\r\n<type 'exceptions.TypeError'>: 'NoneType' object is not callable\r\n```\r\n3. Core dumps (can provide backtrace). \r\n\r\nI've played around with this example to try and cal `del` or `__del__` on the channel in an atexit handler, or even just open the channel itself and I can reproduce these errors. My ideal use case would be calling `channel.close()` in an atexit handler would be enough to deal with these issues, rather than having to not use a daemon thread at all. \r\n\r\n\r\nI've tried on gRPC 1.8.4 and 1.9.0rc3, on both mac os (python 2.7.10) and Ubuntu 16.04.3 LTS VM (python 2.7.12)"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/362439206",
    "html_url": "https://github.com/grpc/grpc/issues/12531#issuecomment-362439206",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12531",
    "id": 362439206,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjQzOTIwNg==",
    "user": {
      "login": "meawoppl",
      "id": 579782,
      "node_id": "MDQ6VXNlcjU3OTc4Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/579782?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meawoppl",
      "html_url": "https://github.com/meawoppl",
      "followers_url": "https://api.github.com/users/meawoppl/followers",
      "following_url": "https://api.github.com/users/meawoppl/following{/other_user}",
      "gists_url": "https://api.github.com/users/meawoppl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meawoppl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meawoppl/subscriptions",
      "organizations_url": "https://api.github.com/users/meawoppl/orgs",
      "repos_url": "https://api.github.com/users/meawoppl/repos",
      "events_url": "https://api.github.com/users/meawoppl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meawoppl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-01T23:43:41Z",
    "updated_at": "2018-02-01T23:43:52Z",
    "author_association": "NONE",
    "body": "Python `__del__` handlers are a mess, at the very least there should a call which allows the caller to close out connections/threads/etc left by the grpc backend.  I discovered this because our CI checks for tests that leave dangling threads.  Simpy opening a insecure channel, and waiting for it to become live is enough to leave threads dangling."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/378371455",
    "html_url": "https://github.com/grpc/grpc/issues/12531#issuecomment-378371455",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12531",
    "id": 378371455,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODM3MTQ1NQ==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-03T19:40:41Z",
    "updated_at": "2018-04-03T19:40:41Z",
    "author_association": "MEMBER",
    "body": "I know this issue has fans (I'm the biggest one) so it is with disappointment that I have to say that resolution of this issue is going to slip from upcoming release `1.11` and will now be targeted to `1.12`.\r\n\r\nSorry friends."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/386170683",
    "html_url": "https://github.com/grpc/grpc/issues/12531#issuecomment-386170683",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12531",
    "id": 386170683,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjE3MDY4Mw==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-03T01:40:13Z",
    "updated_at": "2018-05-03T01:40:13Z",
    "author_association": "MEMBER",
    "body": "I'm going to call this fixed as of the integration of [pull request 15254](https://github.com/grpc/grpc/pull/15254). I've got a list of follow-up items but I think this is done.\r\n\r\nIf you're working from source, please try it out."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/389480561",
    "html_url": "https://github.com/grpc/grpc/issues/12531#issuecomment-389480561",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12531",
    "id": 389480561,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTQ4MDU2MQ==",
    "user": {
      "login": "hubo1016",
      "id": 14069404,
      "node_id": "MDQ6VXNlcjE0MDY5NDA0",
      "avatar_url": "https://avatars3.githubusercontent.com/u/14069404?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hubo1016",
      "html_url": "https://github.com/hubo1016",
      "followers_url": "https://api.github.com/users/hubo1016/followers",
      "following_url": "https://api.github.com/users/hubo1016/following{/other_user}",
      "gists_url": "https://api.github.com/users/hubo1016/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hubo1016/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hubo1016/subscriptions",
      "organizations_url": "https://api.github.com/users/hubo1016/orgs",
      "repos_url": "https://api.github.com/users/hubo1016/repos",
      "events_url": "https://api.github.com/users/hubo1016/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hubo1016/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-16T11:04:55Z",
    "updated_at": "2018-05-16T11:04:55Z",
    "author_association": "NONE",
    "body": "@nathanielmanistaatgoogle It seems the new `close()` method is a blocking method. Is there any asynchronous way to close the channel? For example, add a `channel_close_future()` method to create a future for the channel shutdown. Or simply add a `start_close()` method and subscribe to the channel status.\r\n\r\nThis is useful in many ways, for example, shutdown multiple channels."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/389500793",
    "html_url": "https://github.com/grpc/grpc/issues/12531#issuecomment-389500793",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12531",
    "id": 389500793,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTUwMDc5Mw==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-16T12:28:47Z",
    "updated_at": "2018-05-16T12:28:47Z",
    "author_association": "MEMBER",
    "body": "@hubo1016: how long is it blocking for you? It's not supposed to be a blocking method, but due to [issue 3064](https://github.com/grpc/grpc/issues/3064) it may block for up to 200ms. Are you seeing it block for longer than that?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/389577039",
    "html_url": "https://github.com/grpc/grpc/issues/12531#issuecomment-389577039",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12531",
    "id": 389577039,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTU3NzAzOQ==",
    "user": {
      "login": "hubo1016",
      "id": 14069404,
      "node_id": "MDQ6VXNlcjE0MDY5NDA0",
      "avatar_url": "https://avatars3.githubusercontent.com/u/14069404?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hubo1016",
      "html_url": "https://github.com/hubo1016",
      "followers_url": "https://api.github.com/users/hubo1016/followers",
      "following_url": "https://api.github.com/users/hubo1016/following{/other_user}",
      "gists_url": "https://api.github.com/users/hubo1016/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hubo1016/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hubo1016/subscriptions",
      "organizations_url": "https://api.github.com/users/hubo1016/orgs",
      "repos_url": "https://api.github.com/users/hubo1016/repos",
      "events_url": "https://api.github.com/users/hubo1016/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hubo1016/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-16T16:12:53Z",
    "updated_at": "2018-05-16T16:12:53Z",
    "author_association": "NONE",
    "body": "@nathanielmanistaatgoogle no, I was just wondering, because I saw some wait operations in Cython code."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/392299234",
    "html_url": "https://github.com/grpc/grpc/issues/12531#issuecomment-392299234",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12531",
    "id": 392299234,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjI5OTIzNA==",
    "user": {
      "login": "hubo1016",
      "id": 14069404,
      "node_id": "MDQ6VXNlcjE0MDY5NDA0",
      "avatar_url": "https://avatars3.githubusercontent.com/u/14069404?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hubo1016",
      "html_url": "https://github.com/hubo1016",
      "followers_url": "https://api.github.com/users/hubo1016/followers",
      "following_url": "https://api.github.com/users/hubo1016/following{/other_user}",
      "gists_url": "https://api.github.com/users/hubo1016/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hubo1016/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hubo1016/subscriptions",
      "organizations_url": "https://api.github.com/users/hubo1016/orgs",
      "repos_url": "https://api.github.com/users/hubo1016/repos",
      "events_url": "https://api.github.com/users/hubo1016/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hubo1016/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-27T01:41:27Z",
    "updated_at": "2018-05-27T01:41:27Z",
    "author_association": "NONE",
    "body": "@nathanielmanistaatgoogle \r\nThere may be an issue that after upgrading to grpc1.12.0, code that do not explicitly close the channel causes connection leak, makes this a break change. Maybe the new implementation creates reference loops and breaks the reference counting, so the connections may still be alive until GC collects them? I'm still tracing down this issue, but I would like to report."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/396422319",
    "html_url": "https://github.com/grpc/grpc/issues/12531#issuecomment-396422319",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12531",
    "id": 396422319,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjQyMjMxOQ==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-11T23:54:29Z",
    "updated_at": "2018-06-11T23:54:29Z",
    "author_association": "MEMBER",
    "body": "@hubo1016: yes, it would be a problem if gRPC Python 1.12 leaked connections in a way that gRPC Python 1.11 did not leak connections. Have you progressed any further in your tracing down this question?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/396445320",
    "html_url": "https://github.com/grpc/grpc/issues/12531#issuecomment-396445320",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12531",
    "id": 396445320,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjQ0NTMyMA==",
    "user": {
      "login": "hubo1016",
      "id": 14069404,
      "node_id": "MDQ6VXNlcjE0MDY5NDA0",
      "avatar_url": "https://avatars3.githubusercontent.com/u/14069404?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hubo1016",
      "html_url": "https://github.com/hubo1016",
      "followers_url": "https://api.github.com/users/hubo1016/followers",
      "following_url": "https://api.github.com/users/hubo1016/following{/other_user}",
      "gists_url": "https://api.github.com/users/hubo1016/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hubo1016/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hubo1016/subscriptions",
      "organizations_url": "https://api.github.com/users/hubo1016/orgs",
      "repos_url": "https://api.github.com/users/hubo1016/repos",
      "events_url": "https://api.github.com/users/hubo1016/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hubo1016/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-12T02:26:14Z",
    "updated_at": "2018-06-12T02:26:14Z",
    "author_association": "NONE",
    "body": "@nathanielmanistaatgoogle at least after explicitly closing the connections, the issue disappears. I did not have time to check the code yet."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/396606182",
    "html_url": "https://github.com/grpc/grpc/issues/12531#issuecomment-396606182",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12531",
    "id": 396606182,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjYwNjE4Mg==",
    "user": {
      "login": "meawoppl",
      "id": 579782,
      "node_id": "MDQ6VXNlcjU3OTc4Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/579782?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meawoppl",
      "html_url": "https://github.com/meawoppl",
      "followers_url": "https://api.github.com/users/meawoppl/followers",
      "following_url": "https://api.github.com/users/meawoppl/following{/other_user}",
      "gists_url": "https://api.github.com/users/meawoppl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meawoppl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meawoppl/subscriptions",
      "organizations_url": "https://api.github.com/users/meawoppl/orgs",
      "repos_url": "https://api.github.com/users/meawoppl/repos",
      "events_url": "https://api.github.com/users/meawoppl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meawoppl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-12T14:18:13Z",
    "updated_at": "2018-06-12T14:18:13Z",
    "author_association": "NONE",
    "body": "The tests in our codebase that exercised we're skipped for the last few months and have rotted.  I will be spending some cycles today trying to get them running again."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/397081166",
    "html_url": "https://github.com/grpc/grpc/issues/12531#issuecomment-397081166",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12531",
    "id": 397081166,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzA4MTE2Ng==",
    "user": {
      "login": "meawoppl",
      "id": 579782,
      "node_id": "MDQ6VXNlcjU3OTc4Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/579782?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meawoppl",
      "html_url": "https://github.com/meawoppl",
      "followers_url": "https://api.github.com/users/meawoppl/followers",
      "following_url": "https://api.github.com/users/meawoppl/following{/other_user}",
      "gists_url": "https://api.github.com/users/meawoppl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meawoppl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meawoppl/subscriptions",
      "organizations_url": "https://api.github.com/users/meawoppl/orgs",
      "repos_url": "https://api.github.com/users/meawoppl/repos",
      "events_url": "https://api.github.com/users/meawoppl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meawoppl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-13T20:48:16Z",
    "updated_at": "2018-06-13T20:48:16Z",
    "author_association": "NONE",
    "body": "I am now encountering *segfaults*, this particular use case is monitored in a python thread to add to the tracing confusion. I am seeing if I can Smith a reproduction outside of that scope"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/399570912",
    "html_url": "https://github.com/grpc/grpc/issues/12531#issuecomment-399570912",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12531",
    "id": 399570912,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTU3MDkxMg==",
    "user": {
      "login": "meawoppl",
      "id": 579782,
      "node_id": "MDQ6VXNlcjU3OTc4Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/579782?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meawoppl",
      "html_url": "https://github.com/meawoppl",
      "followers_url": "https://api.github.com/users/meawoppl/followers",
      "following_url": "https://api.github.com/users/meawoppl/following{/other_user}",
      "gists_url": "https://api.github.com/users/meawoppl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meawoppl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meawoppl/subscriptions",
      "organizations_url": "https://api.github.com/users/meawoppl/orgs",
      "repos_url": "https://api.github.com/users/meawoppl/repos",
      "events_url": "https://api.github.com/users/meawoppl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meawoppl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-22T20:21:57Z",
    "updated_at": "2018-06-22T20:23:45Z",
    "author_association": "NONE",
    "body": "Alright, I did some major digging and here are the things I learned:\r\n- If you simply apply a version bump from `1.8.4` -> `1.12.0` the behaviour in Python subprocess/`fork()` changes subtly (this is under some integration tests in our stack)\r\n- These changes are separate from other issues in the space most notable #15334 \r\n\r\nThe core symptom I see is something like:\r\n```\r\nE0621 22:58:45.924080283   11368 server.cc:1265] assertion failed: gpr_atm_acq_load(&server->shutdown_flag) || !server->listeners\r\nAborted\r\n```\r\n\r\nI can't get a very good trace because we use pytest's multiprocessing interface to run integration tests which get pretty hard-aborted killing the logging/traceback one might hope for.  \r\n\r\nI have a internal ticket we are going to work on to allow that to be run serially, but my suspicion looking at the line in question above is somewhere the shutdown flag is getting shared in an inappropriate way.  \r\n\r\nHas a similar smell as this #14917/#10084 but I can't be certain on that one."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/399588341",
    "html_url": "https://github.com/grpc/grpc/issues/12531#issuecomment-399588341",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12531",
    "id": 399588341,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTU4ODM0MQ==",
    "user": {
      "login": "srini100",
      "id": 35056280,
      "node_id": "MDQ6VXNlcjM1MDU2Mjgw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/35056280?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/srini100",
      "html_url": "https://github.com/srini100",
      "followers_url": "https://api.github.com/users/srini100/followers",
      "following_url": "https://api.github.com/users/srini100/following{/other_user}",
      "gists_url": "https://api.github.com/users/srini100/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/srini100/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/srini100/subscriptions",
      "organizations_url": "https://api.github.com/users/srini100/orgs",
      "repos_url": "https://api.github.com/users/srini100/repos",
      "events_url": "https://api.github.com/users/srini100/events{/privacy}",
      "received_events_url": "https://api.github.com/users/srini100/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-22T21:32:32Z",
    "updated_at": "2018-06-22T21:32:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "@meawoppl, please open new issue if you continue to see the above error. For fork related issues, post in #15334. "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/399609776",
    "html_url": "https://github.com/grpc/grpc/issues/12531#issuecomment-399609776",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12531",
    "id": 399609776,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTYwOTc3Ng==",
    "user": {
      "login": "meawoppl",
      "id": 579782,
      "node_id": "MDQ6VXNlcjU3OTc4Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/579782?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meawoppl",
      "html_url": "https://github.com/meawoppl",
      "followers_url": "https://api.github.com/users/meawoppl/followers",
      "following_url": "https://api.github.com/users/meawoppl/following{/other_user}",
      "gists_url": "https://api.github.com/users/meawoppl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meawoppl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meawoppl/subscriptions",
      "organizations_url": "https://api.github.com/users/meawoppl/orgs",
      "repos_url": "https://api.github.com/users/meawoppl/repos",
      "events_url": "https://api.github.com/users/meawoppl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meawoppl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-22T23:33:34Z",
    "updated_at": "2018-06-22T23:33:34Z",
    "author_association": "NONE",
    "body": "Cool.  I think the shutdown handlers have edge cases that are not examined in the multiprocessing context.  \r\nIf that is out of scope for this issue, feel free to tag it resolved."
  }
]
