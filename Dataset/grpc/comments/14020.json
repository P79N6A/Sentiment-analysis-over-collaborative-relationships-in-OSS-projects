[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/357612781",
    "html_url": "https://github.com/grpc/grpc/pull/14020#issuecomment-357612781",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14020",
    "id": 357612781,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzYxMjc4MQ==",
    "user": {
      "login": "thelinuxfoundation",
      "id": 4450729,
      "node_id": "MDQ6VXNlcjQ0NTA3Mjk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4450729?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thelinuxfoundation",
      "html_url": "https://github.com/thelinuxfoundation",
      "followers_url": "https://api.github.com/users/thelinuxfoundation/followers",
      "following_url": "https://api.github.com/users/thelinuxfoundation/following{/other_user}",
      "gists_url": "https://api.github.com/users/thelinuxfoundation/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thelinuxfoundation/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thelinuxfoundation/subscriptions",
      "organizations_url": "https://api.github.com/users/thelinuxfoundation/orgs",
      "repos_url": "https://api.github.com/users/thelinuxfoundation/repos",
      "events_url": "https://api.github.com/users/thelinuxfoundation/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thelinuxfoundation/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-15T08:26:23Z",
    "updated_at": "2018-01-15T08:26:23Z",
    "author_association": "NONE",
    "body": "\nThank you for your pull request. Before we can look at your contribution, we need to ensure all contributors are covered by a Contributor License Agreement.\n\nAfter the following items are addressed, please respond with a new comment here, and the automated system will re-verify.\n\n* User @shahoxo isn't covered by a CLA. They will need to complete the form at https://identity.linuxfoundation.org/projects/cncf\n\n_Regards,\nCLA GitHub bot_\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/357769322",
    "html_url": "https://github.com/grpc/grpc/pull/14020#issuecomment-357769322",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14020",
    "id": 357769322,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Nzc2OTMyMg==",
    "user": {
      "login": "apolcyn",
      "id": 9566254,
      "node_id": "MDQ6VXNlcjk1NjYyNTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9566254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apolcyn",
      "html_url": "https://github.com/apolcyn",
      "followers_url": "https://api.github.com/users/apolcyn/followers",
      "following_url": "https://api.github.com/users/apolcyn/following{/other_user}",
      "gists_url": "https://api.github.com/users/apolcyn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apolcyn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apolcyn/subscriptions",
      "organizations_url": "https://api.github.com/users/apolcyn/orgs",
      "repos_url": "https://api.github.com/users/apolcyn/repos",
      "events_url": "https://api.github.com/users/apolcyn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apolcyn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-15T19:26:02Z",
    "updated_at": "2018-01-15T19:26:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "thanks for the pull request.\r\n\r\nMy only issue with this is that it's a potentially breaking behavior change; I could imagine that some people might be relying on the fact that instance state can be shared between different RPC's. (the [route guide server](https://github.com/grpc/grpc/blob/master/examples/ruby/route_guide/route_guide_server.rb#L150) is one contrived example).\r\n\r\nRather than <i>change</i> the current behavior, can we extend it to support the <i>old</i> way and this <i>new</i> way? \r\n\r\nOne simple example: we could add a new method called, e.g., `RpcServer#handle_with_new_instance_per_rpc(service)`, which uses this new behavior from this PR."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/358186991",
    "html_url": "https://github.com/grpc/grpc/pull/14020#issuecomment-358186991",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14020",
    "id": 358186991,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODE4Njk5MQ==",
    "user": {
      "login": "shahoxo",
      "id": 1913141,
      "node_id": "MDQ6VXNlcjE5MTMxNDE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1913141?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shahoxo",
      "html_url": "https://github.com/shahoxo",
      "followers_url": "https://api.github.com/users/shahoxo/followers",
      "following_url": "https://api.github.com/users/shahoxo/following{/other_user}",
      "gists_url": "https://api.github.com/users/shahoxo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shahoxo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shahoxo/subscriptions",
      "organizations_url": "https://api.github.com/users/shahoxo/orgs",
      "repos_url": "https://api.github.com/users/shahoxo/repos",
      "events_url": "https://api.github.com/users/shahoxo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shahoxo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-17T03:33:03Z",
    "updated_at": "2018-01-17T03:33:03Z",
    "author_association": "NONE",
    "body": "Fixed!"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/358468823",
    "html_url": "https://github.com/grpc/grpc/pull/14020#issuecomment-358468823",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14020",
    "id": 358468823,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODQ2ODgyMw==",
    "user": {
      "login": "apolcyn",
      "id": 9566254,
      "node_id": "MDQ6VXNlcjk1NjYyNTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9566254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apolcyn",
      "html_url": "https://github.com/apolcyn",
      "followers_url": "https://api.github.com/users/apolcyn/followers",
      "following_url": "https://api.github.com/users/apolcyn/following{/other_user}",
      "gists_url": "https://api.github.com/users/apolcyn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apolcyn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apolcyn/subscriptions",
      "organizations_url": "https://api.github.com/users/apolcyn/orgs",
      "repos_url": "https://api.github.com/users/apolcyn/repos",
      "events_url": "https://api.github.com/users/apolcyn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apolcyn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-17T22:22:17Z",
    "updated_at": "2018-01-17T22:22:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "jenkins: this is ok to test"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/358474690",
    "html_url": "https://github.com/grpc/grpc/pull/14020#issuecomment-358474690",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14020",
    "id": 358474690,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODQ3NDY5MA==",
    "user": {
      "login": "apolcyn",
      "id": 9566254,
      "node_id": "MDQ6VXNlcjk1NjYyNTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9566254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apolcyn",
      "html_url": "https://github.com/apolcyn",
      "followers_url": "https://api.github.com/users/apolcyn/followers",
      "following_url": "https://api.github.com/users/apolcyn/following{/other_user}",
      "gists_url": "https://api.github.com/users/apolcyn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apolcyn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apolcyn/subscriptions",
      "organizations_url": "https://api.github.com/users/apolcyn/orgs",
      "repos_url": "https://api.github.com/users/apolcyn/repos",
      "events_url": "https://api.github.com/users/apolcyn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apolcyn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-17T22:44:09Z",
    "updated_at": "2018-01-17T22:44:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shahoxo I'm not sure if you can see the test results, e.g., in https://sponge.corp.google.com/target?id=f9ebce33-9e5c-42d1-9ab9-6c097f1ef514&target=github/grpc/ruby_linux_dbg_native&searchFor=&show=FAILED&sortBy=STATUS, but there appears to be some rubocop style checker errors here.\r\n\r\nCan you please fix the style check error here? Note you can run the (most of) the ruby unit tests locally by running either `bundle exec rake` from the repo root, or by running `toosl/run_tests/run_tests.py -l ruby (--use_docker)`"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/358537820",
    "html_url": "https://github.com/grpc/grpc/pull/14020#issuecomment-358537820",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14020",
    "id": 358537820,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODUzNzgyMA==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-18T04:57:36Z",
    "updated_at": "2018-01-18T04:57:36Z",
    "author_association": "MEMBER",
    "body": "@apolcyn : if this PR is actually a good idea (and I contend that it is _not_), it needs to go through the gRFC process. This is a new (and strange, IMO) promise.\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/358542383",
    "html_url": "https://github.com/grpc/grpc/pull/14020#issuecomment-358542383",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14020",
    "id": 358542383,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODU0MjM4Mw==",
    "user": {
      "login": "apolcyn",
      "id": 9566254,
      "node_id": "MDQ6VXNlcjk1NjYyNTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9566254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apolcyn",
      "html_url": "https://github.com/apolcyn",
      "followers_url": "https://api.github.com/users/apolcyn/followers",
      "following_url": "https://api.github.com/users/apolcyn/following{/other_user}",
      "gists_url": "https://api.github.com/users/apolcyn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apolcyn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apolcyn/subscriptions",
      "organizations_url": "https://api.github.com/users/apolcyn/orgs",
      "repos_url": "https://api.github.com/users/apolcyn/repos",
      "events_url": "https://api.github.com/users/apolcyn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apolcyn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-18T05:32:02Z",
    "updated_at": "2018-01-18T05:32:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shahoxo though this PR is not too invasive, I do agree with @vjpai, and I am worried that the API extension here could be confusing for the benefit it provides.\r\n\r\nIf you'd like to move forward with this, can you please create a gRPF proposal? Here are some examples: https://github.com/grpc/proposal/pulls. A gRPF proposal could be useful because 1) the API here adds some complexity and it would be helpful to check the motivations first, and 2) this idea could potentially apply to all grpc servers and not just ruby. "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/358546631",
    "html_url": "https://github.com/grpc/grpc/pull/14020#issuecomment-358546631",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14020",
    "id": 358546631,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODU0NjYzMQ==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-18T06:01:51Z",
    "updated_at": "2018-01-18T06:03:03Z",
    "author_association": "MEMBER",
    "body": "I would go one step further than my previous comment and say that this PR should just be closed. If the writer of a service wants this effect, the service should just be written to use local variables in the handler method rather than instance variables in the service implementation. There's no point adding to the API to achieve something that can be easily done with what's already supported. I'm closing it for now."
  }
]
