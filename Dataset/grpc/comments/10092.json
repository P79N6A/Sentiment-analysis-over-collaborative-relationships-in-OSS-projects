[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/331679563",
    "html_url": "https://github.com/grpc/grpc/issues/10092#issuecomment-331679563",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10092",
    "id": 331679563,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMTY3OTU2Mw==",
    "user": {
      "login": "dgquintas",
      "id": 120217,
      "node_id": "MDQ6VXNlcjEyMDIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/120217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgquintas",
      "html_url": "https://github.com/dgquintas",
      "followers_url": "https://api.github.com/users/dgquintas/followers",
      "following_url": "https://api.github.com/users/dgquintas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgquintas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgquintas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgquintas/subscriptions",
      "organizations_url": "https://api.github.com/users/dgquintas/orgs",
      "repos_url": "https://api.github.com/users/dgquintas/repos",
      "events_url": "https://api.github.com/users/dgquintas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgquintas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-24T01:05:52Z",
    "updated_at": "2017-09-24T01:05:52Z",
    "author_association": "NONE",
    "body": "Not seen in quite a while, closing."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/342577199",
    "html_url": "https://github.com/grpc/grpc/issues/10092#issuecomment-342577199",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10092",
    "id": 342577199,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MjU3NzE5OQ==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-07T18:30:07Z",
    "updated_at": "2017-11-07T18:30:07Z",
    "author_association": "MEMBER",
    "body": "Seen again: https://sponge.corp.google.com/target?id=97778a11-1762-41a8-a73a-d99d4b2e701e&target=grpc/ubuntu/pull_request/grpc_basictests_cpp_opt&searchFor=&show=ALL&sortBy=STATUS\r\n\r\n```\r\nNote: Google Test filter = ProxyEnd2end/ProxyEnd2endTest.EchoDeadline/1\r\n[==========] Running 1 test from 1 test case.\r\n[----------] Global test environment set-up.\r\n[----------] 1 test from ProxyEnd2end/ProxyEnd2endTest\r\n[ RUN      ] ProxyEnd2end/ProxyEnd2endTest.EchoDeadline/1\r\nD1106 21:28:05.961754440   26784 end2end_test.cc:217]        TestScenario{use_proxy=true, inproc=false, credentials='ssl'}\r\nD1106 21:28:05.961827546   26784 ev_posix.cc:135]            Using polling engine: poll-cv\r\nD1106 21:28:05.961839277   26784 dns_resolver.cc:307]        Using native dns resolver\r\nD1106 21:28:06.965049564   26784 ev_posix.cc:135]            Using polling engine: poll-cv\r\nD1106 21:28:06.965103497   26784 dns_resolver.cc:307]        Using native dns resolver\r\nI1106 21:28:06.965155281   26784 server_builder.cc:269]      Synchronous server. Num CQs: 4, Min pollers: 1, Max Pollers: 2, CQ timeout (msec): 10\r\nI1106 21:28:06.984864183   26784 server_builder.cc:269]      Synchronous server. Num CQs: 4, Min pollers: 1, Max Pollers: 2, CQ timeout (msec): 10\r\ntest/cpp/end2end/end2end_test.cc:1348: Failure\r\nExpected: (response.param().request_deadline() - sent_deadline.tv_sec) <= (1), actual: 2 vs 1\r\n[  FAILED  ] ProxyEnd2end/ProxyEnd2endTest.EchoDeadline/1, where GetParam() = TestScenario{use_proxy=true, inproc=false, credentials='ssl'} (2072 ms)\r\n[----------] 1 test from ProxyEnd2end/ProxyEnd2endTest (2072 ms total)\r\n\r\n[----------] Global test environment tear-down\r\n[==========] 1 test from 1 test case ran. (2072 ms total)\r\n[  PASSED  ] 0 tests.\r\n[  FAILED  ] 1 test, listed below:\r\n[  FAILED  ] ProxyEnd2end/ProxyEnd2endTest.EchoDeadline/1, where GetParam() = TestScenario{use_proxy=true, inproc=false, credentials='ssl'}\r\n\r\n 1 FAILED TEST\r\nD1106 21:28:08.033801824   26784 ev_posix.cc:135]            Using polling engine: poll-cv\r\nD1106 21:28:08.033827137   26784 dns_resolver.cc:307]        Using native dns resolver\r\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/351243515",
    "html_url": "https://github.com/grpc/grpc/issues/10092#issuecomment-351243515",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10092",
    "id": 351243515,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTI0MzUxNQ==",
    "user": {
      "login": "yang-g",
      "id": 10122250,
      "node_id": "MDQ6VXNlcjEwMTIyMjUw",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10122250?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yang-g",
      "html_url": "https://github.com/yang-g",
      "followers_url": "https://api.github.com/users/yang-g/followers",
      "following_url": "https://api.github.com/users/yang-g/following{/other_user}",
      "gists_url": "https://api.github.com/users/yang-g/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yang-g/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yang-g/subscriptions",
      "organizations_url": "https://api.github.com/users/yang-g/orgs",
      "repos_url": "https://api.github.com/users/yang-g/repos",
      "events_url": "https://api.github.com/users/yang-g/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yang-g/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-13T00:42:27Z",
    "updated_at": "2017-12-13T00:42:27Z",
    "author_association": "MEMBER",
    "body": "This has not appeared for 2 weeks. Closing."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/352909929",
    "html_url": "https://github.com/grpc/grpc/issues/10092#issuecomment-352909929",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10092",
    "id": 352909929,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjkwOTkyOQ==",
    "user": {
      "login": "dgquintas",
      "id": 120217,
      "node_id": "MDQ6VXNlcjEyMDIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/120217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgquintas",
      "html_url": "https://github.com/dgquintas",
      "followers_url": "https://api.github.com/users/dgquintas/followers",
      "following_url": "https://api.github.com/users/dgquintas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgquintas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgquintas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgquintas/subscriptions",
      "organizations_url": "https://api.github.com/users/dgquintas/orgs",
      "repos_url": "https://api.github.com/users/dgquintas/repos",
      "events_url": "https://api.github.com/users/dgquintas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgquintas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-19T22:46:08Z",
    "updated_at": "2017-12-19T22:46:08Z",
    "author_association": "NONE",
    "body": "This is still happening (current HEAD at 1c4d410c109157bfe924144bc777e57169d5c1e3). Reopening. "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/361745508",
    "html_url": "https://github.com/grpc/grpc/issues/10092#issuecomment-361745508",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10092",
    "id": 361745508,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTc0NTUwOA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-30T21:47:53Z",
    "updated_at": "2018-01-30T21:47:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "Still happening, on multiple pollers (epoll1, epollex, epollsig, poll-cv)\r\n\r\nRecent failures:\r\n\r\nASAN:\r\nhttps://sponge.corp.google.com/invocation?id=2ed75721-7167-4371-8eb3-5d755a042c35\r\nhttps://sponge.corp.google.com/invocation?id=e61a395a-961d-43d7-9835-8ec2de26bf6d\r\nhttps://sponge.corp.google.com/invocation?id=2757947d-4f9a-4132-8ec7-a1a02371ae1c\r\n\r\nopt:\r\nhttps://sponge.corp.google.com/invocation?id=24868681-2dbf-44ee-815f-9fcd9ac5f365\r\nhttps://sponge.corp.google.com/invocation?id=5b376bc2-1220-4fe1-b9b9-410aa1620005\r\nhttps://sponge.corp.google.com/invocation?id=82c26960-6b2d-454a-a8dc-277515143b42\r\nhttps://sponge.corp.google.com/invocation?id=f98620e1-cff7-440d-834b-d16bc2ab2e25"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/361747241",
    "html_url": "https://github.com/grpc/grpc/issues/10092#issuecomment-361747241",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10092",
    "id": 361747241,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTc0NzI0MQ==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-30T21:54:25Z",
    "updated_at": "2018-01-30T21:54:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "The failure details is interesting:\r\n`test/cpp/end2end/end2end_test.cc:1337: Failure\r\nExpected: (response.param().request_deadline() - sent_deadline.tv_sec) <= (1), actual: 2 vs 1`\r\n\r\nAccording to the comment: \"1 second error is allowed\". 2 seconds seems close enough.\r\nhttps://github.com/grpc/grpc/blob/9233201cc34e478e2a4d290c53bcf782a3864676/test/cpp/end2end/end2end_test.cc#L1337\r\n\r\n\r\n```\r\n[ RUN      ] ProxyEnd2end/ProxyEnd2endTest.EchoDeadline/1\r\nD0124 20:37:26.993214151   21342 end2end_test.cc:217]        TestScenario{use_proxy=true, inproc=false, credentials='ssl'}\r\nI0124 20:37:26.993294064   21342 ev_epoll1_linux.cc:114]     grpc epoll fd: 3\r\nD0124 20:37:26.993305649   21342 ev_posix.cc:128]            Using polling engine: epoll1\r\nD0124 20:37:26.993311926   21342 dns_resolver.cc:294]        Using native dns resolver\r\nI0124 20:37:26.996632659   21342 ev_epoll1_linux.cc:114]     grpc epoll fd: 3\r\nD0124 20:37:26.996654777   21342 ev_posix.cc:128]            Using polling engine: epoll1\r\nD0124 20:37:26.996667094   21342 dns_resolver.cc:294]        Using native dns resolver\r\nI0124 20:37:26.996708128   21342 server_builder.cc:269]      Synchronous server. Num CQs: 4, Min pollers: 1, Max Pollers: 2, CQ timeout (msec): 10\r\nI0124 20:37:26.998464969   21342 server_builder.cc:269]      Synchronous server. Num CQs: 4, Min pollers: 1, Max Pollers: 2, CQ timeout (msec): 10\r\nI0124 20:37:26.999175671   21599 subchannel.cc:603]          New connected subchannel at 0x7f4a70001110 for subchannel 0x7f4a88003320\r\nI0124 20:37:27.002135508   21604 subchannel.cc:603]          New connected subchannel at 0x7f4a640110f0 for subchannel 0x7f4a88006520\r\ntest/cpp/end2end/end2end_test.cc:1338: Failure\r\nExpected: (response.param().request_deadline() - sent_deadline.tv_sec) <= (1), actual: 2 vs 1\r\n[  FAILED  ] ProxyEnd2end/ProxyEnd2endTest.EchoDeadline/1, where GetParam() = TestScenario{use_proxy=true, inproc=false, credentials='ssl'} (13 ms)\r\n```\r\n\r\n```\r\n[==========] Running 1 test from 1 test case.\r\n[----------] Global test environment set-up.\r\n[----------] 1 test from ProxyEnd2end/ProxyEnd2endTest\r\n[ RUN      ] ProxyEnd2end/ProxyEnd2endTest.EchoDeadline/3\r\nD0130 17:16:15.982121402   14852 end2end_test.cc:217]        TestScenario{use_proxy=true, inproc=false, credentials='INSECURE_CREDENTIALS'}\r\nD0130 17:16:15.982566701   14852 ev_posix.cc:128]            Using polling engine: epollex\r\nD0130 17:16:15.982617841   14852 dns_resolver.cc:294]        Using native dns resolver\r\nD0130 17:16:15.988347264   14852 ev_posix.cc:128]            Using polling engine: epollex\r\nD0130 17:16:15.988403522   14852 dns_resolver.cc:294]        Using native dns resolver\r\nI0130 17:16:15.988668808   14852 server_builder.cc:269]      Synchronous server. Num CQs: 4, Min pollers: 1, Max Pollers: 2, CQ timeout (msec): 10\r\nI0130 17:16:15.996157487   14852 server_builder.cc:269]      Synchronous server. Num CQs: 4, Min pollers: 1, Max Pollers: 2, CQ timeout (msec): 10\r\nI0130 17:16:15.999288596   16625 subchannel.cc:603]          New connected subchannel at 0x6030000255d0 for subchannel 0x61600008d380\r\nI0130 17:16:16.001380042   16625 subchannel.cc:603]          New connected subchannel at 0x603000024040 for subchannel 0x61600008c780\r\ntest/cpp/end2end/end2end_test.cc:1337: Failure\r\nExpected: (response.param().request_deadline() - sent_deadline.tv_sec) <= (1), actual: 2 vs 1\r\n[  FAILED  ] ProxyEnd2end/ProxyEnd2endTest.EchoDeadline/3, where GetParam() = TestScenario{use_proxy=true, inproc=false, credentials='INSECURE_CREDENTIALS'} (35 ms)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/361753178",
    "html_url": "https://github.com/grpc/grpc/issues/10092#issuecomment-361753178",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10092",
    "id": 361753178,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTc1MzE3OA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-30T22:16:08Z",
    "updated_at": "2018-01-30T22:16:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, I've confirmed my suspicion. The 2 seconds difference can happen  when we are close to the boundary of the next second  (tv_nsec is close the 1 billion).\r\n\r\nSo this seems to be just a badly designed test (the request_deadline in the response should have bigger precision than just seconds).\r\n\r\nFrom my local runs with added logging:\r\n```\r\nI0130 23:10:39.001073091   69350 end2end_test.cc:1337]       request_deadline 1517350340\r\nI0130 23:10:39.001085663   69350 end2end_test.cc:1338]       sent_deadline.tv_sec 1517350338\r\nI0130 23:10:39.001092410   69350 end2end_test.cc:1339]       sent_deadline.tv_nsec 997481058\r\ntest/cpp/end2end/end2end_test.cc:1340: Failure\r\nExpected: (response.param().request_deadline() - sent_deadline.tv_sec) <= (1), actual: 2 vs 1\r\n[  FAILED  ] ProxyEnd2end/ProxyEnd2endTest.EchoDeadline/1, where GetParam() = TestScenario{use_proxy=true, inproc=false, credentials='ssl'} (10 ms)\r\n```\r\n\r\n```\r\nI0130 23:10:32.000589931    8970 end2end_test.cc:1337]       request_deadline 1517350333\r\nI0130 23:10:32.000603429    8970 end2end_test.cc:1338]       sent_deadline.tv_sec 1517350331\r\nI0130 23:10:32.000609854    8970 end2end_test.cc:1339]       sent_deadline.tv_nsec 996396253\r\ntest/cpp/end2end/end2end_test.cc:1340: Failure\r\nExpected: (response.param().request_deadline() - sent_deadline.tv_sec) <= (1), actual: 2 vs 1\r\n[  FAILED  ] ProxyEnd2end/ProxyEnd2endTest.EchoDeadline/1, where GetParam() = TestScenario{use_proxy=true, inproc=false, credentials='ssl'} (11 ms)\r\n```"
  }
]
