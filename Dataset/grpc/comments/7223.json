[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/230295736",
    "html_url": "https://github.com/grpc/grpc/issues/7223#issuecomment-230295736",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7223",
    "id": 230295736,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMDI5NTczNg==",
    "user": {
      "login": "Venomed",
      "id": 808099,
      "node_id": "MDQ6VXNlcjgwODA5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/808099?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Venomed",
      "html_url": "https://github.com/Venomed",
      "followers_url": "https://api.github.com/users/Venomed/followers",
      "following_url": "https://api.github.com/users/Venomed/following{/other_user}",
      "gists_url": "https://api.github.com/users/Venomed/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Venomed/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Venomed/subscriptions",
      "organizations_url": "https://api.github.com/users/Venomed/orgs",
      "repos_url": "https://api.github.com/users/Venomed/repos",
      "events_url": "https://api.github.com/users/Venomed/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Venomed/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-04T13:52:49Z",
    "updated_at": "2016-07-04T13:52:49Z",
    "author_association": "NONE",
    "body": "+1 to both points. I was left scratching my head as well and it didn't occur to me to dig into logging just to find out the why of Send failed. I just assumed I was doing something wrong (just starting out with grpc here).\n\n`RpcException` indeed would be a good starting substitution here instead of IOE imho. If MSDN is any nudge to how MS tends to handle these case,  [DirectoryException](https://msdn.microsoft.com/en-us/library/system.directoryservices.protocols.directoryexception) / [CommunicationException](https://msdn.microsoft.com/en-us/library/system.servicemodel.communicationexception.aspx) are good examples of this sort of situation handling. They're all encompassing within their realm and throw more specialized exceptions where they make sense (for example [LdapException](https://msdn.microsoft.com/en-us/library/system.directoryservices.protocols.ldapexception) or [SecurityAccessDeniedException](https://msdn.microsoft.com/en-us/library/system.servicemodel.security.securityaccessdeniedexception.aspx))\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/245333912",
    "html_url": "https://github.com/grpc/grpc/issues/7223#issuecomment-245333912",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7223",
    "id": 245333912,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTMzMzkxMg==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-07T16:14:02Z",
    "updated_at": "2016-09-07T16:14:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "@kkm000, thanks for filing this issue, I fully agree with your thoughts. Seems like this is something we need to fix. Also, I apologize for not reacting sooner, I was out of office for extended period of time.\n\nHere are my thoughts on what needs to be done and how. I will start with the _client side_ calls\n- For unary calls, everything works as expected because if such call fails, one receives an RpcException with appropriate status and InvalidOperationException is only thrown if programmer breaks the contract and does something not admissible.\n- For streaming calls, I think for a failed write we should deliver an RpcException with a StatusCode corresponding to the status code of the entire call. As a principle, a single gRPC call should only have a single status code associated with it - so in C# API we need to honor that. Internally in C core, finishing of a write operation and finishing of the entire call with a status code are two different events. So, what needs to happen is when a write operation fails, we also wait for the entire call to finish and then throw RpcException with the correct status because we already obtained it. That should work fine because\n  - C core guarantees that if a write operations fails, the entire call will fail \"immediately\" (soon enough) afterwards. So we wouldn't starve waiting on the status code to be delivered.\n  - there should be no performance impact, because we only wait for two events instead of one in case the RPC call fails and that's not really something we need to optimize for.\n\nDoes that make sense? If so, things seem to be fairly clear on the client side.\n\nOn the server side, things works similarly with the biggest difference being that we cannot throw and RpcException (that comes with a status code) simply because server side calls don't have a status code associated with them - if they fail, they finish with a binary success/non-success flag reported back to the server code. So on the server side, we need to figure out which exception type is the most fitting here - my personal favorite seems to be IOException (but do be honest I am not 100% convinced I like that choice either).\n\nWhat is your opinion on what the server side behavior should be (and what exception type to use)?\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/245334080",
    "html_url": "https://github.com/grpc/grpc/issues/7223#issuecomment-245334080",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7223",
    "id": 245334080,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTMzNDA4MA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-07T16:14:34Z",
    "updated_at": "2016-09-07T16:14:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "CC @apolcyn  @jskeet \n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/245359492",
    "html_url": "https://github.com/grpc/grpc/issues/7223#issuecomment-245359492",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7223",
    "id": 245359492,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTM1OTQ5Mg==",
    "user": {
      "login": "apolcyn",
      "id": 9566254,
      "node_id": "MDQ6VXNlcjk1NjYyNTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9566254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apolcyn",
      "html_url": "https://github.com/apolcyn",
      "followers_url": "https://api.github.com/users/apolcyn/followers",
      "following_url": "https://api.github.com/users/apolcyn/following{/other_user}",
      "gists_url": "https://api.github.com/users/apolcyn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apolcyn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apolcyn/subscriptions",
      "organizations_url": "https://api.github.com/users/apolcyn/orgs",
      "repos_url": "https://api.github.com/users/apolcyn/repos",
      "events_url": "https://api.github.com/users/apolcyn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apolcyn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-07T17:40:09Z",
    "updated_at": "2016-09-07T17:40:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "Would it be worth it to try and do this in a non-breaking way, or at least less breaking? Possibly sub-classing the current InvalidOperationException? (got rid of one idea like that in https://github.com/grpc/grpc/pull/7861).\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/245360402",
    "html_url": "https://github.com/grpc/grpc/issues/7223#issuecomment-245360402",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7223",
    "id": 245360402,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTM2MDQwMg==",
    "user": {
      "login": "jskeet",
      "id": 17011,
      "node_id": "MDQ6VXNlcjE3MDEx",
      "avatar_url": "https://avatars1.githubusercontent.com/u/17011?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jskeet",
      "html_url": "https://github.com/jskeet",
      "followers_url": "https://api.github.com/users/jskeet/followers",
      "following_url": "https://api.github.com/users/jskeet/following{/other_user}",
      "gists_url": "https://api.github.com/users/jskeet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jskeet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jskeet/subscriptions",
      "organizations_url": "https://api.github.com/users/jskeet/orgs",
      "repos_url": "https://api.github.com/users/jskeet/repos",
      "events_url": "https://api.github.com/users/jskeet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jskeet/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-07T17:43:24Z",
    "updated_at": "2016-09-07T17:43:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "So what server-side failure type are we talking about? Something like \"client killed connection\"?\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/245362674",
    "html_url": "https://github.com/grpc/grpc/issues/7223#issuecomment-245362674",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7223",
    "id": 245362674,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTM2MjY3NA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-07T17:50:46Z",
    "updated_at": "2016-09-07T17:50:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jskeet  yes, if something went wrong with the call and we weren't able to finish the call normally (by sending client a status). That could be network error, client died, etc.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/245364165",
    "html_url": "https://github.com/grpc/grpc/issues/7223#issuecomment-245364165",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7223",
    "id": 245364165,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTM2NDE2NQ==",
    "user": {
      "login": "jskeet",
      "id": 17011,
      "node_id": "MDQ6VXNlcjE3MDEx",
      "avatar_url": "https://avatars1.githubusercontent.com/u/17011?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jskeet",
      "html_url": "https://github.com/jskeet",
      "followers_url": "https://api.github.com/users/jskeet/followers",
      "following_url": "https://api.github.com/users/jskeet/following{/other_user}",
      "gists_url": "https://api.github.com/users/jskeet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jskeet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jskeet/subscriptions",
      "organizations_url": "https://api.github.com/users/jskeet/orgs",
      "repos_url": "https://api.github.com/users/jskeet/repos",
      "events_url": "https://api.github.com/users/jskeet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jskeet/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-07T17:55:13Z",
    "updated_at": "2016-09-07T17:55:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sounds like `IOException` makes sense in that case then.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/245365278",
    "html_url": "https://github.com/grpc/grpc/issues/7223#issuecomment-245365278",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7223",
    "id": 245365278,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTM2NTI3OA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-07T17:58:50Z",
    "updated_at": "2016-09-07T17:58:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "Another option would be to throw parameterless \"RpcException\" for more consistency with client side (but it's just an idea).\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/245452173",
    "html_url": "https://github.com/grpc/grpc/issues/7223#issuecomment-245452173",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7223",
    "id": 245452173,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTQ1MjE3Mw==",
    "user": {
      "login": "hinaria",
      "id": 975570,
      "node_id": "MDQ6VXNlcjk3NTU3MA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/975570?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hinaria",
      "html_url": "https://github.com/hinaria",
      "followers_url": "https://api.github.com/users/hinaria/followers",
      "following_url": "https://api.github.com/users/hinaria/following{/other_user}",
      "gists_url": "https://api.github.com/users/hinaria/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hinaria/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hinaria/subscriptions",
      "organizations_url": "https://api.github.com/users/hinaria/orgs",
      "repos_url": "https://api.github.com/users/hinaria/repos",
      "events_url": "https://api.github.com/users/hinaria/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hinaria/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-07T23:37:50Z",
    "updated_at": "2016-09-07T23:38:04Z",
    "author_association": "NONE",
    "body": "I like the idea of throwing an `RpcException`, a single exception type to signify \"this rpc has failed\".\n\n`IOException` feels a little out of place given that the grpc does not model IO, instead we model the invocation of methods that happen to require IO. It would be the only place in grpc that would throw an `IOException` requiring that exception handlers must now catch two types to handle the \"this rpc has failed [and potentially retry]\". `RpcException` seems semantically okay here.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/247335735",
    "html_url": "https://github.com/grpc/grpc/issues/7223#issuecomment-247335735",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7223",
    "id": 247335735,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzMzNTczNQ==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-15T13:58:35Z",
    "updated_at": "2016-09-15T13:58:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "Actually `RpcException` on server side turned out to be a bit tricky because it already has field `Status` that only makes sense on the client side. I had the options to introduce a new \"ServerRpcException\"  or stick  with \"IOException\".  It seems that `IOException` is the best choice, because it required the least changes and expresses the concept quite well. I didn't want to add just another exception type for no good reason.\n\nSee #8084 for the PR with the fix.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/247378111",
    "html_url": "https://github.com/grpc/grpc/issues/7223#issuecomment-247378111",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7223",
    "id": 247378111,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzM3ODExMQ==",
    "user": {
      "login": "hinaria",
      "id": 975570,
      "node_id": "MDQ6VXNlcjk3NTU3MA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/975570?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hinaria",
      "html_url": "https://github.com/hinaria",
      "followers_url": "https://api.github.com/users/hinaria/followers",
      "following_url": "https://api.github.com/users/hinaria/following{/other_user}",
      "gists_url": "https://api.github.com/users/hinaria/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hinaria/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hinaria/subscriptions",
      "organizations_url": "https://api.github.com/users/hinaria/orgs",
      "repos_url": "https://api.github.com/users/hinaria/repos",
      "events_url": "https://api.github.com/users/hinaria/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hinaria/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-15T16:24:33Z",
    "updated_at": "2016-09-15T16:25:17Z",
    "author_association": "NONE",
    "body": "Sounds great. So looking briefly at #8084, we now throw an `RpcException` on the client, and an `IOException` on the server? That's perfect.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/247380863",
    "html_url": "https://github.com/grpc/grpc/issues/7223#issuecomment-247380863",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7223",
    "id": 247380863,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzM4MDg2Mw==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-15T16:34:15Z",
    "updated_at": "2016-09-15T16:34:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "@imiuka Yes, exactly (once we merge and release of course).\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/247927559",
    "html_url": "https://github.com/grpc/grpc/issues/7223#issuecomment-247927559",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7223",
    "id": 247927559,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzkyNzU1OQ==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-19T07:34:57Z",
    "updated_at": "2016-09-19T07:34:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "#8084 has been been merged.\n"
  }
]
