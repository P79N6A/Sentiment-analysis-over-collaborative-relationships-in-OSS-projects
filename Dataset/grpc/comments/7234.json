[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/245354696",
    "html_url": "https://github.com/grpc/grpc/issues/7234#issuecomment-245354696",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7234",
    "id": 245354696,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTM1NDY5Ng==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-07T17:23:15Z",
    "updated_at": "2016-09-07T17:23:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Is there some practical use case where exposing this overload would matter? The thing with RpcException is that it is only thrown by gRPC as a result of a remote call, in which case the Status and message are exactly what you need as there is no exception information transferred from the remote side besides  status, message and optionally the trailing metadata.\n\nI can only imagine that you could use the InnerException if something went wrong in gRPC implementation itself - but I am not sure if the user should care. Also, the RpcException can only be constructed if the status code is obtained successfully (and C core guarantees that obtaining it will always succeed), so I am not quite sure where the inner exception would come from.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/255278247",
    "html_url": "https://github.com/grpc/grpc/issues/7234#issuecomment-255278247",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7234",
    "id": 255278247,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTI3ODI0Nw==",
    "user": {
      "login": "kkm000",
      "id": 8228229,
      "node_id": "MDQ6VXNlcjgyMjgyMjk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/8228229?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kkm000",
      "html_url": "https://github.com/kkm000",
      "followers_url": "https://api.github.com/users/kkm000/followers",
      "following_url": "https://api.github.com/users/kkm000/following{/other_user}",
      "gists_url": "https://api.github.com/users/kkm000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kkm000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kkm000/subscriptions",
      "organizations_url": "https://api.github.com/users/kkm000/orgs",
      "repos_url": "https://api.github.com/users/kkm000/repos",
      "events_url": "https://api.github.com/users/kkm000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kkm000/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-21T02:25:30Z",
    "updated_at": "2016-10-21T02:28:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "You are right, this is rather a matter of convenience, when it is seems natural to reuse RPCException to report the error _as if_ it originated in the remoting layer. This is kind of borderline-legit, to my reckoning:\n\n``` c#\n  public static async Task<T> ReadNext<T>(this IAsyncStreamReader<T> stream) {\n    if (!await stream.MoveNext())\n      throw new RpcException(new Status(StatusCode.Internal,\n        \"Server did not respond with required protocol message\"));\n    return stream.Current;\n  }\n```\n\n(I had a case when I needed a stack trace from the inner exception too, but I think I reworked the code, cannot readily find it).\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/255342272",
    "html_url": "https://github.com/grpc/grpc/issues/7234#issuecomment-255342272",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7234",
    "id": 255342272,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTM0MjI3Mg==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-21T09:58:36Z",
    "updated_at": "2016-10-21T09:58:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "I see. IMHO, your use case is fairly controversial and you seem to have a reasonable workaround, so I'd need to see at least a few more other users asking for this in order to consider actually adding the constructor. Leaving this issue open for others to chime in.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/260824552",
    "html_url": "https://github.com/grpc/grpc/issues/7234#issuecomment-260824552",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7234",
    "id": 260824552,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDgyNDU1Mg==",
    "user": {
      "login": "hsaliak",
      "id": 150108,
      "node_id": "MDQ6VXNlcjE1MDEwOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/150108?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hsaliak",
      "html_url": "https://github.com/hsaliak",
      "followers_url": "https://api.github.com/users/hsaliak/followers",
      "following_url": "https://api.github.com/users/hsaliak/following{/other_user}",
      "gists_url": "https://api.github.com/users/hsaliak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hsaliak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hsaliak/subscriptions",
      "organizations_url": "https://api.github.com/users/hsaliak/orgs",
      "repos_url": "https://api.github.com/users/hsaliak/repos",
      "events_url": "https://api.github.com/users/hsaliak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hsaliak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-16T01:20:42Z",
    "updated_at": "2016-11-16T01:20:42Z",
    "author_association": "MEMBER",
    "body": "@jtattermusch do we want to add the constructor for 1.1 or close the discussion?\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/261246076",
    "html_url": "https://github.com/grpc/grpc/issues/7234#issuecomment-261246076",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7234",
    "id": 261246076,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MTI0NjA3Ng==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-17T13:28:10Z",
    "updated_at": "2016-11-17T13:28:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "No action planned here. Closing this issue as part of issue bankruptcy.\n"
  }
]
