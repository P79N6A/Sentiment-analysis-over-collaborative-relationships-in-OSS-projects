[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/395601976",
    "html_url": "https://github.com/grpc/grpc/pull/15678#issuecomment-395601976",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15678",
    "id": 395601976,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTYwMTk3Ng==",
    "user": {
      "login": "ncteisen",
      "id": 6148140,
      "node_id": "MDQ6VXNlcjYxNDgxNDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6148140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ncteisen",
      "html_url": "https://github.com/ncteisen",
      "followers_url": "https://api.github.com/users/ncteisen/followers",
      "following_url": "https://api.github.com/users/ncteisen/following{/other_user}",
      "gists_url": "https://api.github.com/users/ncteisen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ncteisen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ncteisen/subscriptions",
      "organizations_url": "https://api.github.com/users/ncteisen/orgs",
      "repos_url": "https://api.github.com/users/ncteisen/repos",
      "events_url": "https://api.github.com/users/ncteisen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ncteisen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-07T23:55:46Z",
    "updated_at": "2018-06-07T23:55:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "About halfway done on this. Just want to get thoughts before I continue. Since the channel arg re write is pretty far out in the future, I figure we should tackle this now\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/395602437",
    "html_url": "https://github.com/grpc/grpc/pull/15678#issuecomment-395602437",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15678",
    "id": 395602437,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTYwMjQzNw==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-07T23:58:37Z",
    "updated_at": "2018-06-07T23:58:37Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n  +3.5%    +144 src/core/lib/channel/channel_args.cc                                                    +144  +3.5%\n      [NEW]    +131 grpc_channel_arg_get_pointer                                                            +131  [NEW]\n      +7.0%     +13 [Unmapped]                                                                               +13  +7.0%\n  +1.0%    +112 src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc                  +112  +1.0%\n      +3.4%    +110 grpc_core::(anonymous namespace)::PickFirst::UpdateLocked                               +110  +3.4%\n      +0.8%      +2 [Unmapped]                                                                                +2  +0.8%\n\n -------------- SHRINKING                                                                            --------------\n  -0.1%    -392 [None]                                                                               -6.94Ki  -0.1%\n      -0.1%    -328 [Unmapped]                                                                           -6.88Ki  -0.1%\n      [DEL]     -32 vtable for grpc_core::RefCounted<grpc_core::FakeResolverResponseGenerator>               -32  [DEL]\n      [DEL]     -32 vtable for grpc_core::FakeResolverResponseGenerator                                      -32  [DEL]\n  -6.0%    -960 src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.cc                          -960  -6.0%\n     -94.3%    -966 grpc_core::(anonymous namespace)::GrpcLbFactory::CreateLoadBalancingPolicy(grpc_core    -966 -94.3%\n      -0.5%      -6 grpc_core::(anonymous namespace)::GrpcLb::ProcessChannelArgsLocked                        -6  -0.5%\n  -3.5%     -56 src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb_channel_secure.cc            -56  -3.5%\n      -6.3%     -56 grpc_lb_policy_grpclb_modify_lb_channel_args                                             -56  -6.3%\n  -1.7%     -32 src/core/ext/filters/client_channel/resolver/fake/fake_resolver.cc                       -32  -1.7%\n     -46.2%     -24 grpc_core::FakeResolverResponseGenerator::GetFromArgs                                    -24 -46.2%\n      -5.2%      -8 [Unmapped]                                                                                -8  -5.2%\n  -1.8%     -24 src/core/ext/filters/client_channel/lb_policy_factory.cc                                 -24  -1.8%\n     -46.2%     -24 grpc_lb_addresses_find_channel_arg                                                       -24 -46.2%\n  -0.1%     -16 src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc                 -16  -0.1%\n      -0.6%     -16 grpc_core::(anonymous namespace)::RoundRobin::UpdateLocked                               -16  -0.6%\n\n  -0.1% -1.20Ki TOTAL                                                                                -7.75Ki  -0.1%\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE              FILE SIZE\n ++++++++++++++ GROWIN ++++++++++++++\n  [ = ]       0 [None]     +40  +0.0%\n\n  [ = ]       0 TOTAL      +40  +0.0%\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/395603642",
    "html_url": "https://github.com/grpc/grpc/pull/15678#issuecomment-395603642",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15678",
    "id": 395603642,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTYwMzY0Mg==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-08T00:05:28Z",
    "updated_at": "2018-06-08T00:05:28Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/395610989",
    "html_url": "https://github.com/grpc/grpc/pull/15678#issuecomment-395610989",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15678",
    "id": 395610989,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTYxMDk4OQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-08T00:51:10Z",
    "updated_at": "2018-06-08T00:51:10Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/395786113",
    "html_url": "https://github.com/grpc/grpc/pull/15678#issuecomment-395786113",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15678",
    "id": 395786113,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTc4NjExMw==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-08T14:53:25Z",
    "updated_at": "2018-06-08T14:53:25Z",
    "author_association": "MEMBER",
    "body": "Thanks, this is useful improvement.\n\n---\n\nReviewed 8 of 8 files at r1.\nReview status: all files reviewed at latest revision, all discussions resolved, some commit checks failed.\n\n---\n\n*[src/core/lib/channel/channel_args.h, line 122 at r1](https://reviewable.io/reviews/grpc/grpc/15678#-LEUrrgFDyCkLc0iN_59:-LEUrrgGEjLoWZwKZjCM:b-ppbhso) ([raw file](https://github.com/grpc/grpc/blob/f31578a91a590060e9380ff8ac5258a7cc568b63/src/core/lib/channel/channel_args.h#L122)):*\n> ```objc\n>     Otherwise, emits a warning log, and returns nullptr.\n>     If arg is nullptr, returns nullptr, and does not emit a warning. */\n> void* grpc_channel_arg_get_pointer(const grpc_arg* arg);\n> ```\n\nEvery caller who uses this will need to static_cast the result to the right type.  We could make it a bit more convenient by templatizing this and putting the static_cast here.  So instead of a caller doing this:\n\n```\nstatic_cast<mytype*>(grpc_channel_arg_get_pointer(arg))\n```\n\nthey can do this:\n\n```\ngrpc_channel_arg_get_pointer<mytype*>(arg)\n```\n\n---\n\n*[src/core/lib/channel/channel_args.cc, line 372 at r1](https://reviewable.io/reviews/grpc/grpc/15678#-LEUrUlIASeoP62vpmli:-LEUrUlJ1n5DobhL1g4K:bz07qqq) ([raw file](https://github.com/grpc/grpc/blob/f31578a91a590060e9380ff8ac5258a7cc568b63/src/core/lib/channel/channel_args.cc#L372)):*\n> ```cpp\n>     return nullptr;\n>   }\n>   GPR_ASSERT(arg->value.pointer.p != nullptr);\n> ```\n\nI think this can be removed -- if we've already got the semantic that we return nullptr on error, we can do the same if the actual value is nullptr.\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io/reviews/grpc/grpc/15678#-:-LEUsme14RZMOmfPn7fo:bunt4ng)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/396343416",
    "html_url": "https://github.com/grpc/grpc/pull/15678#issuecomment-396343416",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15678",
    "id": 396343416,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjM0MzQxNg==",
    "user": {
      "login": "ncteisen",
      "id": 6148140,
      "node_id": "MDQ6VXNlcjYxNDgxNDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6148140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ncteisen",
      "html_url": "https://github.com/ncteisen",
      "followers_url": "https://api.github.com/users/ncteisen/followers",
      "following_url": "https://api.github.com/users/ncteisen/following{/other_user}",
      "gists_url": "https://api.github.com/users/ncteisen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ncteisen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ncteisen/subscriptions",
      "organizations_url": "https://api.github.com/users/ncteisen/orgs",
      "repos_url": "https://api.github.com/users/ncteisen/repos",
      "events_url": "https://api.github.com/users/ncteisen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ncteisen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-11T18:38:21Z",
    "updated_at": "2018-06-11T18:38:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "I added a linter. Now we don't ever use GRPC_ARG* directly. All code interacts through the helpers that will warn upon type mismatch.\n\nWe might consider turning the warning into hard errors (if possible). Being stricter is always a good idea. What do you think?\n\n---\n\nReview status: 0 of 24 files reviewed, 2 unresolved discussions (waiting on @markdroth, @ncteisen, @dgquintas, and @AspirinSJL)\n\n---\n\n*[src/core/lib/channel/channel_args.h, line 122 at r1](https://reviewable.io/reviews/grpc/grpc/15678#-LEUrrgFDyCkLc0iN_59:-LEk7lfZ7SOe1P7x_wXg:b-g5p35i) ([raw file](https://github.com/grpc/grpc/blob/f31578a91a590060e9380ff8ac5258a7cc568b63/src/core/lib/channel/channel_args.h#L122)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nEvery caller who uses this will need to static_cast the result to the right type.  We could make it a bit more convenient by templatizing this and putting the static_cast here.  So instead of a caller doing this:\n\n```\nstatic_cast<mytype*>(grpc_channel_arg_get_pointer(arg))\n```\n\nthey can do this:\n\n```\ngrpc_channel_arg_get_pointer<mytype*>(arg)\n```\n</blockquote></details>\n\nGreat call. Done\n\n---\n\n*[src/core/lib/channel/channel_args.cc, line 372 at r1](https://reviewable.io/reviews/grpc/grpc/15678#-LEUrUlIASeoP62vpmli:-LEk7p8p1Ikx-EgE7kP8:bb6un1j) ([raw file](https://github.com/grpc/grpc/blob/f31578a91a590060e9380ff8ac5258a7cc568b63/src/core/lib/channel/channel_args.cc#L372)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nI think this can be removed -- if we've already got the semantic that we return nullptr on error, we can do the same if the actual value is nullptr.\n</blockquote></details>\n\nDone\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io/reviews/grpc/grpc/15678#-:-LEk7rSZ93i5V-o-tOKn:b-dlhkgz)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/396344000",
    "html_url": "https://github.com/grpc/grpc/pull/15678#issuecomment-396344000",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15678",
    "id": 396344000,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjM0NDAwMA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-11T18:40:18Z",
    "updated_at": "2018-06-11T18:40:18Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n  +1.5%    +160 src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc                  +160  +1.5%\n      +4.9%    +158 grpc_core::(anonymous namespace)::PickFirst::UpdateLocked                               +158  +4.9%\n      +0.8%      +2 [Unmapped]                                                                                +2  +0.8%\n  +3.8%     +96 src/core/lib/security/credentials/ssl/ssl_credentials.cc                                 +96  +3.8%\n       +30%     +96 ssl_create_security_connector                                                            +96   +30%\n  +3.3%     +64 src/core/ext/filters/client_channel/resolver/fake/fake_resolver.cc                       +64  +3.3%\n       +77%     +40 grpc_core::FakeResolverResponseGenerator::GetFromArgs                                    +40   +77%\n      +111%     +40 grpc_core::FakeResolverResponseGenerator::MakeChannelArg                                 +40  +111%\n  +3.0%     +40 src/core/ext/filters/client_channel/lb_policy_factory.cc                                 +40  +3.0%\n       +77%     +40 grpc_lb_addresses_find_channel_arg                                                       +40   +77%\n  +0.3%     +32 src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc                 +32  +0.3%\n      +1.3%     +35 grpc_core::(anonymous namespace)::RoundRobin::UpdateLocked                               +35  +1.3%\n  +0.1%     +16 src/core/ext/transport/chttp2/transport/chttp2_transport.cc                              +16  +0.1%\n      +0.4%     +12 grpc_create_chttp2_transport                                                             +12  +0.4%\n      +0.6%      +4 [Unmapped]                                                                                +4  +0.6%\n\n -------------- SHRINKING                                                                            --------------\n  -0.3% -1.76Ki [None]                                                                               -4.14Ki  -0.0%\n      -0.3% -1.73Ki [Unmapped]                                                                           -4.08Ki  -0.0%\n      [DEL]     -32 vtable for grpc_core::RefCounted<grpc_core::FakeResolverResponseGenerator>               -32  [DEL]\n      [DEL]     -32 vtable for grpc_core::FakeResolverResponseGenerator                                      -32  [DEL]\n  -5.5%    -885 src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.cc                          -885  -5.5%\n     -94.3%    -966 grpc_core::(anonymous namespace)::GrpcLbFactory::CreateLoadBalancingPolicy(grpc_core    -966 -94.3%\n      -0.5%      -6 grpc_core::(anonymous namespace)::GrpcLb::ProcessChannelArgsLocked                        -6  -0.5%\n -12.4%    -608 src/core/ext/filters/http/client/http_client_filter.cc                                  -608 -12.4%\n     -40.6%    -623 init_channel_elem                                                                       -623 -40.6%\n  -9.7%    -224 src/core/lib/security/credentials/credentials.cc                                        -224  -9.7%\n      [DEL]     -98 grpc_server_credentials_from_arg                                                         -98  [DEL]\n      [DEL]     -98 grpc_channel_credentials_from_arg                                                        -98  [DEL]\n     -12.4%     -28 [Unmapped]                                                                               -28 -12.4%\n  -3.9%    -208 src/core/lib/iomgr/tcp_server_posix.cc                                                  -208  -3.9%\n     -37.7%    -211 tcp_server_create                                                                       -211 -37.7%\n  -3.9%    -160 src/core/lib/iomgr/tcp_server_custom.cc                                                 -160  -3.9%\n     -41.6%    -159 tcp_server_create                                                                       -159 -41.6%\n      -1.1%      -1 [Unmapped]                                                                                -1  -1.1%\n  -0.4%    -132 src/core/ext/filters/client_channel/client_channel.cc                                   -132  -0.4%\n     -12.4%    -167 cc_init_channel_elem                                                                    -167 -12.4%\n      -2.1%      -9 [Unmapped]                                                                                -9  -2.1%\n  -3.5%    -112 src/core/lib/security/context/security_context.cc                                       -112  -3.5%\n      [DEL]     -98 grpc_auth_context_from_arg                                                               -98  [DEL]\n      -8.3%     -14 [Unmapped]                                                                               -14  -8.3%\n  -1.1%    -112 src/core/lib/security/security_connector/security_connector.cc                          -112  -1.2%\n      [DEL]     -98 grpc_security_connector_from_arg                                                         -98  [DEL]\n      -2.5%     -14 [Unmapped]                                                                               -14  -2.5%\n  -1.1%     -80 src/core/lib/iomgr/resource_quota.cc                                                     -80  -1.1%\n     -42.0%     -68 grpc_resource_quota_from_channel_args                                                    -68 -42.0%\n      -4.3%     -12 [Unmapped]                                                                               -12  -4.3%\n  -3.3%     -64 src/core/lib/iomgr/tcp_server_utils_posix_common.cc                                      -64  -3.3%\n      -6.3%     -57 grpc_tcp_server_prepare_socket                                                           -57  -6.3%\n     -29.2%      -7 [Unmapped]                                                                                -7 -29.2%\n  -1.5%     -48 src/core/lib/iomgr/tcp_client_posix.cc                                                   -48  -1.5%\n      -7.0%     -47 grpc_tcp_client_prepare_fd                                                               -47  -7.0%\n      -2.3%      -1 [Unmapped]                                                                                -1  -2.3%\n  -0.6%     -32 src/core/lib/iomgr/udp_server.cc                                                         -32  -0.6%\n      -9.3%     -21 grpc_udp_server_create                                                                   -21  -9.3%\n      -6.3%     -11 [Unmapped]                                                                               -11  -6.3%\n  -0.1%     -16 src/core/ext/transport/inproc/inproc_transport.cc                                        -16  -0.1%\n      -1.4%      -9 grpc_inproc_channel_create                                                                -9  -1.4%\n      -3.3%      -7 [Unmapped]                                                                                -7  -3.3%\n  -0.3%      -5 src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb_channel_secure.cc             -5  -0.3%\n      -0.6%      -5 grpc_lb_policy_grpclb_modify_lb_channel_args                                              -5  -0.6%\n\n  -0.3% -3.98Ki TOTAL                                                                                -6.37Ki  -0.1%\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE        FILE SIZE\n ++++++++++++++  ++++++++++++++\n\n  [ = ]       0        0  [ = ]\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/396346553",
    "html_url": "https://github.com/grpc/grpc/pull/15678#issuecomment-396346553",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15678",
    "id": 396346553,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjM0NjU1Mw==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-11T18:48:35Z",
    "updated_at": "2018-06-11T18:48:35Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/396355356",
    "html_url": "https://github.com/grpc/grpc/pull/15678#issuecomment-396355356",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15678",
    "id": 396355356,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjM1NTM1Ng==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-11T19:17:37Z",
    "updated_at": "2018-06-11T19:17:37Z",
    "author_association": "MEMBER",
    "body": "> We might consider turning the warning into hard errors (if possible). Being stricter is always a good idea. What do you think?\n\nI'm not sure exactly which warnings you're talking about here.  You mean have the getter methods fail instead of just logging if the specified type is incorrect?  I think that would take a lot more work.  I wouldn't want it to just assert, since that can cause crashes in production code.  So instead, we would need to change the getter API to allow them to return an error, and then we'd need to update all of the callers to do something intelligent with that error.  I think that might be a good idea, but it also might be more work that you're interested in taking on right now.\n\n---\n\nReviewed 18 of 19 files at r2, 7 of 7 files at r3.\nReview status: all files reviewed, 14 unresolved discussions (waiting on @ncteisen, @dgquintas, and @AspirinSJL)\n\n---\n\n*[src/core/ext/filters/http/client/http_client_filter.cc, line 443 at r3](https://reviewable.io/reviews/grpc/grpc/15678#-LEkCTwK9WzJ1SufvbHK:-LEkCTwK9WzJ1SufvbHL:bpuo1mf) ([raw file](https://github.com/grpc/grpc/blob/1c0712c26e9d4bcdb7b02fa7b201a8025a029629/src/core/ext/filters/http/client/http_client_filter.cc#L443)):*\n> ```cpp\n>   grpc_mdelem valid_schemes[] = {GRPC_MDELEM_SCHEME_HTTP,\n>                                  GRPC_MDELEM_SCHEME_HTTPS};\n>   if (channel_args != nullptr) {\n> ```\n\n`grpc_channel_args_find()` returns null if the channel args are null, so there's no need to check this here.\n\n---\n\n*[src/core/ext/filters/http/client/http_client_filter.cc, line 460 at r3](https://reviewable.io/reviews/grpc/grpc/15678#-LEkCFrbD_0XdskmqMgo:-LEkCFrbD_0XdskmqMgp:bpuo1mf) ([raw file](https://github.com/grpc/grpc/blob/1c0712c26e9d4bcdb7b02fa7b201a8025a029629/src/core/ext/filters/http/client/http_client_filter.cc#L460)):*\n> ```cpp\n> static size_t max_payload_size_from_args(\n>     const grpc_channel_args* channel_args) {\n>   if (channel_args != nullptr) {\n> ```\n\n`grpc_channel_args_find()` returns null if the channel args are null, so there's no need to check this here.\n\n---\n\n*[src/core/ext/filters/http/client/http_client_filter.cc, line 463 at r3](https://reviewable.io/reviews/grpc/grpc/15678#-LEkBy9u2x8RXxmcm8k3:-LEkBy9vCeEyhMtyUpSf:bs9u2i1) ([raw file](https://github.com/grpc/grpc/blob/1c0712c26e9d4bcdb7b02fa7b201a8025a029629/src/core/ext/filters/http/client/http_client_filter.cc#L463)):*\n> ```cpp\n>     const grpc_arg* arg =\n>         grpc_channel_args_find(channel_args, GRPC_ARG_MAX_PAYLOAD_SIZE_FOR_GET);\n>     // TODO(mark): is 0 a correct minimum for this value?\n> ```\n\nAsk @makdharma about this.\n\n---\n\n*[src/core/ext/transport/inproc/inproc_transport.cc, line 1208 at r3](https://reviewable.io/reviews/grpc/grpc/15678#-LEkDepH7D_ytl2yzBOX:-LEkDepH7D_ytl2yzBOY:bc5n2oa) ([raw file](https://github.com/grpc/grpc/blob/1c0712c26e9d4bcdb7b02fa7b201a8025a029629/src/core/ext/transport/inproc/inproc_transport.cc#L1208)):*\n> ```cpp\n> \n>   grpc_arg default_authority_arg = grpc_channel_arg_string_create(\n>       const_cast<char*>(GRPC_ARG_DEFAULT_AUTHORITY),\n> ```\n\nWhile you're at it, it might be nice to do something about all of these const_casts.  One possibility is to change the `grpc_channel_arg_*_create()` functions to accept args as const and do the cast internally.  Another option (slightly cleaner, although more invasive) would be to change the `grpc_arg` struct itself to require the parameters to be const.\n\n---\n\n*[src/core/lib/channel/channel_args.h, line 112 at r3](https://reviewable.io/reviews/grpc/grpc/15678#-LEkCgsX-xPlt5mPaLGw:-LEkCgsX-xPlt5mPaLGx:bfl71xs) ([raw file](https://github.com/grpc/grpc/blob/1c0712c26e9d4bcdb7b02fa7b201a8025a029629/src/core/lib/channel/channel_args.h#L112)):*\n> ```objc\n> \n> /** Returns the value of \\a arg, subject to the contraints in \\a options. */\n> int grpc_channel_arg_get_integer(const grpc_arg* arg,\n> ```\n\nIt looks like it's a common pattern to call `grpc_channel_args_find()` and then use one of these functions on the result.  Given that, it might be a good idea to provide alternative versions of each of these getters that compose those two steps.  That way, instead of doing this (just to use one example):\n\n```\n    const grpc_arg* arg =\n        grpc_channel_args_find(args, GRPC_ARG_USE_CRONET_PACKET_COALESCING);\n    bool use_packet_coalescing = grpc_channel_arg_get_bool(arg, false); \n```\n\nthe application can just do something like this:\n\n```\n  bool use_packet_coalescing = grpc_channel_args_get_bool(\n      args, GRPC_ARG_USE_CRONET_PACKET_COALESCING, false);\n```\n\n---\n\n*[src/core/lib/iomgr/tcp_client_posix.cc, line 82 at r3](https://reviewable.io/reviews/grpc/grpc/15678#-LEkENJB0x4V6MMt1Faf:-LEkENJB0x4V6MMt1Fag:b-kblx64) ([raw file](https://github.com/grpc/grpc/blob/1c0712c26e9d4bcdb7b02fa7b201a8025a029629/src/core/lib/iomgr/tcp_client_posix.cc#L82)):*\n> ```cpp\n>   err = grpc_set_socket_no_sigpipe_if_possible(fd);\n>   if (err != GRPC_ERROR_NONE) goto error;\n>   if (channel_args) {\n> ```\n\nNo need for this check, since it's already done inside of `grpc_channel_args_find()`.\n\n---\n\n*[src/core/lib/iomgr/tcp_client_posix.cc, line 87 at r3](https://reviewable.io/reviews/grpc/grpc/15678#-LEkEFMj3tqePtXnodYo:-LEkEFMj3tqePtXnodYp:b-beqw84) ([raw file](https://github.com/grpc/grpc/blob/1c0712c26e9d4bcdb7b02fa7b201a8025a029629/src/core/lib/iomgr/tcp_client_posix.cc#L87)):*\n> ```cpp\n>     grpc_socket_mutator* mutator =\n>         grpc_channel_arg_get_pointer<grpc_socket_mutator>(arg);\n>     if (mutator) {\n> ```\n\nPrefer `!= nullptr` for pointers, so it's clear at a glance that this isn't a bool.\n\n---\n\n*[src/core/lib/iomgr/tcp_server_posix.cc, line 66 at r3](https://reviewable.io/reviews/grpc/grpc/15678#-LEkEqlzCCt2y3olhGvv:-LEkEqm-6SMBR2uiep3Z:b-lhfbfa) ([raw file](https://github.com/grpc/grpc/blob/1c0712c26e9d4bcdb7b02fa7b201a8025a029629/src/core/lib/iomgr/tcp_server_posix.cc#L66)):*\n> ```cpp\n>   s->expand_wildcard_addrs = false;\n>   for (size_t i = 0; i < (args == nullptr ? 0 : args->num_args); i++) {\n>     // TODO(roth): I chose that these both default to true. Is this reasonable?\n> ```\n\nI think we should stick as close to the original behavior as possible.  It's true that we're no longer going to fail, but we should still stick with the original defaults.  So `so_reuseport` should default to `grpc_is_socket_reuse_port_supported()`, and `expand_wildcard_addrs` should default to false.\n\n---\n\n*[src/core/lib/iomgr/tcp_server_utils_posix_common.cc, line 174 at r3](https://reviewable.io/reviews/grpc/grpc/15678#-LEkFHTb10amzcN6KVK3:-LEkFHTb10amzcN6KVK4:bqgeig6) ([raw file](https://github.com/grpc/grpc/blob/1c0712c26e9d4bcdb7b02fa7b201a8025a029629/src/core/lib/iomgr/tcp_server_utils_posix_common.cc#L174)):*\n> ```cpp\n>   if (err != GRPC_ERROR_NONE) goto error;\n> \n>   if (s->channel_args) {\n> ```\n\nNo need to check this here, since it's done in `grpc_channel_args_find()`.\n\n---\n\n*[src/core/lib/iomgr/tcp_server_utils_posix_common.cc, line 179 at r3](https://reviewable.io/reviews/grpc/grpc/15678#-LEkFK_E6ZndaBPKaR4P:-LEkFK_E6ZndaBPKaR4Q:brx1xra) ([raw file](https://github.com/grpc/grpc/blob/1c0712c26e9d4bcdb7b02fa7b201a8025a029629/src/core/lib/iomgr/tcp_server_utils_posix_common.cc#L179)):*\n> ```cpp\n>     grpc_socket_mutator* mutator =\n>         grpc_channel_arg_get_pointer<grpc_socket_mutator>(arg);\n>     if (mutator) {\n> ```\n\nPrefer `!= nullptr`.\n\n---\n\n*[src/core/lib/security/context/security_context.cc, line 329 at r3](https://reviewable.io/reviews/grpc/grpc/15678#-LEkF_Tt1qZ1BjUm4Zj2:-LEkF_Tt1qZ1BjUm4Zj3:b-lfvskm) ([raw file](https://github.com/grpc/grpc/blob/3089cc8c38563d27160f9772a2e5ed4e60c058f7/src/core/lib/security/context/security_context.cc#L329)):*\n> ```cpp\n> }\n> \n> grpc_auth_context* grpc_auth_context_from_arg(const grpc_arg* arg) {\n> ```\n\nThis function is declared in security_context.h, and it may be used internally.  Please verify that it's not before removing it (and update the header file accordingly).\n\n---\n\n*[src/core/lib/security/credentials/credentials.cc, line 171 at r3](https://reviewable.io/reviews/grpc/grpc/15678#-LEkFrYO55eV7lqFWeTj:-LEkFrYO55eV7lqFWeTk:b-jtxjl1) ([raw file](https://github.com/grpc/grpc/blob/3089cc8c38563d27160f9772a2e5ed4e60c058f7/src/core/lib/security/credentials/credentials.cc#L171)):*\n> ```cpp\n> }\n> \n> grpc_channel_credentials* grpc_channel_credentials_from_arg(\n> ```\n\nSame issue here -- this may be used internally and is declared in credentials.h.\n\n---\n\n*[src/core/lib/security/credentials/credentials.cc, line 266 at r3](https://reviewable.io/reviews/grpc/grpc/15678#-LEkG-7c7cdSmTwCNInw:-LEkG-7c7cdSmTwCNInx:brhumzt) ([raw file](https://github.com/grpc/grpc/blob/3089cc8c38563d27160f9772a2e5ed4e60c058f7/src/core/lib/security/credentials/credentials.cc#L266)):*\n> ```cpp\n> }\n> \n> grpc_server_credentials* grpc_server_credentials_from_arg(const grpc_arg* arg) {\n> ```\n\nSame here.\n\n---\n\n*[src/core/lib/security/security_connector/security_connector.cc, line 258 at r3](https://reviewable.io/reviews/grpc/grpc/15678#-LEkGA1YDxgQK7Hc_FMP:-LEkGA1YDxgQK7Hc_FMQ:b-5sve5a) ([raw file](https://github.com/grpc/grpc/blob/3089cc8c38563d27160f9772a2e5ed4e60c058f7/src/core/lib/security/security_connector/security_connector.cc#L258)):*\n> ```cpp\n> }\n> \n> grpc_security_connector* grpc_security_connector_from_arg(const grpc_arg* arg) {\n> ```\n\nSame issue here.\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io/reviews/grpc/grpc/15678#-:-LEkGVtE1tX3dqFaMeG2:bf4tvjr)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/396359419",
    "html_url": "https://github.com/grpc/grpc/pull/15678#issuecomment-396359419",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15678",
    "id": 396359419,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjM1OTQxOQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-11T19:31:29Z",
    "updated_at": "2018-06-11T19:31:29Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/396405916",
    "html_url": "https://github.com/grpc/grpc/pull/15678#issuecomment-396405916",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15678",
    "id": 396405916,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjQwNTkxNg==",
    "user": {
      "login": "ncteisen",
      "id": 6148140,
      "node_id": "MDQ6VXNlcjYxNDgxNDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6148140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ncteisen",
      "html_url": "https://github.com/ncteisen",
      "followers_url": "https://api.github.com/users/ncteisen/followers",
      "following_url": "https://api.github.com/users/ncteisen/following{/other_user}",
      "gists_url": "https://api.github.com/users/ncteisen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ncteisen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ncteisen/subscriptions",
      "organizations_url": "https://api.github.com/users/ncteisen/orgs",
      "repos_url": "https://api.github.com/users/ncteisen/repos",
      "events_url": "https://api.github.com/users/ncteisen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ncteisen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-11T22:21:49Z",
    "updated_at": "2018-06-11T22:21:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, I left left all behavior as is for now. I also added the helpers you suggested and used them I saw a find followed by a get\n\n---\n\nReview status: all files reviewed, 14 unresolved discussions (waiting on @markdroth, @ncteisen, @dgquintas, and @AspirinSJL)\n\n---\n\n*[src/core/ext/filters/http/client/http_client_filter.cc, line 443 at r3](https://reviewable.io/reviews/grpc/grpc/15678#-LEkCTwK9WzJ1SufvbHK:-LEkQ1aeE0BP62sOBpRo:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/1c0712c26e9d4bcdb7b02fa7b201a8025a029629/src/core/ext/filters/http/client/http_client_filter.cc#L443)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\n`grpc_channel_args_find()` returns null if the channel args are null, so there's no need to check this here.\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/ext/filters/http/client/http_client_filter.cc, line 460 at r3](https://reviewable.io/reviews/grpc/grpc/15678#-LEkCFrbD_0XdskmqMgo:-LEkQ5Sc8sslKEyFSukf:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/1c0712c26e9d4bcdb7b02fa7b201a8025a029629/src/core/ext/filters/http/client/http_client_filter.cc#L460)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\n`grpc_channel_args_find()` returns null if the channel args are null, so there's no need to check this here.\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/ext/filters/http/client/http_client_filter.cc, line 463 at r3](https://reviewable.io/reviews/grpc/grpc/15678#-LEkBy9u2x8RXxmcm8k3:-LEkQZAv8VHzhHijB1aR:b-ag68eb) ([raw file](https://github.com/grpc/grpc/blob/1c0712c26e9d4bcdb7b02fa7b201a8025a029629/src/core/ext/filters/http/client/http_client_filter.cc#L463)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nAsk @makdharma about this.\n</blockquote></details>\n\nDone. 0 was the correct clamping value\n\n---\n\n*[src/core/ext/transport/inproc/inproc_transport.cc, line 1208 at r3](https://reviewable.io/reviews/grpc/grpc/15678#-LEkDepH7D_ytl2yzBOX:-LEkRGix3phZYxeUHjrL:bukbe1i) ([raw file](https://github.com/grpc/grpc/blob/1c0712c26e9d4bcdb7b02fa7b201a8025a029629/src/core/ext/transport/inproc/inproc_transport.cc#L1208)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nWhile you're at it, it might be nice to do something about all of these const_casts.  One possibility is to change the `grpc_channel_arg_*_create()` functions to accept args as const and do the cast internally.  Another option (slightly cleaner, although more invasive) would be to change the `grpc_arg` struct itself to require the parameters to be const.\n</blockquote></details>\n\nI feel like pushing the const case deeper into the library is a little dangerous. As it is now, it is clear looking at the functions call that the const casts are safe, since they are casting string literals. I am worries that if we bury the casts deeper, then it could lead to bad bugs where people call the helpers, not realizing there is a cast underneath\n\n---\n\n*[src/core/lib/channel/channel_args.h, line 112 at r3](https://reviewable.io/reviews/grpc/grpc/15678#-LEkCgsX-xPlt5mPaLGw:-LEklC5L5HPWIHE7suoD:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/1c0712c26e9d4bcdb7b02fa7b201a8025a029629/src/core/lib/channel/channel_args.h#L112)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nIt looks like it's a common pattern to call `grpc_channel_args_find()` and then use one of these functions on the result.  Given that, it might be a good idea to provide alternative versions of each of these getters that compose those two steps.  That way, instead of doing this (just to use one example):\n\n```\n    const grpc_arg* arg =\n        grpc_channel_args_find(args, GRPC_ARG_USE_CRONET_PACKET_COALESCING);\n    bool use_packet_coalescing = grpc_channel_arg_get_bool(arg, false); \n```\n\nthe application can just do something like this:\n\n```\n  bool use_packet_coalescing = grpc_channel_args_get_bool(\n      args, GRPC_ARG_USE_CRONET_PACKET_COALESCING, false);\n```\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/lib/iomgr/tcp_client_posix.cc, line 82 at r3](https://reviewable.io/reviews/grpc/grpc/15678#-LEkENJB0x4V6MMt1Faf:-LEkRr3z2NuqCQSwW7Km:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/1c0712c26e9d4bcdb7b02fa7b201a8025a029629/src/core/lib/iomgr/tcp_client_posix.cc#L82)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nNo need for this check, since it's already done inside of `grpc_channel_args_find()`.\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/lib/iomgr/tcp_client_posix.cc, line 87 at r3](https://reviewable.io/reviews/grpc/grpc/15678#-LEkEFMj3tqePtXnodYo:-LEkRrPUEmny-KPzBIvW:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/1c0712c26e9d4bcdb7b02fa7b201a8025a029629/src/core/lib/iomgr/tcp_client_posix.cc#L87)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nPrefer `!= nullptr` for pointers, so it's clear at a glance that this isn't a bool.\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/lib/iomgr/tcp_server_posix.cc, line 66 at r3](https://reviewable.io/reviews/grpc/grpc/15678#-LEkEqlzCCt2y3olhGvv:-LEkRzL12S7_bEmLUqFl:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/1c0712c26e9d4bcdb7b02fa7b201a8025a029629/src/core/lib/iomgr/tcp_server_posix.cc#L66)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nI think we should stick as close to the original behavior as possible.  It's true that we're no longer going to fail, but we should still stick with the original defaults.  So `so_reuseport` should default to `grpc_is_socket_reuse_port_supported()`, and `expand_wildcard_addrs` should default to false.\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/lib/iomgr/tcp_server_utils_posix_common.cc, line 174 at r3](https://reviewable.io/reviews/grpc/grpc/15678#-LEkFHTb10amzcN6KVK3:-LEkS5BHE44TnTbWuVhL:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/1c0712c26e9d4bcdb7b02fa7b201a8025a029629/src/core/lib/iomgr/tcp_server_utils_posix_common.cc#L174)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nNo need to check this here, since it's done in `grpc_channel_args_find()`.\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/lib/iomgr/tcp_server_utils_posix_common.cc, line 179 at r3](https://reviewable.io/reviews/grpc/grpc/15678#-LEkFK_E6ZndaBPKaR4P:-LEkS5STBDjMxpFRmhxy:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/1c0712c26e9d4bcdb7b02fa7b201a8025a029629/src/core/lib/iomgr/tcp_server_utils_posix_common.cc#L179)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nPrefer `!= nullptr`.\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/lib/security/context/security_context.cc, line 329 at r3](https://reviewable.io/reviews/grpc/grpc/15678#-LEkF_Tt1qZ1BjUm4Zj2:-LEkSZprETCkgkbtZO9q:b-acorkj) ([raw file](https://github.com/grpc/grpc/blob/3089cc8c38563d27160f9772a2e5ed4e60c058f7/src/core/lib/security/context/security_context.cc#L329)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nThis function is declared in security_context.h, and it may be used internally.  Please verify that it's not before removing it (and update the header file accordingly).\n</blockquote></details>\n\nCan't find any users internally (or on github via a quick search).\n\n---\n\n*[src/core/lib/security/credentials/credentials.cc, line 171 at r3](https://reviewable.io/reviews/grpc/grpc/15678#-LEkFrYO55eV7lqFWeTj:-LEkSofY2_0Cxv8PvQjf:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/3089cc8c38563d27160f9772a2e5ed4e60c058f7/src/core/lib/security/credentials/credentials.cc#L171)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nSame issue here -- this may be used internally and is declared in credentials.h.\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/lib/security/credentials/credentials.cc, line 266 at r3](https://reviewable.io/reviews/grpc/grpc/15678#-LEkG-7c7cdSmTwCNInw:-LEkSqQ-6eETc2-O5_ES:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/3089cc8c38563d27160f9772a2e5ed4e60c058f7/src/core/lib/security/credentials/credentials.cc#L266)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nSame here.\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/lib/security/security_connector/security_connector.cc, line 258 at r3](https://reviewable.io/reviews/grpc/grpc/15678#-LEkGA1YDxgQK7Hc_FMP:-LEkTJ7J3q6YN_H1AfzT:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/3089cc8c38563d27160f9772a2e5ed4e60c058f7/src/core/lib/security/security_connector/security_connector.cc#L258)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nSame issue here.\n</blockquote></details>\n\nDone.\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io/reviews/grpc/grpc/15678#-:-LEkw4Ki0BoN7fERzTVv:b-mpx3ta)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/396406117",
    "html_url": "https://github.com/grpc/grpc/pull/15678#issuecomment-396406117",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15678",
    "id": 396406117,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjQwNjExNw==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-11T22:22:54Z",
    "updated_at": "2018-06-11T22:22:54Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n  +1.5%    +160 src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc                  +160  +1.5%\n      +4.9%    +158 grpc_core::(anonymous namespace)::PickFirst::UpdateLocked                               +158  +4.9%\n      +0.8%      +2 [Unmapped]                                                                                +2  +0.8%\n  +3.8%     +96 src/core/lib/security/credentials/ssl/ssl_credentials.cc                                 +96  +3.8%\n       +30%     +96 ssl_create_security_connector                                                            +96   +30%\n  +3.3%     +64 src/core/ext/filters/client_channel/resolver/fake/fake_resolver.cc                       +64  +3.3%\n       +77%     +40 grpc_core::FakeResolverResponseGenerator::GetFromArgs                                    +40   +77%\n      +111%     +40 grpc_core::FakeResolverResponseGenerator::MakeChannelArg                                 +40  +111%\n  +3.0%     +40 src/core/ext/filters/client_channel/lb_policy_factory.cc                                 +40  +3.0%\n       +77%     +40 grpc_lb_addresses_find_channel_arg                                                       +40   +77%\n  +0.3%     +32 src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc                 +32  +0.3%\n      +1.3%     +35 grpc_core::(anonymous namespace)::RoundRobin::UpdateLocked                               +35  +1.3%\n  +0.1%     +16 src/core/ext/transport/chttp2/transport/chttp2_transport.cc                              +16  +0.1%\n      +0.4%     +12 grpc_create_chttp2_transport                                                             +12  +0.4%\n      +0.6%      +4 [Unmapped]                                                                                +4  +0.6%\n\n -------------- SHRINKING                                                                            --------------\n  -5.5%    -880 src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.cc                          -880  -5.5%\n     -90.1%    -923 grpc_core::(anonymous namespace)::GrpcLbFactory::CreateLoadBalancingPolicy(grpc_core    -923 -90.1%\n -13.7%    -672 src/core/ext/filters/http/client/http_client_filter.cc                                  -672 -13.7%\n     -44.0%    -676 init_channel_elem                                                                       -676 -44.0%\n  -9.7%    -224 src/core/lib/security/credentials/credentials.cc                                        -224  -9.7%\n      [DEL]     -98 grpc_server_credentials_from_arg                                                         -98  [DEL]\n      [DEL]     -98 grpc_channel_credentials_from_arg                                                        -98  [DEL]\n     -12.4%     -28 [Unmapped]                                                                               -28 -12.4%\n  -3.3%    -176 src/core/lib/iomgr/tcp_server_posix.cc                                                  -176  -3.3%\n     -34.1%    -191 tcp_server_create                                                                       -191 -34.1%\n  -3.9%    -160 src/core/lib/iomgr/tcp_server_custom.cc                                                 -160  -3.9%\n     -41.6%    -159 tcp_server_create                                                                       -159 -41.6%\n      -1.1%      -1 [Unmapped]                                                                                -1  -1.1%\n  -0.5%    -156 src/core/ext/filters/client_channel/client_channel.cc                                   -156  -0.5%\n     -12.4%    -167 cc_init_channel_elem                                                                    -167 -12.4%\n      -2.1%      -9 [Unmapped]                                                                                -9  -2.1%\n  -3.5%    -112 src/core/lib/security/context/security_context.cc                                       -112  -3.5%\n      [DEL]     -98 grpc_auth_context_from_arg                                                               -98  [DEL]\n      -8.3%     -14 [Unmapped]                                                                               -14  -8.3%\n  -1.1%    -112 src/core/lib/security/security_connector/security_connector.cc                          -112  -1.2%\n      [DEL]     -98 grpc_security_connector_from_arg                                                         -98  [DEL]\n      -2.5%     -14 [Unmapped]                                                                               -14  -2.5%\n  -1.1%     -80 src/core/lib/iomgr/resource_quota.cc                                                     -80  -1.1%\n     -42.0%     -68 grpc_resource_quota_from_channel_args                                                    -68 -42.0%\n      -4.3%     -12 [Unmapped]                                                                               -12  -4.3%\n  -3.3%     -64 src/core/lib/iomgr/tcp_server_utils_posix_common.cc                                      -64  -3.3%\n      -6.9%     -62 grpc_tcp_server_prepare_socket                                                           -62  -6.9%\n      -8.3%      -2 [Unmapped]                                                                                -2  -8.3%\n  -1.5%     -48 src/core/lib/iomgr/tcp_client_posix.cc                                                   -48  -1.5%\n      -7.8%     -52 grpc_tcp_client_prepare_fd                                                               -52  -7.8%\n  -0.8%     -32 src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc             -32  -0.8%\n      -6.8%     -40 grpc_core::(anonymous namespace)::AresDnsResolverFactory::CreateResolver(grpc_core::     -40  -6.8%\n  -0.6%     -32 src/core/lib/iomgr/udp_server.cc                                                         -32  -0.6%\n      -9.3%     -21 grpc_udp_server_create                                                                   -21  -9.3%\n      -6.3%     -11 [Unmapped]                                                                               -11  -6.3%\n  -0.1%     -16 src/core/ext/transport/inproc/inproc_transport.cc                                        -16  -0.1%\n      -1.4%      -9 grpc_inproc_channel_create                                                                -9  -1.4%\n      -3.3%      -7 [Unmapped]                                                                                -7  -3.3%\n  -0.3%      -5 src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb_channel_secure.cc             -5  -0.3%\n      -0.6%      -5 grpc_lb_policy_grpclb_modify_lb_channel_args                                              -5  -0.6%\n\n -+-+-+-+-+-+-+ MIXED                                                                                +-+-+-+-+-+-+-\n  -0.3% -1.93Ki [None]                                                                               +7.47Ki  +0.1%\n      [DEL]     -32 vtable for grpc_core::RefCounted<grpc_core::FakeResolverResponseGenerator>               -32  [DEL]\n      [DEL]     -32 vtable for grpc_core::FakeResolverResponseGenerator                                      -32  [DEL]\n\n  -0.3% -4.23Ki TOTAL                                                                                +5.16Ki  +0.1%\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE              FILE SIZE\n ++++++++++++++ GROWIN ++++++++++++++\n\n -------------- SHRINK --------------\n  [ = ]       0 [None]     -40  -0.0%\n\n  [ = ]       0 TOTAL      -40  -0.0%\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/396406397",
    "html_url": "https://github.com/grpc/grpc/pull/15678#issuecomment-396406397",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15678",
    "id": 396406397,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjQwNjM5Nw==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-11T22:24:15Z",
    "updated_at": "2018-06-11T22:24:15Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n  +1.5%    +160 src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc                  +160  +1.5%\n      +4.9%    +158 grpc_core::(anonymous namespace)::PickFirst::UpdateLocked                               +158  +4.9%\n      +0.8%      +2 [Unmapped]                                                                                +2  +0.8%\n  +3.8%     +96 src/core/lib/security/credentials/ssl/ssl_credentials.cc                                 +96  +3.8%\n       +30%     +96 ssl_create_security_connector                                                            +96   +30%\n  +3.3%     +64 src/core/ext/filters/client_channel/resolver/fake/fake_resolver.cc                       +64  +3.3%\n       +77%     +40 grpc_core::FakeResolverResponseGenerator::GetFromArgs                                    +40   +77%\n      +111%     +40 grpc_core::FakeResolverResponseGenerator::MakeChannelArg                                 +40  +111%\n  +3.0%     +40 src/core/ext/filters/client_channel/lb_policy_factory.cc                                 +40  +3.0%\n       +77%     +40 grpc_lb_addresses_find_channel_arg                                                       +40   +77%\n  +0.3%     +32 src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc                 +32  +0.3%\n      +1.3%     +35 grpc_core::(anonymous namespace)::RoundRobin::UpdateLocked                               +35  +1.3%\n  +0.1%     +16 src/core/ext/transport/chttp2/transport/chttp2_transport.cc                              +16  +0.1%\n      +0.4%     +12 grpc_create_chttp2_transport                                                             +12  +0.4%\n      +0.6%      +4 [Unmapped]                                                                                +4  +0.6%\n\n -------------- SHRINKING                                                                            --------------\n  -5.5%    -880 src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.cc                          -880  -5.5%\n     -90.1%    -923 grpc_core::(anonymous namespace)::GrpcLbFactory::CreateLoadBalancingPolicy(grpc_core    -923 -90.1%\n -13.7%    -672 src/core/ext/filters/http/client/http_client_filter.cc                                  -672 -13.7%\n     -44.0%    -676 init_channel_elem                                                                       -676 -44.0%\n  -9.7%    -224 src/core/lib/security/credentials/credentials.cc                                        -224  -9.7%\n      [DEL]     -98 grpc_server_credentials_from_arg                                                         -98  [DEL]\n      [DEL]     -98 grpc_channel_credentials_from_arg                                                        -98  [DEL]\n     -12.4%     -28 [Unmapped]                                                                               -28 -12.4%\n  -3.3%    -176 src/core/lib/iomgr/tcp_server_posix.cc                                                  -176  -3.3%\n     -34.1%    -191 tcp_server_create                                                                       -191 -34.1%\n  -3.9%    -160 src/core/lib/iomgr/tcp_server_custom.cc                                                 -160  -3.9%\n     -41.6%    -159 tcp_server_create                                                                       -159 -41.6%\n      -1.1%      -1 [Unmapped]                                                                                -1  -1.1%\n  -0.5%    -156 src/core/ext/filters/client_channel/client_channel.cc                                   -156  -0.5%\n     -12.4%    -167 cc_init_channel_elem                                                                    -167 -12.4%\n      -2.1%      -9 [Unmapped]                                                                                -9  -2.1%\n  -3.5%    -112 src/core/lib/security/context/security_context.cc                                       -112  -3.5%\n      [DEL]     -98 grpc_auth_context_from_arg                                                               -98  [DEL]\n      -8.3%     -14 [Unmapped]                                                                               -14  -8.3%\n  -1.1%    -112 src/core/lib/security/security_connector/security_connector.cc                          -112  -1.2%\n      [DEL]     -98 grpc_security_connector_from_arg                                                         -98  [DEL]\n      -2.5%     -14 [Unmapped]                                                                               -14  -2.5%\n  -1.1%     -80 src/core/lib/iomgr/resource_quota.cc                                                     -80  -1.1%\n     -42.0%     -68 grpc_resource_quota_from_channel_args                                                    -68 -42.0%\n      -4.3%     -12 [Unmapped]                                                                               -12  -4.3%\n  -3.3%     -64 src/core/lib/iomgr/tcp_server_utils_posix_common.cc                                      -64  -3.3%\n      -6.9%     -62 grpc_tcp_server_prepare_socket                                                           -62  -6.9%\n      -8.3%      -2 [Unmapped]                                                                                -2  -8.3%\n  -1.5%     -48 src/core/lib/iomgr/tcp_client_posix.cc                                                   -48  -1.5%\n      -7.8%     -52 grpc_tcp_client_prepare_fd                                                               -52  -7.8%\n  -0.8%     -32 src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc             -32  -0.8%\n      -6.8%     -40 grpc_core::(anonymous namespace)::AresDnsResolverFactory::CreateResolver(grpc_core::     -40  -6.8%\n  -0.6%     -32 src/core/lib/iomgr/udp_server.cc                                                         -32  -0.6%\n      -9.3%     -21 grpc_udp_server_create                                                                   -21  -9.3%\n      -6.3%     -11 [Unmapped]                                                                               -11  -6.3%\n  -0.1%     -16 src/core/ext/transport/inproc/inproc_transport.cc                                        -16  -0.1%\n      -1.4%      -9 grpc_inproc_channel_create                                                                -9  -1.4%\n      -3.3%      -7 [Unmapped]                                                                                -7  -3.3%\n  -0.3%      -5 src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb_channel_secure.cc             -5  -0.3%\n      -0.6%      -5 grpc_lb_policy_grpclb_modify_lb_channel_args                                              -5  -0.6%\n\n -+-+-+-+-+-+-+ MIXED                                                                                +-+-+-+-+-+-+-\n  -0.3% -1.93Ki [None]                                                                               +7.48Ki  +0.1%\n      [DEL]     -32 vtable for grpc_core::RefCounted<grpc_core::FakeResolverResponseGenerator>               -32  [DEL]\n      [DEL]     -32 vtable for grpc_core::FakeResolverResponseGenerator                                      -32  [DEL]\n\n  -0.3% -4.23Ki TOTAL                                                                                +5.17Ki  +0.1%\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE              FILE SIZE\n ++++++++++++++ GROWIN ++++++++++++++\n\n -------------- SHRINK --------------\n  [ = ]       0 [None]     -40  -0.0%\n\n  [ = ]       0 TOTAL      -40  -0.0%\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/396407520",
    "html_url": "https://github.com/grpc/grpc/pull/15678#issuecomment-396407520",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15678",
    "id": 396407520,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjQwNzUyMA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-11T22:29:38Z",
    "updated_at": "2018-06-11T22:29:38Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/396408122",
    "html_url": "https://github.com/grpc/grpc/pull/15678#issuecomment-396408122",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15678",
    "id": 396408122,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjQwODEyMg==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-11T22:32:53Z",
    "updated_at": "2018-06-11T22:32:53Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/396415888",
    "html_url": "https://github.com/grpc/grpc/pull/15678#issuecomment-396415888",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15678",
    "id": 396415888,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjQxNTg4OA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-11T23:15:04Z",
    "updated_at": "2018-06-11T23:15:04Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] Performance differences noted:\nBenchmark                                   cpu_time    real_time\n------------------------------------------  ----------  -----------\nBM_HasClearGrpcStatus<ErrorWithGrpcStatus>  -5%         -5%\nBM_MetadataRefUnrefExternal                 +14%        +14%\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/396416085",
    "html_url": "https://github.com/grpc/grpc/pull/15678#issuecomment-396416085",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15678",
    "id": 396416085,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjQxNjA4NQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-11T23:16:15Z",
    "updated_at": "2018-06-11T23:16:15Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/396686339",
    "html_url": "https://github.com/grpc/grpc/pull/15678#issuecomment-396686339",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15678",
    "id": 396686339,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjY4NjMzOQ==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-12T18:20:04Z",
    "updated_at": "2018-06-12T18:20:04Z",
    "author_association": "MEMBER",
    "body": "This looks like a good improvement.  Thanks for doing it!\n\n---\n\nReviewed 38 of 38 files at r4.\nReview status: all files reviewed, 6 unresolved discussions (waiting on @markdroth, @ncteisen, @dgquintas, and @AspirinSJL)\n\n---\n\n*[src/core/ext/filters/http/client/http_client_filter.cc, line 460 at r4](https://reviewable.io/reviews/grpc/grpc/15678#-LEpCUfP42UL4Ow5UzkA:-LEpCUfP42UL4Ow5UzkB:b-5a90uf) ([raw file](https://github.com/grpc/grpc/blob/953028e3ff329af8cc42537a6752a3d1d596d467/src/core/ext/filters/http/client/http_client_filter.cc#L460)):*\n> ```cpp\n>       channel_args, GRPC_ARG_MAX_PAYLOAD_SIZE_FOR_GET,\n>       {kMaxPayloadSizeForGet, 0, kMaxPayloadSizeForGet});\n>   return kMaxPayloadSizeForGet;\n> ```\n\nThis statement is no longer needed.\n\n---\n\n*[src/core/ext/transport/inproc/inproc_transport.cc, line 1208 at r3](https://reviewable.io/reviews/grpc/grpc/15678#-LEkDepH7D_ytl2yzBOX:-LEpD-fG3zmth31vzgjw:be8l4fm) ([raw file](https://github.com/grpc/grpc/blob/1c0712c26e9d4bcdb7b02fa7b201a8025a029629/src/core/ext/transport/inproc/inproc_transport.cc#L1208)):*\n<details><summary><i>Previously, ncteisen (Noah Eisen) wrote…</i></summary><blockquote>\n\nI feel like pushing the const case deeper into the library is a little dangerous. As it is now, it is clear looking at the functions call that the const casts are safe, since they are casting string literals. I am worries that if we bury the casts deeper, then it could lead to bad bugs where people call the helpers, not realizing there is a cast underneath\n</blockquote></details>\n\nYeah, that's why I prefer the second option: change the `grpc_arg` struct to use `const`.  Maybe see how hard it would be to do that?  I'm not sure how invasive that would be.\n\n---\n\n*[src/core/lib/channel/channel_args.h, line 115 at r4](https://reviewable.io/reviews/grpc/grpc/15678#-LEpBfGpCzbenDgShByL:-LEpBfGpCzbenDgShByM:b-a3cylq) ([raw file](https://github.com/grpc/grpc/blob/953028e3ff329af8cc42537a6752a3d1d596d467/src/core/lib/channel/channel_args.h#L115)):*\n> ```objc\n>                                  const grpc_integer_options options);\n> /** convinience helper for the above that finds the arg first. */\n> inline int grpc_channel_arg_find_and_get_integer(\n> ```\n\nSuggest just calling this `grpc_channel_args_get_integer()`.\n\n---\n\n*[src/core/lib/channel/channel_args.h, line 127 at r4](https://reviewable.io/reviews/grpc/grpc/15678#-LEpBjeW7oFKgfG3_SN7:-LEpBjeW7oFKgfG3_SN8:bkjz88b) ([raw file](https://github.com/grpc/grpc/blob/953028e3ff329af8cc42537a6752a3d1d596d467/src/core/lib/channel/channel_args.h#L127)):*\n> ```objc\n> char* grpc_channel_arg_get_string(const grpc_arg* arg);\n> /** convinience helper for the above that finds the arg first. */\n> inline char* grpc_channel_arg_find_and_get_string(const grpc_channel_args* args,\n> ```\n\nSimilarly, suggest calling this `grpc_channel_args_get_string()`.\n\n---\n\n*[src/core/lib/channel/channel_args.h, line 146 at r4](https://reviewable.io/reviews/grpc/grpc/15678#-LEpBnFP4nFm2ZLYgCTh:-LEpBnFP4nFm2ZLYgCTi:b-akwln9) ([raw file](https://github.com/grpc/grpc/blob/953028e3ff329af8cc42537a6752a3d1d596d467/src/core/lib/channel/channel_args.h#L146)):*\n> ```objc\n> /** convinience helper for the above that finds the arg first. */\n> template <typename Type>\n> inline Type* grpc_channel_arg_find_and_get_pointer(\n> ```\n\n`grpc_channel_args_get_pointer()`\n\n---\n\n*[src/core/lib/channel/channel_args.h, line 152 at r4](https://reviewable.io/reviews/grpc/grpc/15678#-LEpBsBHBI16cPFR4qws:-LEpBsBHBI16cPFR4qwt:bq5s59o) ([raw file](https://github.com/grpc/grpc/blob/953028e3ff329af8cc42537a6752a3d1d596d467/src/core/lib/channel/channel_args.h#L152)):*\n> ```objc\n> \n> bool grpc_channel_arg_get_bool(const grpc_arg* arg, bool default_value);\n> inline bool grpc_channel_arg_find_and_get_bool(const grpc_channel_args* args,\n> ```\n\n`grpc_channel_args_get_bool()`\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io/reviews/grpc/grpc/15678#-:-LEpDLA96S4JDBhvCFkK:b-lnb4v9)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/396696006",
    "html_url": "https://github.com/grpc/grpc/pull/15678#issuecomment-396696006",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15678",
    "id": 396696006,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjY5NjAwNg==",
    "user": {
      "login": "ncteisen",
      "id": 6148140,
      "node_id": "MDQ6VXNlcjYxNDgxNDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6148140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ncteisen",
      "html_url": "https://github.com/ncteisen",
      "followers_url": "https://api.github.com/users/ncteisen/followers",
      "following_url": "https://api.github.com/users/ncteisen/following{/other_user}",
      "gists_url": "https://api.github.com/users/ncteisen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ncteisen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ncteisen/subscriptions",
      "organizations_url": "https://api.github.com/users/ncteisen/orgs",
      "repos_url": "https://api.github.com/users/ncteisen/repos",
      "events_url": "https://api.github.com/users/ncteisen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ncteisen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-12T18:52:48Z",
    "updated_at": "2018-06-12T18:52:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "Addressed all comments\n\n---\n\nReview status: all files reviewed, 6 unresolved discussions (waiting on @ncteisen, @markdroth, @dgquintas, and @AspirinSJL)\n\n---\n\n*[src/core/ext/filters/http/client/http_client_filter.cc, line 460 at r4](https://reviewable.io/reviews/grpc/grpc/15678#-LEpCUfP42UL4Ow5UzkA:-LEpIu2H082yJgVqq8az:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/953028e3ff329af8cc42537a6752a3d1d596d467/src/core/ext/filters/http/client/http_client_filter.cc#L460)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nThis statement is no longer needed.\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/ext/transport/inproc/inproc_transport.cc, line 1208 at r3](https://reviewable.io/reviews/grpc/grpc/15678#-LEkDepH7D_ytl2yzBOX:-LEpIxx96BPRfG47p1AU:bq6d3mv) ([raw file](https://github.com/grpc/grpc/blob/1c0712c26e9d4bcdb7b02fa7b201a8025a029629/src/core/ext/transport/inproc/inproc_transport.cc#L1208)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nYeah, that's why I prefer the second option: change the `grpc_arg` struct to use `const`.  Maybe see how hard it would be to do that?  I'm not sure how invasive that would be.\n</blockquote></details>\n\nThe complexity of that definitely is out of scope for what I want to accomplish in this PR since grpc_arg is part of the core API. That change would need changes to wrapped language bindings: \n\nhttps://github.com/grpc/grpc/blob/17684374f5a17c43a1b213d853ca03025abd95ed/src/python/grpcio/grpc/_cython/_cygrpc/grpc.pxi?utf8=%E2%9C%93#L180-L183\n\nI can put in an issue and tackle that one next fixit week :)\n\n---\n\n*[src/core/lib/channel/channel_args.h, line 115 at r4](https://reviewable.io/reviews/grpc/grpc/15678#-LEpBfGpCzbenDgShByL:-LEpK6fjBeSIXYuueW6B:b-ah5rte) ([raw file](https://github.com/grpc/grpc/blob/953028e3ff329af8cc42537a6752a3d1d596d467/src/core/lib/channel/channel_args.h#L115)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nSuggest just calling this `grpc_channel_args_get_integer()`.\n</blockquote></details>\n\nDone. Somehow I forgot that we were C++ now and that overloading is ok....\n\n---\n\n*[src/core/lib/channel/channel_args.h, line 127 at r4](https://reviewable.io/reviews/grpc/grpc/15678#-LEpBjeW7oFKgfG3_SN7:-LEpK7_q9p_Oxily2pti:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/953028e3ff329af8cc42537a6752a3d1d596d467/src/core/lib/channel/channel_args.h#L127)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nSimilarly, suggest calling this `grpc_channel_args_get_string()`.\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/lib/channel/channel_args.h, line 146 at r4](https://reviewable.io/reviews/grpc/grpc/15678#-LEpBnFP4nFm2ZLYgCTh:-LEpK80v2HVnlbfuQ-e2:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/953028e3ff329af8cc42537a6752a3d1d596d467/src/core/lib/channel/channel_args.h#L146)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\n`grpc_channel_args_get_pointer()`\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/lib/channel/channel_args.h, line 152 at r4](https://reviewable.io/reviews/grpc/grpc/15678#-LEpBsBHBI16cPFR4qws:-LEpK97kD1jClq0ZV-W7:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/953028e3ff329af8cc42537a6752a3d1d596d467/src/core/lib/channel/channel_args.h#L152)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\n`grpc_channel_args_get_bool()`\n</blockquote></details>\n\nDone.\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io/reviews/grpc/grpc/15678#-:-LEpKYy14JtA0EAWe0SJ:bwdyw6d)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/396697036",
    "html_url": "https://github.com/grpc/grpc/pull/15678#issuecomment-396697036",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15678",
    "id": 396697036,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjY5NzAzNg==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-12T18:56:22Z",
    "updated_at": "2018-06-12T18:56:22Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n  +1.5%    +160 src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc                  +160  +1.5%\n      +4.9%    +158 grpc_core::(anonymous namespace)::PickFirst::UpdateLocked                               +158  +4.9%\n      +0.8%      +2 [Unmapped]                                                                                +2  +0.8%\n  +3.8%     +96 src/core/lib/security/credentials/ssl/ssl_credentials.cc                                 +96  +3.8%\n       +30%     +96 ssl_create_security_connector                                                            +96   +30%\n  +3.3%     +64 src/core/ext/filters/client_channel/resolver/fake/fake_resolver.cc                       +64  +3.3%\n       +77%     +40 grpc_core::FakeResolverResponseGenerator::GetFromArgs                                    +40   +77%\n      +111%     +40 grpc_core::FakeResolverResponseGenerator::MakeChannelArg                                 +40  +111%\n  +3.0%     +40 src/core/ext/filters/client_channel/lb_policy_factory.cc                                 +40  +3.0%\n       +77%     +40 grpc_lb_addresses_find_channel_arg                                                       +40   +77%\n  +0.3%     +32 src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc                 +32  +0.3%\n      +1.3%     +35 grpc_core::(anonymous namespace)::RoundRobin::UpdateLocked                               +35  +1.3%\n  +0.1%     +16 src/core/ext/transport/chttp2/transport/chttp2_transport.cc                              +16  +0.1%\n      +0.4%     +12 grpc_create_chttp2_transport                                                             +12  +0.4%\n      +0.6%      +4 [Unmapped]                                                                                +4  +0.6%\n\n -------------- SHRINKING                                                                            --------------\n  -5.5%    -880 src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.cc                          -880  -5.5%\n     -90.1%    -923 grpc_core::(anonymous namespace)::GrpcLbFactory::CreateLoadBalancingPolicy(grpc_core    -923 -90.1%\n -13.7%    -672 src/core/ext/filters/http/client/http_client_filter.cc                                  -672 -13.7%\n     -44.0%    -676 init_channel_elem                                                                       -676 -44.0%\n  -9.7%    -224 src/core/lib/security/credentials/credentials.cc                                        -224  -9.7%\n      [DEL]     -98 grpc_server_credentials_from_arg                                                         -98  [DEL]\n      [DEL]     -98 grpc_channel_credentials_from_arg                                                        -98  [DEL]\n     -12.4%     -28 [Unmapped]                                                                               -28 -12.4%\n  -3.3%    -176 src/core/lib/iomgr/tcp_server_posix.cc                                                  -176  -3.3%\n     -34.1%    -191 tcp_server_create                                                                       -191 -34.1%\n  -3.9%    -160 src/core/lib/iomgr/tcp_server_custom.cc                                                 -160  -3.9%\n     -41.6%    -159 tcp_server_create                                                                       -159 -41.6%\n      -1.1%      -1 [Unmapped]                                                                                -1  -1.1%\n  -0.5%    -156 src/core/ext/filters/client_channel/client_channel.cc                                   -156  -0.5%\n     -12.4%    -167 cc_init_channel_elem                                                                    -167 -12.4%\n      -2.1%      -9 [Unmapped]                                                                                -9  -2.1%\n  -3.5%    -112 src/core/lib/security/context/security_context.cc                                       -112  -3.5%\n      [DEL]     -98 grpc_auth_context_from_arg                                                               -98  [DEL]\n      -8.3%     -14 [Unmapped]                                                                               -14  -8.3%\n  -1.1%    -112 src/core/lib/security/security_connector/security_connector.cc                          -112  -1.2%\n      [DEL]     -98 grpc_security_connector_from_arg                                                         -98  [DEL]\n      -2.5%     -14 [Unmapped]                                                                               -14  -2.5%\n  -1.1%     -80 src/core/lib/iomgr/resource_quota.cc                                                     -80  -1.1%\n     -42.0%     -68 grpc_resource_quota_from_channel_args                                                    -68 -42.0%\n      -4.3%     -12 [Unmapped]                                                                               -12  -4.3%\n  -3.3%     -64 src/core/lib/iomgr/tcp_server_utils_posix_common.cc                                      -64  -3.3%\n      -6.9%     -62 grpc_tcp_server_prepare_socket                                                           -62  -6.9%\n      -8.3%      -2 [Unmapped]                                                                                -2  -8.3%\n  -1.5%     -48 src/core/lib/iomgr/tcp_client_posix.cc                                                   -48  -1.5%\n      -7.8%     -52 grpc_tcp_client_prepare_fd                                                               -52  -7.8%\n  -0.8%     -32 src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc             -32  -0.8%\n      -6.8%     -40 grpc_core::(anonymous namespace)::AresDnsResolverFactory::CreateResolver(grpc_core::     -40  -6.8%\n  -0.6%     -32 src/core/lib/iomgr/udp_server.cc                                                         -32  -0.6%\n      -9.3%     -21 grpc_udp_server_create                                                                   -21  -9.3%\n      -6.3%     -11 [Unmapped]                                                                               -11  -6.3%\n  -0.1%     -16 src/core/ext/transport/inproc/inproc_transport.cc                                        -16  -0.1%\n      -1.4%      -9 grpc_inproc_channel_create                                                                -9  -1.4%\n      -3.3%      -7 [Unmapped]                                                                                -7  -3.3%\n  -0.3%      -5 src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb_channel_secure.cc             -5  -0.3%\n      -0.6%      -5 grpc_lb_policy_grpclb_modify_lb_channel_args                                              -5  -0.6%\n\n -+-+-+-+-+-+-+ MIXED                                                                                +-+-+-+-+-+-+-\n  -0.3% -1.96Ki [None]                                                                               +6.46Ki  +0.1%\n      [DEL]     -32 vtable for grpc_core::RefCounted<grpc_core::FakeResolverResponseGenerator>               -32  [DEL]\n      [DEL]     -32 vtable for grpc_core::FakeResolverResponseGenerator                                      -32  [DEL]\n\n  -0.3% -4.27Ki TOTAL                                                                                +4.16Ki  +0.0%\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE              FILE SIZE\n ++++++++++++++ GROWIN ++++++++++++++\n\n -------------- SHRINK --------------\n  [ = ]       0 [None]     -40  -0.0%\n\n  [ = ]       0 TOTAL      -40  -0.0%\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/396699008",
    "html_url": "https://github.com/grpc/grpc/pull/15678#issuecomment-396699008",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15678",
    "id": 396699008,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjY5OTAwOA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-12T19:03:25Z",
    "updated_at": "2018-06-12T19:03:25Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/396711369",
    "html_url": "https://github.com/grpc/grpc/pull/15678#issuecomment-396711369",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15678",
    "id": 396711369,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjcxMTM2OQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-12T19:49:12Z",
    "updated_at": "2018-06-12T19:49:12Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/396715511",
    "html_url": "https://github.com/grpc/grpc/pull/15678#issuecomment-396715511",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15678",
    "id": 396715511,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjcxNTUxMQ==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-12T20:03:49Z",
    "updated_at": "2018-06-12T20:03:49Z",
    "author_association": "MEMBER",
    "body": "Sorry for the run-around on the renaming!\n\n---\n\nReviewed 1 of 34 files at r5.\nReview status: 9 of 42 files reviewed, 4 unresolved discussions (waiting on @markdroth, @dgquintas, and @AspirinSJL)\n\n---\n\n*[src/core/ext/transport/inproc/inproc_transport.cc, line 1208 at r3](https://reviewable.io/reviews/grpc/grpc/15678#-LEkDepH7D_ytl2yzBOX:-LEp_-Jt8E7xLs1BMbOE:brxp9sq) ([raw file](https://github.com/grpc/grpc/blob/1c0712c26e9d4bcdb7b02fa7b201a8025a029629/src/core/ext/transport/inproc/inproc_transport.cc#L1208)):*\n<details><summary><i>Previously, ncteisen (Noah Eisen) wrote…</i></summary><blockquote>\n\nThe complexity of that definitely is out of scope for what I want to accomplish in this PR since grpc_arg is part of the core API. That change would need changes to wrapped language bindings: \n\nhttps://github.com/grpc/grpc/blob/17684374f5a17c43a1b213d853ca03025abd95ed/src/python/grpcio/grpc/_cython/_cygrpc/grpc.pxi?utf8=%E2%9C%93#L180-L183\n\nI can put in an issue and tackle that one next fixit week :)\n</blockquote></details>\n\nSounds good.\n\n---\n\n*[src/core/lib/channel/channel_args.h, line 115 at r4](https://reviewable.io/reviews/grpc/grpc/15678#-LEpBfGpCzbenDgShByL:-LEp_2vg36EBRx30bl_t:b-a2owk5) ([raw file](https://github.com/grpc/grpc/blob/953028e3ff329af8cc42537a6752a3d1d596d467/src/core/lib/channel/channel_args.h#L115)):*\n<details><summary><i>Previously, ncteisen (Noah Eisen) wrote…</i></summary><blockquote>\n\nDone. Somehow I forgot that we were C++ now and that overloading is ok....\n</blockquote></details>\n\nSorry, I guess I should have been more explicit: I meant `grpc_channel_args_get_integer()`, not `grpc_channel_arg_get_integer()`.   Using the plural here is more appropriate, since this is a method of `grpc_channel_args` instead of a method of `grpc_arg`, and it means that there's no need for overloading.\n\n---\n\n*[src/core/lib/channel/channel_args.h, line 127 at r4](https://reviewable.io/reviews/grpc/grpc/15678#-LEpBjeW7oFKgfG3_SN7:-LEp_W6W-tjypgcZghPv:brhumzt) ([raw file](https://github.com/grpc/grpc/blob/953028e3ff329af8cc42537a6752a3d1d596d467/src/core/lib/channel/channel_args.h#L127)):*\n<details><summary><i>Previously, ncteisen (Noah Eisen) wrote…</i></summary><blockquote>\n\nDone.\n</blockquote></details>\n\nSame here.\n\n---\n\n*[src/core/lib/channel/channel_args.h, line 146 at r4](https://reviewable.io/reviews/grpc/grpc/15678#-LEpBnFP4nFm2ZLYgCTh:-LEp_XeW76XtE4D7yEWI:brhumzt) ([raw file](https://github.com/grpc/grpc/blob/953028e3ff329af8cc42537a6752a3d1d596d467/src/core/lib/channel/channel_args.h#L146)):*\n<details><summary><i>Previously, ncteisen (Noah Eisen) wrote…</i></summary><blockquote>\n\nDone.\n</blockquote></details>\n\nSame here.\n\n---\n\n*[src/core/lib/channel/channel_args.h, line 152 at r4](https://reviewable.io/reviews/grpc/grpc/15678#-LEpBsBHBI16cPFR4qws:-LEp_Yyq2JgLE8ou_py2:brhumzt) ([raw file](https://github.com/grpc/grpc/blob/953028e3ff329af8cc42537a6752a3d1d596d467/src/core/lib/channel/channel_args.h#L152)):*\n<details><summary><i>Previously, ncteisen (Noah Eisen) wrote…</i></summary><blockquote>\n\nDone.\n</blockquote></details>\n\nSame here.\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io/reviews/grpc/grpc/15678#-:-LEp_d-qAb-8dBmUeRkV:b-gombk7)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/396725626",
    "html_url": "https://github.com/grpc/grpc/pull/15678#issuecomment-396725626",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15678",
    "id": 396725626,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjcyNTYyNg==",
    "user": {
      "login": "ncteisen",
      "id": 6148140,
      "node_id": "MDQ6VXNlcjYxNDgxNDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6148140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ncteisen",
      "html_url": "https://github.com/ncteisen",
      "followers_url": "https://api.github.com/users/ncteisen/followers",
      "following_url": "https://api.github.com/users/ncteisen/following{/other_user}",
      "gists_url": "https://api.github.com/users/ncteisen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ncteisen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ncteisen/subscriptions",
      "organizations_url": "https://api.github.com/users/ncteisen/orgs",
      "repos_url": "https://api.github.com/users/ncteisen/repos",
      "events_url": "https://api.github.com/users/ncteisen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ncteisen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-12T20:38:53Z",
    "updated_at": "2018-06-12T20:38:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sublime has great find and replace functionality :)\n\n---\n\nReview status: 9 of 42 files reviewed, 4 unresolved discussions (waiting on @markdroth, @dgquintas, and @AspirinSJL)\n\n---\n\n*[src/core/lib/channel/channel_args.h, line 115 at r4](https://reviewable.io/reviews/grpc/grpc/15678#-LEpBfGpCzbenDgShByL:-LEphkq8696B33QoSfwf:bpnaqol) ([raw file](https://github.com/grpc/grpc/blob/953028e3ff329af8cc42537a6752a3d1d596d467/src/core/lib/channel/channel_args.h#L115)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nSorry, I guess I should have been more explicit: I meant `grpc_channel_args_get_integer()`, not `grpc_channel_arg_get_integer()`.   Using the plural here is more appropriate, since this is a method of `grpc_channel_args` instead of a method of `grpc_arg`, and it means that there's no need for overloading.\n</blockquote></details>\n\nOops, I misread the original comment. Done.\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io/reviews/grpc/grpc/15678#-:-LEpi60X0E08dYebAXsA:b-41gxux)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/396727673",
    "html_url": "https://github.com/grpc/grpc/pull/15678#issuecomment-396727673",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15678",
    "id": 396727673,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjcyNzY3Mw==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-12T20:45:26Z",
    "updated_at": "2018-06-12T20:45:26Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n  +1.5%    +160 src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc                  +160  +1.5%\n      +4.9%    +158 grpc_core::(anonymous namespace)::PickFirst::UpdateLocked                               +158  +4.9%\n      +0.8%      +2 [Unmapped]                                                                                +2  +0.8%\n  +3.8%     +96 src/core/lib/security/credentials/ssl/ssl_credentials.cc                                 +96  +3.8%\n       +30%     +96 ssl_create_security_connector                                                            +96   +30%\n  +3.3%     +64 src/core/ext/filters/client_channel/resolver/fake/fake_resolver.cc                       +64  +3.3%\n       +77%     +40 grpc_core::FakeResolverResponseGenerator::GetFromArgs                                    +40   +77%\n      +111%     +40 grpc_core::FakeResolverResponseGenerator::MakeChannelArg                                 +40  +111%\n  +3.0%     +40 src/core/ext/filters/client_channel/lb_policy_factory.cc                                 +40  +3.0%\n       +77%     +40 grpc_lb_addresses_find_channel_arg                                                       +40   +77%\n  +0.3%     +32 src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc                 +32  +0.3%\n      +1.3%     +35 grpc_core::(anonymous namespace)::RoundRobin::UpdateLocked                               +35  +1.3%\n  +0.1%     +16 src/core/ext/transport/chttp2/transport/chttp2_transport.cc                              +16  +0.1%\n      +0.4%     +12 grpc_create_chttp2_transport                                                             +12  +0.4%\n      +0.6%      +4 [Unmapped]                                                                                +4  +0.6%\n\n -------------- SHRINKING                                                                            --------------\n  -5.5%    -880 src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.cc                          -880  -5.5%\n     -90.1%    -923 grpc_core::(anonymous namespace)::GrpcLbFactory::CreateLoadBalancingPolicy(grpc_core    -923 -90.1%\n -13.7%    -672 src/core/ext/filters/http/client/http_client_filter.cc                                  -672 -13.7%\n     -44.0%    -676 init_channel_elem                                                                       -676 -44.0%\n  -9.7%    -224 src/core/lib/security/credentials/credentials.cc                                        -224  -9.7%\n      [DEL]     -98 grpc_server_credentials_from_arg                                                         -98  [DEL]\n      [DEL]     -98 grpc_channel_credentials_from_arg                                                        -98  [DEL]\n     -12.4%     -28 [Unmapped]                                                                               -28 -12.4%\n  -3.3%    -176 src/core/lib/iomgr/tcp_server_posix.cc                                                  -176  -3.3%\n     -34.1%    -191 tcp_server_create                                                                       -191 -34.1%\n  -3.9%    -160 src/core/lib/iomgr/tcp_server_custom.cc                                                 -160  -3.9%\n     -41.6%    -159 tcp_server_create                                                                       -159 -41.6%\n      -1.1%      -1 [Unmapped]                                                                                -1  -1.1%\n  -0.5%    -156 src/core/ext/filters/client_channel/client_channel.cc                                   -156  -0.5%\n     -12.4%    -167 cc_init_channel_elem                                                                    -167 -12.4%\n      -2.1%      -9 [Unmapped]                                                                                -9  -2.1%\n  -3.5%    -112 src/core/lib/security/context/security_context.cc                                       -112  -3.5%\n      [DEL]     -98 grpc_auth_context_from_arg                                                               -98  [DEL]\n      -8.3%     -14 [Unmapped]                                                                               -14  -8.3%\n  -1.1%    -112 src/core/lib/security/security_connector/security_connector.cc                          -112  -1.2%\n      [DEL]     -98 grpc_security_connector_from_arg                                                         -98  [DEL]\n      -2.5%     -14 [Unmapped]                                                                               -14  -2.5%\n  -1.1%     -80 src/core/lib/iomgr/resource_quota.cc                                                     -80  -1.1%\n     -42.0%     -68 grpc_resource_quota_from_channel_args                                                    -68 -42.0%\n      -4.3%     -12 [Unmapped]                                                                               -12  -4.3%\n  -3.3%     -64 src/core/lib/iomgr/tcp_server_utils_posix_common.cc                                      -64  -3.3%\n      -6.9%     -62 grpc_tcp_server_prepare_socket                                                           -62  -6.9%\n      -8.3%      -2 [Unmapped]                                                                                -2  -8.3%\n  -1.5%     -48 src/core/lib/iomgr/tcp_client_posix.cc                                                   -48  -1.5%\n      -7.8%     -52 grpc_tcp_client_prepare_fd                                                               -52  -7.8%\n  -0.8%     -32 src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc             -32  -0.8%\n      -6.8%     -40 grpc_core::(anonymous namespace)::AresDnsResolverFactory::CreateResolver(grpc_core::     -40  -6.8%\n  -0.6%     -32 src/core/lib/iomgr/udp_server.cc                                                         -32  -0.6%\n      -9.3%     -21 grpc_udp_server_create                                                                   -21  -9.3%\n      -6.3%     -11 [Unmapped]                                                                               -11  -6.3%\n  -0.1%     -16 src/core/ext/transport/inproc/inproc_transport.cc                                        -16  -0.1%\n      -1.4%      -9 grpc_inproc_channel_create                                                                -9  -1.4%\n      -3.3%      -7 [Unmapped]                                                                                -7  -3.3%\n  -0.3%      -5 src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb_channel_secure.cc             -5  -0.3%\n      -0.6%      -5 grpc_lb_policy_grpclb_modify_lb_channel_args                                              -5  -0.6%\n\n -+-+-+-+-+-+-+ MIXED                                                                                +-+-+-+-+-+-+-\n  -0.3% -1.96Ki [None]                                                                               +7.27Ki  +0.1%\n      [DEL]     -32 vtable for grpc_core::RefCounted<grpc_core::FakeResolverResponseGenerator>               -32  [DEL]\n      [DEL]     -32 vtable for grpc_core::FakeResolverResponseGenerator                                      -32  [DEL]\n\n  -0.3% -4.27Ki TOTAL                                                                                +4.96Ki  +0.1%\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE              FILE SIZE\n ++++++++++++++ GROWIN ++++++++++++++\n\n -------------- SHRINK --------------\n  [ = ]       0 [None]     -40  -0.0%\n\n  [ = ]       0 TOTAL      -40  -0.0%\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/396730041",
    "html_url": "https://github.com/grpc/grpc/pull/15678#issuecomment-396730041",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15678",
    "id": 396730041,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjczMDA0MQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-12T20:53:10Z",
    "updated_at": "2018-06-12T20:53:10Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/396742641",
    "html_url": "https://github.com/grpc/grpc/pull/15678#issuecomment-396742641",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15678",
    "id": 396742641,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5Njc0MjY0MQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-12T21:36:35Z",
    "updated_at": "2018-06-12T21:36:35Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/396747491",
    "html_url": "https://github.com/grpc/grpc/pull/15678#issuecomment-396747491",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15678",
    "id": 396747491,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5Njc0NzQ5MQ==",
    "user": {
      "login": "dgquintas",
      "id": 120217,
      "node_id": "MDQ6VXNlcjEyMDIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/120217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgquintas",
      "html_url": "https://github.com/dgquintas",
      "followers_url": "https://api.github.com/users/dgquintas/followers",
      "following_url": "https://api.github.com/users/dgquintas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgquintas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgquintas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgquintas/subscriptions",
      "organizations_url": "https://api.github.com/users/dgquintas/orgs",
      "repos_url": "https://api.github.com/users/dgquintas/repos",
      "events_url": "https://api.github.com/users/dgquintas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgquintas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-12T21:55:55Z",
    "updated_at": "2018-06-12T21:55:55Z",
    "author_association": "NONE",
    "body": "\n\n\n\nReviewed 33 of 34 files at r5.\nReview status: 8 of 42 files reviewed, 5 unresolved discussions (waiting on @dgquintas, @markdroth, @ncteisen, and @AspirinSJL)\n\n---\n\n*[src/core/ext/filters/http/client/http_client_filter.cc, line 446 at r5](https://reviewable.io/reviews/grpc/grpc/15678#-LEpzNVV09zNuWl3IFON:-LEpzNVV09zNuWl3IFOO:buangxa) ([raw file](https://github.com/grpc/grpc/blob/6601c2793b4d949072d33d70cff3eca46cd660c8/src/core/ext/filters/http/client/http_client_filter.cc#L446)):*\n> ```cpp\n>       grpc_channel_arg_get_string(channel_args, GRPC_ARG_HTTP2_SCHEME);\n>   if (scheme != nullptr) {\n>     for (i = 0; i < GPR_ARRAY_SIZE(valid_schemes); i++) {\n> ```\n\nwhy not do the usual `for (size_t i = 0 ...` instead of declaring `i` separately? It seems that's just a relic of our former C89 codebase.\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io/reviews/grpc/grpc/15678)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/396817628",
    "html_url": "https://github.com/grpc/grpc/pull/15678#issuecomment-396817628",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15678",
    "id": 396817628,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjgxNzYyOA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-13T05:26:58Z",
    "updated_at": "2018-06-13T05:26:58Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n  +1.5%    +160 src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc                  +160  +1.5%\n      +4.9%    +158 grpc_core::(anonymous namespace)::PickFirst::UpdateLocked                               +158  +4.9%\n      +0.8%      +2 [Unmapped]                                                                                +2  +0.8%\n  +3.8%     +96 src/core/lib/security/credentials/ssl/ssl_credentials.cc                                 +96  +3.8%\n       +30%     +96 ssl_create_security_connector                                                            +96   +30%\n  +3.3%     +64 src/core/ext/filters/client_channel/resolver/fake/fake_resolver.cc                       +64  +3.3%\n       +77%     +40 grpc_core::FakeResolverResponseGenerator::GetFromArgs                                    +40   +77%\n      +111%     +40 grpc_core::FakeResolverResponseGenerator::MakeChannelArg                                 +40  +111%\n  +3.0%     +40 src/core/ext/filters/client_channel/lb_policy_factory.cc                                 +40  +3.0%\n       +77%     +40 grpc_lb_addresses_find_channel_arg                                                       +40   +77%\n  +0.3%     +32 src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc                 +32  +0.3%\n      +1.3%     +35 grpc_core::(anonymous namespace)::RoundRobin::UpdateLocked                               +35  +1.3%\n  +0.1%     +16 src/core/ext/transport/chttp2/transport/chttp2_transport.cc                              +16  +0.1%\n      +0.4%     +12 grpc_create_chttp2_transport                                                             +12  +0.4%\n      +0.6%      +4 [Unmapped]                                                                                +4  +0.6%\n\n -------------- SHRINKING                                                                            --------------\n  -5.5%    -880 src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.cc                          -880  -5.5%\n     -90.1%    -923 grpc_core::(anonymous namespace)::GrpcLbFactory::CreateLoadBalancingPolicy(grpc_core    -923 -90.1%\n -13.7%    -672 src/core/ext/filters/http/client/http_client_filter.cc                                  -672 -13.7%\n     -44.0%    -676 init_channel_elem                                                                       -676 -44.0%\n  -9.7%    -224 src/core/lib/security/credentials/credentials.cc                                        -224  -9.7%\n      [DEL]     -98 grpc_server_credentials_from_arg                                                         -98  [DEL]\n      [DEL]     -98 grpc_channel_credentials_from_arg                                                        -98  [DEL]\n     -12.4%     -28 [Unmapped]                                                                               -28 -12.4%\n  -3.3%    -176 src/core/lib/iomgr/tcp_server_posix.cc                                                  -176  -3.3%\n     -34.1%    -191 tcp_server_create                                                                       -191 -34.1%\n  -3.9%    -160 src/core/lib/iomgr/tcp_server_custom.cc                                                 -160  -3.9%\n     -41.6%    -159 tcp_server_create                                                                       -159 -41.6%\n      -1.1%      -1 [Unmapped]                                                                                -1  -1.1%\n  -0.5%    -156 src/core/ext/filters/client_channel/client_channel.cc                                   -156  -0.5%\n     -12.4%    -167 cc_init_channel_elem                                                                    -167 -12.4%\n      -2.1%      -9 [Unmapped]                                                                                -9  -2.1%\n  -3.5%    -112 src/core/lib/security/context/security_context.cc                                       -112  -3.5%\n      [DEL]     -98 grpc_auth_context_from_arg                                                               -98  [DEL]\n      -8.3%     -14 [Unmapped]                                                                               -14  -8.3%\n  -1.1%    -112 src/core/lib/security/security_connector/security_connector.cc                          -112  -1.2%\n      [DEL]     -98 grpc_security_connector_from_arg                                                         -98  [DEL]\n      -2.5%     -14 [Unmapped]                                                                               -14  -2.5%\n  -1.1%     -80 src/core/lib/iomgr/resource_quota.cc                                                     -80  -1.1%\n     -42.0%     -68 grpc_resource_quota_from_channel_args                                                    -68 -42.0%\n      -4.3%     -12 [Unmapped]                                                                               -12  -4.3%\n  -3.3%     -64 src/core/lib/iomgr/tcp_server_utils_posix_common.cc                                      -64  -3.3%\n      -6.9%     -62 grpc_tcp_server_prepare_socket                                                           -62  -6.9%\n      -8.3%      -2 [Unmapped]                                                                                -2  -8.3%\n  -1.5%     -48 src/core/lib/iomgr/tcp_client_posix.cc                                                   -48  -1.5%\n      -7.8%     -52 grpc_tcp_client_prepare_fd                                                               -52  -7.8%\n  -0.8%     -32 src/core/ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc             -32  -0.8%\n      -6.8%     -40 grpc_core::(anonymous namespace)::AresDnsResolverFactory::CreateResolver(grpc_core::     -40  -6.8%\n  -0.6%     -32 src/core/lib/iomgr/udp_server.cc                                                         -32  -0.6%\n      -9.3%     -21 grpc_udp_server_create                                                                   -21  -9.3%\n      -6.2%     -11 [Unmapped]                                                                               -11  -6.2%\n  -0.1%     -16 src/core/ext/transport/inproc/inproc_transport.cc                                        -16  -0.1%\n      -1.4%      -9 grpc_inproc_channel_create                                                                -9  -1.4%\n      -3.3%      -7 [Unmapped]                                                                                -7  -3.3%\n  -0.3%      -5 src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb_channel_secure.cc             -5  -0.3%\n      -0.6%      -5 grpc_lb_policy_grpclb_modify_lb_channel_args                                              -5  -0.6%\n\n -+-+-+-+-+-+-+ MIXED                                                                                +-+-+-+-+-+-+-\n  -0.3% -1.96Ki [None]                                                                               +7.31Ki  +0.1%\n      [DEL]     -32 vtable for grpc_core::RefCounted<grpc_core::FakeResolverResponseGenerator>               -32  [DEL]\n      [DEL]     -32 vtable for grpc_core::FakeResolverResponseGenerator                                      -32  [DEL]\n\n  -0.3% -4.27Ki TOTAL                                                                                +5.01Ki  +0.1%\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE              FILE SIZE\n ++++++++++++++ GROWIN ++++++++++++++\n\n -------------- SHRINK --------------\n  [ = ]       0 [None]     -40  -0.0%\n\n  [ = ]       0 TOTAL      -40  -0.0%\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/396818774",
    "html_url": "https://github.com/grpc/grpc/pull/15678#issuecomment-396818774",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15678",
    "id": 396818774,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjgxODc3NA==",
    "user": {
      "login": "ncteisen",
      "id": 6148140,
      "node_id": "MDQ6VXNlcjYxNDgxNDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6148140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ncteisen",
      "html_url": "https://github.com/ncteisen",
      "followers_url": "https://api.github.com/users/ncteisen/followers",
      "following_url": "https://api.github.com/users/ncteisen/following{/other_user}",
      "gists_url": "https://api.github.com/users/ncteisen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ncteisen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ncteisen/subscriptions",
      "organizations_url": "https://api.github.com/users/ncteisen/orgs",
      "repos_url": "https://api.github.com/users/ncteisen/repos",
      "events_url": "https://api.github.com/users/ncteisen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ncteisen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-13T05:34:45Z",
    "updated_at": "2018-06-13T05:34:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "Addressed all comments\n\n---\n\nReview status: 8 of 42 files reviewed, 5 unresolved discussions (waiting on @dgquintas, @markdroth, and @AspirinSJL)\n\n---\n\n*[src/core/ext/filters/http/client/http_client_filter.cc, line 446 at r5](https://reviewable.io/reviews/grpc/grpc/15678#-LEpzNVV09zNuWl3IFON:-LErcxLj5u0KL0sHD_JY:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/6601c2793b4d949072d33d70cff3eca46cd660c8/src/core/ext/filters/http/client/http_client_filter.cc#L446)):*\n<details><summary><i>Previously, dgquintas (David G. Quintas) wrote…</i></summary><blockquote>\n\nwhy not do the usual `for (size_t i = 0 ...` instead of declaring `i` separately? It seems that's just a relic of our former C89 codebase.\n</blockquote></details>\n\nDone.\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io/reviews/grpc/grpc/15678#-:-LErcyViBLDqhLOQMHLI:bwdyw6d)*\n<!-- Sent from Reviewable.io -->\n"
  }
]
