[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/356898656",
    "html_url": "https://github.com/grpc/grpc/issues/13962#issuecomment-356898656",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13962",
    "id": 356898656,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Njg5ODY1Ng==",
    "user": {
      "login": "Falco20019",
      "id": 940619,
      "node_id": "MDQ6VXNlcjk0MDYxOQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/940619?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Falco20019",
      "html_url": "https://github.com/Falco20019",
      "followers_url": "https://api.github.com/users/Falco20019/followers",
      "following_url": "https://api.github.com/users/Falco20019/following{/other_user}",
      "gists_url": "https://api.github.com/users/Falco20019/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Falco20019/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Falco20019/subscriptions",
      "organizations_url": "https://api.github.com/users/Falco20019/orgs",
      "repos_url": "https://api.github.com/users/Falco20019/repos",
      "events_url": "https://api.github.com/users/Falco20019/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Falco20019/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-11T10:52:12Z",
    "updated_at": "2018-01-11T10:52:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "See [health_service_end2end_test.cc](https://github.com/grpc/grpc/blob/master/test/cpp/end2end/health_service_end2end_test.cc) for an example. If you have enabled it, you should be fine. [health_service_end2end_test.cc / VerifyHealthCheckService](https://github.com/grpc/grpc/blob/master/test/cpp/end2end/health_service_end2end_test.cc#L192) shows an example verifier code you could try."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/356903539",
    "html_url": "https://github.com/grpc/grpc/issues/13962#issuecomment-356903539",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13962",
    "id": 356903539,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjkwMzUzOQ==",
    "user": {
      "login": "xiaoyulei",
      "id": 12639880,
      "node_id": "MDQ6VXNlcjEyNjM5ODgw",
      "avatar_url": "https://avatars1.githubusercontent.com/u/12639880?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xiaoyulei",
      "html_url": "https://github.com/xiaoyulei",
      "followers_url": "https://api.github.com/users/xiaoyulei/followers",
      "following_url": "https://api.github.com/users/xiaoyulei/following{/other_user}",
      "gists_url": "https://api.github.com/users/xiaoyulei/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xiaoyulei/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xiaoyulei/subscriptions",
      "organizations_url": "https://api.github.com/users/xiaoyulei/orgs",
      "repos_url": "https://api.github.com/users/xiaoyulei/repos",
      "events_url": "https://api.github.com/users/xiaoyulei/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xiaoyulei/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-11T11:11:33Z",
    "updated_at": "2018-01-11T11:11:33Z",
    "author_association": "NONE",
    "body": "@Falco20019 thanks, I saw this file yesterday, but I am still confused. After ```EnableDefaultHealthCheckService```, I saw server had enable health-checking from log, but client do nothing. I do not know client how to do about health-checking."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/356925545",
    "html_url": "https://github.com/grpc/grpc/issues/13962#issuecomment-356925545",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13962",
    "id": 356925545,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjkyNTU0NQ==",
    "user": {
      "login": "Falco20019",
      "id": 940619,
      "node_id": "MDQ6VXNlcjk0MDYxOQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/940619?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Falco20019",
      "html_url": "https://github.com/Falco20019",
      "followers_url": "https://api.github.com/users/Falco20019/followers",
      "following_url": "https://api.github.com/users/Falco20019/following{/other_user}",
      "gists_url": "https://api.github.com/users/Falco20019/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Falco20019/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Falco20019/subscriptions",
      "organizations_url": "https://api.github.com/users/Falco20019/orgs",
      "repos_url": "https://api.github.com/users/Falco20019/repos",
      "events_url": "https://api.github.com/users/Falco20019/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Falco20019/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-11T12:53:18Z",
    "updated_at": "2018-01-11T12:54:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\r\nstd::string server_address(\"0.0.0.0:50051\");\r\nconst grpc::string kHealthyService(\"healthy_service\");\r\n\r\n// Server code:\r\nEnableDefaultHealthCheckService(true);\r\nServerBuilder builder;\r\nbuilder.AddListeningPort(server_address, grpc::InsecureServerCredentials());\r\nstd::unique_ptr<Server> server(builder.BuildAndStart());\r\n\r\nHealthCheckServiceInterface* service = server->GetHealthCheckService();\r\nservice->SetServingStatus(kHealthyService, true);\r\n\r\n// Client code:\r\nHealthCheckRequest request;\r\nrequest.set_service(kHealthyService);\r\n\r\nHealthCheckResponse response;\r\nClientContext context;\r\nstd::shared_ptr<Channel> channel = CreateChannel(server_address, InsecureChannelCredentials());\r\nstd::unique_ptr<Health::Stub> hc_stub = grpc::health::v1::Health::NewStub(channel);\r\nStatus s = hc_stub->Check(&context, request, &response);\r\nEXPECT_EQ(Status::OK.error_code(), s.error_code());\r\nif (s.ok()) {\r\n\tEXPECT_EQ(HealthCheckResponse::SERVING, response.status());\r\n}\r\n\r\nserver->Shutdown();\r\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/357115989",
    "html_url": "https://github.com/grpc/grpc/issues/13962#issuecomment-357115989",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13962",
    "id": 357115989,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzExNTk4OQ==",
    "user": {
      "login": "xiaoyulei",
      "id": 12639880,
      "node_id": "MDQ6VXNlcjEyNjM5ODgw",
      "avatar_url": "https://avatars1.githubusercontent.com/u/12639880?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xiaoyulei",
      "html_url": "https://github.com/xiaoyulei",
      "followers_url": "https://api.github.com/users/xiaoyulei/followers",
      "following_url": "https://api.github.com/users/xiaoyulei/following{/other_user}",
      "gists_url": "https://api.github.com/users/xiaoyulei/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xiaoyulei/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xiaoyulei/subscriptions",
      "organizations_url": "https://api.github.com/users/xiaoyulei/orgs",
      "repos_url": "https://api.github.com/users/xiaoyulei/repos",
      "events_url": "https://api.github.com/users/xiaoyulei/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xiaoyulei/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-12T01:26:54Z",
    "updated_at": "2018-01-12T01:26:54Z",
    "author_association": "NONE",
    "body": "@Falco20019 Clients must write code to call ```Check``` manually? Not like server only ```EnableDefaultHealthCheckService```? I thought it is only a option."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/357154451",
    "html_url": "https://github.com/grpc/grpc/issues/13962#issuecomment-357154451",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13962",
    "id": 357154451,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzE1NDQ1MQ==",
    "user": {
      "login": "Falco20019",
      "id": 940619,
      "node_id": "MDQ6VXNlcjk0MDYxOQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/940619?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Falco20019",
      "html_url": "https://github.com/Falco20019",
      "followers_url": "https://api.github.com/users/Falco20019/followers",
      "following_url": "https://api.github.com/users/Falco20019/following{/other_user}",
      "gists_url": "https://api.github.com/users/Falco20019/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Falco20019/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Falco20019/subscriptions",
      "organizations_url": "https://api.github.com/users/Falco20019/orgs",
      "repos_url": "https://api.github.com/users/Falco20019/repos",
      "events_url": "https://api.github.com/users/Falco20019/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Falco20019/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-12T06:29:38Z",
    "updated_at": "2018-01-12T06:29:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "This service is meant mostly for load balancers. You can just call a client method even if the client is not there yet or if there are network problems. GRPC will block the call and retry until the client can execute the call or the deadline is defined and reached. For that you donâ€™t have to enable this option at all."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/358758105",
    "html_url": "https://github.com/grpc/grpc/issues/13962#issuecomment-358758105",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13962",
    "id": 358758105,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODc1ODEwNQ==",
    "user": {
      "login": "yang-g",
      "id": 10122250,
      "node_id": "MDQ6VXNlcjEwMTIyMjUw",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10122250?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yang-g",
      "html_url": "https://github.com/yang-g",
      "followers_url": "https://api.github.com/users/yang-g/followers",
      "following_url": "https://api.github.com/users/yang-g/following{/other_user}",
      "gists_url": "https://api.github.com/users/yang-g/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yang-g/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yang-g/subscriptions",
      "organizations_url": "https://api.github.com/users/yang-g/orgs",
      "repos_url": "https://api.github.com/users/yang-g/repos",
      "events_url": "https://api.github.com/users/yang-g/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yang-g/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-18T19:37:45Z",
    "updated_at": "2018-01-18T19:37:45Z",
    "author_association": "MEMBER",
    "body": "@YuleiXiao what do you want to achieve? Indeed the service makes more sense for load balancers and (centralized) health checkers."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/358838665",
    "html_url": "https://github.com/grpc/grpc/issues/13962#issuecomment-358838665",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13962",
    "id": 358838665,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODgzODY2NQ==",
    "user": {
      "login": "xiaoyulei",
      "id": 12639880,
      "node_id": "MDQ6VXNlcjEyNjM5ODgw",
      "avatar_url": "https://avatars1.githubusercontent.com/u/12639880?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xiaoyulei",
      "html_url": "https://github.com/xiaoyulei",
      "followers_url": "https://api.github.com/users/xiaoyulei/followers",
      "following_url": "https://api.github.com/users/xiaoyulei/following{/other_user}",
      "gists_url": "https://api.github.com/users/xiaoyulei/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xiaoyulei/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xiaoyulei/subscriptions",
      "organizations_url": "https://api.github.com/users/xiaoyulei/orgs",
      "repos_url": "https://api.github.com/users/xiaoyulei/repos",
      "events_url": "https://api.github.com/users/xiaoyulei/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xiaoyulei/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-19T01:30:31Z",
    "updated_at": "2018-01-19T01:30:31Z",
    "author_association": "NONE",
    "body": "@yang-g I thought health check can be used to check if network connection is OK"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/360551257",
    "html_url": "https://github.com/grpc/grpc/issues/13962#issuecomment-360551257",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13962",
    "id": 360551257,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDU1MTI1Nw==",
    "user": {
      "login": "yang-g",
      "id": 10122250,
      "node_id": "MDQ6VXNlcjEwMTIyMjUw",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10122250?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yang-g",
      "html_url": "https://github.com/yang-g",
      "followers_url": "https://api.github.com/users/yang-g/followers",
      "following_url": "https://api.github.com/users/yang-g/following{/other_user}",
      "gists_url": "https://api.github.com/users/yang-g/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yang-g/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yang-g/subscriptions",
      "organizations_url": "https://api.github.com/users/yang-g/orgs",
      "repos_url": "https://api.github.com/users/yang-g/repos",
      "events_url": "https://api.github.com/users/yang-g/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yang-g/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-25T18:10:22Z",
    "updated_at": "2018-01-25T18:10:22Z",
    "author_association": "MEMBER",
    "body": "@YuleiXiao \r\nYes. Probing the health check service can be a way to check the connection but it is a bit heavy weight, as it does not only check the connection is alive but also check whether the server is actively serving the rpcs and it also requires a grpc client.\r\n\r\nAssuming you are using C++ API, there are other ways you can monitor the connectivity. You may want to use the C++ channel state API e.g. https://github.com/grpc/grpc/blob/master/include/grpc++/impl/codegen/channel_interface.h#L74\r\n\r\nThere is also built-in keep-alive style checks that can be tuned with channel arguments here:\r\nhttps://github.com/grpc/grpc/blob/master/include/grpc/impl/codegen/grpc_types.h#L217\r\n\r\n"
  }
]
