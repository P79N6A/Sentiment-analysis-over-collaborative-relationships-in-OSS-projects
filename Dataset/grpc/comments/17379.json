[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/443838463",
    "html_url": "https://github.com/grpc/grpc/issues/17379#issuecomment-443838463",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17379",
    "id": 443838463,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MzgzODQ2Mw==",
    "user": {
      "login": "ericgribkoff",
      "id": 5067076,
      "node_id": "MDQ6VXNlcjUwNjcwNzY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5067076?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ericgribkoff",
      "html_url": "https://github.com/ericgribkoff",
      "followers_url": "https://api.github.com/users/ericgribkoff/followers",
      "following_url": "https://api.github.com/users/ericgribkoff/following{/other_user}",
      "gists_url": "https://api.github.com/users/ericgribkoff/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ericgribkoff/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ericgribkoff/subscriptions",
      "organizations_url": "https://api.github.com/users/ericgribkoff/orgs",
      "repos_url": "https://api.github.com/users/ericgribkoff/repos",
      "events_url": "https://api.github.com/users/ericgribkoff/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ericgribkoff/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-03T19:28:39Z",
    "updated_at": "2018-12-03T19:28:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the report. From a quick search through the google-cloud-trace library, it doesn't appear that the code there is intentionally opening a new channel for each request, but I'd like to dig into this deeper because - as seen on the related issues you've linked to - it can be hard to root cause these issues when multiple layers (client code, cloud libraries, gRPC) are all involved.\r\n\r\nWould you be able to provide a repro case for this? (you mentioned a docker container for testing) That would help a lot with figuring out where things are going wrong. If a full repro case is not feasible, could you provide your test client code along with the full output of a run with GRPC_TRACE=all and GRPC_VERBOSITY=debug? (There will be a lot of logs, but I'm not sure which tracers may be important so best to just include them all). "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/443856588",
    "html_url": "https://github.com/grpc/grpc/issues/17379#issuecomment-443856588",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17379",
    "id": 443856588,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Mzg1NjU4OA==",
    "user": {
      "login": "davewalkexpel",
      "id": 41913205,
      "node_id": "MDQ6VXNlcjQxOTEzMjA1",
      "avatar_url": "https://avatars0.githubusercontent.com/u/41913205?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davewalkexpel",
      "html_url": "https://github.com/davewalkexpel",
      "followers_url": "https://api.github.com/users/davewalkexpel/followers",
      "following_url": "https://api.github.com/users/davewalkexpel/following{/other_user}",
      "gists_url": "https://api.github.com/users/davewalkexpel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davewalkexpel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davewalkexpel/subscriptions",
      "organizations_url": "https://api.github.com/users/davewalkexpel/orgs",
      "repos_url": "https://api.github.com/users/davewalkexpel/repos",
      "events_url": "https://api.github.com/users/davewalkexpel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davewalkexpel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-03T20:22:50Z",
    "updated_at": "2018-12-03T20:22:50Z",
    "author_association": "NONE",
    "body": "@ericgribkoff thanks for the quick response!\r\n\r\nI agree, it can be difficult to debug this with so many layers. We've been pulling our hair out over this.\r\n\r\nI can't share the code with you, but basically what we're doing this:\r\n\r\n```python\r\nfrom opencensus.trace.tracer import Tracer\r\n\r\n# of note, there's only one google-cloud-trace client created\r\ntracer = Tracer(exporter=CUSTOM_EXPORTER_USING_BACKGROUND_THREAD_TRANSPORT)\r\n\r\n# below is called multiple times so we have one trace per piece of work. but it's done serially, always with the same tracer object\r\nwith tracer().span(name='span name') as span:\r\n    # do the stuff we want to trace, when we leave this indentation the context manager will close the trace\r\n```\r\n\r\nAt this point the span is appended to a `queue.Queue` and eventually will be emitted it out in batch on the background thread.\r\n\r\nAs for debug logs, I ran it for about 15 minutes as connections grew. It's a 110M and scanning through it I don't like that it includes the actual requests to Google's server and the data we're sending. Is there a way I can NOT have that included, but still give you what you'll need? And is that much data too much?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/443858577",
    "html_url": "https://github.com/grpc/grpc/issues/17379#issuecomment-443858577",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17379",
    "id": 443858577,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Mzg1ODU3Nw==",
    "user": {
      "login": "ericgribkoff",
      "id": 5067076,
      "node_id": "MDQ6VXNlcjUwNjcwNzY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5067076?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ericgribkoff",
      "html_url": "https://github.com/ericgribkoff",
      "followers_url": "https://api.github.com/users/ericgribkoff/followers",
      "following_url": "https://api.github.com/users/ericgribkoff/following{/other_user}",
      "gists_url": "https://api.github.com/users/ericgribkoff/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ericgribkoff/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ericgribkoff/subscriptions",
      "organizations_url": "https://api.github.com/users/ericgribkoff/orgs",
      "repos_url": "https://api.github.com/users/ericgribkoff/repos",
      "events_url": "https://api.github.com/users/ericgribkoff/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ericgribkoff/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-03T20:29:09Z",
    "updated_at": "2018-12-03T20:29:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the code snippet. 110M in logs is probably more than necessary :) And I'm not sure what tracers will or will not include potentially sensitive information, so I will stick with making my own local test case for this.\r\n\r\nOne question though: are you able to replicate the issue without setting `exporter=CUSTOM_EXPORTER_USING_BACKGROUND_THREAD_TRANSPORT`? E.g., by using one of the standard exports from https://github.com/census-instrumentation/opencensus-python#exporters?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/443868299",
    "html_url": "https://github.com/grpc/grpc/issues/17379#issuecomment-443868299",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17379",
    "id": 443868299,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Mzg2ODI5OQ==",
    "user": {
      "login": "davewalkexpel",
      "id": 41913205,
      "node_id": "MDQ6VXNlcjQxOTEzMjA1",
      "avatar_url": "https://avatars0.githubusercontent.com/u/41913205?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davewalkexpel",
      "html_url": "https://github.com/davewalkexpel",
      "followers_url": "https://api.github.com/users/davewalkexpel/followers",
      "following_url": "https://api.github.com/users/davewalkexpel/following{/other_user}",
      "gists_url": "https://api.github.com/users/davewalkexpel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davewalkexpel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davewalkexpel/subscriptions",
      "organizations_url": "https://api.github.com/users/davewalkexpel/orgs",
      "repos_url": "https://api.github.com/users/davewalkexpel/repos",
      "events_url": "https://api.github.com/users/davewalkexpel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davewalkexpel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-03T21:00:17Z",
    "updated_at": "2018-12-03T21:00:17Z",
    "author_association": "NONE",
    "body": "Oh good call. My tracer now is created like this, copy/pasted from the link you provided:\r\n\r\n```python\r\nfrom opencensus.trace.exporters import stackdriver_exporter\r\nfrom opencensus.trace import tracer as tracer_module\r\nfrom opencensus.trace.exporters.transports.background_thread import BackgroundThreadTransport\r\nexporter = stackdriver_exporter.StackdriverExporter(\r\n    project_id='my-project', transport=BackgroundThreadTransport)\r\ntracer = tracer_module.Tracer(exporter=exporter)\r\n```\r\n\r\nThe problem remains, unfortunately. Let me know if I can provide anything else."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/446024102",
    "html_url": "https://github.com/grpc/grpc/issues/17379#issuecomment-446024102",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17379",
    "id": 446024102,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjAyNDEwMg==",
    "user": {
      "login": "ericgribkoff",
      "id": 5067076,
      "node_id": "MDQ6VXNlcjUwNjcwNzY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5067076?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ericgribkoff",
      "html_url": "https://github.com/ericgribkoff",
      "followers_url": "https://api.github.com/users/ericgribkoff/followers",
      "following_url": "https://api.github.com/users/ericgribkoff/following{/other_user}",
      "gists_url": "https://api.github.com/users/ericgribkoff/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ericgribkoff/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ericgribkoff/subscriptions",
      "organizations_url": "https://api.github.com/users/ericgribkoff/orgs",
      "repos_url": "https://api.github.com/users/ericgribkoff/repos",
      "events_url": "https://api.github.com/users/ericgribkoff/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ericgribkoff/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-11T00:14:14Z",
    "updated_at": "2018-12-11T00:14:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "@davewalkexpel I didn't get a chance to look at this until today, and apparently I picked a good time. The latest opencensus release came out today and includes this commit https://github.com/census-instrumentation/opencensus-python/commit/d0fbdb99cd22110d2a1f1e1a9eb0a1b642b87ec0, which bumps google-cloud-trace to 0.20.1 to \"fix a memory leak\". I didn't dig into specifics of what was leaking, but from the log output it looks like each trace was creating its own gRPC channel, as you observed and reported here.\r\n\r\nBumping to opencensus==0.1.10 and google-cloud-trace==0.20.1, a single gRPC channel is correctly reused for all traces. \r\n\r\nI used the following code to test that a channel per trace was incorrectly recreated per trace using google-cloud-trace < 0.20.1, and now reusing a single gRPC channel correctly with google-cloud-trace 0.20.1. (Setting `transport=BackgroundThreadTransport` did not affect this behavior either way)\r\n\r\n```\r\nimport google.auth\r\nfrom opencensus.trace.exporters import stackdriver_exporter as stackdriver\r\nfrom opencensus.trace import tracer as tracer_module\r\n\r\ntry:\r\n  _, project_id = google.auth.default()\r\nexcept google.auth.exceptions.DefaultCredentialsError:\r\n  raise ValueError(\"Couldn't find Google Cloud credentials, set the project ID with 'gcloud set project'\")\r\n\r\nexporter = stackdriver.StackdriverExporter(project_id=project_id)\r\ntracer = tracer_module.Tracer(exporter=exporter)\r\n\r\nfor i in range(10000):\r\n  with tracer.span(name='span name') as span:\r\n    print(\"doing work!\")\r\n```\r\n\r\nI'm going to mark this closed, as it appears the problem in the upstream use of gRPC has been corrected. @davewalkexpel  Let me know if there's any thing I've missed here and I can re-open. Thanks."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/446250306",
    "html_url": "https://github.com/grpc/grpc/issues/17379#issuecomment-446250306",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17379",
    "id": 446250306,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjI1MDMwNg==",
    "user": {
      "login": "davewalkexpel",
      "id": 41913205,
      "node_id": "MDQ6VXNlcjQxOTEzMjA1",
      "avatar_url": "https://avatars0.githubusercontent.com/u/41913205?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davewalkexpel",
      "html_url": "https://github.com/davewalkexpel",
      "followers_url": "https://api.github.com/users/davewalkexpel/followers",
      "following_url": "https://api.github.com/users/davewalkexpel/following{/other_user}",
      "gists_url": "https://api.github.com/users/davewalkexpel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davewalkexpel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davewalkexpel/subscriptions",
      "organizations_url": "https://api.github.com/users/davewalkexpel/orgs",
      "repos_url": "https://api.github.com/users/davewalkexpel/repos",
      "events_url": "https://api.github.com/users/davewalkexpel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davewalkexpel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-11T15:47:16Z",
    "updated_at": "2018-12-11T15:47:16Z",
    "author_association": "NONE",
    "body": "@ericgribkoff It's funny, I was going to write a toy app for you to use but then I too saw the fix they put in. I just updated my deps and it's working correctly now, only two connections opened. Thanks for your help!"
  }
]
