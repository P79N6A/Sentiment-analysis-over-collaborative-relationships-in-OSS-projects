[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/477313624",
    "html_url": "https://github.com/grpc/grpc/pull/18547#issuecomment-477313624",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/18547",
    "id": 477313624,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NzMxMzYyNA==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-27T19:25:31Z",
    "updated_at": "2019-03-27T19:25:31Z",
    "author_association": "MEMBER",
    "body": "I'll let @apolcyn review this, but from a quick glance, this doesn't look to me like the right solution.  If the goal here is to not use the c-ares resolver when gevent is enabled, then (a) I'd like to understand why c-ares won't work in that environment, and (b) it seems like we should find a way to disable it at compile-time instead of at run-time."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/477325450",
    "html_url": "https://github.com/grpc/grpc/pull/18547#issuecomment-477325450",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/18547",
    "id": 477325450,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NzMyNTQ1MA==",
    "user": {
      "login": "lidizheng",
      "id": 7394928,
      "node_id": "MDQ6VXNlcjczOTQ5Mjg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/7394928?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lidizheng",
      "html_url": "https://github.com/lidizheng",
      "followers_url": "https://api.github.com/users/lidizheng/followers",
      "following_url": "https://api.github.com/users/lidizheng/following{/other_user}",
      "gists_url": "https://api.github.com/users/lidizheng/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lidizheng/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lidizheng/subscriptions",
      "organizations_url": "https://api.github.com/users/lidizheng/orgs",
      "repos_url": "https://api.github.com/users/lidizheng/repos",
      "events_url": "https://api.github.com/users/lidizheng/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lidizheng/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-27T20:01:29Z",
    "updated_at": "2019-03-27T20:41:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "@markdroth The reason of c-ares segfault is that the `grpc_ares_ev_driver_posix.cc` depends on `g_event_engine`. Normally, the `g_event_engine` will be initialized during `grpc_init`, but the customized IO manager don't initialize it. So, the `NULL` pointer will trigger segfault when user makes a DNS query. This error will apply to Node.js if they enable `ares` at compile time.\r\n\r\nFor Python, currently we only ship one set of binary wheels that users can switch their IO manager to `gevent` if needed. Either we disable `ares` at compile time for both native gRPC Python and `gevent` gRPC Python, or we have to ship the `gevent` gRPC Python as another PyPI package.\r\n\r\nThere are 3 options to fix this issue:\r\n1. Build a new `grpc_ares_ev_driver` that support `gevent` as IO manager which could take a lot of time.\r\n2. Set environment variable which might have strange side-effect.\r\n3. Set a global variable to prevent using custom IO manager and C-Ares at the same time."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/477338773",
    "html_url": "https://github.com/grpc/grpc/pull/18547#issuecomment-477338773",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/18547",
    "id": 477338773,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NzMzODc3Mw==",
    "user": {
      "login": "apolcyn",
      "id": 9566254,
      "node_id": "MDQ6VXNlcjk1NjYyNTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9566254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apolcyn",
      "html_url": "https://github.com/apolcyn",
      "followers_url": "https://api.github.com/users/apolcyn/followers",
      "following_url": "https://api.github.com/users/apolcyn/following{/other_user}",
      "gists_url": "https://api.github.com/users/apolcyn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apolcyn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apolcyn/subscriptions",
      "organizations_url": "https://api.github.com/users/apolcyn/orgs",
      "repos_url": "https://api.github.com/users/apolcyn/repos",
      "events_url": "https://api.github.com/users/apolcyn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apolcyn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-27T20:40:36Z",
    "updated_at": "2019-03-27T20:56:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "I agree with the comment from @lidizheng - the bug where g-event is broken on 1.19 was really somewhat of an oversight: the posix-specific code in the c-ares resolver uses the `grpc_fd_create`, `grpc_fd_orphan`, etc. APIs, and these APIs all assume that grpc is using the default posix iomgr, otherwise they just crash.\r\n\r\nAs mentioned, the way to make g-event work under c-ares would probably have to be by making some g-event specific code in the c-ares resolver, which knows how to create/read/write fd's under g-event, but that will take some time.\r\n\r\nRegarding a compile-time fix, I'd note that compile-time feature enablement is problematic for all wrapped languages, since users tend to all use the same pre-compiled binary that we ship - requiring that users compile from source to enable g-event <i>might</i> be an option, but it would add a big hurdle to what people need to do today.\r\n\r\nIMO we shouldn't be setting environment variables within the library, so I think this leaves the proposed fix as the best fix.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/477356164",
    "html_url": "https://github.com/grpc/grpc/pull/18547#issuecomment-477356164",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/18547",
    "id": 477356164,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NzM1NjE2NA==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-27T21:33:34Z",
    "updated_at": "2019-03-27T21:33:34Z",
    "author_association": "MEMBER",
    "body": "Before deciding how to handle this for gevent, we should talk with @guantaol about what the plan is for how to integrate gevent and the OSS EventManager API, since we're planning to basically replace most of the current iomgr API with the EventManager API.  Ideally, I would like to see this completely abstract away platform-specific behaviors so that c-ares doesn't need to be compiled with different code based on the platform."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/477357512",
    "html_url": "https://github.com/grpc/grpc/pull/18547#issuecomment-477357512",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/18547",
    "id": 477357512,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NzM1NzUxMg==",
    "user": {
      "login": "apolcyn",
      "id": 9566254,
      "node_id": "MDQ6VXNlcjk1NjYyNTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9566254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apolcyn",
      "html_url": "https://github.com/apolcyn",
      "followers_url": "https://api.github.com/users/apolcyn/followers",
      "following_url": "https://api.github.com/users/apolcyn/following{/other_user}",
      "gists_url": "https://api.github.com/users/apolcyn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apolcyn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apolcyn/subscriptions",
      "organizations_url": "https://api.github.com/users/apolcyn/orgs",
      "repos_url": "https://api.github.com/users/apolcyn/repos",
      "events_url": "https://api.github.com/users/apolcyn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apolcyn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-27T21:38:05Z",
    "updated_at": "2019-03-27T21:38:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "As I see, gevent basically needs to use the `grpc_custom_iomgr_init` API. Potential removal of that I think would also concern libuv, cc @murgatroid99 "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/479188823",
    "html_url": "https://github.com/grpc/grpc/pull/18547#issuecomment-479188823",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/18547",
    "id": 479188823,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTE4ODgyMw==",
    "user": {
      "login": "lidizheng",
      "id": 7394928,
      "node_id": "MDQ6VXNlcjczOTQ5Mjg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/7394928?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lidizheng",
      "html_url": "https://github.com/lidizheng",
      "followers_url": "https://api.github.com/users/lidizheng/followers",
      "following_url": "https://api.github.com/users/lidizheng/following{/other_user}",
      "gists_url": "https://api.github.com/users/lidizheng/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lidizheng/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lidizheng/subscriptions",
      "organizations_url": "https://api.github.com/users/lidizheng/orgs",
      "repos_url": "https://api.github.com/users/lidizheng/repos",
      "events_url": "https://api.github.com/users/lidizheng/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lidizheng/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-02T20:33:48Z",
    "updated_at": "2019-04-02T20:33:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "After a week, I still don't understand why the test case failed in Windows. Here is the C-Core trace:\r\n```\r\nI0402 21:17:18.890000000  3400 src/core/ext/filters/client_channel/subchannel.cc:960] Connect failed: {\"created\":\"@1554236238.890000000\",\"description\":\"connect failed: [Errno 10061] [WinError 10061] No connection could be made because the target machine actively refused it.\",\"file\":\".\\src/core/lib/iomgr/gevent_util.h\",\"file_line\":33,\"grpc_status\":14}\r\nI0402 21:17:18.890000000  3400 src/core/lib/transport/connectivity_state.cc:164] SET: 00000000019EF7E8 subchannel: CONNECTING --> TRANSIENT_FAILURE [connect_failed] error=0000000000F8B170 {\"created\":\"@1554236238.890000000\",\"description\":\"Connect Failed\",\"file\":\"src/core/ext/filters/client_channel/subchannel.cc\",\"file_line\":963,\"grpc_status\":14,\"referenced_errors\":[{\"created\":\"@1554236238.890000000\",\"description\":\"connect failed: [Errno 10061] [WinError 10061] No connection could be made because the target machine actively refused it.\",\"file\":\".\\src/core/lib/iomgr/gevent_util.h\",\"file_line\":33,\"grpc_status\":14}]}\r\n```"
  }
]
