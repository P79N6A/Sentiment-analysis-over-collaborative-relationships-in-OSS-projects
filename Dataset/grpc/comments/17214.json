[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/438775501",
    "html_url": "https://github.com/grpc/grpc/issues/17214#issuecomment-438775501",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17214",
    "id": 438775501,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODc3NTUwMQ==",
    "user": {
      "login": "lidizheng",
      "id": 7394928,
      "node_id": "MDQ6VXNlcjczOTQ5Mjg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/7394928?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lidizheng",
      "html_url": "https://github.com/lidizheng",
      "followers_url": "https://api.github.com/users/lidizheng/followers",
      "following_url": "https://api.github.com/users/lidizheng/following{/other_user}",
      "gists_url": "https://api.github.com/users/lidizheng/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lidizheng/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lidizheng/subscriptions",
      "organizations_url": "https://api.github.com/users/lidizheng/orgs",
      "repos_url": "https://api.github.com/users/lidizheng/repos",
      "events_url": "https://api.github.com/users/lidizheng/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lidizheng/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-14T18:51:16Z",
    "updated_at": "2018-11-14T18:52:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "Confirm the behavior in Python 3.4/3.7 with gRPC 1.16.0. In Python 2 the program exit properly, I presume it might due to threading behavior difference between Python 2 and Python 3."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/438818921",
    "html_url": "https://github.com/grpc/grpc/issues/17214#issuecomment-438818921",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17214",
    "id": 438818921,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODgxODkyMQ==",
    "user": {
      "login": "lidizheng",
      "id": 7394928,
      "node_id": "MDQ6VXNlcjczOTQ5Mjg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/7394928?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lidizheng",
      "html_url": "https://github.com/lidizheng",
      "followers_url": "https://api.github.com/users/lidizheng/followers",
      "following_url": "https://api.github.com/users/lidizheng/following{/other_user}",
      "gists_url": "https://api.github.com/users/lidizheng/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lidizheng/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lidizheng/subscriptions",
      "organizations_url": "https://api.github.com/users/lidizheng/orgs",
      "repos_url": "https://api.github.com/users/lidizheng/repos",
      "events_url": "https://api.github.com/users/lidizheng/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lidizheng/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-14T21:07:18Z",
    "updated_at": "2018-11-14T21:07:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "The gRPC Python will create 3 child threads for C-Core and one for server serving. In Python 3, the serving thread end, and main thread hung forever. There is a deadlock indeed.\r\n\r\nThanks to @ericgribkoff, I found the cause here is that a SHUTDOWN_TAG being added [_server.py#L757](https://github.com/grpc/grpc/blob/master/src/python/grpcio/grpc/_server.py#L757) to completion queue, but never got propagated [_server.py#L708](https://github.com/grpc/grpc/blob/master/src/python/grpcio/grpc/_server.py#L708) from C.\r\n\r\nIn Python 2\r\n```\r\n[Thread debugging using libthread_db enabled]\r\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\r\n[New Thread 0x7ffff4686700 (LWP 189534)]\r\n[New Thread 0x7ffff3e85700 (LWP 189535)]\r\n[New Thread 0x7ffff3684700 (LWP 189536)]\r\n[New Thread 0x7ffff2e83700 (LWP 189537)]\r\nTraceback (most recent call last):\r\n  File \"greeter_server.py\", line 47, in <module>\r\n    serve()\r\n  File \"greeter_server.py\", line 38, in serve\r\n    raise Exception()\r\nException\r\n[Thread 0x7ffff3684700 (LWP 189536) exited]\r\n[Thread 0x7ffff3e85700 (LWP 189535) exited]\r\n[Thread 0x7ffff4686700 (LWP 189534) exited]\r\n[Thread 0x7ffff2e83700 (LWP 189537) exited]\r\n```\r\n\r\nIn Python 3\r\n```\r\n[Thread debugging using libthread_db enabled]\r\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\r\n[New Thread 0x7ffff2505700 (LWP 190107)]\r\n[New Thread 0x7ffff1d04700 (LWP 190108)]\r\n[New Thread 0x7ffff1503700 (LWP 190109)]\r\n[New Thread 0x7ffff0d02700 (LWP 190110)]\r\nTraceback (most recent call last):\r\n  File \"greeter_server.py\", line 47, in <module>\r\n    serve()\r\n  File \"greeter_server.py\", line 38, in serve\r\n    raise Exception()\r\nException\r\n[Thread 0x7ffff0d02700 (LWP 190110) exited]\r\n```\r\n\r\nIt might related to the object destroy behavior difference between Python 2 and Python 3. Still investigating..."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/438819919",
    "html_url": "https://github.com/grpc/grpc/issues/17214#issuecomment-438819919",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17214",
    "id": 438819919,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODgxOTkxOQ==",
    "user": {
      "login": "lidizheng",
      "id": 7394928,
      "node_id": "MDQ6VXNlcjczOTQ5Mjg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/7394928?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lidizheng",
      "html_url": "https://github.com/lidizheng",
      "followers_url": "https://api.github.com/users/lidizheng/followers",
      "following_url": "https://api.github.com/users/lidizheng/following{/other_user}",
      "gists_url": "https://api.github.com/users/lidizheng/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lidizheng/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lidizheng/subscriptions",
      "organizations_url": "https://api.github.com/users/lidizheng/orgs",
      "repos_url": "https://api.github.com/users/lidizheng/repos",
      "events_url": "https://api.github.com/users/lidizheng/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lidizheng/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-14T21:10:40Z",
    "updated_at": "2018-11-14T21:10:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "Related Issue: Investigate server shutdown semantics in Cython code and possibly below #6597"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/439163940",
    "html_url": "https://github.com/grpc/grpc/issues/17214#issuecomment-439163940",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17214",
    "id": 439163940,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTE2Mzk0MA==",
    "user": {
      "login": "lidizheng",
      "id": 7394928,
      "node_id": "MDQ6VXNlcjczOTQ5Mjg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/7394928?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lidizheng",
      "html_url": "https://github.com/lidizheng",
      "followers_url": "https://api.github.com/users/lidizheng/followers",
      "following_url": "https://api.github.com/users/lidizheng/following{/other_user}",
      "gists_url": "https://api.github.com/users/lidizheng/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lidizheng/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lidizheng/subscriptions",
      "organizations_url": "https://api.github.com/users/lidizheng/orgs",
      "repos_url": "https://api.github.com/users/lidizheng/repos",
      "events_url": "https://api.github.com/users/lidizheng/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lidizheng/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-15T19:37:12Z",
    "updated_at": "2018-11-15T20:20:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "Posting related info:\r\n* One of many thread behavior difference between 2/3 https://bugs.python.org/issue31516\r\n* [PEP 442](https://www.python.org/dev/peps/pep-0442/) -- Safe object finalization\r\n* deadlocked child process after forking on pystate.c's head_mutex https://bugs.python.org/issue30395\r\n* Deadlock between GIL and pystate head_mutex. https://bugs.python.org/issue28812\r\n* deadlocked child process after forking on pystate.c's head_mutex https://bugs.python.org/issue30395"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/439403681",
    "html_url": "https://github.com/grpc/grpc/issues/17214#issuecomment-439403681",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17214",
    "id": 439403681,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTQwMzY4MQ==",
    "user": {
      "login": "attila123",
      "id": 1728046,
      "node_id": "MDQ6VXNlcjE3MjgwNDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1728046?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/attila123",
      "html_url": "https://github.com/attila123",
      "followers_url": "https://api.github.com/users/attila123/followers",
      "following_url": "https://api.github.com/users/attila123/following{/other_user}",
      "gists_url": "https://api.github.com/users/attila123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/attila123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/attila123/subscriptions",
      "organizations_url": "https://api.github.com/users/attila123/orgs",
      "repos_url": "https://api.github.com/users/attila123/repos",
      "events_url": "https://api.github.com/users/attila123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/attila123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-16T14:08:15Z",
    "updated_at": "2018-11-16T14:08:15Z",
    "author_association": "NONE",
    "body": "@lidizheng Thanks for your investigations.\r\nFor a workaround I put my application code following the starting the grpc server to a `try` + `except Exception`, and do an `os._exit()` in the `except` body, e.g. `os._exit(1)` (I found that in https://stackoverflow.com/questions/1489669/how-to-exit-the-entire-application-from-a-python-thread)."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/439493493",
    "html_url": "https://github.com/grpc/grpc/issues/17214#issuecomment-439493493",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17214",
    "id": 439493493,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTQ5MzQ5Mw==",
    "user": {
      "login": "lidizheng",
      "id": 7394928,
      "node_id": "MDQ6VXNlcjczOTQ5Mjg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/7394928?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lidizheng",
      "html_url": "https://github.com/lidizheng",
      "followers_url": "https://api.github.com/users/lidizheng/followers",
      "following_url": "https://api.github.com/users/lidizheng/following{/other_user}",
      "gists_url": "https://api.github.com/users/lidizheng/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lidizheng/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lidizheng/subscriptions",
      "organizations_url": "https://api.github.com/users/lidizheng/orgs",
      "repos_url": "https://api.github.com/users/lidizheng/repos",
      "events_url": "https://api.github.com/users/lidizheng/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lidizheng/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-16T19:01:51Z",
    "updated_at": "2018-11-16T19:02:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "@attila123 Thanks for updating. Glad to hear that there is a workaround to fix this. This issue may still need further investigation to locate the root cause of problem."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/443397724",
    "html_url": "https://github.com/grpc/grpc/issues/17214#issuecomment-443397724",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17214",
    "id": 443397724,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MzM5NzcyNA==",
    "user": {
      "login": "ericgribkoff",
      "id": 5067076,
      "node_id": "MDQ6VXNlcjUwNjcwNzY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5067076?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ericgribkoff",
      "html_url": "https://github.com/ericgribkoff",
      "followers_url": "https://api.github.com/users/ericgribkoff/followers",
      "following_url": "https://api.github.com/users/ericgribkoff/following{/other_user}",
      "gists_url": "https://api.github.com/users/ericgribkoff/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ericgribkoff/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ericgribkoff/subscriptions",
      "organizations_url": "https://api.github.com/users/ericgribkoff/orgs",
      "repos_url": "https://api.github.com/users/ericgribkoff/repos",
      "events_url": "https://api.github.com/users/ericgribkoff/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ericgribkoff/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-01T04:09:14Z",
    "updated_at": "2018-12-01T04:09:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for reporting this issue. The hang occurs because of the following interaction between the application's main thread and the daemon thread spawned by gRPC Python to poll the underlying C-Core server.\r\n\r\nIn the main thread:\r\n\r\n1. When the exception is thrown, the Python interpreter begins to shutdown. \r\n1. This triggers our [`grpc._Server.__del__()`](https://github.com/grpc/grpc/blob/5fed8e54528ca94213fec7038f56d9db91709c33/src/python/grpcio/grpc/_server.py#L830) method to be called\r\n1. This in turn calls sends [`_stop`](https://github.com/grpc/grpc/blob/5fed8e54528ca94213fec7038f56d9db91709c33/src/python/grpcio/grpc/_server.py#L749), which sends a shutdown request to the wrapped gRPC C-Core server, then [waits](https://github.com/grpc/grpc/blob/5fed8e54528ca94213fec7038f56d9db91709c33/src/python/grpcio/grpc/_server.py#L775) for that operation to complete asynchronously. \r\n\r\nThis means that program exit is blocked until the core server shutdowns and the `threading.Event` is set. This is supposed to occur by means of the daemon thread started [here](https://github.com/grpc/grpc/blob/5fed8e54528ca94213fec7038f56d9db91709c33/src/python/grpcio/grpc/_server.py#L787). However, what actually happens is the following:\r\n\r\n1. The daemon thread repeatedly [polls](https://github.com/grpc/grpc/blob/5fed8e54528ca94213fec7038f56d9db91709c33/src/python/grpcio/grpc/_server.py#L708) a completion queue, which in normal operation would soon return an event from the core server indicating that shutdown is complete\r\n1. The call from Cython into C-Core occurs [here](https://github.com/grpc/grpc/blob/master/src/python/grpcio/grpc/_cython/_cygrpc/completion_queue.pyx.pxi#L38), with the GIL released.\r\n1. The shutdown event pops out of the C-core completion queue as expected, leading to the exit of the `with nogil` block in our Cython code\r\n1. Re-acquiring the GIL means invoking [PyEval_RestoreThread](https://docs.python.org/3/c-api/init.html#c.PyEval_RestoreThread)\r\n1. ...and in particular, [this conditional](https://github.com/python/cpython/blob/989052047eea7f35da0d7ca268791b2442ee1553/Python/ceval.c#L270) which, having noticed that the interpreter is shutting down, immediately exits the thread.\r\n\r\nAs a result, the main thread hangs forever, waiting for `threading.Event.set()` from a thread that, as soon as it tries to enter back into Python code, ceases to exist. This particular CPython behavior was introduced in [this changeset](https://hg.python.org/cpython/rev/2a19d09b08f8), which explains why the example in this issue doesn't hang in Python2. However, given that the changeset fixed some serious sounding bugs with daemon threads and a shutting down interpreter, I'm not convinced that we actually *work* in this scenario even in Python2, as opposed to just getting lucky with this one particular repro case.\r\n\r\nAs with https://github.com/grpc/grpc/issues/17093, the root cause are our server deallocation methods,  blocking while waiting for a signal from threads that no longer exist. We will have a fix for this issue shortly."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/443631246",
    "html_url": "https://github.com/grpc/grpc/issues/17214#issuecomment-443631246",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17214",
    "id": 443631246,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MzYzMTI0Ng==",
    "user": {
      "login": "attila123",
      "id": 1728046,
      "node_id": "MDQ6VXNlcjE3MjgwNDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1728046?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/attila123",
      "html_url": "https://github.com/attila123",
      "followers_url": "https://api.github.com/users/attila123/followers",
      "following_url": "https://api.github.com/users/attila123/following{/other_user}",
      "gists_url": "https://api.github.com/users/attila123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/attila123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/attila123/subscriptions",
      "organizations_url": "https://api.github.com/users/attila123/orgs",
      "repos_url": "https://api.github.com/users/attila123/repos",
      "events_url": "https://api.github.com/users/attila123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/attila123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-03T08:42:34Z",
    "updated_at": "2018-12-03T08:42:34Z",
    "author_association": "NONE",
    "body": "@lidizheng @ericgribkoff thanks for your efforts."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/448334419",
    "html_url": "https://github.com/grpc/grpc/issues/17214#issuecomment-448334419",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17214",
    "id": 448334419,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODMzNDQxOQ==",
    "user": {
      "login": "ericgribkoff",
      "id": 5067076,
      "node_id": "MDQ6VXNlcjUwNjcwNzY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5067076?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ericgribkoff",
      "html_url": "https://github.com/ericgribkoff",
      "followers_url": "https://api.github.com/users/ericgribkoff/followers",
      "following_url": "https://api.github.com/users/ericgribkoff/following{/other_user}",
      "gists_url": "https://api.github.com/users/ericgribkoff/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ericgribkoff/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ericgribkoff/subscriptions",
      "organizations_url": "https://api.github.com/users/ericgribkoff/orgs",
      "repos_url": "https://api.github.com/users/ericgribkoff/repos",
      "events_url": "https://api.github.com/users/ericgribkoff/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ericgribkoff/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-18T19:08:29Z",
    "updated_at": "2018-12-18T19:08:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "The fix for this (#17444) is now merged and will be available in the next release."
  }
]
