[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/110495155",
    "html_url": "https://github.com/grpc/grpc/issues/2010#issuecomment-110495155",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/2010",
    "id": 110495155,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMDQ5NTE1NQ==",
    "user": {
      "login": "haberman",
      "id": 1270,
      "node_id": "MDQ6VXNlcjEyNzA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1270?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haberman",
      "html_url": "https://github.com/haberman",
      "followers_url": "https://api.github.com/users/haberman/followers",
      "following_url": "https://api.github.com/users/haberman/following{/other_user}",
      "gists_url": "https://api.github.com/users/haberman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haberman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haberman/subscriptions",
      "organizations_url": "https://api.github.com/users/haberman/orgs",
      "repos_url": "https://api.github.com/users/haberman/repos",
      "events_url": "https://api.github.com/users/haberman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haberman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-09T20:28:08Z",
    "updated_at": "2015-06-09T20:28:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "It's true that \"package\" does not affect the module hierarchy in Python. It is surprising, but when you fully work through all of the implications, you realize that this behavior is the only behavior that will actually work.\n\nThe necessity of this behavior derives from these two inherited constraints:\n- Python requires a 1:1 correspondence between module names and filenames.\n- Protocol Buffer codegen requires a 1:1 correspondence between `.proto` filenames and generated filenames (ie. `_pb2.py`).\n\nIf we respected \"package\", imagine that we had these two .proto files:\n\n``` protobuf\n// foo/a.proto\n\npackage mypackage;\n\nmessage M1 {}\n```\n\n``` protobuf\n// bar/a.proto\n\npackage mypackage;\n\nmessage M2 {}\n```\n\nIn the status quo, this will produce two output files `foo/a_pb2.py` and `bar/a_pb2.py`.\n\nIf we used the package name instead of the directory name, both of these files would try to generate `mypackage/a_pb2.py`!\n\nThe `package` keyword can only be respected in languages that let source files declare symbols in any namespace, regardless of the filename (eg. C++, Ruby, JavaScript, etc). In these cases, a file called `foo/a.h` can declare a symbol in the `mypackage` namespace.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/110893591",
    "html_url": "https://github.com/grpc/grpc/issues/2010#issuecomment-110893591",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/2010",
    "id": 110893591,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMDg5MzU5MQ==",
    "user": {
      "login": "soltanmm",
      "id": 4889063,
      "node_id": "MDQ6VXNlcjQ4ODkwNjM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4889063?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/soltanmm",
      "html_url": "https://github.com/soltanmm",
      "followers_url": "https://api.github.com/users/soltanmm/followers",
      "following_url": "https://api.github.com/users/soltanmm/following{/other_user}",
      "gists_url": "https://api.github.com/users/soltanmm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/soltanmm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/soltanmm/subscriptions",
      "organizations_url": "https://api.github.com/users/soltanmm/orgs",
      "repos_url": "https://api.github.com/users/soltanmm/repos",
      "events_url": "https://api.github.com/users/soltanmm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/soltanmm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-10T20:00:29Z",
    "updated_at": "2015-06-10T20:01:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "IIRC, there was some thought towards using insertion points in `*_pb2.py` files to allow multiple `.proto`s to 'generate' `mypackage/a_pb2.py`, but that would require insertion points being stabilized among other things. We're currently using insertion points for our generated GRPC code, though, and haven't yet been explicitly slapped on the wrist.\n\nThere was also some pressure from the other language subteams regarding consistency, wherein everyone else appears to be generating entirely separate files for GRPC code rather than using insertion points in the usual `protoc`-generated files.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/111302404",
    "html_url": "https://github.com/grpc/grpc/issues/2010#issuecomment-111302404",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/2010",
    "id": 111302404,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTMwMjQwNA==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-11T23:06:25Z",
    "updated_at": "2015-06-11T23:06:25Z",
    "author_association": "MEMBER",
    "body": "@tbetbetbe, would you read over @haberman's response on this issue? Does it forecast complication for the versioning behavior we discussed at the Tuesday morning meeting?\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/128875401",
    "html_url": "https://github.com/grpc/grpc/issues/2010#issuecomment-128875401",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/2010",
    "id": 128875401,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyODg3NTQwMQ==",
    "user": {
      "login": "soltanmm",
      "id": 4889063,
      "node_id": "MDQ6VXNlcjQ4ODkwNjM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4889063?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/soltanmm",
      "html_url": "https://github.com/soltanmm",
      "followers_url": "https://api.github.com/users/soltanmm/followers",
      "following_url": "https://api.github.com/users/soltanmm/following{/other_user}",
      "gists_url": "https://api.github.com/users/soltanmm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/soltanmm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/soltanmm/subscriptions",
      "organizations_url": "https://api.github.com/users/soltanmm/orgs",
      "repos_url": "https://api.github.com/users/soltanmm/repos",
      "events_url": "https://api.github.com/users/soltanmm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/soltanmm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-08T00:53:12Z",
    "updated_at": "2015-08-08T00:53:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "@haberman Would it be reasonable to enforce in the `protoc` Python plugin behavior that requires the package, if specified, to be the same as the paths along which the `.proto` files exist?\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/129240514",
    "html_url": "https://github.com/grpc/grpc/issues/2010#issuecomment-129240514",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/2010",
    "id": 129240514,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyOTI0MDUxNA==",
    "user": {
      "login": "haberman",
      "id": 1270,
      "node_id": "MDQ6VXNlcjEyNzA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1270?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haberman",
      "html_url": "https://github.com/haberman",
      "followers_url": "https://api.github.com/users/haberman/followers",
      "following_url": "https://api.github.com/users/haberman/following{/other_user}",
      "gists_url": "https://api.github.com/users/haberman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haberman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haberman/subscriptions",
      "organizations_url": "https://api.github.com/users/haberman/orgs",
      "repos_url": "https://api.github.com/users/haberman/repos",
      "events_url": "https://api.github.com/users/haberman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haberman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-09T21:08:48Z",
    "updated_at": "2015-08-09T21:08:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't think the Python generator could enforce this unless all generators did, and I think it's too late to try enforcing any kind of rule like this.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/130073337",
    "html_url": "https://github.com/grpc/grpc/issues/2010#issuecomment-130073337",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/2010",
    "id": 130073337,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMDA3MzMzNw==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-11T20:59:40Z",
    "updated_at": "2015-08-11T20:59:40Z",
    "author_association": "MEMBER",
    "body": "Despite being the individual who opened this issue... I'm not actually sure that there's a problem here. I certainly am not aware of a Beta-required need being tracked here. Do you agree @tbetbetbe?\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/134346684",
    "html_url": "https://github.com/grpc/grpc/issues/2010#issuecomment-134346684",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/2010",
    "id": 134346684,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNDM0NjY4NA==",
    "user": {
      "login": "tbetbetbe",
      "id": 9272342,
      "node_id": "MDQ6VXNlcjkyNzIzNDI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9272342?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tbetbetbe",
      "html_url": "https://github.com/tbetbetbe",
      "followers_url": "https://api.github.com/users/tbetbetbe/followers",
      "following_url": "https://api.github.com/users/tbetbetbe/following{/other_user}",
      "gists_url": "https://api.github.com/users/tbetbetbe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tbetbetbe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tbetbetbe/subscriptions",
      "organizations_url": "https://api.github.com/users/tbetbetbe/orgs",
      "repos_url": "https://api.github.com/users/tbetbetbe/repos",
      "events_url": "https://api.github.com/users/tbetbetbe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tbetbetbe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-24T19:23:05Z",
    "updated_at": "2015-08-24T19:23:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "I agree, I think we can close this.\n"
  }
]
