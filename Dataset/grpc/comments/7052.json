[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/273577499",
    "html_url": "https://github.com/grpc/grpc/issues/7052#issuecomment-273577499",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7052",
    "id": 273577499,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MzU3NzQ5OQ==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-18T19:35:42Z",
    "updated_at": "2017-01-18T19:35:42Z",
    "author_association": "MEMBER",
    "body": "See also [issue 8616](https://github.com/grpc/grpc/issues/8616) (particularly [\"The fact that gRPC Python accepts `futures.ThreadPoolExecutor objects` from applications may make this hard; we should sit down at some point and talk over how we might solve it.\"](https://github.com/grpc/grpc/issues/8616#issuecomment-273567713)) and [issue 8603](https://github.com/grpc/grpc/issues/8603).\r\n\r\nPunting from `1.1.0`; while this is a priority it doesn't seem to be an urgent priority."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/274964022",
    "html_url": "https://github.com/grpc/grpc/issues/7052#issuecomment-274964022",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7052",
    "id": 274964022,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDk2NDAyMg==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-24T22:45:56Z",
    "updated_at": "2017-01-24T22:45:56Z",
    "author_association": "MEMBER",
    "body": "Hi there, could I suggest something tighter than \"Someday\"? This is a bug, not a feature request, and it can lead to deadlock if a service implementation is particularly perverse. That said, I'm not familiar enough with futures to understand the impact of the previous comment. I'd be glad to have a discussion on this."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/277115429",
    "html_url": "https://github.com/grpc/grpc/issues/7052#issuecomment-277115429",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7052",
    "id": 277115429,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NzExNTQyOQ==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-02T23:15:39Z",
    "updated_at": "2017-02-02T23:16:14Z",
    "author_association": "MEMBER",
    "body": "@nathanielmanistaatgoogle and I discussed this. The AI is to add an optional argument to the server to specify maximum concurrent RPCs. If someone actually has a service with the requisite circular dependence, then they should specify correctly (no more than the thread limit) to make things not deadlock. This will allow this issue to be resolved without breaking the API (that allows the application to pass in a threadpool)"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/277119032",
    "html_url": "https://github.com/grpc/grpc/issues/7052#issuecomment-277119032",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7052",
    "id": 277119032,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NzExOTAzMg==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-02T23:33:07Z",
    "updated_at": "2017-02-02T23:33:07Z",
    "author_association": "MEMBER",
    "body": "Yep - this is the right action for 1.x. I'm _slightly_ inclined to think about a better API for exposing the same capability in 2.0-and-beyond, but that's far enough away that I'm not yet thinking too hard about it. I do disfavor optional arguments though, so maybe I'll get worked up enough about it to plan something."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/278785571",
    "html_url": "https://github.com/grpc/grpc/issues/7052#issuecomment-278785571",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7052",
    "id": 278785571,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODc4NTU3MQ==",
    "user": {
      "login": "therc",
      "id": 13481082,
      "node_id": "MDQ6VXNlcjEzNDgxMDgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/13481082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/therc",
      "html_url": "https://github.com/therc",
      "followers_url": "https://api.github.com/users/therc/followers",
      "following_url": "https://api.github.com/users/therc/following{/other_user}",
      "gists_url": "https://api.github.com/users/therc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/therc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/therc/subscriptions",
      "organizations_url": "https://api.github.com/users/therc/orgs",
      "repos_url": "https://api.github.com/users/therc/repos",
      "events_url": "https://api.github.com/users/therc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/therc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-09T21:51:48Z",
    "updated_at": "2017-02-09T21:51:48Z",
    "author_association": "NONE",
    "body": "This is problematic, as it can lead to a backlog of requests and prevents clients from retrying elsewhere."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/280417063",
    "html_url": "https://github.com/grpc/grpc/issues/7052#issuecomment-280417063",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7052",
    "id": 280417063,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDQxNzA2Mw==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-16T18:31:53Z",
    "updated_at": "2017-02-16T18:31:53Z",
    "author_association": "MEMBER",
    "body": "To follow up on my earlier message, an issue remains that it can be difficult for a service implementer to know for sure that his or her service doesn't involve a circular dependence somewhere down the chain of invocations."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/281399709",
    "html_url": "https://github.com/grpc/grpc/issues/7052#issuecomment-281399709",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7052",
    "id": 281399709,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MTM5OTcwOQ==",
    "user": {
      "login": "therc",
      "id": 13481082,
      "node_id": "MDQ6VXNlcjEzNDgxMDgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/13481082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/therc",
      "html_url": "https://github.com/therc",
      "followers_url": "https://api.github.com/users/therc/followers",
      "following_url": "https://api.github.com/users/therc/following{/other_user}",
      "gists_url": "https://api.github.com/users/therc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/therc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/therc/subscriptions",
      "organizations_url": "https://api.github.com/users/therc/orgs",
      "repos_url": "https://api.github.com/users/therc/repos",
      "events_url": "https://api.github.com/users/therc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/therc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-21T16:39:08Z",
    "updated_at": "2017-02-21T16:39:08Z",
    "author_association": "NONE",
    "body": "For anyone in the same boat, we tried to find the least invasive hack possible and ended up monkey patching `_handle_call()`. The gRPC thread pool has a special second pool attached to it. When the gRPC thread pool is full, we invoke `_handle_method_handler()` with a custom `RPCMethodHandler` (that returns `RESOURCE_EXHAUSTED` every time) and the second pool (since the gRPC one is full).\r\n\r\nHopefully, we can retire this hack with 1.2."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/287488595",
    "html_url": "https://github.com/grpc/grpc/issues/7052#issuecomment-287488595",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7052",
    "id": 287488595,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzQ4ODU5NQ==",
    "user": {
      "login": "kpayson64",
      "id": 18316330,
      "node_id": "MDQ6VXNlcjE4MzE2MzMw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18316330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kpayson64",
      "html_url": "https://github.com/kpayson64",
      "followers_url": "https://api.github.com/users/kpayson64/followers",
      "following_url": "https://api.github.com/users/kpayson64/following{/other_user}",
      "gists_url": "https://api.github.com/users/kpayson64/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kpayson64/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kpayson64/subscriptions",
      "organizations_url": "https://api.github.com/users/kpayson64/orgs",
      "repos_url": "https://api.github.com/users/kpayson64/repos",
      "events_url": "https://api.github.com/users/kpayson64/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kpayson64/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-17T22:38:57Z",
    "updated_at": "2017-03-17T22:38:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "This will be fixed in the upcoming 1.2.0 release."
  }
]
