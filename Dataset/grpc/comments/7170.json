[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/230842740",
    "html_url": "https://github.com/grpc/grpc/pull/7170#issuecomment-230842740",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7170",
    "id": 230842740,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMDg0Mjc0MA==",
    "user": {
      "login": "kpayson64",
      "id": 18316330,
      "node_id": "MDQ6VXNlcjE4MzE2MzMw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18316330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kpayson64",
      "html_url": "https://github.com/kpayson64",
      "followers_url": "https://api.github.com/users/kpayson64/followers",
      "following_url": "https://api.github.com/users/kpayson64/following{/other_user}",
      "gists_url": "https://api.github.com/users/kpayson64/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kpayson64/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kpayson64/subscriptions",
      "organizations_url": "https://api.github.com/users/kpayson64/orgs",
      "repos_url": "https://api.github.com/users/kpayson64/repos",
      "events_url": "https://api.github.com/users/kpayson64/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kpayson64/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-06T17:20:46Z",
    "updated_at": "2016-07-06T17:20:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "Addressed comments.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/231253710",
    "html_url": "https://github.com/grpc/grpc/pull/7170#issuecomment-231253710",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7170",
    "id": 231253710,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTI1MzcxMA==",
    "user": {
      "login": "kpayson64",
      "id": 18316330,
      "node_id": "MDQ6VXNlcjE4MzE2MzMw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18316330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kpayson64",
      "html_url": "https://github.com/kpayson64",
      "followers_url": "https://api.github.com/users/kpayson64/followers",
      "following_url": "https://api.github.com/users/kpayson64/following{/other_user}",
      "gists_url": "https://api.github.com/users/kpayson64/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kpayson64/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kpayson64/subscriptions",
      "organizations_url": "https://api.github.com/users/kpayson64/orgs",
      "repos_url": "https://api.github.com/users/kpayson64/repos",
      "events_url": "https://api.github.com/users/kpayson64/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kpayson64/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-08T01:29:44Z",
    "updated_at": "2016-07-08T01:29:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "I agree with all the points marked inline.  The reason why I chose to go with a simple `tuple` definition is to avoid forcing users to bring their own metadatum implementations, which would be required if Metadatum is abastract.  I'd prefer to just provide a concrete named tuple implementation for the user, but another option is to have a factory function.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/231469456",
    "html_url": "https://github.com/grpc/grpc/pull/7170#issuecomment-231469456",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7170",
    "id": 231469456,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTQ2OTQ1Ng==",
    "user": {
      "login": "kpayson64",
      "id": 18316330,
      "node_id": "MDQ6VXNlcjE4MzE2MzMw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18316330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kpayson64",
      "html_url": "https://github.com/kpayson64",
      "followers_url": "https://api.github.com/users/kpayson64/followers",
      "following_url": "https://api.github.com/users/kpayson64/following{/other_user}",
      "gists_url": "https://api.github.com/users/kpayson64/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kpayson64/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kpayson64/subscriptions",
      "organizations_url": "https://api.github.com/users/kpayson64/orgs",
      "repos_url": "https://api.github.com/users/kpayson64/repos",
      "events_url": "https://api.github.com/users/kpayson64/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kpayson64/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-08T20:51:21Z",
    "updated_at": "2016-07-08T22:22:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "@nathanielmanistaatgoogle \nAlthough changing Metadata to have a key, attribute values and not be a tuple is a nice addition, it would be an API breaking change and complicate client code that passes API metadata.\n\nI'm inclined to leave Metadata as a 2-tuple and have the Metadata type be purely a documentation change.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/231487929",
    "html_url": "https://github.com/grpc/grpc/pull/7170#issuecomment-231487929",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7170",
    "id": 231487929,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTQ4NzkyOQ==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-08T22:29:14Z",
    "updated_at": "2016-07-08T22:29:14Z",
    "author_association": "MEMBER",
    "body": "I think what slipped my mind when I proposed a custom type was the asymmetry that would arise from allowing applications to pass sequences-of-sequences to gRPC Python but gRPC Python passing sequences-of-Metadatums back to applications. And while I like gRPC Python doing a little extra to make things nicer for applications I generally lean against applications having to do nice things for gRPC Python, so the thought of having applications construct Metadatums to then pass to gRPC Python is unappealing in a context-free way as well as a would-be-an-API-breaking-change way.\n\nSo one option is that we could define a Metadatum type that is a sequence of length two and has \"key\" and \"value\" attributes and pass it from the library to applications and have a factory function in the API and allow but not require it to be passed from applications to gRPC Python. That might be cool. Another option would be to change nothing in code and just really tighten the language in the documentation.\n\nI'm open to either, and I'm not sure either one justifies the GA-code-complete milestone currently attached to this effort.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/231498803",
    "html_url": "https://github.com/grpc/grpc/pull/7170#issuecomment-231498803",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7170",
    "id": 231498803,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTQ5ODgwMw==",
    "user": {
      "login": "kpayson64",
      "id": 18316330,
      "node_id": "MDQ6VXNlcjE4MzE2MzMw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18316330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kpayson64",
      "html_url": "https://github.com/kpayson64",
      "followers_url": "https://api.github.com/users/kpayson64/followers",
      "following_url": "https://api.github.com/users/kpayson64/following{/other_user}",
      "gists_url": "https://api.github.com/users/kpayson64/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kpayson64/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kpayson64/subscriptions",
      "organizations_url": "https://api.github.com/users/kpayson64/orgs",
      "repos_url": "https://api.github.com/users/kpayson64/repos",
      "events_url": "https://api.github.com/users/kpayson64/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kpayson64/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-08T23:52:18Z",
    "updated_at": "2016-07-08T23:52:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think I'd like to add a glossary to our generated docs, create a good `metadata` description there, and then just link to that definition where needed.  In that spirit, I'm pushing this to GA Polish because there are no API changes.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/231818371",
    "html_url": "https://github.com/grpc/grpc/pull/7170#issuecomment-231818371",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7170",
    "id": 231818371,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTgxODM3MQ==",
    "user": {
      "login": "kpayson64",
      "id": 18316330,
      "node_id": "MDQ6VXNlcjE4MzE2MzMw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18316330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kpayson64",
      "html_url": "https://github.com/kpayson64",
      "followers_url": "https://api.github.com/users/kpayson64/followers",
      "following_url": "https://api.github.com/users/kpayson64/following{/other_user}",
      "gists_url": "https://api.github.com/users/kpayson64/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kpayson64/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kpayson64/subscriptions",
      "organizations_url": "https://api.github.com/users/kpayson64/orgs",
      "repos_url": "https://api.github.com/users/kpayson64/repos",
      "events_url": "https://api.github.com/users/kpayson64/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kpayson64/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-11T18:15:02Z",
    "updated_at": "2016-07-11T18:15:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "Adding a Metadata type doesn't seem like the best solution, so I've simply added a glossary containing the metadata description, and added a link to it each time the metadata \"type\" is used.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/231818806",
    "html_url": "https://github.com/grpc/grpc/pull/7170#issuecomment-231818806",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7170",
    "id": 231818806,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTgxODgwNg==",
    "user": {
      "login": "kpayson64",
      "id": 18316330,
      "node_id": "MDQ6VXNlcjE4MzE2MzMw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18316330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kpayson64",
      "html_url": "https://github.com/kpayson64",
      "followers_url": "https://api.github.com/users/kpayson64/followers",
      "following_url": "https://api.github.com/users/kpayson64/following{/other_user}",
      "gists_url": "https://api.github.com/users/kpayson64/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kpayson64/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kpayson64/subscriptions",
      "organizations_url": "https://api.github.com/users/kpayson64/orgs",
      "repos_url": "https://api.github.com/users/kpayson64/repos",
      "events_url": "https://api.github.com/users/kpayson64/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kpayson64/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-11T18:16:36Z",
    "updated_at": "2016-07-11T18:16:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "@nathanielmanistaatgoogle \nBack to you for review\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/232089861",
    "html_url": "https://github.com/grpc/grpc/pull/7170#issuecomment-232089861",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7170",
    "id": 232089861,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjA4OTg2MQ==",
    "user": {
      "login": "kpayson64",
      "id": 18316330,
      "node_id": "MDQ6VXNlcjE4MzE2MzMw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18316330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kpayson64",
      "html_url": "https://github.com/kpayson64",
      "followers_url": "https://api.github.com/users/kpayson64/followers",
      "following_url": "https://api.github.com/users/kpayson64/following{/other_user}",
      "gists_url": "https://api.github.com/users/kpayson64/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kpayson64/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kpayson64/subscriptions",
      "organizations_url": "https://api.github.com/users/kpayson64/orgs",
      "repos_url": "https://api.github.com/users/kpayson64/repos",
      "events_url": "https://api.github.com/users/kpayson64/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kpayson64/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-12T15:44:25Z",
    "updated_at": "2016-07-12T15:44:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "test this please\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/232092477",
    "html_url": "https://github.com/grpc/grpc/pull/7170#issuecomment-232092477",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7170",
    "id": 232092477,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjA5MjQ3Nw==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-12T15:53:05Z",
    "updated_at": "2016-07-12T15:53:05Z",
    "author_association": "MEMBER",
    "body": "Luhguhtum.\n"
  }
]
