[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/389351152",
    "html_url": "https://github.com/grpc/grpc/issues/9907#issuecomment-389351152",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9907",
    "id": 389351152,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTM1MTE1Mg==",
    "user": {
      "login": "ncteisen",
      "id": 6148140,
      "node_id": "MDQ6VXNlcjYxNDgxNDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6148140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ncteisen",
      "html_url": "https://github.com/ncteisen",
      "followers_url": "https://api.github.com/users/ncteisen/followers",
      "following_url": "https://api.github.com/users/ncteisen/following{/other_user}",
      "gists_url": "https://api.github.com/users/ncteisen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ncteisen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ncteisen/subscriptions",
      "organizations_url": "https://api.github.com/users/ncteisen/orgs",
      "repos_url": "https://api.github.com/users/ncteisen/repos",
      "events_url": "https://api.github.com/users/ncteisen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ncteisen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-15T23:57:05Z",
    "updated_at": "2018-05-15T23:57:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "As per the \"view from above\" our API, the thread that makes the synchronous call is blocked.\r\n\r\nUnder the hood, gRPC is free to implement that as it likes. We could make the calling thread be the polling thread, which would involve blocking on a syscall like `epoll_wait`. Or we could have some internal polling thread for that, which would wake up the user thread (waiting on a `gpr_mu`) when the right bytes come off the wire.\r\n\r\nThe reason I am leaving this vague is because this system has been changing a lot recently."
  }
]
