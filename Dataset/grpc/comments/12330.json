[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/328407329",
    "html_url": "https://github.com/grpc/grpc/issues/12330#issuecomment-328407329",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12330",
    "id": 328407329,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODQwNzMyOQ==",
    "user": {
      "login": "tjb1216",
      "id": 6902833,
      "node_id": "MDQ6VXNlcjY5MDI4MzM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6902833?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tjb1216",
      "html_url": "https://github.com/tjb1216",
      "followers_url": "https://api.github.com/users/tjb1216/followers",
      "following_url": "https://api.github.com/users/tjb1216/following{/other_user}",
      "gists_url": "https://api.github.com/users/tjb1216/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tjb1216/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tjb1216/subscriptions",
      "organizations_url": "https://api.github.com/users/tjb1216/orgs",
      "repos_url": "https://api.github.com/users/tjb1216/repos",
      "events_url": "https://api.github.com/users/tjb1216/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tjb1216/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-11T03:38:20Z",
    "updated_at": "2017-09-11T03:38:20Z",
    "author_association": "NONE",
    "body": "I'm interested in it, MARK!"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/328565681",
    "html_url": "https://github.com/grpc/grpc/issues/12330#issuecomment-328565681",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12330",
    "id": 328565681,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODU2NTY4MQ==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-11T15:28:00Z",
    "updated_at": "2017-09-11T15:28:00Z",
    "author_association": "MEMBER",
    "body": "I'm not sure why it's not behaving properly when you add a new backend.  You say that the balancer sent the new serverlist to the client but that the client did not receive it, but I don't see how both those statements can be true -- I think one of them must be incorrect.  Do you see the client receiving subsequent updates from the balancer in any of the other scenarios?\r\n\r\nI believe that the problem with restarting backends is the issue described in #11643, which David is currently working on fixing."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/329356287",
    "html_url": "https://github.com/grpc/grpc/issues/12330#issuecomment-329356287",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12330",
    "id": 329356287,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTM1NjI4Nw==",
    "user": {
      "login": "wuweiplus",
      "id": 3326261,
      "node_id": "MDQ6VXNlcjMzMjYyNjE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3326261?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wuweiplus",
      "html_url": "https://github.com/wuweiplus",
      "followers_url": "https://api.github.com/users/wuweiplus/followers",
      "following_url": "https://api.github.com/users/wuweiplus/following{/other_user}",
      "gists_url": "https://api.github.com/users/wuweiplus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wuweiplus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wuweiplus/subscriptions",
      "organizations_url": "https://api.github.com/users/wuweiplus/orgs",
      "repos_url": "https://api.github.com/users/wuweiplus/repos",
      "events_url": "https://api.github.com/users/wuweiplus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wuweiplus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-14T03:03:56Z",
    "updated_at": "2017-09-14T03:07:47Z",
    "author_association": "NONE",
    "body": "Thanks for addressing this.\r\n\r\n> You say that the balancer sent the new serverlist to the client but that the client did not receive it, but I don't see how both those statements can be true -- I think one of them must be incorrect.\r\n\r\nIt's better to say, the balancer wrote the new serverlist to the stream (which might be buffered), but I don't know why the client didn't receive the subsequent updates (It's a bit hard for me the read the C code in gRPC core).\r\n\r\nI've updated the implementation of the balancer that once a new backend registers, it writes the new servelist to the stream (instead of sending periodically).\r\n\r\nI ran a new test, and what I see is that the client do not receive the updates from the balancer until all the subchannels are failed.\r\n\r\nStarting with no backend, then a start up a client, it sent LoadBalanceRequest to the balancer.\r\n``` \r\nWARN[0749] [balancer] target example.52tt.local, no available endpoints\r\n```\r\nThen I started a backend, the balancer sent the new serverlist to client and the client received that, it was behaving as expected.\r\n\r\n```balancer\r\nINFO[1206] [watcher] example.52tt.local add new addr 192.168.8.80:50051\r\nDEBU[1206] [balancer] Sent server list, target example.52tt.local, sls: [ip_address:\"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\377\\377\\300\\250\\010P\" port:50051 load_balance_token:\"192.168.8.80:50051_1505356819\" ]\r\n```\r\n\r\n```client\r\nI0914 10:40:19.193187000 123145436954624 grpclb.c:1585]                Serverlist with 1 servers received\r\nI0914 10:40:19.193206000 123145436954624 grpclb.c:1592]                Serverlist[0]: [::ffff:192.168.8.80]:50051\r\nI0914 10:40:19.193260000 123145436954624 grpclb.c:588]                 Setting grpclb's state to IDLE from new RR policy 0x7f9b2e6000c0 state.\r\nI0914 10:40:19.193327000 123145436954624 grpclb.c:753]                 Pending pick about to (async) PICK from 0x7f9b2e6000c0\r\nD0914 10:40:19.193334000 123145436954624 grpclb.c:792]                 Created new Round Robin policy (0x7f9b2e6000c0)\r\nI0914 10:40:19.193347000 123145436954624 grpclb.c:588]                 Setting grpclb's state to CONNECTING from new RR policy 0x7f9b2e6000c0 state.\r\nI0914 10:40:19.193447000 123145436954624 grpclb.c:213]                 Unreffing RR 0x7f9b2e6000c0\r\nI0914 10:40:19.193455000 123145436954624 grpclb.c:588]                 Setting grpclb's state to READY from new RR policy 0x7f9b2e6000c0 state.\r\nGreeter received: Hello world 1\r\n```\r\n\r\nThen, I started a second backend, also, the balancer wrote the new serverlist to stream.\r\n```balancer\r\nINFO[1375] [watcher] example.52tt.local add new addr 192.168.8.80:50052\r\nDEBU[1375] [balancer] Sent server list, target example.52tt.local, sls: [ip_address:\"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\377\\377\\300\\250\\010P\" port:50051 load_balance_token:\"192.168.8.80:50051_1505356819\"  ip_address:\"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\377\\377\\300\\250\\010P\" port:50052 load_balance_token:\"192.168.8.80:50052_1505356988\" ]\r\n```\r\nYou see there are two backends in the serverlist.\r\nBut from the view of client, no logs about receiving new serverlist was printed, and the new backend received no requests.\r\n\r\nThen I shutdown the first backend.\r\n```balancer\r\nINFO[1545] [watcher] example.52tt.local delete addr ip_address:\"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\377\\377\\300\\250\\010P\" port:50051 load_balance_token:\"192.168.8.80:50051_1505357158\"\r\nDEBU[1545] [balancer] Sent server list, target example.52tt.local, sls: [ip_address:\"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\377\\377\\300\\250\\010P\" port:50052 load_balance_token:\"192.168.8.80:50052_1505356988\" ]\r\n```\r\n\r\nA new serverlist with 1 backend was sent, \r\nAnd this time, the client received two serverlists simultaneously (according the logs), the first one with 2 backends and the other with 1 backend.\r\n```\r\nD0914 10:46:01.646745000 123145436954624 grpclb.c:1212]                No RR policy in grpclb instance 0x7f9b2e7005d0. Adding to grpclb's pending picks\r\nI0914 10:46:01.646845000 123145436954624 grpclb.c:1585]                Serverlist with 2 servers received\r\nI0914 10:46:01.646856000 123145436954624 grpclb.c:1592]                Serverlist[0]: [::ffff:192.168.8.80]:50051\r\nI0914 10:46:01.646861000 123145436954624 grpclb.c:1592]                Serverlist[1]: [::ffff:192.168.8.80]:50052\r\nI0914 10:46:01.646916000 123145436954624 grpclb.c:588]                 Setting grpclb's state to IDLE from new RR policy 0x7f9b2e500c50 state.\r\nI0914 10:46:01.681720000 123145436954624 grpclb.c:753]                 Pending pick about to (async) PICK from 0x7f9b2e500c50\r\nD0914 10:46:01.681740000 123145436954624 grpclb.c:792]                 Created new Round Robin policy (0x7f9b2e500c50)\r\nI0914 10:46:01.681778000 123145436954624 grpclb.c:588]                 Setting grpclb's state to CONNECTING from new RR policy 0x7f9b2e500c50 state.\r\nI0914 10:46:01.681795000 123145436954624 grpclb.c:1585]                Serverlist with 1 servers received\r\nI0914 10:46:01.681802000 123145436954624 grpclb.c:1592]                Serverlist[0]: [::ffff:192.168.8.80]:50052\r\nD0914 10:46:01.681809000 123145436954624 grpclb.c:785]                 Updating Round Robin policy (0x7f9b2e500c50)\r\nI0914 10:46:01.681891000 123145436954624 subchannel.c:683]             Connect failed: {\"created\":\"@1505357161.681855000\",\"description\":\"Failed to connect to remote host: OS Error\",\"errno\":61,\"file\":\"src/core/lib/iomgr/tcp_client_posix.c\",\"file_line\":200,\"os_error\":\"Connection refused\",\"syscall\":\"connect\",\"target_address\":\"ipv4:192.168.8.80:50051\"}\r\n```\r\nAll the pending requests were sent to the second backend."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/329511716",
    "html_url": "https://github.com/grpc/grpc/issues/12330#issuecomment-329511716",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12330",
    "id": 329511716,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTUxMTcxNg==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-14T15:05:51Z",
    "updated_at": "2017-09-14T15:05:51Z",
    "author_association": "MEMBER",
    "body": "Does your client attempt to send any RPCs between the time that the balancer sends the serverlist containing the second backend and the time that you shut down the first backend?  If not, it's likely that we're not triggering any polling on the client, so it has no opportunity to read the update from the balancer.\r\n\r\nIn order to allow applications more control over thread usage, gRPC does not have its own dedicated polling thread(s); instead, we do polling opportunistically when the application calls into gRPC to (e.g.) send an RPC.  So if your client did not try to send any RPCs between the time that the balancer sent the serverlist containing the second backend and the time that the first backend was shut down, then it would not see that new serverlist until the next RPC is sent.\r\n\r\nIf this is the problem, then @y-zeng is working on a change that should fix this.  The idea is to add a timer in our timer thread that wakes up periodically and does an instantaneous poll, just to see if there's any new I/O that needs to be processed.  This would allow it to process the serverlist before the next RPC is sent."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/329598553",
    "html_url": "https://github.com/grpc/grpc/issues/12330#issuecomment-329598553",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12330",
    "id": 329598553,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTU5ODU1Mw==",
    "user": {
      "login": "y-zeng",
      "id": 17460127,
      "node_id": "MDQ6VXNlcjE3NDYwMTI3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/17460127?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/y-zeng",
      "html_url": "https://github.com/y-zeng",
      "followers_url": "https://api.github.com/users/y-zeng/followers",
      "following_url": "https://api.github.com/users/y-zeng/following{/other_user}",
      "gists_url": "https://api.github.com/users/y-zeng/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/y-zeng/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/y-zeng/subscriptions",
      "organizations_url": "https://api.github.com/users/y-zeng/orgs",
      "repos_url": "https://api.github.com/users/y-zeng/repos",
      "events_url": "https://api.github.com/users/y-zeng/events{/privacy}",
      "received_events_url": "https://api.github.com/users/y-zeng/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-14T20:24:06Z",
    "updated_at": "2017-09-14T20:24:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "@wuweiplus Could you please try it again with the head of master? We have enabled a workaround for the polling issue since b6ef6e9ff5701d15a352f38a450de2af49d19657."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/330428103",
    "html_url": "https://github.com/grpc/grpc/issues/12330#issuecomment-330428103",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12330",
    "id": 330428103,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDQyODEwMw==",
    "user": {
      "login": "wuweiplus",
      "id": 3326261,
      "node_id": "MDQ6VXNlcjMzMjYyNjE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3326261?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wuweiplus",
      "html_url": "https://github.com/wuweiplus",
      "followers_url": "https://api.github.com/users/wuweiplus/followers",
      "following_url": "https://api.github.com/users/wuweiplus/following{/other_user}",
      "gists_url": "https://api.github.com/users/wuweiplus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wuweiplus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wuweiplus/subscriptions",
      "organizations_url": "https://api.github.com/users/wuweiplus/orgs",
      "repos_url": "https://api.github.com/users/wuweiplus/repos",
      "events_url": "https://api.github.com/users/wuweiplus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wuweiplus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-19T04:45:36Z",
    "updated_at": "2017-09-19T04:45:36Z",
    "author_association": "NONE",
    "body": "@markdroth Yes, as I mentioned in the issue, the client sent a RPC every 3 seconds. But all the RPCs were sent to first backend after I start a second one, and it didn't read the update from the balancer until I shut down the first backend. I've run my tests again based on f37dfda1c3f0428995d67cb82c6fbcada7260e84 (when I submit the issue)  and f54af4832e08f317a05de909e88fdb38ace92cb0 (the latest commit before @y-zeng 's work-around). Or do I have some misuses in the test code?\r\n\r\n@y-zeng Thanks. I've tried the head of master that the client is now able to read the updates from balancer in a new thread, and the grpclb works as expected. 👍 \r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/342901404",
    "html_url": "https://github.com/grpc/grpc/issues/12330#issuecomment-342901404",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12330",
    "id": 342901404,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MjkwMTQwNA==",
    "user": {
      "login": "dgquintas",
      "id": 120217,
      "node_id": "MDQ6VXNlcjEyMDIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/120217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgquintas",
      "html_url": "https://github.com/dgquintas",
      "followers_url": "https://api.github.com/users/dgquintas/followers",
      "following_url": "https://api.github.com/users/dgquintas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgquintas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgquintas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgquintas/subscriptions",
      "organizations_url": "https://api.github.com/users/dgquintas/orgs",
      "repos_url": "https://api.github.com/users/dgquintas/repos",
      "events_url": "https://api.github.com/users/dgquintas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgquintas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-08T17:58:20Z",
    "updated_at": "2017-11-08T17:58:20Z",
    "author_association": "NONE",
    "body": "The issue seems resolved, closing."
  }
]
