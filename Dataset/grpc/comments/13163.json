[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/339817218",
    "html_url": "https://github.com/grpc/grpc/issues/13163#issuecomment-339817218",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13163",
    "id": 339817218,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTgxNzIxOA==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-26T22:17:42Z",
    "updated_at": "2017-10-26T22:17:42Z",
    "author_association": "MEMBER",
    "body": "gRPC has per-call deadline functionality that should be used to prevent this problem. An optional options object can be passed to grpc request functions before the callback (or as the last argument for requests that don't use callbacks). One of these options is `deadline`, which should be set to a `Date` object indicating at what time the call should be considered to have timed out."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/339960056",
    "html_url": "https://github.com/grpc/grpc/issues/13163#issuecomment-339960056",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13163",
    "id": 339960056,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTk2MDA1Ng==",
    "user": {
      "login": "vlindhol",
      "id": 6213477,
      "node_id": "MDQ6VXNlcjYyMTM0Nzc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6213477?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vlindhol",
      "html_url": "https://github.com/vlindhol",
      "followers_url": "https://api.github.com/users/vlindhol/followers",
      "following_url": "https://api.github.com/users/vlindhol/following{/other_user}",
      "gists_url": "https://api.github.com/users/vlindhol/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vlindhol/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vlindhol/subscriptions",
      "organizations_url": "https://api.github.com/users/vlindhol/orgs",
      "repos_url": "https://api.github.com/users/vlindhol/repos",
      "events_url": "https://api.github.com/users/vlindhol/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vlindhol/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-27T12:39:59Z",
    "updated_at": "2017-10-27T12:41:30Z",
    "author_association": "NONE",
    "body": "I see. Does grpc do something different when it comes to unreachable hosts? I mean, the usual pattern for network libraries is to immediately return an EUNREACHABLE error if the host is, well, unreachable. Does grpc do something like autoretrying, if `localhost2` would happen to suddenly come online?\r\n\r\nAlso note that if I'm trying to connect to `localhost` without a server running, grpc does return with an error immediately. What's the technical difference between an unreachable host and a reachable host that does not accept the connection, in grpc land?\r\n\r\nAnyway, thanks for the `deadline` tip! I find it very difficult reading the Node API documentation, the options object had passed me by!"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/340031366",
    "html_url": "https://github.com/grpc/grpc/issues/13163#issuecomment-340031366",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13163",
    "id": 340031366,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDAzMTM2Ng==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-27T17:15:28Z",
    "updated_at": "2017-10-27T17:15:28Z",
    "author_association": "MEMBER",
    "body": "And unreachable host in the context you're describing is what gRPC considers to be a DNS name that has not yet resolved. So, gRPC will auto-retry DNS resolution. I think you will get different results if you enter a specific non-existent IP address. A reachable host with no running server will reject the connection, which is a clear failure."
  }
]
