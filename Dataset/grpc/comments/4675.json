[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/170741302",
    "html_url": "https://github.com/grpc/grpc/issues/4675#issuecomment-170741302",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/4675",
    "id": 170741302,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDc0MTMwMg==",
    "user": {
      "login": "soltanmm",
      "id": 4889063,
      "node_id": "MDQ6VXNlcjQ4ODkwNjM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4889063?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/soltanmm",
      "html_url": "https://github.com/soltanmm",
      "followers_url": "https://api.github.com/users/soltanmm/followers",
      "following_url": "https://api.github.com/users/soltanmm/following{/other_user}",
      "gists_url": "https://api.github.com/users/soltanmm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/soltanmm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/soltanmm/subscriptions",
      "organizations_url": "https://api.github.com/users/soltanmm/orgs",
      "repos_url": "https://api.github.com/users/soltanmm/repos",
      "events_url": "https://api.github.com/users/soltanmm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/soltanmm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-12T00:22:31Z",
    "updated_at": "2016-01-12T00:22:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "@nathanielmanistaatgoogle Should we be adding the build-time-dependencies of our dependencies to our documentation, or linking to those dependencies' documentation?\n\n(although, this particular dependency at build-time for gRPC core should become a non-issue due to #4457 soon)\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/171022808",
    "html_url": "https://github.com/grpc/grpc/issues/4675#issuecomment-171022808",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/4675",
    "id": 171022808,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTAyMjgwOA==",
    "user": {
      "login": "awan1",
      "id": 6291092,
      "node_id": "MDQ6VXNlcjYyOTEwOTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/6291092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/awan1",
      "html_url": "https://github.com/awan1",
      "followers_url": "https://api.github.com/users/awan1/followers",
      "following_url": "https://api.github.com/users/awan1/following{/other_user}",
      "gists_url": "https://api.github.com/users/awan1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/awan1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/awan1/subscriptions",
      "organizations_url": "https://api.github.com/users/awan1/orgs",
      "repos_url": "https://api.github.com/users/awan1/repos",
      "events_url": "https://api.github.com/users/awan1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/awan1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-12T19:21:33Z",
    "updated_at": "2016-01-12T19:23:16Z",
    "author_association": "NONE",
    "body": "#4457 was merged into master but grpc `make` still fails after `make clean`, with the same error. \n\nAny way to manually provide the protobuf autoreconf as a work-around for now?\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/171045771",
    "html_url": "https://github.com/grpc/grpc/issues/4675#issuecomment-171045771",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/4675",
    "id": 171045771,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTA0NTc3MQ==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-12T20:33:11Z",
    "updated_at": "2016-01-12T20:33:11Z",
    "author_association": "MEMBER",
    "body": "@soltanmm: quite possibly. I suspect we'll wind up with something along the lines of \"building gRPC Python from source requires all of gRPC Core's build dependencies + all of protobuf's build dependencies + this here list of Python dependencies\". That would be workable, wouldn't it?\n\nIf the lay of the land for alpha was that we had very similar stories for working from source versus working from the distributed package but the same for GA was that working from source required a lot of tooling whereas working with the package is just a single `pip install`, that would be movement in the right direction, wouldn't it?\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/171053411",
    "html_url": "https://github.com/grpc/grpc/issues/4675#issuecomment-171053411",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/4675",
    "id": 171053411,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTA1MzQxMQ==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-12T21:02:17Z",
    "updated_at": "2016-01-12T21:02:17Z",
    "author_association": "MEMBER",
    "body": "@nathanielmanistaatgoogle: I think that list is what we end up with for working from source, and I think that's ok with me.\n\nprotoc is still ever so slightly problematic, but there is a plan for it. Let's sync up on execution this week.\n\nThe simple form of the plan is:\n\nWe build a new python module 'grpcio-protoc'.\nWithin the egg containing this module (the egg might just be grpcio) we include {protoc, grpc_python_plugin} binaries for {linux, mac, windows} x {32-bit, 64-bit}.\nThe module itself will look something like:\n\n``` python\nimport os\nimport platform\nimport sys\n\nmy_path = os.path.dirname(sys.argv[0])\nsystem_name = platform.system() # Linux, Windows, etc\nmachine_name = platform.machine()\nos.execv('%s/%s-%s/protoc\" %  (my_path, system_name, machine_name), sys.argv[1:])\n```\n\nThe extended form is:\n\nAs above, but with the protoc and grpc_python_plugin modules separated along the protobuf/grpc boundaries.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/171133153",
    "html_url": "https://github.com/grpc/grpc/issues/4675#issuecomment-171133153",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/4675",
    "id": 171133153,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTEzMzE1Mw==",
    "user": {
      "login": "soltanmm",
      "id": 4889063,
      "node_id": "MDQ6VXNlcjQ4ODkwNjM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4889063?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/soltanmm",
      "html_url": "https://github.com/soltanmm",
      "followers_url": "https://api.github.com/users/soltanmm/followers",
      "following_url": "https://api.github.com/users/soltanmm/following{/other_user}",
      "gists_url": "https://api.github.com/users/soltanmm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/soltanmm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/soltanmm/subscriptions",
      "organizations_url": "https://api.github.com/users/soltanmm/orgs",
      "repos_url": "https://api.github.com/users/soltanmm/repos",
      "events_url": "https://api.github.com/users/soltanmm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/soltanmm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-13T02:15:53Z",
    "updated_at": "2016-01-13T02:15:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "@awan1 Oh, I meant that it'd be fixed via invoking `make` no longer being necessary. Except that the aforementioned PR missed a spot (by failing instead of warning on a missing protobuf dependency), and _that_'ll be addressed in #4684. Sorry about the confusion!\n\nAlthough, to be clearer still, none of that addresses the protoc plugin story, which we'll be addressing one way or another soon.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/171431943",
    "html_url": "https://github.com/grpc/grpc/issues/4675#issuecomment-171431943",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/4675",
    "id": 171431943,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTQzMTk0Mw==",
    "user": {
      "login": "soltanmm",
      "id": 4889063,
      "node_id": "MDQ6VXNlcjQ4ODkwNjM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4889063?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/soltanmm",
      "html_url": "https://github.com/soltanmm",
      "followers_url": "https://api.github.com/users/soltanmm/followers",
      "following_url": "https://api.github.com/users/soltanmm/following{/other_user}",
      "gists_url": "https://api.github.com/users/soltanmm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/soltanmm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/soltanmm/subscriptions",
      "organizations_url": "https://api.github.com/users/soltanmm/orgs",
      "repos_url": "https://api.github.com/users/soltanmm/repos",
      "events_url": "https://api.github.com/users/soltanmm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/soltanmm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-13T21:04:27Z",
    "updated_at": "2016-01-13T21:04:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ctiller @nathanielmanistaatgoogle Just a note: [we've considered adding protoc plugin stuff into a PyPI package before](https://github.com/grpc/grpc/issues/1149#issuecomment-126441367). I'm for it; it also gives us a meaningful place to provide an accessible custom `distutils`/`setuptools` command to generate gRPC `.py`s from `.proto`s.\n\nThat said, I'm a bit iffy on dropping in executables and circumventing the usual PyPI distribution of sources or wheels from `setuptools`<sup>1</sup>.\n\n<sup>1</sup><sub><sup>Wheels replaced eggs as the preferred package format for binaries a while ago.</sup></sub>\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/171517774",
    "html_url": "https://github.com/grpc/grpc/issues/4675#issuecomment-171517774",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/4675",
    "id": 171517774,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTUxNzc3NA==",
    "user": {
      "login": "awan1",
      "id": 6291092,
      "node_id": "MDQ6VXNlcjYyOTEwOTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/6291092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/awan1",
      "html_url": "https://github.com/awan1",
      "followers_url": "https://api.github.com/users/awan1/followers",
      "following_url": "https://api.github.com/users/awan1/following{/other_user}",
      "gists_url": "https://api.github.com/users/awan1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/awan1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/awan1/subscriptions",
      "organizations_url": "https://api.github.com/users/awan1/orgs",
      "repos_url": "https://api.github.com/users/awan1/repos",
      "events_url": "https://api.github.com/users/awan1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/awan1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-14T03:16:51Z",
    "updated_at": "2016-01-14T03:16:51Z",
    "author_association": "NONE",
    "body": "Thanks to @soltanmm's advice, I fixed this by building autoconf from source, using [this gist comment](https://gist.github.com/jellybeansoup/4192307#gistcomment-957137):\n\n```\ncurl -OL http://ftpmirror.gnu.org/autoconf/autoconf-latest.tar.gz\ntar xzf autoconf-latest.tar.gz\ncd autoconf-*\n./configure --prefix=/usr/local\nmake\nsudo make install\ncd ..\nrm -r autoconf-*\n```\n\nI didn't think to check until after but apparently `brew install autoconf automake` should've done the trick too. \n\nEither way, `make` in the `grpc` directory succeeds now. And when `protoc` and `protobuf` are included in core (did I get that right?), this won't be a problem, I believe. \n\nI'll close this for now, as `make` succeeds. \n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/171522338",
    "html_url": "https://github.com/grpc/grpc/issues/4675#issuecomment-171522338",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/4675",
    "id": 171522338,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTUyMjMzOA==",
    "user": {
      "login": "soltanmm",
      "id": 4889063,
      "node_id": "MDQ6VXNlcjQ4ODkwNjM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4889063?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/soltanmm",
      "html_url": "https://github.com/soltanmm",
      "followers_url": "https://api.github.com/users/soltanmm/followers",
      "following_url": "https://api.github.com/users/soltanmm/following{/other_user}",
      "gists_url": "https://api.github.com/users/soltanmm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/soltanmm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/soltanmm/subscriptions",
      "organizations_url": "https://api.github.com/users/soltanmm/orgs",
      "repos_url": "https://api.github.com/users/soltanmm/repos",
      "events_url": "https://api.github.com/users/soltanmm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/soltanmm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-14T04:00:32Z",
    "updated_at": "2016-01-14T04:00:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "> And when protoc and protobuf are included in core (did I get that right?), this won't be a problem, I believe.\n\nWell, not quite. We're thinking about including `protoc` and gRPC's `protoc` plugins in another Python package, and protobuf in Python may become an optional dependency to gRPC Python. The gRPC core is getting integrated into gRPC's Python package come 0.12.\n"
  }
]
