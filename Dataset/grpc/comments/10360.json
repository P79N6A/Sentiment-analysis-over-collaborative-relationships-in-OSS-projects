[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/290742055",
    "html_url": "https://github.com/grpc/grpc/pull/10360#issuecomment-290742055",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10360",
    "id": 290742055,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDc0MjA1NQ==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-31T15:20:41Z",
    "updated_at": "2017-03-31T15:20:41Z",
    "author_association": "MEMBER",
    "body": "Thanks for doing this!\n\nAre we going to delete test/cpp/grpclb/grpclb_test.cc, now that we've got a new test?  Or is there still code in the original that isn't covered by the new one?\n\n---\n\nReviewed 11 of 11 files at r1.\nReview status: all files reviewed at latest revision, 9 unresolved discussions, some commit checks failed.\n\n---\n\n*[test/cpp/end2end/grpclb_end2end_test.cc, line 124 at r1](https://reviewable.io:443/reviews/grpc/grpc/10360#-KgZsSUkBCWik1jAVUKY:-KgZrfcprPZc8dVIumAJ:b-78tjjl) ([raw file](https://github.com/grpc/grpc/blob/a2f879adf45914efd1c4a39712bb4adca4011f28/test/cpp/end2end/grpclb_end2end_test.cc#L124)):*\n> ```cpp\n>   }\n> \n>   int request_count() override {\n> ```\n\nSuggest moving these two methods into the `CountedService` class, since they're used by both subclasses.\n\nWe could also add utility functions for incrementing the counts, which would simplify the code in the subclasses.\n\n---\n\n*[test/cpp/end2end/grpclb_end2end_test.cc, line 151 at r1](https://reviewable.io:443/reviews/grpc/grpc/10360#-KgZqqPzGVq6GyaPGfUj:-KgZqqPzGVq6GyaPGfUk:blnzkgt) ([raw file](https://github.com/grpc/grpc/blob/a2f879adf45914efd1c4a39712bb4adca4011f28/test/cpp/end2end/grpclb_end2end_test.cc#L151)):*\n> ```cpp\n>       : request_count_(0), response_count_(0), shutdown_(false) {}\n> \n>   using Stream = ServerReaderWriter<LoadBalanceResponse, LoadBalanceRequest>;\n> ```\n\nPlease put all typedefs ahead of methods (including the ctor), as per the style guide.\n\nhttps://google.github.io/styleguide/cppguide.html#Declaration_Order\n\n---\n\n*[test/cpp/end2end/grpclb_end2end_test.cc, line 161 at r1](https://reviewable.io:443/reviews/grpc/grpc/10360#-KgZq_PFu0OnV3344Acr:-KgZq_PFu0OnV3344Acs:b-mvxdoz) ([raw file](https://github.com/grpc/grpc/blob/a2f879adf45914efd1c4a39712bb4adca4011f28/test/cpp/end2end/grpclb_end2end_test.cc#L161)):*\n> ```cpp\n>     gpr_log(GPR_INFO, \"LB: recv msg '%s'\", request.DebugString().c_str());\n> \n>     decltype(responses_and_delays_) responses_and_delays;\n> ```\n\nI generally dislike using `decltype()`.  Suggest using a typedef instead.\n\n---\n\n*[test/cpp/end2end/grpclb_end2end_test.cc, line 185 at r1](https://reviewable.io:443/reviews/grpc/grpc/10360#-KgZqlCNwV1LI7tegJJ0:-KgZqlCNwV1LI7tegJJ1:bvde4ia) ([raw file](https://github.com/grpc/grpc/blob/a2f879adf45914efd1c4a39712bb4adca4011f28/test/cpp/end2end/grpclb_end2end_test.cc#L185)):*\n> ```cpp\n> \n>   void add_response(const LoadBalanceResponse& response, int send_after_ms) {\n>     {\n> ```\n\nNo need for the inner scope here.\n\n---\n\n*[test/cpp/end2end/grpclb_end2end_test.cc, line 192 at r1](https://reviewable.io:443/reviews/grpc/grpc/10360#-KgZqmr1cZi9vu1F6GAE:-KgZqmr1cZi9vu1F6GAF:bvde4ia) ([raw file](https://github.com/grpc/grpc/blob/a2f879adf45914efd1c4a39712bb4adca4011f28/test/cpp/end2end/grpclb_end2end_test.cc#L192)):*\n> ```cpp\n> \n>   void Shutdown() {\n>     {\n> ```\n\nNo need for the inner scope here.\n\n---\n\n*[test/cpp/end2end/grpclb_end2end_test.cc, line 221 at r1](https://reviewable.io:443/reviews/grpc/grpc/10360#-KgZsUT2tTU-e4RjkjH9:-KgZsUT2tTU-e4RjkjHA:b-yebe5g) ([raw file](https://github.com/grpc/grpc/blob/a2f879adf45914efd1c4a39712bb4adca4011f28/test/cpp/end2end/grpclb_end2end_test.cc#L221)):*\n> ```cpp\n>       std::unique_lock<std::mutex> lock(mu_);\n>       ++response_count_;\n>       if (shutdown_) return;\n> ```\n\nThis probably isn't needed, since we're at the end of the function anyway -- i.e., we'll return regardless of the value of `shutdown_`.\n\n---\n\n*[test/cpp/end2end/grpclb_end2end_test.cc, line 255 at r1](https://reviewable.io:443/reviews/grpc/grpc/10360#-KgZtjwvcu9oVWEXxyxs:-KgZtjwwFTaXlcDYuesg:b-awtw85) ([raw file](https://github.com/grpc/grpc/blob/a2f879adf45914efd1c4a39712bb4adca4011f28/test/cpp/end2end/grpclb_end2end_test.cc#L255)):*\n> ```cpp\n> \n>     ChannelArguments args;\n>     args.SetLoadBalancingPolicyName(\"grpclb\");\n> ```\n\nI think this shouldn't be needed, because the resolver will be returning balancer addresses, so we'll select grpclb anyway.  And as per the changes described in #10258, grpclb shouldn't be a valid choice here anyway.\n\n---\n\n*[test/cpp/end2end/grpclb_end2end_test.cc, line 305 at r1](https://reviewable.io:443/reviews/grpc/grpc/10360#-KgZvGZOygbtqYZIZ5fM:-KgZvGZOygbtqYZIZ5fN:b-mvyeuv) ([raw file](https://github.com/grpc/grpc/blob/a2f879adf45914efd1c4a39712bb4adca4011f28/test/cpp/end2end/grpclb_end2end_test.cc#L305)):*\n>       ClientContext context;\n>       context.set_deadline(deadline);\n\nCould just declare this once, outside the loop, since we're going to use the same value for every RPC.  (Or is it not okay to reuse a `ClientContext` object for multiple RPCs?)\n\n---\n\n*[test/cpp/end2end/grpclb_end2end_test.cc, line 358 at r1](https://reviewable.io:443/reviews/grpc/grpc/10360#-KgZveOBcjFTB3MYIbAI:-KgZveOBcjFTB3MYIbAJ:b-cms8jq) ([raw file](https://github.com/grpc/grpc/blob/a2f879adf45914efd1c4a39712bb4adca4011f28/test/cpp/end2end/grpclb_end2end_test.cc#L358)):*\n>   const size_t num_backends_;\n>   const size_t num_balancers_;\n\nI don't think these are needed.  Instead, we can use `backends_.size()` and `balancers_.size()`.\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/10360#-:-KgZwkIH4QpAqJCUAe6U:bngnw7p)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/293467758",
    "html_url": "https://github.com/grpc/grpc/pull/10360#issuecomment-293467758",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10360",
    "id": 293467758,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzQ2Nzc1OA==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-12T03:58:26Z",
    "updated_at": "2017-04-12T03:58:26Z",
    "author_association": "NONE",
    "body": "```\nNo significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/296830357",
    "html_url": "https://github.com/grpc/grpc/pull/10360#issuecomment-296830357",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10360",
    "id": 296830357,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NjgzMDM1Nw==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-24T21:41:09Z",
    "updated_at": "2017-04-24T21:41:09Z",
    "author_association": "MEMBER",
    "body": "This looks pretty good.  All of my remaining comments are minor.\n\nWould still like an answer to my earlier question about whether or not this is intended to replace test/cpp/grpclb/grpclb_test.cc.\n\nThanks!\n\n---\n\nReviewed 9 of 11 files at r2, 1 of 1 files at r3.\nReview status: all files reviewed at latest revision, 5 unresolved discussions, some commit checks failed.\n\n---\n\n*[test/cpp/end2end/grpclb_end2end_test.cc, line 151 at r1](https://reviewable.io:443/reviews/grpc/grpc/10360#-KgZqqPzGVq6GyaPGfUj:-KiWrwAY5aYlp0z9fViW:b34yy9a) ([raw file](https://github.com/grpc/grpc/blob/a2f879adf45914efd1c4a39712bb4adca4011f28/test/cpp/end2end/grpclb_end2end_test.cc#L151)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nPlease put all typedefs ahead of methods (including the ctor), as per the style guide.\n\nhttps://google.github.io/styleguide/cppguide.html#Declaration_Order\n</blockquote></details>\n\nThe typedefs should still be in the class, just listed ahead of the ctor.\n\n---\n\n*[test/cpp/end2end/grpclb_end2end_test.cc, line 305 at r1](https://reviewable.io:443/reviews/grpc/grpc/10360#-KgZvGZOygbtqYZIZ5fM:-KiWtalpHw_pBDXAyYLP:b3f9jih) ([raw file](https://github.com/grpc/grpc/blob/a2f879adf45914efd1c4a39712bb4adca4011f28/test/cpp/end2end/grpclb_end2end_test.cc#L305)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\n>       ClientContext context;\n>       context.set_deadline(deadline);\n\nCould just declare this once, outside the loop, since we're going to use the same value for every RPC.  (Or is it not okay to reuse a `ClientContext` object for multiple RPCs?)\n</blockquote></details>\n\nDoesn't look like this was addressed.\n\n---\n\n*[test/cpp/end2end/grpclb_end2end_test.cc, line 358 at r1](https://reviewable.io:443/reviews/grpc/grpc/10360#-KgZveOBcjFTB3MYIbAI:-KiWtfkeoPVcI2bvBxgz:b3f9jih) ([raw file](https://github.com/grpc/grpc/blob/a2f879adf45914efd1c4a39712bb4adca4011f28/test/cpp/end2end/grpclb_end2end_test.cc#L358)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\n>   const size_t num_backends_;\n>   const size_t num_balancers_;\n\nI don't think these are needed.  Instead, we can use `backends_.size()` and `balancers_.size()`.\n</blockquote></details>\n\nDoesn't look like this was addressed.\n\n---\n\n*[test/cpp/end2end/grpclb_end2end_test.cc, line 272 at r3](https://reviewable.io:443/reviews/grpc/grpc/10360#-KiWsz4C9SHFqr6ClIVH:-KiWsz4C9SHFqr6ClIVI:b-511h94) ([raw file](https://github.com/grpc/grpc/blob/cc503765d9ce0b3720cee6d83ae18805857bc196/test/cpp/end2end/grpclb_end2end_test.cc#L272)):*\n> ```cpp\n>     grpc_exec_ctx exec_ctx = GRPC_EXEC_CTX_INIT;\n>     grpc_lb_addresses* addresses =\n>         grpc_lb_addresses_create(address_data.size(), NULL);\n> ```\n\nAll of the `NULL`s in this file should probably be `nullptr`s instead.\n\n---\n\n*[test/cpp/end2end/grpclb_end2end_test.cc, line 286 at r3](https://reviewable.io:443/reviews/grpc/grpc/10360#-KiWtPQ7ZeUJ_TUnsvP1:-KiWtPQ7ZeUJ_TUnsvP2:b-khadc) ([raw file](https://github.com/grpc/grpc/blob/cc503765d9ce0b3720cee6d83ae18805857bc196/test/cpp/end2end/grpclb_end2end_test.cc#L286)):*\n>     grpc_channel_args* fake_result =\n>         grpc_channel_args_copy_and_add(NULL, &fake_addresses, 1);\n\nIn this case, you can just say the following:\n\n```\ngrpc_channel_args fake_result = {&fake_addresses, 1};\n```\n\nThat way, there's no need to destroy it a few lines below.\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/10360#-:-KiWu4iDVrCxPO3ZyHXT:bht01ra)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/296845639",
    "html_url": "https://github.com/grpc/grpc/pull/10360#issuecomment-296845639",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10360",
    "id": 296845639,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5Njg0NTYzOQ==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-24T23:01:55Z",
    "updated_at": "2017-04-24T23:01:55Z",
    "author_association": "NONE",
    "body": "```\nNo significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/297492868",
    "html_url": "https://github.com/grpc/grpc/pull/10360#issuecomment-297492868",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10360",
    "id": 297492868,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzQ5Mjg2OA==",
    "user": {
      "login": "dgquintas",
      "id": 120217,
      "node_id": "MDQ6VXNlcjEyMDIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/120217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgquintas",
      "html_url": "https://github.com/dgquintas",
      "followers_url": "https://api.github.com/users/dgquintas/followers",
      "following_url": "https://api.github.com/users/dgquintas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgquintas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgquintas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgquintas/subscriptions",
      "organizations_url": "https://api.github.com/users/dgquintas/orgs",
      "repos_url": "https://api.github.com/users/dgquintas/repos",
      "events_url": "https://api.github.com/users/dgquintas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgquintas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-26T18:01:05Z",
    "updated_at": "2017-04-26T18:01:05Z",
    "author_association": "NONE",
    "body": "\n\n\n\nReview status: all files reviewed at latest revision, 10 unresolved discussions, some commit checks failed.\n\n---\n\n*[test/cpp/end2end/grpclb_end2end_test.cc, line 124 at r1](https://reviewable.io:443/reviews/grpc/grpc/10360#-KgZsSUkBCWik1jAVUKY:-KifNIlieND3A03uj0-G:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/a2f879adf45914efd1c4a39712bb4adca4011f28/test/cpp/end2end/grpclb_end2end_test.cc#L124)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nSuggest moving these two methods into the `CountedService` class, since they're used by both subclasses.\n\nWe could also add utility functions for incrementing the counts, which would simplify the code in the subclasses.\n</blockquote></details>\n\nDone.\n\n---\n\n*[test/cpp/end2end/grpclb_end2end_test.cc, line 151 at r1](https://reviewable.io:443/reviews/grpc/grpc/10360#-KgZqqPzGVq6GyaPGfUj:-KifNGwaxswwKKWnYkoK:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/a2f879adf45914efd1c4a39712bb4adca4011f28/test/cpp/end2end/grpclb_end2end_test.cc#L151)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nThe typedefs should still be in the class, just listed ahead of the ctor.\n</blockquote></details>\n\nDone.\n\n---\n\n*[test/cpp/end2end/grpclb_end2end_test.cc, line 161 at r1](https://reviewable.io:443/reviews/grpc/grpc/10360#-KgZq_PFu0OnV3344Acr:-KifNKAEEIYLvUCL_Z9A:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/a2f879adf45914efd1c4a39712bb4adca4011f28/test/cpp/end2end/grpclb_end2end_test.cc#L161)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nI generally dislike using `decltype()`.  Suggest using a typedef instead.\n</blockquote></details>\n\nDone.\n\n---\n\n*[test/cpp/end2end/grpclb_end2end_test.cc, line 185 at r1](https://reviewable.io:443/reviews/grpc/grpc/10360#-KgZqlCNwV1LI7tegJJ0:-KifNLgApZZLPfle2Rvf:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/a2f879adf45914efd1c4a39712bb4adca4011f28/test/cpp/end2end/grpclb_end2end_test.cc#L185)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nNo need for the inner scope here.\n</blockquote></details>\n\nDone.\n\n---\n\n*[test/cpp/end2end/grpclb_end2end_test.cc, line 192 at r1](https://reviewable.io:443/reviews/grpc/grpc/10360#-KgZqmr1cZi9vu1F6GAE:-KifNMFq59b87KgGGgCK:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/a2f879adf45914efd1c4a39712bb4adca4011f28/test/cpp/end2end/grpclb_end2end_test.cc#L192)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nNo need for the inner scope here.\n</blockquote></details>\n\nDone.\n\n---\n\n*[test/cpp/end2end/grpclb_end2end_test.cc, line 221 at r1](https://reviewable.io:443/reviews/grpc/grpc/10360#-KgZsUT2tTU-e4RjkjH9:-KifNO_CFRb3GKcHu1jG:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/a2f879adf45914efd1c4a39712bb4adca4011f28/test/cpp/end2end/grpclb_end2end_test.cc#L221)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nThis probably isn't needed, since we're at the end of the function anyway -- i.e., we'll return regardless of the value of `shutdown_`.\n</blockquote></details>\n\nDone.\n\n---\n\n*[test/cpp/end2end/grpclb_end2end_test.cc, line 305 at r1](https://reviewable.io:443/reviews/grpc/grpc/10360#-KgZvGZOygbtqYZIZ5fM:-KifNlnvOPENHwwK0gEY:bvan7gp) ([raw file](https://github.com/grpc/grpc/blob/a2f879adf45914efd1c4a39712bb4adca4011f28/test/cpp/end2end/grpclb_end2end_test.cc#L305)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nDoesn't look like this was addressed.\n</blockquote></details>\n\nIt shouldn't be reused.\n\n---\n\n*[test/cpp/end2end/grpclb_end2end_test.cc, line 358 at r1](https://reviewable.io:443/reviews/grpc/grpc/10360#-KgZveOBcjFTB3MYIbAI:-KifPEgSvhYNY6uCHdW2:b-htiv9p) ([raw file](https://github.com/grpc/grpc/blob/a2f879adf45914efd1c4a39712bb4adca4011f28/test/cpp/end2end/grpclb_end2end_test.cc#L358)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nDoesn't look like this was addressed.\n</blockquote></details>\n\nWe need these: they are set in the constructor and consumed in SetUp(). Once we have them, we may as well use them.\n\n---\n\n*[test/cpp/end2end/grpclb_end2end_test.cc, line 272 at r3](https://reviewable.io:443/reviews/grpc/grpc/10360#-KiWsz4C9SHFqr6ClIVH:-KifNY6XJ-PdMpEJImaB:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/cc503765d9ce0b3720cee6d83ae18805857bc196/test/cpp/end2end/grpclb_end2end_test.cc#L272)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nAll of the `NULL`s in this file should probably be `nullptr`s instead.\n</blockquote></details>\n\nDone.\n\n---\n\n*[test/cpp/end2end/grpclb_end2end_test.cc, line 286 at r3](https://reviewable.io:443/reviews/grpc/grpc/10360#-KiWtPQ7ZeUJ_TUnsvP1:-KifNkPuFEtK-D5byd2a:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/cc503765d9ce0b3720cee6d83ae18805857bc196/test/cpp/end2end/grpclb_end2end_test.cc#L286)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\n>     grpc_channel_args* fake_result =\n>         grpc_channel_args_copy_and_add(NULL, &fake_addresses, 1);\n\nIn this case, you can just say the following:\n\n```\ngrpc_channel_args fake_result = {&fake_addresses, 1};\n```\n\nThat way, there's no need to destroy it a few lines below.\n</blockquote></details>\n\nDone.\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/10360)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/297498720",
    "html_url": "https://github.com/grpc/grpc/pull/10360#issuecomment-297498720",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10360",
    "id": 297498720,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzQ5ODcyMA==",
    "user": {
      "login": "dgquintas",
      "id": 120217,
      "node_id": "MDQ6VXNlcjEyMDIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/120217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgquintas",
      "html_url": "https://github.com/dgquintas",
      "followers_url": "https://api.github.com/users/dgquintas/followers",
      "following_url": "https://api.github.com/users/dgquintas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgquintas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgquintas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgquintas/subscriptions",
      "organizations_url": "https://api.github.com/users/dgquintas/orgs",
      "repos_url": "https://api.github.com/users/dgquintas/repos",
      "events_url": "https://api.github.com/users/dgquintas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgquintas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-26T18:22:58Z",
    "updated_at": "2017-04-26T18:22:58Z",
    "author_association": "NONE",
    "body": "WRT your question: yes, this is intended to replace grpclb_test.cc "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/297509390",
    "html_url": "https://github.com/grpc/grpc/pull/10360#issuecomment-297509390",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10360",
    "id": 297509390,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzUwOTM5MA==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-26T19:01:35Z",
    "updated_at": "2017-04-26T19:01:35Z",
    "author_association": "MEMBER",
    "body": "\n\n\n\nReviewed 1 of 1 files at r4.\nReview status: all files reviewed at latest revision, all discussions resolved.\n\n---\n\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/10360)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/297509615",
    "html_url": "https://github.com/grpc/grpc/pull/10360#issuecomment-297509615",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10360",
    "id": 297509615,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzUwOTYxNQ==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-26T19:02:27Z",
    "updated_at": "2017-04-26T19:02:27Z",
    "author_association": "MEMBER",
    "body": "If this fully replaces the old grpclb_test.cc, should we remove it in this PR?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/297529269",
    "html_url": "https://github.com/grpc/grpc/pull/10360#issuecomment-297529269",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10360",
    "id": 297529269,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzUyOTI2OQ==",
    "user": {
      "login": "dgquintas",
      "id": 120217,
      "node_id": "MDQ6VXNlcjEyMDIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/120217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgquintas",
      "html_url": "https://github.com/dgquintas",
      "followers_url": "https://api.github.com/users/dgquintas/followers",
      "following_url": "https://api.github.com/users/dgquintas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgquintas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgquintas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgquintas/subscriptions",
      "organizations_url": "https://api.github.com/users/dgquintas/orgs",
      "repos_url": "https://api.github.com/users/dgquintas/repos",
      "events_url": "https://api.github.com/users/dgquintas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgquintas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-26T20:19:53Z",
    "updated_at": "2017-04-26T20:19:53Z",
    "author_association": "NONE",
    "body": "Actually, grpclb_test covers update scenarios the new tests doesn't have yet. Porting this test is ~half a day job tops, but seems better to not delay merging this PR until that time can be allocated."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/297810167",
    "html_url": "https://github.com/grpc/grpc/pull/10360#issuecomment-297810167",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10360",
    "id": 297810167,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzgxMDE2Nw==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-27T19:07:51Z",
    "updated_at": "2017-04-27T19:07:51Z",
    "author_association": "NONE",
    "body": "```\nNo significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/297880615",
    "html_url": "https://github.com/grpc/grpc/pull/10360#issuecomment-297880615",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10360",
    "id": 297880615,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5Nzg4MDYxNQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-28T01:10:35Z",
    "updated_at": "2017-04-28T01:10:35Z",
    "author_association": "NONE",
    "body": "```\nNo significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/298087352",
    "html_url": "https://github.com/grpc/grpc/pull/10360#issuecomment-298087352",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10360",
    "id": 298087352,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODA4NzM1Mg==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-28T19:32:33Z",
    "updated_at": "2017-04-28T19:32:33Z",
    "author_association": "MEMBER",
    "body": "\n\n\n\nReviewed 7 of 7 files at r5.\nReview status: all files reviewed at latest revision, 2 unresolved discussions, some commit checks failed.\n\n---\n\n*[test/cpp/end2end/grpclb_end2end_test.cc, line 34 at r4](https://reviewable.io:443/reviews/grpc/grpc/10360#-Kiq1uD_1eSVLtuejBRv:-Kiq1uD_1eSVLtuejBRw:bi374jn) ([raw file](https://github.com/grpc/grpc/blob/4c1462dbc899013e151ade351bc2f6d6918dfc87/test/cpp/end2end/grpclb_end2end_test.cc#L34)):*\n> ```cpp\n>  */\n> \n> #include <arpa/inet.h>\n> ```\n\nI think this needs to be replaced with the following, in order to build on Windows:\n\n```\n#include \"src/core/lib/iomgr/sockaddr.h\"\n```\n\n---\n\n*[test/cpp/end2end/grpclb_end2end_test.cc, line 372 at r4](https://reviewable.io:443/reviews/grpc/grpc/10360#-Kiq21Q_U_0J9psC-Euk:-Kiq21Q_U_0J9psC-Eul:b-97mr8q) ([raw file](https://github.com/grpc/grpc/blob/4c1462dbc899013e151ade351bc2f6d6918dfc87/test/cpp/end2end/grpclb_end2end_test.cc#L372)):*\n> ```cpp\n>   const size_t num_backends_;\n>   const size_t num_balancers_;\n>   CompletionQueue cli_cq_;\n> ```\n\nDoesn't look like this is actually used anywhere.\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/10360)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/298434978",
    "html_url": "https://github.com/grpc/grpc/pull/10360#issuecomment-298434978",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10360",
    "id": 298434978,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODQzNDk3OA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-01T21:15:59Z",
    "updated_at": "2017-05-01T21:15:59Z",
    "author_association": "NONE",
    "body": "```\nNo significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/298546968",
    "html_url": "https://github.com/grpc/grpc/pull/10360#issuecomment-298546968",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10360",
    "id": 298546968,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODU0Njk2OA==",
    "user": {
      "login": "dgquintas",
      "id": 120217,
      "node_id": "MDQ6VXNlcjEyMDIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/120217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgquintas",
      "html_url": "https://github.com/dgquintas",
      "followers_url": "https://api.github.com/users/dgquintas/followers",
      "following_url": "https://api.github.com/users/dgquintas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgquintas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgquintas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgquintas/subscriptions",
      "organizations_url": "https://api.github.com/users/dgquintas/orgs",
      "repos_url": "https://api.github.com/users/dgquintas/repos",
      "events_url": "https://api.github.com/users/dgquintas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgquintas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-02T08:14:49Z",
    "updated_at": "2017-05-02T08:14:49Z",
    "author_association": "NONE",
    "body": "Will add issues later. Merging from mobile."
  }
]
