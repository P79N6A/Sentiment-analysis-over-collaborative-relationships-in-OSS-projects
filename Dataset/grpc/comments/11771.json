[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/314803672",
    "html_url": "https://github.com/grpc/grpc/issues/11771#issuecomment-314803672",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11771",
    "id": 314803672,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDgwMzY3Mg==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-12T15:21:29Z",
    "updated_at": "2017-07-12T15:21:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "CC @murgatroid99 "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/314872166",
    "html_url": "https://github.com/grpc/grpc/issues/11771#issuecomment-314872166",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11771",
    "id": 314872166,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDg3MjE2Ng==",
    "user": {
      "login": "ericgribkoff",
      "id": 5067076,
      "node_id": "MDQ6VXNlcjUwNjcwNzY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5067076?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ericgribkoff",
      "html_url": "https://github.com/ericgribkoff",
      "followers_url": "https://api.github.com/users/ericgribkoff/followers",
      "following_url": "https://api.github.com/users/ericgribkoff/following{/other_user}",
      "gists_url": "https://api.github.com/users/ericgribkoff/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ericgribkoff/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ericgribkoff/subscriptions",
      "organizations_url": "https://api.github.com/users/ericgribkoff/orgs",
      "repos_url": "https://api.github.com/users/ericgribkoff/repos",
      "events_url": "https://api.github.com/users/ericgribkoff/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ericgribkoff/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-12T19:28:17Z",
    "updated_at": "2017-07-12T19:28:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "The `appcompat-v7` and `support-annotations` dependencies are addressed by https://github.com/grpc/grpc-java/pull/3227. The failure to resolve `play-services-base` is a little more troublesome: if I change the Dockerfile to do `../assembleDebug || ../assembleDebug` it works, i.e., Gradle successfully downloads the dependencies on the _second_ try. \r\n\r\n@jtattermusch  If we need a quick fix, I can send a PR to hack the dockerfile to fix this, but a better solution is probably going to be directly installing the Android SDKs on the docker image, rather than the current license \"trick\" to get Gradle to do this automatically. https://grpc-testing.appspot.com/job/gRPC%20Android%20Firebase/ should be fine, as the cached docker image already has the necessary SDKs."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/315034041",
    "html_url": "https://github.com/grpc/grpc/issues/11771#issuecomment-315034041",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11771",
    "id": 315034041,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTAzNDA0MQ==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-13T10:05:31Z",
    "updated_at": "2017-07-13T10:05:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ericgribkoff  I took another look at the Dockerfile and it looks like it's fundamentally broken in the sense that it doesn't follow the way we work with interop docker images. Our dockerfiles are considered \"base\" docker images and they never touch the actual grpc code.\r\nThe idea is you have a \"base\" docker image with all the dependencies and you only bring in the grpc version being tested once you actually want to run the test.  (hence the build_interop.sh scripts for all other dockerfiles: \r\nhttps://github.com/grpc/grpc/blob/master/tools/dockerfile/interoptest/grpc_interop_csharp/build_interop.sh)\r\n\r\nSo, your work in #11662 will probably need a bit of restructuring (sadly that wasn't caught in the review).\r\n\r\nHere's the snipped where you pull java in the Dockerfile (and you shouldn't)\r\n```\r\n# Download and install grpc-java\r\n--\r\n  |   |   | +  WORKDIR /\r\n  |   |   | +  RUN git clone https://github.com/grpc/grpc-java.git\r\n  |   |   | +  WORKDIR /grpc-java\r\n  |   |   | +  RUN ./gradlew install\r\n```\r\n\r\nBesides all this, I suspect  `RUN git clone https://github.com/grpc/grpc-java.git` will only run once  and then will be cached by docker and never run again (so you'll be testing against old version of grpc-java without knowing.\r\n\r\nOne immediate problem with you dockerfile is that it break our push_images script:\r\nhttps://github.com/grpc/grpc/blob/master/tools/dockerfile/push_testing_images.sh (which is why I originally reported this issue).\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/315110521",
    "html_url": "https://github.com/grpc/grpc/issues/11771#issuecomment-315110521",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11771",
    "id": 315110521,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTExMDUyMQ==",
    "user": {
      "login": "ericgribkoff",
      "id": 5067076,
      "node_id": "MDQ6VXNlcjUwNjcwNzY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5067076?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ericgribkoff",
      "html_url": "https://github.com/ericgribkoff",
      "followers_url": "https://api.github.com/users/ericgribkoff/followers",
      "following_url": "https://api.github.com/users/ericgribkoff/following{/other_user}",
      "gists_url": "https://api.github.com/users/ericgribkoff/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ericgribkoff/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ericgribkoff/subscriptions",
      "organizations_url": "https://api.github.com/users/ericgribkoff/orgs",
      "repos_url": "https://api.github.com/users/ericgribkoff/repos",
      "events_url": "https://api.github.com/users/ericgribkoff/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ericgribkoff/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-13T15:19:56Z",
    "updated_at": "2017-07-13T15:19:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Besides all this, I suspect RUN git clone https://github.com/grpc/grpc-java.git will only run once and then will be cached by docker and never run again (so you'll be testing against old version of grpc-java without knowing.\r\n\r\nNo, the actual test downloads and rebuilds gRPC Java each time: https://github.com/grpc/grpc/blob/master/tools/run_tests/interop/android/run_android_tests_on_firebase.sh.\r\n\r\nThe Dockerfile's building of gRPC Java is essentially a sentinel for deciding if the Android dependencies are correctly set up on the image. It can be removed from the Dockerfile, but obviously also served its purpose in this case, as it caught a failure based on the new dependency resolution for gradle. \r\n\r\n>  I took another look at the Dockerfile and it looks like it's fundamentally broken in the sense that it doesn't follow the way we work with interop docker images. Our dockerfiles are considered \"base\" docker images and they never touch the actual grpc code.\r\n\r\n\"Fundamentally broken\" seems a bit strong here. Nothing like this is mentioned in the comments for `push_testing_images.sh`. This custom is documented where?\r\n\r\n> One immediate problem with you dockerfile is that it break our push_images script:\r\n> https://github.com/grpc/grpc/blob/master/tools/dockerfile/push_testing_images.sh (which is why I originally reported this issue).\r\n\r\nAs mentioned above, the building of gRPC Java in the Dockerfile can be removed. Doing so right now will break the test on Jenkins until I figure out how to automatically resolve the `play-services-base` dependency, but if it's an immediate need I can do so. Or, preferably, I can send a PR (temporarily?) excluding the android interop from the files picked up by push_testing_images.sh."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/315689912",
    "html_url": "https://github.com/grpc/grpc/issues/11771#issuecomment-315689912",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11771",
    "id": 315689912,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTY4OTkxMg==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-17T08:02:17Z",
    "updated_at": "2017-07-17T08:02:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "On Thu, Jul 13, 2017 at 5:20 PM, Eric Gribkoff <notifications@github.com>\nwrote:\n\n> Besides all this, I suspect RUN git clone https://github.com/grpc/grpc-\n> java.git will only run once and then will be cached by docker and never\n> run again (so you'll be testing against old version of grpc-java without\n> knowing.\n>\n> No, the actual test downloads and rebuilds gRPC Java each time:\n> https://github.com/grpc/grpc/blob/master/tools/run_tests/\n> interop/android/run_android_tests_on_firebase.sh.\n>\nThe Dockerfile's building of gRPC Java is essentially a sentinel for\n> deciding if the Android dependencies are correctly set up on the image. It\n> can be removed from the Dockerfile,\n>\nbut obviously also served its purpose in this case, as it caught a failure\n> based on the new dependency resolution for gradle.\n>\nWell, the same failure would be caught if you tried to run the test,\nwouldn't it? I would argue that when it should fail.\n\nAlso, pre-downloading and installing some (\"latest version at the time of\ncaching\" - so essentially random) version of grpc-java seems error-prone in\nthe sense that it makes it possible to accidentally running the tests using\nthe old version of grpc-java (and it could mask bugs introduced in later\nversions).\n\nalso, IF we really need to pre-download java (and I don't think we do), we\nshould at least use a pinned version to avoid breaking the dockerfile build\nin the future (and add a comment that we are installing grpc-java and that\nit's not THE grpc-java installation that will get actually tested).\n\n\n\n> I took another look at the Dockerfile and it looks like it's fundamentally\n> broken in the sense that it doesn't follow the way we work with interop\n> docker images. Our dockerfiles are considered \"base\" docker images and they\n> never touch the actual grpc code.\n>\n> \"Fundamentally broken\" seems a bit strong here. Nothing like this is\n> mentioned in the comments for push_testing_images.sh. This custom is\n> documented where?\n>\nPerhaps I used a too strong expression - sorry for that - but yeah, I think\nit is currently broken.\nUnfortunately, it's not documented properly. run_interop_tests.py kind of\nimplies this custom by the way it works. Perhaps we could add a README.md\nto tools/dockerfile that explains how we treat the dockerfiles. I am hoping\nin the future this will\nget better because of the OWNERS files we've setup (so important changes\nwill make it the right reviewers).\n\n\n> One immediate problem with you dockerfile is that it break our push_images\n> script:\n> https://github.com/grpc/grpc/blob/master/tools/dockerfile/\n> push_testing_images.sh (which is why I originally reported this issue).\n>\n> As mentioned above, the building of gRPC Java in the Dockerfile can be\n> removed. Doing so right now will break the test on Jenkins until I figure\n> out how to automatically resolve the play-services-base dependency, but\n> if it's an immediate need I can do so. Or, preferably, I can send a PR\n> (temporarily?) excluding the android interop from the files picked up by\n> push_testing_images.sh.\n>\n\nThis issue is not super urgent, but we should resolve it soon enough.\nSuggestions:\n\n1) merge  grpc/grpc-java#3227 <https://github.com/grpc/grpc-java/pull/3227>\n2) use ../assembleDebug || ../assembleDebug workaround in run_android_\ntests_on_firebase.sh\n<https://github.com/grpc/grpc/blob/master/tools/run_tests/interop/android/run_android_tests_on_firebase.sh>\nwith\na TODO to address it (rather than doing the preparation in the base\nDockerfile)\n\n\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/grpc/grpc/issues/11771#issuecomment-315110521>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AJeq5GImOXq21HNdVz2TR-cTaPEluGz_ks5sNjWqgaJpZM4OVywe>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/319431181",
    "html_url": "https://github.com/grpc/grpc/issues/11771#issuecomment-319431181",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11771",
    "id": 319431181,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTQzMTE4MQ==",
    "user": {
      "login": "ericgribkoff",
      "id": 5067076,
      "node_id": "MDQ6VXNlcjUwNjcwNzY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5067076?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ericgribkoff",
      "html_url": "https://github.com/ericgribkoff",
      "followers_url": "https://api.github.com/users/ericgribkoff/followers",
      "following_url": "https://api.github.com/users/ericgribkoff/following{/other_user}",
      "gists_url": "https://api.github.com/users/ericgribkoff/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ericgribkoff/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ericgribkoff/subscriptions",
      "organizations_url": "https://api.github.com/users/ericgribkoff/orgs",
      "repos_url": "https://api.github.com/users/ericgribkoff/repos",
      "events_url": "https://api.github.com/users/ericgribkoff/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ericgribkoff/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-01T16:56:01Z",
    "updated_at": "2017-08-01T16:56:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "Fixed via #11916"
  }
]
