[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/200048457",
    "html_url": "https://github.com/grpc/grpc/issues/5919#issuecomment-200048457",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5919",
    "id": 200048457,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMDA0ODQ1Nw==",
    "user": {
      "login": "louiscryan",
      "id": 9046588,
      "node_id": "MDQ6VXNlcjkwNDY1ODg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/9046588?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/louiscryan",
      "html_url": "https://github.com/louiscryan",
      "followers_url": "https://api.github.com/users/louiscryan/followers",
      "following_url": "https://api.github.com/users/louiscryan/following{/other_user}",
      "gists_url": "https://api.github.com/users/louiscryan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/louiscryan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/louiscryan/subscriptions",
      "organizations_url": "https://api.github.com/users/louiscryan/orgs",
      "repos_url": "https://api.github.com/users/louiscryan/repos",
      "events_url": "https://api.github.com/users/louiscryan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/louiscryan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-22T21:55:09Z",
    "updated_at": "2016-03-22T21:55:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "... and\n- PayloadConfig specifies bot the request and the response size but it is passed to both the client and the server workers\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/200062304",
    "html_url": "https://github.com/grpc/grpc/issues/5919#issuecomment-200062304",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5919",
    "id": 200062304,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMDA2MjMwNA==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-22T22:31:12Z",
    "updated_at": "2016-03-22T22:31:12Z",
    "author_association": "MEMBER",
    "body": "Also, we need a specification for the generic benchmark service (the one that uses pure byte strings and is not defined in services.proto).\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/200929234",
    "html_url": "https://github.com/grpc/grpc/issues/5919#issuecomment-200929234",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5919",
    "id": 200929234,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMDkyOTIzNA==",
    "user": {
      "login": "louiscryan",
      "id": 9046588,
      "node_id": "MDQ6VXNlcjkwNDY1ODg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/9046588?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/louiscryan",
      "html_url": "https://github.com/louiscryan",
      "followers_url": "https://api.github.com/users/louiscryan/followers",
      "following_url": "https://api.github.com/users/louiscryan/following{/other_user}",
      "gists_url": "https://api.github.com/users/louiscryan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/louiscryan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/louiscryan/subscriptions",
      "organizations_url": "https://api.github.com/users/louiscryan/orgs",
      "repos_url": "https://api.github.com/users/louiscryan/repos",
      "events_url": "https://api.github.com/users/louiscryan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/louiscryan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-24T17:06:27Z",
    "updated_at": "2016-03-24T17:06:27Z",
    "author_association": "CONTRIBUTOR",
    "body": ".... and\n\nthe driver should send a scenario name to the workers so they can tag it in their logs when errors occur. Will make debugging much easier\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/201357767",
    "html_url": "https://github.com/grpc/grpc/issues/5919#issuecomment-201357767",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5919",
    "id": 201357767,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMTM1Nzc2Nw==",
    "user": {
      "login": "louiscryan",
      "id": 9046588,
      "node_id": "MDQ6VXNlcjkwNDY1ODg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/9046588?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/louiscryan",
      "html_url": "https://github.com/louiscryan",
      "followers_url": "https://api.github.com/users/louiscryan/followers",
      "following_url": "https://api.github.com/users/louiscryan/following{/other_user}",
      "gists_url": "https://api.github.com/users/louiscryan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/louiscryan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/louiscryan/subscriptions",
      "organizations_url": "https://api.github.com/users/louiscryan/orgs",
      "repos_url": "https://api.github.com/users/louiscryan/repos",
      "events_url": "https://api.github.com/users/louiscryan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/louiscryan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-25T16:41:06Z",
    "updated_at": "2016-03-25T16:41:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "... and\n\nthe current histogram resolution mechanism might be hard to replicate in languages which don't support standard double precision math (ruby & js). It might be better to use something more like what \nhttps://github.com/HdrHistogram/HdrHistogram does or have the driver provide the bucketing distribution directly\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/201358949",
    "html_url": "https://github.com/grpc/grpc/issues/5919#issuecomment-201358949",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5919",
    "id": 201358949,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMTM1ODk0OQ==",
    "user": {
      "login": "louiscryan",
      "id": 9046588,
      "node_id": "MDQ6VXNlcjkwNDY1ODg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/9046588?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/louiscryan",
      "html_url": "https://github.com/louiscryan",
      "followers_url": "https://api.github.com/users/louiscryan/followers",
      "following_url": "https://api.github.com/users/louiscryan/following{/other_user}",
      "gists_url": "https://api.github.com/users/louiscryan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/louiscryan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/louiscryan/subscriptions",
      "organizations_url": "https://api.github.com/users/louiscryan/orgs",
      "repos_url": "https://api.github.com/users/louiscryan/repos",
      "events_url": "https://api.github.com/users/louiscryan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/louiscryan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-25T16:45:55Z",
    "updated_at": "2016-03-25T16:45:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "... and \n\nJava will need a longer warmup phase and a pause to allow the JIT to kick in. Ideally this would be done by running the scenario, stopping it and the starting it again after a brief pause.\n\nWhile it would be nice to think that we could wait for the mean latencies to stabilize before we start recording this would probably be unstable\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/202511131",
    "html_url": "https://github.com/grpc/grpc/issues/5919#issuecomment-202511131",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5919",
    "id": 202511131,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMjUxMTEzMQ==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-28T18:04:07Z",
    "updated_at": "2016-03-28T18:04:07Z",
    "author_association": "MEMBER",
    "body": "@jtattermusch please review this also when you get a chance\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/202603585",
    "html_url": "https://github.com/grpc/grpc/issues/5919#issuecomment-202603585",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5919",
    "id": 202603585,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMjYwMzU4NQ==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-28T22:25:53Z",
    "updated_at": "2016-03-29T16:57:55Z",
    "author_association": "MEMBER",
    "body": "In the driver, using the environment variable QPS_WORKERS could get confusing over time, especially as we add heterogeneity to the machines.  The point is that right now we all remember that servers come first and then clients, but we might forget that in the future. We can continue to allow that, but also allow explicitly setting the names of the servers and clients (either as command line options or as 2 other environment variables). \n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/203158812",
    "html_url": "https://github.com/grpc/grpc/issues/5919#issuecomment-203158812",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5919",
    "id": 203158812,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMzE1ODgxMg==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-29T23:36:10Z",
    "updated_at": "2016-03-29T23:36:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "On Tue, Mar 22, 2016 at 2:39 PM, Louis Ryan notifications@github.com\nwrote:\n\n> @vjpai https://github.com/vjpai\n> \n> This is a suggested set of improvements to the benchmarking control API:\n> - Any elapsed time value should be expressed in integer microseconds\n>   [minor]\n> \n> If I am not mistaken the same histogram the same histogram is used in C\n> core for profiling the code path. For that use case, microseconds don't\n> seem to be sufficient (some internal function call definitely take way less\n> than a microsecond).\n> - HistogramParams needs to document that the expected units are\n>   microseconds\n> - HistogramParams.resolution: probably does not need to be in the API,\n>   a resolution of 0.001 is almost certainly overkill for all expected cases.\n>   Just use a constant. Do we need HistogramParams at all?\n> \n> I think having a constant that needs to be the same in 5+ languages and\n> making sure that it is the case is a bigger burden than qps driver simply\n> specifying what the histogram param is (regardless of the unit).\n> - HistogramData all values should be integers unless we are measuring\n>   partial microseconds when recording data. If that is the case why not just\n>   switch everything over to integer nanoseconds\n> \n> As mentioned elsewhere integers nanoseconds can easily overflow for values\n> like sum_of_squares.\n> - SecurityParams.use_test_ca when would this value be false? Doc says\n>   to check for presence of SecurityParams to enable TLS. Are we expecting\n>   more options here going forward?\n> \n> This can be false if you want to enable secure connections, but you test\n> against real prod backends (which we want to do at some point, right?). But\n> agreed that this needs to be better documented).\n> - SecurityParams.server_host_override if we're using test_ca, and we\n>   always are, then the host override is required and is a constant so it's\n>   not clear what value this adds\n> \n> use_test_ca and server_host_override are params we are using for our\n> interop tests already and we are fairly happy with these, so why not stay\n> consistent - one advantage is that implementors will be already familiar\n> with these.\n> - The ServerType enum is C runtime specific. Consider having the\n>   driver choose variants 1-n and the server return a label identifying what\n>   the variant actually does. May need to add API to ask what variants the\n>   worker can support\n> - Need to implement more realistic compressable and uncompressable\n>   data. Suggest we share a common corpus that is compressable and have the\n>   uncomressable flavor just be the already compressed corpus.\n> \n> —\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly or view it on GitHub\n> https://github.com/grpc/grpc/issues/5919\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/203159366",
    "html_url": "https://github.com/grpc/grpc/issues/5919#issuecomment-203159366",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5919",
    "id": 203159366,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMzE1OTM2Ng==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-29T23:39:46Z",
    "updated_at": "2016-03-29T23:39:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "On Fri, Mar 25, 2016 at 9:41 AM, Louis Ryan notifications@github.com\nwrote:\n\n> ... and\n> \n> the current histogram resolution mechanism might be hard to replicate in\n> languages which don't support standard double precision math (ruby & js).\n> It might be better to use something more like what\n> https://github.com/HdrHistogram/HdrHistogram does or have the driver\n> provide the bucketing distribution directly\n\nWhat exactly is the problem with ruby & js?   They don't have an equivalent\nof the double type of computing the bucket sizes is not easy?\n\n> —\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly or view it on GitHub\n> https://github.com/grpc/grpc/issues/5919#issuecomment-201357767\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/203613727",
    "html_url": "https://github.com/grpc/grpc/issues/5919#issuecomment-203613727",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5919",
    "id": 203613727,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMzYxMzcyNw==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-30T20:15:31Z",
    "updated_at": "2016-03-30T20:15:31Z",
    "author_association": "MEMBER",
    "body": "I have just wrapped the Ruby performance workers (everything except generic server). I can now confirm that Ruby uses double-precision floating point (and is specified to do so), so we can still kick the histogram issue down the can. This will become an issue for some language at some point, but Ruby at least uses the system's IEEE double-precision type.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/203614173",
    "html_url": "https://github.com/grpc/grpc/issues/5919#issuecomment-203614173",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5919",
    "id": 203614173,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMzYxNDE3Mw==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-30T20:17:10Z",
    "updated_at": "2016-04-01T19:03:40Z",
    "author_association": "MEMBER",
    "body": "The JS documentation also says that objects of type Number are IEEE 64-bit FP. So no problem there either. Can, meet foot.\n\n[Updated comment below:]\nSpecifically, Node and Ruby use non-standard integer precision (53 bits for Node, infinite for Ruby) but both use double-precision float. So no problem here.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/203633400",
    "html_url": "https://github.com/grpc/grpc/issues/5919#issuecomment-203633400",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5919",
    "id": 203633400,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMzYzMzQwMA==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-30T20:55:45Z",
    "updated_at": "2016-03-30T20:55:45Z",
    "author_association": "MEMBER",
    "body": "Louis, can you point me to the corpus that you've been using?\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/203676752",
    "html_url": "https://github.com/grpc/grpc/issues/5919#issuecomment-203676752",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5919",
    "id": 203676752,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMzY3Njc1Mg==",
    "user": {
      "login": "louiscryan",
      "id": 9046588,
      "node_id": "MDQ6VXNlcjkwNDY1ODg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/9046588?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/louiscryan",
      "html_url": "https://github.com/louiscryan",
      "followers_url": "https://api.github.com/users/louiscryan/followers",
      "following_url": "https://api.github.com/users/louiscryan/following{/other_user}",
      "gists_url": "https://api.github.com/users/louiscryan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/louiscryan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/louiscryan/subscriptions",
      "organizations_url": "https://api.github.com/users/louiscryan/orgs",
      "repos_url": "https://api.github.com/users/louiscryan/repos",
      "events_url": "https://api.github.com/users/louiscryan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/louiscryan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-30T23:09:01Z",
    "updated_at": "2016-03-30T23:09:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "Looks like were doing all zeros for compressable. For uncompressable we use \n\nhttps://github.com/grpc/grpc-java/tree/6e04c3100e143a5792bb98efb0d5a5755324bd7d/interop-testing/src/main/resources/io/grpc/testing/integration/testdata\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/203680161",
    "html_url": "https://github.com/grpc/grpc/issues/5919#issuecomment-203680161",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5919",
    "id": 203680161,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMzY4MDE2MQ==",
    "user": {
      "login": "louiscryan",
      "id": 9046588,
      "node_id": "MDQ6VXNlcjkwNDY1ODg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/9046588?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/louiscryan",
      "html_url": "https://github.com/louiscryan",
      "followers_url": "https://api.github.com/users/louiscryan/followers",
      "following_url": "https://api.github.com/users/louiscryan/following{/other_user}",
      "gists_url": "https://api.github.com/users/louiscryan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/louiscryan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/louiscryan/subscriptions",
      "organizations_url": "https://api.github.com/users/louiscryan/orgs",
      "repos_url": "https://api.github.com/users/louiscryan/repos",
      "events_url": "https://api.github.com/users/louiscryan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/louiscryan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-30T23:26:13Z",
    "updated_at": "2016-03-30T23:26:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "... and the Java workers reject SYNC_CLIENT for streaming calls as we don't have APIs for this. The driver doesn't output the GRPC status message returned indicating that this is not supported making diagnosis harder. The driver should recognize UNIMPLEMENTED from the workers and log that the scenario is being intentionally skipped\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/204015071",
    "html_url": "https://github.com/grpc/grpc/issues/5919#issuecomment-204015071",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5919",
    "id": 204015071,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNDAxNTA3MQ==",
    "user": {
      "login": "louiscryan",
      "id": 9046588,
      "node_id": "MDQ6VXNlcjkwNDY1ODg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/9046588?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/louiscryan",
      "html_url": "https://github.com/louiscryan",
      "followers_url": "https://api.github.com/users/louiscryan/followers",
      "following_url": "https://api.github.com/users/louiscryan/following{/other_user}",
      "gists_url": "https://api.github.com/users/louiscryan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/louiscryan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/louiscryan/subscriptions",
      "organizations_url": "https://api.github.com/users/louiscryan/orgs",
      "repos_url": "https://api.github.com/users/louiscryan/repos",
      "events_url": "https://api.github.com/users/louiscryan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/louiscryan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-31T16:44:41Z",
    "updated_at": "2016-03-31T16:44:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "After chatting with @ejona86 I suggest we use geo.protodata in\n\nhttps://github.com/cockroachdb/c-snappy/tree/master/internal/testdata\n\nShould be a reasonably representative dataset for any structured encoding\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/204526117",
    "html_url": "https://github.com/grpc/grpc/issues/5919#issuecomment-204526117",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5919",
    "id": 204526117,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNDUyNjExNw==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-01T19:04:33Z",
    "updated_at": "2016-04-01T19:04:33Z",
    "author_association": "MEMBER",
    "body": "We need to make the driver skip an UNIMPLEMENTED scenario response and also clean up the clients and servers appropriately. Will add.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/204558601",
    "html_url": "https://github.com/grpc/grpc/issues/5919#issuecomment-204558601",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5919",
    "id": 204558601,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNDU1ODYwMQ==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-01T20:33:53Z",
    "updated_at": "2016-04-01T20:33:53Z",
    "author_association": "MEMBER",
    "body": "Folks, should we add any other language-specific fields to the enums before sticking in numbered variants?\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/205626064",
    "html_url": "https://github.com/grpc/grpc/issues/5919#issuecomment-205626064",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5919",
    "id": 205626064,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTYyNjA2NA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-05T03:36:40Z",
    "updated_at": "2016-04-05T03:36:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "one more item to address: LoadParams.OfferedLoad comment should document the expected units (from the code it looks like that the exp distribution with given lambda generates time to next event in _nanoseconds_ and that should be documented properly)\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/210652359",
    "html_url": "https://github.com/grpc/grpc/issues/5919#issuecomment-210652359",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5919",
    "id": 210652359,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDY1MjM1OQ==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-15T21:26:52Z",
    "updated_at": "2016-04-15T21:26:52Z",
    "author_association": "MEMBER",
    "body": "Post-GA cleanup issue: Instead of giving the PayloadConfig to the servers to give the response_size to use in the generic case, we should make that part of the generic request sent from the client.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/210666503",
    "html_url": "https://github.com/grpc/grpc/issues/5919#issuecomment-210666503",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5919",
    "id": 210666503,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDY2NjUwMw==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-15T22:14:53Z",
    "updated_at": "2016-04-15T22:14:53Z",
    "author_association": "MEMBER",
    "body": "For the QPS report, we currently use the total histogram count as the numerator and the average of the client wall clock times as the denominator. This is not really accurate. We should use the elapsed wall-clock time as seen at the driver from one mark to the next. This is a post-GA cleanup issue that should go in with the overall histogram cleanup.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/389339310",
    "html_url": "https://github.com/grpc/grpc/issues/5919#issuecomment-389339310",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5919",
    "id": 389339310,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTMzOTMxMA==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-15T22:54:24Z",
    "updated_at": "2018-05-15T22:54:24Z",
    "author_association": "MEMBER",
    "body": "This has been implemented piecemeal over the past few years."
  }
]
