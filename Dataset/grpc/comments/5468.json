[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/203638639",
    "html_url": "https://github.com/grpc/grpc/issues/5468#issuecomment-203638639",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5468",
    "id": 203638639,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMzYzODYzOQ==",
    "user": {
      "login": "ejona86",
      "id": 2811396,
      "node_id": "MDQ6VXNlcjI4MTEzOTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2811396?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ejona86",
      "html_url": "https://github.com/ejona86",
      "followers_url": "https://api.github.com/users/ejona86/followers",
      "following_url": "https://api.github.com/users/ejona86/following{/other_user}",
      "gists_url": "https://api.github.com/users/ejona86/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ejona86/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ejona86/subscriptions",
      "organizations_url": "https://api.github.com/users/ejona86/orgs",
      "repos_url": "https://api.github.com/users/ejona86/repos",
      "events_url": "https://api.github.com/users/ejona86/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ejona86/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-30T21:15:29Z",
    "updated_at": "2016-03-30T21:15:29Z",
    "author_association": "MEMBER",
    "body": "The Java client apparently received UNAVAILABLE from the server without any description. The Java implementation tries very hard to never generate a Status without a description, but the server can still reply without a description.\n\n@GuoJing what language was the server implemented in?\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/203691945",
    "html_url": "https://github.com/grpc/grpc/issues/5468#issuecomment-203691945",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5468",
    "id": 203691945,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMzY5MTk0NQ==",
    "user": {
      "login": "GuoJing",
      "id": 363073,
      "node_id": "MDQ6VXNlcjM2MzA3Mw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/363073?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GuoJing",
      "html_url": "https://github.com/GuoJing",
      "followers_url": "https://api.github.com/users/GuoJing/followers",
      "following_url": "https://api.github.com/users/GuoJing/following{/other_user}",
      "gists_url": "https://api.github.com/users/GuoJing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GuoJing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GuoJing/subscriptions",
      "organizations_url": "https://api.github.com/users/GuoJing/orgs",
      "repos_url": "https://api.github.com/users/GuoJing/repos",
      "events_url": "https://api.github.com/users/GuoJing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GuoJing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-31T00:11:24Z",
    "updated_at": "2016-03-31T00:11:24Z",
    "author_association": "NONE",
    "body": "@ejona86 hi, we using Python as server, Java as client. The solution we use right now is try to reconnect when channel is down. \n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/204018932",
    "html_url": "https://github.com/grpc/grpc/issues/5468#issuecomment-204018932",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5468",
    "id": 204018932,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNDAxODkzMg==",
    "user": {
      "login": "ejona86",
      "id": 2811396,
      "node_id": "MDQ6VXNlcjI4MTEzOTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2811396?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ejona86",
      "html_url": "https://github.com/ejona86",
      "followers_url": "https://api.github.com/users/ejona86/followers",
      "following_url": "https://api.github.com/users/ejona86/following{/other_user}",
      "gists_url": "https://api.github.com/users/ejona86/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ejona86/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ejona86/subscriptions",
      "organizations_url": "https://api.github.com/users/ejona86/orgs",
      "repos_url": "https://api.github.com/users/ejona86/repos",
      "events_url": "https://api.github.com/users/ejona86/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ejona86/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-31T16:52:42Z",
    "updated_at": "2016-03-31T16:52:42Z",
    "author_association": "MEMBER",
    "body": "@GuoJing, so creating a new channel fixes the problem? That does sound more like a client-side issue. If you just retry on the same channel, does it work? The channel should auto-reconnect.\n\nAre you using the OkHttp transport (for use on Android)? I just audited the Java code and found two places where UNAVAILABLE without a description could happen (grpc/grpc-java#1620), but only one was on client-side.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/221746675",
    "html_url": "https://github.com/grpc/grpc/issues/5468#issuecomment-221746675",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5468",
    "id": 221746675,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMTc0NjY3NQ==",
    "user": {
      "login": "giladwolff",
      "id": 1806752,
      "node_id": "MDQ6VXNlcjE4MDY3NTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1806752?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/giladwolff",
      "html_url": "https://github.com/giladwolff",
      "followers_url": "https://api.github.com/users/giladwolff/followers",
      "following_url": "https://api.github.com/users/giladwolff/following{/other_user}",
      "gists_url": "https://api.github.com/users/giladwolff/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/giladwolff/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/giladwolff/subscriptions",
      "organizations_url": "https://api.github.com/users/giladwolff/orgs",
      "repos_url": "https://api.github.com/users/giladwolff/repos",
      "events_url": "https://api.github.com/users/giladwolff/events{/privacy}",
      "received_events_url": "https://api.github.com/users/giladwolff/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-26T00:29:08Z",
    "updated_at": "2016-05-26T00:29:08Z",
    "author_association": "NONE",
    "body": "I believe I am hitting the same issue with a node js grpc client (0.14.1) and a java server (0.14.0). I create a client, and after a longish period of inactivity the first call on the client fails with UNAVAILABLE. If I retry I get a reply. \n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/221758080",
    "html_url": "https://github.com/grpc/grpc/issues/5468#issuecomment-221758080",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5468",
    "id": 221758080,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMTc1ODA4MA==",
    "user": {
      "login": "dklempner",
      "id": 10135909,
      "node_id": "MDQ6VXNlcjEwMTM1OTA5",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10135909?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dklempner",
      "html_url": "https://github.com/dklempner",
      "followers_url": "https://api.github.com/users/dklempner/followers",
      "following_url": "https://api.github.com/users/dklempner/following{/other_user}",
      "gists_url": "https://api.github.com/users/dklempner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dklempner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dklempner/subscriptions",
      "organizations_url": "https://api.github.com/users/dklempner/orgs",
      "repos_url": "https://api.github.com/users/dklempner/repos",
      "events_url": "https://api.github.com/users/dklempner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dklempner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-26T01:58:14Z",
    "updated_at": "2016-05-26T01:58:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "This sounds to me a lot like a NAT or somesuch dropping idle connections. Depending on how exactly the router does this, the client may not notice anything is amiss until it tries to send an RPC.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/221759378",
    "html_url": "https://github.com/grpc/grpc/issues/5468#issuecomment-221759378",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5468",
    "id": 221759378,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMTc1OTM3OA==",
    "user": {
      "login": "GuoJing",
      "id": 363073,
      "node_id": "MDQ6VXNlcjM2MzA3Mw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/363073?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GuoJing",
      "html_url": "https://github.com/GuoJing",
      "followers_url": "https://api.github.com/users/GuoJing/followers",
      "following_url": "https://api.github.com/users/GuoJing/following{/other_user}",
      "gists_url": "https://api.github.com/users/GuoJing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GuoJing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GuoJing/subscriptions",
      "organizations_url": "https://api.github.com/users/GuoJing/orgs",
      "repos_url": "https://api.github.com/users/GuoJing/repos",
      "events_url": "https://api.github.com/users/GuoJing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GuoJing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-26T02:08:39Z",
    "updated_at": "2016-05-26T02:08:39Z",
    "author_association": "NONE",
    "body": "Yep, We are using AWS ELB load balance, then IDLE connection will be\ndropped in 1 mins.\n\nThe solution is try to reconnect the SHUTDOWN and TERMINATED channel before\nwe do something.\n\n2016-05-26 9:58 GMT+08:00 David Klempner notifications@github.com:\n\n> This sounds to me a lot like a NAT or somesuch dropping idle connections.\n> Depending on how exactly the router does this, the client may not notice\n> anything is amiss until it tries to send an RPC.\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly or view it on GitHub\n> https://github.com/grpc/grpc/issues/5468#issuecomment-221758080\n\n## \n\n---\n\nありがとうございます。お邪魔しました。\nhttp://www.guojing.me\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/221903723",
    "html_url": "https://github.com/grpc/grpc/issues/5468#issuecomment-221903723",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5468",
    "id": 221903723,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMTkwMzcyMw==",
    "user": {
      "login": "giladwolff",
      "id": 1806752,
      "node_id": "MDQ6VXNlcjE4MDY3NTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1806752?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/giladwolff",
      "html_url": "https://github.com/giladwolff",
      "followers_url": "https://api.github.com/users/giladwolff/followers",
      "following_url": "https://api.github.com/users/giladwolff/following{/other_user}",
      "gists_url": "https://api.github.com/users/giladwolff/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/giladwolff/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/giladwolff/subscriptions",
      "organizations_url": "https://api.github.com/users/giladwolff/orgs",
      "repos_url": "https://api.github.com/users/giladwolff/repos",
      "events_url": "https://api.github.com/users/giladwolff/events{/privacy}",
      "received_events_url": "https://api.github.com/users/giladwolff/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-26T15:23:13Z",
    "updated_at": "2016-05-26T15:23:13Z",
    "author_association": "NONE",
    "body": "So we are using aws elb as well, that is, the server is behind one of those. It seems though that the behavior of the java client is different than the behavior of the node js client. Anyway, recreating the client and retrying seems to work.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/221949363",
    "html_url": "https://github.com/grpc/grpc/issues/5468#issuecomment-221949363",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5468",
    "id": 221949363,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMTk0OTM2Mw==",
    "user": {
      "login": "ejona86",
      "id": 2811396,
      "node_id": "MDQ6VXNlcjI4MTEzOTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2811396?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ejona86",
      "html_url": "https://github.com/ejona86",
      "followers_url": "https://api.github.com/users/ejona86/followers",
      "following_url": "https://api.github.com/users/ejona86/following{/other_user}",
      "gists_url": "https://api.github.com/users/ejona86/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ejona86/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ejona86/subscriptions",
      "organizations_url": "https://api.github.com/users/ejona86/orgs",
      "repos_url": "https://api.github.com/users/ejona86/repos",
      "events_url": "https://api.github.com/users/ejona86/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ejona86/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-26T18:08:25Z",
    "updated_at": "2016-05-26T18:08:25Z",
    "author_association": "MEMBER",
    "body": "@giladwolff, you should be able to reuse the same channel for the retry since the channel will reconnect.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/222036949",
    "html_url": "https://github.com/grpc/grpc/issues/5468#issuecomment-222036949",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5468",
    "id": 222036949,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjAzNjk0OQ==",
    "user": {
      "login": "GuoJing",
      "id": 363073,
      "node_id": "MDQ6VXNlcjM2MzA3Mw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/363073?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GuoJing",
      "html_url": "https://github.com/GuoJing",
      "followers_url": "https://api.github.com/users/GuoJing/followers",
      "following_url": "https://api.github.com/users/GuoJing/following{/other_user}",
      "gists_url": "https://api.github.com/users/GuoJing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GuoJing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GuoJing/subscriptions",
      "organizations_url": "https://api.github.com/users/GuoJing/orgs",
      "repos_url": "https://api.github.com/users/GuoJing/repos",
      "events_url": "https://api.github.com/users/GuoJing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GuoJing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-27T01:14:49Z",
    "updated_at": "2016-05-27T01:17:16Z",
    "author_association": "NONE",
    "body": "I am using Python server implemented and Java Client.\n\nIt's really easy to find where the problem is. If I run the client and do\nnothing, then in 30s or 1s which depends on AWS ELB setting, Client will\nget the message (Channel has beed shutdown/terminated by another endpoint)\nin log.\n\nIf we try to reuse channel this time, I will get the UNAVAILABLE.\n\nIn Java Client, I have to close channel and recreate a new channel object.\nLooks like it won't reconnect.\n\nBut...\n\nI have a Python client and Python server implemented, same on AWS ELB, if I\nhave a IDEL connection, the first try I will get UNAVAILABLE also, but the\nsecond try will be ok. Just like what @giladwolff said.\n\nAnd Yes. This is a client-side problem, but not that friendly.\n\nThanks and sorry for poor English. :)\n\n2016-05-26 8:29 GMT+08:00 Gilad Wolff notifications@github.com:\n\n> I believe I am hitting the same issue with a node js grpc client (0.14.1)\n> and a java server (0.14.0). I create a client, and after a longish period\n> of inactivity the first call on the client fails with UNAVAILABLE. If I\n> retry I get a reply.\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly or view it on GitHub\n> https://github.com/grpc/grpc/issues/5468#issuecomment-221746675\n\n## \n\n---\n\nhttp://www.guojing.me\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/222040384",
    "html_url": "https://github.com/grpc/grpc/issues/5468#issuecomment-222040384",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5468",
    "id": 222040384,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjA0MDM4NA==",
    "user": {
      "login": "GuoJing",
      "id": 363073,
      "node_id": "MDQ6VXNlcjM2MzA3Mw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/363073?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GuoJing",
      "html_url": "https://github.com/GuoJing",
      "followers_url": "https://api.github.com/users/GuoJing/followers",
      "following_url": "https://api.github.com/users/GuoJing/following{/other_user}",
      "gists_url": "https://api.github.com/users/GuoJing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GuoJing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GuoJing/subscriptions",
      "organizations_url": "https://api.github.com/users/GuoJing/orgs",
      "repos_url": "https://api.github.com/users/GuoJing/repos",
      "events_url": "https://api.github.com/users/GuoJing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GuoJing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-27T01:44:23Z",
    "updated_at": "2016-05-27T01:44:23Z",
    "author_association": "NONE",
    "body": "@giladwolff https://github.com/giladwolff\n\nyes! If I am not getting wrong, both node js and Python implement are using\nC Core code, the C core tcp listener will try to reconnect automatically,\nbut the first try is UNAVAILABLE. second try is ok.\n\nBut the Java implement has different behavior.\n\nthe fake code below:\n\n``` Java\npublic Stub getBlockingStub(){\n\n    if(channel.isShutdown() and channel.isTerminated()){\n        channel = newChannel();\n    }\n    return Stub(channel);\n}\n\n// every time I have to call this function to check if the channel is down\n```\n\nbut the Python code which with C Core will not:\n\n``` python\nchannel = new_channel()\nstub = new_stub(channel)\n# wait here\nstub.touch() # UNAVAILABLE\nstub.touch() # return OK\n```\n\nWe need to know, in Python implement, we don't have is_shutdown or\nis_terminated interface.\n\n2016-05-26 23:23 GMT+08:00 Gilad Wolff notifications@github.com:\n\n> So we are using aws elb as well, that is, the server is behind one of\n> those. It seems though that the behavior of the java client is different\n> than the behavior of the node js client. Anyway, recreating the client and\n> retrying seems to work.\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly or view it on GitHub\n> https://github.com/grpc/grpc/issues/5468#issuecomment-221903723\n\n## \n\n---\n\nret\nhttp://www.guojing.me\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/222057961",
    "html_url": "https://github.com/grpc/grpc/issues/5468#issuecomment-222057961",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5468",
    "id": 222057961,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjA1Nzk2MQ==",
    "user": {
      "login": "giladwolff",
      "id": 1806752,
      "node_id": "MDQ6VXNlcjE4MDY3NTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1806752?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/giladwolff",
      "html_url": "https://github.com/giladwolff",
      "followers_url": "https://api.github.com/users/giladwolff/followers",
      "following_url": "https://api.github.com/users/giladwolff/following{/other_user}",
      "gists_url": "https://api.github.com/users/giladwolff/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/giladwolff/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/giladwolff/subscriptions",
      "organizations_url": "https://api.github.com/users/giladwolff/orgs",
      "repos_url": "https://api.github.com/users/giladwolff/repos",
      "events_url": "https://api.github.com/users/giladwolff/events{/privacy}",
      "received_events_url": "https://api.github.com/users/giladwolff/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-27T04:32:06Z",
    "updated_at": "2016-05-27T04:32:06Z",
    "author_association": "NONE",
    "body": "I agree with GouJing that this is a client side bug in the way the channel notices/handles disconnections from the server.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/223333494",
    "html_url": "https://github.com/grpc/grpc/issues/5468#issuecomment-223333494",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5468",
    "id": 223333494,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzMzMzQ5NA==",
    "user": {
      "login": "ejona86",
      "id": 2811396,
      "node_id": "MDQ6VXNlcjI4MTEzOTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2811396?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ejona86",
      "html_url": "https://github.com/ejona86",
      "followers_url": "https://api.github.com/users/ejona86/followers",
      "following_url": "https://api.github.com/users/ejona86/following{/other_user}",
      "gists_url": "https://api.github.com/users/ejona86/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ejona86/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ejona86/subscriptions",
      "organizations_url": "https://api.github.com/users/ejona86/orgs",
      "repos_url": "https://api.github.com/users/ejona86/repos",
      "events_url": "https://api.github.com/users/ejona86/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ejona86/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-02T15:46:33Z",
    "updated_at": "2016-06-02T15:46:33Z",
    "author_association": "MEMBER",
    "body": "> // every time I have to call this function to check if the channel is down\n\n@GuoJing, this doesn't really make sense, unless you are calling `channel.shutdown()` in your own code. The only way `channel.isShutdown()` or `channel.isTerminated()` will return true is if you have called `shutdown()` or `shutdownNow()`.\n\nIf you believe there is a bug in the Java client, could you provide the full Status, including the message for each of the RPC attempts?\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/223345406",
    "html_url": "https://github.com/grpc/grpc/issues/5468#issuecomment-223345406",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5468",
    "id": 223345406,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzM0NTQwNg==",
    "user": {
      "login": "GuoJing",
      "id": 363073,
      "node_id": "MDQ6VXNlcjM2MzA3Mw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/363073?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GuoJing",
      "html_url": "https://github.com/GuoJing",
      "followers_url": "https://api.github.com/users/GuoJing/followers",
      "following_url": "https://api.github.com/users/GuoJing/following{/other_user}",
      "gists_url": "https://api.github.com/users/GuoJing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GuoJing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GuoJing/subscriptions",
      "organizations_url": "https://api.github.com/users/GuoJing/orgs",
      "repos_url": "https://api.github.com/users/GuoJing/repos",
      "events_url": "https://api.github.com/users/GuoJing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GuoJing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-02T16:25:56Z",
    "updated_at": "2016-06-02T16:25:56Z",
    "author_association": "NONE",
    "body": "@ejona86 Hi, I think the point is **AWS ELB**, ELB will terminate idle connection, I can't give a full status really, and I'm not the one who wrote the code, I'm write a gRPC server with Python (and gRPC python implement is still a lots of problem #6730 and #4969 )\n\nhere is our code:\n\n``` java\npackage com.vipkid.service.jedi.grpc;\n\nimport io.grpc.ManagedChannel;\n\npublic class ChannelNode{\n    private ManagedChannel channel;\n    private JediServiceGrpc.JediServiceBlockingStub blockingStub;\n\n    public ChannelNode(ManagedChannel channel, JediServiceGrpc.JediServiceBlockingStub blockingStub){\n        this.channel = channel;\n        this.blockingStub = blockingStub;\n    }\n\n    public ManagedChannel getChannel() {\n        return channel;\n    }\n\n    public JediServiceGrpc.JediServiceBlockingStub getBlockingStub() {\n        return blockingStub;\n    }\n}\n```\n\nand\n\n``` java\npackage com.vipkid.service.jedi.grpc;\n\nimport io.grpc.ManagedChannel;\nimport io.grpc.netty.NettyChannelBuilder;\n\nimport org.apache.log4j.Logger;\n\nimport java.util.List;\nimport java.util.concurrent.CopyOnWriteArrayList;\nimport java.util.Random;\n\nimport static com.vipkid.service.jedi.grpc.JediServiceGrpc.JediServiceBlockingStub;\n\n\npublic class ChannelPool{\n    private static final Logger logger = Logger.getLogger(ChannelPool.class);\n\n   private static ChannelPool channelPool;\n   private final List<ChannelNode> channelNodes = new CopyOnWriteArrayList<>();\n   private String host;\n   private int port;\n   private int maxActive;\n\n   private final static Object lock = new Object();\n   private final Random random = new Random();\n\n   private ChannelPool() {}\n\n   public static ChannelPool getChannelPool(String host, int port, int maxActive){\n       if (channelPool != null) {\n           return channelPool;\n       }\n\n       synchronized (lock) {\n           if (channelPool != null) {\n               return channelPool;\n           }\n           channelPool = new ChannelPool();\n           channelPool.host = host;\n           channelPool.port = port;\n           channelPool.maxActive = maxActive;\n\n           //init  channelNodes\n           for (int i = 0; i < maxActive; i++) {\n               ChannelNode channelNode = channelPool.connect();\n               channelPool.channelNodes.add(channelNode);\n           }\n       }\n       return channelPool;\n    }\n\n   private ChannelNode connect(){\n       ManagedChannel channel = NettyChannelBuilder.forAddress(host, port)\n               .usePlaintext(true)\n               .build();\n       JediServiceBlockingStub blockingStub = JediServiceGrpc.newBlockingStub(channel);\n       return new ChannelNode(channel, blockingStub);\n   }\n\n   public void close() {\n       for(ChannelNode node : channelNodes) {\n           try {\n               node.getChannel().shutdownNow();\n           } catch (Exception e) {\n               logger.info(\"close channel error!\");\n           }\n       }\n   }\n\n   public JediServiceBlockingStub getBlockingStub() {\n        int index = random.nextInt(maxActive);\n        ChannelNode channelNode = channelNodes.get(index);\n        ManagedChannel channel = channelNode.getChannel();\n        synchronized (lock) {\n        // have to check connection status overtime\n        // if we don't do this, we will get UNAVAILABLE\n        // after this check, everything is OK\n        if (channel.isShutdown() || channel.isTerminated()) {\n                logger.error(\"RPC isShutdown, need reconnect and update channelList!\");\n                channelNode = connect();\n                channelNodes.set(index, channelNode);\n            }\n        }\n        return channelNode.getBlockingStub();\n    }\n\n}\n```\n\nThis is Java Client and Python Server.\n\nIf you think this is not a bug or this bug can not be reproduced, it ok to close this issue.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/224176266",
    "html_url": "https://github.com/grpc/grpc/issues/5468#issuecomment-224176266",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5468",
    "id": 224176266,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDE3NjI2Ng==",
    "user": {
      "login": "giladwolff",
      "id": 1806752,
      "node_id": "MDQ6VXNlcjE4MDY3NTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1806752?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/giladwolff",
      "html_url": "https://github.com/giladwolff",
      "followers_url": "https://api.github.com/users/giladwolff/followers",
      "following_url": "https://api.github.com/users/giladwolff/following{/other_user}",
      "gists_url": "https://api.github.com/users/giladwolff/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/giladwolff/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/giladwolff/subscriptions",
      "organizations_url": "https://api.github.com/users/giladwolff/orgs",
      "repos_url": "https://api.github.com/users/giladwolff/repos",
      "events_url": "https://api.github.com/users/giladwolff/events{/privacy}",
      "received_events_url": "https://api.github.com/users/giladwolff/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-07T04:54:46Z",
    "updated_at": "2016-06-07T04:54:46Z",
    "author_association": "NONE",
    "body": "I agree with GuoJing description - the ELB will close the connection after the idle connection timeout. This is not handled well in the grpc client code itself and forces callers, like GuoJing and myself to work around this. IMHO the grpc client code should notice that the channel was disconnected and try to reconnect. \n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/227483868",
    "html_url": "https://github.com/grpc/grpc/issues/5468#issuecomment-227483868",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5468",
    "id": 227483868,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzQ4Mzg2OA==",
    "user": {
      "login": "bobbytables",
      "id": 521627,
      "node_id": "MDQ6VXNlcjUyMTYyNw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/521627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bobbytables",
      "html_url": "https://github.com/bobbytables",
      "followers_url": "https://api.github.com/users/bobbytables/followers",
      "following_url": "https://api.github.com/users/bobbytables/following{/other_user}",
      "gists_url": "https://api.github.com/users/bobbytables/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bobbytables/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bobbytables/subscriptions",
      "organizations_url": "https://api.github.com/users/bobbytables/orgs",
      "repos_url": "https://api.github.com/users/bobbytables/repos",
      "events_url": "https://api.github.com/users/bobbytables/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bobbytables/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-21T15:50:27Z",
    "updated_at": "2016-06-21T15:50:27Z",
    "author_association": "NONE",
    "body": "We see this same problem with the Ruby client as well. Idle connection setting on AWS ELB is default 60s and once we increased it our calls stopped failing as frequently. We see a status 14 error happening in the client side.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/260886898",
    "html_url": "https://github.com/grpc/grpc/issues/5468#issuecomment-260886898",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5468",
    "id": 260886898,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDg4Njg5OA==",
    "user": {
      "login": "alamaison",
      "id": 596743,
      "node_id": "MDQ6VXNlcjU5Njc0Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/596743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alamaison",
      "html_url": "https://github.com/alamaison",
      "followers_url": "https://api.github.com/users/alamaison/followers",
      "following_url": "https://api.github.com/users/alamaison/following{/other_user}",
      "gists_url": "https://api.github.com/users/alamaison/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alamaison/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alamaison/subscriptions",
      "organizations_url": "https://api.github.com/users/alamaison/orgs",
      "repos_url": "https://api.github.com/users/alamaison/repos",
      "events_url": "https://api.github.com/users/alamaison/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alamaison/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-16T08:43:04Z",
    "updated_at": "2016-11-16T08:43:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "Does closing this ticket mean it's been fixed. Can you share any details of the fix?\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/261098089",
    "html_url": "https://github.com/grpc/grpc/issues/5468#issuecomment-261098089",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5468",
    "id": 261098089,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MTA5ODA4OQ==",
    "user": {
      "login": "ejona86",
      "id": 2811396,
      "node_id": "MDQ6VXNlcjI4MTEzOTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2811396?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ejona86",
      "html_url": "https://github.com/ejona86",
      "followers_url": "https://api.github.com/users/ejona86/followers",
      "following_url": "https://api.github.com/users/ejona86/following{/other_user}",
      "gists_url": "https://api.github.com/users/ejona86/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ejona86/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ejona86/subscriptions",
      "organizations_url": "https://api.github.com/users/ejona86/orgs",
      "repos_url": "https://api.github.com/users/ejona86/repos",
      "events_url": "https://api.github.com/users/ejona86/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ejona86/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-16T22:49:11Z",
    "updated_at": "2016-11-16T22:49:11Z",
    "author_association": "MEMBER",
    "body": "If the problem is just AWS ELB issues, then #7957 is a bit more refined issue to discuss on. I guess missing from that issue is keepalive support (grpc/grpc-java#1648 for java), which would cause gRPC to send PINGs after a configurable delay of inactivity (so you could configure it for 45s). Keepalive is scheduled to be complete for all implementations this quarter. Although the Java issue says keepalive won't go below one minute, there's some followup designs I need to publish that allow it to be much more aggressive if the service owner is willing to allow it.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/395932549",
    "html_url": "https://github.com/grpc/grpc/issues/5468#issuecomment-395932549",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5468",
    "id": 395932549,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTkzMjU0OQ==",
    "user": {
      "login": "jiehu567",
      "id": 8924449,
      "node_id": "MDQ6VXNlcjg5MjQ0NDk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8924449?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jiehu567",
      "html_url": "https://github.com/jiehu567",
      "followers_url": "https://api.github.com/users/jiehu567/followers",
      "following_url": "https://api.github.com/users/jiehu567/following{/other_user}",
      "gists_url": "https://api.github.com/users/jiehu567/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jiehu567/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jiehu567/subscriptions",
      "organizations_url": "https://api.github.com/users/jiehu567/orgs",
      "repos_url": "https://api.github.com/users/jiehu567/repos",
      "events_url": "https://api.github.com/users/jiehu567/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jiehu567/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-09T02:15:26Z",
    "updated_at": "2018-06-09T02:15:26Z",
    "author_association": "NONE",
    "body": "Hi, I'm new user of gRPC, and I'm using python. can anyone tell me how to detect if the connection is shutdown from gRPC client side? and how to reconnect with a different channel? Better with example, I couldn't find in docs. And I've tried set futuer / describe etc. I'm using gRPC for a real-time service and any delay might lose users.  Tnx"
  }
]
