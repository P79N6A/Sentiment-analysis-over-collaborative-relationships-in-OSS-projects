[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/239212169",
    "html_url": "https://github.com/grpc/grpc/issues/7705#issuecomment-239212169",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7705",
    "id": 239212169,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTIxMjE2OQ==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-11T16:20:08Z",
    "updated_at": "2016-08-11T16:20:32Z",
    "author_association": "MEMBER",
    "body": "Some relevant parts of the trace (omitting potentially sensitive details):\n\n```\n...\nI0810 16:55:57.951353128   10462 call.c:1690]                grpc_call_start_batch(call=0x1b483b0, ops=0x1b490a0, nops=1, tag=0x1b5ba60, reserved=(nil))\nI0810 16:55:57.951373206   10462 call.c:1366]                ops[0]: RECV_STATUS_ON_CLIENT metadata=0x1b5dca8 status=0x1b5dcc0 details=0x1b5dcc8\n...\nI0810 16:55:57.977201666   10462 call.c:1690]                grpc_call_start_batch(call=0x1b483b0, ops=0x1b5ba90, nops=1, tag=0x1b7c5b0, reserved=(nil))\nI0810 16:55:57.977214537   10462 call.c:1366]                ops[0]: RECV_MESSAGE ptr=0x1b5bb18\n...\nI0810 16:55:57.980176907   10470 parsing.c:723]              HTTP:1:TRL:CLI: grpc-status: [redacted]\nI0810 16:55:57.980185245   10470 parsing.c:723]              HTTP:1:TRL:CLI: grpc-message: [redacted]\nI0810 16:55:57.980205481   10470 completion_queue.c:252]     grpc_cq_end_op(exec_ctx=0x7fa9d640de10, cc=0x1b4a390, tag=0x1b7c5b0, error=null, done=0x7fa9d7c595e0, done_arg=0x1b48418, storage=0x1b48420)\nI0810 16:55:57.980214680   10470 completion_queue.c:394]     RETURN_EVENT[0x1b4a390]: OP_COMPLETE: tag:0x1b7c5b0 OK\n```\n\nThat is the end of the trace.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/239252807",
    "html_url": "https://github.com/grpc/grpc/issues/7705#issuecomment-239252807",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7705",
    "id": 239252807,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTI1MjgwNw==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-11T18:42:35Z",
    "updated_at": "2016-08-11T18:42:35Z",
    "author_association": "MEMBER",
    "body": "When you're done writing, you have to say so with `stream.end()`.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/239267030",
    "html_url": "https://github.com/grpc/grpc/issues/7705#issuecomment-239267030",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7705",
    "id": 239267030,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTI2NzAzMA==",
    "user": {
      "login": "mikelehen",
      "id": 206364,
      "node_id": "MDQ6VXNlcjIwNjM2NA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/206364?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikelehen",
      "html_url": "https://github.com/mikelehen",
      "followers_url": "https://api.github.com/users/mikelehen/followers",
      "following_url": "https://api.github.com/users/mikelehen/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikelehen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikelehen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikelehen/subscriptions",
      "organizations_url": "https://api.github.com/users/mikelehen/orgs",
      "repos_url": "https://api.github.com/users/mikelehen/repos",
      "events_url": "https://api.github.com/users/mikelehen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikelehen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-11T19:33:45Z",
    "updated_at": "2016-08-11T19:33:45Z",
    "author_association": "NONE",
    "body": "Hrm.  FWIW, I did not have to (or want to) call stream.end() in my repro (I would have ideally kept sending more requests to the stream had there not been an error).\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/239275959",
    "html_url": "https://github.com/grpc/grpc/issues/7705#issuecomment-239275959",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7705",
    "id": 239275959,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTI3NTk1OQ==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-11T20:07:00Z",
    "updated_at": "2016-08-11T20:07:00Z",
    "author_association": "MEMBER",
    "body": "I'm not sure what you mean. You have to call `stream.end()` when you're done writing in general. That is not the only thing that will cause a status to be surfaced, but it guarantees that the call will complete.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/239279393",
    "html_url": "https://github.com/grpc/grpc/issues/7705#issuecomment-239279393",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7705",
    "id": 239279393,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTI3OTM5Mw==",
    "user": {
      "login": "mikelehen",
      "id": 206364,
      "node_id": "MDQ6VXNlcjIwNjM2NA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/206364?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikelehen",
      "html_url": "https://github.com/mikelehen",
      "followers_url": "https://api.github.com/users/mikelehen/followers",
      "following_url": "https://api.github.com/users/mikelehen/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikelehen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikelehen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikelehen/subscriptions",
      "organizations_url": "https://api.github.com/users/mikelehen/orgs",
      "repos_url": "https://api.github.com/users/mikelehen/repos",
      "events_url": "https://api.github.com/users/mikelehen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikelehen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-11T20:19:26Z",
    "updated_at": "2016-08-11T20:19:26Z",
    "author_association": "NONE",
    "body": "I don't understand.  Isn't the point of a bidi stream that you can keep sending data back/forth without ending the stream?\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/239281705",
    "html_url": "https://github.com/grpc/grpc/issues/7705#issuecomment-239281705",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7705",
    "id": 239281705,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTI4MTcwNQ==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-11T20:27:20Z",
    "updated_at": "2016-08-11T20:27:20Z",
    "author_association": "MEMBER",
    "body": "When I said \"when you're done writing\", I mean for the stream as a whole. The problem in the reproduction case happens because you don't write any more messages _and_ you don't call `stream.end()`. If this is happening, for example, because you're waiting for further reads to do more writes, then you probably want to either write something else or end the stream when you get the `end` event.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/239283796",
    "html_url": "https://github.com/grpc/grpc/issues/7705#issuecomment-239283796",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7705",
    "id": 239283796,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTI4Mzc5Ng==",
    "user": {
      "login": "mikelehen",
      "id": 206364,
      "node_id": "MDQ6VXNlcjIwNjM2NA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/206364?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikelehen",
      "html_url": "https://github.com/mikelehen",
      "followers_url": "https://api.github.com/users/mikelehen/followers",
      "following_url": "https://api.github.com/users/mikelehen/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikelehen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikelehen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikelehen/subscriptions",
      "organizations_url": "https://api.github.com/users/mikelehen/orgs",
      "repos_url": "https://api.github.com/users/mikelehen/repos",
      "events_url": "https://api.github.com/users/mikelehen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikelehen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-11T20:35:20Z",
    "updated_at": "2016-08-11T20:35:20Z",
    "author_association": "NONE",
    "body": "Oh, wow.  Interesting.  Sure enough, if I call stream.end() in response to the 'end' event, then I get 'finish', 'status', and 'error' events, in that order.\n\nIs this expected / correct behavior?  I am surprised that you're supposed to call stream.end() in response to an 'end' event.  Surely it is already \"ended\" at that point?  And in general, I'm not sure why errors would not just be surfaced immediately upon being received...\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/239287841",
    "html_url": "https://github.com/grpc/grpc/issues/7705#issuecomment-239287841",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7705",
    "id": 239287841,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTI4Nzg0MQ==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-11T20:49:20Z",
    "updated_at": "2016-08-11T20:49:20Z",
    "author_association": "MEMBER",
    "body": "The 'end' event means \"There are no more messages to _read_\". The `stream.end()` function call means \"I have no more messages to _write_\". In a bidi call, those conditions are independent. The 'finish' event is just a listener for `stream.end()`.\n\nAs for errors not being surfaced immediately, I think that's kind of an optimization. We intentionally don't provide a lot of guarantees about errors because they're supposed to be unusual, and they interrupt the normal flow of a call.\n\nIt's possible that that will change, but in any case, I think that for any bidi call you can make, you should be able to find some scenario or event where you know that you will not send any more messages, and at that point, you should call `stream.end()`.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/239289127",
    "html_url": "https://github.com/grpc/grpc/issues/7705#issuecomment-239289127",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7705",
    "id": 239289127,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTI4OTEyNw==",
    "user": {
      "login": "mikelehen",
      "id": 206364,
      "node_id": "MDQ6VXNlcjIwNjM2NA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/206364?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikelehen",
      "html_url": "https://github.com/mikelehen",
      "followers_url": "https://api.github.com/users/mikelehen/followers",
      "following_url": "https://api.github.com/users/mikelehen/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikelehen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikelehen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikelehen/subscriptions",
      "organizations_url": "https://api.github.com/users/mikelehen/orgs",
      "repos_url": "https://api.github.com/users/mikelehen/repos",
      "events_url": "https://api.github.com/users/mikelehen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikelehen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-11T20:54:08Z",
    "updated_at": "2016-08-11T20:54:08Z",
    "author_association": "NONE",
    "body": "Hrm.  That's definitely not the case for us.  We leave the stream open indefinitely but need errors as soon as they happen.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/247373124",
    "html_url": "https://github.com/grpc/grpc/issues/7705#issuecomment-247373124",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7705",
    "id": 247373124,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzM3MzEyNA==",
    "user": {
      "login": "mikelehen",
      "id": 206364,
      "node_id": "MDQ6VXNlcjIwNjM2NA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/206364?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikelehen",
      "html_url": "https://github.com/mikelehen",
      "followers_url": "https://api.github.com/users/mikelehen/followers",
      "following_url": "https://api.github.com/users/mikelehen/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikelehen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikelehen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikelehen/subscriptions",
      "organizations_url": "https://api.github.com/users/mikelehen/orgs",
      "repos_url": "https://api.github.com/users/mikelehen/repos",
      "events_url": "https://api.github.com/users/mikelehen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikelehen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-15T16:06:56Z",
    "updated_at": "2016-09-15T16:06:56Z",
    "author_association": "NONE",
    "body": "Can we get this scheduled to a milestone?  we have some pretty hacky code to work around it.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/256773992",
    "html_url": "https://github.com/grpc/grpc/issues/7705#issuecomment-256773992",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7705",
    "id": 256773992,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1Njc3Mzk5Mg==",
    "user": {
      "login": "paralin",
      "id": 534887,
      "node_id": "MDQ6VXNlcjUzNDg4Nw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/534887?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paralin",
      "html_url": "https://github.com/paralin",
      "followers_url": "https://api.github.com/users/paralin/followers",
      "following_url": "https://api.github.com/users/paralin/following{/other_user}",
      "gists_url": "https://api.github.com/users/paralin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paralin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paralin/subscriptions",
      "organizations_url": "https://api.github.com/users/paralin/orgs",
      "repos_url": "https://api.github.com/users/paralin/repos",
      "events_url": "https://api.github.com/users/paralin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paralin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-27T21:23:24Z",
    "updated_at": "2016-10-27T21:24:03Z",
    "author_association": "NONE",
    "body": "@mikelehen How did you work around it? I'm facing this now with http://github.com/paralin/grpc-bus\n\nIt doesn't make sense to keep sending stuff while the server isn't listening after an error.\n\nAny changes around this @nathanielmanistaatgoogle @murgatroid99 ?\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/256776127",
    "html_url": "https://github.com/grpc/grpc/issues/7705#issuecomment-256776127",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7705",
    "id": 256776127,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1Njc3NjEyNw==",
    "user": {
      "login": "paralin",
      "id": 534887,
      "node_id": "MDQ6VXNlcjUzNDg4Nw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/534887?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paralin",
      "html_url": "https://github.com/paralin",
      "followers_url": "https://api.github.com/users/paralin/followers",
      "following_url": "https://api.github.com/users/paralin/following{/other_user}",
      "gists_url": "https://api.github.com/users/paralin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paralin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paralin/subscriptions",
      "organizations_url": "https://api.github.com/users/paralin/orgs",
      "repos_url": "https://api.github.com/users/paralin/repos",
      "events_url": "https://api.github.com/users/paralin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paralin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-27T21:32:43Z",
    "updated_at": "2016-10-27T21:32:43Z",
    "author_association": "NONE",
    "body": "Also, is there any kind of documentation on these events? ...\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/256809879",
    "html_url": "https://github.com/grpc/grpc/issues/7705#issuecomment-256809879",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7705",
    "id": 256809879,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjgwOTg3OQ==",
    "user": {
      "login": "mikelehen",
      "id": 206364,
      "node_id": "MDQ6VXNlcjIwNjM2NA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/206364?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikelehen",
      "html_url": "https://github.com/mikelehen",
      "followers_url": "https://api.github.com/users/mikelehen/followers",
      "following_url": "https://api.github.com/users/mikelehen/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikelehen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikelehen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikelehen/subscriptions",
      "organizations_url": "https://api.github.com/users/mikelehen/orgs",
      "repos_url": "https://api.github.com/users/mikelehen/repos",
      "events_url": "https://api.github.com/users/mikelehen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikelehen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-28T00:53:16Z",
    "updated_at": "2016-10-28T00:53:16Z",
    "author_association": "NONE",
    "body": "My workaround is to make sure that I call stream.end() if I receive an 'end' event on the stream, and then when I get the subsequent 'finish' event, I wait an additional 2 seconds before completely cleaning up, because I may finally get an 'error' event for the error during that time period.  It's a big hack. :-(\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/256812057",
    "html_url": "https://github.com/grpc/grpc/issues/7705#issuecomment-256812057",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7705",
    "id": 256812057,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjgxMjA1Nw==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-28T01:10:47Z",
    "updated_at": "2016-10-28T01:10:47Z",
    "author_association": "MEMBER",
    "body": "Someone had a similar problem in #8134, and the solution is to basically do this:\n\n``` js\nstream.on('end', function() {\n  stream.end()\n});\nstream.on('status', function(status) {\n  if (status.code != grpc.status.OK) {\n    // Do error handling\n  }\n  // Do cleanup\n});\nstream.on('error', function() {});\n```\n\nIn addition, I may have been wrong about when errors are surfaced, and it may actually be a bug that you need the `end` handler at all.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/256817864",
    "html_url": "https://github.com/grpc/grpc/issues/7705#issuecomment-256817864",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7705",
    "id": 256817864,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjgxNzg2NA==",
    "user": {
      "login": "paralin",
      "id": 534887,
      "node_id": "MDQ6VXNlcjUzNDg4Nw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/534887?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paralin",
      "html_url": "https://github.com/paralin",
      "followers_url": "https://api.github.com/users/paralin/followers",
      "following_url": "https://api.github.com/users/paralin/following{/other_user}",
      "gists_url": "https://api.github.com/users/paralin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paralin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paralin/subscriptions",
      "organizations_url": "https://api.github.com/users/paralin/orgs",
      "repos_url": "https://api.github.com/users/paralin/repos",
      "events_url": "https://api.github.com/users/paralin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paralin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-28T01:58:41Z",
    "updated_at": "2016-10-28T01:59:04Z",
    "author_association": "NONE",
    "body": "This is some seriously clunky stuff. Can we just make `end` signal the end of all emits? Including status and error?\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/266885527",
    "html_url": "https://github.com/grpc/grpc/issues/7705#issuecomment-266885527",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7705",
    "id": 266885527,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2Njg4NTUyNw==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-13T22:41:43Z",
    "updated_at": "2016-12-13T22:41:43Z",
    "author_association": "MEMBER",
    "body": "The `end` event has existing meaning in Node streams, and we're not going to change that. But I think I can make the `status` event always be last, to serve basically the same purpose."
  }
]
