[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/142433477",
    "html_url": "https://github.com/grpc/grpc/issues/3421#issuecomment-142433477",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/3421",
    "id": 142433477,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MjQzMzQ3Nw==",
    "user": {
      "login": "jcanizales",
      "id": 5120183,
      "node_id": "MDQ6VXNlcjUxMjAxODM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5120183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jcanizales",
      "html_url": "https://github.com/jcanizales",
      "followers_url": "https://api.github.com/users/jcanizales/followers",
      "following_url": "https://api.github.com/users/jcanizales/following{/other_user}",
      "gists_url": "https://api.github.com/users/jcanizales/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jcanizales/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jcanizales/subscriptions",
      "organizations_url": "https://api.github.com/users/jcanizales/orgs",
      "repos_url": "https://api.github.com/users/jcanizales/repos",
      "events_url": "https://api.github.com/users/jcanizales/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jcanizales/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-22T21:54:37Z",
    "updated_at": "2015-09-22T21:54:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm not too worried about bloat, because that comes mostly from proto message fields, which are usually >> N(service methods).\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/150727514",
    "html_url": "https://github.com/grpc/grpc/issues/3421#issuecomment-150727514",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/3421",
    "id": 150727514,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDcyNzUxNA==",
    "user": {
      "login": "jcanizales",
      "id": 5120183,
      "node_id": "MDQ6VXNlcjUxMjAxODM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5120183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jcanizales",
      "html_url": "https://github.com/jcanizales",
      "followers_url": "https://api.github.com/users/jcanizales/followers",
      "following_url": "https://api.github.com/users/jcanizales/following{/other_user}",
      "gists_url": "https://api.github.com/users/jcanizales/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jcanizales/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jcanizales/subscriptions",
      "organizations_url": "https://api.github.com/users/jcanizales/orgs",
      "repos_url": "https://api.github.com/users/jcanizales/repos",
      "events_url": "https://api.github.com/users/jcanizales/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jcanizales/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-24T00:30:49Z",
    "updated_at": "2015-10-24T00:30:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "Current plan is to generate something like:\n\n``` objective-c\n#import <RxLibrary/GRXWriter+Blocking.h>\n...\n// non-streaming responses\n- (Resp *)blockingMethodNameWithRequest:(Req *)request\n                                  error:(NSError * __autoreleasing*)error {\n  ProtoRPC *call = [self RPCToMethodNameWithRequest:request];\n  NSEnumerator *responses = [NSEnumerator grx_blockingEnumeratorWithWriter:call];\n  Resp *response = [responses next]; // blocks until next response or error.\n  if (error) {\n    *error = responses.error;\n  }\n  return response;\n}\n...\n// streaming responses\n- (NSEnumerator *)blockingMethodNameWithRequest:(Req *)request {\n  ProtoRPC *call = [self RPCToMethodNameWithRequest:request];\n  return [NSEnumerator grx_blockingEnumeratorWithWriter:call];\n}\n```\n\nNote that this would currently prevent headers from being set - but we already plan to let set default headers at the service-object level. It also requires generating `- [ProtoService RPCToMethodNameWithRequest:]` (without handler), which isn't done currently.\n\nThe blocking enumerator can be implemented using a [semaphore](https://developer.apple.com/library/ios/documentation/General/Conceptual/ConcurrencyProgrammingGuide/OperationQueues/OperationQueues.html#//apple_ref/doc/uid/TP40008091-CH102-SW24), which is +1'd when a new response arrives and -1'd when `-[next]` is called.\n\nWe could then also make it super fancy and let the user specify the max number of elements to buffer (throttling the server if it's full), and add a `count` property so one can check if `-[next]` would block.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/154509252",
    "html_url": "https://github.com/grpc/grpc/issues/3421#issuecomment-154509252",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/3421",
    "id": 154509252,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NDUwOTI1Mg==",
    "user": {
      "login": "jcanizales",
      "id": 5120183,
      "node_id": "MDQ6VXNlcjUxMjAxODM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5120183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jcanizales",
      "html_url": "https://github.com/jcanizales",
      "followers_url": "https://api.github.com/users/jcanizales/followers",
      "following_url": "https://api.github.com/users/jcanizales/following{/other_user}",
      "gists_url": "https://api.github.com/users/jcanizales/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jcanizales/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jcanizales/subscriptions",
      "organizations_url": "https://api.github.com/users/jcanizales/orgs",
      "repos_url": "https://api.github.com/users/jcanizales/repos",
      "events_url": "https://api.github.com/users/jcanizales/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jcanizales/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-06T19:27:23Z",
    "updated_at": "2015-11-06T19:27:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "Also, Eli: Because `ProtoRPC` (and `GRPCCall`) objects are instances of `GRXWriter`, they can be used as a request for a following RPC. And you can use `-[map:]` to transform values between calls. I know that in your specific case you don't care about blocking your thread, but how does the \"chained function behemoth\" look like if you leverage those things?\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/350555484",
    "html_url": "https://github.com/grpc/grpc/issues/3421#issuecomment-350555484",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/3421",
    "id": 350555484,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDU1NTQ4NA==",
    "user": {
      "login": "bootstraponline",
      "id": 1173057,
      "node_id": "MDQ6VXNlcjExNzMwNTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1173057?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bootstraponline",
      "html_url": "https://github.com/bootstraponline",
      "followers_url": "https://api.github.com/users/bootstraponline/followers",
      "following_url": "https://api.github.com/users/bootstraponline/following{/other_user}",
      "gists_url": "https://api.github.com/users/bootstraponline/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bootstraponline/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bootstraponline/subscriptions",
      "organizations_url": "https://api.github.com/users/bootstraponline/orgs",
      "repos_url": "https://api.github.com/users/bootstraponline/repos",
      "events_url": "https://api.github.com/users/bootstraponline/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bootstraponline/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-10T15:19:59Z",
    "updated_at": "2017-12-10T15:19:59Z",
    "author_association": "NONE",
    "body": "Is there any update on a synchronous API for Objective C?"
  }
]
