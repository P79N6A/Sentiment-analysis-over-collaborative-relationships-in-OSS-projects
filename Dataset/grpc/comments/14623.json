[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/377203265",
    "html_url": "https://github.com/grpc/grpc/issues/14623#issuecomment-377203265",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14623",
    "id": 377203265,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzIwMzI2NQ==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-29T11:15:17Z",
    "updated_at": "2018-03-29T11:30:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "Pragmatically, different projects use different naming conventions for the libraries they generated.\r\nIn cmake world there is no consensus about whether the debug libraries on windows should have the \"d\" suffix or not. Protobuf and zlib (both are our dependencies and they are entirely separate projects) choose to use the \"d\" suffix for debug libraries, but other projects (like boringssl and grpc itself do not, as well as c-ares which your are not mentioning). I don't think we can be responsible for unifying the suffix conventions for projects that are out of our control.\r\n\r\nI understand the pain around setting up your builds that use both grpc and protobuf and that it potentially adds complexity to your build files. On the other hand, this really depends on the way your CMakeLists.txt is designed and there are ways to write it in a way so that you don't run into the problem you are mentioning (again, there's no \"standardized\" way to write it in the cmake world).\r\n\r\nSpecifically:\r\n- if you are adding grpc to your project using `add_subdirectory(  )`, you can refer to the grpc targets directly as `grpc++` and similar as the grpc-defined targets will be imported into your project automatically - no need to use the filenames of the actual libraries.\r\n\r\n- if you are adding grpc to your project via `find_package(gRPC CONFIG)`, you can also refer to the grpc targets directly.\r\n\r\n- if you are using `ExternalProject_Add`, I'd advise you to use the \"superbuild\" technique so you avoid recreating the grpc targets manually (as `IMPORTED` targets).\r\n\r\nSeeing an example of your CMakeLists.txt would be helpful (it seems like you are manually importing the grpc and protobuf libraries using the resulting filenames).\r\n\r\nSome very useful examples how to use gRPC with cmake are here:\r\nhttps://github.com/grpc/grpc/blob/master/examples/cpp/helloworld/CMakeLists.txt\r\nhttps://github.com/grpc/grpc/blob/master/examples/cpp/helloworld/cmake_externalproject/CMakeLists.txt\r\n(as you can see, none of the examples suffers from the \"inconsistent suffix\" problem)."
  }
]
