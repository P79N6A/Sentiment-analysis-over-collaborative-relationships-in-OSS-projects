[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/311836290",
    "html_url": "https://github.com/grpc/grpc/issues/11522#issuecomment-311836290",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11522",
    "id": 311836290,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMTgzNjI5MA==",
    "user": {
      "login": "dgquintas",
      "id": 120217,
      "node_id": "MDQ6VXNlcjEyMDIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/120217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgquintas",
      "html_url": "https://github.com/dgquintas",
      "followers_url": "https://api.github.com/users/dgquintas/followers",
      "following_url": "https://api.github.com/users/dgquintas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgquintas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgquintas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgquintas/subscriptions",
      "organizations_url": "https://api.github.com/users/dgquintas/orgs",
      "repos_url": "https://api.github.com/users/dgquintas/repos",
      "events_url": "https://api.github.com/users/dgquintas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgquintas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-29T01:24:29Z",
    "updated_at": "2017-06-29T01:24:29Z",
    "author_association": "NONE",
    "body": "Again: https://sponge.corp.google.com/target?id=a6c2123f-2e99-49e4-9d35-aa6c6cfaa8b3&target=grpc/windows/pull_request/grpc_master&searchFor=&show=FAILED&sortBy=STATUS\r\n\r\n```\r\nD0628 16:34:44.203000000  1960 dns_resolver.c:301] Using native dns resolver\r\nD0628 16:34:44.218000000   644 parsing.c:523] received initial metadata size exceeds limit (16507 vs. 16384)\r\nE0628 16:34:44.218000000  1960 large_metadata.c:178] assertion failed: *p++ == 0\r\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/312027386",
    "html_url": "https://github.com/grpc/grpc/issues/11522#issuecomment-312027386",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11522",
    "id": 312027386,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjAyNzM4Ng==",
    "user": {
      "login": "dgquintas",
      "id": 120217,
      "node_id": "MDQ6VXNlcjEyMDIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/120217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgquintas",
      "html_url": "https://github.com/dgquintas",
      "followers_url": "https://api.github.com/users/dgquintas/followers",
      "following_url": "https://api.github.com/users/dgquintas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgquintas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgquintas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgquintas/subscriptions",
      "organizations_url": "https://api.github.com/users/dgquintas/orgs",
      "repos_url": "https://api.github.com/users/dgquintas/repos",
      "events_url": "https://api.github.com/users/dgquintas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgquintas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-29T16:54:27Z",
    "updated_at": "2017-06-29T16:54:27Z",
    "author_association": "NONE",
    "body": "And again: https://grpc-testing.appspot.com/job/gRPC_pull_requests_msan_c/5561/testReport/junit/(root)/c_linux_msan_native/bins_msan_large_metadata_bad_client_test_GRPC_POLL_STRATEGY_epollsig/\r\n\r\n```\r\nI0629 02:24:20.845183162   10689 ev_epollsig_linux.c:74]     epoll engine will be using signal: 40\r\nD0629 02:24:20.845304896   10689 ev_posix.c:110]             Using polling engine: epollsig\r\nD0629 02:24:20.845398792   10689 dns_resolver.c:301]         Using native dns resolver\r\nD0629 02:24:20.877800841   10759 parsing.c:523]              received initial metadata size exceeds limit (16507 vs. 16384)\r\nE0629 02:24:20.880804479   10689 large_metadata.c:180]       assertion failed: *p++ == 4\r\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/313516385",
    "html_url": "https://github.com/grpc/grpc/issues/11522#issuecomment-313516385",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11522",
    "id": 313516385,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzUxNjM4NQ==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-06T20:54:10Z",
    "updated_at": "2017-07-06T20:54:10Z",
    "author_association": "MEMBER",
    "body": "It looks like the problem is that the client validator is not getting all of the data sent by the server.  In a successful run, the client sees the following data:\r\n\r\n```\r\nD0706 13:23:50.694726299   20825 parsing.c:523]              received initial metadata size exceeds limit (8299 vs. 8192)\r\nI0706 13:23:50.695629366   20822 large_metadata.c:181]       RESPONSE SLICE 0: 00 00 18 04 00 00 00 00 00 00 04 00 00 ff ff 00 05 00 01 00 2a 00 06 00 00 20 00 fe 03 00 00 00 01 00 00 00 04 01 00 00 00 00 00 00 76 01 05 00 00 00 01 00 07 3a 73 74 61 74 75 73 03 32 30 30 00 0c 63 6f 6e 74 65 6e 74 2d 74 79 70 65 10 61 70 70 6c 69 63 61 74 69 6f 6e 2f 67 72 70 63 00 0b 67 72 70 63 2d 73 74 61 74 75 73 01 38 00 0c 67 72 70 63 2d 6d 65 73 73 61 67 65 2c 72 65 63 65 69 76 65 64 20 69 6e 69 74 69 61 6c 20 6d 65 74 61 64 61 74 61 20 73 69 7a 65 20 65 78 63 65 65 64 73 20 6c 69 6d 69 74 00 00 04 03 00 00 00 00 01 00 00 00 00 00 00 53 01 05 00 00 00 01 00 07 3a 73 74 61 74 75 73 03 32 30 30 00 0c 63 6f 6e 74 65 6e 74 2d 74 79 70 65 10 61 70 70 6c 69 63 61 74 69 6f 6e 2f 67 72 70 63 00 0b 67 72 70 63 2d 73 74 61 74 75 73 01 31 00 0c 67 72 70 63 2d 6d 65 73 73 61 67 65 09 43 61 6e 63 65 6c 6c 65 64 '....................*.... ..................v........:status.200..content-type.application/grpc..grpc-status.8..grpc-message,received initial metadata size exceeds limit...............S........:status.200..content-type.application/grpc..grpc-status.1..grpc-message.Cancelled'\r\n```\r\n\r\nBut in a failed run, it sees only this:\r\n\r\n```\r\nD0706 13:00:01.699885217   18108 parsing.c:523]              received initial metadata size exceeds limit (8299 vs. 8192)\r\nI0706 13:00:01.700394304   18093 large_metadata.c:181]       RESPONSE SLICE 0: 00 00 18 04 00 00 00 00 00 00 04 00 00 ff ff 00 05 00 01 00 '....................'\r\n```\r\n\r\nNote that in large_metadata_bad_client_test, the client validator is assuming that the last 13 bytes of the data sent by the server are an HTTP/2 RST_STREAM frame.  However, if it is not passed all of the data from the server, then the last 13 bytes of what it sees are not the frame it's expecting.\r\n\r\nI think the underlying problem is that the bad_client test framework does a single `grpc_endpoint_read()` and passes the result to the client validator.  This causes test flakiness when the server sends a large amount of data and the kernel does not return all of the data in a single read.\r\n\r\nUnfortunately, it doesn't look like there's an easy way to fix this.  I chatted with @ctiller about this, and we think the only way to completely fix this is to change the framework to parse individual HTTP/2 frames from the server, so that it knows whether or not there is more data to be read.  That's a fair amount of work -- it means effectively implementing an HTTP/2 parser -- so it's not something we're going to do anytime soon.\r\n\r\nIn the interim, I am going to attempt to reduce the flakiness by reducing the metadata size limit used in the test.  That way, the test can send less data, which will hopefully lower the odds that the kernel will return an incomplete read."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/313724043",
    "html_url": "https://github.com/grpc/grpc/issues/11522#issuecomment-313724043",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11522",
    "id": 313724043,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzcyNDA0Mw==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-07T16:05:28Z",
    "updated_at": "2017-07-07T16:05:28Z",
    "author_association": "MEMBER",
    "body": "Upon further investigation, it looks like I can't really change the test to send less data, because the response from the server is just a RST_STREAM frame, and its size does not really depend on anything in the test.\r\n\r\nInstead, I am going to change the framework to do additional reads until either (a) the client validator succeeds or (b) we hit the timeout."
  }
]
