[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/217330953",
    "html_url": "https://github.com/grpc/grpc/issues/6454#issuecomment-217330953",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6454",
    "id": 217330953,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzMzMDk1Mw==",
    "user": {
      "login": "dgquintas",
      "id": 120217,
      "node_id": "MDQ6VXNlcjEyMDIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/120217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgquintas",
      "html_url": "https://github.com/dgquintas",
      "followers_url": "https://api.github.com/users/dgquintas/followers",
      "following_url": "https://api.github.com/users/dgquintas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgquintas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgquintas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgquintas/subscriptions",
      "organizations_url": "https://api.github.com/users/dgquintas/orgs",
      "repos_url": "https://api.github.com/users/dgquintas/repos",
      "events_url": "https://api.github.com/users/dgquintas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgquintas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-06T02:05:59Z",
    "updated_at": "2016-05-06T02:07:01Z",
    "author_association": "NONE",
    "body": "I'm unable to reproduce. \n\nI have tried the following: \n1. reinforced the checks and failsafes in the core, as well as re-enabled the interop tests that check incoming compressed data to a client. (https://github.com/grpc/grpc/pull/6463). Interop tests work correctly, even under ASAN. In particular, clients are always ready to accept incoming compressed data (a client can't disable algorithms the way a server can). The interop tests exercise this path by asking the server to send back compressed data under all available algorithms. In some instances, the data is uncompressable, so the server will send it back uncompressed despite the client's request. \n2. faked the sending an unknown algorithm. This required changes in the server context that aren't possible from the application: it'd result firstly on a compile error if `ServerContext::set_compression_algorithm` is passed a value not in the `grpc_compression_algorithm` enum. Secondly, even then, the compression_filter would detect the outgoing algorithm to be invalid and simply send the data uncompressed (see [here](https://github.com/grpc/grpc/blob/master/src/core/lib/channel/compress_filter.c#L97)) The server detected this and falls back to not compressing.\n3. faked the reception of an unknown algorithm by the client. There existed a path (now fixed [here](https://github.com/grpc/grpc/pull/6463/files#diff-cca1c9f1d0c2f99c06c000729d41005aR837)) that could result in empty data being returned by the client if the received compression algorithm is unknown by the client. Note that this, based on point 2, is currently only possible if there's been corruption on the wire. \n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/217332515",
    "html_url": "https://github.com/grpc/grpc/issues/6454#issuecomment-217332515",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6454",
    "id": 217332515,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzMzMjUxNQ==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-06T02:19:53Z",
    "updated_at": "2016-05-06T02:19:53Z",
    "author_association": "MEMBER",
    "body": "Oh I may have fixed something here when I was setting up the server\nfuzzing. Would have to check commit logs. Just a sense I saw some code here\nrecently.\n\nOn Thu, May 5, 2016, 7:06 PM David G. Quintas notifications@github.com\nwrote:\n\n> I'm unable to reproduce.\n> \n> I have tried the following:\n> 1. reinforced the checks and failsafes in the core, as well as re-enabled\n> the interop tests that check incoming compressed data to a client. (#6463\n> https://github.com/grpc/grpc/pull/6463). Interop tests work correctly,\n> even under ASAN. In particular, clients are always ready to accept incoming\n> compressed data (a client can't disable algorithms the way a server can).\n> The interop tests exercise this path by asking the server to send back\n> compressed data under all available algorithms. In some instances, the data\n> is uncompressable, so the server will send it back uncompressed despite the\n> client's request.\n> 2. faked the sending an unknown algorithm. This required changes in the\n> server context that aren't possible from the application: it'd result\n> firstly on a compile error if ServerContext::set_compression_algorithm is\n> passed a value not in the grpc_compression_algorithm enum. Secondly, even\n> then, the compression_filter would detect the outgoing algorithm to be\n> invalid and simply send the data uncompressed (see compress_filter.c:94)\n> The server detected this and falls back to not compressing.\n> 3. faked the reception of an unknown algorithm by the client. There\n> existed a path (now fixed here\n> https://github.com/grpc/grpc/pull/6463/files#diff-cca1c9f1d0c2f99c06c000729d41005aR837)\n> that could result in empty data being returned by the client if the\n> received compression algorithm is unknown by the client. Note that this,\n> based on point 2, is currently only possible if there's been corruption on\n> the wire.\n> \n> â€”\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly or view it on GitHub\n> https://github.com/grpc/grpc/issues/6454#issuecomment-217330953\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/217332606",
    "html_url": "https://github.com/grpc/grpc/issues/6454#issuecomment-217332606",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6454",
    "id": 217332606,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzMzMjYwNg==",
    "user": {
      "login": "dgquintas",
      "id": 120217,
      "node_id": "MDQ6VXNlcjEyMDIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/120217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgquintas",
      "html_url": "https://github.com/dgquintas",
      "followers_url": "https://api.github.com/users/dgquintas/followers",
      "following_url": "https://api.github.com/users/dgquintas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgquintas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgquintas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgquintas/subscriptions",
      "organizations_url": "https://api.github.com/users/dgquintas/orgs",
      "repos_url": "https://api.github.com/users/dgquintas/repos",
      "events_url": "https://api.github.com/users/dgquintas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgquintas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-06T02:20:57Z",
    "updated_at": "2016-05-06T02:20:57Z",
    "author_association": "NONE",
    "body": "Yes, @jcanizales mentioned something along the lines of an unref. It's very likely the crash (which was an heisenbug and involved memory corruption) was unrelated to compression, but that use of compression somehow surfaced it.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/217335549",
    "html_url": "https://github.com/grpc/grpc/issues/6454#issuecomment-217335549",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6454",
    "id": 217335549,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzMzNTU0OQ==",
    "user": {
      "login": "jcanizales",
      "id": 5120183,
      "node_id": "MDQ6VXNlcjUxMjAxODM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5120183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jcanizales",
      "html_url": "https://github.com/jcanizales",
      "followers_url": "https://api.github.com/users/jcanizales/followers",
      "following_url": "https://api.github.com/users/jcanizales/following{/other_user}",
      "gists_url": "https://api.github.com/users/jcanizales/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jcanizales/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jcanizales/subscriptions",
      "organizations_url": "https://api.github.com/users/jcanizales/orgs",
      "repos_url": "https://api.github.com/users/jcanizales/repos",
      "events_url": "https://api.github.com/users/jcanizales/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jcanizales/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-06T02:40:44Z",
    "updated_at": "2016-05-06T02:40:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just a nit: the crash on the client was reproducible with every RPC sent to that server.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/217335839",
    "html_url": "https://github.com/grpc/grpc/issues/6454#issuecomment-217335839",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6454",
    "id": 217335839,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzMzNTgzOQ==",
    "user": {
      "login": "jcanizales",
      "id": 5120183,
      "node_id": "MDQ6VXNlcjUxMjAxODM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5120183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jcanizales",
      "html_url": "https://github.com/jcanizales",
      "followers_url": "https://api.github.com/users/jcanizales/followers",
      "following_url": "https://api.github.com/users/jcanizales/following{/other_user}",
      "gists_url": "https://api.github.com/users/jcanizales/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jcanizales/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jcanizales/subscriptions",
      "organizations_url": "https://api.github.com/users/jcanizales/orgs",
      "repos_url": "https://api.github.com/users/jcanizales/repos",
      "events_url": "https://api.github.com/users/jcanizales/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jcanizales/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-06T02:43:28Z",
    "updated_at": "2016-05-06T02:43:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think that, to be on the safe side, it's worth testing the current client against the specific server they used, even if just as a one-of.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/217335842",
    "html_url": "https://github.com/grpc/grpc/issues/6454#issuecomment-217335842",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6454",
    "id": 217335842,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzMzNTg0Mg==",
    "user": {
      "login": "dgquintas",
      "id": 120217,
      "node_id": "MDQ6VXNlcjEyMDIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/120217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgquintas",
      "html_url": "https://github.com/dgquintas",
      "followers_url": "https://api.github.com/users/dgquintas/followers",
      "following_url": "https://api.github.com/users/dgquintas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgquintas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgquintas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgquintas/subscriptions",
      "organizations_url": "https://api.github.com/users/dgquintas/orgs",
      "repos_url": "https://api.github.com/users/dgquintas/repos",
      "events_url": "https://api.github.com/users/dgquintas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgquintas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-06T02:43:30Z",
    "updated_at": "2016-05-06T02:43:30Z",
    "author_association": "NONE",
    "body": "and the crash happened _at the client_ upon receiving a response to that RPC from the server? \n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/217336116",
    "html_url": "https://github.com/grpc/grpc/issues/6454#issuecomment-217336116",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6454",
    "id": 217336116,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzMzNjExNg==",
    "user": {
      "login": "dgquintas",
      "id": 120217,
      "node_id": "MDQ6VXNlcjEyMDIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/120217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgquintas",
      "html_url": "https://github.com/dgquintas",
      "followers_url": "https://api.github.com/users/dgquintas/followers",
      "following_url": "https://api.github.com/users/dgquintas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgquintas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgquintas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgquintas/subscriptions",
      "organizations_url": "https://api.github.com/users/dgquintas/orgs",
      "repos_url": "https://api.github.com/users/dgquintas/repos",
      "events_url": "https://api.github.com/users/dgquintas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgquintas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-06T02:46:41Z",
    "updated_at": "2016-05-06T02:47:05Z",
    "author_association": "NONE",
    "body": "It'd be great if we could at least see a run with `GRPC_TRACE=all` enabled, ideally both parties.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/217336399",
    "html_url": "https://github.com/grpc/grpc/issues/6454#issuecomment-217336399",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6454",
    "id": 217336399,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzMzNjM5OQ==",
    "user": {
      "login": "jcanizales",
      "id": 5120183,
      "node_id": "MDQ6VXNlcjUxMjAxODM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5120183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jcanizales",
      "html_url": "https://github.com/jcanizales",
      "followers_url": "https://api.github.com/users/jcanizales/followers",
      "following_url": "https://api.github.com/users/jcanizales/following{/other_user}",
      "gists_url": "https://api.github.com/users/jcanizales/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jcanizales/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jcanizales/subscriptions",
      "organizations_url": "https://api.github.com/users/jcanizales/orgs",
      "repos_url": "https://api.github.com/users/jcanizales/repos",
      "events_url": "https://api.github.com/users/jcanizales/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jcanizales/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-06T02:49:39Z",
    "updated_at": "2016-05-06T02:49:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, the behavior upon receiving the response on the client was #6207, followed by a crash. The crash happened on malloc, IIRC, with a message talking of memory corruption. And @pranay saw an error mentioning an inappropriate `unref` (which could explain the memory corruption).\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/217336805",
    "html_url": "https://github.com/grpc/grpc/issues/6454#issuecomment-217336805",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6454",
    "id": 217336805,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzMzNjgwNQ==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-06T02:53:48Z",
    "updated_at": "2016-05-06T02:53:48Z",
    "author_association": "MEMBER",
    "body": "I'd rather be getting reproductions than hearsay on both these bugs.\n\nOn Thu, May 5, 2016, 7:49 PM Jorge Canizales notifications@github.com\nwrote:\n\n> Yes, the behavior upon receiving the response on the client was #6207\n> https://github.com/grpc/grpc/issues/6207, followed by a crash. The\n> crash happened on malloc, IIRC, with a message talking of memory\n> corruption. And @pranay https://github.com/pranay saw an error\n> mentioning an inappropriate unref (which could explain the memory\n> corruption).\n> \n> â€”\n> You are receiving this because you commented.\n> \n> Reply to this email directly or view it on GitHub\n> https://github.com/grpc/grpc/issues/6454#issuecomment-217336399\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/217337229",
    "html_url": "https://github.com/grpc/grpc/issues/6454#issuecomment-217337229",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6454",
    "id": 217337229,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzMzNzIyOQ==",
    "user": {
      "login": "dgquintas",
      "id": 120217,
      "node_id": "MDQ6VXNlcjEyMDIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/120217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgquintas",
      "html_url": "https://github.com/dgquintas",
      "followers_url": "https://api.github.com/users/dgquintas/followers",
      "following_url": "https://api.github.com/users/dgquintas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgquintas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgquintas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgquintas/subscriptions",
      "organizations_url": "https://api.github.com/users/dgquintas/orgs",
      "repos_url": "https://api.github.com/users/dgquintas/repos",
      "events_url": "https://api.github.com/users/dgquintas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgquintas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-06T02:58:29Z",
    "updated_at": "2016-05-06T02:58:29Z",
    "author_association": "NONE",
    "body": "Just having runs with `GRPC_TRACE=channel` would be good to have, in order to look at the metadata/headers being sent around.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/217350730",
    "html_url": "https://github.com/grpc/grpc/issues/6454#issuecomment-217350730",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6454",
    "id": 217350730,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzM1MDczMA==",
    "user": {
      "login": "jcanizales",
      "id": 5120183,
      "node_id": "MDQ6VXNlcjUxMjAxODM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5120183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jcanizales",
      "html_url": "https://github.com/jcanizales",
      "followers_url": "https://api.github.com/users/jcanizales/followers",
      "following_url": "https://api.github.com/users/jcanizales/following{/other_user}",
      "gists_url": "https://api.github.com/users/jcanizales/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jcanizales/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jcanizales/subscriptions",
      "organizations_url": "https://api.github.com/users/jcanizales/orgs",
      "repos_url": "https://api.github.com/users/jcanizales/repos",
      "events_url": "https://api.github.com/users/jcanizales/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jcanizales/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-06T05:23:18Z",
    "updated_at": "2016-05-06T05:23:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ctiller, #6207 was making Jenkins flaky for days, @makdharma reproduced it locally by running the tests repeatedly and got the traces you asked for, which he attached to that issue.\n\nFor this bug, reproducing is a bit involved, but also doable: We have to run the faulty server and make RPCs with the version of the client @pranay had. Done that way, there's no flakiness; every RPC failed like #6027 and made the client crash immediately after that. I asked him to get traces for `\"api\"` and `\"tcp\"`, which he attached. Next time I know I'll better ask for `\"all\"`.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/217371151",
    "html_url": "https://github.com/grpc/grpc/issues/6454#issuecomment-217371151",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6454",
    "id": 217371151,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzM3MTE1MQ==",
    "user": {
      "login": "pranay",
      "id": 103995,
      "node_id": "MDQ6VXNlcjEwMzk5NQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/103995?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pranay",
      "html_url": "https://github.com/pranay",
      "followers_url": "https://api.github.com/users/pranay/followers",
      "following_url": "https://api.github.com/users/pranay/following{/other_user}",
      "gists_url": "https://api.github.com/users/pranay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pranay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pranay/subscriptions",
      "organizations_url": "https://api.github.com/users/pranay/orgs",
      "repos_url": "https://api.github.com/users/pranay/repos",
      "events_url": "https://api.github.com/users/pranay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pranay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-06T07:36:27Z",
    "updated_at": "2016-05-06T07:36:27Z",
    "author_association": "NONE",
    "body": "As @jcanizales said, it should be easy to reproduce, we just have to replicate the old setup (which should be easy too, we just need to turn compression back on).\nYou can find the stack traces I captured in the internal bug.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/219808143",
    "html_url": "https://github.com/grpc/grpc/issues/6454#issuecomment-219808143",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6454",
    "id": 219808143,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTgwODE0Mw==",
    "user": {
      "login": "dgquintas",
      "id": 120217,
      "node_id": "MDQ6VXNlcjEyMDIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/120217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgquintas",
      "html_url": "https://github.com/dgquintas",
      "followers_url": "https://api.github.com/users/dgquintas/followers",
      "following_url": "https://api.github.com/users/dgquintas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgquintas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgquintas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgquintas/subscriptions",
      "organizations_url": "https://api.github.com/users/dgquintas/orgs",
      "repos_url": "https://api.github.com/users/dgquintas/repos",
      "events_url": "https://api.github.com/users/dgquintas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgquintas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-17T18:22:05Z",
    "updated_at": "2016-05-17T18:22:05Z",
    "author_association": "NONE",
    "body": "As discussed, can't repro locally. Closing this issue for now. Feel free to revive.\n"
  }
]
