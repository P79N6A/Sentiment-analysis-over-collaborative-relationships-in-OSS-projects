[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/359057099",
    "html_url": "https://github.com/grpc/grpc/pull/14077#issuecomment-359057099",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14077",
    "id": 359057099,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTA1NzA5OQ==",
    "user": {
      "login": "mehrdada",
      "id": 900411,
      "node_id": "MDQ6VXNlcjkwMDQxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/900411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mehrdada",
      "html_url": "https://github.com/mehrdada",
      "followers_url": "https://api.github.com/users/mehrdada/followers",
      "following_url": "https://api.github.com/users/mehrdada/following{/other_user}",
      "gists_url": "https://api.github.com/users/mehrdada/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mehrdada/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mehrdada/subscriptions",
      "organizations_url": "https://api.github.com/users/mehrdada/orgs",
      "repos_url": "https://api.github.com/users/mehrdada/repos",
      "events_url": "https://api.github.com/users/mehrdada/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mehrdada/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-19T18:55:24Z",
    "updated_at": "2018-01-19T18:55:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "Do we need to wait for this to land before branch cut? If yes please tag it as such"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/359059454",
    "html_url": "https://github.com/grpc/grpc/pull/14077#issuecomment-359059454",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14077",
    "id": 359059454,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTA1OTQ1NA==",
    "user": {
      "login": "kpayson64",
      "id": 18316330,
      "node_id": "MDQ6VXNlcjE4MzE2MzMw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18316330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kpayson64",
      "html_url": "https://github.com/kpayson64",
      "followers_url": "https://api.github.com/users/kpayson64/followers",
      "following_url": "https://api.github.com/users/kpayson64/following{/other_user}",
      "gists_url": "https://api.github.com/users/kpayson64/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kpayson64/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kpayson64/subscriptions",
      "organizations_url": "https://api.github.com/users/kpayson64/orgs",
      "repos_url": "https://api.github.com/users/kpayson64/repos",
      "events_url": "https://api.github.com/users/kpayson64/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kpayson64/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-19T19:04:55Z",
    "updated_at": "2018-01-19T19:04:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mehrdada Can you point to exactly where this should be added to the interceptor examples?  I didn't see a use case for and this should be a non-breaking API change."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/359061111",
    "html_url": "https://github.com/grpc/grpc/pull/14077#issuecomment-359061111",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14077",
    "id": 359061111,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTA2MTExMQ==",
    "user": {
      "login": "mehrdada",
      "id": 900411,
      "node_id": "MDQ6VXNlcjkwMDQxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/900411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mehrdada",
      "html_url": "https://github.com/mehrdada",
      "followers_url": "https://api.github.com/users/mehrdada/followers",
      "following_url": "https://api.github.com/users/mehrdada/following{/other_user}",
      "gists_url": "https://api.github.com/users/mehrdada/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mehrdada/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mehrdada/subscriptions",
      "organizations_url": "https://api.github.com/users/mehrdada/orgs",
      "repos_url": "https://api.github.com/users/mehrdada/repos",
      "events_url": "https://api.github.com/users/mehrdada/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mehrdada/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-19T19:11:20Z",
    "updated_at": "2018-01-19T19:14:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "@kpayson64 specifically classes that implement the ClientCallDetails interface like https://github.com/grpc/grpc/blob/master/examples/python/interceptors/headers/header_manipulator_client_interceptor.py#L22 \r\n\r\n(this might be the only one, actually)"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/359063917",
    "html_url": "https://github.com/grpc/grpc/pull/14077#issuecomment-359063917",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14077",
    "id": 359063917,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTA2MzkxNw==",
    "user": {
      "login": "kpayson64",
      "id": 18316330,
      "node_id": "MDQ6VXNlcjE4MzE2MzMw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18316330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kpayson64",
      "html_url": "https://github.com/kpayson64",
      "followers_url": "https://api.github.com/users/kpayson64/followers",
      "following_url": "https://api.github.com/users/kpayson64/following{/other_user}",
      "gists_url": "https://api.github.com/users/kpayson64/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kpayson64/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kpayson64/subscriptions",
      "organizations_url": "https://api.github.com/users/kpayson64/orgs",
      "repos_url": "https://api.github.com/users/kpayson64/repos",
      "events_url": "https://api.github.com/users/kpayson64/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kpayson64/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-19T19:22:28Z",
    "updated_at": "2018-01-19T19:22:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mehrdada \r\nI can make that small change, but I'm actually pretty worried about that.\r\n\r\nAFAICT, not updating the example will cause it to break?  That would make this a breaking api change right?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/360331954",
    "html_url": "https://github.com/grpc/grpc/pull/14077#issuecomment-360331954",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14077",
    "id": 360331954,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDMzMTk1NA==",
    "user": {
      "login": "mehrdada",
      "id": 900411,
      "node_id": "MDQ6VXNlcjkwMDQxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/900411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mehrdada",
      "html_url": "https://github.com/mehrdada",
      "followers_url": "https://api.github.com/users/mehrdada/followers",
      "following_url": "https://api.github.com/users/mehrdada/following{/other_user}",
      "gists_url": "https://api.github.com/users/mehrdada/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mehrdada/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mehrdada/subscriptions",
      "organizations_url": "https://api.github.com/users/mehrdada/orgs",
      "repos_url": "https://api.github.com/users/mehrdada/repos",
      "events_url": "https://api.github.com/users/mehrdada/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mehrdada/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-25T01:33:12Z",
    "updated_at": "2018-01-25T01:33:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "#14105 has been merged, unblocking this."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/360901852",
    "html_url": "https://github.com/grpc/grpc/pull/14077#issuecomment-360901852",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14077",
    "id": 360901852,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDkwMTg1Mg==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-26T20:55:39Z",
    "updated_at": "2018-01-26T20:55:39Z",
    "author_association": "MEMBER",
    "body": "This needs conflict resolution and its list of commits currently looks completely crazypants. Also I think it still has outstanding code review comments?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/362005032",
    "html_url": "https://github.com/grpc/grpc/pull/14077#issuecomment-362005032",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14077",
    "id": 362005032,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjAwNTAzMg==",
    "user": {
      "login": "kpayson64",
      "id": 18316330,
      "node_id": "MDQ6VXNlcjE4MzE2MzMw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18316330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kpayson64",
      "html_url": "https://github.com/kpayson64",
      "followers_url": "https://api.github.com/users/kpayson64/followers",
      "following_url": "https://api.github.com/users/kpayson64/following{/other_user}",
      "gists_url": "https://api.github.com/users/kpayson64/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kpayson64/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kpayson64/subscriptions",
      "organizations_url": "https://api.github.com/users/kpayson64/orgs",
      "repos_url": "https://api.github.com/users/kpayson64/repos",
      "events_url": "https://api.github.com/users/kpayson64/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kpayson64/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-31T17:20:00Z",
    "updated_at": "2018-01-31T17:20:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "@nathanielmanistaatgoogle \r\nI'm calling it host for consistency with the gRPC core.  I saw another comment in bug thread about how this can be represented differently on different transports.\r\n\r\n@mehrdada \r\nI've updated the example.\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/362349998",
    "html_url": "https://github.com/grpc/grpc/pull/14077#issuecomment-362349998",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14077",
    "id": 362349998,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjM0OTk5OA==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-01T17:58:59Z",
    "updated_at": "2018-02-01T17:58:59Z",
    "author_association": "MEMBER",
    "body": "With apologies for being a stick in the mud: this is our application-facing API; we need to build it on a stronger foundation than mere consistency with gRPC Core.\r\n\r\nDoes setting or not setting this string on the invocation side of an RPC have an effect on gRPC behavior other than the string being present or absent on the service side of the RPC? If so, what? If not, why is it an API feature rather than something to be set (or not set) in the user-space that is the RPC's metadata?\r\n\r\nIf it is sometimes called \"host\", does that correspond to [any other definition of \"host\" in networking](https://en.wikipedia.org/wiki/Host_(network))? If it is sometimes called \"authority\", does that correspond to any other definition of \"authority\" in information security? Can we call it \"hiybbprqag\" without contradicting anything else we've said about it?\r\n\r\nThinking beyond gRPC Core: do other gRPC languages present this feature in their application-facing APIs? Which? What do they say to their users about it?\r\n\r\nRegarding \"I saw another comment in bug thread about how this can be represented differently on different transports\": is this a feature by which we expose certain underlying HTTP2 concepts or implementation to applications? Doing so it not necessarily wrong but it is something about which we should be _even more careful_ (or fussy) than otherwise."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/363182944",
    "html_url": "https://github.com/grpc/grpc/pull/14077#issuecomment-363182944",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14077",
    "id": 363182944,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzE4Mjk0NA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-05T18:50:24Z",
    "updated_at": "2018-02-05T18:50:24Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE              FILE SIZE\n ++++++++++++++ GROWIN ++++++++++++++\n\n -------------- SHRINK --------------\n  [ = ]       0 [None]     -16  -0.0%\n\n  [ = ]       0 TOTAL      -16  -0.0%\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE        FILE SIZE\n ++++++++++++++  ++++++++++++++\n\n  [ = ]       0        0  [ = ]\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/363185110",
    "html_url": "https://github.com/grpc/grpc/pull/14077#issuecomment-363185110",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14077",
    "id": 363185110,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzE4NTExMA==",
    "user": {
      "login": "dgquintas",
      "id": 120217,
      "node_id": "MDQ6VXNlcjEyMDIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/120217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgquintas",
      "html_url": "https://github.com/dgquintas",
      "followers_url": "https://api.github.com/users/dgquintas/followers",
      "following_url": "https://api.github.com/users/dgquintas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgquintas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgquintas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgquintas/subscriptions",
      "organizations_url": "https://api.github.com/users/dgquintas/orgs",
      "repos_url": "https://api.github.com/users/dgquintas/repos",
      "events_url": "https://api.github.com/users/dgquintas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgquintas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-05T18:56:29Z",
    "updated_at": "2018-02-05T18:56:29Z",
    "author_association": "NONE",
    "body": "clang-format isn't happy"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/363186033",
    "html_url": "https://github.com/grpc/grpc/pull/14077#issuecomment-363186033",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14077",
    "id": 363186033,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzE4NjAzMw==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-05T18:59:29Z",
    "updated_at": "2018-02-05T18:59:29Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/363208325",
    "html_url": "https://github.com/grpc/grpc/pull/14077#issuecomment-363208325",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14077",
    "id": 363208325,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzIwODMyNQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-05T20:17:34Z",
    "updated_at": "2018-02-05T20:17:34Z",
    "author_association": "NONE",
    "body": "```\nCorrupt JSON data (indicates timeout or crash): \n    bm_fullstack_streaming_pump.BM_PumpStreamServerToClient_SockPair__512.opt.new: 1\n\n\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/363275405",
    "html_url": "https://github.com/grpc/grpc/pull/14077#issuecomment-363275405",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14077",
    "id": 363275405,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzI3NTQwNQ==",
    "user": {
      "login": "kpayson64",
      "id": 18316330,
      "node_id": "MDQ6VXNlcjE4MzE2MzMw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18316330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kpayson64",
      "html_url": "https://github.com/kpayson64",
      "followers_url": "https://api.github.com/users/kpayson64/followers",
      "following_url": "https://api.github.com/users/kpayson64/following{/other_user}",
      "gists_url": "https://api.github.com/users/kpayson64/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kpayson64/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kpayson64/subscriptions",
      "organizations_url": "https://api.github.com/users/kpayson64/orgs",
      "repos_url": "https://api.github.com/users/kpayson64/repos",
      "events_url": "https://api.github.com/users/kpayson64/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kpayson64/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-06T01:06:48Z",
    "updated_at": "2018-02-06T01:06:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "@nathanielmanistaatgoogle \r\nI've renamed host to authority.  PTAL"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/365699448",
    "html_url": "https://github.com/grpc/grpc/pull/14077#issuecomment-365699448",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14077",
    "id": 365699448,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTY5OTQ0OA==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-14T18:25:22Z",
    "updated_at": "2018-02-14T18:25:22Z",
    "author_association": "MEMBER",
    "body": "Yes, but I'd still like to learn a lot more about this new feature in the application-exposed API. How does setting it affect the client-side gRPC objects? How does setting it affect the server-side gRPC objects? How, and for what purpose, are applications intended to use it? Are there any ways that applications may use it that despite compiling and executing are unsupported? Why does it need to exist as a concept in the gRPC Python API - why can't it just be something set in the metadata by the application on one side and extracted from the metadata by the application on the other side? (Don't answer here; all this context belongs in the commit log message.)"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/365700271",
    "html_url": "https://github.com/grpc/grpc/pull/14077#issuecomment-365700271",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14077",
    "id": 365700271,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTcwMDI3MQ==",
    "user": {
      "login": "mehrdada",
      "id": 900411,
      "node_id": "MDQ6VXNlcjkwMDQxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/900411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mehrdada",
      "html_url": "https://github.com/mehrdada",
      "followers_url": "https://api.github.com/users/mehrdada/followers",
      "following_url": "https://api.github.com/users/mehrdada/following{/other_user}",
      "gists_url": "https://api.github.com/users/mehrdada/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mehrdada/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mehrdada/subscriptions",
      "organizations_url": "https://api.github.com/users/mehrdada/orgs",
      "repos_url": "https://api.github.com/users/mehrdada/repos",
      "events_url": "https://api.github.com/users/mehrdada/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mehrdada/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-14T18:28:09Z",
    "updated_at": "2018-02-14T18:32:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "There is an issue filed recently (https://github.com/grpc/grpc/issues/14420) that is about getting access to the peer TLS public key. I was wondering if instead of passing host, it would be possible to pass an arbitrary function to verify if host is valid, i.e. matches a certain pattern, etc.?\r\n\r\nTo be clear, the concrete use case I have in mind is to allow connection establishment without host validation (unauthenticated) and then looking at the public key to identify the peer."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/365708258",
    "html_url": "https://github.com/grpc/grpc/pull/14077#issuecomment-365708258",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14077",
    "id": 365708258,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTcwODI1OA==",
    "user": {
      "login": "kpayson64",
      "id": 18316330,
      "node_id": "MDQ6VXNlcjE4MzE2MzMw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18316330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kpayson64",
      "html_url": "https://github.com/kpayson64",
      "followers_url": "https://api.github.com/users/kpayson64/followers",
      "following_url": "https://api.github.com/users/kpayson64/following{/other_user}",
      "gists_url": "https://api.github.com/users/kpayson64/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kpayson64/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kpayson64/subscriptions",
      "organizations_url": "https://api.github.com/users/kpayson64/orgs",
      "repos_url": "https://api.github.com/users/kpayson64/repos",
      "events_url": "https://api.github.com/users/kpayson64/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kpayson64/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-14T18:55:21Z",
    "updated_at": "2018-02-14T18:55:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't have all the answers to when/why this field should be set.  I suspect that is something that is language agnostic and should be documented grpc-wide.\r\n\r\nIn both c-core and Java, this is an out-of-band metadata field.  I suspect it is because it is defined in the HTTP2 RFC as a pseudo header (and given a default value).  If we are going to buck the trend and have this treated like normal metadata, we should have a really strong reason for doing so.\r\n\r\n@mehrdada \r\nThat issue seems out of the scope of this PR.  "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/365735631",
    "html_url": "https://github.com/grpc/grpc/pull/14077#issuecomment-365735631",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14077",
    "id": 365735631,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTczNTYzMQ==",
    "user": {
      "login": "mwisniewski0",
      "id": 19145846,
      "node_id": "MDQ6VXNlcjE5MTQ1ODQ2",
      "avatar_url": "https://avatars1.githubusercontent.com/u/19145846?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mwisniewski0",
      "html_url": "https://github.com/mwisniewski0",
      "followers_url": "https://api.github.com/users/mwisniewski0/followers",
      "following_url": "https://api.github.com/users/mwisniewski0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mwisniewski0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mwisniewski0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mwisniewski0/subscriptions",
      "organizations_url": "https://api.github.com/users/mwisniewski0/orgs",
      "repos_url": "https://api.github.com/users/mwisniewski0/repos",
      "events_url": "https://api.github.com/users/mwisniewski0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mwisniewski0/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-14T20:30:36Z",
    "updated_at": "2018-02-14T20:30:36Z",
    "author_association": "NONE",
    "body": "> I was wondering if instead of passing host, it would be possible to pass an arbitrary function to verify if host is valid, i.e. matches a certain pattern, etc.?\r\n\r\n@mehrdada This feature would be even better than the TLS raw public key auth. Raw public key auth could be very easily implemented as a predicate, and other custom verification options would be available. Should I edit my request/open a new issue?"
  }
]
