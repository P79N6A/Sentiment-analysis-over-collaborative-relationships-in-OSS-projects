[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/457754132",
    "html_url": "https://github.com/grpc/grpc/issues/17819#issuecomment-457754132",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17819",
    "id": 457754132,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Nzc1NDEzMg==",
    "user": {
      "login": "yashykt",
      "id": 4181124,
      "node_id": "MDQ6VXNlcjQxODExMjQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4181124?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yashykt",
      "html_url": "https://github.com/yashykt",
      "followers_url": "https://api.github.com/users/yashykt/followers",
      "following_url": "https://api.github.com/users/yashykt/following{/other_user}",
      "gists_url": "https://api.github.com/users/yashykt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yashykt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yashykt/subscriptions",
      "organizations_url": "https://api.github.com/users/yashykt/orgs",
      "repos_url": "https://api.github.com/users/yashykt/repos",
      "events_url": "https://api.github.com/users/yashykt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yashykt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-25T22:27:41Z",
    "updated_at": "2019-01-25T22:27:41Z",
    "author_association": "MEMBER",
    "body": "I was on one of my own branches for this. Let me reconfirm how that branch is changing things."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/457771303",
    "html_url": "https://github.com/grpc/grpc/issues/17819#issuecomment-457771303",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17819",
    "id": 457771303,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Nzc3MTMwMw==",
    "user": {
      "login": "yashykt",
      "id": 4181124,
      "node_id": "MDQ6VXNlcjQxODExMjQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4181124?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yashykt",
      "html_url": "https://github.com/yashykt",
      "followers_url": "https://api.github.com/users/yashykt/followers",
      "following_url": "https://api.github.com/users/yashykt/following{/other_user}",
      "gists_url": "https://api.github.com/users/yashykt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yashykt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yashykt/subscriptions",
      "organizations_url": "https://api.github.com/users/yashykt/orgs",
      "repos_url": "https://api.github.com/users/yashykt/repos",
      "events_url": "https://api.github.com/users/yashykt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yashykt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-25T23:35:24Z",
    "updated_at": "2019-01-25T23:35:24Z",
    "author_association": "MEMBER",
    "body": "This happens when client_channel tracer is enabled"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/458264377",
    "html_url": "https://github.com/grpc/grpc/issues/17819#issuecomment-458264377",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17819",
    "id": 458264377,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODI2NDM3Nw==",
    "user": {
      "login": "yashykt",
      "id": 4181124,
      "node_id": "MDQ6VXNlcjQxODExMjQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4181124?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yashykt",
      "html_url": "https://github.com/yashykt",
      "followers_url": "https://api.github.com/users/yashykt/followers",
      "following_url": "https://api.github.com/users/yashykt/following{/other_user}",
      "gists_url": "https://api.github.com/users/yashykt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yashykt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yashykt/subscriptions",
      "organizations_url": "https://api.github.com/users/yashykt/orgs",
      "repos_url": "https://api.github.com/users/yashykt/repos",
      "events_url": "https://api.github.com/users/yashykt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yashykt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-28T19:18:32Z",
    "updated_at": "2019-01-28T19:18:32Z",
    "author_association": "MEMBER",
    "body": "We also get segfaults on Basic Tests C Linux [dbg].. #17817 seemed to make these fail more deterministically..\r\n\r\nRelevant log files -\r\nhttps://source.cloud.google.com/results/invocations/356a5d1e-a9de-4c61-803f-d33036d86b36/targets/github%2Fgrpc%2Fc_linux_dbg_native/log\r\nhttps://source.cloud.google.com/results/invocations/c98c362c-64e5-4254-9d3f-8a054f7b1941/targets/github%2Fgrpc%2Fc_linux_asan_native_x64_clang7.0/log"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/458283829",
    "html_url": "https://github.com/grpc/grpc/issues/17819#issuecomment-458283829",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17819",
    "id": 458283829,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODI4MzgyOQ==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-28T20:13:50Z",
    "updated_at": "2019-01-28T20:13:50Z",
    "author_association": "MEMBER",
    "body": "I can reliably reproduce this by running the following:\r\n\r\n```\r\nGRPC_VERBOSITY=DEBUG GRPC_TRACE=client_channel,channel ./bins/dbg/client_lb_end2end_test --gtest_filter=ClientLbInterceptTrailingMetadataTest.InterceptsRetriesEnabled\r\n```\r\n\r\nI tried modifying `grpc_transport_stream_op_batch_string()` to log the address of the send_initial_metadata batch instead of logging its contents, so that it looks something like this:\r\n\r\n```\r\ngpr_asprintf(&tmp, \"MD=%p,\", op->payload->send_initial_metadata.send_initial_metadata);\r\ngpr_strvec_add(&b, tmp);\r\n//    put_metadata_list(\r\n//        &b, *op->payload->send_initial_metadata.send_initial_metadata);\r\n```\r\n\r\nWhat I'm seeing is that the `op->payload->send_initial_metadata.send_initial_metadata` is being set to a different location between the time that the batch hits the transport and the time that the on_complete callback is invoked.  So I think this must be a chttp2 bug somewhere.\r\n\r\nI suspect that this has nothing to do with the retry code; it's probably just that the retry code is the only place where we're trying to log the contents of the batch on the way back up the stack."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/458333353",
    "html_url": "https://github.com/grpc/grpc/issues/17819#issuecomment-458333353",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17819",
    "id": 458333353,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODMzMzM1Mw==",
    "user": {
      "login": "yashykt",
      "id": 4181124,
      "node_id": "MDQ6VXNlcjQxODExMjQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4181124?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yashykt",
      "html_url": "https://github.com/yashykt",
      "followers_url": "https://api.github.com/users/yashykt/followers",
      "following_url": "https://api.github.com/users/yashykt/following{/other_user}",
      "gists_url": "https://api.github.com/users/yashykt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yashykt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yashykt/subscriptions",
      "organizations_url": "https://api.github.com/users/yashykt/orgs",
      "repos_url": "https://api.github.com/users/yashykt/repos",
      "events_url": "https://api.github.com/users/yashykt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yashykt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-28T22:47:48Z",
    "updated_at": "2019-01-28T22:55:04Z",
    "author_association": "MEMBER",
    "body": "Found it. \r\n\r\nWhat was happening was grpc_chttp2_stream->byte_counter was using the same memory address as the send_initial_metadata pointer in a subchannel batch. So, when the byte_counter was being incremented, so was the pointer. This meant that when we tried to print out the send_initial_metadata after it was modified as byte_counter, we were getting a corrupt address.\r\n\r\nThe root reason for this was that we align addresses using GPR_ROUND_UP_TO_ALIGNMENT_SIZE and this also needs to be factored in when performing size calculations. One place in the subchannel code was not doing this, and hence the strange bug :)\r\n\r\nGoing slightly deeper in the explanation, we allocate a huge chunk of memory at the start for a call, and this chunk should be sufficient for the channel stack and the subchannel stack. The transport stream is also allocated as part of the same chunk. The offset calculations are done to find out where each structure begins and ends. In this case, the transport stream was just before the memory being using by the retry state, and hence the overlap due to misalignment."
  }
]
