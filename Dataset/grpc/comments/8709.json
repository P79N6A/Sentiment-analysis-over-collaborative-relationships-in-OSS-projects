[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/260502437",
    "html_url": "https://github.com/grpc/grpc/issues/8709#issuecomment-260502437",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8709",
    "id": 260502437,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDUwMjQzNw==",
    "user": {
      "login": "sulliwane",
      "id": 1733686,
      "node_id": "MDQ6VXNlcjE3MzM2ODY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1733686?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sulliwane",
      "html_url": "https://github.com/sulliwane",
      "followers_url": "https://api.github.com/users/sulliwane/followers",
      "following_url": "https://api.github.com/users/sulliwane/following{/other_user}",
      "gists_url": "https://api.github.com/users/sulliwane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sulliwane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sulliwane/subscriptions",
      "organizations_url": "https://api.github.com/users/sulliwane/orgs",
      "repos_url": "https://api.github.com/users/sulliwane/repos",
      "events_url": "https://api.github.com/users/sulliwane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sulliwane/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-14T23:52:59Z",
    "updated_at": "2016-11-14T23:52:59Z",
    "author_association": "NONE",
    "body": "@murgatroid99 any idea on this one? Many thanks :)\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/260504617",
    "html_url": "https://github.com/grpc/grpc/issues/8709#issuecomment-260504617",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8709",
    "id": 260504617,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDUwNDYxNw==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-15T00:05:08Z",
    "updated_at": "2016-11-15T00:05:08Z",
    "author_association": "MEMBER",
    "body": "There isn't currently an API to do this. `waitForClientReady` just waits (on the client side) for a client to successfully connect, and `waitForCancel` is mainly an internal function, and its primary purpose is to emit that `'cancelled'` event you mentioned.\n\nYou seem to be talking about the server side, but the Node server doesn't expose any information about HTTP2/TCP connections, just individual streams.\n\nOn the client side, it may be possible to add a function to do this using the same internal API that `waitForClientReady` uses, but it would be subject to stuff like TCP timeouts and any internal reconnect attempts that might take place.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/260507598",
    "html_url": "https://github.com/grpc/grpc/issues/8709#issuecomment-260507598",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8709",
    "id": 260507598,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDUwNzU5OA==",
    "user": {
      "login": "sulliwane",
      "id": 1733686,
      "node_id": "MDQ6VXNlcjE3MzM2ODY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1733686?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sulliwane",
      "html_url": "https://github.com/sulliwane",
      "followers_url": "https://api.github.com/users/sulliwane/followers",
      "following_url": "https://api.github.com/users/sulliwane/following{/other_user}",
      "gists_url": "https://api.github.com/users/sulliwane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sulliwane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sulliwane/subscriptions",
      "organizations_url": "https://api.github.com/users/sulliwane/orgs",
      "repos_url": "https://api.github.com/users/sulliwane/repos",
      "events_url": "https://api.github.com/users/sulliwane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sulliwane/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-15T00:22:09Z",
    "updated_at": "2016-11-15T00:22:09Z",
    "author_association": "NONE",
    "body": "thanks for your feedback.\n\nI just tried `waitForClientReady` on the client side: `grpc.waitForClientReady(client, 0, () => console.log('connected'));`and it works.\n\nFor the informations about **HTTP2/TCP** connections, is it specific to **Node server**, or has the **c++ grpc server** the same limitation? If this information is available, it can help the node server on taking the decision to free ressources (associated with a client that completely disconnected the whole HTTP2 connection). But maybe there is no such information...I'm not very familiar with HTTP2.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/260509879",
    "html_url": "https://github.com/grpc/grpc/issues/8709#issuecomment-260509879",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8709",
    "id": 260509879,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDUwOTg3OQ==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-15T00:34:37Z",
    "updated_at": "2016-11-15T00:34:37Z",
    "author_association": "MEMBER",
    "body": "I think all of the servers (at least the ones in this repository) have that same property. Information about connections is not exposed in the API, so you should not have any resources associated with an entire connection. Even if you identify your clients somehow and allocate a resource for a client, there's no guarantee that all ongoing calls from that client use the same connection.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/260511309",
    "html_url": "https://github.com/grpc/grpc/issues/8709#issuecomment-260511309",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8709",
    "id": 260511309,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDUxMTMwOQ==",
    "user": {
      "login": "sulliwane",
      "id": 1733686,
      "node_id": "MDQ6VXNlcjE3MzM2ODY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1733686?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sulliwane",
      "html_url": "https://github.com/sulliwane",
      "followers_url": "https://api.github.com/users/sulliwane/followers",
      "following_url": "https://api.github.com/users/sulliwane/following{/other_user}",
      "gists_url": "https://api.github.com/users/sulliwane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sulliwane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sulliwane/subscriptions",
      "organizations_url": "https://api.github.com/users/sulliwane/orgs",
      "repos_url": "https://api.github.com/users/sulliwane/repos",
      "events_url": "https://api.github.com/users/sulliwane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sulliwane/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-15T00:42:45Z",
    "updated_at": "2016-11-15T00:47:36Z",
    "author_association": "NONE",
    "body": "I see. Indeed every of my grpc clients generate a `uuid` and place it in a metadata, so that on the server side, each grpc method knows to which client (uuid) is allocated a resource. So you are saying I should handle de-allocation of resources based on stream connection only (`cancelled` event) right?\n\n``` javascript\n// client\nconst metadataUpdater = (serviceUrl, callback) => {\n      const metadata = new grpc.Metadata();\n      metadata.set('Authorization', jwtoken);\n      metadata.set('sessionid', sessionid);\n      callback(null, metadata);\n    };\nconst metadataCreds = grpc.credentials.createFromMetadataGenerator(metadataUpdater);\n```\n\nand\n\n``` javascript\n// server\nasync function grpcMethod(call, callback) {\n   const sessionid = call.metadata.get('sessionid')[0];\n}\n```\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/260512700",
    "html_url": "https://github.com/grpc/grpc/issues/8709#issuecomment-260512700",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8709",
    "id": 260512700,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDUxMjcwMA==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-15T00:50:44Z",
    "updated_at": "2016-11-15T00:50:44Z",
    "author_association": "MEMBER",
    "body": "To be clear, the `cancelled` event generally indicates that something went wrong with the stream. If you just want to know if the stream has finished, one way or another, you're better off listening for the `end` event.\n\nOtherwise, yes, you should deallocate resources associated with a stream when that stream finishes, and you should deallocate resources associated with a client when you know that that client is no longer connected (e.g. when there are no more streams with that UUID).\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/260512979",
    "html_url": "https://github.com/grpc/grpc/issues/8709#issuecomment-260512979",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8709",
    "id": 260512979,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDUxMjk3OQ==",
    "user": {
      "login": "sulliwane",
      "id": 1733686,
      "node_id": "MDQ6VXNlcjE3MzM2ODY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1733686?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sulliwane",
      "html_url": "https://github.com/sulliwane",
      "followers_url": "https://api.github.com/users/sulliwane/followers",
      "following_url": "https://api.github.com/users/sulliwane/following{/other_user}",
      "gists_url": "https://api.github.com/users/sulliwane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sulliwane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sulliwane/subscriptions",
      "organizations_url": "https://api.github.com/users/sulliwane/orgs",
      "repos_url": "https://api.github.com/users/sulliwane/repos",
      "events_url": "https://api.github.com/users/sulliwane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sulliwane/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-15T00:52:16Z",
    "updated_at": "2016-11-15T00:52:16Z",
    "author_association": "NONE",
    "body": "Got it. Many thanks!\n"
  }
]
