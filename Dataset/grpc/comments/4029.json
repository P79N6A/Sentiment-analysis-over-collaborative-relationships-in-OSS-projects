[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/153435042",
    "html_url": "https://github.com/grpc/grpc/issues/4029#issuecomment-153435042",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/4029",
    "id": 153435042,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzQzNTA0Mg==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-03T18:00:10Z",
    "updated_at": "2015-11-03T18:00:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ctiller, any recent changes that might have caused this?\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/160103940",
    "html_url": "https://github.com/grpc/grpc/issues/4029#issuecomment-160103940",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/4029",
    "id": 160103940,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDEwMzk0MA==",
    "user": {
      "login": "Falco20019",
      "id": 940619,
      "node_id": "MDQ6VXNlcjk0MDYxOQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/940619?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Falco20019",
      "html_url": "https://github.com/Falco20019",
      "followers_url": "https://api.github.com/users/Falco20019/followers",
      "following_url": "https://api.github.com/users/Falco20019/following{/other_user}",
      "gists_url": "https://api.github.com/users/Falco20019/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Falco20019/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Falco20019/subscriptions",
      "organizations_url": "https://api.github.com/users/Falco20019/orgs",
      "repos_url": "https://api.github.com/users/Falco20019/repos",
      "events_url": "https://api.github.com/users/Falco20019/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Falco20019/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-27T10:07:10Z",
    "updated_at": "2015-11-27T14:25:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "I also did some measurements (through JetBrains dotTrace and your profiler) since I found the communication a bit slow. But I got much better numbers (still a bit slow compared to the speed of serialization alone, I think). Running your unit tests, I saw the same timing that @jtattermusch posted.\nIt seems, like your timing issues only occure while running the test through nUnit. I made a simple project, just including a reference to Grpc.Core and Grpc.Core.Test, calling the test directly.\n\n``` csharp\nusing Grpc.Core.Tests;\n\nnamespace GRPC\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            PerformanceTest pt = new PerformanceTest();\n            pt.Init();\n            pt.UnaryCallPerformance();\n            pt.Cleanup();\n        }\n    }\n}\n```\n\nFor this I got the following performance (measured with Intel Core i7 @ 2.8GHz; thousands times faster, but nearly 4 times slower as the one you posted on issue #4025):\n\n```\nCount: 3000\nTAG                                             LOC        FROM_STACK_START     SELF                 TO_STACK_END         FROM_SCOPE_START     SELF                 TO_SCOPE_END\n----------------------------------------------  ---------  -------------------  -------------------  -------------------  -------------------  -------------------  -------------------\nAsyncCall.UnaryCall                             unknown:0  0.0/0.0/0.0          999.9/1000.2/1999.9  0.0/0.0/0.0                               999.9/1000.2/1999.9\n..AsyncCallBase.UnsafeSerialize                 unknown:0  0.0/0.0/0.0          0.0/0.0/0.0          999.9/1000.2/1999.9  0.0/0.0/0.0          0.0/0.0/0.0          999.9/1000.2/1999.9\n..AsyncCall.Initialize                          unknown:0  0.0/0.0/0.0          0.0/0.0/999.9        999.9/1000.2/1999.9  0.0/0.0/0.0          0.0/0.0/999.9        999.9/1000.2/1999.9\n....AsyncCall.CreateNativeCall                  unknown:0  0.0/0.0/0.0          0.0/0.0/999.9        999.9/1000.2/1999.9  0.0/0.0/0.0          0.0/0.0/999.9        0.0/0.0/0.0\n......ChannelSafeHandle.CreateCall              unknown:0  0.0/0.0/999.9        0.0/0.0/0.0          999.9/1000.2/1999.9  0.0/0.0/0.0          0.0/0.0/0.0          0.0/0.0/0.0\n..MetadataArraySafeHandle.Create                unknown:0  0.0/0.0/999.9        0.0/0.0/0.0          999.9/1000.2/1999.9  0.0/0.0/999.9        0.0/0.0/0.0          999.9/1000.2/1999.9\n..CallSafeHandle.StartUnary                     unknown:0  0.0/0.0/999.9        0.0/0.0/1000.2       999.9/1000.2/1000.2  0.0/0.0/999.9        0.0/0.0/1000.2       999.9/1000.2/1000.2\n..CompletionQueueSafeHandle.Pluck               unknown:0  0.0/999.9/1000.2     999.9/1000.2/1000.2  0.0/0.0/1000.2       0.0/999.9/1000.2     999.9/1000.2/1000.2  0.0/0.0/1000.2\n..AsyncCall.UnaryCall.HandleBatch               unknown:0  999.9/1000.2/1000.2  0.0/0.0/1000.2       0.0/0.0/999.9        999.9/1000.2/1000.2  0.0/0.0/1000.2       0.0/0.0/999.9\n....AsyncCall.HandleUnaryResponse               unknown:0  999.9/1000.2/1010.2  0.0/0.0/999.9        0.0/0.0/999.9        0.0/0.0/0.0          0.0/0.0/999.9        0.0/0.0/0.0\n......AsyncCallBase.TryDeserialize              unknown:0  999.9/1000.2/1010.2  0.0/0.0/0.0          0.0/0.0/1000.2       0.0/0.0/0.0          0.0/0.0/0.0          0.0/0.0/999.9\n......AsyncCallBase.ReleaseResourcesIfPossible  unknown:0  999.9/1000.2/1010.2  0.0/0.0/999.9        0.0/0.0/999.9        0.0/0.0/0.0          0.0/0.0/999.9        0.0/0.0/0.0\n```\n\nThe timing and serialization performance is all ok until the point where grpcsharp_completion_queue_pluck get's called in the wrapper. For the faster test (and my real code), the first call (seems to include the connection of the client to the localhost server) takes around 250ms. All further calls take around 750us.\n\n![grpc_perf](https://cloud.githubusercontent.com/assets/940619/11438666/9cbca278-94f6-11e5-9d40-8fd72a3a06a1.jpg)\n"
  }
]
