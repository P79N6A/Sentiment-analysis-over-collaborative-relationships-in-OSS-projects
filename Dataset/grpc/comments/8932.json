[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/264596280",
    "html_url": "https://github.com/grpc/grpc/issues/8932#issuecomment-264596280",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8932",
    "id": 264596280,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDU5NjI4MA==",
    "user": {
      "login": "abaldeva",
      "id": 24324277,
      "node_id": "MDQ6VXNlcjI0MzI0Mjc3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/24324277?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abaldeva",
      "html_url": "https://github.com/abaldeva",
      "followers_url": "https://api.github.com/users/abaldeva/followers",
      "following_url": "https://api.github.com/users/abaldeva/following{/other_user}",
      "gists_url": "https://api.github.com/users/abaldeva/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abaldeva/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abaldeva/subscriptions",
      "organizations_url": "https://api.github.com/users/abaldeva/orgs",
      "repos_url": "https://api.github.com/users/abaldeva/repos",
      "events_url": "https://api.github.com/users/abaldeva/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abaldeva/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-03T00:09:58Z",
    "updated_at": "2016-12-03T00:09:58Z",
    "author_association": "NONE",
    "body": "Hi,\r\n\r\nAs for problem 1, My further experiments show that in case a bi-directional stream is broken abruptly, the 'ok' bool on the AsyncNext call returns false. \r\n\r\n`NextStatus AsyncNext(void** tag, bool* ok, const T& deadline) `\r\n\r\nIf this is a reliable behavior, I could just make a bi-directional ping stream between client and server and detect the connection as dead if that stream runs into an error? Is that a correct approach?\r\n\r\nThanks. \r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/273500367",
    "html_url": "https://github.com/grpc/grpc/issues/8932#issuecomment-273500367",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8932",
    "id": 273500367,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MzUwMDM2Nw==",
    "user": {
      "login": "neuecc",
      "id": 46207,
      "node_id": "MDQ6VXNlcjQ2MjA3",
      "avatar_url": "https://avatars0.githubusercontent.com/u/46207?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/neuecc",
      "html_url": "https://github.com/neuecc",
      "followers_url": "https://api.github.com/users/neuecc/followers",
      "following_url": "https://api.github.com/users/neuecc/following{/other_user}",
      "gists_url": "https://api.github.com/users/neuecc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/neuecc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/neuecc/subscriptions",
      "organizations_url": "https://api.github.com/users/neuecc/orgs",
      "repos_url": "https://api.github.com/users/neuecc/repos",
      "events_url": "https://api.github.com/users/neuecc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/neuecc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-18T15:07:32Z",
    "updated_at": "2017-01-18T15:07:32Z",
    "author_association": "NONE",
    "body": "I am having a similar problem and I am planning to take a heartbeat approach in the same way.\r\nI'm making room based games, and in the waiting lobby etc, I want to leave users who have been disconnected."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/277638815",
    "html_url": "https://github.com/grpc/grpc/issues/8932#issuecomment-277638815",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8932",
    "id": 277638815,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NzYzODgxNQ==",
    "user": {
      "login": "joseAndresGomezTovar",
      "id": 6407828,
      "node_id": "MDQ6VXNlcjY0MDc4Mjg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6407828?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joseAndresGomezTovar",
      "html_url": "https://github.com/joseAndresGomezTovar",
      "followers_url": "https://api.github.com/users/joseAndresGomezTovar/followers",
      "following_url": "https://api.github.com/users/joseAndresGomezTovar/following{/other_user}",
      "gists_url": "https://api.github.com/users/joseAndresGomezTovar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joseAndresGomezTovar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joseAndresGomezTovar/subscriptions",
      "organizations_url": "https://api.github.com/users/joseAndresGomezTovar/orgs",
      "repos_url": "https://api.github.com/users/joseAndresGomezTovar/repos",
      "events_url": "https://api.github.com/users/joseAndresGomezTovar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joseAndresGomezTovar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-06T10:11:35Z",
    "updated_at": "2017-02-06T10:11:35Z",
    "author_association": "NONE",
    "body": "I have the same requirement, because:\r\n\r\n- I want to run a DLL remotely\r\n\r\nScenary:\r\n\r\n- I have a main process and tow dlls\r\n    one of these dll will be run using the gRPC server\r\n- By making a new dll \"gRPC client\" that is loaded in the main process, I remotely connect the original \"dll\" with the main process\r\n\r\nThe gRPC server loads the \"original dll\" when the connection is established, and downloads it when it breaks\r\n\r\nthank you in advance"
  }
]
