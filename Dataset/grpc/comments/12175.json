[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/322295986",
    "html_url": "https://github.com/grpc/grpc/issues/12175#issuecomment-322295986",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12175",
    "id": 322295986,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjI5NTk4Ng==",
    "user": {
      "login": "stanley-cheung",
      "id": 11674202,
      "node_id": "MDQ6VXNlcjExNjc0MjAy",
      "avatar_url": "https://avatars2.githubusercontent.com/u/11674202?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stanley-cheung",
      "html_url": "https://github.com/stanley-cheung",
      "followers_url": "https://api.github.com/users/stanley-cheung/followers",
      "following_url": "https://api.github.com/users/stanley-cheung/following{/other_user}",
      "gists_url": "https://api.github.com/users/stanley-cheung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stanley-cheung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stanley-cheung/subscriptions",
      "organizations_url": "https://api.github.com/users/stanley-cheung/orgs",
      "repos_url": "https://api.github.com/users/stanley-cheung/repos",
      "events_url": "https://api.github.com/users/stanley-cheung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stanley-cheung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-14T20:11:41Z",
    "updated_at": "2017-08-14T20:11:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "cc @murgatroid99 "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/322301587",
    "html_url": "https://github.com/grpc/grpc/issues/12175#issuecomment-322301587",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12175",
    "id": 322301587,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjMwMTU4Nw==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-14T20:33:43Z",
    "updated_at": "2017-08-14T20:33:43Z",
    "author_association": "MEMBER",
    "body": "One thing to note regarding those measurements is that a full second is an extreme amount of time for a single call, which probably means that this is the first call you're making with a channel. If that is the case, then the call time you're measuring includes the time it takes to establish a connection. I expect that you will get somewhat different results if you make a call before you start measuring.\r\n\r\nRegardless of that, there would be some benefit to moving `OP_RECV_INITIAL_METADATA` to the `wait` method as you suggest. If there are only send operations in the `start` method, then it will usually not have to wait for a network round trip. However, the current unary call API guarantees that once the call has been started, the metadata is present.\r\n\r\nOne possible solution would be to have the `getMetadata` method itself call the `OP_RECV_INITIAL_METADATA` code if it has not already been read."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/322308985",
    "html_url": "https://github.com/grpc/grpc/issues/12175#issuecomment-322308985",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12175",
    "id": 322308985,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjMwODk4NQ==",
    "user": {
      "login": "michaelbausor",
      "id": 14846209,
      "node_id": "MDQ6VXNlcjE0ODQ2MjA5",
      "avatar_url": "https://avatars2.githubusercontent.com/u/14846209?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelbausor",
      "html_url": "https://github.com/michaelbausor",
      "followers_url": "https://api.github.com/users/michaelbausor/followers",
      "following_url": "https://api.github.com/users/michaelbausor/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelbausor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelbausor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelbausor/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelbausor/orgs",
      "repos_url": "https://api.github.com/users/michaelbausor/repos",
      "events_url": "https://api.github.com/users/michaelbausor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelbausor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-14T21:02:58Z",
    "updated_at": "2017-08-14T21:02:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "@murgatroid99 Repeating the call does reduce the time a small amount (to about 0.8-0.9 seconds), but not significantly - see results below for looping 10 times.\r\n\r\nIn general, machine learning APIs such as Speech can make very long calls, with the duration being entirely dependent on the input. The synchronous recognition request for Speech can accept audio of up to around 1 minute in length, and according to the docs it is expected that \"30 seconds of audio is processed in 15 seconds on average\" ([see here](https://cloud.google.com/speech/docs/basics)).\r\n\r\nMore significantly though is the second example, of making multiple calls in parallel. Using Pubsub instead of Speech, with the current gRPC code it takes approximately 20 seconds to make 1000 calls to the `Publish` method. Making the modification of moving `OP_RECV_INITIAL_METADATA` reduces this to around 1.6 seconds.\r\n\r\nHaving `getMetadata` make the call makes a lot of sense to me. We could then also conditionally include the `OP_RECV_INITIAL_METADATA` flag in `wait()`, similar to what is done for `BidiStreamingCall::read()` (https://github.com/grpc/grpc/blob/master/src/php/lib/Grpc/BidiStreamingCall.php#L49)\r\n\r\nOutput of looping Speech test 10 times:\r\nTime to call: 1.2568538188934\r\nTime to wait: 0.0019960403442383\r\nTime to call: 0.90999507904053\r\nTime to wait: 0.00068497657775879\r\nTime to call: 0.89781498908997\r\nTime to wait: 0.00091099739074707\r\nTime to call: 0.92992115020752\r\nTime to wait: 0.00061488151550293\r\nTime to call: 0.90489912033081\r\nTime to wait: 0.0004119873046875\r\nTime to call: 0.91139006614685\r\nTime to wait: 0.00066804885864258\r\nTime to call: 0.91404891014099\r\nTime to wait: 0.00060796737670898\r\nTime to call: 0.93215799331665\r\nTime to wait: 0.00067496299743652\r\nTime to call: 0.90055298805237\r\nTime to wait: 0.00074911117553711\r\nTime to call: 0.9248321056366\r\nTime to wait: 0.00066709518432617"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/322530243",
    "html_url": "https://github.com/grpc/grpc/issues/12175#issuecomment-322530243",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12175",
    "id": 322530243,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjUzMDI0Mw==",
    "user": {
      "login": "michaelbausor",
      "id": 14846209,
      "node_id": "MDQ6VXNlcjE0ODQ2MjA5",
      "avatar_url": "https://avatars2.githubusercontent.com/u/14846209?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelbausor",
      "html_url": "https://github.com/michaelbausor",
      "followers_url": "https://api.github.com/users/michaelbausor/followers",
      "following_url": "https://api.github.com/users/michaelbausor/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelbausor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelbausor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelbausor/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelbausor/orgs",
      "repos_url": "https://api.github.com/users/michaelbausor/repos",
      "events_url": "https://api.github.com/users/michaelbausor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelbausor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-15T17:18:00Z",
    "updated_at": "2017-08-15T17:18:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "I have created a PR that implements your suggestion for UnaryCall and ServerStreamingCall. Please take a look and let me know if this is what you had in mind: https://github.com/grpc/grpc/pull/12188"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/322861601",
    "html_url": "https://github.com/grpc/grpc/issues/12175#issuecomment-322861601",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12175",
    "id": 322861601,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjg2MTYwMQ==",
    "user": {
      "login": "vkedia",
      "id": 20405887,
      "node_id": "MDQ6VXNlcjIwNDA1ODg3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/20405887?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vkedia",
      "html_url": "https://github.com/vkedia",
      "followers_url": "https://api.github.com/users/vkedia/followers",
      "following_url": "https://api.github.com/users/vkedia/following{/other_user}",
      "gists_url": "https://api.github.com/users/vkedia/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vkedia/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vkedia/subscriptions",
      "organizations_url": "https://api.github.com/users/vkedia/orgs",
      "repos_url": "https://api.github.com/users/vkedia/repos",
      "events_url": "https://api.github.com/users/vkedia/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vkedia/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-16T18:37:54Z",
    "updated_at": "2017-08-16T18:37:54Z",
    "author_association": "NONE",
    "body": "WIth the proposed change, what happens if I call `start` but never call `wait`? Will the RPC still finish on the server?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/322877686",
    "html_url": "https://github.com/grpc/grpc/issues/12175#issuecomment-322877686",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12175",
    "id": 322877686,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjg3NzY4Ng==",
    "user": {
      "login": "dwsupplee",
      "id": 2079879,
      "node_id": "MDQ6VXNlcjIwNzk4Nzk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2079879?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dwsupplee",
      "html_url": "https://github.com/dwsupplee",
      "followers_url": "https://api.github.com/users/dwsupplee/followers",
      "following_url": "https://api.github.com/users/dwsupplee/following{/other_user}",
      "gists_url": "https://api.github.com/users/dwsupplee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dwsupplee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dwsupplee/subscriptions",
      "organizations_url": "https://api.github.com/users/dwsupplee/orgs",
      "repos_url": "https://api.github.com/users/dwsupplee/repos",
      "events_url": "https://api.github.com/users/dwsupplee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dwsupplee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-16T19:42:08Z",
    "updated_at": "2017-08-16T19:42:08Z",
    "author_association": "NONE",
    "body": "@vkedia In my testing of the proposed PR calls that simply execute `start` do in fact finish on the server - wait is only necessary to view the results of said call."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/323892619",
    "html_url": "https://github.com/grpc/grpc/issues/12175#issuecomment-323892619",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12175",
    "id": 323892619,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMzg5MjYxOQ==",
    "user": {
      "login": "stanley-cheung",
      "id": 11674202,
      "node_id": "MDQ6VXNlcjExNjc0MjAy",
      "avatar_url": "https://avatars2.githubusercontent.com/u/11674202?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stanley-cheung",
      "html_url": "https://github.com/stanley-cheung",
      "followers_url": "https://api.github.com/users/stanley-cheung/followers",
      "following_url": "https://api.github.com/users/stanley-cheung/following{/other_user}",
      "gists_url": "https://api.github.com/users/stanley-cheung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stanley-cheung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stanley-cheung/subscriptions",
      "organizations_url": "https://api.github.com/users/stanley-cheung/orgs",
      "repos_url": "https://api.github.com/users/stanley-cheung/repos",
      "events_url": "https://api.github.com/users/stanley-cheung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stanley-cheung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-22T01:19:13Z",
    "updated_at": "2017-08-22T01:19:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is now included in `v1.4.7`"
  }
]
