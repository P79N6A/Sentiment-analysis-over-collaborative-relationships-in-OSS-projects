[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/449542170",
    "html_url": "https://github.com/grpc/grpc/pull/17586#issuecomment-449542170",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17586",
    "id": 449542170,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0OTU0MjE3MA==",
    "user": {
      "login": "vertextao",
      "id": 980728,
      "node_id": "MDQ6VXNlcjk4MDcyOA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/980728?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vertextao",
      "html_url": "https://github.com/vertextao",
      "followers_url": "https://api.github.com/users/vertextao/followers",
      "following_url": "https://api.github.com/users/vertextao/following{/other_user}",
      "gists_url": "https://api.github.com/users/vertextao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vertextao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vertextao/subscriptions",
      "organizations_url": "https://api.github.com/users/vertextao/orgs",
      "repos_url": "https://api.github.com/users/vertextao/repos",
      "events_url": "https://api.github.com/users/vertextao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vertextao/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-22T03:38:07Z",
    "updated_at": "2018-12-24T02:53:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "I singed it."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/449748026",
    "html_url": "https://github.com/grpc/grpc/pull/17586#issuecomment-449748026",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17586",
    "id": 449748026,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0OTc0ODAyNg==",
    "user": {
      "login": "vertextao",
      "id": 980728,
      "node_id": "MDQ6VXNlcjk4MDcyOA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/980728?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vertextao",
      "html_url": "https://github.com/vertextao",
      "followers_url": "https://api.github.com/users/vertextao/followers",
      "following_url": "https://api.github.com/users/vertextao/following{/other_user}",
      "gists_url": "https://api.github.com/users/vertextao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vertextao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vertextao/subscriptions",
      "organizations_url": "https://api.github.com/users/vertextao/orgs",
      "repos_url": "https://api.github.com/users/vertextao/repos",
      "events_url": "https://api.github.com/users/vertextao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vertextao/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-24T15:43:34Z",
    "updated_at": "2018-12-24T15:43:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Mergeable has found the following failed checks\r\n> \r\n> ((Please include release note: yes AND Please include a language label) OR Please include release  note: no)\r\n\r\n@hcaseyal the mergeable reported failed checks above, but I don't have permission to edit *Label*. What can I do to pass the Megeable's checks? \r\n\r\nThanks!"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/449822157",
    "html_url": "https://github.com/grpc/grpc/pull/17586#issuecomment-449822157",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17586",
    "id": 449822157,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0OTgyMjE1Nw==",
    "user": {
      "login": "kkm000",
      "id": 8228229,
      "node_id": "MDQ6VXNlcjgyMjgyMjk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/8228229?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kkm000",
      "html_url": "https://github.com/kkm000",
      "followers_url": "https://api.github.com/users/kkm000/followers",
      "following_url": "https://api.github.com/users/kkm000/following{/other_user}",
      "gists_url": "https://api.github.com/users/kkm000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kkm000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kkm000/subscriptions",
      "organizations_url": "https://api.github.com/users/kkm000/orgs",
      "repos_url": "https://api.github.com/users/kkm000/repos",
      "events_url": "https://api.github.com/users/kkm000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kkm000/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-25T08:17:19Z",
    "updated_at": "2018-12-25T08:17:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "You are good, the labels are assigned by maintainers. This \"mergeable\" failure is expected when an MR is new. Just wait for the code review! (And it can take a while, nothing to be alarmed)."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/449858634",
    "html_url": "https://github.com/grpc/grpc/pull/17586#issuecomment-449858634",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17586",
    "id": 449858634,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0OTg1ODYzNA==",
    "user": {
      "login": "vertextao",
      "id": 980728,
      "node_id": "MDQ6VXNlcjk4MDcyOA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/980728?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vertextao",
      "html_url": "https://github.com/vertextao",
      "followers_url": "https://api.github.com/users/vertextao/followers",
      "following_url": "https://api.github.com/users/vertextao/following{/other_user}",
      "gists_url": "https://api.github.com/users/vertextao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vertextao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vertextao/subscriptions",
      "organizations_url": "https://api.github.com/users/vertextao/orgs",
      "repos_url": "https://api.github.com/users/vertextao/repos",
      "events_url": "https://api.github.com/users/vertextao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vertextao/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-25T15:32:43Z",
    "updated_at": "2018-12-25T15:32:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "> You are good, the labels are assigned by maintainers. This \"mergeable\" failure is expected when an MR is new. Just wait for the code review! (And it can take a while, nothing to be alarmed).\r\n\r\n@kkm000 Thanks for your guide!"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/450113630",
    "html_url": "https://github.com/grpc/grpc/pull/17586#issuecomment-450113630",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17586",
    "id": 450113630,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDExMzYzMA==",
    "user": {
      "login": "vertextao",
      "id": 980728,
      "node_id": "MDQ6VXNlcjk4MDcyOA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/980728?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vertextao",
      "html_url": "https://github.com/vertextao",
      "followers_url": "https://api.github.com/users/vertextao/followers",
      "following_url": "https://api.github.com/users/vertextao/following{/other_user}",
      "gists_url": "https://api.github.com/users/vertextao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vertextao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vertextao/subscriptions",
      "organizations_url": "https://api.github.com/users/vertextao/orgs",
      "repos_url": "https://api.github.com/users/vertextao/repos",
      "events_url": "https://api.github.com/users/vertextao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vertextao/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-27T09:29:03Z",
    "updated_at": "2018-12-27T09:29:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "Adding a step into the test flow like running with app verifier or valgrind (for linux) may be a choice. \r\n\r\nIt's difficult to test upper layer logic  that combines many base modules and functions together. One way is to construct sample businesses and keep them running for long time, periodically check status or test tools' reports.\r\n\r\nIf there's simpler method to handle bugs like this, would you please share it? @hcaseyal "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/450205573",
    "html_url": "https://github.com/grpc/grpc/pull/17586#issuecomment-450205573",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17586",
    "id": 450205573,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDIwNTU3Mw==",
    "user": {
      "login": "hcaseyal",
      "id": 8952658,
      "node_id": "MDQ6VXNlcjg5NTI2NTg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8952658?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hcaseyal",
      "html_url": "https://github.com/hcaseyal",
      "followers_url": "https://api.github.com/users/hcaseyal/followers",
      "following_url": "https://api.github.com/users/hcaseyal/following{/other_user}",
      "gists_url": "https://api.github.com/users/hcaseyal/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hcaseyal/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hcaseyal/subscriptions",
      "organizations_url": "https://api.github.com/users/hcaseyal/orgs",
      "repos_url": "https://api.github.com/users/hcaseyal/repos",
      "events_url": "https://api.github.com/users/hcaseyal/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hcaseyal/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-27T18:28:34Z",
    "updated_at": "2018-12-27T18:28:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "@vertextao I'll share the method here if there's a simpler way. The person I want to talk to about this won't be available for another 1.5 weeks or so.\r\n\r\nWe do run our PRs with sanitizers (ASAN, TSAN, MSAN). I'm not sure why these wouldn't catch this bug, unless we don't exercise these code paths in our tests."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/450326630",
    "html_url": "https://github.com/grpc/grpc/pull/17586#issuecomment-450326630",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17586",
    "id": 450326630,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDMyNjYzMA==",
    "user": {
      "login": "vertextao",
      "id": 980728,
      "node_id": "MDQ6VXNlcjk4MDcyOA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/980728?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vertextao",
      "html_url": "https://github.com/vertextao",
      "followers_url": "https://api.github.com/users/vertextao/followers",
      "following_url": "https://api.github.com/users/vertextao/following{/other_user}",
      "gists_url": "https://api.github.com/users/vertextao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vertextao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vertextao/subscriptions",
      "organizations_url": "https://api.github.com/users/vertextao/orgs",
      "repos_url": "https://api.github.com/users/vertextao/repos",
      "events_url": "https://api.github.com/users/vertextao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vertextao/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-28T09:31:17Z",
    "updated_at": "2018-12-28T09:31:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't understand the *Bazel RBE Debug C/C++* failed check.\r\n\r\nFollow the details,\r\n```\r\nFailed\r\n1\r\nSuccessful\r\n10,176\r\n```\r\n\r\nAnd follow the failed one's [detail](https://source.cloud.google.com/results/invocations/008af9c4-1c60-462f-a809-f329bc24fb98/targets/%2F%2Ftest%2Fcpp%2Fend2end:end2end_test@poller%3Dpoll-cv/tests)\r\n\r\n```\r\nTarget\r\nTimed out\r\nTotal tests\r\n448\r\nFailed\r\n0\r\nPassed\r\n448\r\nNot run\r\n0\r\n```\r\nIt shows all tests were success, then, what does the \"timed out\" mean? Dose it indicate the tests took too long? @hcaseyal "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/450399089",
    "html_url": "https://github.com/grpc/grpc/pull/17586#issuecomment-450399089",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17586",
    "id": 450399089,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDM5OTA4OQ==",
    "user": {
      "login": "hcaseyal",
      "id": 8952658,
      "node_id": "MDQ6VXNlcjg5NTI2NTg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8952658?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hcaseyal",
      "html_url": "https://github.com/hcaseyal",
      "followers_url": "https://api.github.com/users/hcaseyal/followers",
      "following_url": "https://api.github.com/users/hcaseyal/following{/other_user}",
      "gists_url": "https://api.github.com/users/hcaseyal/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hcaseyal/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hcaseyal/subscriptions",
      "organizations_url": "https://api.github.com/users/hcaseyal/orgs",
      "repos_url": "https://api.github.com/users/hcaseyal/repos",
      "events_url": "https://api.github.com/users/hcaseyal/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hcaseyal/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-28T17:46:49Z",
    "updated_at": "2018-12-28T17:46:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "@vertextao It might be an infrastructure issue. I just triggered a re-run of that test - let's see if it passes this time."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/455708661",
    "html_url": "https://github.com/grpc/grpc/pull/17586#issuecomment-455708661",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17586",
    "id": 455708661,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTcwODY2MQ==",
    "user": {
      "login": "hcaseyal",
      "id": 8952658,
      "node_id": "MDQ6VXNlcjg5NTI2NTg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8952658?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hcaseyal",
      "html_url": "https://github.com/hcaseyal",
      "followers_url": "https://api.github.com/users/hcaseyal/followers",
      "following_url": "https://api.github.com/users/hcaseyal/following{/other_user}",
      "gists_url": "https://api.github.com/users/hcaseyal/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hcaseyal/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hcaseyal/subscriptions",
      "organizations_url": "https://api.github.com/users/hcaseyal/orgs",
      "repos_url": "https://api.github.com/users/hcaseyal/repos",
      "events_url": "https://api.github.com/users/hcaseyal/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hcaseyal/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-18T22:28:48Z",
    "updated_at": "2019-01-18T22:28:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "@vertextao Ok, so here's what we think happened with regard to why our tests didn't catch this bug and a way to write a test for it:\r\n\r\nThe bug is, in essence, just a memory leak. We *do* run sanitizers that would catch memory leaks and we do exercise these code paths. However, we didn't catch this particular leak because: 1) The sanitizers only run on Linux (they can't run on Windows) 2) gpr_mu_create probably has different behavior on Windows than Linux; in particular, it likely allocates memory on Windows and not on Linux.\r\n\r\nA simple test we could add to catch this bug would be changing the Linux version of gpr_mu_create, under tests only, to allocate memory just like Windows does. We'd also change a test-only gpr_mu_destroy to free that memory. Then, any call to gpr_mu_create that does not have a matching call to gpr_mu_destroy will be caught by our tests.\r\n\r\n@vertextao , would you be interested in submitting a pull request for this test? I would be happy to review it."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/456645836",
    "html_url": "https://github.com/grpc/grpc/pull/17586#issuecomment-456645836",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17586",
    "id": 456645836,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NjY0NTgzNg==",
    "user": {
      "login": "vertextao",
      "id": 980728,
      "node_id": "MDQ6VXNlcjk4MDcyOA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/980728?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vertextao",
      "html_url": "https://github.com/vertextao",
      "followers_url": "https://api.github.com/users/vertextao/followers",
      "following_url": "https://api.github.com/users/vertextao/following{/other_user}",
      "gists_url": "https://api.github.com/users/vertextao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vertextao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vertextao/subscriptions",
      "organizations_url": "https://api.github.com/users/vertextao/orgs",
      "repos_url": "https://api.github.com/users/vertextao/repos",
      "events_url": "https://api.github.com/users/vertextao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vertextao/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-23T02:34:00Z",
    "updated_at": "2019-01-23T02:39:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "@hcaseyal Sorry for the delayed reply. \r\nOf course I'm interested in this. I need some time to get familiar with the project. \r\nI'll try this in the next few days."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/458573850",
    "html_url": "https://github.com/grpc/grpc/pull/17586#issuecomment-458573850",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17586",
    "id": 458573850,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODU3Mzg1MA==",
    "user": {
      "login": "vertextao",
      "id": 980728,
      "node_id": "MDQ6VXNlcjk4MDcyOA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/980728?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vertextao",
      "html_url": "https://github.com/vertextao",
      "followers_url": "https://api.github.com/users/vertextao/followers",
      "following_url": "https://api.github.com/users/vertextao/following{/other_user}",
      "gists_url": "https://api.github.com/users/vertextao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vertextao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vertextao/subscriptions",
      "organizations_url": "https://api.github.com/users/vertextao/orgs",
      "repos_url": "https://api.github.com/users/vertextao/repos",
      "events_url": "https://api.github.com/users/vertextao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vertextao/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-29T15:06:14Z",
    "updated_at": "2019-01-29T15:06:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "> @vertextao Ok, so here's what we think happened with regard to why our tests didn't catch this bug and a way to write a test for it:\r\n> \r\n> The bug is, in essence, just a memory leak. We _do_ run sanitizers that would catch memory leaks and we do exercise these code paths. However, we didn't catch this particular leak because: 1) The sanitizers only run on Linux (they can't run on Windows) 2) gpr_mu_create probably has different behavior on Windows than Linux; in particular, it likely allocates memory on Windows and not on Linux.\r\n> \r\n> A simple test we could add to catch this bug would be changing the Linux version of gpr_mu_create, under tests only, to allocate memory just like Windows does. We'd also change a test-only gpr_mu_destroy to free that memory. Then, any call to gpr_mu_create that does not have a matching call to gpr_mu_destroy will be caught by our tests.\r\n> \r\n> @vertextao , would you be interested in submitting a pull request for this test? I would be happy to review it.\r\n\r\nHi, @hcaseyal \r\n\r\nI'm considering write the test-only code within a test-only specified MACRO. Is there any MACRO already defined I can use? \r\n\r\nThanks!"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/458639402",
    "html_url": "https://github.com/grpc/grpc/pull/17586#issuecomment-458639402",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17586",
    "id": 458639402,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODYzOTQwMg==",
    "user": {
      "login": "hcaseyal",
      "id": 8952658,
      "node_id": "MDQ6VXNlcjg5NTI2NTg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8952658?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hcaseyal",
      "html_url": "https://github.com/hcaseyal",
      "followers_url": "https://api.github.com/users/hcaseyal/followers",
      "following_url": "https://api.github.com/users/hcaseyal/following{/other_user}",
      "gists_url": "https://api.github.com/users/hcaseyal/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hcaseyal/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hcaseyal/subscriptions",
      "organizations_url": "https://api.github.com/users/hcaseyal/orgs",
      "repos_url": "https://api.github.com/users/hcaseyal/repos",
      "events_url": "https://api.github.com/users/hcaseyal/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hcaseyal/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-29T17:51:35Z",
    "updated_at": "2019-01-29T17:51:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi @vertextao,\r\nIt looks like we don't have a test-only MACRO defined yet in gRPC. I would suggest making a macro in port_platform.h called \"GPR_ASAN\" that is defined only when code is being run under ASAN. Please check the code here (https://clang.llvm.org/docs/AddressSanitizer.html#conditional-compilation-with-has-feature-address-sanitizer) to see how to do this.\r\nPlease let me know if anything is unclear. Thanks!"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/459195850",
    "html_url": "https://github.com/grpc/grpc/pull/17586#issuecomment-459195850",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17586",
    "id": 459195850,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTE5NTg1MA==",
    "user": {
      "login": "vertextao",
      "id": 980728,
      "node_id": "MDQ6VXNlcjk4MDcyOA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/980728?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vertextao",
      "html_url": "https://github.com/vertextao",
      "followers_url": "https://api.github.com/users/vertextao/followers",
      "following_url": "https://api.github.com/users/vertextao/following{/other_user}",
      "gists_url": "https://api.github.com/users/vertextao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vertextao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vertextao/subscriptions",
      "organizations_url": "https://api.github.com/users/vertextao/orgs",
      "repos_url": "https://api.github.com/users/vertextao/repos",
      "events_url": "https://api.github.com/users/vertextao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vertextao/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-31T02:55:38Z",
    "updated_at": "2019-01-31T09:45:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi, @hcaseyal \r\nThanks for your suggestion!\r\n\r\n* My plan is to add test-only code under MACRO *GPR_ASAN* in both .h/.cc files. But considering one situation - the grp library is pre-built and the test program may be built separately. \r\n\r\n* So, another plan is to implement both test/normal version of grp_mu related data structures and functions. Then the MACRO *GPR_ASAN* only takes effect in header files. Finally, implementations include the header file, when *GPR_ASAN* is defined, call the test version functions, otherwise, call the normal version functions. \r\n\r\n* The disadvantage\r\n  - The test code would release with the distribution of products using gRPC.\r\n\r\nWhat's your opinion @hcaseyal ?\r\n\r\nThanks!"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/459566341",
    "html_url": "https://github.com/grpc/grpc/pull/17586#issuecomment-459566341",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17586",
    "id": 459566341,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTU2NjM0MQ==",
    "user": {
      "login": "nicolasnoble",
      "id": 7281574,
      "node_id": "MDQ6VXNlcjcyODE1NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7281574?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nicolasnoble",
      "html_url": "https://github.com/nicolasnoble",
      "followers_url": "https://api.github.com/users/nicolasnoble/followers",
      "following_url": "https://api.github.com/users/nicolasnoble/following{/other_user}",
      "gists_url": "https://api.github.com/users/nicolasnoble/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nicolasnoble/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nicolasnoble/subscriptions",
      "organizations_url": "https://api.github.com/users/nicolasnoble/orgs",
      "repos_url": "https://api.github.com/users/nicolasnoble/repos",
      "events_url": "https://api.github.com/users/nicolasnoble/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nicolasnoble/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-01T01:00:28Z",
    "updated_at": "2019-02-01T01:00:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "@vertextao this is not how sanitizers work. When running clang's code sanitizers, all of your code, including all the dependents, has to be built using the same sanitizer. So to run grpc asan tests, you need an asan-built gpr and grpc library."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/459586478",
    "html_url": "https://github.com/grpc/grpc/pull/17586#issuecomment-459586478",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17586",
    "id": 459586478,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTU4NjQ3OA==",
    "user": {
      "login": "vertextao",
      "id": 980728,
      "node_id": "MDQ6VXNlcjk4MDcyOA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/980728?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vertextao",
      "html_url": "https://github.com/vertextao",
      "followers_url": "https://api.github.com/users/vertextao/followers",
      "following_url": "https://api.github.com/users/vertextao/following{/other_user}",
      "gists_url": "https://api.github.com/users/vertextao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vertextao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vertextao/subscriptions",
      "organizations_url": "https://api.github.com/users/vertextao/orgs",
      "repos_url": "https://api.github.com/users/vertextao/repos",
      "events_url": "https://api.github.com/users/vertextao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vertextao/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-01T02:49:38Z",
    "updated_at": "2019-02-01T02:49:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "> @vertextao this is not how sanitizers work. When running clang's code sanitizers, all of your code, including all the dependents, has to be built using the same sanitizer. So to run grpc asan tests, you need an asan-built gpr and grpc library.\r\n\r\n@nicolasnoble Thanks for your notice! I've got it.\r\nBy the way, is it necessary to consider the situation -- to test the normal built of gpr and grpc library from separated built test program?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/459783003",
    "html_url": "https://github.com/grpc/grpc/pull/17586#issuecomment-459783003",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17586",
    "id": 459783003,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTc4MzAwMw==",
    "user": {
      "login": "hcaseyal",
      "id": 8952658,
      "node_id": "MDQ6VXNlcjg5NTI2NTg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8952658?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hcaseyal",
      "html_url": "https://github.com/hcaseyal",
      "followers_url": "https://api.github.com/users/hcaseyal/followers",
      "following_url": "https://api.github.com/users/hcaseyal/following{/other_user}",
      "gists_url": "https://api.github.com/users/hcaseyal/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hcaseyal/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hcaseyal/subscriptions",
      "organizations_url": "https://api.github.com/users/hcaseyal/orgs",
      "repos_url": "https://api.github.com/users/hcaseyal/repos",
      "events_url": "https://api.github.com/users/hcaseyal/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hcaseyal/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-01T16:34:07Z",
    "updated_at": "2019-02-01T16:34:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "@vertextao If you have the test-only code under GPR_ASAN and it runs under sanitizers, that will meet the intended purpose; in other words, that will catch memory leaks in gpr_mu_create and expose the bug that you caught on Windows. There isn't really a need to do more than that."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/459892624",
    "html_url": "https://github.com/grpc/grpc/pull/17586#issuecomment-459892624",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17586",
    "id": 459892624,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTg5MjYyNA==",
    "user": {
      "login": "hcaseyal",
      "id": 8952658,
      "node_id": "MDQ6VXNlcjg5NTI2NTg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8952658?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hcaseyal",
      "html_url": "https://github.com/hcaseyal",
      "followers_url": "https://api.github.com/users/hcaseyal/followers",
      "following_url": "https://api.github.com/users/hcaseyal/following{/other_user}",
      "gists_url": "https://api.github.com/users/hcaseyal/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hcaseyal/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hcaseyal/subscriptions",
      "organizations_url": "https://api.github.com/users/hcaseyal/orgs",
      "repos_url": "https://api.github.com/users/hcaseyal/repos",
      "events_url": "https://api.github.com/users/hcaseyal/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hcaseyal/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-01T22:40:29Z",
    "updated_at": "2019-02-01T22:40:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "@vertextao This is a piece of the ASAN work here: https://github.com/grpc/grpc/pull/17824/files"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/459927596",
    "html_url": "https://github.com/grpc/grpc/pull/17586#issuecomment-459927596",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17586",
    "id": 459927596,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTkyNzU5Ng==",
    "user": {
      "login": "vertextao",
      "id": 980728,
      "node_id": "MDQ6VXNlcjk4MDcyOA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/980728?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vertextao",
      "html_url": "https://github.com/vertextao",
      "followers_url": "https://api.github.com/users/vertextao/followers",
      "following_url": "https://api.github.com/users/vertextao/following{/other_user}",
      "gists_url": "https://api.github.com/users/vertextao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vertextao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vertextao/subscriptions",
      "organizations_url": "https://api.github.com/users/vertextao/orgs",
      "repos_url": "https://api.github.com/users/vertextao/repos",
      "events_url": "https://api.github.com/users/vertextao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vertextao/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-02T02:34:16Z",
    "updated_at": "2019-02-02T02:34:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "@hcaseyal I notice there's a Macro called [GRPC_TSAN_ENABLED](https://github.com/grpc/grpc/blob/master/include/grpc/impl/codegen/port_platform.h#L568). So I'm considering add the Macro called GRPC_ASAN_ENABLED in the same way that can make them unified.\r\n\r\nBut I still have a question -- what's the differences between the prefixes *GRPC_* and *GPR_*?\r\n\r\nThanks !\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/459928090",
    "html_url": "https://github.com/grpc/grpc/pull/17586#issuecomment-459928090",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17586",
    "id": 459928090,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTkyODA5MA==",
    "user": {
      "login": "hcaseyal",
      "id": 8952658,
      "node_id": "MDQ6VXNlcjg5NTI2NTg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8952658?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hcaseyal",
      "html_url": "https://github.com/hcaseyal",
      "followers_url": "https://api.github.com/users/hcaseyal/followers",
      "following_url": "https://api.github.com/users/hcaseyal/following{/other_user}",
      "gists_url": "https://api.github.com/users/hcaseyal/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hcaseyal/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hcaseyal/subscriptions",
      "organizations_url": "https://api.github.com/users/hcaseyal/orgs",
      "repos_url": "https://api.github.com/users/hcaseyal/repos",
      "events_url": "https://api.github.com/users/hcaseyal/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hcaseyal/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-02T02:41:16Z",
    "updated_at": "2019-02-02T02:41:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "@vertextao That's a great question. I actually have no idea. @nicolasnoble , can you enlighten us?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/459975099",
    "html_url": "https://github.com/grpc/grpc/pull/17586#issuecomment-459975099",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17586",
    "id": 459975099,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTk3NTA5OQ==",
    "user": {
      "login": "vertextao",
      "id": 980728,
      "node_id": "MDQ6VXNlcjk4MDcyOA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/980728?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vertextao",
      "html_url": "https://github.com/vertextao",
      "followers_url": "https://api.github.com/users/vertextao/followers",
      "following_url": "https://api.github.com/users/vertextao/following{/other_user}",
      "gists_url": "https://api.github.com/users/vertextao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vertextao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vertextao/subscriptions",
      "organizations_url": "https://api.github.com/users/vertextao/orgs",
      "repos_url": "https://api.github.com/users/vertextao/repos",
      "events_url": "https://api.github.com/users/vertextao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vertextao/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-02T15:45:18Z",
    "updated_at": "2019-02-02T15:45:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "@hcaseyal I've tried some modifications, and restored the bug fixed before, I want to check whether it works(catch the memory leak issue), how(or where) should I run the corresponding test suites and check the results?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/460321871",
    "html_url": "https://github.com/grpc/grpc/pull/17586#issuecomment-460321871",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17586",
    "id": 460321871,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDMyMTg3MQ==",
    "user": {
      "login": "hcaseyal",
      "id": 8952658,
      "node_id": "MDQ6VXNlcjg5NTI2NTg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8952658?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hcaseyal",
      "html_url": "https://github.com/hcaseyal",
      "followers_url": "https://api.github.com/users/hcaseyal/followers",
      "following_url": "https://api.github.com/users/hcaseyal/following{/other_user}",
      "gists_url": "https://api.github.com/users/hcaseyal/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hcaseyal/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hcaseyal/subscriptions",
      "organizations_url": "https://api.github.com/users/hcaseyal/orgs",
      "repos_url": "https://api.github.com/users/hcaseyal/repos",
      "events_url": "https://api.github.com/users/hcaseyal/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hcaseyal/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-04T16:48:45Z",
    "updated_at": "2019-02-04T16:48:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "@vertextao do you have access to a non-Windows machine (linux or mac)? If so, please run one of the test suites under ASAN. E.g.,\r\nCONFIG=asan make h2_full_test\r\nbins/asan/h2_full_test simple_request\r\n\r\nWe have some more documentation on running tests here: \r\nhttps://github.com/grpc/grpc/tree/master/tools/run_tests"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/460509910",
    "html_url": "https://github.com/grpc/grpc/pull/17586#issuecomment-460509910",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17586",
    "id": 460509910,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDUwOTkxMA==",
    "user": {
      "login": "vertextao",
      "id": 980728,
      "node_id": "MDQ6VXNlcjk4MDcyOA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/980728?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vertextao",
      "html_url": "https://github.com/vertextao",
      "followers_url": "https://api.github.com/users/vertextao/followers",
      "following_url": "https://api.github.com/users/vertextao/following{/other_user}",
      "gists_url": "https://api.github.com/users/vertextao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vertextao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vertextao/subscriptions",
      "organizations_url": "https://api.github.com/users/vertextao/orgs",
      "repos_url": "https://api.github.com/users/vertextao/repos",
      "events_url": "https://api.github.com/users/vertextao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vertextao/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-05T04:35:20Z",
    "updated_at": "2019-02-05T04:35:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "@hcaseyal Yes, I have both linux and Mac machine, and I've tried running tests via [run_tests.py](\r\nhttps://github.com/grpc/grpc/blob/master/tools/run_tests/run_tests.py). But I didn't see any detailed reports except the stdout on the screen.\r\n\r\nI followed your guide and ran the `bins/asan/h2_full_test simple_request`, and here was the output:\r\n```\r\nD0205 12:25:00.789821000 4336104896 test_config.cc:391]                test slowdown factor: sanitizer=3, fixture=1, poller=1, total=3\r\n```\r\n\r\nHow to explain the output, and is there any documents for the tests?\r\n\r\nThanks! "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/460796112",
    "html_url": "https://github.com/grpc/grpc/pull/17586#issuecomment-460796112",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17586",
    "id": 460796112,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDc5NjExMg==",
    "user": {
      "login": "hcaseyal",
      "id": 8952658,
      "node_id": "MDQ6VXNlcjg5NTI2NTg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8952658?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hcaseyal",
      "html_url": "https://github.com/hcaseyal",
      "followers_url": "https://api.github.com/users/hcaseyal/followers",
      "following_url": "https://api.github.com/users/hcaseyal/following{/other_user}",
      "gists_url": "https://api.github.com/users/hcaseyal/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hcaseyal/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hcaseyal/subscriptions",
      "organizations_url": "https://api.github.com/users/hcaseyal/orgs",
      "repos_url": "https://api.github.com/users/hcaseyal/repos",
      "events_url": "https://api.github.com/users/hcaseyal/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hcaseyal/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-05T20:44:06Z",
    "updated_at": "2019-02-05T20:44:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "@vertextao That output indicates the test passed. I don't believe we have better documentation for the tests - that's something that should be improved."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/460797121",
    "html_url": "https://github.com/grpc/grpc/pull/17586#issuecomment-460797121",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17586",
    "id": 460797121,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDc5NzEyMQ==",
    "user": {
      "login": "hcaseyal",
      "id": 8952658,
      "node_id": "MDQ6VXNlcjg5NTI2NTg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8952658?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hcaseyal",
      "html_url": "https://github.com/hcaseyal",
      "followers_url": "https://api.github.com/users/hcaseyal/followers",
      "following_url": "https://api.github.com/users/hcaseyal/following{/other_user}",
      "gists_url": "https://api.github.com/users/hcaseyal/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hcaseyal/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hcaseyal/subscriptions",
      "organizations_url": "https://api.github.com/users/hcaseyal/orgs",
      "repos_url": "https://api.github.com/users/hcaseyal/repos",
      "events_url": "https://api.github.com/users/hcaseyal/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hcaseyal/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-05T20:47:13Z",
    "updated_at": "2019-02-05T20:47:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "@vertextao run_tests.py just spits out the output to STDOUT. I would recommend piping that to a file and checking it afterwards to see if any of the ASAN tests fail. Another thing you can do is create a pull request with your bug fix reverted and with the GRPC_ASAN modifications, and we can run the full suite of PR tests on that and see if any tests fail."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/460826144",
    "html_url": "https://github.com/grpc/grpc/pull/17586#issuecomment-460826144",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17586",
    "id": 460826144,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDgyNjE0NA==",
    "user": {
      "login": "hcaseyal",
      "id": 8952658,
      "node_id": "MDQ6VXNlcjg5NTI2NTg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8952658?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hcaseyal",
      "html_url": "https://github.com/hcaseyal",
      "followers_url": "https://api.github.com/users/hcaseyal/followers",
      "following_url": "https://api.github.com/users/hcaseyal/following{/other_user}",
      "gists_url": "https://api.github.com/users/hcaseyal/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hcaseyal/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hcaseyal/subscriptions",
      "organizations_url": "https://api.github.com/users/hcaseyal/orgs",
      "repos_url": "https://api.github.com/users/hcaseyal/repos",
      "events_url": "https://api.github.com/users/hcaseyal/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hcaseyal/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-05T22:17:52Z",
    "updated_at": "2019-02-05T22:17:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "@vertextao To answer your earlier question about GPR vs. GRPC: apparently GPR stands for Google Portable Runtime. It is used even outside of gRPC for portability (e.g., code that behaves differently across different platforms, compilers, etc). GRPC, however, is gRPC-specific. With the macros that you will be adding in your PR, it's a gray area on whether they should be GPR or GRPC. I'm fine with you using GRPC for consistency with the existing macros."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/460881526",
    "html_url": "https://github.com/grpc/grpc/pull/17586#issuecomment-460881526",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17586",
    "id": 460881526,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDg4MTUyNg==",
    "user": {
      "login": "vertextao",
      "id": 980728,
      "node_id": "MDQ6VXNlcjk4MDcyOA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/980728?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vertextao",
      "html_url": "https://github.com/vertextao",
      "followers_url": "https://api.github.com/users/vertextao/followers",
      "following_url": "https://api.github.com/users/vertextao/following{/other_user}",
      "gists_url": "https://api.github.com/users/vertextao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vertextao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vertextao/subscriptions",
      "organizations_url": "https://api.github.com/users/vertextao/orgs",
      "repos_url": "https://api.github.com/users/vertextao/repos",
      "events_url": "https://api.github.com/users/vertextao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vertextao/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-06T02:35:53Z",
    "updated_at": "2019-02-06T02:57:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "@hcaseyal Thanks for your explanation!\r\nThe PR was committed."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/460894746",
    "html_url": "https://github.com/grpc/grpc/pull/17586#issuecomment-460894746",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17586",
    "id": 460894746,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDg5NDc0Ng==",
    "user": {
      "login": "hcaseyal",
      "id": 8952658,
      "node_id": "MDQ6VXNlcjg5NTI2NTg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8952658?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hcaseyal",
      "html_url": "https://github.com/hcaseyal",
      "followers_url": "https://api.github.com/users/hcaseyal/followers",
      "following_url": "https://api.github.com/users/hcaseyal/following{/other_user}",
      "gists_url": "https://api.github.com/users/hcaseyal/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hcaseyal/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hcaseyal/subscriptions",
      "organizations_url": "https://api.github.com/users/hcaseyal/orgs",
      "repos_url": "https://api.github.com/users/hcaseyal/repos",
      "events_url": "https://api.github.com/users/hcaseyal/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hcaseyal/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-06T04:07:23Z",
    "updated_at": "2019-02-06T04:07:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "@vertextao cool! I just set Kokoro to run the tests on it, let's see what happens"
  }
]
