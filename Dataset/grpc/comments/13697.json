[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/352499781",
    "html_url": "https://github.com/grpc/grpc/pull/13697#issuecomment-352499781",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13697",
    "id": 352499781,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjQ5OTc4MQ==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-18T17:39:22Z",
    "updated_at": "2017-12-18T17:39:22Z",
    "author_association": "MEMBER",
    "body": "This is now (finally) ready for review\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/353471952",
    "html_url": "https://github.com/grpc/grpc/pull/13697#issuecomment-353471952",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13697",
    "id": 353471952,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzQ3MTk1Mg==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-21T22:18:27Z",
    "updated_at": "2017-12-21T22:18:27Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE        FILE SIZE\n ++++++++++++++  ++++++++++++++\n\n  [ = ]       0        0  [ = ]\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n  +1.9%    +659 src/cpp/server/server_cc.cc                                                             +659  +1.9%\n      [NEW] +2.51Ki grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>::RunHandler                 +2.51Ki  [NEW]\n      [NEW] +2.51Ki grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>::RunHandler                  +2.51Ki  [NEW]\n      [NEW] +2.06Ki grpc::Server::Server                                                                 +2.06Ki  [NEW]\n      [NEW] +1.39Ki grpc::Server::SyncRequestThreadManager::DoWork(void*, bool, bool) [clone .part.61]   +1.39Ki  [NEW]\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n      +7.6%     +80 grpc::Server::~Server                                                                    +80  +7.6%\n      [NEW]     +63 grpc::Server::SyncRequestThreadManager::DoWork                                           +63  [NEW]\n      +1.8%     +32 grpc::Server::Start                                                                      +32  +1.8%\n      [NEW]      +5 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>::~ErrorMethodHandler             +5  [NEW]\n      [NEW]      +5 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>::~ErrorMethodHandler              +5  [NEW]\n      [NEW]      +2 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>::~ErrorMethodHandler             +2  [NEW]\n      [NEW]      +2 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>::~ErrorMethodHandler              +2  [NEW]\n   +13%    +532 src/cpp/server/dynamic_thread_pool.cc                                                   +532   +13%\n      [NEW] +1.22Ki grpc::DynamicThreadPool::DynamicThreadPool                                           +1.22Ki  [NEW]\n      [NEW]    +299 grpc::DynamicThreadPool::DynamicThread::DynamicThread                                   +299  [NEW]\n      +168%    +119 grpc::DynamicThreadPool::DynamicThread::~DynamicThread                                  +119  +168%\n       +24%     +69 grpc::DynamicThreadPool::Add                                                             +69   +24%\n       +11%     +56 grpc::DynamicThreadPool::~DynamicThreadPool                                              +56   +11%\n       +13%      +7 [Unmapped]                                                                                +7   +13%\n      [NEW]      +5 grpc::DynamicThreadPool::DynamicThread::DynamicThread(grpc::DynamicThreadPool*, bool      +5  [NEW]\n   +19%    +444 src/cpp/thread_manager/thread_manager.cc                                                +444   +19%\n      [NEW]    +335 grpc::ThreadManager::ThreadManager                                                      +335  [NEW]\n      [NEW]    +296 grpc::ThreadManager::WorkerThread::WorkerThread                                         +296  [NEW]\n       +24%    +107 grpc::ThreadManager::MainWorkLoop                                                       +107   +24%\n       +85%    +104 grpc::ThreadManager::Initialize                                                         +104   +85%\n      +100%     +95 grpc::ThreadManager::WorkerThread::~WorkerThread                                         +95  +100%\n       +26%     +52 grpc::ThreadManager::~ThreadManager                                                      +52   +26%\n       +13%     +12 [Unmapped]                                                                               +12   +13%\n      [NEW]      +5 grpc::ThreadManager::WorkerThread::WorkerThread(grpc::ThreadManager*, bool*)::{lambd      +5  [NEW]\n  +4.0%    +383 src/cpp/server/server_builder.cc                                                        +383  +4.0%\n      +8.8%    +239 grpc::ServerBuilder::BuildAndStart                                                      +239  +8.8%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +21%     +96 grpc::ServerBuilder::ServerBuilder                                                       +96   +21%\n      +7.7%     +48 grpc::ServerBuilder::~ServerBuilder                                                      +48  +7.7%\n  +350%    +308 src/cpp/server/create_default_thread_pool.cc                                            +308  +350%\n      +314%    +176 grpc::(anonymous namespace)::CreateDefaultThreadPoolImpl                                +176  +314%\n      [NEW]     +46 std::_Function_base::_Base_manager<int (*)(unsigned long*, char const*, void (*)(voi     +46  [NEW]\n      [NEW]     +46 std::_Function_base::_Base_manager<void (*)(unsigned long)>::_M_manager                  +46  [NEW]\n      [NEW]     +32 std::_Function_handler<int (unsigned long*, char const*, void (*)(void*), void*, gpr     +32  [NEW]\n      [NEW]      +8 std::_Function_handler<void (unsigned long), void (*)(unsigned long)>::_M_invoke          +8  [NEW]\n  +0.8%     +64 src/cpp/client/secure_credentials.cc                                                     +64  +0.8%\n       +12%     +64 grpc::MetadataCredentialsPluginWrapper::GetMetadata                                      +64   +12%\n  +0.7%     +32 src/cpp/server/secure_server_credentials.cc                                              +32  +0.7%\n      +9.3%     +32 grpc::AuthMetadataProcessorAyncWrapper::Process                                          +32  +9.3%\n\n -+-+-+-+-+-+-+ MIXED                                                                                +-+-+-+-+-+-+-\n  +0.2%    +482 [None]                                                                               -27.3Ki  -0.6%\n      [NEW]     +59 typeinfo name for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>               +59  [NEW]\n      [NEW]     +58 typeinfo name for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>                +58  [NEW]\n      [NEW]     +40 vtable for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>                      +40  [NEW]\n      [NEW]     +40 vtable for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>                       +40  [NEW]\n      [NEW]     +38 typeinfo name for int (*)                                                                +38  [NEW]\n      [NEW]     +37 typeinfo name for int                                                                    +37  [NEW]\n      [NEW]     +32 typeinfo for int (*)                                                                     +32  [NEW]\n      [NEW]     +32 typeinfo for void (*)                                                                    +32  [NEW]\n      [NEW]     +24 typeinfo for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>                    +24  [NEW]\n      [NEW]     +24 typeinfo for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>                     +24  [NEW]\n      [NEW]     +16 typeinfo for int                                                                         +16  [NEW]\n      [NEW]     +16 typeinfo for void                                                                        +16  [NEW]\n      [NEW]      +6 typeinfo name for void (*)                                                                +6  [NEW]\n      [NEW]      +5 typeinfo name for void                                                                    +5  [NEW]\n      [DEL]    -109 typeinfo name for std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (grpc    -109  [DEL]\n      [DEL]    -104 typeinfo name for std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (grpc    -104  [DEL]\n      [DEL]     -40 vtable for grpc::internal::UnknownMethodHandler                                          -40  [DEL]\n      [DEL]     -40 vtable for std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (grpc::Threa     -40  [DEL]\n      [DEL]     -40 vtable for std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (grpc::Dynam     -40  [DEL]\n      [DEL]     -39 typeinfo name for grpc::internal::UnknownMethodHandler                                   -39  [DEL]\n      [DEL]     -24 typeinfo for grpc::internal::UnknownMethodHandler                                        -24  [DEL]\n      [DEL]     -24 typeinfo for std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (grpc::Thr     -24  [DEL]\n      [DEL]     -24 typeinfo for std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (grpc::Dyn     -24  [DEL]\n\n  +0.9% +2.84Ki TOTAL                                                                                -24.9Ki  -0.5%\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/353475262",
    "html_url": "https://github.com/grpc/grpc/pull/13697#issuecomment-353475262",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13697",
    "id": 353475262,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzQ3NTI2Mg==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-21T22:36:27Z",
    "updated_at": "2017-12-21T22:36:27Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/353480641",
    "html_url": "https://github.com/grpc/grpc/pull/13697#issuecomment-353480641",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13697",
    "id": 353480641,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzQ4MDY0MQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-21T23:10:04Z",
    "updated_at": "2017-12-21T23:10:04Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/353628038",
    "html_url": "https://github.com/grpc/grpc/pull/13697#issuecomment-353628038",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13697",
    "id": 353628038,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzYyODAzOA==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-22T16:10:46Z",
    "updated_at": "2017-12-22T16:10:46Z",
    "author_association": "MEMBER",
    "body": "I need to find out why this is leaking memory on resource_exhausted RPCs\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/353669415",
    "html_url": "https://github.com/grpc/grpc/pull/13697#issuecomment-353669415",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13697",
    "id": 353669415,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzY2OTQxNQ==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-22T20:26:04Z",
    "updated_at": "2017-12-22T20:26:04Z",
    "author_association": "MEMBER",
    "body": "Confirmed that the leaks are not the result of\r\n\r\n1. A difference in sync client-side unary RPCs vs async where sync doesn't use the `AllowNoMessage` option (this might be suitable for a different PR)\r\n2. Using inproc or chttp2 transport. Both show the same leaks in the same places.\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/356045690",
    "html_url": "https://github.com/grpc/grpc/pull/13697#issuecomment-356045690",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13697",
    "id": 356045690,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjA0NTY5MA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-08T18:06:04Z",
    "updated_at": "2018-01-08T18:06:04Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE        FILE SIZE\n ++++++++++++++  ++++++++++++++\n\n  [ = ]       0        0  [ = ]\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n  +1.9%    +659 src/cpp/server/server_cc.cc                                                             +659  +1.9%\n      [NEW] +2.51Ki grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>::RunHandler                 +2.51Ki  [NEW]\n      [NEW] +2.51Ki grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>::RunHandler                  +2.51Ki  [NEW]\n      [NEW] +2.06Ki grpc::Server::Server                                                                 +2.06Ki  [NEW]\n      [NEW] +1.39Ki grpc::Server::SyncRequestThreadManager::DoWork(void*, bool, bool) [clone .part.61]   +1.39Ki  [NEW]\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n      +7.6%     +80 grpc::Server::~Server                                                                    +80  +7.6%\n      [NEW]     +63 grpc::Server::SyncRequestThreadManager::DoWork                                           +63  [NEW]\n      +1.8%     +32 grpc::Server::Start                                                                      +32  +1.8%\n      [NEW]      +5 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>::~ErrorMethodHandler             +5  [NEW]\n      [NEW]      +5 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>::~ErrorMethodHandler              +5  [NEW]\n      [NEW]      +2 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>::~ErrorMethodHandler             +2  [NEW]\n      [NEW]      +2 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>::~ErrorMethodHandler              +2  [NEW]\n   +13%    +532 src/cpp/server/dynamic_thread_pool.cc                                                   +532   +13%\n      [NEW] +1.22Ki grpc::DynamicThreadPool::DynamicThreadPool                                           +1.22Ki  [NEW]\n      [NEW]    +299 grpc::DynamicThreadPool::DynamicThread::DynamicThread                                   +299  [NEW]\n      +168%    +119 grpc::DynamicThreadPool::DynamicThread::~DynamicThread                                  +119  +168%\n       +24%     +69 grpc::DynamicThreadPool::Add                                                             +69   +24%\n       +11%     +56 grpc::DynamicThreadPool::~DynamicThreadPool                                              +56   +11%\n       +13%      +7 [Unmapped]                                                                                +7   +13%\n      [NEW]      +5 grpc::DynamicThreadPool::DynamicThread::DynamicThread(grpc::DynamicThreadPool*, bool      +5  [NEW]\n   +19%    +444 src/cpp/thread_manager/thread_manager.cc                                                +444   +19%\n      [NEW]    +335 grpc::ThreadManager::ThreadManager                                                      +335  [NEW]\n      [NEW]    +296 grpc::ThreadManager::WorkerThread::WorkerThread                                         +296  [NEW]\n       +24%    +107 grpc::ThreadManager::MainWorkLoop                                                       +107   +24%\n       +85%    +104 grpc::ThreadManager::Initialize                                                         +104   +85%\n      +100%     +95 grpc::ThreadManager::WorkerThread::~WorkerThread                                         +95  +100%\n       +26%     +52 grpc::ThreadManager::~ThreadManager                                                      +52   +26%\n       +13%     +12 [Unmapped]                                                                               +12   +13%\n      [NEW]      +5 grpc::ThreadManager::WorkerThread::WorkerThread(grpc::ThreadManager*, bool*)::{lambd      +5  [NEW]\n  +4.0%    +383 src/cpp/server/server_builder.cc                                                        +383  +4.0%\n      +8.8%    +239 grpc::ServerBuilder::BuildAndStart                                                      +239  +8.8%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +21%     +96 grpc::ServerBuilder::ServerBuilder                                                       +96   +21%\n      +7.7%     +48 grpc::ServerBuilder::~ServerBuilder                                                      +48  +7.7%\n  +350%    +308 src/cpp/server/create_default_thread_pool.cc                                            +308  +350%\n      +314%    +176 grpc::(anonymous namespace)::CreateDefaultThreadPoolImpl                                +176  +314%\n      [NEW]     +46 std::_Function_base::_Base_manager<int (*)(unsigned long*, char const*, void (*)(voi     +46  [NEW]\n      [NEW]     +46 std::_Function_base::_Base_manager<void (*)(unsigned long)>::_M_manager                  +46  [NEW]\n      [NEW]     +32 std::_Function_handler<int (unsigned long*, char const*, void (*)(void*), void*, gpr     +32  [NEW]\n      [NEW]      +8 std::_Function_handler<void (unsigned long), void (*)(unsigned long)>::_M_invoke          +8  [NEW]\n  +0.8%     +64 src/cpp/client/secure_credentials.cc                                                     +64  +0.8%\n       +12%     +64 grpc::MetadataCredentialsPluginWrapper::GetMetadata                                      +64   +12%\n  +0.7%     +32 src/cpp/server/secure_server_credentials.cc                                              +32  +0.7%\n      +9.3%     +32 grpc::AuthMetadataProcessorAyncWrapper::Process                                          +32  +9.3%\n\n -+-+-+-+-+-+-+ MIXED                                                                                +-+-+-+-+-+-+-\n  +0.2%    +482 [None]                                                                               -27.3Ki  -0.6%\n      [NEW]     +59 typeinfo name for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>               +59  [NEW]\n      [NEW]     +58 typeinfo name for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>                +58  [NEW]\n      [NEW]     +40 vtable for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>                      +40  [NEW]\n      [NEW]     +40 vtable for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>                       +40  [NEW]\n      [NEW]     +38 typeinfo name for int (*)                                                                +38  [NEW]\n      [NEW]     +37 typeinfo name for int                                                                    +37  [NEW]\n      [NEW]     +32 typeinfo for int (*)                                                                     +32  [NEW]\n      [NEW]     +32 typeinfo for void (*)                                                                    +32  [NEW]\n      [NEW]     +24 typeinfo for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>                    +24  [NEW]\n      [NEW]     +24 typeinfo for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>                     +24  [NEW]\n      [NEW]     +16 typeinfo for int                                                                         +16  [NEW]\n      [NEW]     +16 typeinfo for void                                                                        +16  [NEW]\n      [NEW]      +6 typeinfo name for void (*)                                                                +6  [NEW]\n      [NEW]      +5 typeinfo name for void                                                                    +5  [NEW]\n      [DEL]    -109 typeinfo name for std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (grpc    -109  [DEL]\n      [DEL]    -104 typeinfo name for std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (grpc    -104  [DEL]\n      [DEL]     -40 vtable for grpc::internal::UnknownMethodHandler                                          -40  [DEL]\n      [DEL]     -40 vtable for std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (grpc::Threa     -40  [DEL]\n      [DEL]     -40 vtable for std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (grpc::Dynam     -40  [DEL]\n      [DEL]     -39 typeinfo name for grpc::internal::UnknownMethodHandler                                   -39  [DEL]\n      [DEL]     -24 typeinfo for grpc::internal::UnknownMethodHandler                                        -24  [DEL]\n      [DEL]     -24 typeinfo for std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (grpc::Thr     -24  [DEL]\n      [DEL]     -24 typeinfo for std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (grpc::Dyn     -24  [DEL]\n\n  +0.9% +2.84Ki TOTAL                                                                                -24.9Ki  -0.5%\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/356048892",
    "html_url": "https://github.com/grpc/grpc/pull/13697#issuecomment-356048892",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13697",
    "id": 356048892,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjA0ODg5Mg==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-08T18:17:22Z",
    "updated_at": "2018-01-08T18:17:22Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/356060214",
    "html_url": "https://github.com/grpc/grpc/pull/13697#issuecomment-356060214",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13697",
    "id": 356060214,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjA2MDIxNA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-08T18:57:36Z",
    "updated_at": "2018-01-08T18:57:36Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] Performance differences noted:\nBenchmark                                                                             cpu_time    real_time\n------------------------------------------------------------------------------------  ----------  -----------\nBM_StreamingPingPongWithCoalescingApi<InProcess, NoOpMutator, NoOpMutator>/32768/2/0  +4%         +4%\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/356752813",
    "html_url": "https://github.com/grpc/grpc/pull/13697#issuecomment-356752813",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13697",
    "id": 356752813,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Njc1MjgxMw==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-10T22:05:59Z",
    "updated_at": "2018-01-10T22:05:59Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE        FILE SIZE\n ++++++++++++++  ++++++++++++++\n\n  [ = ]       0        0  [ = ]\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n  +2.1%    +723 src/cpp/server/server_cc.cc                                                             +723  +2.1%\n      [NEW] +2.54Ki grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>::RunHandler                 +2.54Ki  [NEW]\n      [NEW] +2.54Ki grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>::RunHandler                  +2.54Ki  [NEW]\n      [NEW] +2.06Ki grpc::Server::Server                                                                 +2.06Ki  [NEW]\n      [NEW] +1.39Ki grpc::Server::SyncRequestThreadManager::DoWork(void*, bool, bool) [clone .part.61]   +1.39Ki  [NEW]\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n      +7.6%     +80 grpc::Server::~Server                                                                    +80  +7.6%\n      [NEW]     +63 grpc::Server::SyncRequestThreadManager::DoWork                                           +63  [NEW]\n      +1.8%     +32 grpc::Server::Start                                                                      +32  +1.8%\n      [NEW]      +5 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>::~ErrorMethodHandler             +5  [NEW]\n      [NEW]      +5 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>::~ErrorMethodHandler              +5  [NEW]\n      [NEW]      +2 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>::~ErrorMethodHandler             +2  [NEW]\n      [NEW]      +2 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>::~ErrorMethodHandler              +2  [NEW]\n   +13%    +532 src/cpp/server/dynamic_thread_pool.cc                                                   +532   +13%\n      [NEW] +1.22Ki grpc::DynamicThreadPool::DynamicThreadPool                                           +1.22Ki  [NEW]\n      [NEW]    +299 grpc::DynamicThreadPool::DynamicThread::DynamicThread                                   +299  [NEW]\n      +168%    +119 grpc::DynamicThreadPool::DynamicThread::~DynamicThread                                  +119  +168%\n       +24%     +69 grpc::DynamicThreadPool::Add                                                             +69   +24%\n       +11%     +56 grpc::DynamicThreadPool::~DynamicThreadPool                                              +56   +11%\n       +13%      +7 [Unmapped]                                                                                +7   +13%\n      [NEW]      +5 grpc::DynamicThreadPool::DynamicThread::DynamicThread(grpc::DynamicThreadPool*, bool      +5  [NEW]\n   +19%    +444 src/cpp/thread_manager/thread_manager.cc                                                +444   +19%\n      [NEW]    +335 grpc::ThreadManager::ThreadManager                                                      +335  [NEW]\n      [NEW]    +296 grpc::ThreadManager::WorkerThread::WorkerThread                                         +296  [NEW]\n       +24%    +107 grpc::ThreadManager::MainWorkLoop                                                       +107   +24%\n       +85%    +104 grpc::ThreadManager::Initialize                                                         +104   +85%\n      +100%     +95 grpc::ThreadManager::WorkerThread::~WorkerThread                                         +95  +100%\n       +26%     +52 grpc::ThreadManager::~ThreadManager                                                      +52   +26%\n       +13%     +12 [Unmapped]                                                                               +12   +13%\n      [NEW]      +5 grpc::ThreadManager::WorkerThread::WorkerThread(grpc::ThreadManager*, bool*)::{lambd      +5  [NEW]\n  +4.0%    +383 src/cpp/server/server_builder.cc                                                        +383  +4.0%\n      +8.8%    +239 grpc::ServerBuilder::BuildAndStart                                                      +239  +8.8%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +21%     +96 grpc::ServerBuilder::ServerBuilder                                                       +96   +21%\n      +7.7%     +48 grpc::ServerBuilder::~ServerBuilder                                                      +48  +7.7%\n  +350%    +308 src/cpp/server/create_default_thread_pool.cc                                            +308  +350%\n      +314%    +176 grpc::(anonymous namespace)::CreateDefaultThreadPoolImpl                                +176  +314%\n      [NEW]     +46 std::_Function_base::_Base_manager<int (*)(unsigned long*, char const*, void (*)(voi     +46  [NEW]\n      [NEW]     +46 std::_Function_base::_Base_manager<void (*)(unsigned long)>::_M_manager                  +46  [NEW]\n      [NEW]     +32 std::_Function_handler<int (unsigned long*, char const*, void (*)(void*), void*, gpr     +32  [NEW]\n      [NEW]      +8 std::_Function_handler<void (unsigned long), void (*)(unsigned long)>::_M_invoke          +8  [NEW]\n  +0.8%     +64 src/cpp/client/secure_credentials.cc                                                     +64  +0.8%\n       +12%     +64 grpc::MetadataCredentialsPluginWrapper::GetMetadata                                      +64   +12%\n  +0.7%     +32 src/cpp/server/secure_server_credentials.cc                                              +32  +0.7%\n      +9.3%     +32 grpc::AuthMetadataProcessorAyncWrapper::Process                                          +32  +9.3%\n\n -+-+-+-+-+-+-+ MIXED                                                                                +-+-+-+-+-+-+-\n  +0.2%    +482 [None]                                                                               -27.5Ki  -0.6%\n      [NEW]     +59 typeinfo name for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>               +59  [NEW]\n      [NEW]     +58 typeinfo name for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>                +58  [NEW]\n      [NEW]     +40 vtable for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>                      +40  [NEW]\n      [NEW]     +40 vtable for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>                       +40  [NEW]\n      [NEW]     +38 typeinfo name for int (*)                                                                +38  [NEW]\n      [NEW]     +37 typeinfo name for int                                                                    +37  [NEW]\n      [NEW]     +32 typeinfo for int (*)                                                                     +32  [NEW]\n      [NEW]     +32 typeinfo for void (*)                                                                    +32  [NEW]\n      [NEW]     +24 typeinfo for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>                    +24  [NEW]\n      [NEW]     +24 typeinfo for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>                     +24  [NEW]\n      [NEW]     +16 typeinfo for int                                                                         +16  [NEW]\n      [NEW]     +16 typeinfo for void                                                                        +16  [NEW]\n      [NEW]      +6 typeinfo name for void (*)                                                                +6  [NEW]\n      [NEW]      +5 typeinfo name for void                                                                    +5  [NEW]\n      [DEL]    -109 typeinfo name for std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (grpc    -109  [DEL]\n      [DEL]    -104 typeinfo name for std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (grpc    -104  [DEL]\n      [DEL]     -40 vtable for grpc::internal::UnknownMethodHandler                                          -40  [DEL]\n      [DEL]     -40 vtable for std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (grpc::Threa     -40  [DEL]\n      [DEL]     -40 vtable for std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (grpc::Dynam     -40  [DEL]\n      [DEL]     -39 typeinfo name for grpc::internal::UnknownMethodHandler                                   -39  [DEL]\n      [DEL]     -24 typeinfo for grpc::internal::UnknownMethodHandler                                        -24  [DEL]\n      [DEL]     -24 typeinfo for std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (grpc::Thr     -24  [DEL]\n      [DEL]     -24 typeinfo for std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (grpc::Dyn     -24  [DEL]\n\n  +0.9% +2.90Ki TOTAL                                                                                -25.1Ki  -0.5%\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/356755861",
    "html_url": "https://github.com/grpc/grpc/pull/13697#issuecomment-356755861",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13697",
    "id": 356755861,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Njc1NTg2MQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-10T22:17:21Z",
    "updated_at": "2018-01-10T22:17:21Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/356760174",
    "html_url": "https://github.com/grpc/grpc/pull/13697#issuecomment-356760174",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13697",
    "id": 356760174,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Njc2MDE3NA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-10T22:34:14Z",
    "updated_at": "2018-01-10T22:34:14Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE        FILE SIZE\n ++++++++++++++  ++++++++++++++\n\n  [ = ]       0        0  [ = ]\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n  +2.1%    +723 src/cpp/server/server_cc.cc                                                             +723  +2.1%\n      [NEW] +2.54Ki grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>::RunHandler                 +2.54Ki  [NEW]\n      [NEW] +2.54Ki grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>::RunHandler                  +2.54Ki  [NEW]\n      [NEW] +2.06Ki grpc::Server::Server                                                                 +2.06Ki  [NEW]\n      [NEW] +1.39Ki grpc::Server::SyncRequestThreadManager::DoWork(void*, bool, bool) [clone .part.61]   +1.39Ki  [NEW]\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n      +7.6%     +80 grpc::Server::~Server                                                                    +80  +7.6%\n      [NEW]     +63 grpc::Server::SyncRequestThreadManager::DoWork                                           +63  [NEW]\n      +1.8%     +32 grpc::Server::Start                                                                      +32  +1.8%\n      [NEW]      +5 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>::~ErrorMethodHandler             +5  [NEW]\n      [NEW]      +5 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>::~ErrorMethodHandler              +5  [NEW]\n      [NEW]      +2 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>::~ErrorMethodHandler             +2  [NEW]\n      [NEW]      +2 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>::~ErrorMethodHandler              +2  [NEW]\n   +13%    +532 src/cpp/server/dynamic_thread_pool.cc                                                   +532   +13%\n      [NEW] +1.22Ki grpc::DynamicThreadPool::DynamicThreadPool                                           +1.22Ki  [NEW]\n      [NEW]    +299 grpc::DynamicThreadPool::DynamicThread::DynamicThread                                   +299  [NEW]\n      +168%    +119 grpc::DynamicThreadPool::DynamicThread::~DynamicThread                                  +119  +168%\n       +24%     +69 grpc::DynamicThreadPool::Add                                                             +69   +24%\n       +11%     +56 grpc::DynamicThreadPool::~DynamicThreadPool                                              +56   +11%\n       +13%      +7 [Unmapped]                                                                                +7   +13%\n      [NEW]      +5 grpc::DynamicThreadPool::DynamicThread::DynamicThread(grpc::DynamicThreadPool*, bool      +5  [NEW]\n   +19%    +444 src/cpp/thread_manager/thread_manager.cc                                                +444   +19%\n      [NEW]    +335 grpc::ThreadManager::ThreadManager                                                      +335  [NEW]\n      [NEW]    +296 grpc::ThreadManager::WorkerThread::WorkerThread                                         +296  [NEW]\n       +24%    +107 grpc::ThreadManager::MainWorkLoop                                                       +107   +24%\n       +85%    +104 grpc::ThreadManager::Initialize                                                         +104   +85%\n      +100%     +95 grpc::ThreadManager::WorkerThread::~WorkerThread                                         +95  +100%\n       +26%     +52 grpc::ThreadManager::~ThreadManager                                                      +52   +26%\n       +13%     +12 [Unmapped]                                                                               +12   +13%\n      [NEW]      +5 grpc::ThreadManager::WorkerThread::WorkerThread(grpc::ThreadManager*, bool*)::{lambd      +5  [NEW]\n  +4.0%    +383 src/cpp/server/server_builder.cc                                                        +383  +4.0%\n      +8.8%    +239 grpc::ServerBuilder::BuildAndStart                                                      +239  +8.8%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +21%     +96 grpc::ServerBuilder::ServerBuilder                                                       +96   +21%\n      +7.7%     +48 grpc::ServerBuilder::~ServerBuilder                                                      +48  +7.7%\n  +350%    +308 src/cpp/server/create_default_thread_pool.cc                                            +308  +350%\n      +314%    +176 grpc::(anonymous namespace)::CreateDefaultThreadPoolImpl                                +176  +314%\n      [NEW]     +46 std::_Function_base::_Base_manager<int (*)(unsigned long*, char const*, void (*)(voi     +46  [NEW]\n      [NEW]     +46 std::_Function_base::_Base_manager<void (*)(unsigned long)>::_M_manager                  +46  [NEW]\n      [NEW]     +32 std::_Function_handler<int (unsigned long*, char const*, void (*)(void*), void*, gpr     +32  [NEW]\n      [NEW]      +8 std::_Function_handler<void (unsigned long), void (*)(unsigned long)>::_M_invoke          +8  [NEW]\n  +0.8%     +64 src/cpp/client/secure_credentials.cc                                                     +64  +0.8%\n       +12%     +64 grpc::MetadataCredentialsPluginWrapper::GetMetadata                                      +64   +12%\n  +0.7%     +32 src/cpp/server/secure_server_credentials.cc                                              +32  +0.7%\n      +9.3%     +32 grpc::AuthMetadataProcessorAyncWrapper::Process                                          +32  +9.3%\n\n -+-+-+-+-+-+-+ MIXED                                                                                +-+-+-+-+-+-+-\n  +0.2%    +482 [None]                                                                               -27.4Ki  -0.6%\n      [NEW]     +59 typeinfo name for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>               +59  [NEW]\n      [NEW]     +58 typeinfo name for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>                +58  [NEW]\n      [NEW]     +40 vtable for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>                      +40  [NEW]\n      [NEW]     +40 vtable for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>                       +40  [NEW]\n      [NEW]     +38 typeinfo name for int (*)                                                                +38  [NEW]\n      [NEW]     +37 typeinfo name for int                                                                    +37  [NEW]\n      [NEW]     +32 typeinfo for int (*)                                                                     +32  [NEW]\n      [NEW]     +32 typeinfo for void (*)                                                                    +32  [NEW]\n      [NEW]     +24 typeinfo for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>                    +24  [NEW]\n      [NEW]     +24 typeinfo for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>                     +24  [NEW]\n      [NEW]     +16 typeinfo for int                                                                         +16  [NEW]\n      [NEW]     +16 typeinfo for void                                                                        +16  [NEW]\n      [NEW]      +6 typeinfo name for void (*)                                                                +6  [NEW]\n      [NEW]      +5 typeinfo name for void                                                                    +5  [NEW]\n      [DEL]    -109 typeinfo name for std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (grpc    -109  [DEL]\n      [DEL]    -104 typeinfo name for std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (grpc    -104  [DEL]\n      [DEL]     -40 vtable for grpc::internal::UnknownMethodHandler                                          -40  [DEL]\n      [DEL]     -40 vtable for std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (grpc::Threa     -40  [DEL]\n      [DEL]     -40 vtable for std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (grpc::Dynam     -40  [DEL]\n      [DEL]     -39 typeinfo name for grpc::internal::UnknownMethodHandler                                   -39  [DEL]\n      [DEL]     -24 typeinfo for grpc::internal::UnknownMethodHandler                                        -24  [DEL]\n      [DEL]     -24 typeinfo for std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (grpc::Thr     -24  [DEL]\n      [DEL]     -24 typeinfo for std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (grpc::Dyn     -24  [DEL]\n\n  +0.9% +2.90Ki TOTAL                                                                                -25.0Ki  -0.5%\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/356762531",
    "html_url": "https://github.com/grpc/grpc/pull/13697#issuecomment-356762531",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13697",
    "id": 356762531,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Njc2MjUzMQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-10T22:44:03Z",
    "updated_at": "2018-01-10T22:44:03Z",
    "author_association": "NONE",
    "body": "```\n****************************************************************\n\nlibgrpc.so\n\n     VM SIZE        FILE SIZE\n ++++++++++++++  ++++++++++++++\n\n  [ = ]       0        0  [ = ]\n\n\n****************************************************************\n\nlibgrpc++.so\n\n     VM SIZE                                                                                            FILE SIZE\n ++++++++++++++ GROWING                                                                              ++++++++++++++\n  +2.1%    +739 src/cpp/server/server_cc.cc                                                             +739  +2.1%\n      [NEW] +2.54Ki grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>::RunHandler                 +2.54Ki  [NEW]\n      [NEW] +2.54Ki grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>::RunHandler                  +2.54Ki  [NEW]\n      [NEW] +2.06Ki grpc::Server::Server                                                                 +2.06Ki  [NEW]\n      [NEW] +1.41Ki grpc::Server::SyncRequestThreadManager::DoWork(void*, bool, bool) [clone .part.61]   +1.41Ki  [NEW]\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n      +7.6%     +80 grpc::Server::~Server                                                                    +80  +7.6%\n      [NEW]     +63 grpc::Server::SyncRequestThreadManager::DoWork                                           +63  [NEW]\n      +1.8%     +32 grpc::Server::Start                                                                      +32  +1.8%\n      [NEW]      +5 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>::~ErrorMethodHandler             +5  [NEW]\n      [NEW]      +5 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>::~ErrorMethodHandler              +5  [NEW]\n      [NEW]      +2 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>::~ErrorMethodHandler             +2  [NEW]\n      [NEW]      +2 grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>::~ErrorMethodHandler              +2  [NEW]\n   +13%    +532 src/cpp/server/dynamic_thread_pool.cc                                                   +532   +13%\n      [NEW] +1.22Ki grpc::DynamicThreadPool::DynamicThreadPool                                           +1.22Ki  [NEW]\n      [NEW]    +299 grpc::DynamicThreadPool::DynamicThread::DynamicThread                                   +299  [NEW]\n      +168%    +119 grpc::DynamicThreadPool::DynamicThread::~DynamicThread                                  +119  +168%\n       +24%     +69 grpc::DynamicThreadPool::Add                                                             +69   +24%\n       +11%     +56 grpc::DynamicThreadPool::~DynamicThreadPool                                              +56   +11%\n       +13%      +7 [Unmapped]                                                                                +7   +13%\n      [NEW]      +5 grpc::DynamicThreadPool::DynamicThread::DynamicThread(grpc::DynamicThreadPool*, bool      +5  [NEW]\n   +19%    +444 src/cpp/thread_manager/thread_manager.cc                                                +444   +19%\n      [NEW]    +335 grpc::ThreadManager::ThreadManager                                                      +335  [NEW]\n      [NEW]    +296 grpc::ThreadManager::WorkerThread::WorkerThread                                         +296  [NEW]\n       +24%    +107 grpc::ThreadManager::MainWorkLoop                                                       +107   +24%\n       +85%    +104 grpc::ThreadManager::Initialize                                                         +104   +85%\n      +100%     +95 grpc::ThreadManager::WorkerThread::~WorkerThread                                         +95  +100%\n       +26%     +52 grpc::ThreadManager::~ThreadManager                                                      +52   +26%\n       +13%     +12 [Unmapped]                                                                               +12   +13%\n      [NEW]      +5 grpc::ThreadManager::WorkerThread::WorkerThread(grpc::ThreadManager*, bool*)::{lambd      +5  [NEW]\n  +4.0%    +383 src/cpp/server/server_builder.cc                                                        +383  +4.0%\n      +8.8%    +239 grpc::ServerBuilder::BuildAndStart                                                      +239  +8.8%\n      [NEW]    +194 void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >    +194  [NEW]\n       +21%     +96 grpc::ServerBuilder::ServerBuilder                                                       +96   +21%\n      +7.7%     +48 grpc::ServerBuilder::~ServerBuilder                                                      +48  +7.7%\n  +350%    +308 src/cpp/server/create_default_thread_pool.cc                                            +308  +350%\n      +314%    +176 grpc::(anonymous namespace)::CreateDefaultThreadPoolImpl                                +176  +314%\n      [NEW]     +46 std::_Function_base::_Base_manager<int (*)(unsigned long*, char const*, void (*)(voi     +46  [NEW]\n      [NEW]     +46 std::_Function_base::_Base_manager<void (*)(unsigned long)>::_M_manager                  +46  [NEW]\n      [NEW]     +32 std::_Function_handler<int (unsigned long*, char const*, void (*)(void*), void*, gpr     +32  [NEW]\n      [NEW]      +8 std::_Function_handler<void (unsigned long), void (*)(unsigned long)>::_M_invoke          +8  [NEW]\n  +0.8%     +64 src/cpp/client/secure_credentials.cc                                                     +64  +0.8%\n       +12%     +64 grpc::MetadataCredentialsPluginWrapper::GetMetadata                                      +64   +12%\n  +0.7%     +32 src/cpp/server/secure_server_credentials.cc                                              +32  +0.7%\n      +9.3%     +32 grpc::AuthMetadataProcessorAyncWrapper::Process                                          +32  +9.3%\n\n -+-+-+-+-+-+-+ MIXED                                                                                +-+-+-+-+-+-+-\n  +0.2%    +498 [None]                                                                               -27.5Ki  -0.6%\n      [NEW]     +59 typeinfo name for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>               +59  [NEW]\n      [NEW]     +58 typeinfo name for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>                +58  [NEW]\n      [NEW]     +40 vtable for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>                      +40  [NEW]\n      [NEW]     +40 vtable for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>                       +40  [NEW]\n      [NEW]     +38 typeinfo name for int (*)                                                                +38  [NEW]\n      [NEW]     +37 typeinfo name for int                                                                    +37  [NEW]\n      [NEW]     +32 typeinfo for int (*)                                                                     +32  [NEW]\n      [NEW]     +32 typeinfo for void (*)                                                                    +32  [NEW]\n      [NEW]     +24 typeinfo for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)12>                    +24  [NEW]\n      [NEW]     +24 typeinfo for grpc::internal::ErrorMethodHandler<(grpc::StatusCode)8>                     +24  [NEW]\n      [NEW]     +16 typeinfo for int                                                                         +16  [NEW]\n      [NEW]     +16 typeinfo for void                                                                        +16  [NEW]\n      [NEW]      +6 typeinfo name for void (*)                                                                +6  [NEW]\n      [NEW]      +5 typeinfo name for void                                                                    +5  [NEW]\n      [DEL]    -109 typeinfo name for std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (grpc    -109  [DEL]\n      [DEL]    -104 typeinfo name for std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (grpc    -104  [DEL]\n      [DEL]     -40 vtable for grpc::internal::UnknownMethodHandler                                          -40  [DEL]\n      [DEL]     -40 vtable for std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (grpc::Threa     -40  [DEL]\n      [DEL]     -40 vtable for std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (grpc::Dynam     -40  [DEL]\n      [DEL]     -39 typeinfo name for grpc::internal::UnknownMethodHandler                                   -39  [DEL]\n      [DEL]     -24 typeinfo for grpc::internal::UnknownMethodHandler                                        -24  [DEL]\n      [DEL]     -24 typeinfo for std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (grpc::Thr     -24  [DEL]\n      [DEL]     -24 typeinfo for std::thread::_State_impl<std::_Bind_simple<std::_Mem_fn<void (grpc::Dyn     -24  [DEL]\n\n  +0.9% +2.93Ki TOTAL                                                                                -25.0Ki  -0.5%\n\n\n\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/356763052",
    "html_url": "https://github.com/grpc/grpc/pull/13697#issuecomment-356763052",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13697",
    "id": 356763052,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Njc2MzA1Mg==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-10T22:46:08Z",
    "updated_at": "2018-01-10T22:46:08Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/356765516",
    "html_url": "https://github.com/grpc/grpc/pull/13697#issuecomment-356765516",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13697",
    "id": 356765516,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Njc2NTUxNg==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-10T22:56:20Z",
    "updated_at": "2018-01-10T22:56:20Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/356765735",
    "html_url": "https://github.com/grpc/grpc/pull/13697#issuecomment-356765735",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13697",
    "id": 356765735,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Njc2NTczNQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-10T22:57:17Z",
    "updated_at": "2018-01-10T22:57:17Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/356772241",
    "html_url": "https://github.com/grpc/grpc/pull/13697#issuecomment-356772241",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13697",
    "id": 356772241,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Njc3MjI0MQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-10T23:27:28Z",
    "updated_at": "2018-01-10T23:27:28Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/356773889",
    "html_url": "https://github.com/grpc/grpc/pull/13697#issuecomment-356773889",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13697",
    "id": 356773889,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Njc3Mzg4OQ==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-10T23:35:06Z",
    "updated_at": "2018-01-10T23:35:06Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/357071552",
    "html_url": "https://github.com/grpc/grpc/pull/13697#issuecomment-357071552",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13697",
    "id": 357071552,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzA3MTU1Mg==",
    "user": {
      "login": "sreecha",
      "id": 2754995,
      "node_id": "MDQ6VXNlcjI3NTQ5OTU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2754995?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sreecha",
      "html_url": "https://github.com/sreecha",
      "followers_url": "https://api.github.com/users/sreecha/followers",
      "following_url": "https://api.github.com/users/sreecha/following{/other_user}",
      "gists_url": "https://api.github.com/users/sreecha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sreecha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sreecha/subscriptions",
      "organizations_url": "https://api.github.com/users/sreecha/orgs",
      "repos_url": "https://api.github.com/users/sreecha/repos",
      "events_url": "https://api.github.com/users/sreecha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sreecha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-11T21:46:42Z",
    "updated_at": "2018-01-11T21:46:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "the 3 commits on Jan 10 look good to me.\r\n"
  }
]
