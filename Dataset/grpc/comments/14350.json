[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/363689943",
    "html_url": "https://github.com/grpc/grpc/issues/14350#issuecomment-363689943",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14350",
    "id": 363689943,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzY4OTk0Mw==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-07T08:13:22Z",
    "updated_at": "2018-02-07T08:13:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for reporting. Is there a way I can reproduce? (looks like you can't reproduce locally).\r\n- how often does it happen?\r\n- any other info that would help me reproduce? (spending so much time in grpcsharp_version_string does sound odd indeed)."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/363690090",
    "html_url": "https://github.com/grpc/grpc/issues/14350#issuecomment-363690090",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14350",
    "id": 363690090,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzY5MDA5MA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-07T08:14:01Z",
    "updated_at": "2018-02-07T08:15:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "https://github.com/grpc/grpc/blob/fb369d95677b85995071e8255230c8bd7e291216/src/csharp/ext/grpc_csharp_ext.c#L1117\r\n\r\nhttps://github.com/grpc/grpc/blob/e5b0a504167fbc6277d034709aa29ea07fa09a00/src/core/lib/surface/version.cc#L24"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/363690583",
    "html_url": "https://github.com/grpc/grpc/issues/14350#issuecomment-363690583",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14350",
    "id": 363690583,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzY5MDU4Mw==",
    "user": {
      "login": "sandersaares",
      "id": 9914262,
      "node_id": "MDQ6VXNlcjk5MTQyNjI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9914262?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sandersaares",
      "html_url": "https://github.com/sandersaares",
      "followers_url": "https://api.github.com/users/sandersaares/followers",
      "following_url": "https://api.github.com/users/sandersaares/following{/other_user}",
      "gists_url": "https://api.github.com/users/sandersaares/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sandersaares/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sandersaares/subscriptions",
      "organizations_url": "https://api.github.com/users/sandersaares/orgs",
      "repos_url": "https://api.github.com/users/sandersaares/repos",
      "events_url": "https://api.github.com/users/sandersaares/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sandersaares/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-07T08:16:00Z",
    "updated_at": "2018-02-07T08:17:24Z",
    "author_association": "NONE",
    "body": "This is the only instance it has occurred so far. My attempts to reproduce elsewhere have failed. The three processes are still running and eating CPU - if there is anything I can do to provide more info I am happy to troubleshoot and analyze the system further."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/363692046",
    "html_url": "https://github.com/grpc/grpc/issues/14350#issuecomment-363692046",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14350",
    "id": 363692046,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzY5MjA0Ng==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-07T08:22:25Z",
    "updated_at": "2018-02-07T08:22:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "Also, grpcsharp_version_string is actually never invoked in Grpc C#  (and GetCoreVersionString is only an internal function which is even more weird). Could you attach a debugger to the running process and get as much info as you can from it?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/363693748",
    "html_url": "https://github.com/grpc/grpc/issues/14350#issuecomment-363693748",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14350",
    "id": 363693748,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzY5Mzc0OA==",
    "user": {
      "login": "sandersaares",
      "id": 9914262,
      "node_id": "MDQ6VXNlcjk5MTQyNjI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9914262?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sandersaares",
      "html_url": "https://github.com/sandersaares",
      "followers_url": "https://api.github.com/users/sandersaares/followers",
      "following_url": "https://api.github.com/users/sandersaares/following{/other_user}",
      "gists_url": "https://api.github.com/users/sandersaares/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sandersaares/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sandersaares/subscriptions",
      "organizations_url": "https://api.github.com/users/sandersaares/orgs",
      "repos_url": "https://api.github.com/users/sandersaares/repos",
      "events_url": "https://api.github.com/users/sandersaares/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sandersaares/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-07T08:29:46Z",
    "updated_at": "2018-02-07T08:30:38Z",
    "author_association": "NONE",
    "body": "There is a process memory dump linked in the OP that you should be able to open with a debugger. I was not able to divine any useful information out of there myself with some quick probing around, though.\r\n\r\nAre the symbol files for grpc_csharp_ext.x86.dll available somewhere? I suspect the function Process Explorer references there is just the name of the closes exported function in memory and it is not really the function being executed. Symbol files might clear that but I was not able to find the symbols with some basic googling, though perhaps I was looking in the wrong place."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/363695180",
    "html_url": "https://github.com/grpc/grpc/issues/14350#issuecomment-363695180",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14350",
    "id": 363695180,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzY5NTE4MA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-07T08:35:53Z",
    "updated_at": "2018-02-07T08:35:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "I can probably find the .pdb file for you if you provide me with your version of grpc_csharp_ext.dll (exact file size or checksum)"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/363695869",
    "html_url": "https://github.com/grpc/grpc/issues/14350#issuecomment-363695869",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14350",
    "id": 363695869,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzY5NTg2OQ==",
    "user": {
      "login": "sandersaares",
      "id": 9914262,
      "node_id": "MDQ6VXNlcjk5MTQyNjI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9914262?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sandersaares",
      "html_url": "https://github.com/sandersaares",
      "followers_url": "https://api.github.com/users/sandersaares/followers",
      "following_url": "https://api.github.com/users/sandersaares/following{/other_user}",
      "gists_url": "https://api.github.com/users/sandersaares/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sandersaares/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sandersaares/subscriptions",
      "organizations_url": "https://api.github.com/users/sandersaares/orgs",
      "repos_url": "https://api.github.com/users/sandersaares/repos",
      "events_url": "https://api.github.com/users/sandersaares/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sandersaares/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-07T08:38:50Z",
    "updated_at": "2018-02-07T08:38:50Z",
    "author_association": "NONE",
    "body": "Filename grpc_csharp_ext.x86.dll, size 1367552 bytes, date October 31 2017, sha1 b496dd1a560eb3097994747ea94969b75e8dfce9"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/363697764",
    "html_url": "https://github.com/grpc/grpc/issues/14350#issuecomment-363697764",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14350",
    "id": 363697764,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzY5Nzc2NA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-07T08:46:35Z",
    "updated_at": "2018-02-07T08:46:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, so that's 1.7.1, but I realized I don't have the PDB files anymore. :-("
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/378272496",
    "html_url": "https://github.com/grpc/grpc/issues/14350#issuecomment-378272496",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14350",
    "id": 378272496,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODI3MjQ5Ng==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-03T14:36:11Z",
    "updated_at": "2018-04-03T14:36:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "@sandersaares  is this still happening in any later version (v1.8.x, v1.9.x, v1.10.x). There have been a bunch of stability fixes since v1.7.1 where this issue was seen and considering we weren't able to reproduce the issue, there's not much we can do here.\r\nI'm going to close this issue, feel free to reopen if you have some new inputs."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/378276521",
    "html_url": "https://github.com/grpc/grpc/issues/14350#issuecomment-378276521",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14350",
    "id": 378276521,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODI3NjUyMQ==",
    "user": {
      "login": "sandersaares",
      "id": 9914262,
      "node_id": "MDQ6VXNlcjk5MTQyNjI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9914262?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sandersaares",
      "html_url": "https://github.com/sandersaares",
      "followers_url": "https://api.github.com/users/sandersaares/followers",
      "following_url": "https://api.github.com/users/sandersaares/following{/other_user}",
      "gists_url": "https://api.github.com/users/sandersaares/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sandersaares/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sandersaares/subscriptions",
      "organizations_url": "https://api.github.com/users/sandersaares/orgs",
      "repos_url": "https://api.github.com/users/sandersaares/repos",
      "events_url": "https://api.github.com/users/sandersaares/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sandersaares/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-03T14:47:27Z",
    "updated_at": "2018-04-03T14:47:27Z",
    "author_association": "NONE",
    "body": "I have not seen it on later versions. Will make a new issue if it happens again (cannot reopen issues that contributors have closed)."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/396504943",
    "html_url": "https://github.com/grpc/grpc/issues/14350#issuecomment-396504943",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14350",
    "id": 396504943,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjUwNDk0Mw==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-12T08:12:50Z",
    "updated_at": "2018-06-12T08:12:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "FYI, starting from 1.13.0-pre1, we are making the debug symbols available (at least for windows now).\r\nSee https://github.com/grpc/grpc/issues/15437."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/409071639",
    "html_url": "https://github.com/grpc/grpc/issues/14350#issuecomment-409071639",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14350",
    "id": 409071639,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTA3MTYzOQ==",
    "user": {
      "login": "christophergilbert",
      "id": 12618249,
      "node_id": "MDQ6VXNlcjEyNjE4MjQ5",
      "avatar_url": "https://avatars1.githubusercontent.com/u/12618249?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/christophergilbert",
      "html_url": "https://github.com/christophergilbert",
      "followers_url": "https://api.github.com/users/christophergilbert/followers",
      "following_url": "https://api.github.com/users/christophergilbert/following{/other_user}",
      "gists_url": "https://api.github.com/users/christophergilbert/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/christophergilbert/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/christophergilbert/subscriptions",
      "organizations_url": "https://api.github.com/users/christophergilbert/orgs",
      "repos_url": "https://api.github.com/users/christophergilbert/repos",
      "events_url": "https://api.github.com/users/christophergilbert/events{/privacy}",
      "received_events_url": "https://api.github.com/users/christophergilbert/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-31T02:18:17Z",
    "updated_at": "2018-07-31T02:18:17Z",
    "author_association": "NONE",
    "body": "We came across this problem in gRPC version 1.3 and have created a manual set of patches that we apply to that version when we build it from source.  We have not been able to invest the time to re-implement the patch we created for the later versions of gRPC but we did analyze version 1.8 to both confirm the issue was still there but at the same time realised the patch code would have to be extensively modified.\r\n\r\nThe short summary of the issue is the complex way relative and absolute times are handled and used within gRPC coupled with the fact that certain time transformations pass through variables whose types are platform dependent (ie 64 bit or 32 bit).  On the 32 bit systems this causes certain times to get truncated and then code checking for deadlines will fail after monotonic times exceed approx 24.7 days.\r\n\r\nBefore getting into the analysis I have attached two 7-zip files.\r\n\r\n[grpc.1.3.0.timebase.changes.zip](https://github.com/grpc/grpc/files/2243488/grpc.1.3.0.timebase.changes.zip)\r\n\r\ngrpc.1.3.0.timebase.changes.zip contains just enough code to force the issue to reproduce in about 5 minutes.\r\n\r\n[grpc.1.3.0.deadline.changes.zip](https://github.com/grpc/grpc/files/2243481/grpc.1.3.0.deadline.changes.zip)\r\n\r\ngrpc.1.3.0.deadline.changes.zip contains all the code we changed to fix the issue.  Note that we kept the timebase from the repro for convenience. \r\n\r\nWhat follows is my original longer analysis when we first encountered the issue.\r\n\r\n**Analysis** \r\n\r\nAfter analyzing over 10 different process dumps captured in this state, I have been able to get to the root cause of the issue.\r\n\r\nThe abs_deadline passed into gpr_cv_wait is monotonic with tv_sec equal to 2147483.\r\nAfter 25 days, though, the current time in monotonic form has a larger tv_sec, for example, 2324204.\r\nThen in gpr_cv_wait() the abs_deadline is converted to realtime which will be the current realtime minus the difference between the two monotonic times.\r\nThis means gpr_cv_wait will immediately timeout without ever releasing the mutex (critical section).  I think this is the crucial reason why it goes 100% cpu on this thread and never gets any work done because the other threads are blocked from supplying it with work to do.\r\n\r\nint gpr_cv_wait(gpr_cv *cv, gpr_mu *mu, gpr_timespec abs_deadline) {\r\n  int timeout = 0;\r\n  DWORD timeout_max_ms;\r\n  mu->locked = 0;\r\nif (gpr_time_cmp(abs_deadline, gpr_inf_future(abs_deadline.clock_type)) == 0) {\r\n    **_SleepConditionVariableCS(cv, &mu->cs, INFINITE);_**\r\n  } else {\r\n    abs_deadline = gpr_convert_clock_type(abs_deadline, GPR_CLOCK_REALTIME);\r\n    gpr_timespec now = gpr_now(abs_deadline.clock_type);\r\n    int64_t now_ms = (int64_t)now.tv_sec * 1000 + now.tv_nsec / 1000000;\r\n    int64_t deadline_ms =\r\n        (int64_t)abs_deadline.tv_sec * 1000 + abs_deadline.tv_nsec / 1000000;\r\n    if (now_ms >= deadline_ms) {\r\n      _**timeout = 1;**_\r\n    } else {\r\n      if ((deadline_ms - now_ms) >= INFINITE) {\r\n        timeout_max_ms = INFINITE - 1;\r\n      } else {\r\n        timeout_max_ms = (DWORD)(deadline_ms - now_ms);\r\n      }\r\n      timeout = (SleepConditionVariableCS(cv, &mu->cs, timeout_max_ms) == 0 &&\r\n                 GetLastError() == ERROR_TIMEOUT);\r\n    }\r\n  }\r\n  mu->locked = 1;\r\n  return timeout;\r\n}\r\n\r\nThe interesting thing is that I think the intent of the code that is being run is to generally supply a deadline that is infinite but a transform at some point is converting tv_sec = 7fffffff ffffffff to tv_sec = 2147483.  Figuring out where this is happening is the key.  In the code above, I have highlighted two lines.  The \"timeout = 1\" line is the code that currently executes in this scenario.  The \"SleepConditionVariableCS\" line is the code that probably should execute in this situation where the original intent is for an infinite deadline.\r\n\r\nSo where does the deadline get screwed up prior to gpr_cv_wait?  Well, gpr_cv_wait can be called by two other functions in this broad context: \r\n•\tgrpc_completion_queue_pluck\r\n•\tgrpc_completion_queue_next\r\nBoth functions are very similar and take a deadline timespec as realtime infinite.  This is then converted to monotonic infinite.  Then the current now time in monotonic form is retrieved and a copy of the deadline made for this iteration.  Then, in both functions, just prior to the call to gpr_cv_wait, the now timespec and the iteration deadline timespec are both passed to the gpr_timer_check function.\r\n\r\nThrough raw stack analysis of multiple snapshot dumps, I have been able to confirm that all timespecs are in good order going into the gpr_timer_check function.  I also have one dump that caught the critical thread in the middle of executing gpr_timer_check and just prior to writing the incorrect deadline back to the out parameter.  \r\n\r\nbool grpc_timer_check(grpc_exec_ctx *exec_ctx, gpr_timespec now, gpr_timespec **_*next_**) {\r\n  // prelude\r\n  GPR_ASSERT(now.clock_type == g_clock_type);\r\n  **_gpr_atm now_atm = timespec_to_atm_round_down(now);_**\r\n\r\n  /* fetch from a thread-local first: this avoids contention on a globally\r\n     mutable cacheline in the common case */\r\n  gpr_atm min_timer = gpr_tls_get(&g_last_seen_min_timer);\r\n  if (now_atm < min_timer) {\r\n    if (next != NULL) {\r\n      **_*next = atm_to_timespec(GPR_MIN(timespec_to_atm_round_up(*next), min_timer));_**\r\n    }\r\n    // removed tracing code\r\n    return 0;\r\n  }\r\n\r\n  grpc_error *shutdown_error =\r\n      gpr_time_cmp(now, gpr_inf_future(now.clock_type)) != 0\r\n          ? GRPC_ERROR_NONE\r\n          : GRPC_ERROR_CREATE_FROM_STATIC_STRING(\"Shutting down timer system\");\r\n\r\n  // removed tracing code\r\n\r\n  // actual code\r\n  bool r;\r\n  gpr_atm next_atm;\r\n  if (next == NULL) {\r\n    r = run_some_expired_timers(exec_ctx, now_atm, NULL, shutdown_error);\r\n  } else {\r\n    **_next_atm = timespec_to_atm_round_down(*next);_**\r\n    r = run_some_expired_timers(exec_ctx, now_atm, &next_atm, shutdown_error);\r\n    **_*next = atm_to_timespec(next_atm);_**\r\n  }\r\n\r\n  // removed tracing code\r\n  return r > 0;\r\n}\r\n\r\nSpecifically, gpr_timer_check converts the now and deadline timespecs into gpr_atm types.  Unfortunately, this type is defined as a pointer, meaning that it will be 64 bits on 64 bit builds and 32 bit on 32 bit builds.  We have a 32 bit build and so all gpr_atm variables are only 32 bits.  Now gpr_timer_check also modifies the deadline but it does so by modifying the atm version of the deadline and then it converts the atm deadline back to a deadline timespec.  This is bad.  All times and deadlines in gpr_atm form are in milliseconds relative to the start of the process.  This means we hit max value for all these timers and deadlines just before 25 days.\r\n\r\n**Conclusion**\r\n\r\nThe only conclusion I can draw is that this timer aspect of grpc was never tested on 32 bit builds beyond 25 days.  \r\n\r\nThe problem is solvable but not trivial and can only be addressed by changing grpc code.  It’s not enough to change just gpr_timer_check or just to handle the infinite deadline case properly as all deadline timers are affected and they are used in numerous places.\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/409118243",
    "html_url": "https://github.com/grpc/grpc/issues/14350#issuecomment-409118243",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14350",
    "id": 409118243,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTExODI0Mw==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-31T07:07:11Z",
    "updated_at": "2018-07-31T07:07:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "@christophergilbert thanks for the detailed analysis. I think your analysis is correct and this bug was at some point noticed by other users too. We believe it's now fixed by https://github.com/grpc/grpc/pull/14894  (and there's a duplicate issue https://github.com/grpc/grpc/issues/15336).\r\n\r\nThe fix is available starting from version v1.13.0 - can you try that things are working well for you?\r\n\r\nBtw, the gRPC versions 1.3.0 and 1.8.0 your are mentioning are pretty old - I'd recommend upgrading to a newer release if possible."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/409263298",
    "html_url": "https://github.com/grpc/grpc/issues/14350#issuecomment-409263298",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14350",
    "id": 409263298,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTI2MzI5OA==",
    "user": {
      "login": "christophergilbert",
      "id": 12618249,
      "node_id": "MDQ6VXNlcjEyNjE4MjQ5",
      "avatar_url": "https://avatars1.githubusercontent.com/u/12618249?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/christophergilbert",
      "html_url": "https://github.com/christophergilbert",
      "followers_url": "https://api.github.com/users/christophergilbert/followers",
      "following_url": "https://api.github.com/users/christophergilbert/following{/other_user}",
      "gists_url": "https://api.github.com/users/christophergilbert/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/christophergilbert/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/christophergilbert/subscriptions",
      "organizations_url": "https://api.github.com/users/christophergilbert/orgs",
      "repos_url": "https://api.github.com/users/christophergilbert/repos",
      "events_url": "https://api.github.com/users/christophergilbert/events{/privacy}",
      "received_events_url": "https://api.github.com/users/christophergilbert/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-31T15:30:16Z",
    "updated_at": "2018-07-31T15:30:16Z",
    "author_association": "NONE",
    "body": "@jtattermusch thanks for the quick reply.  Having read through the back and forth discussion on #14894 I would say that looks extremely promising.  We will try out the 1.13 version with our c# process immediately.  Our c++ processes will have to wait until we can update our compiler."
  }
]
