[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/143875795",
    "html_url": "https://github.com/grpc/grpc/pull/3548#issuecomment-143875795",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/3548",
    "id": 143875795,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0Mzg3NTc5NQ==",
    "user": {
      "login": "soltanmm",
      "id": 4889063,
      "node_id": "MDQ6VXNlcjQ4ODkwNjM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4889063?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/soltanmm",
      "html_url": "https://github.com/soltanmm",
      "followers_url": "https://api.github.com/users/soltanmm/followers",
      "following_url": "https://api.github.com/users/soltanmm/following{/other_user}",
      "gists_url": "https://api.github.com/users/soltanmm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/soltanmm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/soltanmm/subscriptions",
      "organizations_url": "https://api.github.com/users/soltanmm/orgs",
      "repos_url": "https://api.github.com/users/soltanmm/repos",
      "events_url": "https://api.github.com/users/soltanmm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/soltanmm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-28T21:13:00Z",
    "updated_at": "2015-09-28T21:13:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "Marked DO NOT MERGE because, while the test functions are known to be running, artificial introduced failures in functions are not causing noticed test failures in `py.test`...\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/143879883",
    "html_url": "https://github.com/grpc/grpc/pull/3548#issuecomment-143879883",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/3548",
    "id": 143879883,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0Mzg3OTg4Mw==",
    "user": {
      "login": "soltanmm",
      "id": 4889063,
      "node_id": "MDQ6VXNlcjQ4ODkwNjM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4889063?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/soltanmm",
      "html_url": "https://github.com/soltanmm",
      "followers_url": "https://api.github.com/users/soltanmm/followers",
      "following_url": "https://api.github.com/users/soltanmm/following{/other_user}",
      "gists_url": "https://api.github.com/users/soltanmm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/soltanmm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/soltanmm/subscriptions",
      "organizations_url": "https://api.github.com/users/soltanmm/orgs",
      "repos_url": "https://api.github.com/users/soltanmm/repos",
      "events_url": "https://api.github.com/users/soltanmm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/soltanmm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-28T21:30:26Z",
    "updated_at": "2015-09-29T00:04:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "cc @nicoddemus @RonnyPfannschmidt PTAL\ncc pytest-dev/pytest#992\n\nAt present the tests are known to run (from both an increase in test coverage and explicit logging statements within test function bodies), but explicitly throwing exceptions at the start of test functions does not result in a py.test-noticed test-failure. What would need to be done in the plug-in to have py.test notice test failures here?\n\n## Some side questions:\n\n`obj` appears to be undocumented, but `pytest.Function` expects its existence in its instances' parent collectors. Is there something wrong with using a `pytest.Collector` directly-derived-class instance as its parent?\n\nIs there anything immediately obvious about why using `pytest.Function`, instead of deriving from it and then using instances of the derived class, would cause inexplicable internal errors in `py.test`? I can provide a stack-trace if nothing is immediately obvious.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/144043538",
    "html_url": "https://github.com/grpc/grpc/pull/3548#issuecomment-144043538",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/3548",
    "id": 144043538,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDA0MzUzOA==",
    "user": {
      "login": "nicoddemus",
      "id": 1085180,
      "node_id": "MDQ6VXNlcjEwODUxODA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1085180?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nicoddemus",
      "html_url": "https://github.com/nicoddemus",
      "followers_url": "https://api.github.com/users/nicoddemus/followers",
      "following_url": "https://api.github.com/users/nicoddemus/following{/other_user}",
      "gists_url": "https://api.github.com/users/nicoddemus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nicoddemus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nicoddemus/subscriptions",
      "organizations_url": "https://api.github.com/users/nicoddemus/orgs",
      "repos_url": "https://api.github.com/users/nicoddemus/repos",
      "events_url": "https://api.github.com/users/nicoddemus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nicoddemus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-29T12:22:45Z",
    "updated_at": "2015-09-29T12:22:45Z",
    "author_association": "NONE",
    "body": "Hi @soltanmm,\n\nNice, the plugin looks good to me! I will take a look later tonight to see why it is not working as it should.\n\nCheers, :beers: \n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/144044611",
    "html_url": "https://github.com/grpc/grpc/pull/3548#issuecomment-144044611",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/3548",
    "id": 144044611,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDA0NDYxMQ==",
    "user": {
      "login": "RonnyPfannschmidt",
      "id": 156838,
      "node_id": "MDQ6VXNlcjE1NjgzOA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/156838?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RonnyPfannschmidt",
      "html_url": "https://github.com/RonnyPfannschmidt",
      "followers_url": "https://api.github.com/users/RonnyPfannschmidt/followers",
      "following_url": "https://api.github.com/users/RonnyPfannschmidt/following{/other_user}",
      "gists_url": "https://api.github.com/users/RonnyPfannschmidt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RonnyPfannschmidt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RonnyPfannschmidt/subscriptions",
      "organizations_url": "https://api.github.com/users/RonnyPfannschmidt/orgs",
      "repos_url": "https://api.github.com/users/RonnyPfannschmidt/repos",
      "events_url": "https://api.github.com/users/RonnyPfannschmidt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RonnyPfannschmidt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-29T12:29:12Z",
    "updated_at": "2015-09-29T12:29:12Z",
    "author_association": "NONE",
    "body": "the root of a python collection is either a module or a class\na general collector lacks the python specific attributes that are managed via some internal mixins\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/144215422",
    "html_url": "https://github.com/grpc/grpc/pull/3548#issuecomment-144215422",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/3548",
    "id": 144215422,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDIxNTQyMg==",
    "user": {
      "login": "nicoddemus",
      "id": 1085180,
      "node_id": "MDQ6VXNlcjEwODUxODA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1085180?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nicoddemus",
      "html_url": "https://github.com/nicoddemus",
      "followers_url": "https://api.github.com/users/nicoddemus/followers",
      "following_url": "https://api.github.com/users/nicoddemus/following{/other_user}",
      "gists_url": "https://api.github.com/users/nicoddemus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nicoddemus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nicoddemus/subscriptions",
      "organizations_url": "https://api.github.com/users/nicoddemus/orgs",
      "repos_url": "https://api.github.com/users/nicoddemus/repos",
      "events_url": "https://api.github.com/users/nicoddemus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nicoddemus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-29T23:01:17Z",
    "updated_at": "2015-09-29T23:01:17Z",
    "author_association": "NONE",
    "body": "Hi @soltanmm,\n\nYou are not seeing any errors because `pytest` expects `callobj` to raise an assertion, but `item.run` returns a `TestResult` instance. You also don't need `LoadTestsCaseFixture` because `LoadTestsSuiteCollector` can return test items directly.\n\nI modified your `conftest.py` file so that now tests fail, please see [this gist](https://gist.github.com/nicoddemus/52b7c5a1599b9f2b73e7).\n\nHere's the main modification responsible for tests to fail:\n\n``` python\nclass LoadTestsCase(pytest.Function):\n\n  def __init__(self, name, parent, item):\n    super(LoadTestsCase, self).__init__(name, parent, callobj=self._item_run)\n    self.item = item\n\n  def _item_run(self):\n    result = self.item()\n    if result.failures:\n      test_method, exception = result.failures[0]\n      pytest.fail(exception)\n```\n\nPlease note that a lot of features are missing: skipping, fixtures, `setUpClass`/`tearDownClass`, expected failures, etc. To enable all these features for tests loaded from `load_tests`, you would need to re-implement or reuse much of the work that is done by `pytest`'s [unittest](https://github.com/pytest-dev/pytest/blob/master/_pytest/unittest.py#L137) plugin, as they work in different levels: `TestSuite` has a list of `TestCase` objects ready for running, while the classes in `_pytest.unittest` expect to work with a **class** and a **method name**, which allows it to properly take care of fixture setup/teardown.\n\nHope this helps.\nCheers,\n:beers: \n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/144554777",
    "html_url": "https://github.com/grpc/grpc/pull/3548#issuecomment-144554777",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/3548",
    "id": 144554777,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDU1NDc3Nw==",
    "user": {
      "login": "soltanmm",
      "id": 4889063,
      "node_id": "MDQ6VXNlcjQ4ODkwNjM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4889063?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/soltanmm",
      "html_url": "https://github.com/soltanmm",
      "followers_url": "https://api.github.com/users/soltanmm/followers",
      "following_url": "https://api.github.com/users/soltanmm/following{/other_user}",
      "gists_url": "https://api.github.com/users/soltanmm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/soltanmm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/soltanmm/subscriptions",
      "organizations_url": "https://api.github.com/users/soltanmm/orgs",
      "repos_url": "https://api.github.com/users/soltanmm/repos",
      "events_url": "https://api.github.com/users/soltanmm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/soltanmm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-30T22:02:55Z",
    "updated_at": "2015-09-30T22:06:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks much, @nicoddemus! It certainly helps quite a bit!\n\nA few notes:\n- It turns out that the top-level suite collected from `load_tests` (with items from the `unittest.TestLoader`) is actually a suite... of suites. Whether or not this is due to the way we have written `load_tests` or because of the way `unittest.TestLoader` works in the reference stdlib is unclear to me (@nathanielmanistaatgoogle ?).\n- The test results turn out to be arguments modified by reference rather than returned values.\n- Test code errors get caught by checking the `result.errors` attribute in addition to the `result.failures` attribute. Also, skips in `result.skipped`.\n\nThe plug-in now appears to be working as desired. Thanks again!\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/144557040",
    "html_url": "https://github.com/grpc/grpc/pull/3548#issuecomment-144557040",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/3548",
    "id": 144557040,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDU1NzA0MA==",
    "user": {
      "login": "soltanmm",
      "id": 4889063,
      "node_id": "MDQ6VXNlcjQ4ODkwNjM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4889063?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/soltanmm",
      "html_url": "https://github.com/soltanmm",
      "followers_url": "https://api.github.com/users/soltanmm/followers",
      "following_url": "https://api.github.com/users/soltanmm/following{/other_user}",
      "gists_url": "https://api.github.com/users/soltanmm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/soltanmm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/soltanmm/subscriptions",
      "organizations_url": "https://api.github.com/users/soltanmm/orgs",
      "repos_url": "https://api.github.com/users/soltanmm/repos",
      "events_url": "https://api.github.com/users/soltanmm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/soltanmm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-30T22:07:43Z",
    "updated_at": "2015-09-30T22:09:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Upon rebasing against upstream something went up in flames. Looking into it...\n\nEDIT: Nope, that was just me entering a race condition with my computer's filesystem. False alarm.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/144560934",
    "html_url": "https://github.com/grpc/grpc/pull/3548#issuecomment-144560934",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/3548",
    "id": 144560934,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDU2MDkzNA==",
    "user": {
      "login": "nicoddemus",
      "id": 1085180,
      "node_id": "MDQ6VXNlcjEwODUxODA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1085180?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nicoddemus",
      "html_url": "https://github.com/nicoddemus",
      "followers_url": "https://api.github.com/users/nicoddemus/followers",
      "following_url": "https://api.github.com/users/nicoddemus/following{/other_user}",
      "gists_url": "https://api.github.com/users/nicoddemus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nicoddemus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nicoddemus/subscriptions",
      "organizations_url": "https://api.github.com/users/nicoddemus/orgs",
      "repos_url": "https://api.github.com/users/nicoddemus/repos",
      "events_url": "https://api.github.com/users/nicoddemus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nicoddemus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-30T22:22:12Z",
    "updated_at": "2015-09-30T22:22:12Z",
    "author_association": "NONE",
    "body": "No problem! Once you get this working, I encourage you to create a proper pytest-plugin for it so others can use it as well. There's a section in [the docs](http://pytest.org/latest/writing_plugins.html?highlight=cookiecutter#writing-your-own-plugin) focused on it, as well as a [cookiecutter](https://github.com/pytest-dev/cookiecutter-pytest-plugin) recipe. Feel free to ask any questions you may have! :smile:\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/144581853",
    "html_url": "https://github.com/grpc/grpc/pull/3548#issuecomment-144581853",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/3548",
    "id": 144581853,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDU4MTg1Mw==",
    "user": {
      "login": "soltanmm",
      "id": 4889063,
      "node_id": "MDQ6VXNlcjQ4ODkwNjM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4889063?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/soltanmm",
      "html_url": "https://github.com/soltanmm",
      "followers_url": "https://api.github.com/users/soltanmm/followers",
      "following_url": "https://api.github.com/users/soltanmm/following{/other_user}",
      "gists_url": "https://api.github.com/users/soltanmm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/soltanmm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/soltanmm/subscriptions",
      "organizations_url": "https://api.github.com/users/soltanmm/orgs",
      "repos_url": "https://api.github.com/users/soltanmm/repos",
      "events_url": "https://api.github.com/users/soltanmm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/soltanmm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-01T00:24:55Z",
    "updated_at": "2015-10-01T00:24:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "@nicoddemus Will look into it, thanks again!\n@nathanielmanistaatgoogle Python green!\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/144603554",
    "html_url": "https://github.com/grpc/grpc/pull/3548#issuecomment-144603554",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/3548",
    "id": 144603554,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDYwMzU1NA==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-01T02:58:06Z",
    "updated_at": "2015-10-01T02:58:06Z",
    "author_association": "MEMBER",
    "body": "Yippee!\n"
  }
]
