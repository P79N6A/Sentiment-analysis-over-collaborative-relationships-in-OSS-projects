[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/182524347",
    "html_url": "https://github.com/grpc/grpc/issues/5174#issuecomment-182524347",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5174",
    "id": 182524347,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MjUyNDM0Nw==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-10T18:43:27Z",
    "updated_at": "2016-02-10T18:43:27Z",
    "author_association": "MEMBER",
    "body": "I am having trouble reproducing this. Can you provide a simple message that causes this error, and the binary encoding of that message?\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/183085920",
    "html_url": "https://github.com/grpc/grpc/issues/5174#issuecomment-183085920",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5174",
    "id": 183085920,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MzA4NTkyMA==",
    "user": {
      "login": "jhspaybar",
      "id": 1356513,
      "node_id": "MDQ6VXNlcjEzNTY1MTM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1356513?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jhspaybar",
      "html_url": "https://github.com/jhspaybar",
      "followers_url": "https://api.github.com/users/jhspaybar/followers",
      "following_url": "https://api.github.com/users/jhspaybar/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhspaybar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jhspaybar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhspaybar/subscriptions",
      "organizations_url": "https://api.github.com/users/jhspaybar/orgs",
      "repos_url": "https://api.github.com/users/jhspaybar/repos",
      "events_url": "https://api.github.com/users/jhspaybar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jhspaybar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-11T22:31:02Z",
    "updated_at": "2016-02-11T22:55:14Z",
    "author_association": "NONE",
    "body": "Sure, I have something minimally reproducible:\n\n```\nservice APIMetadataService {\n    rpc GetVideoMetadata(MetadataRequest) returns (VideoMetadata) {}\n}\n\nmessage MetadataRequest {\nstring country = 1;\n    string locale = 2;\n    int32 videoId = 3;\n}\n\nmessage VideoMetadata {\n  repeated int32 actors = 20;\n}\n```\n\nJava implementation below\n\n```\n@Override\npublic void getVideoMetadata(final MetadataRequest request, final StreamObserver<VideoMetadata> responseObserver) {\n  return VideoMetadata.newBuilder().addAllActors(Lists.newArrayList(10)).build();\n}\n```\n\nGolang output logging response is \"Response: actors:10\"\n\nI modified this file to get extra debug info here https://github.com/grpc/grpc/blob/master/src/node/src/client.js#L326 with\n\n```\ntry{                                                                                                                                                          \n  var data = response.read;\n  console.log(\"Parsing data: \", data);\n  deserialized = deserialize(data);\n} catch (e) {\n  console.log(\"Error: \", e);\n   /* Change status to indicate bad server response. This will result\n   * in passing an error to the callback */\n   status = {\n    code: grpc.status.INTERNAL,\n    details: 'Failed to parse server response'\n  };\n}\n```\n\nThe output is \n\n```\nParsing data:  <Buffer a2 01 01 0a>\nError:  [Error: Illegal wire type for field Message.Field .my.namespace.api.VideoMetadata.actors: 2 (0 expected)\n```\n\nFinally, if I change my implementation in to Java to just be `return VideoMetadata.newBuilder().build();`\n\nThe Node output becomes\n\n```\nParsing data:  <Buffer >\nResponse:  { actors: [] }\n```\n\n(I have a console.log of the response in my code)\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/183092736",
    "html_url": "https://github.com/grpc/grpc/issues/5174#issuecomment-183092736",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5174",
    "id": 183092736,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MzA5MjczNg==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-11T22:58:20Z",
    "updated_at": "2016-02-11T22:58:20Z",
    "author_association": "MEMBER",
    "body": "It looks like your generated Java code has `[packed=true]` set on the `actors` field. If I modify the proto you provided with that option, the Node code serializes that proto to the same buffer and deserializes it correctly.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/183093099",
    "html_url": "https://github.com/grpc/grpc/issues/5174#issuecomment-183093099",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5174",
    "id": 183093099,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MzA5MzA5OQ==",
    "user": {
      "login": "jhspaybar",
      "id": 1356513,
      "node_id": "MDQ6VXNlcjEzNTY1MTM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1356513?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jhspaybar",
      "html_url": "https://github.com/jhspaybar",
      "followers_url": "https://api.github.com/users/jhspaybar/followers",
      "following_url": "https://api.github.com/users/jhspaybar/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhspaybar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jhspaybar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhspaybar/subscriptions",
      "organizations_url": "https://api.github.com/users/jhspaybar/orgs",
      "repos_url": "https://api.github.com/users/jhspaybar/repos",
      "events_url": "https://api.github.com/users/jhspaybar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jhspaybar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-11T23:00:00Z",
    "updated_at": "2016-02-11T23:00:00Z",
    "author_association": "NONE",
    "body": "Hmm, interesting.  So it seems like Go and Java are assuming packed=true, but that NodeJS isn't?  I'm using syntax=3 at the top of my file, maybe node doesn't understand this in it's parser or something?  I thought packed was default.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/183095141",
    "html_url": "https://github.com/grpc/grpc/issues/5174#issuecomment-183095141",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5174",
    "id": 183095141,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MzA5NTE0MQ==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-11T23:08:51Z",
    "updated_at": "2016-02-11T23:08:51Z",
    "author_association": "MEMBER",
    "body": "The Node library uses Protobuf.js internally for protobufs, and it does understand `syntax = \"proto3\";`. The proto3 Language Guide specifically says\n\n> For historical reasons, `repeated` fields of scalar numeric types aren't encoded as efficiently as they could be. New code should use the special option `[packed=true]` to get a more efficient encoding.\n\nIf the Go and Java protobuf runtimes are packing repeated fields by default, that is a bug on their end.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/183095342",
    "html_url": "https://github.com/grpc/grpc/issues/5174#issuecomment-183095342",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5174",
    "id": 183095342,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MzA5NTM0Mg==",
    "user": {
      "login": "jhspaybar",
      "id": 1356513,
      "node_id": "MDQ6VXNlcjEzNTY1MTM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1356513?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jhspaybar",
      "html_url": "https://github.com/jhspaybar",
      "followers_url": "https://api.github.com/users/jhspaybar/followers",
      "following_url": "https://api.github.com/users/jhspaybar/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhspaybar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jhspaybar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhspaybar/subscriptions",
      "organizations_url": "https://api.github.com/users/jhspaybar/orgs",
      "repos_url": "https://api.github.com/users/jhspaybar/repos",
      "events_url": "https://api.github.com/users/jhspaybar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jhspaybar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-11T23:09:50Z",
    "updated_at": "2016-02-11T23:09:50Z",
    "author_association": "NONE",
    "body": "Thanks for the help!  I just went with reporting the bug to the side that was different, but I suppose now that you've shown me that, I should go report the bugs over there and reference this :)  Feel free to close, and thanks for your help!\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/183098734",
    "html_url": "https://github.com/grpc/grpc/issues/5174#issuecomment-183098734",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5174",
    "id": 183098734,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MzA5ODczNA==",
    "user": {
      "login": "dsymonds",
      "id": 31506,
      "node_id": "MDQ6VXNlcjMxNTA2",
      "avatar_url": "https://avatars2.githubusercontent.com/u/31506?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsymonds",
      "html_url": "https://github.com/dsymonds",
      "followers_url": "https://api.github.com/users/dsymonds/followers",
      "following_url": "https://api.github.com/users/dsymonds/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsymonds/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsymonds/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsymonds/subscriptions",
      "organizations_url": "https://api.github.com/users/dsymonds/orgs",
      "repos_url": "https://api.github.com/users/dsymonds/repos",
      "events_url": "https://api.github.com/users/dsymonds/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsymonds/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-11T23:24:01Z",
    "updated_at": "2016-02-11T23:24:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "It doesn't really matter what the encoders are doing. The NodeJS proto parser is at fault. Compliant proto parsers are required to cope with both non-packed and packed repeated fields.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/183099769",
    "html_url": "https://github.com/grpc/grpc/issues/5174#issuecomment-183099769",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5174",
    "id": 183099769,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MzA5OTc2OQ==",
    "user": {
      "login": "dsymonds",
      "id": 31506,
      "node_id": "MDQ6VXNlcjMxNTA2",
      "avatar_url": "https://avatars2.githubusercontent.com/u/31506?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsymonds",
      "html_url": "https://github.com/dsymonds",
      "followers_url": "https://api.github.com/users/dsymonds/followers",
      "following_url": "https://api.github.com/users/dsymonds/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsymonds/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsymonds/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsymonds/subscriptions",
      "organizations_url": "https://api.github.com/users/dsymonds/orgs",
      "repos_url": "https://api.github.com/users/dsymonds/repos",
      "events_url": "https://api.github.com/users/dsymonds/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsymonds/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-11T23:25:38Z",
    "updated_at": "2016-02-11T23:25:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "More pertinent is this comment in `descriptor.proto`:\n\n```\n  // The packed option can be enabled for repeated primitive fields to enable\n  // a more efficient representation on the wire. Rather than repeatedly\n  // writing the tag and type for each element, the entire array is encoded as\n  // a single length-delimited blob. In proto3, only explicit setting it to\n  // false will avoid using packed encoding.\n  optional bool packed = 2;\n```\n\nSo proto3 encoders are _meant_ to default to packed=true.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/183101225",
    "html_url": "https://github.com/grpc/grpc/issues/5174#issuecomment-183101225",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5174",
    "id": 183101225,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MzEwMTIyNQ==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-11T23:27:36Z",
    "updated_at": "2016-02-11T23:27:36Z",
    "author_association": "MEMBER",
    "body": "There's some inconsistency with the documentation here. The quote I mentioned above explicitly says that packed=true is _not_ the default in proto3.\n\nPacked repeated fields are encoded with a different wire type than non-packed repeated fields, and I can't find anything in the documentation that indicates that parsers should accept fields with known id numbers and incorrect wire types.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/183104812",
    "html_url": "https://github.com/grpc/grpc/issues/5174#issuecomment-183104812",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5174",
    "id": 183104812,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MzEwNDgxMg==",
    "user": {
      "login": "dsymonds",
      "id": 31506,
      "node_id": "MDQ6VXNlcjMxNTA2",
      "avatar_url": "https://avatars2.githubusercontent.com/u/31506?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsymonds",
      "html_url": "https://github.com/dsymonds",
      "followers_url": "https://api.github.com/users/dsymonds/followers",
      "following_url": "https://api.github.com/users/dsymonds/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsymonds/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsymonds/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsymonds/subscriptions",
      "organizations_url": "https://api.github.com/users/dsymonds/orgs",
      "repos_url": "https://api.github.com/users/dsymonds/repos",
      "events_url": "https://api.github.com/users/dsymonds/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsymonds/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-11T23:33:33Z",
    "updated_at": "2016-02-11T23:33:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "That document that you referenced needs fixing, probably just removing that sentence. I'll see if I can chase that up.\n\nIt looks like the public docs don't mention it, but it is definitely an expectation that parsers cope with differing wire types for specifically this case (packed vs. non-packed). That's been the case since late 2009.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/183105881",
    "html_url": "https://github.com/grpc/grpc/issues/5174#issuecomment-183105881",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5174",
    "id": 183105881,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MzEwNTg4MQ==",
    "user": {
      "login": "jhspaybar",
      "id": 1356513,
      "node_id": "MDQ6VXNlcjEzNTY1MTM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1356513?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jhspaybar",
      "html_url": "https://github.com/jhspaybar",
      "followers_url": "https://api.github.com/users/jhspaybar/followers",
      "following_url": "https://api.github.com/users/jhspaybar/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhspaybar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jhspaybar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhspaybar/subscriptions",
      "organizations_url": "https://api.github.com/users/jhspaybar/orgs",
      "repos_url": "https://api.github.com/users/jhspaybar/repos",
      "events_url": "https://api.github.com/users/jhspaybar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jhspaybar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-11T23:34:37Z",
    "updated_at": "2016-02-11T23:34:37Z",
    "author_association": "NONE",
    "body": "If that is the case, should this actually be pushed further upstream to Protobuf.js then?\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/183109654",
    "html_url": "https://github.com/grpc/grpc/issues/5174#issuecomment-183109654",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5174",
    "id": 183109654,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MzEwOTY1NA==",
    "user": {
      "login": "dsymonds",
      "id": 31506,
      "node_id": "MDQ6VXNlcjMxNTA2",
      "avatar_url": "https://avatars2.githubusercontent.com/u/31506?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsymonds",
      "html_url": "https://github.com/dsymonds",
      "followers_url": "https://api.github.com/users/dsymonds/followers",
      "following_url": "https://api.github.com/users/dsymonds/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsymonds/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsymonds/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsymonds/subscriptions",
      "organizations_url": "https://api.github.com/users/dsymonds/orgs",
      "repos_url": "https://api.github.com/users/dsymonds/repos",
      "events_url": "https://api.github.com/users/dsymonds/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsymonds/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-11T23:40:58Z",
    "updated_at": "2016-02-11T23:40:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've got a couple of changes pending to update the docs to match what I'm saying.\n\nIf it's Protobuf.js that is doing the parsing, it's the one that needs fixing.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/222268148",
    "html_url": "https://github.com/grpc/grpc/issues/5174#issuecomment-222268148",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5174",
    "id": 222268148,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjI2ODE0OA==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-27T22:36:54Z",
    "updated_at": "2016-05-27T22:36:54Z",
    "author_association": "MEMBER",
    "body": "gRPC now supports code statically generated by `protoc`, which uses the google-protobuf library instead of Protobuf.js for runtime proto handling. If you use that option, it should not have this problem.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/238793348",
    "html_url": "https://github.com/grpc/grpc/issues/5174#issuecomment-238793348",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5174",
    "id": 238793348,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzODc5MzM0OA==",
    "user": {
      "login": "LiberiFatali",
      "id": 2776098,
      "node_id": "MDQ6VXNlcjI3NzYwOTg=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2776098?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LiberiFatali",
      "html_url": "https://github.com/LiberiFatali",
      "followers_url": "https://api.github.com/users/LiberiFatali/followers",
      "following_url": "https://api.github.com/users/LiberiFatali/following{/other_user}",
      "gists_url": "https://api.github.com/users/LiberiFatali/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LiberiFatali/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LiberiFatali/subscriptions",
      "organizations_url": "https://api.github.com/users/LiberiFatali/orgs",
      "repos_url": "https://api.github.com/users/LiberiFatali/repos",
      "events_url": "https://api.github.com/users/LiberiFatali/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LiberiFatali/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-10T07:58:38Z",
    "updated_at": "2016-08-10T07:58:38Z",
    "author_association": "NONE",
    "body": "I also encounter this error with `repeated float`, I solve it by adding `[packed=true]` to the `.proto` file.\n"
  }
]
