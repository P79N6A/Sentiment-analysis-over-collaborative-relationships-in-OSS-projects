[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/190847038",
    "html_url": "https://github.com/grpc/grpc/pull/5493#issuecomment-190847038",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5493",
    "id": 190847038,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MDg0NzAzOA==",
    "user": {
      "login": "sreecha",
      "id": 2754995,
      "node_id": "MDQ6VXNlcjI3NTQ5OTU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2754995?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sreecha",
      "html_url": "https://github.com/sreecha",
      "followers_url": "https://api.github.com/users/sreecha/followers",
      "following_url": "https://api.github.com/users/sreecha/following{/other_user}",
      "gists_url": "https://api.github.com/users/sreecha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sreecha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sreecha/subscriptions",
      "organizations_url": "https://api.github.com/users/sreecha/orgs",
      "repos_url": "https://api.github.com/users/sreecha/repos",
      "events_url": "https://api.github.com/users/sreecha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sreecha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-01T18:41:57Z",
    "updated_at": "2016-03-01T18:41:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "All the relevant tests passed. \n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/190859410",
    "html_url": "https://github.com/grpc/grpc/pull/5493#issuecomment-190859410",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5493",
    "id": 190859410,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MDg1OTQxMA==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-01T19:17:25Z",
    "updated_at": "2016-03-01T19:17:25Z",
    "author_association": "MEMBER",
    "body": "Wait, what signal is this test giving us now? Isn't expect_le essentially a\ntautology? Maybe this test needs to be rewritten to better express its\nintention?\n\nOn Tue, Mar 1, 2016, 10:43 AM Yang Gao notifications@github.com wrote:\n\n> Merged #5493 https://github.com/grpc/grpc/pull/5493.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/grpc/grpc/pull/5493#event-573476533.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/190867558",
    "html_url": "https://github.com/grpc/grpc/pull/5493#issuecomment-190867558",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5493",
    "id": 190867558,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MDg2NzU1OA==",
    "user": {
      "login": "sreecha",
      "id": 2754995,
      "node_id": "MDQ6VXNlcjI3NTQ5OTU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2754995?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sreecha",
      "html_url": "https://github.com/sreecha",
      "followers_url": "https://api.github.com/users/sreecha/followers",
      "following_url": "https://api.github.com/users/sreecha/following{/other_user}",
      "gists_url": "https://api.github.com/users/sreecha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sreecha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sreecha/subscriptions",
      "organizations_url": "https://api.github.com/users/sreecha/orgs",
      "repos_url": "https://api.github.com/users/sreecha/repos",
      "events_url": "https://api.github.com/users/sreecha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sreecha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-01T19:37:34Z",
    "updated_at": "2016-03-01T19:37:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "That is true! :) - With this PR, I guess this is looking even more redundant (previously, there were not many `EXPECT_LE` checks)..\n\nI guess the only value is in CANCEL_BEFORE_PROCESSING case where we do `EXPECT_EQ` \nFWIW, The test does check all the other conditions of interest (like      `EXPECT_EQ(grpc::StatusCode::CANCELLED, s.error_code()` and `EXPECT_TRUE(context->IsCancelled())` in `test_service_impl.cc` etc..); \n\nI will rewrite the test to clean up these redundant checks..\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/190880580",
    "html_url": "https://github.com/grpc/grpc/pull/5493#issuecomment-190880580",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5493",
    "id": 190880580,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MDg4MDU4MA==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-01T20:06:08Z",
    "updated_at": "2016-03-01T20:06:08Z",
    "author_association": "MEMBER",
    "body": "I'm not suggesting rewriting the code to eliminate redundant checks. I'm\nsuggesting rewriting the code to actually capture the intent of what was\nthere before. What was the actual intent of the test? And can we figure out\nhow to actually make code that represents that intention?\n\nOn Tue, Mar 1, 2016, 11:37 AM Sree Kuchibhotla notifications@github.com\nwrote:\n\n> That is true! :) - With this PR, I guess this is looking even more\n> redundant (previously, there were not many EXPECT_LE checks)..\n> \n> I guess the only value is in CANCEL_BEFORE_PROCESSING case where we do\n> EXPECT_EQ\n> FWIW, The test does check all the other conditions of interest (like EXPECT_EQ(grpc::StatusCode::CANCELLED,\n> s.error_code() and EXPECT_TRUE(context->IsCancelled()) in\n> test_service_impl.cc etc..);\n> \n> I will rewrite the test to clean up these redundant checks..\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/grpc/grpc/pull/5493#issuecomment-190867558.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/190890945",
    "html_url": "https://github.com/grpc/grpc/pull/5493#issuecomment-190890945",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5493",
    "id": 190890945,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MDg5MDk0NQ==",
    "user": {
      "login": "sreecha",
      "id": 2754995,
      "node_id": "MDQ6VXNlcjI3NTQ5OTU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2754995?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sreecha",
      "html_url": "https://github.com/sreecha",
      "followers_url": "https://api.github.com/users/sreecha/followers",
      "following_url": "https://api.github.com/users/sreecha/following{/other_user}",
      "gists_url": "https://api.github.com/users/sreecha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sreecha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sreecha/subscriptions",
      "organizations_url": "https://api.github.com/users/sreecha/orgs",
      "repos_url": "https://api.github.com/users/sreecha/repos",
      "events_url": "https://api.github.com/users/sreecha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sreecha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-01T20:38:47Z",
    "updated_at": "2016-03-01T20:38:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "Understood. \n\nThe actual intent of those test cases (in those cases where we had EXPECT_LE checks) was to somehow verify that the RPC was successfully cancelled in parallel while the request was being processed by the server (or client).\n\nOther than verifying that the RPC does in fact get cancelled at the end (and also manually verifying - across several repeated test runs - that the client/server are processing a random number of messages between [0 to num_of_intended_msgs]), I cannot think of any other way to do this :(..\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/190892812",
    "html_url": "https://github.com/grpc/grpc/pull/5493#issuecomment-190892812",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5493",
    "id": 190892812,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MDg5MjgxMg==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-01T20:43:31Z",
    "updated_at": "2016-03-01T20:43:31Z",
    "author_association": "MEMBER",
    "body": "Probably worth filing an issue and thinking about it further down the road.\n\nIt seems like a problem someone will solve in the middle of a deep sleep in\na few weeks time.\n\nOn Tue, Mar 1, 2016 at 12:39 PM Sree Kuchibhotla notifications@github.com\nwrote:\n\n> Understood.\n> \n> The actual intent of those test cases (in those cases where we had\n> EXPECT_LE checks) was to somehow verify that the RPC was successfully\n> cancelled in parallel while the request was being processed by the server\n> (or client).\n> \n> Other than verifying that the RPC does in fact get cancelled at the end\n> (and also manually verifying - across several repeated test runs - that the\n> client/server are processing a random number of messages between [0 to\n> num_of_intended_msgs]), I cannot think of any other way to do this :(..\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/grpc/grpc/pull/5493#issuecomment-190890945.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/190955588",
    "html_url": "https://github.com/grpc/grpc/pull/5493#issuecomment-190955588",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/5493",
    "id": 190955588,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MDk1NTU4OA==",
    "user": {
      "login": "sreecha",
      "id": 2754995,
      "node_id": "MDQ6VXNlcjI3NTQ5OTU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2754995?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sreecha",
      "html_url": "https://github.com/sreecha",
      "followers_url": "https://api.github.com/users/sreecha/followers",
      "following_url": "https://api.github.com/users/sreecha/following{/other_user}",
      "gists_url": "https://api.github.com/users/sreecha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sreecha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sreecha/subscriptions",
      "organizations_url": "https://api.github.com/users/sreecha/orgs",
      "repos_url": "https://api.github.com/users/sreecha/repos",
      "events_url": "https://api.github.com/users/sreecha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sreecha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-01T23:11:22Z",
    "updated_at": "2016-03-01T23:11:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah. Created: https://github.com/grpc/grpc/issues/5520\n"
  }
]
