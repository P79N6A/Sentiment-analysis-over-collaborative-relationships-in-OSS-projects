[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/274670588",
    "html_url": "https://github.com/grpc/grpc/issues/9439#issuecomment-274670588",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9439",
    "id": 274670588,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDY3MDU4OA==",
    "user": {
      "login": "sulliwane",
      "id": 1733686,
      "node_id": "MDQ6VXNlcjE3MzM2ODY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1733686?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sulliwane",
      "html_url": "https://github.com/sulliwane",
      "followers_url": "https://api.github.com/users/sulliwane/followers",
      "following_url": "https://api.github.com/users/sulliwane/following{/other_user}",
      "gists_url": "https://api.github.com/users/sulliwane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sulliwane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sulliwane/subscriptions",
      "organizations_url": "https://api.github.com/users/sulliwane/orgs",
      "repos_url": "https://api.github.com/users/sulliwane/repos",
      "events_url": "https://api.github.com/users/sulliwane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sulliwane/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-24T01:11:10Z",
    "updated_at": "2017-01-24T02:05:03Z",
    "author_association": "NONE",
    "body": "And here is the auto-generated python code:\r\n```python\r\n_descriptor.FieldDescriptor(\r\n      name='names', full_name='PeopleRequest.names', index=0,\r\n      number=1, type=9, cpp_type=9, label=3,\r\n      has_default_value=False, default_value=[],\r\n      message_type=None, enum_type=None, containing_type=None,\r\n      is_extension=False, extension_scope=None,\r\n      options=None),\r\n_descriptor.FieldDescriptor(\r\n      name='ages', full_name='PeopleRequest.ages', index=1,\r\n      number=2, type=5, cpp_type=1, label=3,\r\n      has_default_value=False, default_value=[],\r\n      message_type=None, enum_type=None, containing_type=None,\r\n      is_extension=False, extension_scope=None,\r\n      options=None),\r\n```\r\n\r\n@nathanielmanistaatgoogle -> when using my Node/JS client, connecting to the same server, everything is fine with the ```repeated int32``` field. So this confirm the error is local to my python client, and is thrown **when calling the method** (and not when building the protobuf people_request object)."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/274886788",
    "html_url": "https://github.com/grpc/grpc/issues/9439#issuecomment-274886788",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9439",
    "id": 274886788,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDg4Njc4OA==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-24T18:09:50Z",
    "updated_at": "2017-01-24T18:09:50Z",
    "author_association": "MEMBER",
    "body": "I don't think that `print(people_request) // Ok, no error when building the people_request object` is sufficient to demonstrate that your `people_request` message is legitimately constructed. You write that \"the error is [...] not when building the protobuf `people_request` object\", but for performance reasons Python Protocol Buffers don't do any validation on construction, only when they are serialized. Try something like\r\n```python\r\ntry:\r\n  serialized_people_request = grpc.PeopleRequest.SerializeToString(people_request)\r\nexcept Exception as e:\r\n  print(e)\r\nelse:\r\n  print('Serialized to binary of type {} and length {}'.format(type(serialized_people_request), len(serialized_people_request)))\r\n```\r\n? I suspect that the issue you're having is more on the Protocol Buffers side of the situation than the gRPC side."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/274988800",
    "html_url": "https://github.com/grpc/grpc/issues/9439#issuecomment-274988800",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9439",
    "id": 274988800,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDk4ODgwMA==",
    "user": {
      "login": "sulliwane",
      "id": 1733686,
      "node_id": "MDQ6VXNlcjE3MzM2ODY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1733686?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sulliwane",
      "html_url": "https://github.com/sulliwane",
      "followers_url": "https://api.github.com/users/sulliwane/followers",
      "following_url": "https://api.github.com/users/sulliwane/following{/other_user}",
      "gists_url": "https://api.github.com/users/sulliwane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sulliwane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sulliwane/subscriptions",
      "organizations_url": "https://api.github.com/users/sulliwane/orgs",
      "repos_url": "https://api.github.com/users/sulliwane/repos",
      "events_url": "https://api.github.com/users/sulliwane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sulliwane/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-25T01:00:24Z",
    "updated_at": "2017-01-25T01:00:24Z",
    "author_association": "NONE",
    "body": "Ok, I didn't know there was no check when building the object. So indeed my reasoning isn't correct.\r\n\r\nWhen serializing this object:\r\n```python\r\n{ 'names': ['daniel', 'jack'], 'ages': [18, 22] }\r\n```\r\nhere is the console output of your test code:\r\n```bash\r\nSerialized to binary of type <class 'bytes'> and length 20\r\n```\r\nAfter what, the same error is thrown when calling the grpc method:\r\n```bash\r\ngrpc._channel._Rendezvous: <_Rendezvous of RPC that terminated with (StatusCode.INTERNAL, Illegal wire type for field Message.Field grpc.GetPeoples.ages: 2 (0 expected))>\r\n```\r\n\r\nShould I post this issue on the protocol buffers github's page?\r\n\r\nMany thanks for your help! "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/274996362",
    "html_url": "https://github.com/grpc/grpc/issues/9439#issuecomment-274996362",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9439",
    "id": 274996362,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDk5NjM2Mg==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-25T01:48:06Z",
    "updated_at": "2017-01-25T01:48:06Z",
    "author_association": "MEMBER",
    "body": "I'd like to see more of your code. Where is(are) the `Service` portion(s) of your `.proto` file? How are you constructing your `stub`?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/275028964",
    "html_url": "https://github.com/grpc/grpc/issues/9439#issuecomment-275028964",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9439",
    "id": 275028964,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTAyODk2NA==",
    "user": {
      "login": "sulliwane",
      "id": 1733686,
      "node_id": "MDQ6VXNlcjE3MzM2ODY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1733686?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sulliwane",
      "html_url": "https://github.com/sulliwane",
      "followers_url": "https://api.github.com/users/sulliwane/followers",
      "following_url": "https://api.github.com/users/sulliwane/following{/other_user}",
      "gists_url": "https://api.github.com/users/sulliwane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sulliwane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sulliwane/subscriptions",
      "organizations_url": "https://api.github.com/users/sulliwane/orgs",
      "repos_url": "https://api.github.com/users/sulliwane/repos",
      "events_url": "https://api.github.com/users/sulliwane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sulliwane/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-25T06:20:42Z",
    "updated_at": "2017-01-25T06:33:13Z",
    "author_association": "NONE",
    "body": "Of course, here is the whole code:\r\n```proto\r\nsyntax = \"proto3\";\r\n\r\npackage grpcClient;\r\n\r\nservice GrpcClient {\r\n  rpc GetPeople(PeopleRequest) returns (PeopleResponse) {}\r\n}\r\nmessage PeopleRequest {\r\n  repeated string names = 1; // ex: ['jack', 'marie']\r\n  repeated int32 ages = 2; // ex: [18, 24]\r\n}\r\nmessage PeopleResponse {\r\n  repeated Person people = 1;\r\n}\r\nmessage Person {\r\n  string name = 1;\r\n  int32 age = 2;\r\n}\r\n```\r\nStub construction:\r\n```python\r\nfrom . import grpcClient_pb2\r\nclass GrpcClient:\r\n    def __init__(self):\r\n        server_url = \"http://my_url:5001\"\r\n        secure_channel = make_secure_channel(server_url)\r\n        self.__stub = grpcClient_pb2.GrpcClientStub(secure_channel)\r\n\r\n    def get_people(self, **kwargs):\r\n        people_request = grpcClient_pb2.PeopleRequest(**kwargs)\r\n        # your test example\r\n        try:\r\n            serialized_people_request = grpcClient_pb2.PeopleRequest.SerializeToString(people_request)\r\n        except Exception as e:\r\n            print(e)\r\n        else:\r\n            print('Serialized to binary of type {} and length {}'.format(type(serialized_people_request), len(serialized_people_request)))\r\n        return self.__stub.GetPeople(people_request) # this throw an error\r\n```\r\nThe main logic:\r\n```python\r\ngrpcClient = GrpcClient()\r\ngrpcClient.get_people({ 'names': ['daniel', 'jack'] }) # this is OK\r\ngrpcClient.get_people({ 'names': ['daniel', 'jack'], 'ages': [18, 22] }) # this throws\r\n```\r\nI use **Python 3.6** and my pip packages versions are:\r\n```\r\ngrpcio            1.0.4      \r\ngrpcio-tools      1.0.4\r\npip               9.0.1\r\nprotobuf          3.1.0.post1\r\n```\r\nI generate the ```grpcClient_pb2.py``` and the ```grpcClient_pb2_grpc.py``` using this command:\r\n```\r\npython -m grpc.tools.protoc -I./ --python_out=./ --grpc_python_out=./ ./grpcClient.proto\r\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/275181239",
    "html_url": "https://github.com/grpc/grpc/issues/9439#issuecomment-275181239",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9439",
    "id": 275181239,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTE4MTIzOQ==",
    "user": {
      "login": "kpayson64",
      "id": 18316330,
      "node_id": "MDQ6VXNlcjE4MzE2MzMw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18316330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kpayson64",
      "html_url": "https://github.com/kpayson64",
      "followers_url": "https://api.github.com/users/kpayson64/followers",
      "following_url": "https://api.github.com/users/kpayson64/following{/other_user}",
      "gists_url": "https://api.github.com/users/kpayson64/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kpayson64/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kpayson64/subscriptions",
      "organizations_url": "https://api.github.com/users/kpayson64/orgs",
      "repos_url": "https://api.github.com/users/kpayson64/repos",
      "events_url": "https://api.github.com/users/kpayson64/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kpayson64/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-25T17:52:23Z",
    "updated_at": "2017-01-25T17:52:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't believe protobuf supports direct assignment of repeated fields in the constructor.\r\nSee https://developers.google.com/protocol-buffers/docs/reference/python-generated#repeated-fields ."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/275847329",
    "html_url": "https://github.com/grpc/grpc/issues/9439#issuecomment-275847329",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9439",
    "id": 275847329,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTg0NzMyOQ==",
    "user": {
      "login": "sulliwane",
      "id": 1733686,
      "node_id": "MDQ6VXNlcjE3MzM2ODY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1733686?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sulliwane",
      "html_url": "https://github.com/sulliwane",
      "followers_url": "https://api.github.com/users/sulliwane/followers",
      "following_url": "https://api.github.com/users/sulliwane/following{/other_user}",
      "gists_url": "https://api.github.com/users/sulliwane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sulliwane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sulliwane/subscriptions",
      "organizations_url": "https://api.github.com/users/sulliwane/orgs",
      "repos_url": "https://api.github.com/users/sulliwane/repos",
      "events_url": "https://api.github.com/users/sulliwane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sulliwane/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-28T13:09:35Z",
    "updated_at": "2017-01-28T13:09:35Z",
    "author_association": "NONE",
    "body": "@kpayson64 appending to the list instead of assigning throws the same error:\r\n```python\r\nfrom . import grpcClient_pb2\r\n\r\ndef run():\r\n    server_url = \"http://my_url:50051\"\r\n    secure_channel = make_secure_channel(server_url)\r\n    stub = grpcClient_pb2.GrpcClientStub(secure_channel)\r\n    people_request = grpcClient_pb2.PeopleRequest()\r\n    people_request.ranks.append(1)  # appending here as demonstrated in the guide https://developers.google.com/protocol-buffers/docs/reference/python-generated#repeated-fields\r\n    people_response = grpcClient_pb2.GetPeople(people_request) #  throws grpc._channel._Rendezvous: <_Rendezvous of RPC that terminated with (StatusCode.INTERNAL, Illegal wire type for field Message.Field .grpcClient_pb2.PeopleRequest.ranks: 2 (0 expected))>\r\n\r\nif __name__ == '__main__':\r\n    run()\r\n```\r\n\r\n@nathanielmanistaatgoogle Out of the two .py generated (**grpcClient_pb2** and **grpcClient_pb2_grpc**), I just use one: **grpcClient_pb2** to generate the stub, and build the objects. The other file ending with **_grpc** -> **grpcClient_pb2_grpc** seems broken, with many duplicated imports at the beginning of the file:\r\n```python\r\nimport grpc\r\nfrom grpc.framework.common import cardinality\r\nfrom grpc.framework.interfaces.face import utilities as face_utilities\r\n\r\nimport grpcClient_pb2 as grpcClient__pb2\r\nimport grpcClient_pb2 as grpcClient__pb2\r\nimport grpcClient_pb2 as grpcClient__pb2\r\nimport grpcClient_pb2 as grpcClient__pb2\r\nimport grpcClient_pb2 as grpcClient__pb2\r\nimport grpcClient_pb2 as grpcClient__pb2\r\nimport grpcClient_pb2 as grpcClient__pb2\r\nimport grpcClient_pb2 as grpcClient__pb2\r\n```\r\nSo this could be related to the versions I'm using (python 3.6/grpcio  1.0.4/protobuf 3.1.0.post1)...or some mistake when generating the .py files....or I don't know. I will try with python 3.5."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/275848444",
    "html_url": "https://github.com/grpc/grpc/issues/9439#issuecomment-275848444",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9439",
    "id": 275848444,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTg0ODQ0NA==",
    "user": {
      "login": "sulliwane",
      "id": 1733686,
      "node_id": "MDQ6VXNlcjE3MzM2ODY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1733686?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sulliwane",
      "html_url": "https://github.com/sulliwane",
      "followers_url": "https://api.github.com/users/sulliwane/followers",
      "following_url": "https://api.github.com/users/sulliwane/following{/other_user}",
      "gists_url": "https://api.github.com/users/sulliwane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sulliwane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sulliwane/subscriptions",
      "organizations_url": "https://api.github.com/users/sulliwane/orgs",
      "repos_url": "https://api.github.com/users/sulliwane/repos",
      "events_url": "https://api.github.com/users/sulliwane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sulliwane/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-28T13:34:27Z",
    "updated_at": "2017-01-28T13:34:27Z",
    "author_association": "NONE",
    "body": "just resintalled all the packages with python 3.5, same error :-("
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/275896960",
    "html_url": "https://github.com/grpc/grpc/issues/9439#issuecomment-275896960",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9439",
    "id": 275896960,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTg5Njk2MA==",
    "user": {
      "login": "sulliwane",
      "id": 1733686,
      "node_id": "MDQ6VXNlcjE3MzM2ODY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1733686?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sulliwane",
      "html_url": "https://github.com/sulliwane",
      "followers_url": "https://api.github.com/users/sulliwane/followers",
      "following_url": "https://api.github.com/users/sulliwane/following{/other_user}",
      "gists_url": "https://api.github.com/users/sulliwane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sulliwane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sulliwane/subscriptions",
      "organizations_url": "https://api.github.com/users/sulliwane/orgs",
      "repos_url": "https://api.github.com/users/sulliwane/repos",
      "events_url": "https://api.github.com/users/sulliwane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sulliwane/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-29T06:30:33Z",
    "updated_at": "2017-01-29T06:32:15Z",
    "author_association": "NONE",
    "body": "**Short story:** My server was written in node.js, and:\r\n```\r\nrm -rf node_modules\r\nnpm i\r\n```\r\nsolved the problem for me.\r\n\r\n**Long story:** It appears that whatever the server my client was connecting to (I had a local and a remote node.js server running for the test) in both case my client would throw. That's why I looked for an error in the client code, and not on the server side. Moreover, the server never logged anything, only the client throwed the error.\r\n\r\nFinally I reimplemented the server side in python, and surprisingly my client wouldn't throw when connecting to the python server. So I started to suspect my node.js server had a problem, I finally completely reinstalled the **node_modules** of my node.js server, restarted, and indeed the problem disappeared. So I conclude the problem was related to some package in **node_modules**.\r\n"
  }
]
