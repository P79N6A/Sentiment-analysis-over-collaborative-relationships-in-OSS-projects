[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/404349386",
    "html_url": "https://github.com/grpc/grpc/issues/15933#issuecomment-404349386",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15933",
    "id": 404349386,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDM0OTM4Ng==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-12T00:14:42Z",
    "updated_at": "2018-07-12T00:14:42Z",
    "author_association": "MEMBER",
    "body": "@dgquintas This looks like a core issue to me. None of those errors appear to be coming from Node-specific code."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/404349818",
    "html_url": "https://github.com/grpc/grpc/issues/15933#issuecomment-404349818",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15933",
    "id": 404349818,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDM0OTgxOA==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-12T00:17:36Z",
    "updated_at": "2018-07-12T00:17:36Z",
    "author_association": "MEMBER",
    "body": "I should mention that because of some compatibility issues, v1.11 of the Node library used v1.10 of the core. v1.12 of the Node library uses v1.12 of the core."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/404643801",
    "html_url": "https://github.com/grpc/grpc/issues/15933#issuecomment-404643801",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15933",
    "id": 404643801,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDY0MzgwMQ==",
    "user": {
      "login": "dgquintas",
      "id": 120217,
      "node_id": "MDQ6VXNlcjEyMDIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/120217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgquintas",
      "html_url": "https://github.com/dgquintas",
      "followers_url": "https://api.github.com/users/dgquintas/followers",
      "following_url": "https://api.github.com/users/dgquintas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgquintas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgquintas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgquintas/subscriptions",
      "organizations_url": "https://api.github.com/users/dgquintas/orgs",
      "repos_url": "https://api.github.com/users/dgquintas/repos",
      "events_url": "https://api.github.com/users/dgquintas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgquintas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-12T20:41:28Z",
    "updated_at": "2018-07-12T20:41:28Z",
    "author_association": "NONE",
    "body": "@murgatroid99 yes, but could you make sure the node code is correct? For instance, I don't know if closing a channel (`client` in the code, it seems) so close to the creation of a new one is expected to work or there could perhaps be a race condition going on behind the scenes. "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/405699862",
    "html_url": "https://github.com/grpc/grpc/issues/15933#issuecomment-405699862",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15933",
    "id": 405699862,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTY5OTg2Mg==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-17T19:27:57Z",
    "updated_at": "2018-07-17T19:27:57Z",
    "author_association": "MEMBER",
    "body": "In terms of core APIs, that should just be closing one channel and creating a different one, which should be completely independent actions."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/406106169",
    "html_url": "https://github.com/grpc/grpc/issues/15933#issuecomment-406106169",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15933",
    "id": 406106169,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjEwNjE2OQ==",
    "user": {
      "login": "dgquintas",
      "id": 120217,
      "node_id": "MDQ6VXNlcjEyMDIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/120217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgquintas",
      "html_url": "https://github.com/dgquintas",
      "followers_url": "https://api.github.com/users/dgquintas/followers",
      "following_url": "https://api.github.com/users/dgquintas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgquintas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgquintas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgquintas/subscriptions",
      "organizations_url": "https://api.github.com/users/dgquintas/orgs",
      "repos_url": "https://api.github.com/users/dgquintas/repos",
      "events_url": "https://api.github.com/users/dgquintas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgquintas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-18T23:33:44Z",
    "updated_at": "2018-07-18T23:33:44Z",
    "author_association": "NONE",
    "body": "@murgatroid99 @drobertduke could you please retry with https://github.com/grpc/grpc/pull/16054 patched in?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/408230596",
    "html_url": "https://github.com/grpc/grpc/issues/15933#issuecomment-408230596",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15933",
    "id": 408230596,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwODIzMDU5Ng==",
    "user": {
      "login": "josephharrington",
      "id": 1109303,
      "node_id": "MDQ6VXNlcjExMDkzMDM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1109303?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/josephharrington",
      "html_url": "https://github.com/josephharrington",
      "followers_url": "https://api.github.com/users/josephharrington/followers",
      "following_url": "https://api.github.com/users/josephharrington/following{/other_user}",
      "gists_url": "https://api.github.com/users/josephharrington/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/josephharrington/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/josephharrington/subscriptions",
      "organizations_url": "https://api.github.com/users/josephharrington/orgs",
      "repos_url": "https://api.github.com/users/josephharrington/repos",
      "events_url": "https://api.github.com/users/josephharrington/events{/privacy}",
      "received_events_url": "https://api.github.com/users/josephharrington/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-26T20:49:33Z",
    "updated_at": "2018-07-26T21:20:53Z",
    "author_association": "NONE",
    "body": "@drobertduke and I looked at #16054 and it looks like that does not fix the issue. We dug in a bit more on our end and have some more details and a more accurate repro case.\r\n\r\nWe've found that the \"Failed to create subchannel\" error occurs when:\r\n1. We have two clients instantiated for the same server (to support client rotation as mentioned above), and\r\n2. we have configured the clients to use the `round_robin` load balancer policy.\r\n\r\n[Here is a modified code sample](https://gist.github.com/josephharrington/43761ffa3089ab9bd2dbcb09022ac4b3) that reproduces the issue a bit more obviously. (It is based on the Node example code from the grpc repo so should be easier for anyone to verify.)\r\n\r\nRunning that modified client code, we see errors using the node module grpc@1.12.1, but no errors in grpc@1.11.3:\r\n```bash\r\n$ cd grpc/examples/node/dynamic_codegen\r\n$ node greeter_server.js &  # make sure server is running locally\r\n$ npm install grpc@1.11.3 && node greeter_client.js\r\n.........Rotated client. numResponses/numRequests: 9/9\r\n..........Rotated client. numResponses/numRequests: 19/19\r\n..........Rotated client. numResponses/numRequests: 29/29\r\n..........Rotated client. numResponses/numRequests: 39/39\r\n..........Rotated client. numResponses/numRequests: 49/49\r\n..........Rotated client. numResponses/numRequests: 59/59\r\n\r\n$ npm install grpc@1.12.1 && node greeter_client.js\r\n.........Rotated client. numResponses/numRequests: 9/9\r\n.........Rotated client. numResponses/numRequests: 18/19\r\n.........Rotated client. numResponses/numRequests: 27/29\r\nError: 2 UNKNOWN: Failed to create subchannel\r\n.........Rotated client. numResponses/numRequests: 37/39\r\nError: 2 UNKNOWN: Failed to create subchannel\r\n.........Rotated client. numResponses/numRequests: 47/49\r\nError: 2 UNKNOWN: Failed to create subchannel\r\n.........Rotated client. numResponses/numRequests: 57/59\r\n```\r\n\r\nWe noticed that the \"Failed to create subchannel\" errors go away when we stop specifying the option `{'grpc.lb_policy_name': 'round_robin'}`. Also, when activating grpc trace logging we see the following errors which also hint toward `round_robin`:\r\n```\r\nE0726 12:33:07.257925000 140735753761664 completion_queue.cc:634]      Operation failed: tag=0x1023119a0, error=\r\n{\"created\":\"@1532633587.257871000\",\"description\":\"Failed to create subchannel\",\"file\":\"../deps/grpc/src/core/ext/filters/client_channel/client_channel.cc\",\"file_line\":2613,\r\n\"referenced_errors\":[{\"created\":\"@1532633587.257828000\",\"description\":\"Pick Cancelled\",\"file\":\"../deps/grpc/src/core/ext/filters/client_channel/lb_policy/round_robin/round_robin.cc\",\"file_line\":292,\r\n\"referenced_errors\":[{\"created\":\"@1532633587.257824000\",\"description\":\"Channel Destroyed\",\"file\":\"../deps/grpc/src/core/lib/surface/channel.cc\",\"file_line\":421}]}]}\r\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/408246469",
    "html_url": "https://github.com/grpc/grpc/issues/15933#issuecomment-408246469",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15933",
    "id": 408246469,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwODI0NjQ2OQ==",
    "user": {
      "login": "dgquintas",
      "id": 120217,
      "node_id": "MDQ6VXNlcjEyMDIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/120217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgquintas",
      "html_url": "https://github.com/dgquintas",
      "followers_url": "https://api.github.com/users/dgquintas/followers",
      "following_url": "https://api.github.com/users/dgquintas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgquintas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgquintas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgquintas/subscriptions",
      "organizations_url": "https://api.github.com/users/dgquintas/orgs",
      "repos_url": "https://api.github.com/users/dgquintas/repos",
      "events_url": "https://api.github.com/users/dgquintas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgquintas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-26T21:52:14Z",
    "updated_at": "2018-07-26T21:52:14Z",
    "author_association": "NONE",
    "body": "@markdroth , @AspirinSJL any ideas? I ask because the issue seems to have been introduced between core's version 1.10 (node 1.11 == core 1.10, but node 1.12 == core 1.12, see [this comment](https://github.com/grpc/grpc/issues/15933#issuecomment-404349818)) and 1.12. That is, things worked up until April (1.10.1 was cut March 28th), then something was introduced up to May 4th (1.12 cut), time during which I was away. Do you recall any significant changes in that timespan that may explain this behavior? "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/408251425",
    "html_url": "https://github.com/grpc/grpc/issues/15933#issuecomment-408251425",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15933",
    "id": 408251425,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwODI1MTQyNQ==",
    "user": {
      "login": "dgquintas",
      "id": 120217,
      "node_id": "MDQ6VXNlcjEyMDIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/120217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgquintas",
      "html_url": "https://github.com/dgquintas",
      "followers_url": "https://api.github.com/users/dgquintas/followers",
      "following_url": "https://api.github.com/users/dgquintas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgquintas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgquintas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgquintas/subscriptions",
      "organizations_url": "https://api.github.com/users/dgquintas/orgs",
      "repos_url": "https://api.github.com/users/dgquintas/repos",
      "events_url": "https://api.github.com/users/dgquintas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgquintas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-26T22:13:41Z",
    "updated_at": "2018-07-26T22:13:41Z",
    "author_association": "NONE",
    "body": "@josephharrington thanks for the details. Were you using round robin in your original report? It doesn't look like it from looking at the code. But you did say that using localhost didn't surface the issue. In summary, we have (round robin + localhost) => issue. And (pick first + non-localhost dns name) => issue, correct?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/408255547",
    "html_url": "https://github.com/grpc/grpc/issues/15933#issuecomment-408255547",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15933",
    "id": 408255547,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwODI1NTU0Nw==",
    "user": {
      "login": "dgquintas",
      "id": 120217,
      "node_id": "MDQ6VXNlcjEyMDIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/120217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgquintas",
      "html_url": "https://github.com/dgquintas",
      "followers_url": "https://api.github.com/users/dgquintas/followers",
      "following_url": "https://api.github.com/users/dgquintas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgquintas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgquintas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgquintas/subscriptions",
      "organizations_url": "https://api.github.com/users/dgquintas/orgs",
      "repos_url": "https://api.github.com/users/dgquintas/repos",
      "events_url": "https://api.github.com/users/dgquintas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgquintas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-26T22:33:02Z",
    "updated_at": "2018-07-26T22:33:02Z",
    "author_association": "NONE",
    "body": "I suggested patching in #16054 because the initial repro seemed to use pick first. That fix was inspired by an equivalent one in round robin (#15947), which given the new repro may actually be relevant. I apologize for providing these suggestions before digging any deeper, but I'd rather do this than stay quiet while I find the time to look more deeply into the issue. Perhaps #15947 will do the trick :)"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/408263845",
    "html_url": "https://github.com/grpc/grpc/issues/15933#issuecomment-408263845",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15933",
    "id": 408263845,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwODI2Mzg0NQ==",
    "user": {
      "login": "AspirinSJL",
      "id": 3314176,
      "node_id": "MDQ6VXNlcjMzMTQxNzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3314176?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AspirinSJL",
      "html_url": "https://github.com/AspirinSJL",
      "followers_url": "https://api.github.com/users/AspirinSJL/followers",
      "following_url": "https://api.github.com/users/AspirinSJL/following{/other_user}",
      "gists_url": "https://api.github.com/users/AspirinSJL/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AspirinSJL/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AspirinSJL/subscriptions",
      "organizations_url": "https://api.github.com/users/AspirinSJL/orgs",
      "repos_url": "https://api.github.com/users/AspirinSJL/repos",
      "events_url": "https://api.github.com/users/AspirinSJL/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AspirinSJL/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-26T23:17:54Z",
    "updated_at": "2018-07-26T23:17:54Z",
    "author_association": "MEMBER",
    "body": "I think we should turn on the [tracers](https://github.com/grpc/grpc/blob/master/doc/environment_variables.md) (round_robin, connectivity_state) to see what's going on. \r\n\r\nFrom the error message, I see the pick fails because the channel is being destroyed. If the example is sync, I don't know why there will be a pending pick when the channel is being destroyed. \r\n\r\nAnyway, I think we can have more clue with tracers on."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/408264943",
    "html_url": "https://github.com/grpc/grpc/issues/15933#issuecomment-408264943",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15933",
    "id": 408264943,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwODI2NDk0Mw==",
    "user": {
      "login": "dgquintas",
      "id": 120217,
      "node_id": "MDQ6VXNlcjEyMDIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/120217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgquintas",
      "html_url": "https://github.com/dgquintas",
      "followers_url": "https://api.github.com/users/dgquintas/followers",
      "following_url": "https://api.github.com/users/dgquintas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgquintas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgquintas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgquintas/subscriptions",
      "organizations_url": "https://api.github.com/users/dgquintas/orgs",
      "repos_url": "https://api.github.com/users/dgquintas/repos",
      "events_url": "https://api.github.com/users/dgquintas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgquintas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-26T23:23:46Z",
    "updated_at": "2018-07-26T23:23:46Z",
    "author_association": "NONE",
    "body": "to be clear, here's how one enables the tracers:\r\n```\r\n$ export GRPC_TRACE=round_robin,connectivity_state,pick_first\r\n$ export GRPC_VERBOSITY=debug \r\n$ node ...\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/408268963",
    "html_url": "https://github.com/grpc/grpc/issues/15933#issuecomment-408268963",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15933",
    "id": 408268963,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwODI2ODk2Mw==",
    "user": {
      "login": "josephharrington",
      "id": 1109303,
      "node_id": "MDQ6VXNlcjExMDkzMDM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1109303?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/josephharrington",
      "html_url": "https://github.com/josephharrington",
      "followers_url": "https://api.github.com/users/josephharrington/followers",
      "following_url": "https://api.github.com/users/josephharrington/following{/other_user}",
      "gists_url": "https://api.github.com/users/josephharrington/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/josephharrington/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/josephharrington/subscriptions",
      "organizations_url": "https://api.github.com/users/josephharrington/orgs",
      "repos_url": "https://api.github.com/users/josephharrington/repos",
      "events_url": "https://api.github.com/users/josephharrington/events{/privacy}",
      "received_events_url": "https://api.github.com/users/josephharrington/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-26T23:48:52Z",
    "updated_at": "2018-07-26T23:48:52Z",
    "author_association": "NONE",
    "body": "Added tracer output to my gist: https://gist.github.com/josephharrington/43761ffa3089ab9bd2dbcb09022ac4b3#file-out_client-txt"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/408272604",
    "html_url": "https://github.com/grpc/grpc/issues/15933#issuecomment-408272604",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15933",
    "id": 408272604,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwODI3MjYwNA==",
    "user": {
      "login": "josephharrington",
      "id": 1109303,
      "node_id": "MDQ6VXNlcjExMDkzMDM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1109303?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/josephharrington",
      "html_url": "https://github.com/josephharrington",
      "followers_url": "https://api.github.com/users/josephharrington/followers",
      "following_url": "https://api.github.com/users/josephharrington/following{/other_user}",
      "gists_url": "https://api.github.com/users/josephharrington/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/josephharrington/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/josephharrington/subscriptions",
      "organizations_url": "https://api.github.com/users/josephharrington/orgs",
      "repos_url": "https://api.github.com/users/josephharrington/repos",
      "events_url": "https://api.github.com/users/josephharrington/events{/privacy}",
      "received_events_url": "https://api.github.com/users/josephharrington/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-27T00:11:57Z",
    "updated_at": "2018-07-27T00:11:57Z",
    "author_association": "NONE",
    "body": "Okay! 🎉 So we just tried patching in #15947 and that seems to fix the issue! It's possible the original repro case we had (non-round-robin) was hitting on a different issue, so we'll look into that a bit more to make sure there's nothing worth digging into there. But I believe we can consider the main issue that triggered this in the first place to be fixed. Thanks for your help @dgquintas and everyone!"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/408278183",
    "html_url": "https://github.com/grpc/grpc/issues/15933#issuecomment-408278183",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15933",
    "id": 408278183,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwODI3ODE4Mw==",
    "user": {
      "login": "dgquintas",
      "id": 120217,
      "node_id": "MDQ6VXNlcjEyMDIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/120217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgquintas",
      "html_url": "https://github.com/dgquintas",
      "followers_url": "https://api.github.com/users/dgquintas/followers",
      "following_url": "https://api.github.com/users/dgquintas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgquintas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgquintas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgquintas/subscriptions",
      "organizations_url": "https://api.github.com/users/dgquintas/orgs",
      "repos_url": "https://api.github.com/users/dgquintas/repos",
      "events_url": "https://api.github.com/users/dgquintas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgquintas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-27T00:49:53Z",
    "updated_at": "2018-07-27T00:49:53Z",
    "author_association": "NONE",
    "body": "Awesome, thanks! That fix should be going out with 1.14 very soon. "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/408551456",
    "html_url": "https://github.com/grpc/grpc/issues/15933#issuecomment-408551456",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15933",
    "id": 408551456,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwODU1MTQ1Ng==",
    "user": {
      "login": "drobertduke",
      "id": 905655,
      "node_id": "MDQ6VXNlcjkwNTY1NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/905655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/drobertduke",
      "html_url": "https://github.com/drobertduke",
      "followers_url": "https://api.github.com/users/drobertduke/followers",
      "following_url": "https://api.github.com/users/drobertduke/following{/other_user}",
      "gists_url": "https://api.github.com/users/drobertduke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/drobertduke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/drobertduke/subscriptions",
      "organizations_url": "https://api.github.com/users/drobertduke/orgs",
      "repos_url": "https://api.github.com/users/drobertduke/repos",
      "events_url": "https://api.github.com/users/drobertduke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/drobertduke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-27T22:11:47Z",
    "updated_at": "2018-07-30T17:30:16Z",
    "author_association": "NONE",
    "body": "Re: the pick_first issue, here's what I've found:\r\n1) It is **not** limited to grpc-node versions >= 1.12.x, my initial report confused the pick_first issue with the round_robin issue we were having internally. I've tested each minor version update going back to grpc-node@1.6.0 and they all exhibit the `Failed to create subchannel` within a few hundred requests.\r\n2) I've cherry-picked #16054 on different grpc-node versions up to the latest release (1.13.1) and still see the issue.\r\n\r\nThe trace logging shows differences in the channel state transitions and the creation of new subchannels. I ran it with `GRPC_TRACE=round_robin,connectivity_state,pick_first`, using grpc-node@1.13.1 with #16054 cherry-picked. Here is a \"normal\" cycle (create client, issue request, receive response to earlier request, close client):\r\n```\r\nCreate client\r\nD0727 14:16:52.231779000 140735286808576 dns_resolver.cc:280]          Start resolving.\r\nRequest 2\r\nI0727 14:16:52.232965000 140735286808576 pick_first.cc:132]            Pick First 0x104201190 created.\r\nI0727 14:16:52.232976000 140735286808576 pick_first.cc:304]            Pick First 0x104201190 received update with 1 addresses\r\nI0727 14:16:52.232982000 140735286808576 subchannel_list.h:458]        [pick_first 0x104201190] Creating subchannel list 0x104203040 for 1 subchannels\r\nI0727 14:16:52.233015000 140735286808576 subchannel_list.h:498]        [pick_first 0x104201190] subchannel list 0x104203040 index 0: Created subchannel 0x104203450 for address uri ipv4:100.65.166.90:8980\r\nI0727 14:16:52.233022000 140735286808576 connectivity_state.cc:92]     CONWATCH: 0x1042011f0 pick_first: get IDLE\r\nI0727 14:16:52.233028000 140735286808576 connectivity_state.cc:116]    CONWATCH: 0x1042011f0 pick_first: from IDLE [cur=IDLE] notify=0x104200018\r\nI0727 14:16:52.233033000 140735286808576 connectivity_state.cc:164]    SET: 0x104000770 client_channel: IDLE --> IDLE [new_lb+resolver] error=0x0 \"No Error\"\r\nI0727 14:16:52.233040000 140735286808576 subchannel_list.h:292]        [pick_first 0x104201190] subchannel list 0x104203040 index 0 of 1 (subchannel 0x104203450): starting watch: requesting connectivity change notification (from IDLE)\r\nI0727 14:16:52.238812000 140735286808576 connectivity_state.cc:116]    CONWATCH: 0x104203538 subchannel: from IDLE [cur=IDLE] notify=0x102602608\r\nI0727 14:16:52.238832000 140735286808576 connectivity_state.cc:164]    SET: 0x104203538 subchannel: IDLE --> CONNECTING [state_change] error=0x0 \"No Error\"\r\nI0727 14:16:52.238840000 140735286808576 connectivity_state.cc:190]    NOTIFY: 0x104203538 subchannel: 0x102602608\r\nI0727 14:16:52.238957000 140735286808576 subchannel_list.h:404]        [pick_first 0x104201190] subchannel list 0x104203040 index 0 of 1 (subchannel 0x104203450): connectivity changed: state=CONNECTING, error=\"No Error\", shutting_down=0\r\nI0727 14:16:52.238970000 140735286808576 connectivity_state.cc:164]    SET: 0x1042011f0 pick_first: IDLE --> CONNECTING [connecting_changed] error=0x0 \"No Error\"\r\nI0727 14:16:52.239077000 140735286808576 connectivity_state.cc:190]    NOTIFY: 0x1042011f0 pick_first: 0x104200018\r\nI0727 14:16:52.239095000 140735286808576 subchannel_list.h:313]        [pick_first 0x104201190] subchannel list 0x104203040 index 0 of 1 (subchannel 0x104203450): renewing watch: requesting connectivity change notification (from CONNECTING)\r\nI0727 14:16:52.239106000 140735286808576 connectivity_state.cc:116]    CONWATCH: 0x104203538 subchannel: from CONNECTING [cur=CONNECTING] notify=0x104000948\r\nI0727 14:16:52.239117000 140735286808576 connectivity_state.cc:164]    SET: 0x104000770 client_channel: IDLE --> CONNECTING [lb_changed] error=0x0 \"No Error\"\r\nI0727 14:16:52.239126000 140735286808576 connectivity_state.cc:116]    CONWATCH: 0x1042011f0 pick_first: from CONNECTING [cur=CONNECTING] notify=0x1040009a8\r\nResponse 1\r\nI0727 14:16:52.281096000 140735286808576 connectivity_state.cc:164]    SET: 0x1038046a0 client_transport: READY --> SHUTDOWN [close_transport] error=0x102704950 {\"created\":\"@1532726212.281080000\",\"description\":\"Transport destroyed\",\"file\":\"../deps/grpc/src/core/ext/transport/chttp2/transport/chttp2_transport.cc\",\"file_line\":564,\"grpc_status\":14,\"occurred_during_write\":0}\r\nI0727 14:16:52.281111000 140735286808576 connectivity_state.cc:190]    NOTIFY: 0x1038046a0 client_transport: 0x1027046d0\r\nI0727 14:16:52.306623000 140735286808576 subchannel.cc:608]            New connected subchannel at 0x102601760 for subchannel 0x104203450\r\nI0727 14:16:52.306648000 140735286808576 connectivity_state.cc:164]    SET: 0x104203538 subchannel: CONNECTING --> READY [connected] error=0x0 \"No Error\"\r\nI0727 14:16:52.306655000 140735286808576 connectivity_state.cc:190]    NOTIFY: 0x104203538 subchannel: 0x104000948\r\nI0727 14:16:52.306668000 140735286808576 connectivity_state.cc:116]    CONWATCH: 0x1030184a0 client_transport: from READY [cur=READY] notify=0x102601330\r\nI0727 14:16:52.306696000 140735286808576 subchannel_list.h:404]        [pick_first 0x104201190] subchannel list 0x104203040 index 0 of 1 (subchannel 0x104203450): connectivity changed: state=READY, error=\"No Error\", shutting_down=0\r\nI0727 14:16:52.306707000 140735286808576 connectivity_state.cc:164]    SET: 0x1042011f0 pick_first: CONNECTING --> READY [connecting_ready] error=0x0 \"No Error\"\r\nI0727 14:16:52.306715000 140735286808576 connectivity_state.cc:190]    NOTIFY: 0x1042011f0 pick_first: 0x1040009a8\r\nI0727 14:16:52.306836000 140735286808576 pick_first.cc:479]            Pick First 0x104201190 selected subchannel 0x104203450\r\nI0727 14:16:52.306847000 140735286808576 pick_first.cc:491]            Servicing pending pick with selected subchannel 0x104203450\r\nI0727 14:16:52.306853000 140735286808576 subchannel_list.h:313]        [pick_first 0x104201190] subchannel list 0x104203040 index 0 of 1 (subchannel 0x104203450): renewing watch: requesting connectivity change notification (from READY)\r\nI0727 14:16:52.306859000 140735286808576 connectivity_state.cc:116]    CONWATCH: 0x104203538 subchannel: from READY [cur=READY] notify=0x104200088\r\nI0727 14:16:52.306869000 140735286808576 connectivity_state.cc:164]    SET: 0x104000770 client_channel: CONNECTING --> READY [lb_changed] error=0x0 \"No Error\"\r\nI0727 14:16:52.306874000 140735286808576 connectivity_state.cc:116]    CONWATCH: 0x1042011f0 pick_first: from READY [cur=READY] notify=0x104200c78\r\nClose client\r\nI0727 14:16:52.336759000 140735286808576 connectivity_state.cc:164]    SET: 0x104000770 client_channel: READY --> SHUTDOWN [disconnect] error=0x102318910 {\"created\":\"@1532726212.336677000\",\"description\":\"Channel Destroyed\",\"file\":\"../deps/grpc/src/core/lib/surface/channel.cc\",\"file_line\":418}\r\nI0727 14:16:52.336876000 140735286808576 pick_first.cc:163]            Pick First 0x104201190 Shutting down\r\nI0727 14:16:52.336905000 140735286808576 connectivity_state.cc:164]    SET: 0x1042011f0 pick_first: READY --> SHUTDOWN [shutdown] error=0x10231ad30 {\"created\":\"@1532726212.336874000\",\"description\":\"Channel shutdown\",\"file\":\"../deps/grpc/src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc\",\"file_line\":161}\r\nI0727 14:16:52.336916000 140735286808576 connectivity_state.cc:190]    NOTIFY: 0x1042011f0 pick_first: 0x104200c78\r\nI0727 14:16:52.336930000 140735286808576 subchannel_list.h:523]        [pick_first 0x104201190] Shutting down subchannel_list 0x104203040\r\nI0727 14:16:52.336942000 140735286808576 subchannel_list.h:348]        [pick_first 0x104201190] subchannel list 0x104203040 index 0 of 1 (subchannel 0x104203450): canceling connectivity watch (shutdown)\r\nI0727 14:16:52.337141000 140735286808576 connectivity_state.cc:113]    CONWATCH: 0x104203538 subchannel: unsubscribe notify=0x104200088\r\nI0727 14:16:52.337191000 140735286808576 lb_policy.cc:47]              pick_first 0x104201190: scheduling re-resolution closure with error=\"Cancelled\".\r\nI0727 14:16:52.337253000 140735286808576 connectivity_state.cc:164]    SET: 0x104000770 client_channel: SHUTDOWN --> SHUTDOWN [resolver_gone] error=0x10231aeb0 {\"created\":\"@1532726212.337204000\",\"description\":\"Got resolver result after disconnection\",\"file\":\"../deps/grpc/src/core/ext/filters/client_channel/client_channel.cc\",\"file_line\":494,\"referenced_errors\":[{\"created\":\"@1532726212.336837000\",\"description\":\"Resolver Shutdown\",\"file\":\"../deps/grpc/src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc\",\"file_line\":168}]}\r\nI0727 14:16:52.337273000 140735286808576 subchannel_list.h:404]        [pick_first 0x104201190] subchannel list 0x104203040 index 0 of 1 (subchannel 0x104203450): connectivity changed: state=READY, error=\"Cancelled\", shutting_down=1\r\nI0727 14:16:52.337758000 140735286808576 subchannel_list.h:275]        [pick_first 0x104201190] subchannel list 0x104203040 index 0 of 1 (subchannel 0x104203450): unreffing subchannel\r\nI0727 14:16:52.337799000 140735286808576 subchannel_list.h:332]        [pick_first 0x104201190] subchannel list 0x104203040 index 0 of 1 (subchannel 0x0): stopping connectivity watch\r\nI0727 14:16:52.337810000 140735286808576 pick_first.cc:140]            Destroying Pick First 0x104201190\r\nI0727 14:16:52.337821000 140735286808576 subchannel_list.h:514]        [pick_first 0x104201190] Destroying subchannel_list 0x104203040\r\n```\r\nAnd here is a 'bad' cycle resulting in the error:\r\n```\r\nCreate client\r\nD0727 14:16:52.338814000 140735286808576 dns_resolver.cc:280]          Start resolving.\r\nRequest 3\r\nI0727 14:16:52.339995000 140735286808576 pick_first.cc:132]            Pick First 0x104000170 created.\r\nI0727 14:16:52.340014000 140735286808576 pick_first.cc:304]            Pick First 0x104000170 received update with 1 addresses\r\nI0727 14:16:52.340023000 140735286808576 subchannel_list.h:458]        [pick_first 0x104000170] Creating subchannel list 0x104000b90 for 1 subchannels\r\nI0727 14:16:52.340088000 140735286808576 subchannel_list.h:498]        [pick_first 0x104000170] subchannel list 0x104000b90 index 0: Created subchannel 0x104001280 for address uri ipv4:100.65.166.90:8980\r\nI0727 14:16:52.340103000 140735286808576 connectivity_state.cc:92]     CONWATCH: 0x1040001d0 pick_first: get IDLE\r\nI0727 14:16:52.340113000 140735286808576 connectivity_state.cc:116]    CONWATCH: 0x1040001d0 pick_first: from IDLE [cur=IDLE] notify=0x104000418\r\nI0727 14:16:52.340126000 140735286808576 connectivity_state.cc:164]    SET: 0x104100810 client_channel: IDLE --> IDLE [new_lb+resolver] error=0x0 \"No Error\"\r\nI0727 14:16:52.340140000 140735286808576 subchannel_list.h:292]        [pick_first 0x104000170] subchannel list 0x104000b90 index 0 of 1 (subchannel 0x104001280): starting watch: requesting connectivity change notification (from IDLE)\r\nI0727 14:16:52.390156000 140735286808576 connectivity_state.cc:116]    CONWATCH: 0x104001368 subchannel: from IDLE [cur=IDLE] notify=0x102319238\r\nI0727 14:16:52.390175000 140735286808576 connectivity_state.cc:164]    SET: 0x104001368 subchannel: IDLE --> CONNECTING [state_change] error=0x0 \"No Error\"\r\nI0727 14:16:52.390180000 140735286808576 connectivity_state.cc:190]    NOTIFY: 0x104001368 subchannel: 0x102319238\r\nI0727 14:16:52.390281000 140735286808576 subchannel_list.h:404]        [pick_first 0x104000170] subchannel list 0x104000b90 index 0 of 1 (subchannel 0x104001280): connectivity changed: state=CONNECTING, error=\"No Error\", shutting_down=0\r\nI0727 14:16:52.390296000 140735286808576 connectivity_state.cc:164]    SET: 0x1040001d0 pick_first: IDLE --> CONNECTING [connecting_changed] error=0x0 \"No Error\"\r\nI0727 14:16:52.390366000 140735286808576 connectivity_state.cc:190]    NOTIFY: 0x1040001d0 pick_first: 0x104000418\r\nI0727 14:16:52.390379000 140735286808576 subchannel_list.h:313]        [pick_first 0x104000170] subchannel list 0x104000b90 index 0 of 1 (subchannel 0x104001280): renewing watch: requesting connectivity change notification (from CONNECTING)\r\nI0727 14:16:52.390388000 140735286808576 connectivity_state.cc:116]    CONWATCH: 0x104001368 subchannel: from CONNECTING [cur=CONNECTING] notify=0x102319238\r\nI0727 14:16:52.390398000 140735286808576 connectivity_state.cc:164]    SET: 0x104100810 client_channel: IDLE --> CONNECTING [lb_changed] error=0x0 \"No Error\"\r\nI0727 14:16:52.390405000 140735286808576 connectivity_state.cc:116]    CONWATCH: 0x1040001d0 pick_first: from CONNECTING [cur=CONNECTING] notify=0x1023192b8\r\nResponse 2\r\nI0727 14:16:52.390903000 140735286808576 connectivity_state.cc:164]    SET: 0x1030184a0 client_transport: READY --> SHUTDOWN [close_transport] error=0x1027046d0 {\"created\":\"@1532726212.390890000\",\"description\":\"Transport destroyed\",\"file\":\"../deps/grpc/src/core/ext/transport/chttp2/transport/chttp2_transport.cc\",\"file_line\":564,\"grpc_status\":14,\"occurred_during_write\":0}\r\nI0727 14:16:52.390928000 140735286808576 connectivity_state.cc:190]    NOTIFY: 0x1030184a0 client_transport: 0x102601330\r\nClose client\r\nI0727 14:16:52.442165000 140735286808576 connectivity_state.cc:164]    SET: 0x104100810 client_channel: CONNECTING --> SHUTDOWN [disconnect] error=0x102601440 {\"created\":\"@1532726212.442135000\",\"description\":\"Channel Destroyed\",\"file\":\"../deps/grpc/src/core/lib/surface/channel.cc\",\"file_line\":418}\r\nI0727 14:16:52.442204000 140735286808576 pick_first.cc:163]            Pick First 0x104000170 Shutting down\r\nI0727 14:16:52.442217000 140735286808576 connectivity_state.cc:164]    SET: 0x1040001d0 pick_first: CONNECTING --> SHUTDOWN [shutdown] error=0x10231aea0 {\"created\":\"@1532726212.442204000\",\"description\":\"Channel shutdown\",\"file\":\"../deps/grpc/src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc\",\"file_line\":161}\r\nI0727 14:16:52.442222000 140735286808576 connectivity_state.cc:190]    NOTIFY: 0x1040001d0 pick_first: 0x1023192b8\r\nI0727 14:16:52.442227000 140735286808576 subchannel_list.h:523]        [pick_first 0x104000170] Shutting down subchannel_list 0x104000b90\r\nI0727 14:16:52.442232000 140735286808576 subchannel_list.h:348]        [pick_first 0x104000170] subchannel list 0x104000b90 index 0 of 1 (subchannel 0x104001280): canceling connectivity watch (shutdown)\r\nI0727 14:16:52.442256000 140735286808576 connectivity_state.cc:113]    CONWATCH: 0x104001368 subchannel: unsubscribe notify=0x102319238\r\nI0727 14:16:52.442262000 140735286808576 lb_policy.cc:47]              pick_first 0x104000170: scheduling re-resolution closure with error=\"Cancelled\".\r\nI0727 14:16:52.442283000 140735286808576 connectivity_state.cc:164]    SET: 0x104100810 client_channel: SHUTDOWN --> SHUTDOWN [resolver_gone] error=0x10231b5c0 {\"created\":\"@1532726212.442268000\",\"description\":\"Got resolver result after disconnection\",\"file\":\"../deps/grpc/src/core/ext/filters/client_channel/client_channel.cc\",\"file_line\":494,\"referenced_errors\":[{\"created\":\"@1532726212.442199000\",\"description\":\"Resolver Shutdown\",\"file\":\"../deps/grpc/src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc\",\"file_line\":168}]}\r\nI0727 14:16:52.442509000 140735286808576 subchannel_list.h:404]        [pick_first 0x104000170] subchannel list 0x104000b90 index 0 of 1 (subchannel 0x104001280): connectivity changed: state=CONNECTING, error=\"Cancelled\", shutting_down=1\r\nI0727 14:16:52.442519000 140735286808576 subchannel_list.h:275]        [pick_first 0x104000170] subchannel list 0x104000b90 index 0 of 1 (subchannel 0x104001280): unreffing subchannel\r\nI0727 14:16:52.442529000 140735286808576 subchannel_list.h:332]        [pick_first 0x104000170] subchannel list 0x104000b90 index 0 of 1 (subchannel 0x0): stopping connectivity watch\r\nI0727 14:16:52.442533000 140735286808576 pick_first.cc:140]            Destroying Pick First 0x104000170\r\nI0727 14:16:52.442537000 140735286808576 subchannel_list.h:514]        [pick_first 0x104000170] Destroying subchannel_list 0x104000b90\r\nCreate client\r\nD0727 14:16:52.442808000 140735286808576 dns_resolver.cc:280]          Start resolving.\r\nRequest 4\r\nError: 2 UNKNOWN: Failed to create subchannel\r\n```\r\n\r\nConsistent differences between 'good' cycles and 'bad' cycles:\r\n- Good cycles create new subchannels: `New connected subchannel at 0x102601760 for subchannel 0x104203450`\r\n- Bad cycles transition client_channel and pick_first from CONNECTING --> SHUTDOWN `SET: 0x1040001d0 pick_first: CONNECTING --> SHUTDOWN [shutdown]`\r\n- Good cycles only transition to SHUTDOWN from READY `SET: 0x104000770 client_channel: READY --> SHUTDOWN [disconnect]`"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/410107428",
    "html_url": "https://github.com/grpc/grpc/issues/15933#issuecomment-410107428",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15933",
    "id": 410107428,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDEwNzQyOA==",
    "user": {
      "login": "dgquintas",
      "id": 120217,
      "node_id": "MDQ6VXNlcjEyMDIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/120217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgquintas",
      "html_url": "https://github.com/dgquintas",
      "followers_url": "https://api.github.com/users/dgquintas/followers",
      "following_url": "https://api.github.com/users/dgquintas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgquintas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgquintas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgquintas/subscriptions",
      "organizations_url": "https://api.github.com/users/dgquintas/orgs",
      "repos_url": "https://api.github.com/users/dgquintas/repos",
      "events_url": "https://api.github.com/users/dgquintas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgquintas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-03T00:26:42Z",
    "updated_at": "2018-08-03T00:26:42Z",
    "author_association": "NONE",
    "body": "There seems to be a race between the destruction of the transport and the establishment of the connection. In the bad cycle, the SHUTDOWN of the transport *and* the client_channel happen _before_ the subchannel is able to connect. In contrast, in the good cycle, the client_channel SHUTDOWN happens _after_ the subchannel has connected. The LB policy (pick first, in this case) is managed by the client_channel and is only as wise as the client_channel is. This explains why it's flaky (ie, the race) but not why it's racy in the first place.\r\n\r\nWithout knowing anything about Node, I find the repro code suspect in that, if the code is asynchronous, the callback you pass to `sayHello` may end up running after the next iteration has called `client.close()` over the same `client` instance. Isn't that so?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/410388550",
    "html_url": "https://github.com/grpc/grpc/issues/15933#issuecomment-410388550",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15933",
    "id": 410388550,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDM4ODU1MA==",
    "user": {
      "login": "drobertduke",
      "id": 905655,
      "node_id": "MDQ6VXNlcjkwNTY1NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/905655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/drobertduke",
      "html_url": "https://github.com/drobertduke",
      "followers_url": "https://api.github.com/users/drobertduke/followers",
      "following_url": "https://api.github.com/users/drobertduke/following{/other_user}",
      "gists_url": "https://api.github.com/users/drobertduke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/drobertduke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/drobertduke/subscriptions",
      "organizations_url": "https://api.github.com/users/drobertduke/orgs",
      "repos_url": "https://api.github.com/users/drobertduke/repos",
      "events_url": "https://api.github.com/users/drobertduke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/drobertduke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-03T22:05:39Z",
    "updated_at": "2018-08-03T22:05:39Z",
    "author_association": "NONE",
    "body": "Correct, `client.close()` is being called while responses are in-flight. A couple notes about that:\r\n\r\n1) Both 'good' cycles and 'bad' cycles are getting `close()` called while responses are in-flight. In the output above I've logged the request numbers after they are sent and the response numbers after they are received, and in both scenarios responses are pending when the client is closed.\r\n2) The error is happening after creating a new client and making a request with it. If the use of `close()` in this scenario is improper, I would still expect a freshly created client to work properly.\r\n3) If it's the client-consumer's responsibility to avoid calling `close()` on a client while responses are still in-flight, that's a significant burden if they want to reset the client. Track the number of in-flight requests per client instance, create a new client for new requests, hold onto the old client until its in-flight count goes to zero, close the old client. We don't have this issue with round_robin (after the fix).\r\n\r\nFor what it's worth, this pick_first issue is not urgent for us, we currently use round_robin for everything. I was trying to replicate our round_robin issue when writing the example code for this issue, not realizing the issues were specific to different lb_policies. The only place we have seen this pick_first issue is in my highly-contrived example."
  }
]
