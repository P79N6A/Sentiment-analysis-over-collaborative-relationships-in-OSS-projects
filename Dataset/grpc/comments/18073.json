[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/464123153",
    "html_url": "https://github.com/grpc/grpc/pull/18073#issuecomment-464123153",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/18073",
    "id": 464123153,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDEyMzE1Mw==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-15T17:00:31Z",
    "updated_at": "2019-02-15T17:00:31Z",
    "author_association": "MEMBER",
    "body": "Here's an alternative to consider: How about changing the helper's `UpdateState()` method such that instead of doing the update immediately, it instead schedules a closure on the combiner to do the update?  That way, the code executed in `UpdateState()` will not execute until after the new LB policy's construction is complete.\r\n\r\nI've actually been thinking about doing something like that anyway, since it would make it easier to reason about when callbacks between the resolver and LB policy will occur."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/464150278",
    "html_url": "https://github.com/grpc/grpc/pull/18073#issuecomment-464150278",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/18073",
    "id": 464150278,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDE1MDI3OA==",
    "user": {
      "login": "AspirinSJL",
      "id": 3314176,
      "node_id": "MDQ6VXNlcjMzMTQxNzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3314176?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AspirinSJL",
      "html_url": "https://github.com/AspirinSJL",
      "followers_url": "https://api.github.com/users/AspirinSJL/followers",
      "following_url": "https://api.github.com/users/AspirinSJL/following{/other_user}",
      "gists_url": "https://api.github.com/users/AspirinSJL/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AspirinSJL/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AspirinSJL/subscriptions",
      "organizations_url": "https://api.github.com/users/AspirinSJL/orgs",
      "repos_url": "https://api.github.com/users/AspirinSJL/repos",
      "events_url": "https://api.github.com/users/AspirinSJL/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AspirinSJL/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-15T18:25:18Z",
    "updated_at": "2019-02-15T18:25:18Z",
    "author_association": "MEMBER",
    "body": "If there are other reasons to use a closure in `UpdateState()`, I'd be more than happy to choose the closure approach since it's much easier."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/464251561",
    "html_url": "https://github.com/grpc/grpc/pull/18073#issuecomment-464251561",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/18073",
    "id": 464251561,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDI1MTU2MQ==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-15T23:50:24Z",
    "updated_at": "2019-02-15T23:50:24Z",
    "author_association": "MEMBER",
    "body": "I just had a chat with Eric about how this works in Java, and I think we came up with another solution to consider.  The core problem here is that we can wind up calling the helper's `UpdateState()` method from the LB policy's ctor.  However, what if we changed the LB policy API such that instead of passing the addresses and the config to the ctor, we instead had the ctor just create the object and then require the caller to immediate invoke the LB policy's `UpdateLocked()` method after instantiating it?  That way, we could ensure that the LB policy's ctor never calls the helper, so we can finish updating the parent's state by the time the helper is called."
  }
]
