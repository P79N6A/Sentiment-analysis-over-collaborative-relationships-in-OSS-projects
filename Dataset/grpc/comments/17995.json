[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/462257656",
    "html_url": "https://github.com/grpc/grpc/issues/17995#issuecomment-462257656",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17995",
    "id": 462257656,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MjI1NzY1Ng==",
    "user": {
      "login": "kkm000",
      "id": 8228229,
      "node_id": "MDQ6VXNlcjgyMjgyMjk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/8228229?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kkm000",
      "html_url": "https://github.com/kkm000",
      "followers_url": "https://api.github.com/users/kkm000/followers",
      "following_url": "https://api.github.com/users/kkm000/following{/other_user}",
      "gists_url": "https://api.github.com/users/kkm000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kkm000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kkm000/subscriptions",
      "organizations_url": "https://api.github.com/users/kkm000/orgs",
      "repos_url": "https://api.github.com/users/kkm000/repos",
      "events_url": "https://api.github.com/users/kkm000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kkm000/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-11T09:07:02Z",
    "updated_at": "2019-02-11T09:07:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks, the repro seems clear. In the command line message that you copy, there is no final quote at the very end of the command. Is this what you are actually seeing, or did it just not make it when copying?\r\n\r\nI'll have a look at this, indeed, but, in all fairness, when working with tools originally designed for Linux and ported to Windows later, is it really important to push them to the limit and use paths with spaces and Unicode characters? I am just trying to estimate how to prioritize this issue.\r\n\r\nAs a workaround, a symlink (or NTFS junction) e. g. `C:\\Users\\dl => C:\\Users\\DrÃ© Lot` would likely take care of this issue. FWIW, personally, I always establish junctions `C:\\_P => C:\\Program Files` and `C:\\_PX => C:\\Program Files (x86)` first thing after installing the OS... just in case, to stay on the safe side. Saved me a lot of headache with a couple of Python distros over the years. The command is `mklink /j`, and requires elevation. NTFS in Windows 10 also supports \"normal\" first class un*xoid symlinks (mklink /d), which do not, if developer mode is enabled (but you'll still likely need to elevate to create a symlink in Users, it's ACL is quite restrictive). Will this workaround help you in the meantime?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/466065358",
    "html_url": "https://github.com/grpc/grpc/issues/17995#issuecomment-466065358",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17995",
    "id": 466065358,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjA2NTM1OA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-21T16:25:46Z",
    "updated_at": "2019-02-21T16:25:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "@kkm000  are you planning to come up with a fix?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/466606706",
    "html_url": "https://github.com/grpc/grpc/issues/17995#issuecomment-466606706",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17995",
    "id": 466606706,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjYwNjcwNg==",
    "user": {
      "login": "kkm000",
      "id": 8228229,
      "node_id": "MDQ6VXNlcjgyMjgyMjk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/8228229?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kkm000",
      "html_url": "https://github.com/kkm000",
      "followers_url": "https://api.github.com/users/kkm000/followers",
      "following_url": "https://api.github.com/users/kkm000/following{/other_user}",
      "gists_url": "https://api.github.com/users/kkm000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kkm000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kkm000/subscriptions",
      "organizations_url": "https://api.github.com/users/kkm000/orgs",
      "repos_url": "https://api.github.com/users/kkm000/repos",
      "events_url": "https://api.github.com/users/kkm000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kkm000/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-23T02:15:04Z",
    "updated_at": "2019-02-23T02:15:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jtattermusch, is this worth it? What is your feeling?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/467075542",
    "html_url": "https://github.com/grpc/grpc/issues/17995#issuecomment-467075542",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17995",
    "id": 467075542,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzA3NTU0Mg==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-25T16:21:20Z",
    "updated_at": "2019-02-25T16:21:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'd say not supporting spaces in file names is bad. About not supporting accented characters I feel less strongly, but also something that should really work. How much work is it to fix this?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/467240582",
    "html_url": "https://github.com/grpc/grpc/issues/17995#issuecomment-467240582",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17995",
    "id": 467240582,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzI0MDU4Mg==",
    "user": {
      "login": "kkm000",
      "id": 8228229,
      "node_id": "MDQ6VXNlcjgyMjgyMjk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/8228229?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kkm000",
      "html_url": "https://github.com/kkm000",
      "followers_url": "https://api.github.com/users/kkm000/followers",
      "following_url": "https://api.github.com/users/kkm000/following{/other_user}",
      "gists_url": "https://api.github.com/users/kkm000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kkm000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kkm000/subscriptions",
      "organizations_url": "https://api.github.com/users/kkm000/orgs",
      "repos_url": "https://api.github.com/users/kkm000/repos",
      "events_url": "https://api.github.com/users/kkm000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kkm000/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-26T00:25:34Z",
    "updated_at": "2019-02-26T00:25:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jtattermusch, ok, let me have a look. I agree, paths should be quoted everywhere, so spaces must work. The non-ASCII, if an issue, then it's likely in the tools, as .NET is all wchar_t throughout.\r\n\r\nI have quite a batch of issues already, should be able to get to them this week."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/473379208",
    "html_url": "https://github.com/grpc/grpc/issues/17995#issuecomment-473379208",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17995",
    "id": 473379208,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MzM3OTIwOA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-15T17:39:00Z",
    "updated_at": "2019-03-15T17:39:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think the rootcause for not handling spaces in filenames correctly is the same as in https://github.com/grpc/grpc/issues/17661 (the CsharpGeneratorService doesn't mimic `protoc` output file name mangling accurately)."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/475510959",
    "html_url": "https://github.com/grpc/grpc/issues/17995#issuecomment-475510959",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17995",
    "id": 475510959,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NTUxMDk1OQ==",
    "user": {
      "login": "kkm000",
      "id": 8228229,
      "node_id": "MDQ6VXNlcjgyMjgyMjk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/8228229?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kkm000",
      "html_url": "https://github.com/kkm000",
      "followers_url": "https://api.github.com/users/kkm000/followers",
      "following_url": "https://api.github.com/users/kkm000/following{/other_user}",
      "gists_url": "https://api.github.com/users/kkm000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kkm000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kkm000/subscriptions",
      "organizations_url": "https://api.github.com/users/kkm000/orgs",
      "repos_url": "https://api.github.com/users/kkm000/repos",
      "events_url": "https://api.github.com/users/kkm000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kkm000/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-22T06:41:55Z",
    "updated_at": "2019-03-22T06:41:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sorry @ludydoo, it looks like we cannot fix that. This has to do with the way protoc handles non-ASCII characters.\r\n\r\nFirst, I reproduce your issue, right in the grpc tree (some output trimmed for brevity; the environment variable `NUGET_PACKAGES` overrides the package dump location):\r\n```\r\nc:\\projects\\grpc\\examples\\csharp\\Helloworld\\Greeter>chcp 65001\r\nActive code page: 65001\r\nc:\\projects\\grpc\\examples\\csharp\\Helloworld\\Greeter>set NUGET_PACKAGES=C:\\temp\\DrÃ© Lot\\.nuget\r\nc:\\projects\\grpc\\examples\\csharp\\Helloworld\\Greeter>dotnet build -bl\r\nC:\\_P\\dotnet\\sdk\\2.1.505\\MSBuild.dll -consoleloggerparameters:Summary -distributedlogger:Microsoft.DotNet.Tools.MSBuild.MSBuildLogger,C:\\_P\\dotnet\\sdk\\2.1.505\\dotnet.dll*Microsoft.DotNet.Tools.MSBuild.MSBuildForwardingLogger,C:\\_P\\dotnet\\sdk\\2.1.505\\dotnet.dll -maxcpucount -restore -target:Build -verbosity:m /bl .\\Greeter.csproj\r\n  Restoring packages for c:\\projects\\grpc\\examples\\csharp\\Helloworld\\Greeter\\Greeter.csproj...\r\n  Installing System.Threading.Thread 4.0.0.\r\n  Installing System.Threading.ThreadPool 4.0.10.\r\n  Installing System.Runtime.Loader 4.0.0.\r\n  Installing Grpc.Core 1.18.0.\r\n  Installing Grpc 1.18.0.\r\n  Installing Grpc.Tools 1.18.0.\r\n  Installing Google.Protobuf 3.6.1.\r\n  Generating MSBuild file c:\\projects\\grpc\\examples\\csharp\\Helloworld\\Greeter\\obj\\Greeter.csproj.nuget.g.props.\r\n  Generating MSBuild file c:\\projects\\grpc\\examples\\csharp\\Helloworld\\Greeter\\obj\\Greeter.csproj.nuget.g.targets.\r\n  Restore completed in 10.2 sec for c:\\projects\\grpc\\examples\\csharp\\Helloworld\\Greeter\\Greeter.csproj.\r\n  --grpc_out: protoc-gen-grpc: The system cannot find the path specified.\r\n\r\nC:\\temp\\DrÃ© Lot\\.nuget\\grpc.tools\\1.18.0\\build\\_protobuf\\Google.Protobuf.Tools.targets(263,5): error MSB6006: \"C:\\temp\\DrÃ© Lot\\.nuget\\grpc.tools\\1.18.0\\tools\\windows_x64\\protoc.exe\" exited with code 1. [c:\\projects\\grpc\\examples\\csharp\\Helloworld\\Greeter\\Greeter.csproj]\r\n\r\nBuild FAILED.\r\n```\r\nThe command as reported in the log fails in a different manner, but this has to do with the way arguments are passed to protoc (more on that later):\r\n```\r\nc:\\projects\\grpc\\examples\\csharp\\Helloworld\\Greeter>\"C:\\temp\\DrÃ© Lot\\.nuget\\grpc.tools\\1.18.0\\tools\\windows_x64\\protoc.exe\" --csharp_out=obj\\Debug\\netstandard1.5 --plugin=\"protoc-gen-grpc=C:\\temp\\DrÃ© Lot\\.nuget\\grpc.tools\\1.18.0\\tools\\windows_x64\\grpc_csharp_plugin.exe\" --grpc_out=obj\\Debug\\netstandard1.5 --proto_path=\"C:\\temp\\DrÃ© Lot\\.nuget\\grpc.tools\\1.18.0\\build\\native\\include\" --proto_path=..\\..\\..\\protos --dependency_out=obj\\Debug\\netstandard1.5\\50c9e7acc97344d0_helloworld.protodep ../../../protos/helloworld.proto\r\nC:\\temp\\Dr Lot\\.nuget\\grpc.tools\\1.18.0\\build\\native\\include: warning: directory does not exist.\r\n```\r\nNote the `Ã©` is missing from the path in the error message.\r\n\r\nReally the arguments are passed using a response file, since protoc accepts spaces in arguments, one per line, without quoting. Let's construct this file, protoc.rsp, save as UTF-8:\r\n```\r\n--csharp_out=obj\\Debug\\netstandard1.5\r\n--plugin=protoc-gen-grpc=C:\\temp\\DrÃ© Lot\\.nuget\\grpc.tools\\1.18.0\\tools\\windows_x64\\grpc_csharp_plugin.exe\r\n--grpc_out=obj\\Debug\\netstandard1.5\r\n--proto_path=C:\\temp\\DrÃ© Lot\\.nuget\\grpc.tools\\1.18.0\\build\\native\\include\r\n--proto_path=..\\..\\..\\protos\r\n--dependency_out=obj\\Debug\\netstandard1.5\\50c9e7acc97344d0_helloworld.protodep\r\n../../../protos/helloworld.proto\r\n```\r\nand give it a go with protoc\r\n```\r\nc:\\projects\\grpc\\examples\\csharp\\Helloworld\\Greeter>\"C:\\temp\\DrÃ© Lot\\.nuget\\grpc.tools\\1.18.0\\tools\\windows_x64\\protoc.exe\" @protoc.rsp\r\n--grpc_out: protoc-gen-grpc: The system cannot find the path specified.\r\n```\r\nNow the build error reproduces exactly. protoc complains now that it cannot find the file specified in `--plugin=protoc-gen-grpc=`, apparently for the very same reason: it drops the `Ã©` from file name.\r\n\r\nTo confirm that the issue is not with the space in the path, do\r\n```\r\nc:\\projects\\grpc\\examples\\csharp\\Helloworld\\Greeter>rm -rf obj bin\r\nc:\\projects\\grpc\\examples\\csharp\\Helloworld\\Greeter>set NUGET_PACKAGES=C:\\temp\\hello world\\.nuget\r\nc:\\projects\\grpc\\examples\\csharp\\Helloworld\\Greeter>dotnet build\r\n  Restoring packages for c:\\projects\\grpc\\examples\\csharp\\Helloworld\\Greeter\\Greeter.csproj...\r\n  Installing System.Threading.ThreadPool 4.0.10.\r\n  Installing System.Threading.Thread 4.0.0.\r\n  Installing System.Runtime.Loader 4.0.0.\r\n  Installing Grpc.Core 1.18.0.\r\n  Installing Grpc.Tools 1.18.0.\r\n  Installing Grpc 1.18.0.\r\n  Installing Google.Protobuf 3.6.1.\r\n  Generating MSBuild file c:\\projects\\grpc\\examples\\csharp\\Helloworld\\Greeter\\obj\\Greeter.csproj.nuget.g.props.\r\n  Generating MSBuild file c:\\projects\\grpc\\examples\\csharp\\Helloworld\\Greeter\\obj\\Greeter.csproj.nuget.g.targets.\r\n  Restore completed in 1.72 sec for c:\\projects\\grpc\\examples\\csharp\\Helloworld\\Greeter\\Greeter.csproj.\r\n  Greeter -> c:\\projects\\grpc\\examples\\csharp\\Helloworld\\Greeter\\bin\\Debug\\netstandard1.5\\Greeter.dll\r\n\r\nBuild succeeded.\r\n```\r\nprotoc accepts spaces either on command line, if quoted as logged (I'm using the same executable path; Windows itself is ok with this):\r\n```\r\nc:\\projects\\grpc\\examples\\csharp\\Helloworld\\Greeter>\"C:\\temp\\DrÃ© Lot\\.nuget\\grpc.tools\\1.18.0\\tools\\windows_x64\\protoc.exe\" --csharp_out=obj\\Debug\\netstandard1.5 --plugin=\"protoc-gen-grpc=C:\\temp\\hello world\\.nuget\\grpc.tools\\1.18.0\\tools\\windows_x64\\grpc_csharp_plugin.exe\" --grpc_out=obj\\Debug\\netstandard1.5 --proto_path=\"C:\\temp\\hello world\\.nuget\\grpc.tools\\1.18.0\\build\\native\\include\" --proto_path=..\\..\\..\\protos --dependency_out=obj\\Debug\\netstandard1.5\\50c9e7acc97344d0_helloworld.protodep ../../../protos/helloworld.proto\r\nc:\\projects\\grpc\\examples\\csharp\\Helloworld\\Greeter>\r\n```\r\nOr in the response file\r\n```\r\n--csharp_out=obj\\Debug\\netstandard1.5\r\n--plugin=protoc-gen-grpc=C:\\temp\\hello world\\.nuget\\grpc.tools\\1.18.0\\tools\\windows_x64\\grpc_csharp_plugin.exe\r\n--grpc_out=obj\\Debug\\netstandard1.5\r\n--proto_path=C:\\temp\\hello world\\.nuget\\grpc.tools\\1.18.0\\build\\native\\include\r\n--proto_path=..\\..\\..\\protos\r\n--dependency_out=obj\\Debug\\netstandard1.5\\50c9e7acc97344d0_helloworld.protodep\r\n../../../protos/helloworld.proto\r\n```\r\nagain saved as protoc.rsp:\r\n```\r\nc:\\projects\\grpc\\examples\\csharp\\Helloworld\\Greeter>\"C:\\temp\\DrÃ© Lot\\.nuget\\grpc.tools\\1.18.0\\tools\\windows_x64\\protoc.exe\" @protoc.rsp\r\nc:\\projects\\grpc\\examples\\csharp\\Helloworld\\Greeter>\r\n```\r\n----\r\n**TL;DR:** This is a issue with non-ASCII character in paths, not spaces, and the bug is in protoc, not in gRPC tooling. I believe that fixing it to support Windows filenames properly would be difficult. @jtattermusch, what is your take on this, what do you think?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/475682475",
    "html_url": "https://github.com/grpc/grpc/issues/17995#issuecomment-475682475",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17995",
    "id": 475682475,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NTY4MjQ3NQ==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-22T16:14:58Z",
    "updated_at": "2019-03-22T16:14:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "Looks like the problem with spaces might be at least partially fixed by https://github.com/grpc/grpc/pull/18470? (if the space is in the name of the '.proto' file itself, not the path)"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/475958820",
    "html_url": "https://github.com/grpc/grpc/issues/17995#issuecomment-475958820",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17995",
    "id": 475958820,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NTk1ODgyMA==",
    "user": {
      "login": "kkm000",
      "id": 8228229,
      "node_id": "MDQ6VXNlcjgyMjgyMjk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/8228229?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kkm000",
      "html_url": "https://github.com/kkm000",
      "followers_url": "https://api.github.com/users/kkm000/followers",
      "following_url": "https://api.github.com/users/kkm000/following{/other_user}",
      "gists_url": "https://api.github.com/users/kkm000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kkm000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kkm000/subscriptions",
      "organizations_url": "https://api.github.com/users/kkm000/orgs",
      "repos_url": "https://api.github.com/users/kkm000/repos",
      "events_url": "https://api.github.com/users/kkm000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kkm000/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-24T13:23:11Z",
    "updated_at": "2019-03-24T13:23:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jtattermusch, the problem is *not* with spaces, but rather with the way protoc's handles non-ASCII characters. This reproduces with protoc from command line. So no, this won't help, that's a different issue.\r\n\r\nI have no idea how eager is the protoc team about filing off the corners of the Windows port. There must be an additional, OS-specific layer that does the conversion between OS an ind internal path representation. Besides path syntax, even encoding differs: Windows API use wchar_t representing codepoints (not UTF-16), while protoc uses UTF-8 MBC internally."
  }
]
