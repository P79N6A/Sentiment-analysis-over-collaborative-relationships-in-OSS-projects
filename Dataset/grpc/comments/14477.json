[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/369456928",
    "html_url": "https://github.com/grpc/grpc/issues/14477#issuecomment-369456928",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14477",
    "id": 369456928,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTQ1NjkyOA==",
    "user": {
      "login": "apolcyn",
      "id": 9566254,
      "node_id": "MDQ6VXNlcjk1NjYyNTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9566254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apolcyn",
      "html_url": "https://github.com/apolcyn",
      "followers_url": "https://api.github.com/users/apolcyn/followers",
      "following_url": "https://api.github.com/users/apolcyn/following{/other_user}",
      "gists_url": "https://api.github.com/users/apolcyn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apolcyn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apolcyn/subscriptions",
      "organizations_url": "https://api.github.com/users/apolcyn/orgs",
      "repos_url": "https://api.github.com/users/apolcyn/repos",
      "events_url": "https://api.github.com/users/apolcyn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apolcyn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-01T02:48:42Z",
    "updated_at": "2018-03-01T02:48:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "@duelinmarkers this is a guess: are you able to see if this leak still occurs on the `1.10.pre1` on `pre2` releases? \r\n\r\nI am wondering if this was possibly fixed by a PR that made it into the `1.10` branch (https://github.com/grpc/grpc/pull/14501).\r\n\r\nIf not, do you have any tips to reproduce beyond creating multiple stubs from the same process?\r\nI am trying to reproduce this with the [greeter server](https://github.com/grpc/grpc/blob/master/examples/ruby/greeter_server.rb) and [client](https://github.com/grpc/grpc/blob/master/examples/ruby/greeter_client.rb) but it is not easily reproducing."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/370864892",
    "html_url": "https://github.com/grpc/grpc/issues/14477#issuecomment-370864892",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14477",
    "id": 370864892,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDg2NDg5Mg==",
    "user": {
      "login": "jchli",
      "id": 8095649,
      "node_id": "MDQ6VXNlcjgwOTU2NDk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8095649?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jchli",
      "html_url": "https://github.com/jchli",
      "followers_url": "https://api.github.com/users/jchli/followers",
      "following_url": "https://api.github.com/users/jchli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jchli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jchli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jchli/subscriptions",
      "organizations_url": "https://api.github.com/users/jchli/orgs",
      "repos_url": "https://api.github.com/users/jchli/repos",
      "events_url": "https://api.github.com/users/jchli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jchli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-06T17:40:13Z",
    "updated_at": "2018-03-06T17:53:05Z",
    "author_association": "NONE",
    "body": "@apolcyn (I'm working with @duelinmarkers on this) We still see the issue on `1.10.pre1` and `pre2`. I've narrowed it down to an issue when we've specified channel_credentials. So, with a ruby client and java server, we've found that we only observe the user-agent growth issue when using SSL and goes away when SSL is removed, everything else the same. This is why the greeter server and client example isn't able to reproduce it.\r\n\r\nSpecifically, making requests and recreating the stub with the following causes the user-agent to grow:\r\n\r\n```\r\nMyService::Stub.new(\r\n  'localhost:50051',\r\n  GRPC::Core::ChannelCredentials.new(certs),\r\n)\r\n```\r\n\r\nAnd the following without SSL doesn't:\r\n\r\n```\r\nMyService::Stub.new(\r\n  'localhost:50051',\r\n  :this_channel_is_insecure,\r\n)\r\n```\r\n\r\nTo clarify, every call to `Stub.new` prefixes an additional grpc version header to the subsequent request. So, if we invoke `Stub.new` three times, then we see that the next request will add the `grpc-ruby/1.9.1` prefix three times."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/371936165",
    "html_url": "https://github.com/grpc/grpc/issues/14477#issuecomment-371936165",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14477",
    "id": 371936165,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTkzNjE2NQ==",
    "user": {
      "login": "duelinmarkers",
      "id": 9761,
      "node_id": "MDQ6VXNlcjk3NjE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9761?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/duelinmarkers",
      "html_url": "https://github.com/duelinmarkers",
      "followers_url": "https://api.github.com/users/duelinmarkers/followers",
      "following_url": "https://api.github.com/users/duelinmarkers/following{/other_user}",
      "gists_url": "https://api.github.com/users/duelinmarkers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/duelinmarkers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/duelinmarkers/subscriptions",
      "organizations_url": "https://api.github.com/users/duelinmarkers/orgs",
      "repos_url": "https://api.github.com/users/duelinmarkers/repos",
      "events_url": "https://api.github.com/users/duelinmarkers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/duelinmarkers/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-09T20:27:32Z",
    "updated_at": "2018-03-09T20:48:47Z",
    "author_association": "NONE",
    "body": "We tracked this down to (1) the fact that we're reusing the same `channel_args` Hash to create each stub and (2) this code that mutates the input `channel_args` each time a new stub is created.\r\n\r\nhttps://github.com/grpc/grpc/blob/59ea0ae3ebcca0aef5a15c5aa5b4d27b7f3fc9c4/src/ruby/lib/grpc/generic/client_stub.rb#L38-L43\r\n\r\nI think it would be best for the grpc library to `channel_args.dup` before mutating it in `setup_channel`. If others agree we can submit a PR for this. For now we'll work around it by `.dup`ing the `channel_args` from our config when creating new stubs."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/371992526",
    "html_url": "https://github.com/grpc/grpc/issues/14477#issuecomment-371992526",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14477",
    "id": 371992526,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTk5MjUyNg==",
    "user": {
      "login": "apolcyn",
      "id": 9566254,
      "node_id": "MDQ6VXNlcjk1NjYyNTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9566254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apolcyn",
      "html_url": "https://github.com/apolcyn",
      "followers_url": "https://api.github.com/users/apolcyn/followers",
      "following_url": "https://api.github.com/users/apolcyn/following{/other_user}",
      "gists_url": "https://api.github.com/users/apolcyn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apolcyn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apolcyn/subscriptions",
      "organizations_url": "https://api.github.com/users/apolcyn/orgs",
      "repos_url": "https://api.github.com/users/apolcyn/repos",
      "events_url": "https://api.github.com/users/apolcyn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apolcyn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-10T01:48:59Z",
    "updated_at": "2018-03-10T01:48:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "@duelinmarkers thanks for tracking this down. I agree that this API could be made safer by duping the channel args that are passed into it, but I'm not jumping on it just yet since I'm wondering if this kind of thing could break anyone.\r\n\r\nHowever I <i>think</i> that duping the channel args internally is non-breaking, because it looks like the only thing it would prevent is the case when someone <i>wanted</i> their using string to get a `\" grpc-ruby/#{VERSION}\"` added to it on each new stub, which is unlikely."
  }
]
