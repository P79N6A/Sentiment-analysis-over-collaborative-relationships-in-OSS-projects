[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/324144859",
    "html_url": "https://github.com/grpc/grpc/issues/12201#issuecomment-324144859",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12201",
    "id": 324144859,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNDE0NDg1OQ==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-22T20:38:14Z",
    "updated_at": "2017-08-22T20:38:14Z",
    "author_association": "MEMBER",
    "body": "This analysis looks plausible to me.  However, neither the `h2_http_proxy` fixture (which I wrote) nor the `max_concurrent_streams` test (which I did not write) seem to be making logically bad assumptions; it's just that the epoll1 code is tickling them in a way that they aren't working in combination.\r\n\r\nAlso, even if we decided that the `h2_http_proxy` code was somehow at fault, I'm not sure what can be done to fix it.  The proxy code needs to do polling, and that polling needs to happen in a different thread; there is simply no way to avoid that with this code.  The only alternative I can see would be to completely replace the current proxy code with an external proxy binary (e.g., maybe run some python implementation in the port server binary).  But it would be a shame to have to do that, because the `h2_http_proxy` fixture has historically helped us identify timing-related problems in the past, and we'd lose that signal if we replaced it.\r\n\r\nI suggest that you talk to whoever wrote the `max_concurrent_streams` test to see if there's a way to change that particular test to avoid the problem."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/324387600",
    "html_url": "https://github.com/grpc/grpc/issues/12201#issuecomment-324387600",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12201",
    "id": 324387600,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNDM4NzYwMA==",
    "user": {
      "login": "sreecha",
      "id": 2754995,
      "node_id": "MDQ6VXNlcjI3NTQ5OTU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2754995?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sreecha",
      "html_url": "https://github.com/sreecha",
      "followers_url": "https://api.github.com/users/sreecha/followers",
      "following_url": "https://api.github.com/users/sreecha/following{/other_user}",
      "gists_url": "https://api.github.com/users/sreecha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sreecha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sreecha/subscriptions",
      "organizations_url": "https://api.github.com/users/sreecha/orgs",
      "repos_url": "https://api.github.com/users/sreecha/repos",
      "events_url": "https://api.github.com/users/sreecha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sreecha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-23T16:20:04Z",
    "updated_at": "2017-08-23T16:20:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, neither the proxy fixture nor the test is making unreasonable assumptions. \r\n\r\nThe problem here is that the proxy fixtures (not just h2_http_proxy,the other proxy fixtures too), are assuming that their pollsets are isolated from the tests' pollsets. This was an incorrect assumption - even though it was true until epoll1..\r\n\r\nLooking at [gen_build_yaml.py](https://github.com/grpc/grpc/blob/master/test/core/end2end/gen_build_yaml.py), i see that every fixture has a `includes_proxy` attribute (default `False`) and every test has a `proxyable` attribute which if set to `False` will not run the test against proxy fixtures.\r\n\r\n`h2_http2_proxy` does not have `includes_proxy = True`.  I thought this was ok since unlike other proxies, the http proxy works transparently without the client/server's knowledge (and thereby should work with every test). \r\n\r\n- May be we should set `include_proxy` to `True` for `h2_http_proxy` ? \r\n- `max_concurrent_streams` test could be rewritten (i think..haven't put thought in to it) but unfortunately I do not have time at the moment to do this in a reasonable timeframe. I will ask around if someone can take this .."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/324395365",
    "html_url": "https://github.com/grpc/grpc/issues/12201#issuecomment-324395365",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12201",
    "id": 324395365,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNDM5NTM2NQ==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-23T16:48:35Z",
    "updated_at": "2017-08-23T16:48:35Z",
    "author_association": "MEMBER",
    "body": "I don't think it makes sense to apply the same attribute for a gRPC-level proxy as for a TCP-level proxy.  They are two totally different things, and just because something will not work with a gRPC-level proxy does not mean that it won't work with a TCP-level proxy (as evidenced by all of the tests that currently run in `h2_http_proxy` but not in `h2_proxy`)."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/324397203",
    "html_url": "https://github.com/grpc/grpc/issues/12201#issuecomment-324397203",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12201",
    "id": 324397203,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNDM5NzIwMw==",
    "user": {
      "login": "sreecha",
      "id": 2754995,
      "node_id": "MDQ6VXNlcjI3NTQ5OTU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2754995?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sreecha",
      "html_url": "https://github.com/sreecha",
      "followers_url": "https://api.github.com/users/sreecha/followers",
      "following_url": "https://api.github.com/users/sreecha/following{/other_user}",
      "gists_url": "https://api.github.com/users/sreecha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sreecha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sreecha/subscriptions",
      "organizations_url": "https://api.github.com/users/sreecha/orgs",
      "repos_url": "https://api.github.com/users/sreecha/repos",
      "events_url": "https://api.github.com/users/sreecha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sreecha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-23T16:55:21Z",
    "updated_at": "2017-08-23T16:55:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "makes sense. I'll ask someone else to work on fixing `max_concurrent_streams` test"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/325806617",
    "html_url": "https://github.com/grpc/grpc/issues/12201#issuecomment-325806617",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12201",
    "id": 325806617,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNTgwNjYxNw==",
    "user": {
      "login": "yashykt",
      "id": 4181124,
      "node_id": "MDQ6VXNlcjQxODExMjQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4181124?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yashykt",
      "html_url": "https://github.com/yashykt",
      "followers_url": "https://api.github.com/users/yashykt/followers",
      "following_url": "https://api.github.com/users/yashykt/following{/other_user}",
      "gists_url": "https://api.github.com/users/yashykt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yashykt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yashykt/subscriptions",
      "organizations_url": "https://api.github.com/users/yashykt/orgs",
      "repos_url": "https://api.github.com/users/yashykt/repos",
      "events_url": "https://api.github.com/users/yashykt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yashykt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-29T21:15:58Z",
    "updated_at": "2017-08-29T21:17:18Z",
    "author_association": "MEMBER",
    "body": "This does not seem like a bug in the max_concurrent_test, but instead it seems like a bug on the server side. Currently, the server closes the stream due to there being no more streams available, which should not be the case since the previous stream should be closed and removed by the server at this point.\r\n\r\nAlso, currently, the client receives the result on the completion queue as an OP_COMPLETE success instead of an error."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/329253505",
    "html_url": "https://github.com/grpc/grpc/issues/12201#issuecomment-329253505",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12201",
    "id": 329253505,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTI1MzUwNQ==",
    "user": {
      "login": "yashykt",
      "id": 4181124,
      "node_id": "MDQ6VXNlcjQxODExMjQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4181124?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yashykt",
      "html_url": "https://github.com/yashykt",
      "followers_url": "https://api.github.com/users/yashykt/followers",
      "following_url": "https://api.github.com/users/yashykt/following{/other_user}",
      "gists_url": "https://api.github.com/users/yashykt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yashykt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yashykt/subscriptions",
      "organizations_url": "https://api.github.com/users/yashykt/orgs",
      "repos_url": "https://api.github.com/users/yashykt/repos",
      "events_url": "https://api.github.com/users/yashykt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yashykt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-13T18:19:22Z",
    "updated_at": "2017-09-13T18:19:22Z",
    "author_association": "MEMBER",
    "body": "Fixed in #12463"
  }
]
