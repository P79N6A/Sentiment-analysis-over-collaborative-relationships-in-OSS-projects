[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/427121201",
    "html_url": "https://github.com/grpc/grpc/issues/16779#issuecomment-427121201",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16779",
    "id": 427121201,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzEyMTIwMQ==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-04T18:23:51Z",
    "updated_at": "2018-10-04T18:23:51Z",
    "author_association": "MEMBER",
    "body": "That part of the code generation is handled by `protoc`, which is maintained in this repository: https://github.com/protocolbuffers/protobuf. The version of `protoc` distributed in `grpc-tools` is fairly old at this point, but you will still probably get more information if you file an issue there. If you do, it will probably help to include the full command line you used to generate that code."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/427124330",
    "html_url": "https://github.com/grpc/grpc/issues/16779#issuecomment-427124330",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16779",
    "id": 427124330,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzEyNDMzMA==",
    "user": {
      "login": "F483",
      "id": 977605,
      "node_id": "MDQ6VXNlcjk3NzYwNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/977605?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/F483",
      "html_url": "https://github.com/F483",
      "followers_url": "https://api.github.com/users/F483/followers",
      "following_url": "https://api.github.com/users/F483/following{/other_user}",
      "gists_url": "https://api.github.com/users/F483/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/F483/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/F483/subscriptions",
      "organizations_url": "https://api.github.com/users/F483/orgs",
      "repos_url": "https://api.github.com/users/F483/repos",
      "events_url": "https://api.github.com/users/F483/events{/privacy}",
      "received_events_url": "https://api.github.com/users/F483/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-04T18:33:21Z",
    "updated_at": "2018-10-04T18:33:21Z",
    "author_association": "NONE",
    "body": "I linked the entire test project, the command is listed in package.json, its the same as provided in the example code.\r\n\r\nI also noticed that `map<string, string> details = 2; ` compiles to `detailsMap: Array<[string, string]>`.\r\n\r\nThe whole point of an API is to have clearly defined names to access services. Having the library changing the names you provide is clearly a bug.\r\n\r\nI have lots of existing data structures I want to transfer and if I have to build an extra adapter layer around every grpc message, I might as well not use it.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/427141823",
    "html_url": "https://github.com/grpc/grpc/issues/16779#issuecomment-427141823",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/16779",
    "id": 427141823,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzE0MTgyMw==",
    "user": {
      "login": "nicolasnoble",
      "id": 7281574,
      "node_id": "MDQ6VXNlcjcyODE1NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7281574?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nicolasnoble",
      "html_url": "https://github.com/nicolasnoble",
      "followers_url": "https://api.github.com/users/nicolasnoble/followers",
      "following_url": "https://api.github.com/users/nicolasnoble/following{/other_user}",
      "gists_url": "https://api.github.com/users/nicolasnoble/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nicolasnoble/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nicolasnoble/subscriptions",
      "organizations_url": "https://api.github.com/users/nicolasnoble/orgs",
      "repos_url": "https://api.github.com/users/nicolasnoble/repos",
      "events_url": "https://api.github.com/users/nicolasnoble/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nicolasnoble/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-04T19:31:04Z",
    "updated_at": "2018-10-04T19:31:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'd like to insist on what @murgatroid99 is saying: this isn't really anything that gRPC has any control on, which is the reason I'm going to close this issue. We just happen to showcase how to use protobuf in our code and examples because it's another Google product, but it's not mandatory, You can in fact send plain json and bypass the whole serialization layer if you wish, or you can use another serialization protocol. Or in other words, this issue really doesn't belongs in the grpc, but as @murgatroid99 said, it belongs in protobuf, as there's nothing we could change in our codebase that could affect what you're (reasonably) complaining about. Any meaningful change to address your concern would be done in protobuf.\r\n\r\nI'd also add that for nodejs, we're showcasing both protoc and protobufjs as serialization layers, and protobufjs won't rename your fields the way protoc does. See https://github.com/grpc/grpc/tree/master/examples/node/dynamic_codegen for an example, and https://www.npmjs.com/package/protobufjs for an description of this serialization layer."
  }
]
