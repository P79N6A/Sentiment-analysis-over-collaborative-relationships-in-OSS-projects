[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/243949068",
    "html_url": "https://github.com/grpc/grpc/issues/7945#issuecomment-243949068",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7945",
    "id": 243949068,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Mzk0OTA2OA==",
    "user": {
      "login": "makdharma",
      "id": 17325098,
      "node_id": "MDQ6VXNlcjE3MzI1MDk4",
      "avatar_url": "https://avatars0.githubusercontent.com/u/17325098?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/makdharma",
      "html_url": "https://github.com/makdharma",
      "followers_url": "https://api.github.com/users/makdharma/followers",
      "following_url": "https://api.github.com/users/makdharma/following{/other_user}",
      "gists_url": "https://api.github.com/users/makdharma/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/makdharma/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/makdharma/subscriptions",
      "organizations_url": "https://api.github.com/users/makdharma/orgs",
      "repos_url": "https://api.github.com/users/makdharma/repos",
      "events_url": "https://api.github.com/users/makdharma/events{/privacy}",
      "received_events_url": "https://api.github.com/users/makdharma/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-01T01:16:50Z",
    "updated_at": "2016-11-07T21:34:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "gRPC Caching Design\n\nAuthor: @makdharma\n\nState: draft\n\n# Contents\n\n[[TOC]]\n\n# Background\n\nCaching of resources is used in HTTP to improve performance of websites and web-apps. gRPC is an alternative for HTTP/REST with many clear advantages. However lack of caching support in gRPC is a hindrance to adoption where caching performance matters. This document evaluates options and suggests an approach to mitigate this disadvantage.\n\n## Design and Implementation Goals\n\n### Implementation Goals\n1. Caching solution for last mile of compute (mobile, desktop, web)\n2. Reducing load on the server by using caching where appropriate\n3. Improve user experience by reducing latency of fetch requests\n\n### Design goals\n\nWe would like the design choice to accommodate following future goals. Actual timeline to implement these will be driven by customer requirements.\n1. Offline operation\n2. Implementation of on-device (private) cache\n3. Caching in the data center between VMs\n4. Streaming RPC support\n\n# Potential solutions\n\n### Terminology\n\n**_gRPC request_** originates from the **_client application_**. Client application may maintain an **_on-device private cache_**. The requests traverses through various **_proxies_** and reaches the **_reverse proxy_** (GFE). **_Reverse proxy_** sends the request to the **_Application server_**. Application server sends a response. The response may be cached by any and all proxies on the response path.\n\n### Option 1 - HTTP Cache\n\ngRPC is based on HTTP/2 which already supports caching. Use HTTP’s caching mechanism by using GET instead of POST verb for gRPC request. Typical interaction will follow these steps:\n1. Client application starts a gRPC call\n2. gRPC library uses GET instead of POST\n   1. The request payload is base64 encoded and sent as query string\n3. A proxy looks for the response in the cache.\n   1. If found in the cache, the response is sent by the proxy directly\n   2. Else, the request is forwarded to the server and the response is cached\n4. gRPC library returns the response to the application.\n\n### Option 2 - Native Cache\n\nImplement a native cache in the proxy that understands gRPC protocol. Add a component to the proxy that can parse gRPC requests, and generate native gRPC response. Typical interaction will follow these steps:\n1. Client application starts a gRPC call\n2. gRPC client library computes a cache lookup key and sends it as part of HTTP header\n3. A proxy parses the request. If cache lookup key exists, proxy uses it to search the cache.\n   1. If found in the cache, the response is sent by the proxy directly\n   2. Else, the request is forwarded to the server and the response is cached\n4. gRPC library returns the response to the application.\n\n### Other options investigated\n1. GET with payload - Possible but non standard. Not supported by GFE.\n2. SEARCH/FETCH/REPORT verbs - These features are not widely adopted. It might become a feasible option in future. When that happens we can deprecate GET based caching.\n3. Cacheable POST - It is possible to cache result of a POST request which can be subsequently accessed by a GET request with the same parameters as POST. This looks appealing but involves complex design for choosing between POST or GET on the client.\n\n### Pros and Cons\n\nHTTP Cache Pros:\n1. HTTP standard compliant\n2. Works everywhere (No Google specific changes)\n3. Make use of mature and well understood technology\n\nHTTP Cache Cons:\n1. Base64 encoding increases request size, leading to inefficient use of upstream bandwidth.\n2. Proxies impose limit on URI size. GET requests exceeding the URI Size limit will fail. The URI size limit is non-standard and depends on proxy configuration. For example, nginx defaults to [8K](http://nginx.org/en/docs/http/ngx_http_core_module.html#large_client_header_buffers).\n\nNative gRPC Cache Pros:\n1. No limitation on the URI size\n2. Efficient use of bandwidth, because no need to base64 encoding.\n\nNative gRPC Cache Cons:\n1. Similar to, but different solution than HTTP caching.\n2. Needs to be implemented for all major proxies.\n\nGiven the open source adoption as a stated goal, HTTP caching based solution seems like the right choice. The two cons - size bloat and limitation on URI size - are problems in theory but not in practice. Typical use case of caching in gRPC is for fetching static resources. Such requests don’t have lot of parameters, therefore not likely to hit the URI size limitation.\n\nRest of this document explores the HTTP Caching solution.\n\n## Design Goals\n\nThe choice of HTTP Caching works well for the design goals.\n1. Offline operation: Having on-device cache is the enabler for offline operation.\n2. Implementation of on-device (private) cache:  Cache control headers have built in support for both on-device (private) and proxy (public) caches. Implementation of a on-device cache is out of scope for this document.\n3. Caching in the data center between VMs: There is nothing special about this use case compared with a standard client-server caching use case, except maybe the support for streaming RPC caching.\n4. Streaming RPC caching support: Works out of the box for half-duplex RPCs. Typical use case is that of server streaming for large file fetch. A proxy can cache all responses in the stream and send it as one response when it sees a GET request.\n\n## Caching Considerations\n\n### Cacheable methods\n\nOnly the service author knows\n1. Whether to cache the response at all,\n2. For how long the response should be cached\n\nIf a method is deemed [safe and idempotent](https://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html#sec9.1) the response can be cached. The proposal is as follows:\n1. Service author marks methods as **_cacheable_** using proto annotation\n2. gRPC client will use GET instead of POST for cacheable gRPC requests\n3. Expose an API in gRPC server to set the cache headers at runtime.\n4. Expose an API in the client to turn on/off cacheable requests, and acceptable cache age limit.\n\n### RPC failure and retry mechanism\n\nAn RPC using GET can fail in ways different from POST listed below. The reasons for failure may be transient or nontransient (such as configuration problems).:\n1. Transient - Cache warnings that are treated as errors\n2. Nontransient - Request exceeds maximum size\n3. Nontransient - gRPC server does not support caching\n\nHow to react to failures? Options:\n1. Automatic retry with POST (disable caching)\n2. Let the application decide. Application might retry the RPC for transient failures, or disable caching for non-transient failures. A binary-wide API is provided to disable caching.\n\nProposal: Go with Option 2 in the interest of giving maximum visibility and control to the application.\n\n### API Additions\n\nImplementation details TBD. \n\n#### Server side API addition\n1. Function to Set cache control header. If Server doesn’t call this API explicitly then caching is disabled for this method by setting appropriate cache control headers. For example, Cache-Control: no-cache, no-store, must-revalidate\n\n#### Client side API addition\n1. Function to disable caching completely for all methods. The actual API signature will depend upon  wrapped language implementation.\n\n### Cache validators\n\nCache validators such as ETag (entity tag) or \"if-modified-since\" or “last-modified” header fields are useful to validate a locally stored response. Since there is no on-device cache, cache validators are not used by gRPC client. It is however possible that a caching proxy along the request path may use validator. \n\n### Cache Control Headers\n\n#### Cache-Control headers set by client\n1. max-age: Indicates that the client is willing to accept a response whose age is no greater than the specified time in seconds. The value for max-age comes from application. It is set on per request.\n\n#### Cache-Control headers set by server\n1. public:\n2. must-revalidate: When the must-revalidate directive is present in a response received by a cache, that cache MUST NOT use the entry after it becomes stale to respond to a subsequent request without first revalidating it with the origin server. (I.e., the cache MUST do an end-to-end revalidation every time, if, based solely on the origin server's Expires or max-age value, the cached response is stale.) We do not want third party caches along the way to make their own judgment about freshness of a cache entry. Server gets the final word in determining when cache entry needs to be thrown out.\n3. no-transform: Therefore, if a message includes the no-transform directive, an intermediate cache or proxy MUST NOT change those headers that are listed in section [13.5.2](https://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html#sec13.5.2) as being subject to the no-transform directive. This implies that the cache or proxy MUST NOT change any aspect of the entity-body that is specified by these headers, including the value of the entity-body itself. This is just to be on the safe side.\n4. no-cache: This will disable caching of a response.\n\n### Cache Warnings and Errors\n\nGiven the strict requirements set by client and server cache control headers, we do not expect to receive [warnings](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.46) in the normal course of operation. Any warning is treated as error and the RPC fails.\n\n### Security and Privacy\n\nOpen question: Should caching be allowed for authenticated request responses? Proposed answer: No. This is to avoid sensitive information cached by mistake in public caches. It can be a great follow on feature though as the solution matures.\n\n### Compatibility\n\n#### Newer server (with caching support) and older client (no caching support)\n\nIf the client is old and does not support caching, then nothing changes from the client’s perspective. Client never originates a GET request and server never responds with cache control headers.\n\n#### Older server (no caching support) and newer client (with caching support)\n\nClient will generate GET request for cacheable methods. Server will respond with error. Application will disable caching.\n\n## Proposed Method Annotations\n\nENUM_IDEMPOTENT, ENUM_IDEMPOTENT_AND_SAFE are enumerated values.\n1. Idempotency\n   1. Syntax: option method_flags = ENUM_IDEMPOTENT;\n   2. Description: Any method that can be called more than once with the same result.\n2. Safe\n   1. Syntax: option method_flags = ENUM_IDEMPOTENT_AND_SAFE;\n   2. Description: Any idempotent method without side effects.\n\n### Expected behavior\n\n<table>\n  <tr>\n    <td>Safe</td>\n    <td>Idempotent</td>\n    <td>GRPC behavior</td>\n    <td>Use Case</td>\n  </tr>\n  <tr>\n    <td>Yes</td>\n    <td>-</td>\n    <td>Client: Maybe use GET verb.\nServer: Enable caching of response by adding cache control headers in the response</td>\n    <td>Use this annotation to designate a method cacheable.</td>\n  </tr>\n  <tr>\n    <td>No</td>\n    <td>Yes</td>\n    <td>Client: Maybe use PUT verb.\nServer: No change in behavior. PUT request is processed just like a POST request.</td>\n    <td>Use this annotation for enabling 0-RTT (QUIC) on clients using Cronet stack</td>\n  </tr>\n  <tr>\n    <td>No</td>\n    <td>No</td>\n    <td>Client: no change\nServer: no change</td>\n    <td>This is the default gRPC implementation</td>\n  </tr>\n</table>\n\n### Example\n\n``` proto\nservice Greeter {\n  // Sends a greeting\n  rpc SayHello (HelloRequest) returns (HelloReply) {\n    option method_flags = ENUM_IDEMPOTENT_AND_SAFE;\n  }\n}\n```\n\n## GRPC Wire Protocol Change\n- Request → (Request-Headers *Delimited-Message / Cachable-Request-Headers) EOS\n- Cachable-Request-Headers → Request-Headers *Encoded-Message\n- Call-Definition → Method Scheme Path TE [Authority] [Timeout] [Content-Type] [Message-Type] [Message-Encoding] [Message-Accept-Encoding] [User-Agent][Cache-Control]\n- method → \":method (POST/GET)\"\n- Cache-Control → \"max-age\" / [“public” “must-revalidate” “no-transform”]\n- Encoded-Request → \"grpc-encoded-request\" {_base64 encoded value_}\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/316679745",
    "html_url": "https://github.com/grpc/grpc/issues/7945#issuecomment-316679745",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7945",
    "id": 316679745,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjY3OTc0NQ==",
    "user": {
      "login": "rvolosatovs",
      "id": 12877905,
      "node_id": "MDQ6VXNlcjEyODc3OTA1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/12877905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rvolosatovs",
      "html_url": "https://github.com/rvolosatovs",
      "followers_url": "https://api.github.com/users/rvolosatovs/followers",
      "following_url": "https://api.github.com/users/rvolosatovs/following{/other_user}",
      "gists_url": "https://api.github.com/users/rvolosatovs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rvolosatovs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rvolosatovs/subscriptions",
      "organizations_url": "https://api.github.com/users/rvolosatovs/orgs",
      "repos_url": "https://api.github.com/users/rvolosatovs/repos",
      "events_url": "https://api.github.com/users/rvolosatovs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rvolosatovs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-20T11:49:09Z",
    "updated_at": "2017-07-20T11:49:09Z",
    "author_association": "NONE",
    "body": "any progress on this?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/317110738",
    "html_url": "https://github.com/grpc/grpc/issues/7945#issuecomment-317110738",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7945",
    "id": 317110738,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzExMDczOA==",
    "user": {
      "login": "makdharma",
      "id": 17325098,
      "node_id": "MDQ6VXNlcjE3MzI1MDk4",
      "avatar_url": "https://avatars0.githubusercontent.com/u/17325098?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/makdharma",
      "html_url": "https://github.com/makdharma",
      "followers_url": "https://api.github.com/users/makdharma/followers",
      "following_url": "https://api.github.com/users/makdharma/following{/other_user}",
      "gists_url": "https://api.github.com/users/makdharma/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/makdharma/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/makdharma/subscriptions",
      "organizations_url": "https://api.github.com/users/makdharma/orgs",
      "repos_url": "https://api.github.com/users/makdharma/repos",
      "events_url": "https://api.github.com/users/makdharma/events{/privacy}",
      "received_events_url": "https://api.github.com/users/makdharma/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-21T20:57:31Z",
    "updated_at": "2017-07-21T20:57:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi - The code is mostly checked in and working. what is your use case? what languages will you be using for server and client?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/317184600",
    "html_url": "https://github.com/grpc/grpc/issues/7945#issuecomment-317184600",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7945",
    "id": 317184600,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzE4NDYwMA==",
    "user": {
      "login": "rvolosatovs",
      "id": 12877905,
      "node_id": "MDQ6VXNlcjEyODc3OTA1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/12877905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rvolosatovs",
      "html_url": "https://github.com/rvolosatovs",
      "followers_url": "https://api.github.com/users/rvolosatovs/followers",
      "following_url": "https://api.github.com/users/rvolosatovs/following{/other_user}",
      "gists_url": "https://api.github.com/users/rvolosatovs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rvolosatovs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rvolosatovs/subscriptions",
      "organizations_url": "https://api.github.com/users/rvolosatovs/orgs",
      "repos_url": "https://api.github.com/users/rvolosatovs/repos",
      "events_url": "https://api.github.com/users/rvolosatovs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rvolosatovs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-22T13:45:39Z",
    "updated_at": "2017-07-22T13:45:39Z",
    "author_association": "NONE",
    "body": "We would use it in https://github.com/TheThingsNetwork/ttn, an IoT network.\r\nBoth client and server use Go.\r\ncc @htdvisser"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/317447733",
    "html_url": "https://github.com/grpc/grpc/issues/7945#issuecomment-317447733",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7945",
    "id": 317447733,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzQ0NzczMw==",
    "user": {
      "login": "makdharma",
      "id": 17325098,
      "node_id": "MDQ6VXNlcjE3MzI1MDk4",
      "avatar_url": "https://avatars0.githubusercontent.com/u/17325098?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/makdharma",
      "html_url": "https://github.com/makdharma",
      "followers_url": "https://api.github.com/users/makdharma/followers",
      "following_url": "https://api.github.com/users/makdharma/following{/other_user}",
      "gists_url": "https://api.github.com/users/makdharma/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/makdharma/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/makdharma/subscriptions",
      "organizations_url": "https://api.github.com/users/makdharma/orgs",
      "repos_url": "https://api.github.com/users/makdharma/repos",
      "events_url": "https://api.github.com/users/makdharma/events{/privacy}",
      "received_events_url": "https://api.github.com/users/makdharma/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-24T14:51:18Z",
    "updated_at": "2017-07-24T14:51:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "caching works for Java and C stacks. Go support is not there yet unfortunately. "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/318524947",
    "html_url": "https://github.com/grpc/grpc/issues/7945#issuecomment-318524947",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7945",
    "id": 318524947,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODUyNDk0Nw==",
    "user": {
      "login": "rmichela",
      "id": 167733,
      "node_id": "MDQ6VXNlcjE2NzczMw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/167733?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rmichela",
      "html_url": "https://github.com/rmichela",
      "followers_url": "https://api.github.com/users/rmichela/followers",
      "following_url": "https://api.github.com/users/rmichela/following{/other_user}",
      "gists_url": "https://api.github.com/users/rmichela/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rmichela/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rmichela/subscriptions",
      "organizations_url": "https://api.github.com/users/rmichela/orgs",
      "repos_url": "https://api.github.com/users/rmichela/repos",
      "events_url": "https://api.github.com/users/rmichela/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rmichela/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-28T00:42:39Z",
    "updated_at": "2017-07-28T00:42:39Z",
    "author_association": "NONE",
    "body": "When will cache support become available from protoc generated grpc stubs?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/323163141",
    "html_url": "https://github.com/grpc/grpc/issues/7945#issuecomment-323163141",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7945",
    "id": 323163141,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMzE2MzE0MQ==",
    "user": {
      "login": "ejona86",
      "id": 2811396,
      "node_id": "MDQ6VXNlcjI4MTEzOTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2811396?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ejona86",
      "html_url": "https://github.com/ejona86",
      "followers_url": "https://api.github.com/users/ejona86/followers",
      "following_url": "https://api.github.com/users/ejona86/following{/other_user}",
      "gists_url": "https://api.github.com/users/ejona86/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ejona86/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ejona86/subscriptions",
      "organizations_url": "https://api.github.com/users/ejona86/orgs",
      "repos_url": "https://api.github.com/users/ejona86/repos",
      "events_url": "https://api.github.com/users/ejona86/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ejona86/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-17T18:56:39Z",
    "updated_at": "2017-08-17T19:05:02Z",
    "author_association": "MEMBER",
    "body": "It looks like protoc got support with a slightly different syntax than mentioned above:\r\nhttps://github.com/google/protobuf/blob/9e745f7/src/google/protobuf/descriptor.proto#L630\r\n\r\n```proto\r\nservice Greeter {\r\n  // Sends a greeting\r\n  rpc SayHello (HelloRequest) returns (HelloReply) {\r\n    option idempotency_level = NO_SIDE_EFFECTS;\r\n  }\r\n}\r\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/337388544",
    "html_url": "https://github.com/grpc/grpc/issues/7945#issuecomment-337388544",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7945",
    "id": 337388544,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzM4ODU0NA==",
    "user": {
      "login": "dfawley",
      "id": 26072277,
      "node_id": "MDQ6VXNlcjI2MDcyMjc3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26072277?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dfawley",
      "html_url": "https://github.com/dfawley",
      "followers_url": "https://api.github.com/users/dfawley/followers",
      "following_url": "https://api.github.com/users/dfawley/following{/other_user}",
      "gists_url": "https://api.github.com/users/dfawley/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dfawley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dfawley/subscriptions",
      "organizations_url": "https://api.github.com/users/dfawley/orgs",
      "repos_url": "https://api.github.com/users/dfawley/repos",
      "events_url": "https://api.github.com/users/dfawley/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dfawley/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-17T22:08:38Z",
    "updated_at": "2017-10-17T22:08:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "Should this be added as a gRFC in the [proposal repo](https://github.com/grpc/proposal)?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/359392362",
    "html_url": "https://github.com/grpc/grpc/issues/7945#issuecomment-359392362",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7945",
    "id": 359392362,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTM5MjM2Mg==",
    "user": {
      "login": "m-sasha",
      "id": 5230206,
      "node_id": "MDQ6VXNlcjUyMzAyMDY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5230206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/m-sasha",
      "html_url": "https://github.com/m-sasha",
      "followers_url": "https://api.github.com/users/m-sasha/followers",
      "following_url": "https://api.github.com/users/m-sasha/following{/other_user}",
      "gists_url": "https://api.github.com/users/m-sasha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/m-sasha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/m-sasha/subscriptions",
      "organizations_url": "https://api.github.com/users/m-sasha/orgs",
      "repos_url": "https://api.github.com/users/m-sasha/repos",
      "events_url": "https://api.github.com/users/m-sasha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/m-sasha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-22T11:08:24Z",
    "updated_at": "2018-01-22T11:08:24Z",
    "author_association": "NONE",
    "body": "Is there an update on this? Can we start using it if we have Go servers and Android/iOS clients?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/359501563",
    "html_url": "https://github.com/grpc/grpc/issues/7945#issuecomment-359501563",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7945",
    "id": 359501563,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTUwMTU2Mw==",
    "user": {
      "login": "ericgribkoff",
      "id": 5067076,
      "node_id": "MDQ6VXNlcjUwNjcwNzY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5067076?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ericgribkoff",
      "html_url": "https://github.com/ericgribkoff",
      "followers_url": "https://api.github.com/users/ericgribkoff/followers",
      "following_url": "https://api.github.com/users/ericgribkoff/following{/other_user}",
      "gists_url": "https://api.github.com/users/ericgribkoff/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ericgribkoff/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ericgribkoff/subscriptions",
      "organizations_url": "https://api.github.com/users/ericgribkoff/orgs",
      "repos_url": "https://api.github.com/users/ericgribkoff/repos",
      "events_url": "https://api.github.com/users/ericgribkoff/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ericgribkoff/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-22T17:31:11Z",
    "updated_at": "2018-01-22T17:31:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "@m-sasha This feature is experimental but operational for Android and iOS clients (see our interop test clients for examples of configuring RPCs to use GET). As far as I know, responding to GET requests is currently only supported by C++ on the server side. We will be converting this into a gRFC in the next couple weeks, at which point we will be better able to estimate when support will be available for servers in the other languages."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/359503850",
    "html_url": "https://github.com/grpc/grpc/issues/7945#issuecomment-359503850",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7945",
    "id": 359503850,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTUwMzg1MA==",
    "user": {
      "login": "ejona86",
      "id": 2811396,
      "node_id": "MDQ6VXNlcjI4MTEzOTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2811396?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ejona86",
      "html_url": "https://github.com/ejona86",
      "followers_url": "https://api.github.com/users/ejona86/followers",
      "following_url": "https://api.github.com/users/ejona86/following{/other_user}",
      "gists_url": "https://api.github.com/users/ejona86/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ejona86/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ejona86/subscriptions",
      "organizations_url": "https://api.github.com/users/ejona86/orgs",
      "repos_url": "https://api.github.com/users/ejona86/repos",
      "events_url": "https://api.github.com/users/ejona86/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ejona86/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-22T17:38:29Z",
    "updated_at": "2018-01-22T17:38:29Z",
    "author_association": "MEMBER",
    "body": "@m-sasha, to be clear, \"experimental\" means we are still free to do whatever with it, including changing the protocol. You can play with it and provide feedback, but it shouldn't get anywhere near production."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/359775022",
    "html_url": "https://github.com/grpc/grpc/issues/7945#issuecomment-359775022",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7945",
    "id": 359775022,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTc3NTAyMg==",
    "user": {
      "login": "m-sasha",
      "id": 5230206,
      "node_id": "MDQ6VXNlcjUyMzAyMDY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5230206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/m-sasha",
      "html_url": "https://github.com/m-sasha",
      "followers_url": "https://api.github.com/users/m-sasha/followers",
      "following_url": "https://api.github.com/users/m-sasha/following{/other_user}",
      "gists_url": "https://api.github.com/users/m-sasha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/m-sasha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/m-sasha/subscriptions",
      "organizations_url": "https://api.github.com/users/m-sasha/orgs",
      "repos_url": "https://api.github.com/users/m-sasha/repos",
      "events_url": "https://api.github.com/users/m-sasha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/m-sasha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-23T12:25:25Z",
    "updated_at": "2018-01-23T12:25:25Z",
    "author_association": "NONE",
    "body": "I understand. Thanks!"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/414067871",
    "html_url": "https://github.com/grpc/grpc/issues/7945#issuecomment-414067871",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7945",
    "id": 414067871,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDA2Nzg3MQ==",
    "user": {
      "login": "yazsh",
      "id": 26890090,
      "node_id": "MDQ6VXNlcjI2ODkwMDkw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/26890090?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yazsh",
      "html_url": "https://github.com/yazsh",
      "followers_url": "https://api.github.com/users/yazsh/followers",
      "following_url": "https://api.github.com/users/yazsh/following{/other_user}",
      "gists_url": "https://api.github.com/users/yazsh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yazsh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yazsh/subscriptions",
      "organizations_url": "https://api.github.com/users/yazsh/orgs",
      "repos_url": "https://api.github.com/users/yazsh/repos",
      "events_url": "https://api.github.com/users/yazsh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yazsh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-18T15:54:41Z",
    "updated_at": "2018-08-18T15:54:41Z",
    "author_association": "NONE",
    "body": "Has there been any update on this? \r\n\r\nIn particular for the golang client implementation?  My team would be very interested in using it."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/415751801",
    "html_url": "https://github.com/grpc/grpc/issues/7945#issuecomment-415751801",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7945",
    "id": 415751801,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTc1MTgwMQ==",
    "user": {
      "login": "phemmer",
      "id": 1826947,
      "node_id": "MDQ6VXNlcjE4MjY5NDc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1826947?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/phemmer",
      "html_url": "https://github.com/phemmer",
      "followers_url": "https://api.github.com/users/phemmer/followers",
      "following_url": "https://api.github.com/users/phemmer/following{/other_user}",
      "gists_url": "https://api.github.com/users/phemmer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/phemmer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/phemmer/subscriptions",
      "organizations_url": "https://api.github.com/users/phemmer/orgs",
      "repos_url": "https://api.github.com/users/phemmer/repos",
      "events_url": "https://api.github.com/users/phemmer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/phemmer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-24T13:01:24Z",
    "updated_at": "2018-08-24T14:06:23Z",
    "author_association": "NONE",
    "body": "Just to throw in another case for consideration. We're considering whether it would be possible to use HTTP/2 server-push for gRPC services. The idea being the typical HTTP/2 server-push where we want to preempt the client asking for related resources.\r\nThus this is very tightly related to the caching issue, as the pushed message sits in a \"push cache\" on the client, and needs to be uniquely identified by the URL. Also in the case of cross-service server-pushes, we might identify the related resource in a `Link` header, and want the intermediary proxy to transform this `Link` header into a server push (if the other service identified in the link sits behind the proxy), and thus the URL needs to uniquely identify the resource, and instruct how to build the gRPC request (but would assume the proxy has a copy of the proto spec).\r\n\r\nThe fortunate thing is that the \"Option 1 - HTTP Cache\" solution would address this just fine, and this appears to be the solution being pursued.\r\n\r\nSo I don't think any action is needed here, just wanted to mention the use case in case it does have any impact to the implementation."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/417694123",
    "html_url": "https://github.com/grpc/grpc/issues/7945#issuecomment-417694123",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7945",
    "id": 417694123,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzY5NDEyMw==",
    "user": {
      "login": "phemmer",
      "id": 1826947,
      "node_id": "MDQ6VXNlcjE4MjY5NDc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1826947?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/phemmer",
      "html_url": "https://github.com/phemmer",
      "followers_url": "https://api.github.com/users/phemmer/followers",
      "following_url": "https://api.github.com/users/phemmer/following{/other_user}",
      "gists_url": "https://api.github.com/users/phemmer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/phemmer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/phemmer/subscriptions",
      "organizations_url": "https://api.github.com/users/phemmer/orgs",
      "repos_url": "https://api.github.com/users/phemmer/repos",
      "events_url": "https://api.github.com/users/phemmer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/phemmer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-31T15:08:11Z",
    "updated_at": "2018-08-31T15:15:13Z",
    "author_association": "NONE",
    "body": "Oh, and for this:\r\n\r\n> Open question: Should caching be allowed for authenticated request responses? Proposed answer: No. This is to avoid sensitive information cached by mistake in public caches. It can be a great follow on feature though as the solution matures.\r\n\r\nThis is the purpose of the [`private`](https://tools.ietf.org/html/rfc7234#section-5.2.2.6) and [`proxy-revalidate`](https://tools.ietf.org/html/rfc7234#section-5.2.2.7) headers. \r\nThese would allow the response to be cached locally on the client, but not by an intermediary (shared) proxy."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/417698327",
    "html_url": "https://github.com/grpc/grpc/issues/7945#issuecomment-417698327",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7945",
    "id": 417698327,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzY5ODMyNw==",
    "user": {
      "login": "ejona86",
      "id": 2811396,
      "node_id": "MDQ6VXNlcjI4MTEzOTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2811396?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ejona86",
      "html_url": "https://github.com/ejona86",
      "followers_url": "https://api.github.com/users/ejona86/followers",
      "following_url": "https://api.github.com/users/ejona86/following{/other_user}",
      "gists_url": "https://api.github.com/users/ejona86/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ejona86/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ejona86/subscriptions",
      "organizations_url": "https://api.github.com/users/ejona86/orgs",
      "repos_url": "https://api.github.com/users/ejona86/repos",
      "events_url": "https://api.github.com/users/ejona86/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ejona86/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-31T15:21:49Z",
    "updated_at": "2018-08-31T15:21:49Z",
    "author_association": "MEMBER",
    "body": "`private` is more appropriate than `proxy-revalidate`, because we know we don't really optimize the revalidate case. So it would be better for the proxy to avoid storing the value in the cache at all. With `proxy-revalidate` the proxy still caches the response."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/430513826",
    "html_url": "https://github.com/grpc/grpc/issues/7945#issuecomment-430513826",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7945",
    "id": 430513826,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDUxMzgyNg==",
    "user": {
      "login": "SteveDunn",
      "id": 263416,
      "node_id": "MDQ6VXNlcjI2MzQxNg==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/263416?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SteveDunn",
      "html_url": "https://github.com/SteveDunn",
      "followers_url": "https://api.github.com/users/SteveDunn/followers",
      "following_url": "https://api.github.com/users/SteveDunn/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveDunn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SteveDunn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveDunn/subscriptions",
      "organizations_url": "https://api.github.com/users/SteveDunn/orgs",
      "repos_url": "https://api.github.com/users/SteveDunn/repos",
      "events_url": "https://api.github.com/users/SteveDunn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SteveDunn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-17T07:04:54Z",
    "updated_at": "2018-10-17T07:04:54Z",
    "author_association": "NONE",
    "body": "Are we any closer to getting this for C#?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/433891270",
    "html_url": "https://github.com/grpc/grpc/issues/7945#issuecomment-433891270",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7945",
    "id": 433891270,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzg5MTI3MA==",
    "user": {
      "login": "mikaelstaldal",
      "id": 716104,
      "node_id": "MDQ6VXNlcjcxNjEwNA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/716104?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikaelstaldal",
      "html_url": "https://github.com/mikaelstaldal",
      "followers_url": "https://api.github.com/users/mikaelstaldal/followers",
      "following_url": "https://api.github.com/users/mikaelstaldal/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikaelstaldal/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikaelstaldal/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikaelstaldal/subscriptions",
      "organizations_url": "https://api.github.com/users/mikaelstaldal/orgs",
      "repos_url": "https://api.github.com/users/mikaelstaldal/repos",
      "events_url": "https://api.github.com/users/mikaelstaldal/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikaelstaldal/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-29T12:26:58Z",
    "updated_at": "2018-10-29T12:26:58Z",
    "author_association": "NONE",
    "body": "Is there any Java implementation of this?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/441748076",
    "html_url": "https://github.com/grpc/grpc/issues/7945#issuecomment-441748076",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7945",
    "id": 441748076,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTc0ODA3Ng==",
    "user": {
      "login": "juansalvatella",
      "id": 4377347,
      "node_id": "MDQ6VXNlcjQzNzczNDc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4377347?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/juansalvatella",
      "html_url": "https://github.com/juansalvatella",
      "followers_url": "https://api.github.com/users/juansalvatella/followers",
      "following_url": "https://api.github.com/users/juansalvatella/following{/other_user}",
      "gists_url": "https://api.github.com/users/juansalvatella/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/juansalvatella/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/juansalvatella/subscriptions",
      "organizations_url": "https://api.github.com/users/juansalvatella/orgs",
      "repos_url": "https://api.github.com/users/juansalvatella/repos",
      "events_url": "https://api.github.com/users/juansalvatella/events{/privacy}",
      "received_events_url": "https://api.github.com/users/juansalvatella/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-26T18:34:58Z",
    "updated_at": "2018-11-26T18:34:58Z",
    "author_association": "NONE",
    "body": "Is there any update on the golang implementation?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/441764256",
    "html_url": "https://github.com/grpc/grpc/issues/7945#issuecomment-441764256",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7945",
    "id": 441764256,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTc2NDI1Ng==",
    "user": {
      "login": "dfawley",
      "id": 26072277,
      "node_id": "MDQ6VXNlcjI2MDcyMjc3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26072277?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dfawley",
      "html_url": "https://github.com/dfawley",
      "followers_url": "https://api.github.com/users/dfawley/followers",
      "following_url": "https://api.github.com/users/dfawley/following{/other_user}",
      "gists_url": "https://api.github.com/users/dfawley/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dfawley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dfawley/subscriptions",
      "organizations_url": "https://api.github.com/users/dfawley/orgs",
      "repos_url": "https://api.github.com/users/dfawley/repos",
      "events_url": "https://api.github.com/users/dfawley/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dfawley/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-26T19:23:52Z",
    "updated_at": "2018-11-26T19:23:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "@juansalvatella the Go team has no current plans to implement this proposal.  We are not opposed to it (although I would like to see it as a gRFC or added to the spec first), but we have many higher priority things to work on at this time."
  }
]
