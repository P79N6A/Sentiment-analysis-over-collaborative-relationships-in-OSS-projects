[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/299596970",
    "html_url": "https://github.com/grpc/grpc/issues/9493#issuecomment-299596970",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9493",
    "id": 299596970,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTU5Njk3MA==",
    "user": {
      "login": "g-ericso",
      "id": 26389199,
      "node_id": "MDQ6VXNlcjI2Mzg5MTk5",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26389199?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/g-ericso",
      "html_url": "https://github.com/g-ericso",
      "followers_url": "https://api.github.com/users/g-ericso/followers",
      "following_url": "https://api.github.com/users/g-ericso/following{/other_user}",
      "gists_url": "https://api.github.com/users/g-ericso/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/g-ericso/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/g-ericso/subscriptions",
      "organizations_url": "https://api.github.com/users/g-ericso/orgs",
      "repos_url": "https://api.github.com/users/g-ericso/repos",
      "events_url": "https://api.github.com/users/g-ericso/events{/privacy}",
      "received_events_url": "https://api.github.com/users/g-ericso/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-05T23:21:01Z",
    "updated_at": "2017-05-05T23:21:01Z",
    "author_association": "NONE",
    "body": "+1"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/301942284",
    "html_url": "https://github.com/grpc/grpc/issues/9493#issuecomment-301942284",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9493",
    "id": 301942284,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTk0MjI4NA==",
    "user": {
      "login": "Blanen",
      "id": 7236824,
      "node_id": "MDQ6VXNlcjcyMzY4MjQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/7236824?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Blanen",
      "html_url": "https://github.com/Blanen",
      "followers_url": "https://api.github.com/users/Blanen/followers",
      "following_url": "https://api.github.com/users/Blanen/following{/other_user}",
      "gists_url": "https://api.github.com/users/Blanen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Blanen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Blanen/subscriptions",
      "organizations_url": "https://api.github.com/users/Blanen/orgs",
      "repos_url": "https://api.github.com/users/Blanen/repos",
      "events_url": "https://api.github.com/users/Blanen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Blanen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-16T23:23:09Z",
    "updated_at": "2017-05-16T23:23:09Z",
    "author_association": "NONE",
    "body": "I'd like this as well.\r\n\r\nBut there's this old issue that was denied:\r\n\r\nhttps://github.com/grpc/grpc-go/issues/241"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/301944905",
    "html_url": "https://github.com/grpc/grpc/issues/9493#issuecomment-301944905",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9493",
    "id": 301944905,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTk0NDkwNQ==",
    "user": {
      "login": "Disturbing",
      "id": 2367167,
      "node_id": "MDQ6VXNlcjIzNjcxNjc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2367167?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Disturbing",
      "html_url": "https://github.com/Disturbing",
      "followers_url": "https://api.github.com/users/Disturbing/followers",
      "following_url": "https://api.github.com/users/Disturbing/following{/other_user}",
      "gists_url": "https://api.github.com/users/Disturbing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Disturbing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Disturbing/subscriptions",
      "organizations_url": "https://api.github.com/users/Disturbing/orgs",
      "repos_url": "https://api.github.com/users/Disturbing/repos",
      "events_url": "https://api.github.com/users/Disturbing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Disturbing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-16T23:41:08Z",
    "updated_at": "2017-05-16T23:41:08Z",
    "author_association": "NONE",
    "body": "Well we must rock the boat! For real time gaming, this is a huge plus to get.  If we come up with a specification/standard and get this accepted, I'm committed to writing the .NET and Java versions."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/301947149",
    "html_url": "https://github.com/grpc/grpc/issues/9493#issuecomment-301947149",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9493",
    "id": 301947149,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTk0NzE0OQ==",
    "user": {
      "login": "Blanen",
      "id": 7236824,
      "node_id": "MDQ6VXNlcjcyMzY4MjQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/7236824?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Blanen",
      "html_url": "https://github.com/Blanen",
      "followers_url": "https://api.github.com/users/Blanen/followers",
      "following_url": "https://api.github.com/users/Blanen/following{/other_user}",
      "gists_url": "https://api.github.com/users/Blanen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Blanen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Blanen/subscriptions",
      "organizations_url": "https://api.github.com/users/Blanen/orgs",
      "repos_url": "https://api.github.com/users/Blanen/repos",
      "events_url": "https://api.github.com/users/Blanen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Blanen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-16T23:57:48Z",
    "updated_at": "2017-05-16T23:57:48Z",
    "author_association": "NONE",
    "body": "Might require a change in protocol if I read the gRPC stuff correctly, right? Since it basically always waits for a response, whether that's sync or async. So either you extent gRPC to allow no-response messages, or make something on top of UDP to reliably get responses, at which point you might as well use TCP...\r\n\r\nThis might be completely wrong since I have only done reading about gRPC for now."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/301976903",
    "html_url": "https://github.com/grpc/grpc/issues/9493#issuecomment-301976903",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9493",
    "id": 301976903,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTk3NjkwMw==",
    "user": {
      "login": "Disturbing",
      "id": 2367167,
      "node_id": "MDQ6VXNlcjIzNjcxNjc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2367167?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Disturbing",
      "html_url": "https://github.com/Disturbing",
      "followers_url": "https://api.github.com/users/Disturbing/followers",
      "following_url": "https://api.github.com/users/Disturbing/following{/other_user}",
      "gists_url": "https://api.github.com/users/Disturbing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Disturbing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Disturbing/subscriptions",
      "organizations_url": "https://api.github.com/users/Disturbing/orgs",
      "repos_url": "https://api.github.com/users/Disturbing/repos",
      "events_url": "https://api.github.com/users/Disturbing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Disturbing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-17T03:41:49Z",
    "updated_at": "2017-05-17T03:42:59Z",
    "author_association": "NONE",
    "body": "Correct, we would have to implement a UDP protocol.\r\n\r\nI'd want to leave everything in gRPC the same, no need to define anything as 'reliable or unreliable' in terms of defining your services.\r\n\r\nWhen a client requests to use a service via \"Channel\" - I'd propose Unreliable options:\r\n\r\n```\r\n//C# Modified Example from - http://www.grpc.io/docs/tutorials/basic/csharp.html\r\n// I suggest adding A protocol option to the Channel, by default being HTTP/2. Later (As people have also proposed) adding TCP, websockets and then as we're proposing - adding UDP.\r\n\r\nChannel channel = new Channel(\"127.0.0.1:50052\", ChannelCredentials.Insecure, ChannelProtocol.UDP)\r\nvar client = new RouteGuide.RouteGuideClient(channel);\r\n\r\n// YOUR CODE GOES HERE\r\n\r\nchannel.ShutdownAsync().Wait();\r\n```\r\n\r\nServer wise, people can enable/disable the Protocol options they want on their server. Maybe all 4 will be enabled so that clients can decide at will.\r\n\r\nI have not spent too much time thinking of a great way to do this - but the optimal use case is if we can specifiy exact methods on a gRPC service to be reliable / unreliable. A simple use case being:\r\n\r\nreliable - GameWorldService#FireWeapon \r\nunreliable - GameWorldService#OnMovementUpdatedStream\r\n\r\nMay sound crazy, but maybe this can be configured via:\r\n\r\n\r\n```\r\nChannel channel = new Channel(\"127.0.0.1:50052\", ChannelCredentials.Insecure);\r\n\r\n// This is a nice way to do it in C#, but doubt it would be nice across all languages?\r\nvar client = new GameWorldService.GameWorldClientClient(channel)\r\n    // This function would ensure the protocol that\r\n    .ConfigureMethodProtocol(client => client.OnMovementUpdatedStream, ChannelProtocol.UDP)\r\n    .Build();\r\n\r\n// YOUR CODE GOES HERE\r\n\r\nchannel.ShutdownAsync().Wait();\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/301991052",
    "html_url": "https://github.com/grpc/grpc/issues/9493#issuecomment-301991052",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9493",
    "id": 301991052,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTk5MTA1Mg==",
    "user": {
      "login": "bkeys",
      "id": 12195202,
      "node_id": "MDQ6VXNlcjEyMTk1MjAy",
      "avatar_url": "https://avatars2.githubusercontent.com/u/12195202?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bkeys",
      "html_url": "https://github.com/bkeys",
      "followers_url": "https://api.github.com/users/bkeys/followers",
      "following_url": "https://api.github.com/users/bkeys/following{/other_user}",
      "gists_url": "https://api.github.com/users/bkeys/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bkeys/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bkeys/subscriptions",
      "organizations_url": "https://api.github.com/users/bkeys/orgs",
      "repos_url": "https://api.github.com/users/bkeys/repos",
      "events_url": "https://api.github.com/users/bkeys/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bkeys/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-17T05:40:10Z",
    "updated_at": "2017-05-17T05:40:10Z",
    "author_association": "NONE",
    "body": "Has there been any updates on this? I would love to have UDP on gRPC for my game servers"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/302120484",
    "html_url": "https://github.com/grpc/grpc/issues/9493#issuecomment-302120484",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9493",
    "id": 302120484,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjEyMDQ4NA==",
    "user": {
      "login": "ahundt",
      "id": 55744,
      "node_id": "MDQ6VXNlcjU1NzQ0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/55744?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ahundt",
      "html_url": "https://github.com/ahundt",
      "followers_url": "https://api.github.com/users/ahundt/followers",
      "following_url": "https://api.github.com/users/ahundt/following{/other_user}",
      "gists_url": "https://api.github.com/users/ahundt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ahundt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ahundt/subscriptions",
      "organizations_url": "https://api.github.com/users/ahundt/orgs",
      "repos_url": "https://api.github.com/users/ahundt/repos",
      "events_url": "https://api.github.com/users/ahundt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ahundt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-17T15:07:10Z",
    "updated_at": "2017-05-17T15:07:10Z",
    "author_association": "NONE",
    "body": "Rather than a simple reliable/unreliable binary split, a limited selection of algorithms with clear known applications, such as smooth performance degradation for real time games and and for robotics (which has many similarities to real time games) may be a better option. One example algorithm would be unreliable transport and another example could be prioritized channels with deadlines.\r\n\r\nLibraries that could be used for informative reference:\r\nhttps://github.com/lcm-proj/lcm\r\nhttp://www.spines.org/"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/302126905",
    "html_url": "https://github.com/grpc/grpc/issues/9493#issuecomment-302126905",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9493",
    "id": 302126905,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjEyNjkwNQ==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-17T15:27:42Z",
    "updated_at": "2017-05-17T15:27:42Z",
    "author_association": "MEMBER",
    "body": "@Blanen : there is no need that every message has to have a response; in particular, streaming RPCs can have an unbalanced number of Writes and Reads. If you want a no-response message, you can use a bidirectional streaming RPC and then have the receiving side not send anything back (and I know of at least 1 user doing that for their use case). That is a discussion topic distinct from the general theme of this feature request, getting back to general usage (and for which grpc-io mailing list is the best forum)."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/302435045",
    "html_url": "https://github.com/grpc/grpc/issues/9493#issuecomment-302435045",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9493",
    "id": 302435045,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjQzNTA0NQ==",
    "user": {
      "login": "bhkeys",
      "id": 28019043,
      "node_id": "MDQ6VXNlcjI4MDE5MDQz",
      "avatar_url": "https://avatars0.githubusercontent.com/u/28019043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bhkeys",
      "html_url": "https://github.com/bhkeys",
      "followers_url": "https://api.github.com/users/bhkeys/followers",
      "following_url": "https://api.github.com/users/bhkeys/following{/other_user}",
      "gists_url": "https://api.github.com/users/bhkeys/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bhkeys/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bhkeys/subscriptions",
      "organizations_url": "https://api.github.com/users/bhkeys/orgs",
      "repos_url": "https://api.github.com/users/bhkeys/repos",
      "events_url": "https://api.github.com/users/bhkeys/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bhkeys/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-18T15:15:00Z",
    "updated_at": "2017-05-18T15:15:00Z",
    "author_association": "NONE",
    "body": "@Disturbing Is there a place where we can start to write down some kind of spec for this thing? I have a lot of interest in making gRPC somehow appropriate for games. @vjpai Also seemed to have some good ideas on how to get this done. The talking part is over we need to get this done! c:"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/307307959",
    "html_url": "https://github.com/grpc/grpc/issues/9493#issuecomment-307307959",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9493",
    "id": 307307959,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzMwNzk1OQ==",
    "user": {
      "login": "Disturbing",
      "id": 2367167,
      "node_id": "MDQ6VXNlcjIzNjcxNjc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2367167?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Disturbing",
      "html_url": "https://github.com/Disturbing",
      "followers_url": "https://api.github.com/users/Disturbing/followers",
      "following_url": "https://api.github.com/users/Disturbing/following{/other_user}",
      "gists_url": "https://api.github.com/users/Disturbing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Disturbing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Disturbing/subscriptions",
      "organizations_url": "https://api.github.com/users/Disturbing/orgs",
      "repos_url": "https://api.github.com/users/Disturbing/repos",
      "events_url": "https://api.github.com/users/Disturbing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Disturbing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-09T06:35:19Z",
    "updated_at": "2017-06-09T06:41:30Z",
    "author_association": "NONE",
    "body": "@ahundt - Agreed, but correct my if I'm wrong - maybe there could be some sort of 'addon' system for this? Build this out as a standard for the 10+ languages that gRPC supports will be tough.  Doing a quick unreliable channel would be helpful and quick IMO.\r\n\r\n@bhkeys \r\nNot sure what the proposal process is for creating a pull request or proposal.  I think I can come up with one but again, would like some feedback before starting because it's quite crucial.\r\n\r\n@vjpai \r\nUnderstood on the bidirectional part.  The #1 udp use case for games is movement updates. For 2D games, movement updates can be between 10-15 updates per second, for 3D FPS shooters it can go up to 25-30 updates per second.  Since we're spitting updates all the time and need them to go as fast as possible, UDP is the #1 solution.\r\n\r\nWith that said, do you know of any way using streaming RPCs to have unreliable writes (send a message and don't care if it gets there or not, and if it fails to get there, it does not retry, etc?)  After you've mentioned this, it sounds like deadlines (or better if there was some sort of retry/attempts) at the protocol level that will drop the packet. I'll try to read more into this, but would love your .02.\r\n\r\n---\r\n\r\nMain feedback before creating a proposal i'd like to hear is around:\r\n\r\n1) Have a method level reliable/unreliable support\r\n2) Have channel level reliable/unreliable support.\r\n\r\nThe problem with doing channel level is that you'd have to deal with two different services and calling them appropriately, thus I'm in favor of (1). But would love feedback.\r\n\r\nOnce hearing feedback, I can then draft a proposal and prototype it on C# first to see how people like it.  Then can discuss getting it standardized.\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/310821969",
    "html_url": "https://github.com/grpc/grpc/issues/9493#issuecomment-310821969",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9493",
    "id": 310821969,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDgyMTk2OQ==",
    "user": {
      "login": "Disturbing",
      "id": 2367167,
      "node_id": "MDQ6VXNlcjIzNjcxNjc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2367167?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Disturbing",
      "html_url": "https://github.com/Disturbing",
      "followers_url": "https://api.github.com/users/Disturbing/followers",
      "following_url": "https://api.github.com/users/Disturbing/following{/other_user}",
      "gists_url": "https://api.github.com/users/Disturbing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Disturbing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Disturbing/subscriptions",
      "organizations_url": "https://api.github.com/users/Disturbing/orgs",
      "repos_url": "https://api.github.com/users/Disturbing/repos",
      "events_url": "https://api.github.com/users/Disturbing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Disturbing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-24T07:26:08Z",
    "updated_at": "2017-06-24T07:26:08Z",
    "author_association": "NONE",
    "body": "Another thought, what if we do something similar to gRPC Websockets proxy: \r\n\r\nhttps://github.com/tmc/grpc-websocket-proxy\r\n\r\nWhat if the grpc gateway simply handles HTTP/1 -> gRPC conversion, Websockets, UDP and TCP protocols for conversion?  Would need to look into this more and figure out a good standardization, but I think this would be the best way to support all 10 languages at once."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/310843074",
    "html_url": "https://github.com/grpc/grpc/issues/9493#issuecomment-310843074",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9493",
    "id": 310843074,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDg0MzA3NA==",
    "user": {
      "login": "ahundt",
      "id": 55744,
      "node_id": "MDQ6VXNlcjU1NzQ0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/55744?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ahundt",
      "html_url": "https://github.com/ahundt",
      "followers_url": "https://api.github.com/users/ahundt/followers",
      "following_url": "https://api.github.com/users/ahundt/following{/other_user}",
      "gists_url": "https://api.github.com/users/ahundt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ahundt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ahundt/subscriptions",
      "organizations_url": "https://api.github.com/users/ahundt/orgs",
      "repos_url": "https://api.github.com/users/ahundt/repos",
      "events_url": "https://api.github.com/users/ahundt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ahundt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-24T14:52:56Z",
    "updated_at": "2017-06-24T14:52:56Z",
    "author_association": "NONE",
    "body": "@disturbing Unfortunately that wouldn't meet requirements for applications that need UDP because the guarantees and performance degradation properties of TCP would still be required. Here is a 2017 paper that won a best paper award that serves as an example of what should be possible to implement:\r\n\r\nhttp://www.dsn.jhu.edu/papers/dissemination_graphs_icdcs2017.pdf \r\n\r\nIn other words it is okay if UDP grpc doesn't actually implement this but it should provide the necessary building blocks to make it possible and simpler. "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/310877302",
    "html_url": "https://github.com/grpc/grpc/issues/9493#issuecomment-310877302",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9493",
    "id": 310877302,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDg3NzMwMg==",
    "user": {
      "login": "Disturbing",
      "id": 2367167,
      "node_id": "MDQ6VXNlcjIzNjcxNjc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2367167?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Disturbing",
      "html_url": "https://github.com/Disturbing",
      "followers_url": "https://api.github.com/users/Disturbing/followers",
      "following_url": "https://api.github.com/users/Disturbing/following{/other_user}",
      "gists_url": "https://api.github.com/users/Disturbing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Disturbing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Disturbing/subscriptions",
      "organizations_url": "https://api.github.com/users/Disturbing/orgs",
      "repos_url": "https://api.github.com/users/Disturbing/repos",
      "events_url": "https://api.github.com/users/Disturbing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Disturbing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-25T02:08:28Z",
    "updated_at": "2017-06-25T02:08:28Z",
    "author_association": "NONE",
    "body": "Roger!\nOn Sat, Jun 24, 2017 at 10:53 PM Andrew Hundt <notifications@github.com>\nwrote:\n\n> @Disturbing <https://github.com/disturbing> Unfortunately that wouldn't\n> meet requirements for applications that need UDP because the guarantees and\n> performance degradation properties of TCP would still be required. Here is\n> a 2017 paper that won a best paper award that serves as an example of what\n> should be possible to implement:\n>\n> http://www.dsn.jhu.edu/papers/dissemination_graphs_icdcs2017.pdf\n>\n> In other words it is okay if UDP grpc doesn't actually implement this but\n> it should provide the necessary building blocks to make it possible and\n> simpler.\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/grpc/grpc/issues/9493#issuecomment-310843074>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/ACQev956DpGUjIh7XEHff79rIpjJc1aAks5sHSLVgaJpZM4Lwfe->\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/345956408",
    "html_url": "https://github.com/grpc/grpc/issues/9493#issuecomment-345956408",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9493",
    "id": 345956408,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTk1NjQwOA==",
    "user": {
      "login": "aep",
      "id": 136926,
      "node_id": "MDQ6VXNlcjEzNjkyNg==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/136926?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aep",
      "html_url": "https://github.com/aep",
      "followers_url": "https://api.github.com/users/aep/followers",
      "following_url": "https://api.github.com/users/aep/following{/other_user}",
      "gists_url": "https://api.github.com/users/aep/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aep/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aep/subscriptions",
      "organizations_url": "https://api.github.com/users/aep/orgs",
      "repos_url": "https://api.github.com/users/aep/repos",
      "events_url": "https://api.github.com/users/aep/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aep/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-21T08:46:40Z",
    "updated_at": "2017-11-21T08:46:40Z",
    "author_association": "NONE",
    "body": "is an implementation over quic (https://en.wikipedia.org/wiki/QUIC) an acceptable alternative? We're thinking of doing that"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/346677564",
    "html_url": "https://github.com/grpc/grpc/issues/9493#issuecomment-346677564",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9493",
    "id": 346677564,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjY3NzU2NA==",
    "user": {
      "login": "ahundt",
      "id": 55744,
      "node_id": "MDQ6VXNlcjU1NzQ0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/55744?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ahundt",
      "html_url": "https://github.com/ahundt",
      "followers_url": "https://api.github.com/users/ahundt/followers",
      "following_url": "https://api.github.com/users/ahundt/following{/other_user}",
      "gists_url": "https://api.github.com/users/ahundt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ahundt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ahundt/subscriptions",
      "organizations_url": "https://api.github.com/users/ahundt/orgs",
      "repos_url": "https://api.github.com/users/ahundt/repos",
      "events_url": "https://api.github.com/users/ahundt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ahundt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-23T18:11:46Z",
    "updated_at": "2017-11-23T18:11:46Z",
    "author_association": "NONE",
    "body": "quic looks like it didn't make progress towards being a standard and google's implementations don't seem to be updated anymore"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/363317790",
    "html_url": "https://github.com/grpc/grpc/issues/9493#issuecomment-363317790",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9493",
    "id": 363317790,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzMxNzc5MA==",
    "user": {
      "login": "zefyrr",
      "id": 5747431,
      "node_id": "MDQ6VXNlcjU3NDc0MzE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5747431?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zefyrr",
      "html_url": "https://github.com/zefyrr",
      "followers_url": "https://api.github.com/users/zefyrr/followers",
      "following_url": "https://api.github.com/users/zefyrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/zefyrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zefyrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zefyrr/subscriptions",
      "organizations_url": "https://api.github.com/users/zefyrr/orgs",
      "repos_url": "https://api.github.com/users/zefyrr/repos",
      "events_url": "https://api.github.com/users/zefyrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zefyrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-06T05:47:20Z",
    "updated_at": "2018-02-06T05:47:20Z",
    "author_association": "NONE",
    "body": "Would it be possible to leverage cronet on the cpp side for this?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/365469725",
    "html_url": "https://github.com/grpc/grpc/issues/9493#issuecomment-365469725",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9493",
    "id": 365469725,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTQ2OTcyNQ==",
    "user": {
      "login": "evbarnett",
      "id": 4960874,
      "node_id": "MDQ6VXNlcjQ5NjA4NzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4960874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/evbarnett",
      "html_url": "https://github.com/evbarnett",
      "followers_url": "https://api.github.com/users/evbarnett/followers",
      "following_url": "https://api.github.com/users/evbarnett/following{/other_user}",
      "gists_url": "https://api.github.com/users/evbarnett/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/evbarnett/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/evbarnett/subscriptions",
      "organizations_url": "https://api.github.com/users/evbarnett/orgs",
      "repos_url": "https://api.github.com/users/evbarnett/repos",
      "events_url": "https://api.github.com/users/evbarnett/events{/privacy}",
      "received_events_url": "https://api.github.com/users/evbarnett/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-14T01:52:28Z",
    "updated_at": "2018-02-14T01:52:28Z",
    "author_association": "NONE",
    "body": "+1 for UDP- but it would also be great if there are open protocol abstractions in case the user wants to use *any* protocol; the user would just provide the implementation themselves. (I'd like to use raw sockets!)"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/375215932",
    "html_url": "https://github.com/grpc/grpc/issues/9493#issuecomment-375215932",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9493",
    "id": 375215932,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTIxNTkzMg==",
    "user": {
      "login": "VMatrix1900",
      "id": 3964947,
      "node_id": "MDQ6VXNlcjM5NjQ5NDc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3964947?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/VMatrix1900",
      "html_url": "https://github.com/VMatrix1900",
      "followers_url": "https://api.github.com/users/VMatrix1900/followers",
      "following_url": "https://api.github.com/users/VMatrix1900/following{/other_user}",
      "gists_url": "https://api.github.com/users/VMatrix1900/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/VMatrix1900/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/VMatrix1900/subscriptions",
      "organizations_url": "https://api.github.com/users/VMatrix1900/orgs",
      "repos_url": "https://api.github.com/users/VMatrix1900/repos",
      "events_url": "https://api.github.com/users/VMatrix1900/events{/privacy}",
      "received_events_url": "https://api.github.com/users/VMatrix1900/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-22T08:26:48Z",
    "updated_at": "2018-03-22T08:26:48Z",
    "author_association": "NONE",
    "body": "@aep QUIC currently does not support unreliable transport."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/389351088",
    "html_url": "https://github.com/grpc/grpc/issues/9493#issuecomment-389351088",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9493",
    "id": 389351088,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTM1MTA4OA==",
    "user": {
      "login": "hsaliak",
      "id": 150108,
      "node_id": "MDQ6VXNlcjE1MDEwOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/150108?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hsaliak",
      "html_url": "https://github.com/hsaliak",
      "followers_url": "https://api.github.com/users/hsaliak/followers",
      "following_url": "https://api.github.com/users/hsaliak/following{/other_user}",
      "gists_url": "https://api.github.com/users/hsaliak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hsaliak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hsaliak/subscriptions",
      "organizations_url": "https://api.github.com/users/hsaliak/orgs",
      "repos_url": "https://api.github.com/users/hsaliak/repos",
      "events_url": "https://api.github.com/users/hsaliak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hsaliak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-15T23:56:43Z",
    "updated_at": "2018-05-15T23:56:43Z",
    "author_association": "MEMBER",
    "body": "Closing this - we have no plan to support unreliable packets at the moment. If we have any particular protocol that can fit the use cases listed above, we will probably do a grfc first.."
  }
]
