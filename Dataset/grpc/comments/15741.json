[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/397076807",
    "html_url": "https://github.com/grpc/grpc/issues/15741#issuecomment-397076807",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15741",
    "id": 397076807,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzA3NjgwNw==",
    "user": {
      "login": "mehrdada",
      "id": 900411,
      "node_id": "MDQ6VXNlcjkwMDQxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/900411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mehrdada",
      "html_url": "https://github.com/mehrdada",
      "followers_url": "https://api.github.com/users/mehrdada/followers",
      "following_url": "https://api.github.com/users/mehrdada/following{/other_user}",
      "gists_url": "https://api.github.com/users/mehrdada/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mehrdada/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mehrdada/subscriptions",
      "organizations_url": "https://api.github.com/users/mehrdada/orgs",
      "repos_url": "https://api.github.com/users/mehrdada/repos",
      "events_url": "https://api.github.com/users/mehrdada/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mehrdada/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-13T20:34:00Z",
    "updated_at": "2018-06-13T20:34:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm a bit reluctant to document the feature as is. We should probably consider exposing some of the common channel args via a nicer API and document *that* instead."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/439977151",
    "html_url": "https://github.com/grpc/grpc/issues/15741#issuecomment-439977151",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15741",
    "id": 439977151,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTk3NzE1MQ==",
    "user": {
      "login": "ericgribkoff",
      "id": 5067076,
      "node_id": "MDQ6VXNlcjUwNjcwNzY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5067076?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ericgribkoff",
      "html_url": "https://github.com/ericgribkoff",
      "followers_url": "https://api.github.com/users/ericgribkoff/followers",
      "following_url": "https://api.github.com/users/ericgribkoff/following{/other_user}",
      "gists_url": "https://api.github.com/users/ericgribkoff/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ericgribkoff/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ericgribkoff/subscriptions",
      "organizations_url": "https://api.github.com/users/ericgribkoff/orgs",
      "repos_url": "https://api.github.com/users/ericgribkoff/repos",
      "events_url": "https://api.github.com/users/ericgribkoff/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ericgribkoff/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-19T17:33:41Z",
    "updated_at": "2018-11-19T17:33:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "Right now it appears that the only way to use compression with Python API is to pull in non-public internal constants or hard-code literals from the core layer. We need to decide how we're going to make the components of this API public, and add/finish at least one missing piece (per-message compression disabling).  See this recent StackOverflow question, for which we do not yet have very good answers: https://stackoverflow.com/questions/53233339/what-is-the-state-of-compression-support-in-grpc-for-python\r\n\r\nAs noted in the TODOs on https://github.com/grpc/grpc/blob/master/src/python/grpcio_tests/tests/unit/_compression_test.py, our unit tests are using literals to represent core's compression levels and algorithms, as these are not exposed by our Python layer. We also do not have any public way of setting `GRPC_WRITE_NO_COMPRESS` for per-message disabling of compression. It is in our Cython layer ([here](https://github.com/grpc/grpc/blob/2cec9c5344014db548448bd7fbbe04e7c33635be/src/python/grpcio/grpc/_cython/_cygrpc/records.pyx.pxi#L60)) and we have a non-public [`disable_next_message_compression`](https://github.com/grpc/grpc/blob/b741454fe45e1a868ff967c557be9caddc3a569a/src/python/grpcio/grpc/_server.py#L238) API that is, anyways, effectively a no-op.\r\n\r\nSince these are all pass-through configuration options that are handled by core, this should all be easy to do - it's just a matter of determining what the Python user API should look like, and then wiring up the configuration options."
  }
]
