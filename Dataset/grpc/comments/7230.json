[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/230441667",
    "html_url": "https://github.com/grpc/grpc/issues/7230#issuecomment-230441667",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7230",
    "id": 230441667,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMDQ0MTY2Nw==",
    "user": {
      "login": "jskeet",
      "id": 17011,
      "node_id": "MDQ6VXNlcjE3MDEx",
      "avatar_url": "https://avatars1.githubusercontent.com/u/17011?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jskeet",
      "html_url": "https://github.com/jskeet",
      "followers_url": "https://api.github.com/users/jskeet/followers",
      "following_url": "https://api.github.com/users/jskeet/following{/other_user}",
      "gists_url": "https://api.github.com/users/jskeet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jskeet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jskeet/subscriptions",
      "organizations_url": "https://api.github.com/users/jskeet/orgs",
      "repos_url": "https://api.github.com/users/jskeet/repos",
      "events_url": "https://api.github.com/users/jskeet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jskeet/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-05T10:21:24Z",
    "updated_at": "2016-07-05T10:21:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've been experimenting with this a bit.\n\nI've created a new package `Grpc.Native` (just locally) with a nuspec file containing this:\n\n``` xml\n  <files>\n    <file src=\"windows-x86\\grpc_csharp_ext.dll\" target=\"/runtimes/win-x86/native/grpc_csharp_ext.x86.dll\" />\n    <file src=\"windows-x64\\grpc_csharp_ext.dll\" target=\"/runtimes/win-x64/native/grpc_csharp_ext.amd64.dll\" />\n    <file src=\"linux-x86\\libgrpc_csharp_ext.so\" target=\"/runtimes/linux-x86/native/libgrpc_csharp_ext.x86.so\" />\n    <file src=\"linux-x64\\libgrpc_csharp_ext.so\" target=\"/runtimes/linux-x64/native/libgrpc_csharp_ext.amd64.so\" />\n    <file src=\"macosx-x86\\libgrpc_csharp_ext.dylib\" target=\"/runtimes/macosx-x86/native/libgrpc_csharp_ext.x86.dylib\" />\n    <file src=\"macosx-x64\\libgrpc_csharp_ext.dylib\" target=\"/runtimes/macosx-x64/native/libgrpc_csharp_ext.x64.dylib\" />\n  </files>\n```\n\nThis was inspired by the layout of `Microsoft.DiaSymReader.Native`, although that has a second copy of each file in `/runtimes/win/native` - it's not clear to me why there have to be two copies.\n\nAt that point, if `project.json` in the client project is changed to have this `frameworks` element:\n\n``` json\n  \"frameworks\": { \n    \"net45\": {\n      \"dependencies\": {\n        \"Microsoft.NETCore.Platforms\": \"1.0.1\"\n      }\n    } \n  }\n```\n\n(and depending on `Grpc.Native` of course) then we end up with `grpc_csharp_ext.amd64.dll` with a plain `dotnet build`, and the x86 dll if I specifically build the x86 runtime version.\n\nThe dependency on `Microsoft.NETCore.Platforms` is required - without that, the library doesn't get copied.\n\nThat still doesn't work with the current release of gRPC as it's expecting it to be in subdirectories, but it's a start.\n\nI'd strongly suggest that we at least have some way of specifying the library to use at execution time - there's a TODO in `NativeExtension.Load` for this. (Even just an environment variable would be a good start.)\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/231237408",
    "html_url": "https://github.com/grpc/grpc/issues/7230#issuecomment-231237408",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7230",
    "id": 231237408,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTIzNzQwOA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-07T23:30:07Z",
    "updated_at": "2016-07-07T23:30:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for looking into this, Jon!\n\nIt's an interesting problem, because if we want gRPC to work well with both old-style .csproj files and dotnet CLI, we basically need to support two ways of resolving native dependencies - dotnet CLI has its own builtin way (currently not supported by gRPC, but things are only broken for net45 projects). The old .csproj style projects don't have support for native dependencies at all (and that's why gRPC comes with its own custom way to load the native extension).\n\nThe only thing we really need to do is to make sure that the native libraries get copied to the output directory when build by dotnet CLI - after that, the gRPC's native extension loading code can be easily adjusted to load the library from a known location relative to the Grpc.Core.dll assembly (the code should already support looking for the native libraries in multiple locations - https://github.com/grpc/grpc/blob/e705dc44a1d850457f700a66089ef9fcd463178b/src/csharp/Grpc.Core/Internal/NativeExtension.cs#L114)\n\nAd using Microsoft.NETCore.Platforms:  requiring the user to depend on it is still a bit of a workaround but it's probably acceptable (considering this is only to fix dotnet CLI targeting net45 use case). I am wondering what is the magic part of Microsoft.NETCore.Platforms that enables the copying of libraries to the output directory - as that is the only piece we need to complete the puzzle.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/231278631",
    "html_url": "https://github.com/grpc/grpc/issues/7230#issuecomment-231278631",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7230",
    "id": 231278631,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTI3ODYzMQ==",
    "user": {
      "login": "jskeet",
      "id": 17011,
      "node_id": "MDQ6VXNlcjE3MDEx",
      "avatar_url": "https://avatars1.githubusercontent.com/u/17011?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jskeet",
      "html_url": "https://github.com/jskeet",
      "followers_url": "https://api.github.com/users/jskeet/followers",
      "following_url": "https://api.github.com/users/jskeet/following{/other_user}",
      "gists_url": "https://api.github.com/users/jskeet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jskeet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jskeet/subscriptions",
      "organizations_url": "https://api.github.com/users/jskeet/orgs",
      "repos_url": "https://api.github.com/users/jskeet/repos",
      "events_url": "https://api.github.com/users/jskeet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jskeet/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-08T05:32:33Z",
    "updated_at": "2016-07-08T05:32:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, I don't know exactly how `Microsoft.NETCore.Platforms` works - it does seem to be the magic bit though. I quite like the naming scheme used by `Microsoft.DiaSymReader.Native`, with different filenames for different architectures so it would be possible to just xcopy a single directory and have that work on multiple platforms, if necessary.\n\nHow many more prereleases are likely for gRPC? I was wondering about at what stage it would be reasonable to drop DNX support (which is the third variant, and currently works). If there are still a couple more releases, we could add support for dotnet cli in the next release but keep DNX, and then remove DNX before the final release.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/231511666",
    "html_url": "https://github.com/grpc/grpc/issues/7230#issuecomment-231511666",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7230",
    "id": 231511666,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTUxMTY2Ng==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-09T03:12:09Z",
    "updated_at": "2016-07-09T03:12:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "I tried to use the techniques you suggested and was somewhat successful: https://github.com/grpc/grpc/pull/7295\n"
  }
]
