[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/228420166",
    "html_url": "https://github.com/grpc/grpc/issues/7032#issuecomment-228420166",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7032",
    "id": 228420166,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyODQyMDE2Ng==",
    "user": {
      "login": "kpayson64",
      "id": 18316330,
      "node_id": "MDQ6VXNlcjE4MzE2MzMw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18316330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kpayson64",
      "html_url": "https://github.com/kpayson64",
      "followers_url": "https://api.github.com/users/kpayson64/followers",
      "following_url": "https://api.github.com/users/kpayson64/following{/other_user}",
      "gists_url": "https://api.github.com/users/kpayson64/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kpayson64/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kpayson64/subscriptions",
      "organizations_url": "https://api.github.com/users/kpayson64/orgs",
      "repos_url": "https://api.github.com/users/kpayson64/repos",
      "events_url": "https://api.github.com/users/kpayson64/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kpayson64/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-24T18:15:40Z",
    "updated_at": "2016-06-24T18:15:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "@nathanielmanistaatgoogle \nThoughts on bumping this up to GA?  If we felt that Python being forced to iterate over all messages was a GA bug, aren't we in a strictly worse scenario if it applies to all the wrapped languages?\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/228422673",
    "html_url": "https://github.com/grpc/grpc/issues/7032#issuecomment-228422673",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7032",
    "id": 228422673,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyODQyMjY3Mw==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-24T18:25:15Z",
    "updated_at": "2016-06-24T18:25:15Z",
    "author_association": "MEMBER",
    "body": "@kpayson64: Note that [issue 6891](https://github.com/grpc/grpc/issues/6891) has been deferred to 1.1. I would love for this to happen for GA but note that there's no harm in it happening later other than having to wait however long is the delay.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/278459125",
    "html_url": "https://github.com/grpc/grpc/issues/7032#issuecomment-278459125",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7032",
    "id": 278459125,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODQ1OTEyNQ==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-08T20:57:00Z",
    "updated_at": "2017-02-08T20:57:00Z",
    "author_association": "MEMBER",
    "body": "Any news on this in the last seven months? Is this still something that might happen, or is it something that will happen or will never happen?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/300642322",
    "html_url": "https://github.com/grpc/grpc/issues/7032#issuecomment-300642322",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7032",
    "id": 300642322,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDY0MjMyMg==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-10T23:40:15Z",
    "updated_at": "2017-05-10T23:40:15Z",
    "author_association": "MEMBER",
    "body": "@ctiller: despite our exchange over lunch today I'm still not yet sure that this is resolved. As a demonstration, removing [these four lines](https://github.com/grpc/grpc/blob/c4a7f8dfe97c8fbc3b85d09cb2e92111d3a0014e/src/python/grpcio_tests/tests/unit/_metadata_code_details_test.py#L135-L138) causes the test to fail with code `UNKNOWN` and details `Error in HTTP transport completing operation`. Is there something I'm misunderstanding? Is this still an active issue in your judgement as well?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/330081669",
    "html_url": "https://github.com/grpc/grpc/issues/7032#issuecomment-330081669",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7032",
    "id": 330081669,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDA4MTY2OQ==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-17T20:32:05Z",
    "updated_at": "2017-09-17T20:32:05Z",
    "author_association": "MEMBER",
    "body": "I stumbling across this and losing time to it - how hard would this be to just implement?\r\n\r\nIt doesn't seem to be the case that when a service-side application starts a batch that includes a status operation without first having exhausted the request stream that the Core fails the batch-starting with a `grpc_call_error` (right? I'm only mostly sure of this) - should it? Could it? Otherwise an application doing Early OK just sees their server stop responding to requests for no understood reason (right?)."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/330101587",
    "html_url": "https://github.com/grpc/grpc/issues/7032#issuecomment-330101587",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7032",
    "id": 330101587,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDEwMTU4Nw==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-17T23:29:20Z",
    "updated_at": "2017-09-17T23:29:20Z",
    "author_association": "MEMBER",
    "body": "If there's a core end2end test written for this, I'll see to it sometime Q4"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/331561166",
    "html_url": "https://github.com/grpc/grpc/issues/7032#issuecomment-331561166",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7032",
    "id": 331561166,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMTU2MTE2Ng==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-22T21:08:59Z",
    "updated_at": "2017-09-22T21:08:59Z",
    "author_association": "MEMBER",
    "body": "Won't be able to implement it soon but before it slips my mind: tests should probably cover something like the cross product of\r\n\r\n* client sends no requests\r\n* client sends (or at least attempts to send before the RPC is completed) well over a flow control window's worth of requests\r\n\r\n,\r\n\r\n* client doesn't ever attempt to read a response\r\n* client attempts to read all responses\r\n\r\n,\r\n\r\n* server doesn't read requests\r\n* server reads one request\r\n\r\n, and\r\n\r\n* server sends zero responses\r\n* server sends one response\r\n* server sends well over a flow control window's worth of responses\r\n\r\n."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/372333944",
    "html_url": "https://github.com/grpc/grpc/issues/7032#issuecomment-372333944",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7032",
    "id": 372333944,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjMzMzk0NA==",
    "user": {
      "login": "Titanssword",
      "id": 9337319,
      "node_id": "MDQ6VXNlcjkzMzczMTk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9337319?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Titanssword",
      "html_url": "https://github.com/Titanssword",
      "followers_url": "https://api.github.com/users/Titanssword/followers",
      "following_url": "https://api.github.com/users/Titanssword/following{/other_user}",
      "gists_url": "https://api.github.com/users/Titanssword/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Titanssword/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Titanssword/subscriptions",
      "organizations_url": "https://api.github.com/users/Titanssword/orgs",
      "repos_url": "https://api.github.com/users/Titanssword/repos",
      "events_url": "https://api.github.com/users/Titanssword/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Titanssword/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-12T14:43:38Z",
    "updated_at": "2018-03-12T14:43:38Z",
    "author_association": "NONE",
    "body": "Hi, I am Sword, I read about this on GSOC'18 ideas page, and I think the \"Early OK\" idea sounds pretty cool. But the I am not sure how to define the OK status and in which situation should return \"Early OK\". Here just are my thinkings, firstly, \"Early OK\" should (could?, may?) be different from the real \"OK\", the client can distinguish them, and then set a trigger at the server side, for example, If the server side application has recevied more than 1000 requests or the memory usage is up to certain threshold, the trigger will remind the server side application to return \"Early OK\" to client, and free the memory. \r\nAnother thinking, put the steam requests into chunks, when recevie one thunk, if it is OK, the server return \"Early OK\" with respect to this chunk. But I am still confused, if there are something wrong at the server side after sending the \"Early OK\", what should the server do? send another response to tell the client ? \r\nWould like to have some feedback."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/372444059",
    "html_url": "https://github.com/grpc/grpc/issues/7032#issuecomment-372444059",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7032",
    "id": 372444059,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjQ0NDA1OQ==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-12T20:02:39Z",
    "updated_at": "2018-03-12T20:02:39Z",
    "author_association": "MEMBER",
    "body": "@Titanssword: I think you may be overthinking it - check out the \"two-by-two matrix\" that I described [here](https://groups.google.com/d/msg/grpc-io/vkEsyzeSAoI/Gx01XZjOBwAJ). This issue isn't about changing or expanding the meaning of OK status to anything that it doesn't mean today (the RPC is over and it completed satisfactorily); this issue is just about making it possible for service-side applications to send it earlier in the RPC than they are currently able to send it."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/372757353",
    "html_url": "https://github.com/grpc/grpc/issues/7032#issuecomment-372757353",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7032",
    "id": 372757353,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Mjc1NzM1Mw==",
    "user": {
      "login": "yang-g",
      "id": 10122250,
      "node_id": "MDQ6VXNlcjEwMTIyMjUw",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10122250?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yang-g",
      "html_url": "https://github.com/yang-g",
      "followers_url": "https://api.github.com/users/yang-g/followers",
      "following_url": "https://api.github.com/users/yang-g/following{/other_user}",
      "gists_url": "https://api.github.com/users/yang-g/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yang-g/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yang-g/subscriptions",
      "organizations_url": "https://api.github.com/users/yang-g/orgs",
      "repos_url": "https://api.github.com/users/yang-g/repos",
      "events_url": "https://api.github.com/users/yang-g/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yang-g/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-13T17:49:30Z",
    "updated_at": "2018-03-13T17:49:30Z",
    "author_association": "MEMBER",
    "body": "This looks like it is supported already. @nathanielmanistaatgoogle is adding a test in python and there is a test in C++ https://github.com/grpc/grpc/blob/master/test/cpp/end2end/server_early_return_test.cc. \r\n\r\n@Titanssword Sorry for the confusion. Please take on some other ideas!"
  }
]
