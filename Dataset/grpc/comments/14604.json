[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/370888928",
    "html_url": "https://github.com/grpc/grpc/issues/14604#issuecomment-370888928",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14604",
    "id": 370888928,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDg4ODkyOA==",
    "user": {
      "login": "yihuazhang",
      "id": 26934891,
      "node_id": "MDQ6VXNlcjI2OTM0ODkx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/26934891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yihuazhang",
      "html_url": "https://github.com/yihuazhang",
      "followers_url": "https://api.github.com/users/yihuazhang/followers",
      "following_url": "https://api.github.com/users/yihuazhang/following{/other_user}",
      "gists_url": "https://api.github.com/users/yihuazhang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yihuazhang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yihuazhang/subscriptions",
      "organizations_url": "https://api.github.com/users/yihuazhang/orgs",
      "repos_url": "https://api.github.com/users/yihuazhang/repos",
      "events_url": "https://api.github.com/users/yihuazhang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yihuazhang/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-06T18:56:23Z",
    "updated_at": "2018-03-06T18:56:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "I was able to reproduce the error in a clean repo by running the following commands. \r\n\r\n1) git clone -b $(curl -L https://grpc.io/release) https://github.com/grpc/grpc\r\n2) cd grpc\r\n3) git submodule update --init\r\n4) make\r\n5) cd third_party/protobuf\r\n6) ./autogen.sh\r\n7) mkdir -p /var/local/git/grpc/libs/msan/protobuf\r\n(cd third_party/protobuf ; CC=\"clang\" CXX=\"clang++\" LDFLAGS=\"-fsanitize=memory -DGTEST_HAS_TR1_TUPLE=0 -DGTEST_USE_OWN_TR1_TUPLE=1 -fPIE -pie -Wl,-Ttext-segment=0x7e0000000000 -g \" CPPFLAGS=\"-fPIC -O0 -fsanitize-coverage=edge -fsanitize=memory -fsanitize-memory-track-origins -fsanitize-memory-use-after-dtor -fno-omit-frame-pointer -DGTEST_HAS_TR1_TUPLE=0 -DGTEST_USE_OWN_TR1_TUPLE=1 -Wno-unused-command-line-argument -fPIE -pie -DGPR_NO_DIRECT_SYSCALLS -g \" ./configure --disable-shared --enable-static )\r\n8) make clean \r\n9) make\r\n\r\nNotice that the step 7 is the same command that was executed in MSAN test https://source.cloud.google.com/results/invocations/3ccdbcb7-adab-46c3-b1cd-685e45a5719b/targets\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/370902757",
    "html_url": "https://github.com/grpc/grpc/issues/14604#issuecomment-370902757",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14604",
    "id": 370902757,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDkwMjc1Nw==",
    "user": {
      "login": "yihuazhang",
      "id": 26934891,
      "node_id": "MDQ6VXNlcjI2OTM0ODkx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/26934891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yihuazhang",
      "html_url": "https://github.com/yihuazhang",
      "followers_url": "https://api.github.com/users/yihuazhang/followers",
      "following_url": "https://api.github.com/users/yihuazhang/following{/other_user}",
      "gists_url": "https://api.github.com/users/yihuazhang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yihuazhang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yihuazhang/subscriptions",
      "organizations_url": "https://api.github.com/users/yihuazhang/orgs",
      "repos_url": "https://api.github.com/users/yihuazhang/repos",
      "events_url": "https://api.github.com/users/yihuazhang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yihuazhang/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-06T19:40:40Z",
    "updated_at": "2018-03-06T19:40:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "It seems that some tests executed in MSAN test can be skipped in different PRs, and whether or not those tests will be triggered depend on the files changed in PR. I ran a kokoro test on a test PR (#14608), and it basically skipped all tests in MSAN that were executed in #14400. "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/370904622",
    "html_url": "https://github.com/grpc/grpc/issues/14604#issuecomment-370904622",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14604",
    "id": 370904622,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDkwNDYyMg==",
    "user": {
      "login": "matt-kwong",
      "id": 22083734,
      "node_id": "MDQ6VXNlcjIyMDgzNzM0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/22083734?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matt-kwong",
      "html_url": "https://github.com/matt-kwong",
      "followers_url": "https://api.github.com/users/matt-kwong/followers",
      "following_url": "https://api.github.com/users/matt-kwong/following{/other_user}",
      "gists_url": "https://api.github.com/users/matt-kwong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matt-kwong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matt-kwong/subscriptions",
      "organizations_url": "https://api.github.com/users/matt-kwong/orgs",
      "repos_url": "https://api.github.com/users/matt-kwong/repos",
      "events_url": "https://api.github.com/users/matt-kwong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matt-kwong/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-06T19:46:51Z",
    "updated_at": "2018-03-06T19:46:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, the build gets skipped altogether because only the README was changed. The MSAN build in your PR fails when building.\r\n\r\nI was able to get the build to fail locally on master with `make CONFIG=msan CC=/usr/bin/clang-3.8 CXX=/usr/bin/clang++-3.8`. I'm not sure why this doesn't affect our master builds. Looking into it. "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/370910778",
    "html_url": "https://github.com/grpc/grpc/issues/14604#issuecomment-370910778",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14604",
    "id": 370910778,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDkxMDc3OA==",
    "user": {
      "login": "yihuazhang",
      "id": 26934891,
      "node_id": "MDQ6VXNlcjI2OTM0ODkx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/26934891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yihuazhang",
      "html_url": "https://github.com/yihuazhang",
      "followers_url": "https://api.github.com/users/yihuazhang/followers",
      "following_url": "https://api.github.com/users/yihuazhang/following{/other_user}",
      "gists_url": "https://api.github.com/users/yihuazhang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yihuazhang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yihuazhang/subscriptions",
      "organizations_url": "https://api.github.com/users/yihuazhang/orgs",
      "repos_url": "https://api.github.com/users/yihuazhang/repos",
      "events_url": "https://api.github.com/users/yihuazhang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yihuazhang/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-06T20:06:45Z",
    "updated_at": "2018-03-06T20:06:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks Matt. Do you think https://github.com/google/protobuf/issues/1099 could be related to the issue we are investigating here? "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/370926060",
    "html_url": "https://github.com/grpc/grpc/issues/14604#issuecomment-370926060",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14604",
    "id": 370926060,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDkyNjA2MA==",
    "user": {
      "login": "matt-kwong",
      "id": 22083734,
      "node_id": "MDQ6VXNlcjIyMDgzNzM0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/22083734?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matt-kwong",
      "html_url": "https://github.com/matt-kwong",
      "followers_url": "https://api.github.com/users/matt-kwong/followers",
      "following_url": "https://api.github.com/users/matt-kwong/following{/other_user}",
      "gists_url": "https://api.github.com/users/matt-kwong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matt-kwong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matt-kwong/subscriptions",
      "organizations_url": "https://api.github.com/users/matt-kwong/orgs",
      "repos_url": "https://api.github.com/users/matt-kwong/repos",
      "events_url": "https://api.github.com/users/matt-kwong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matt-kwong/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-06T20:59:19Z",
    "updated_at": "2018-03-06T20:59:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't think they're related. It seems like their issue is related to a compilation issue with not using a proper `libc++` for MSAN. I think we set up ours correctly in https://github.com/grpc/grpc/blob/master/tools/dockerfile/test/cxx_jessie_x64/Dockerfile#L76, or at least we haven't had any issues with it for a while. I tried reproducing the error using https://github.com/grpc/grpc/issues/14604#issuecomment-370902757 in our Dockerfile's environment and was able to reproduce:\r\n```\r\nlibtool: link: ranlib .libs/libprotoc.a\r\nlibtool: link: ( cd \".libs\" && rm -f \"libprotoc.la\" && ln -s \"../libprotoc.la\" \"libprotoc.la\" )\r\n/bin/bash ../libtool  --tag=CXX   --mode=link clang++ -std=c++11  -DHAVE_PTHREAD=1  -Wall -Wno-sign-compare -O2 -g -DNDEBUG  -fsanitize=memory -DGTEST_HAS_TR1_TUPLE=0 -DGTEST_USE_OWN_TR1_TUPLE=1 -fPIE -pie -Wl,-Ttext-segment=0x7e0000000000 -g  -o protoc google/protobuf/compiler/main.o  libprotobuf.la libprotoc.la \r\nlibtool: link: clang++ -std=c++11 -DHAVE_PTHREAD=1 -Wall -Wno-sign-compare -O2 -g -DNDEBUG -fsanitize=memory -DGTEST_HAS_TR1_TUPLE=0 -DGTEST_USE_OWN_TR1_TUPLE=1 -fPIE -pie -Wl,-Ttext-segment=0x7e0000000000 -g -o protoc google/protobuf/compiler/main.o  ./.libs/libprotobuf.a ./.libs/libprotoc.a /tmp/grpc/third_party/protobuf/src/.libs/libprotobuf.a\r\noldpwd=`pwd` && ( cd . && $oldpwd/protoc -I. --cpp_out=$oldpwd google/protobuf/any_test.proto google/protobuf/compiler/cpp/cpp_test_bad_identifiers.proto google/protobuf/map_lite_unittest.proto google/protobuf/map_proto2_unittest.proto google/protobuf/map_unittest.proto google/protobuf/unittest_arena.proto google/protobuf/unittest_custom_options.proto google/protobuf/unittest_drop_unknown_fields.proto google/protobuf/unittest_embed_optimize_for.proto google/protobuf/unittest_empty.proto google/protobuf/unittest_enormous_descriptor.proto google/protobuf/unittest_import_lite.proto google/protobuf/unittest_import.proto google/protobuf/unittest_import_public_lite.proto google/protobuf/unittest_import_public.proto google/protobuf/unittest_lazy_dependencies.proto google/protobuf/unittest_lazy_dependencies_custom_option.proto google/protobuf/unittest_lazy_dependencies_enum.proto google/protobuf/unittest_lite_imports_nonlite.proto google/protobuf/unittest_lite.proto google/protobuf/unittest_mset.proto google/protobuf/unittest_mset_wire_format.proto google/protobuf/unittest_no_arena_lite.proto google/protobuf/unittest_no_arena_import.proto google/protobuf/unittest_no_arena.proto google/protobuf/unittest_no_field_presence.proto google/protobuf/unittest_no_generic_services.proto google/protobuf/unittest_optimize_for.proto google/protobuf/unittest_preserve_unknown_enum2.proto google/protobuf/unittest_preserve_unknown_enum.proto google/protobuf/unittest.proto google/protobuf/unittest_proto3_arena.proto google/protobuf/unittest_proto3_arena_lite.proto google/protobuf/unittest_proto3_lite.proto google/protobuf/unittest_well_known_types.proto google/protobuf/util/internal/testdata/anys.proto google/protobuf/util/internal/testdata/books.proto google/protobuf/util/internal/testdata/default_value.proto google/protobuf/util/internal/testdata/default_value_test.proto google/protobuf/util/internal/testdata/field_mask.proto google/protobuf/util/internal/testdata/maps.proto google/protobuf/util/internal/testdata/oneofs.proto google/protobuf/util/internal/testdata/proto3.proto google/protobuf/util/internal/testdata/struct.proto google/protobuf/util/internal/testdata/timestamp_duration.proto google/protobuf/util/internal/testdata/wrappers.proto google/protobuf/util/json_format_proto3.proto google/protobuf/util/message_differencer_unittest.proto google/protobuf/compiler/cpp/cpp_test_large_enum_value.proto )\r\n==35443==WARNING: MemorySanitizer: use-of-uninitialized-value\r\n    #0 0x7e0000db365e in std::string::_Rep::_M_is_leaked() const /usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h:192:24\r\n    #1 0x7e0000db365e in std::string::_M_leak() /usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h:316\r\n    #2 0x7e0000db365e in std::string::operator[](unsigned long) /usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h:860\r\n    #3 0x7e0000db365e in google::protobuf::io::mutable_string_data(std::string*) /tmp/grpc/third_party/protobuf/src/./google/protobuf/io/zero_copy_stream_impl_lite.h:363\r\n    #4 0x7e0000db365e in google::protobuf::io::as_string_data(std::string*) /tmp/grpc/third_party/protobuf/src/./google/protobuf/io/zero_copy_stream_impl_lite.h:374\r\n    #5 0x7e0000db365e in google::protobuf::io::CodedInputStream::InternalReadStringInline(std::string*, int) /tmp/grpc/third_party/protobuf/src/./google/protobuf/io/coded_stream_inl.h:56\r\n    #6 0x7e0000db365e in google::protobuf::internal::ReadBytesToString(google::protobuf::io::CodedInputStream*, std::string*) /tmp/grpc/third_party/protobuf/src/google/protobuf/wire_format_lite.cc:595\r\n    #7 0x7e0000db365e in google::protobuf::internal::WireFormatLite::ReadBytes(google::protobuf::io::CodedInputStream*, std::string*) /tmp/grpc/third_party/protobuf/src/google/protobuf/wire_format_lite.cc:599\r\n    #8 0x7e0001048db6 in google::protobuf::internal::WireFormatLite::ReadString(google::protobuf::io::CodedInputStream*, std::string*) /tmp/grpc/third_party/protobuf/src/./google/protobuf/wire_format_lite.h:882:10\r\n    #9 0x7e0001048db6 in google::protobuf::FileDescriptorProto::MergePartialFromCodedStream(google::protobuf::io::CodedInputStream*) /tmp/grpc/third_party/protobuf/src/google/protobuf/descriptor.pb.cc:2065\r\n    #10 0x7e0000d8a6a6 in google::protobuf::(anonymous namespace)::InlineMergeFromCodedStream(google::protobuf::io::CodedInputStream*, google::protobuf::MessageLite*) /tmp/grpc/third_party/protobuf/src/google/protobuf/message_lite.cc:119:8\r\n    #11 0x7e0000d8a6a6 in google::protobuf::(anonymous namespace)::InlineParseFromCodedStream(google::protobuf::io::CodedInputStream*, google::protobuf::MessageLite*) /tmp/grpc/third_party/protobuf/src/google/protobuf/message_lite.cc:130\r\n    #12 0x7e0000d8a6a6 in google::protobuf::(anonymous namespace)::InlineParseFromArray(void const*, int, google::protobuf::MessageLite*) /tmp/grpc/third_party/protobuf/src/google/protobuf/message_lite.cc:142\r\n    #13 0x7e0000d8a6a6 in google::protobuf::MessageLite::ParseFromArray(void const*, int) /tmp/grpc/third_party/protobuf/src/google/protobuf/message_lite.cc:215\r\n    #14 0x7e0000fdc541 in google::protobuf::EncodedDescriptorDatabase::Add(void const*, int) /tmp/grpc/third_party/protobuf/src/google/protobuf/descriptor_database.cc:315:7\r\n    #15 0x7e0000df9db6 in google::protobuf::DescriptorPool::InternalAddGeneratedFile(void const*, int) /tmp/grpc/third_party/protobuf/src/google/protobuf/descriptor.cc:1394:7\r\n    #16 0x7e00001932ac in protobuf_google_2fprotobuf_2fcompiler_2fplugin_2eproto::AddDescriptorsImpl() /tmp/grpc/third_party/protobuf/src/google/protobuf/compiler/plugin.pb.cc:239:3\r\n    #17 0x7e0000cc3ce7 in google::protobuf::internal::FunctionClosure0::Run() /tmp/grpc/third_party/protobuf/src/./google/protobuf/stubs/callback.h:129:5\r\n    #18 0x7e0000cce301 in google::protobuf::GoogleOnceInitImpl(long*, google::protobuf::Closure*) /tmp/grpc/third_party/protobuf/src/google/protobuf/stubs/once.cc:83:5\r\n    #19 0x7e000003f885 in google::protobuf::GoogleOnceInit(long*, void (*)()) /tmp/grpc/third_party/protobuf/src/./google/protobuf/stubs/once.h:128:5\r\n    #20 0x7e000003f885 in protobuf_google_2fprotobuf_2fcompiler_2fplugin_2eproto::AddDescriptors() /tmp/grpc/third_party/protobuf/src/google/protobuf/compiler/plugin.pb.cc:248\r\n    #21 0x7e000003f885 in protobuf_google_2fprotobuf_2fcompiler_2fplugin_2eproto::StaticDescriptorInitializer::StaticDescriptorInitializer() /tmp/grpc/third_party/protobuf/src/google/protobuf/compiler/plugin.pb.cc:253\r\n    #22 0x7e000003f885 in __cxx_global_var_init.2 /tmp/grpc/third_party/protobuf/src/google/protobuf/compiler/plugin.pb.cc:255\r\n    #23 0x7e000003f885 in _GLOBAL__sub_I_plugin.tmp.fda2fda8e80f.30414.ii /root/.ccache/tmp/plugin.tmp.fda2fda8e80f.30414.ii\r\n    #24 0x7e00015f9d8c in __libc_csu_init (/tmp/grpc/third_party/protobuf/src/protoc+0x7e00015f9d8c)\r\n    #25 0x7f1b9f462ad4 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21ad4)\r\n    #26 0x7e000004fa36 in _start (/tmp/grpc/third_party/protobuf/src/protoc+0x7e000004fa36)\r\n\r\n  Uninitialized value was created by a heap allocation\r\n    #0 0x7e00000cded9 in operator new(unsigned long) /llvm/projects/compiler-rt/lib/msan/msan_new_delete.cc:35\r\n    #1 0x7e0000169a7d in google::protobuf::internal::ArenaStringPtr::CreateInstance(google::protobuf::Arena*, std::string const*) /tmp/grpc/third_party/protobuf/src/./google/protobuf/arenastring.h:304:12\r\n    #2 0x7e0001048d4f in google::protobuf::internal::ArenaStringPtr::Mutable(std::string const*, google::protobuf::Arena*) /tmp/grpc/third_party/protobuf/src/./google/protobuf/arenastring.h:76:7\r\n    #3 0x7e0001048d4f in google::protobuf::FileDescriptorProto::mutable_name() /tmp/grpc/third_party/protobuf/src/./google/protobuf/descriptor.pb.h:5768\r\n    #4 0x7e0001048d4f in google::protobuf::FileDescriptorProto::MergePartialFromCodedStream(google::protobuf::io::CodedInputStream*) /tmp/grpc/third_party/protobuf/src/google/protobuf/descriptor.pb.cc:2065\r\n    #5 0x7e0000d8a6a6 in google::protobuf::(anonymous namespace)::InlineMergeFromCodedStream(google::protobuf::io::CodedInputStream*, google::protobuf::MessageLite*) /tmp/grpc/third_party/protobuf/src/google/protobuf/message_lite.cc:119:8\r\n    #6 0x7e0000d8a6a6 in google::protobuf::(anonymous namespace)::InlineParseFromCodedStream(google::protobuf::io::CodedInputStream*, google::protobuf::MessageLite*) /tmp/grpc/third_party/protobuf/src/google/protobuf/message_lite.cc:130\r\n    #7 0x7e0000d8a6a6 in google::protobuf::(anonymous namespace)::InlineParseFromArray(void const*, int, google::protobuf::MessageLite*) /tmp/grpc/third_party/protobuf/src/google/protobuf/message_lite.cc:142\r\n    #8 0x7e0000d8a6a6 in google::protobuf::MessageLite::ParseFromArray(void const*, int) /tmp/grpc/third_party/protobuf/src/google/protobuf/message_lite.cc:215\r\n    #9 0x7e0000fdc541 in google::protobuf::EncodedDescriptorDatabase::Add(void const*, int) /tmp/grpc/third_party/protobuf/src/google/protobuf/descriptor_database.cc:315:7\r\n    #10 0x7e0000df9db6 in google::protobuf::DescriptorPool::InternalAddGeneratedFile(void const*, int) /tmp/grpc/third_party/protobuf/src/google/protobuf/descriptor.cc:1394:7\r\n    #11 0x7e00001932ac in protobuf_google_2fprotobuf_2fcompiler_2fplugin_2eproto::AddDescriptorsImpl() /tmp/grpc/third_party/protobuf/src/google/protobuf/compiler/plugin.pb.cc:239:3\r\n    #12 0x7e0000cc3ce7 in google::protobuf::internal::FunctionClosure0::Run() /tmp/grpc/third_party/protobuf/src/./google/protobuf/stubs/callback.h:129:5\r\n    #13 0x7e0000cce301 in google::protobuf::GoogleOnceInitImpl(long*, google::protobuf::Closure*) /tmp/grpc/third_party/protobuf/src/google/protobuf/stubs/once.cc:83:5\r\n    #14 0x7e000003f885 in google::protobuf::GoogleOnceInit(long*, void (*)()) /tmp/grpc/third_party/protobuf/src/./google/protobuf/stubs/once.h:128:5\r\n    #15 0x7e000003f885 in protobuf_google_2fprotobuf_2fcompiler_2fplugin_2eproto::AddDescriptors() /tmp/grpc/third_party/protobuf/src/google/protobuf/compiler/plugin.pb.cc:248\r\n    #16 0x7e000003f885 in protobuf_google_2fprotobuf_2fcompiler_2fplugin_2eproto::StaticDescriptorInitializer::StaticDescriptorInitializer() /tmp/grpc/third_party/protobuf/src/google/protobuf/compiler/plugin.pb.cc:253\r\n    #17 0x7e000003f885 in __cxx_global_var_init.2 /tmp/grpc/third_party/protobuf/src/google/protobuf/compiler/plugin.pb.cc:255\r\n    #18 0x7e000003f885 in _GLOBAL__sub_I_plugin.tmp.fda2fda8e80f.30414.ii /root/.ccache/tmp/plugin.tmp.fda2fda8e80f.30414.ii\r\n    #19 0x7e00015f9d8c in __libc_csu_init (/tmp/grpc/third_party/protobuf/src/protoc+0x7e00015f9d8c)\r\n\r\nSUMMARY: MemorySanitizer: use-of-uninitialized-value /usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/basic_string.h:192:24 in std::string::_Rep::_M_is_leaked() const\r\nExiting\r\nMakefile:8199: recipe for target 'unittest_proto_middleman' failed\r\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/370941865",
    "html_url": "https://github.com/grpc/grpc/issues/14604#issuecomment-370941865",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14604",
    "id": 370941865,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDk0MTg2NQ==",
    "user": {
      "login": "nicolasnoble",
      "id": 7281574,
      "node_id": "MDQ6VXNlcjcyODE1NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7281574?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nicolasnoble",
      "html_url": "https://github.com/nicolasnoble",
      "followers_url": "https://api.github.com/users/nicolasnoble/followers",
      "following_url": "https://api.github.com/users/nicolasnoble/following{/other_user}",
      "gists_url": "https://api.github.com/users/nicolasnoble/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nicolasnoble/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nicolasnoble/subscriptions",
      "organizations_url": "https://api.github.com/users/nicolasnoble/orgs",
      "repos_url": "https://api.github.com/users/nicolasnoble/repos",
      "events_url": "https://api.github.com/users/nicolasnoble/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nicolasnoble/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-06T21:52:26Z",
    "updated_at": "2018-03-06T21:52:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "Right, okay. This isn't a new problem at all. We've had issues with making protoc run under msan before, and as a result, we decided to not run msan tests that involve any protobuf code.\r\n\r\nThe rootcause is basically that we try to build protoc with msan options - because we're in msan build - but it just won't work there. The reason is indeed because it requires more tweaks to compile and run properly.\r\n\r\nWe decided at the time this was fine because most of the code we really cared about that we needed to test with msan was covered already with core tests, instead of trying to work around the issue and get protoc to work under msan.\r\n\r\nUnfortunately, #14400 now drags protoc into the core tests. Which either will force us to try and get msan to work for protoc, or workaround the same way we did with the other similar issues by dropping into the repository pre-generated files.\r\n\r\nUltimately, I think the right answer is the second one anyway, because having a dependency on protoc to build the core isn't going to work fine in the long run for artifact buildings of ruby / node / python / php."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/370942476",
    "html_url": "https://github.com/grpc/grpc/issues/14604#issuecomment-370942476",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14604",
    "id": 370942476,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDk0MjQ3Ng==",
    "user": {
      "login": "nicolasnoble",
      "id": 7281574,
      "node_id": "MDQ6VXNlcjcyODE1NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7281574?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nicolasnoble",
      "html_url": "https://github.com/nicolasnoble",
      "followers_url": "https://api.github.com/users/nicolasnoble/followers",
      "following_url": "https://api.github.com/users/nicolasnoble/following{/other_user}",
      "gists_url": "https://api.github.com/users/nicolasnoble/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nicolasnoble/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nicolasnoble/subscriptions",
      "organizations_url": "https://api.github.com/users/nicolasnoble/orgs",
      "repos_url": "https://api.github.com/users/nicolasnoble/repos",
      "events_url": "https://api.github.com/users/nicolasnoble/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nicolasnoble/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-06T21:54:32Z",
    "updated_at": "2018-03-06T21:54:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "To further explain what I am talking about:\r\n\r\n-) have a script that generates the proper files to be committed into the repository\r\n-) have a sanity test that makes sure that if you regenerate these files, they don't change, so people don't forget to regenerate them\r\n-) commit the generated files into the repository"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/370950725",
    "html_url": "https://github.com/grpc/grpc/issues/14604#issuecomment-370950725",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14604",
    "id": 370950725,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDk1MDcyNQ==",
    "user": {
      "login": "nicolasnoble",
      "id": 7281574,
      "node_id": "MDQ6VXNlcjcyODE1NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7281574?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nicolasnoble",
      "html_url": "https://github.com/nicolasnoble",
      "followers_url": "https://api.github.com/users/nicolasnoble/followers",
      "following_url": "https://api.github.com/users/nicolasnoble/following{/other_user}",
      "gists_url": "https://api.github.com/users/nicolasnoble/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nicolasnoble/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nicolasnoble/subscriptions",
      "organizations_url": "https://api.github.com/users/nicolasnoble/orgs",
      "repos_url": "https://api.github.com/users/nicolasnoble/repos",
      "events_url": "https://api.github.com/users/nicolasnoble/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nicolasnoble/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-06T22:23:36Z",
    "updated_at": "2018-03-06T22:23:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "So double checking your PR, you already did all of the above. I am not sure why protoc is being invoked at all then..."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/370955671",
    "html_url": "https://github.com/grpc/grpc/issues/14604#issuecomment-370955671",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14604",
    "id": 370955671,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDk1NTY3MQ==",
    "user": {
      "login": "yihuazhang",
      "id": 26934891,
      "node_id": "MDQ6VXNlcjI2OTM0ODkx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/26934891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yihuazhang",
      "html_url": "https://github.com/yihuazhang",
      "followers_url": "https://api.github.com/users/yihuazhang/followers",
      "following_url": "https://api.github.com/users/yihuazhang/following{/other_user}",
      "gists_url": "https://api.github.com/users/yihuazhang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yihuazhang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yihuazhang/subscriptions",
      "organizations_url": "https://api.github.com/users/yihuazhang/orgs",
      "repos_url": "https://api.github.com/users/yihuazhang/repos",
      "events_url": "https://api.github.com/users/yihuazhang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yihuazhang/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-06T22:42:15Z",
    "updated_at": "2018-03-06T22:42:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Do you know what part of grpc build system determines whether protoc is being invoked or not? In other words, what requirements does the PR need to satisfy in order not to trigger the protoc test? "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/370960646",
    "html_url": "https://github.com/grpc/grpc/issues/14604#issuecomment-370960646",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14604",
    "id": 370960646,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDk2MDY0Ng==",
    "user": {
      "login": "yihuazhang",
      "id": 26934891,
      "node_id": "MDQ6VXNlcjI2OTM0ODkx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/26934891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yihuazhang",
      "html_url": "https://github.com/yihuazhang",
      "followers_url": "https://api.github.com/users/yihuazhang/followers",
      "following_url": "https://api.github.com/users/yihuazhang/following{/other_user}",
      "gists_url": "https://api.github.com/users/yihuazhang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yihuazhang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yihuazhang/subscriptions",
      "organizations_url": "https://api.github.com/users/yihuazhang/orgs",
      "repos_url": "https://api.github.com/users/yihuazhang/repos",
      "events_url": "https://api.github.com/users/yihuazhang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yihuazhang/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-06T23:02:08Z",
    "updated_at": "2018-03-06T23:02:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "It seems Makefile contains the information that I am looking for. Let me look more into it."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/370976812",
    "html_url": "https://github.com/grpc/grpc/issues/14604#issuecomment-370976812",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14604",
    "id": 370976812,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDk3NjgxMg==",
    "user": {
      "login": "yihuazhang",
      "id": 26934891,
      "node_id": "MDQ6VXNlcjI2OTM0ODkx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/26934891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yihuazhang",
      "html_url": "https://github.com/yihuazhang",
      "followers_url": "https://api.github.com/users/yihuazhang/followers",
      "following_url": "https://api.github.com/users/yihuazhang/following{/other_user}",
      "gists_url": "https://api.github.com/users/yihuazhang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yihuazhang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yihuazhang/subscriptions",
      "organizations_url": "https://api.github.com/users/yihuazhang/orgs",
      "repos_url": "https://api.github.com/users/yihuazhang/repos",
      "events_url": "https://api.github.com/users/yihuazhang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yihuazhang/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-07T00:17:58Z",
    "updated_at": "2018-03-07T00:17:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "In run_tests_matrix.py, it determines the tests that will be executed and it uses filter_tests API to skip the tests that are not supposed to be executed. Since #14400 touches many files, unfortunately none of the tests will skipped (len(relevant_jobs) = len(jobs) at line 538). One of the executed tests is run_tests_c_linux_msan_native (that should be skipped in order to not trigger protoc test) which uses makefile to build protobuf source (HAS_EMBEDDED_PROTOBUF=true) that resulted in the Msan errors."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/370978739",
    "html_url": "https://github.com/grpc/grpc/issues/14604#issuecomment-370978739",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14604",
    "id": 370978739,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDk3ODczOQ==",
    "user": {
      "login": "matt-kwong",
      "id": 22083734,
      "node_id": "MDQ6VXNlcjIyMDgzNzM0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/22083734?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matt-kwong",
      "html_url": "https://github.com/matt-kwong",
      "followers_url": "https://api.github.com/users/matt-kwong/followers",
      "following_url": "https://api.github.com/users/matt-kwong/following{/other_user}",
      "gists_url": "https://api.github.com/users/matt-kwong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matt-kwong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matt-kwong/subscriptions",
      "organizations_url": "https://api.github.com/users/matt-kwong/orgs",
      "repos_url": "https://api.github.com/users/matt-kwong/repos",
      "events_url": "https://api.github.com/users/matt-kwong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matt-kwong/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-07T00:28:14Z",
    "updated_at": "2018-03-07T00:28:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "`run_tests_c_linux_msan_native` is a test suite that runs `test/core` tests using Msan. It shouldn't be skipped at all for your PR, since you're changing changes to file in `src/core`. Before the changes in your pull request, `run_tests_c_linux_msan_native` wouldn't build protoc because it wasn't necessary. Something in your PR must've added or changed a core test so that protoc is required. \r\n\r\nI think your pull request has everything required to avoid building protoc for core tests, so I'm looking to see how we can avoid building it. "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/370993748",
    "html_url": "https://github.com/grpc/grpc/issues/14604#issuecomment-370993748",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14604",
    "id": 370993748,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDk5Mzc0OA==",
    "user": {
      "login": "matt-kwong",
      "id": 22083734,
      "node_id": "MDQ6VXNlcjIyMDgzNzM0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/22083734?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matt-kwong",
      "html_url": "https://github.com/matt-kwong",
      "followers_url": "https://api.github.com/users/matt-kwong/followers",
      "following_url": "https://api.github.com/users/matt-kwong/following{/other_user}",
      "gists_url": "https://api.github.com/users/matt-kwong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matt-kwong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matt-kwong/subscriptions",
      "organizations_url": "https://api.github.com/users/matt-kwong/orgs",
      "repos_url": "https://api.github.com/users/matt-kwong/repos",
      "events_url": "https://api.github.com/users/matt-kwong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matt-kwong/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-07T01:47:57Z",
    "updated_at": "2018-03-07T01:47:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "After talking with @nicolasnoble, we think the problem is that the changes you added in `build.yaml` add tests that with `language: c++`. This shouldn't add tests to `run_tests_c_linux_msan_native`, but we think that one of the tests you added shares a src with a `language: c` test, so that make thinks it should build protoc. \r\n\r\nI tried changing everything you added to `build.yaml` to `language: c` and `make buildtests_c tools_c CONFIG=msan -j50` works. It doesn't seem like anything you added requires C++, so this should be fine."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/371167970",
    "html_url": "https://github.com/grpc/grpc/issues/14604#issuecomment-371167970",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14604",
    "id": 371167970,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTE2Nzk3MA==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-07T15:06:47Z",
    "updated_at": "2018-03-07T15:06:47Z",
    "author_association": "MEMBER",
    "body": "Changing the build targets to language=C instead of C++ is probably fine for the current PR, but we are ultimately going to want to convert those tests to C++ tests using gUnit.  So I think we need to find a structural fix for this as well."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/371170090",
    "html_url": "https://github.com/grpc/grpc/issues/14604#issuecomment-371170090",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14604",
    "id": 371170090,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTE3MDA5MA==",
    "user": {
      "login": "yihuazhang",
      "id": 26934891,
      "node_id": "MDQ6VXNlcjI2OTM0ODkx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/26934891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yihuazhang",
      "html_url": "https://github.com/yihuazhang",
      "followers_url": "https://api.github.com/users/yihuazhang/followers",
      "following_url": "https://api.github.com/users/yihuazhang/following{/other_user}",
      "gists_url": "https://api.github.com/users/yihuazhang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yihuazhang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yihuazhang/subscriptions",
      "organizations_url": "https://api.github.com/users/yihuazhang/orgs",
      "repos_url": "https://api.github.com/users/yihuazhang/repos",
      "events_url": "https://api.github.com/users/yihuazhang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yihuazhang/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-07T15:13:12Z",
    "updated_at": "2018-03-07T15:13:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "To wrap up the discussion, the problem as @matt-kwong pointed out, is caused by one lib (alts_test_util) in build.yaml uses language: c++ which also depends on other ALTS targets that have language : c. The mix use of different languages triggered the protoc rebuild (I still do not fully understand why it is the case). After changing the lib to use language: c, the problem is resolved. All tests can still use language: c++.  Thanks much @matt-kwong and @nicolasnoble for your efforts to resolve the issue. "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/371179519",
    "html_url": "https://github.com/grpc/grpc/issues/14604#issuecomment-371179519",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14604",
    "id": 371179519,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTE3OTUxOQ==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-07T15:40:43Z",
    "updated_at": "2018-03-07T15:40:43Z",
    "author_association": "MEMBER",
    "body": "We will eventually want all of this code converted to C++, even alts_test_util.  This doesn't need to be a blocker for the current PR, but we do still need to find a way to eventually have C++ targets without triggering this msan problem."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/371190577",
    "html_url": "https://github.com/grpc/grpc/issues/14604#issuecomment-371190577",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14604",
    "id": 371190577,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTE5MDU3Nw==",
    "user": {
      "login": "yihuazhang",
      "id": 26934891,
      "node_id": "MDQ6VXNlcjI2OTM0ODkx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/26934891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yihuazhang",
      "html_url": "https://github.com/yihuazhang",
      "followers_url": "https://api.github.com/users/yihuazhang/followers",
      "following_url": "https://api.github.com/users/yihuazhang/following{/other_user}",
      "gists_url": "https://api.github.com/users/yihuazhang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yihuazhang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yihuazhang/subscriptions",
      "organizations_url": "https://api.github.com/users/yihuazhang/orgs",
      "repos_url": "https://api.github.com/users/yihuazhang/repos",
      "events_url": "https://api.github.com/users/yihuazhang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yihuazhang/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-07T16:12:31Z",
    "updated_at": "2018-03-07T16:12:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sorry Mark, I did not see your comments. Yes, I agree we need a structural fix for this problem by finding out the real cause that triggers protoc rebuild."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/371240778",
    "html_url": "https://github.com/grpc/grpc/issues/14604#issuecomment-371240778",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14604",
    "id": 371240778,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTI0MDc3OA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-07T18:42:45Z",
    "updated_at": "2018-03-07T18:42:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "Looks like other have better mileage with this problem so I'm unassigning myself. Let me know in case you need me to get involved."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/371241474",
    "html_url": "https://github.com/grpc/grpc/issues/14604#issuecomment-371241474",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14604",
    "id": 371241474,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTI0MTQ3NA==",
    "user": {
      "login": "nicolasnoble",
      "id": 7281574,
      "node_id": "MDQ6VXNlcjcyODE1NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7281574?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nicolasnoble",
      "html_url": "https://github.com/nicolasnoble",
      "followers_url": "https://api.github.com/users/nicolasnoble/followers",
      "following_url": "https://api.github.com/users/nicolasnoble/following{/other_user}",
      "gists_url": "https://api.github.com/users/nicolasnoble/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nicolasnoble/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nicolasnoble/subscriptions",
      "organizations_url": "https://api.github.com/users/nicolasnoble/orgs",
      "repos_url": "https://api.github.com/users/nicolasnoble/repos",
      "events_url": "https://api.github.com/users/nicolasnoble/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nicolasnoble/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-07T18:44:56Z",
    "updated_at": "2018-03-07T18:44:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "The \"C\" tag is now a complete misnomer. The keyword \"language\" too. The\nintend now is more \"class\" or \"category\" instead of \"language\", and \"core\"\ninstead of \"C\".\n\nLuckily, we will rid ourselves of this and just switch to use bazel.\n\nOn Wed, Mar 7, 2018 at 10:43 AM, Jan Tattermusch <notifications@github.com>\nwrote:\n\n> Looks like other have better mileage with this problem so I'm unassigning\n> myself. Let me know in case you need me to get involved.\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/grpc/grpc/issues/14604#issuecomment-371240778>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AG8bpmyO7cnS39exGL2IhdfeNLutYk44ks5tcCo0gaJpZM4Se7Sh>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/371996628",
    "html_url": "https://github.com/grpc/grpc/issues/14604#issuecomment-371996628",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/14604",
    "id": 371996628,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTk5NjYyOA==",
    "user": {
      "login": "matt-kwong",
      "id": 22083734,
      "node_id": "MDQ6VXNlcjIyMDgzNzM0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/22083734?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matt-kwong",
      "html_url": "https://github.com/matt-kwong",
      "followers_url": "https://api.github.com/users/matt-kwong/followers",
      "following_url": "https://api.github.com/users/matt-kwong/following{/other_user}",
      "gists_url": "https://api.github.com/users/matt-kwong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matt-kwong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matt-kwong/subscriptions",
      "organizations_url": "https://api.github.com/users/matt-kwong/orgs",
      "repos_url": "https://api.github.com/users/matt-kwong/repos",
      "events_url": "https://api.github.com/users/matt-kwong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matt-kwong/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-10T02:46:13Z",
    "updated_at": "2018-03-10T02:46:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "Closing this issue, since the PR is merged. \r\n\r\nI opened #14663 for supporting MSan C++ which is related to this issue. "
  }
]
