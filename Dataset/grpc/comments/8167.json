[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/248932717",
    "html_url": "https://github.com/grpc/grpc/issues/8167#issuecomment-248932717",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8167",
    "id": 248932717,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODkzMjcxNw==",
    "user": {
      "login": "jhickson",
      "id": 2581446,
      "node_id": "MDQ6VXNlcjI1ODE0NDY=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2581446?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jhickson",
      "html_url": "https://github.com/jhickson",
      "followers_url": "https://api.github.com/users/jhickson/followers",
      "following_url": "https://api.github.com/users/jhickson/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhickson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jhickson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhickson/subscriptions",
      "organizations_url": "https://api.github.com/users/jhickson/orgs",
      "repos_url": "https://api.github.com/users/jhickson/repos",
      "events_url": "https://api.github.com/users/jhickson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jhickson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-22T15:11:15Z",
    "updated_at": "2016-09-22T15:23:42Z",
    "author_association": "NONE",
    "body": "**Update**: I said above that this doesn't happen if I trigger a connect by invoking call but it turns out that's not true though it happens less often.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/248970082",
    "html_url": "https://github.com/grpc/grpc/issues/8167#issuecomment-248970082",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8167",
    "id": 248970082,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODk3MDA4Mg==",
    "user": {
      "login": "apolcyn",
      "id": 9566254,
      "node_id": "MDQ6VXNlcjk1NjYyNTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9566254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apolcyn",
      "html_url": "https://github.com/apolcyn",
      "followers_url": "https://api.github.com/users/apolcyn/followers",
      "following_url": "https://api.github.com/users/apolcyn/following{/other_user}",
      "gists_url": "https://api.github.com/users/apolcyn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apolcyn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apolcyn/subscriptions",
      "organizations_url": "https://api.github.com/users/apolcyn/orgs",
      "repos_url": "https://api.github.com/users/apolcyn/repos",
      "events_url": "https://api.github.com/users/apolcyn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apolcyn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-22T17:24:13Z",
    "updated_at": "2016-09-22T17:24:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think this behavior is actually expected. The channel state API is documented in https://github.com/grpc/grpc/blob/master/doc/connectivity-semantics-and-api.md. But basically from the descriptions here, what appears to be happening is:\n\nAt the beginning, the channel attempts to connect. It successfully makes the TCP handshake and then transitions to READY. The `Thread.Sleep(500)` actually makes a significant difference after shutting down the TCP server and trying to call `Channel.ConnectAsync` again, because after no RPC activity has occurred on the channel for IDLE_TIMEOUT (default at 300 seconds), the channel transitions to \"idle\" state. Without the timeout, the channel probably thinks it's still in \"ready\" state just after closing the server, and so the subsequent state polling in the loop should have differing results.\n\nWhen trying to connect to the closed TCP server, it flips between \"transient failure\" and \"connecting\" states as it goes through its retry logic. Eventually, it looks like the IDLE_TIMEOUT occurs while in one of the retried \"connecting\" states, and the channel state transitions to \"idle\". Once in the \"idle\" state, it stays there for as long as it's not explicitly shut down and there aren't any RPC attempts on it.\n\nThe exact difference that the initial states make before the state-polling loop should come down to timing, and the time taken between retries, and is probably a bit hard to trace down. But just note that the reconnect attempts and the time taken here is expected to be influenced by the time-without-RPCs - so there doesn't look to be a race here.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/248972852",
    "html_url": "https://github.com/grpc/grpc/issues/8167#issuecomment-248972852",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8167",
    "id": 248972852,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODk3Mjg1Mg==",
    "user": {
      "login": "apolcyn",
      "id": 9566254,
      "node_id": "MDQ6VXNlcjk1NjYyNTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9566254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apolcyn",
      "html_url": "https://github.com/apolcyn",
      "followers_url": "https://api.github.com/users/apolcyn/followers",
      "following_url": "https://api.github.com/users/apolcyn/following{/other_user}",
      "gists_url": "https://api.github.com/users/apolcyn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apolcyn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apolcyn/subscriptions",
      "organizations_url": "https://api.github.com/users/apolcyn/orgs",
      "repos_url": "https://api.github.com/users/apolcyn/repos",
      "events_url": "https://api.github.com/users/apolcyn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apolcyn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-22T17:34:24Z",
    "updated_at": "2016-09-22T17:34:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "closing as I think this is ok by the channel state API\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/249133962",
    "html_url": "https://github.com/grpc/grpc/issues/8167#issuecomment-249133962",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8167",
    "id": 249133962,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTEzMzk2Mg==",
    "user": {
      "login": "jhickson",
      "id": 2581446,
      "node_id": "MDQ6VXNlcjI1ODE0NDY=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2581446?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jhickson",
      "html_url": "https://github.com/jhickson",
      "followers_url": "https://api.github.com/users/jhickson/followers",
      "following_url": "https://api.github.com/users/jhickson/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhickson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jhickson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhickson/subscriptions",
      "organizations_url": "https://api.github.com/users/jhickson/orgs",
      "repos_url": "https://api.github.com/users/jhickson/repos",
      "events_url": "https://api.github.com/users/jhickson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jhickson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-23T08:31:46Z",
    "updated_at": "2016-09-23T08:31:46Z",
    "author_association": "NONE",
    "body": "Thanks for pointing me to the documentation. I don't think it explains what I'm seeing though. For a start the IDLE_TIMEOUT is set to 300 seconds by default according to the documentation so I should see 5 minutes' worth of flip-flopping between Connecting and TransientFailure before moving to Idle. But instead I just TransientFailure -> Idle immediately after the remote is closed. Both test runs take just a few seconds before the second one gets stuck in Idle. Also, regardless of possible transitions I would have expected that an explicit call to ConnectAsync would force the Channel to attempt to connect regardless of RPC activity.\n\nAnother reason I suspect something is up is this. Remember that I have two test cases here. If I run them individually under NUnit then _usually_ the ConnectAsync prompts a series of connect retries then before the channel is shut down (by an external monitor) after a certain number of failures. If I run both test cases together - i.e. they run in series but in the same process - then usually the first test case retries connection but the second does not. No resources are shared between the two test case runs. In some ways this suggests there's static state in internal GRPC code that's possibly not being cleaned up properly but the fact that occasionally the first test case (or test cases run individually) will fail to attempt to reconnect suggests something else at play.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/249258976",
    "html_url": "https://github.com/grpc/grpc/issues/8167#issuecomment-249258976",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8167",
    "id": 249258976,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTI1ODk3Ng==",
    "user": {
      "login": "apolcyn",
      "id": 9566254,
      "node_id": "MDQ6VXNlcjk1NjYyNTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9566254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apolcyn",
      "html_url": "https://github.com/apolcyn",
      "followers_url": "https://api.github.com/users/apolcyn/followers",
      "following_url": "https://api.github.com/users/apolcyn/following{/other_user}",
      "gists_url": "https://api.github.com/users/apolcyn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apolcyn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apolcyn/subscriptions",
      "organizations_url": "https://api.github.com/users/apolcyn/orgs",
      "repos_url": "https://api.github.com/users/apolcyn/repos",
      "events_url": "https://api.github.com/users/apolcyn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apolcyn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-23T17:51:41Z",
    "updated_at": "2016-09-23T17:51:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "update: so @jhickson this looks like it brings up a documentation issue. I guess the state diagram in https://github.com/grpc/grpc/blob/master/doc/connectivity-semantics-and-api.md isn't 100% true at this point, as it is expected that the transition to idle can actually happen earlier than the 300 seconds mentioned in the doc, if the channel finds out that it would be more efficient to do so. And I guess this transition to idle is actually a bit unspecified at this point anyways.\n\nI should add that with gRPC being over HTTP2/TCP, the attempts to connect to the raw TCP server I suspect would give some somewhat unspecified behavior around the channel state API. The docs currently only mention completion of TCP handshakes, but there's probably also some failures to recognize HTTP2 going on, but again this is probably a doc issue.\n\nStill for most cases though, I would think the Channel API should be able to abstract these states and transitions. Wondering are you examining these states in the application?\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/249266725",
    "html_url": "https://github.com/grpc/grpc/issues/8167#issuecomment-249266725",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8167",
    "id": 249266725,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTI2NjcyNQ==",
    "user": {
      "login": "jhickson",
      "id": 2581446,
      "node_id": "MDQ6VXNlcjI1ODE0NDY=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2581446?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jhickson",
      "html_url": "https://github.com/jhickson",
      "followers_url": "https://api.github.com/users/jhickson/followers",
      "following_url": "https://api.github.com/users/jhickson/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhickson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jhickson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhickson/subscriptions",
      "organizations_url": "https://api.github.com/users/jhickson/orgs",
      "repos_url": "https://api.github.com/users/jhickson/repos",
      "events_url": "https://api.github.com/users/jhickson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jhickson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-23T18:23:45Z",
    "updated_at": "2016-09-23T18:23:45Z",
    "author_association": "NONE",
    "body": "@apolcyn: you'll be pleased to know that I'm no longer examining these states. I thought I needed to but I was just over-complicating matters. So whether this is purely a documentation issue or something more sinister is of less relevance to me now. However, it would be good to get clarification.\n\nBy the way, if I'm not supposed to be examining these states then should the means of doing so be in the surface API at all? Or is it useful to have them there for diagnostics?\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/249328751",
    "html_url": "https://github.com/grpc/grpc/issues/8167#issuecomment-249328751",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8167",
    "id": 249328751,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTMyODc1MQ==",
    "user": {
      "login": "apolcyn",
      "id": 9566254,
      "node_id": "MDQ6VXNlcjk1NjYyNTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9566254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apolcyn",
      "html_url": "https://github.com/apolcyn",
      "followers_url": "https://api.github.com/users/apolcyn/followers",
      "following_url": "https://api.github.com/users/apolcyn/following{/other_user}",
      "gists_url": "https://api.github.com/users/apolcyn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apolcyn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apolcyn/subscriptions",
      "organizations_url": "https://api.github.com/users/apolcyn/orgs",
      "repos_url": "https://api.github.com/users/apolcyn/repos",
      "events_url": "https://api.github.com/users/apolcyn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apolcyn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-23T23:59:21Z",
    "updated_at": "2016-09-23T23:59:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jhickson thanks for bringing this to attention anyways. AFAIK the behavior around the Channel connectivity states and transitions is probably not _stable_ at this point, at least from a timing perspective, though it is accessible. Basically, being IO/timing sensitive, I think it would be difficult to set hard expectations against. And there are complexities like, for example, polling `channel.state` might actually give a different result than the state just arrived at in `WaitForStateChangeAsync`, as it should be valid for the state to change in the time between.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/249329110",
    "html_url": "https://github.com/grpc/grpc/issues/8167#issuecomment-249329110",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8167",
    "id": 249329110,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTMyOTExMA==",
    "user": {
      "login": "apolcyn",
      "id": 9566254,
      "node_id": "MDQ6VXNlcjk1NjYyNTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9566254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apolcyn",
      "html_url": "https://github.com/apolcyn",
      "followers_url": "https://api.github.com/users/apolcyn/followers",
      "following_url": "https://api.github.com/users/apolcyn/following{/other_user}",
      "gists_url": "https://api.github.com/users/apolcyn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apolcyn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apolcyn/subscriptions",
      "organizations_url": "https://api.github.com/users/apolcyn/orgs",
      "repos_url": "https://api.github.com/users/apolcyn/repos",
      "events_url": "https://api.github.com/users/apolcyn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apolcyn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-24T00:03:10Z",
    "updated_at": "2016-09-24T00:03:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jtattermusch I would think that the methods like `WaitForStateChangeAsync` are probably more internal, but maybe there's more to the intended usage of these?\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/264359326",
    "html_url": "https://github.com/grpc/grpc/issues/8167#issuecomment-264359326",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8167",
    "id": 264359326,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDM1OTMyNg==",
    "user": {
      "login": "apolcyn",
      "id": 9566254,
      "node_id": "MDQ6VXNlcjk1NjYyNTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9566254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apolcyn",
      "html_url": "https://github.com/apolcyn",
      "followers_url": "https://api.github.com/users/apolcyn/followers",
      "following_url": "https://api.github.com/users/apolcyn/following{/other_user}",
      "gists_url": "https://api.github.com/users/apolcyn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apolcyn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apolcyn/subscriptions",
      "organizations_url": "https://api.github.com/users/apolcyn/orgs",
      "repos_url": "https://api.github.com/users/apolcyn/repos",
      "events_url": "https://api.github.com/users/apolcyn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apolcyn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-02T02:45:28Z",
    "updated_at": "2016-12-02T02:45:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "Looking more into this, I think there are multiple things going on here, but the most basic problem actually seems to be just that the `ConnectAsync` method will stall when it reaches the terminal \"idle\" state - sorry I had overlooked this earlier. I think that the most simple fix to this is to just attempt to reconnect when it does do this. This seems to fix the repro case here - both test cases finish succesfully."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/284796861",
    "html_url": "https://github.com/grpc/grpc/issues/8167#issuecomment-284796861",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8167",
    "id": 284796861,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDc5Njg2MQ==",
    "user": {
      "login": "apolcyn",
      "id": 9566254,
      "node_id": "MDQ6VXNlcjk1NjYyNTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9566254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apolcyn",
      "html_url": "https://github.com/apolcyn",
      "followers_url": "https://api.github.com/users/apolcyn/followers",
      "following_url": "https://api.github.com/users/apolcyn/following{/other_user}",
      "gists_url": "https://api.github.com/users/apolcyn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apolcyn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apolcyn/subscriptions",
      "organizations_url": "https://api.github.com/users/apolcyn/orgs",
      "repos_url": "https://api.github.com/users/apolcyn/repos",
      "events_url": "https://api.github.com/users/apolcyn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apolcyn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-07T17:34:05Z",
    "updated_at": "2017-03-07T17:34:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "the above comment appears incorrect, this still needs more investigation"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/395708435",
    "html_url": "https://github.com/grpc/grpc/issues/8167#issuecomment-395708435",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8167",
    "id": 395708435,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTcwODQzNQ==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-08T09:39:33Z",
    "updated_at": "2018-06-08T09:39:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Last update on this issue from Mar 2017, closing."
  }
]
