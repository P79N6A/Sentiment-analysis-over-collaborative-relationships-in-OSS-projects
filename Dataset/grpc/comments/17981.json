[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/461839736",
    "html_url": "https://github.com/grpc/grpc/pull/17981#issuecomment-461839736",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17981",
    "id": 461839736,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTgzOTczNg==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-08T15:28:28Z",
    "updated_at": "2019-02-08T15:28:28Z",
    "author_association": "MEMBER",
    "body": "I need more context on this.\r\n\r\nWhat is `ApplicationCallbackExecCtx`, and when is it needed?  There are no comments in exec_ctx.h that tell me anything about what it is, how it is expected to be used, etc.\r\n\r\nWhy does it need to be used in this particular case?  This is not the only place where we have a callback that goes out to application code, so why this case and not others?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/461864897",
    "html_url": "https://github.com/grpc/grpc/pull/17981#issuecomment-461864897",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17981",
    "id": 461864897,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTg2NDg5Nw==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-08T16:40:21Z",
    "updated_at": "2019-02-08T16:40:21Z",
    "author_association": "MEMBER",
    "body": "Failures: #17911 "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/461873055",
    "html_url": "https://github.com/grpc/grpc/pull/17981#issuecomment-461873055",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17981",
    "id": 461873055,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTg3MzA1NQ==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-08T17:04:17Z",
    "updated_at": "2019-02-08T17:04:17Z",
    "author_association": "MEMBER",
    "body": "Ok, the comment is in #17984. As for why this is needed here right now, the reason is that all the other known ExecCtx's that can trigger application-level work have already been covered. This particular spot only popped up now because #17957 increases the scope of our internal testing to cover cases that we hadn't previously tested."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/461931086",
    "html_url": "https://github.com/grpc/grpc/pull/17981#issuecomment-461931086",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17981",
    "id": 461931086,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTkzMTA4Ng==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-08T20:09:33Z",
    "updated_at": "2019-02-08T20:09:33Z",
    "author_association": "MEMBER",
    "body": "I still don't understand why this particular spot needs this.  The place you've added it is where the auth metadata processor plugin on the server returns control to C-core.  Do we have auth metadata processor plugins that do gRPC work?  Or is the concern here simply that when a plugin invokes the async callback into core, the entry into core might result in us needing to schedule other application callbacks?  Does that imply that we need this on every single entry point into core?  To ask that another way, in what situations would we need an ExecCtx but *not* an ApplicationExecCtx?\r\n\r\nThere are several other places where we get callbacks from application plugins back into core.  Some examples:\r\n\r\n- plugin credentials on the client side: https://github.com/grpc/grpc/blob/master/src/core/lib/security/credentials/plugin/plugin_credentials.cc#L117\r\n- the callbacks added in the new TLS credentials surface API in #17549\r\n- the external resolver API being added in #16617\r\n\r\nThese are just the ones I can think of offhand; there are probably others as well."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/461989454",
    "html_url": "https://github.com/grpc/grpc/pull/17981#issuecomment-461989454",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17981",
    "id": 461989454,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTk4OTQ1NA==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-09T00:11:49Z",
    "updated_at": "2019-02-09T00:45:00Z",
    "author_association": "MEMBER",
    "body": "Great; it looks like we don't have C++ test coverage for some of those other cases so we probably haven't observed them. It is safe to go ahead and add them though so I can expand this PR (though I'll only look at the instances that are already merged). Many ExecCtx's need an ApplicationCallbackExecCtx before them, but many don't. For example, the ExecCtx for things like slice_buffer_unref won't trigger any application work specified by the core or C++ callback API no matter what (* see below), so it doesn't need ApplicationCallbackExecCtx coverage. The timer thread and executor thread use long-lived ExecCtx's (that live the full duration of the thread) but empty it in each iteration of their main loop, so we wouldn't want the ApplicationCallbackExecCtx to outlive the ExecCtx in that case (but we would want one in their main loops).\r\n\r\nIn this particular case, the on_md_processing_done causes a new server RPC to be published, which triggers a method handler for that RPC.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/461990545",
    "html_url": "https://github.com/grpc/grpc/pull/17981#issuecomment-461990545",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17981",
    "id": 461990545,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTk5MDU0NQ==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-09T00:18:36Z",
    "updated_at": "2019-02-09T00:45:17Z",
    "author_association": "MEMBER",
    "body": "I'm clarifying one of my above comments. We do provide the facility to invoke a user-provided destruction function in slice unreffing; as a result, we could consider pushing this to the ApplicationCallbackExecCtx (it currently doesn't even run on the ExecCtx but rather just executes inline) but that is a different restructuring that isn't related to the callback API (but may be valuable for other reasons entirely)"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/461996358",
    "html_url": "https://github.com/grpc/grpc/pull/17981#issuecomment-461996358",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17981",
    "id": 461996358,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTk5NjM1OA==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-09T00:58:16Z",
    "updated_at": "2019-02-09T01:21:45Z",
    "author_association": "MEMBER",
    "body": "I went through all instantiations of ExecCtx in src/core and added ApplicationCallbackExecCtx for any that _might_ be a trigger for core callback API usage (essentially, anything that I couldn't rule out). Most were already covered but these few looked worth covering.\r\n\r\n(As an example, channel connectivity checks currently don't interact with the callback API but are on the list of features that will get added to the callback API at some point soon.)"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/462374620",
    "html_url": "https://github.com/grpc/grpc/pull/17981#issuecomment-462374620",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17981",
    "id": 462374620,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MjM3NDYyMA==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-11T15:41:52Z",
    "updated_at": "2019-02-11T15:41:52Z",
    "author_association": "MEMBER",
    "body": "It looks like we're still not covering the callbacks added in the new TLS credentials surface API in #17549.  Do we need it there?\r\n\r\nMore generally, it seems a little redundant that we need an `ApplicationExecCtx` in almost all of the places where we need a normal `ExecCtx`.  Instead of having a separate object for this, have you considered simply storing a list of application callbacks in the `ExecCtx` to be invoked after the internal callbacks?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/462436646",
    "html_url": "https://github.com/grpc/grpc/pull/17981#issuecomment-462436646",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17981",
    "id": 462436646,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MjQzNjY0Ng==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-11T18:21:08Z",
    "updated_at": "2019-02-11T18:24:48Z",
    "author_association": "MEMBER",
    "body": "To address the first comment, I should clarify that ApplicationCallbackExecCtx is meant for resolving repeated core re-entrances that trigger callbacks from the callback API. In the case of #17549, the callbacks are not part of the callback API (similar to the callbacks in the Slice API). So #17549 doesn't introduce any of the callbacks that that ExecCtx format targets. We may want to expand ApplicationCallbackExecCtx to cover other application callbacks (such as the Slice API above) but that's beyond the scope of the current project or testing. I'm specifically looking for scenarios where a core entrance can cause a cq_end_op to get triggered. "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/462437871",
    "html_url": "https://github.com/grpc/grpc/pull/17981#issuecomment-462437871",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17981",
    "id": 462437871,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MjQzNzg3MQ==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-11T18:24:26Z",
    "updated_at": "2019-02-11T18:40:18Z",
    "author_association": "MEMBER",
    "body": "And to address the 2nd comment: the reason that this is currently separate from ExecCtx is that ExecCtx is still stackable, and that'll cause a problem for direct use with application callbacks (stack crashes like we had been seeing before). It may be possible to unify them in many of the use cases but the end result will be a hybrid structure that is part stackable and part pass-through. It is also not directly possible to unify them in the cases of the timer thread and executor thread ExecCtx that need to outlive the ApplicationCallbackExecCtx but get flushed (I can take it as an AI to see if this is possible with refactoring though)"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/462470641",
    "html_url": "https://github.com/grpc/grpc/pull/17981#issuecomment-462470641",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17981",
    "id": 462470641,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MjQ3MDY0MQ==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-11T19:54:45Z",
    "updated_at": "2019-02-11T19:54:45Z",
    "author_association": "MEMBER",
    "body": "> It is also not directly possible to unify them in the cases of the timer thread and executor thread ExecCtx that need to outlive the ApplicationCallbackExecCtx but get flushed (I can take it as an AI to see if this is possible with refactoring though)\r\n\r\nI assume those threads will go away as we move to EventManager-based polling.  Or will we just wind up having the same problem in EventManager threads?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/462473604",
    "html_url": "https://github.com/grpc/grpc/pull/17981#issuecomment-462473604",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/17981",
    "id": 462473604,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MjQ3MzYwNA==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-11T20:03:13Z",
    "updated_at": "2019-02-11T20:03:28Z",
    "author_association": "MEMBER",
    "body": "I think you're definitely right for timing and the offload-features of executor but I don't know the plan for how the EM affects the executor as it is used for resolving.\r\n"
  }
]
