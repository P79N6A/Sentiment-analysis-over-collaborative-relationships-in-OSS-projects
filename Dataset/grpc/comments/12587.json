[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/329652491",
    "html_url": "https://github.com/grpc/grpc/pull/12587#issuecomment-329652491",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12587",
    "id": 329652491,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTY1MjQ5MQ==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-15T01:31:40Z",
    "updated_at": "2017-09-15T01:31:40Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/329837169",
    "html_url": "https://github.com/grpc/grpc/pull/12587#issuecomment-329837169",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12587",
    "id": 329837169,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTgzNzE2OQ==",
    "user": {
      "login": "dgquintas",
      "id": 120217,
      "node_id": "MDQ6VXNlcjEyMDIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/120217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgquintas",
      "html_url": "https://github.com/dgquintas",
      "followers_url": "https://api.github.com/users/dgquintas/followers",
      "following_url": "https://api.github.com/users/dgquintas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgquintas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgquintas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgquintas/subscriptions",
      "organizations_url": "https://api.github.com/users/dgquintas/orgs",
      "repos_url": "https://api.github.com/users/dgquintas/repos",
      "events_url": "https://api.github.com/users/dgquintas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgquintas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-15T16:49:10Z",
    "updated_at": "2017-09-15T16:49:10Z",
    "author_association": "NONE",
    "body": "This PR is in progress, right? If so, please add the \"do not merge\" and \"work in progress\" labels, to indicate us when we can start reviewing."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/329837887",
    "html_url": "https://github.com/grpc/grpc/pull/12587#issuecomment-329837887",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12587",
    "id": 329837887,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTgzNzg4Nw==",
    "user": {
      "login": "AspirinSJL",
      "id": 3314176,
      "node_id": "MDQ6VXNlcjMzMTQxNzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3314176?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AspirinSJL",
      "html_url": "https://github.com/AspirinSJL",
      "followers_url": "https://api.github.com/users/AspirinSJL/followers",
      "following_url": "https://api.github.com/users/AspirinSJL/following{/other_user}",
      "gists_url": "https://api.github.com/users/AspirinSJL/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AspirinSJL/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AspirinSJL/subscriptions",
      "organizations_url": "https://api.github.com/users/AspirinSJL/orgs",
      "repos_url": "https://api.github.com/users/AspirinSJL/repos",
      "events_url": "https://api.github.com/users/AspirinSJL/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AspirinSJL/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-15T16:52:00Z",
    "updated_at": "2017-09-15T16:52:00Z",
    "author_association": "MEMBER",
    "body": "Yes. Just added the labels. Thanks!"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/329848597",
    "html_url": "https://github.com/grpc/grpc/pull/12587#issuecomment-329848597",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12587",
    "id": 329848597,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTg0ODU5Nw==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-15T17:35:23Z",
    "updated_at": "2017-09-15T17:35:23Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] Performance differences noted:\nBenchmark                                                             cpu_time    nows_per_iteration    real_time\n--------------------------------------------------------------------  ----------  --------------------  -----------\nBM_ClosureRunOnExecCtx                                                +4%                               +4%\nBM_UnaryPingPong<MinInProcessCHTTP2, NoOpMutator, NoOpMutator>/0/16M              -5%\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/329862136",
    "html_url": "https://github.com/grpc/grpc/pull/12587#issuecomment-329862136",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12587",
    "id": 329862136,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTg2MjEzNg==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-15T18:22:17Z",
    "updated_at": "2017-09-15T18:22:17Z",
    "author_association": "NONE",
    "body": "```\nCorrupt JSON data (indicates timeout or crash): \n    bm_fullstack_trickle.BM_PumpStreamServerToClient_Trickle_8_4k.opt.old: 1\n    bm_fullstack_trickle.BM_PumpStreamServerToClient_Trickle_64_4k.opt.new: 1\n\n\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/330304367",
    "html_url": "https://github.com/grpc/grpc/pull/12587#issuecomment-330304367",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12587",
    "id": 330304367,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDMwNDM2Nw==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-18T17:53:23Z",
    "updated_at": "2017-09-18T17:53:23Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/330313283",
    "html_url": "https://github.com/grpc/grpc/pull/12587#issuecomment-330313283",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12587",
    "id": 330313283,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDMxMzI4Mw==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-18T18:25:00Z",
    "updated_at": "2017-09-18T18:25:00Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] Performance differences noted:\nBenchmark                                                                                cpu_time    real_time\n---------------------------------------------------------------------------------------  ----------  -----------\nBM_StreamingPingPongWithCoalescingApi<InProcessCHTTP2, NoOpMutator, NoOpMutator>/64/2/0  +4%         +4%\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/330355020",
    "html_url": "https://github.com/grpc/grpc/pull/12587#issuecomment-330355020",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12587",
    "id": 330355020,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDM1NTAyMA==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-18T21:01:07Z",
    "updated_at": "2017-09-18T21:01:07Z",
    "author_association": "NONE",
    "body": "```\n[trickle] Performance differences noted:\nBenchmark                                      svr_transport_stalls_per_iteration\n---------------------------------------------  ------------------------------------\nBM_PumpStreamServerToClient_Trickle/128M/128M  +9999%\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/330360274",
    "html_url": "https://github.com/grpc/grpc/pull/12587#issuecomment-330360274",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12587",
    "id": 330360274,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDM2MDI3NA==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-18T21:22:22Z",
    "updated_at": "2017-09-18T21:22:22Z",
    "author_association": "NONE",
    "body": "```\nCorrupt JSON data (indicates timeout or crash): \n    bm_fullstack_streaming_ping_pong.BM_StreamingPingPongWithCoalescingApi_InProcessCHTTP2_NoOpMutator_NoOpMutator__2M_2_0.opt.new: 1\n\n\n[microbenchmarks] Performance differences noted:\nBenchmark                                                                              cpu_time    real_time\n-------------------------------------------------------------------------------------  ----------  -----------\nBM_PumpStreamClientToServer<InProcess>/32k                                             +9%         +10%\nBM_PumpStreamServerToClient<InProcess>/256k                                            +7%         +7%\nBM_PumpStreamServerToClient<InProcess>/32k                                             +12%        +12%\nBM_PumpStreamServerToClient<InProcessCHTTP2>/32k                                       +9%         +9%\nBM_StreamingPingPongMsgs<InProcess, NoOpMutator, NoOpMutator>/256k                     -5%         -5%\nBM_StreamingPingPongMsgs<InProcess, NoOpMutator, NoOpMutator>/32k                      -4%\nBM_StreamingPingPongMsgs<MinInProcess, NoOpMutator, NoOpMutator>/32k                   -7%         -7%\nBM_StreamingPingPongWithCoalescingApi<MinInProcess, NoOpMutator, NoOpMutator>/32k/2/0  -12%        -11%\nBM_UnaryPingPong<InProcess, NoOpMutator, NoOpMutator>/0/32k                            +4%         +4%\nBM_UnaryPingPong<InProcess, NoOpMutator, NoOpMutator>/256k/0                           +8%         +8%\nBM_UnaryPingPong<InProcessCHTTP2, NoOpMutator, NoOpMutator>/256k/0                     +8%         +8%\nBM_UnaryPingPong<MinInProcess, NoOpMutator, NoOpMutator>/256k/256k                     +9%         +10%\nBM_UnaryPingPong<MinInProcess, NoOpMutator, NoOpMutator>/32k/32k                       +4%         +5%\nBM_UnaryPingPong<MinInProcessCHTTP2, NoOpMutator, NoOpMutator>/32k/32k                 +5%         +4%\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/330386187",
    "html_url": "https://github.com/grpc/grpc/pull/12587#issuecomment-330386187",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12587",
    "id": 330386187,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDM4NjE4Nw==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-18T23:38:59Z",
    "updated_at": "2017-09-18T23:38:59Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/330395909",
    "html_url": "https://github.com/grpc/grpc/pull/12587#issuecomment-330395909",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12587",
    "id": 330395909,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDM5NTkwOQ==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-19T00:48:46Z",
    "updated_at": "2017-09-19T00:48:46Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/330402303",
    "html_url": "https://github.com/grpc/grpc/pull/12587#issuecomment-330402303",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12587",
    "id": 330402303,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDQwMjMwMw==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-19T01:34:56Z",
    "updated_at": "2017-09-19T01:34:56Z",
    "author_association": "NONE",
    "body": "```\nCorrupt JSON data (indicates timeout or crash): \n    bm_fullstack_streaming_ping_pong.BM_StreamingPingPongWithCoalescingApi_MinInProcessCHTTP2_NoOpMutator_NoOpMutator__2M_2_0.counters.new: 1\n    bm_fullstack_streaming_ping_pong.BM_StreamingPingPongWithCoalescingApi_MinInProcessCHTTP2_NoOpMutator_NoOpMutator__2M_2_0.counters.old: 1\n\n\n[microbenchmarks] Performance differences noted:\nBenchmark                                                                               atm_add_per_iteration    cpu_time    nows_per_iteration    real_time\n--------------------------------------------------------------------------------------  -----------------------  ----------  --------------------  -----------\nBM_StreamingPingPong<MinTCP, NoOpMutator, NoOpMutator>/2M/1                             -4%                                  -4%\nBM_StreamingPingPongWithCoalescingApi<InProcess, NoOpMutator, NoOpMutator>/4k/2/0                                +4%                               +4%\nBM_StreamingPingPongWithCoalescingApi<InProcessCHTTP2, NoOpMutator, NoOpMutator>/8/1/1                           +12%                              +12%\nBM_UnaryPingPong<InProcess, NoOpMutator, NoOpMutator>/0/1                                                        +5%                               +5%\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/331317245",
    "html_url": "https://github.com/grpc/grpc/pull/12587#issuecomment-331317245",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12587",
    "id": 331317245,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMTMxNzI0NQ==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-22T00:26:07Z",
    "updated_at": "2017-09-22T00:26:07Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/331322804",
    "html_url": "https://github.com/grpc/grpc/pull/12587#issuecomment-331322804",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12587",
    "id": 331322804,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMTMyMjgwNA==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-22T01:09:13Z",
    "updated_at": "2017-09-22T01:09:13Z",
    "author_association": "NONE",
    "body": "```\n[microbenchmarks] Performance differences noted:\nBenchmark                                                                                    cpu_time    nows_per_iteration    real_time\n-------------------------------------------------------------------------------------------  ----------  --------------------  -----------\nBM_StreamingPingPongWithCoalescingApi<InProcess, NoOpMutator, NoOpMutator>/1/1/1             +6%                               +5%\nBM_StreamingPingPongWithCoalescingApi<MinInProcessCHTTP2, NoOpMutator, NoOpMutator>/16M/1/1              -5%\nBM_TransportStreamSend/2M                                                                                                      +4%\nBM_UnaryPingPong<MinInProcess, NoOpMutator, NoOpMutator>/64/64                               +4%                               +4%\nBM_UnaryPingPong<MinInProcessCHTTP2, NoOpMutator, NoOpMutator>/32k/32k                       +6%                               +7%\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/332045901",
    "html_url": "https://github.com/grpc/grpc/pull/12587#issuecomment-332045901",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12587",
    "id": 332045901,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjA0NTkwMQ==",
    "user": {
      "login": "AspirinSJL",
      "id": 3314176,
      "node_id": "MDQ6VXNlcjMzMTQxNzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3314176?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AspirinSJL",
      "html_url": "https://github.com/AspirinSJL",
      "followers_url": "https://api.github.com/users/AspirinSJL/followers",
      "following_url": "https://api.github.com/users/AspirinSJL/following{/other_user}",
      "gists_url": "https://api.github.com/users/AspirinSJL/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AspirinSJL/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AspirinSJL/subscriptions",
      "organizations_url": "https://api.github.com/users/AspirinSJL/orgs",
      "repos_url": "https://api.github.com/users/AspirinSJL/repos",
      "events_url": "https://api.github.com/users/AspirinSJL/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AspirinSJL/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-25T23:51:59Z",
    "updated_at": "2017-09-25T23:51:59Z",
    "author_association": "MEMBER",
    "body": "There is a flake that I don't know how to fix. It happens about 1/1000.\r\n\r\n```\r\nFAILED: bins/opt/grpclb_end2end_test --gtest_filter=SingleBalancerTest.FallbackUpdate  GRPC_POLL_STRATEGY=epoll1 [ret=-6, pid=189863]\r\n\r\nI0925 16:27:11.936582061    1231 ev_epoll1_linux.c:93]       grpc epoll fd: 3\r\nD0925 16:27:11.936629270    1231 ev_posix.c:107]             Using polling engine: epoll1\r\nD0925 16:27:11.936648500    1231 dns_resolver.c:301]         Using native dns resolver\r\nD0925 16:27:11.936680510    1231 test_config.c:388]          test slowdown factor: sanitizer=1, fixture=1, poller=1, total=1\r\nNote: Google Test filter = SingleBalancerTest.FallbackUpdate\r\n[==========] Running 1 test from 1 test case.\r\n[----------] Global test environment set-up.\r\n[----------] 1 test from SingleBalancerTest\r\n[ RUN      ] SingleBalancerTest.FallbackUpdate\r\nI0925 16:27:11.938828392    1231 grpclb_end2end_test.cc:525] starting backend server on port 2241\r\nI0925 16:27:11.938985336    1264 server_builder.cc:269]      Synchronous server. Num CQs: 1, Min pollers: 1, Max Pollers: 2, CQ timeout (msec): 10000\r\nI0925 16:27:11.940071604    1231 grpclb_end2end_test.cc:530] backend server startup complete\r\nI0925 16:27:11.942032965    1231 grpclb_end2end_test.cc:525] starting backend server on port 1116\r\nI0925 16:27:11.942095100    1287 server_builder.cc:269]      Synchronous server. Num CQs: 1, Min pollers: 1, Max Pollers: 2, CQ timeout (msec): 10000\r\nI0925 16:27:11.943220799    1231 grpclb_end2end_test.cc:530] backend server startup complete\r\nI0925 16:27:11.944276360    1231 grpclb_end2end_test.cc:525] starting backend server on port 7487\r\nI0925 16:27:11.944349386    1298 server_builder.cc:269]      Synchronous server. Num CQs: 1, Min pollers: 1, Max Pollers: 2, CQ timeout (msec): 10000\r\nI0925 16:27:11.945420614    1231 grpclb_end2end_test.cc:530] backend server startup complete\r\nI0925 16:27:11.946173295    1231 grpclb_end2end_test.cc:525] starting backend server on port 14855\r\nI0925 16:27:11.946219698    1311 server_builder.cc:269]      Synchronous server. Num CQs: 1, Min pollers: 1, Max Pollers: 2, CQ timeout (msec): 10000\r\nI0925 16:27:11.947494103    1231 grpclb_end2end_test.cc:530] backend server startup complete\r\nI0925 16:27:11.948205623    1231 grpclb_end2end_test.cc:525] starting balancer server on port 13202\r\nI0925 16:27:11.948262070    1317 server_builder.cc:269]      Synchronous server. Num CQs: 1, Min pollers: 1, Max Pollers: 2, CQ timeout (msec): 10000\r\nI0925 16:27:11.948995609    1231 grpclb_end2end_test.cc:530] balancer server startup complete\r\nI0925 16:27:11.949422822    1321 grpclb_end2end_test.cc:188] LB[0x1a3f2e0]: BalanceLoad\r\nI0925 16:27:11.949554969    1321 grpclb_end2end_test.cc:192] LB[0x1a3f2e0]: recv msg 'initial_request {\r\n  name: \"servername_not_used\"\r\n}\r\n'\r\nI0925 16:27:11.949563022    1321 grpclb_end2end_test.cc:304] LB[0x1a3f2e0]: sleeping for 1000 ms...\r\nI0925 16:27:12.150199662    1231 grpclb_end2end_test.cc:738] ========= BEFORE FIRST BATCH ==========\r\nI0925 16:27:12.150370177    1231 grpclb_end2end_test.cc:740] ========= DONE WITH FIRST BATCH ==========\r\nI0925 16:27:12.151234826    1231 grpclb_end2end_test.cc:765] ========= BEFORE SECOND BATCH ==========\r\nI0925 16:27:12.151369424    1231 grpclb_end2end_test.cc:767] ========= DONE WITH SECOND BATCH ==========\r\nI0925 16:27:12.949654479    1321 grpclb_end2end_test.cc:310] LB[0x1a3f2e0]: Woke up! Sending response 'server_list {\r\n  servers {\r\n    ip_address: \"\\177\\000\\000\\001\"\r\n    port: 7487\r\n  }\r\n  servers {\r\n    ip_address: \"\\177\\000\\000\\001\"\r\n    port: 14855\r\n  }\r\n}\r\n'\r\nI0925 16:27:12.949737264    1441 grpclb.c:539]               Missing LB token for backend address 'ipv4:127.0.0.1:7487'. The empty token will be used instead\r\nI0925 16:27:12.949754861    1441 grpclb.c:539]               Missing LB token for backend address 'ipv4:127.0.0.1:14855'. The empty token will be used instead\r\nI0925 16:27:12.950866925    1231 grpclb_end2end_test.cc:789] ========= BEFORE THIRD BATCH ==========\r\nI0925 16:27:12.951448621    1231 grpclb_end2end_test.cc:792] ========= DONE WITH THIRD BATCH ==========\r\nI0925 16:27:12.951465234    1231 grpclb_end2end_test.cc:141] Backend: shut down\r\nI0925 16:27:12.951471213    1231 grpclb_end2end_test.cc:549] backend about to shutdown\r\nI0925 16:27:12.951552713    1231 grpclb_end2end_test.cc:552] backend shutdown completed\r\nI0925 16:27:12.951568898    1231 grpclb_end2end_test.cc:141] Backend: shut down\r\nI0925 16:27:12.951573802    1231 grpclb_end2end_test.cc:549] backend about to shutdown\r\nI0925 16:27:12.951663653    1231 grpclb_end2end_test.cc:552] backend shutdown completed\r\nI0925 16:27:12.951669885    1231 grpclb_end2end_test.cc:141] Backend: shut down\r\nI0925 16:27:12.951672281    1231 grpclb_end2end_test.cc:549] backend about to shutdown\r\nI0925 16:27:12.951833650    1231 grpclb_end2end_test.cc:552] backend shutdown completed\r\nI0925 16:27:12.951840506    1231 grpclb_end2end_test.cc:141] Backend: shut down\r\nI0925 16:27:12.951842867    1231 grpclb_end2end_test.cc:549] backend about to shutdown\r\nI0925 16:27:12.951968292    1231 grpclb_end2end_test.cc:552] backend shutdown completed\r\nI0925 16:27:12.951975099    1231 grpclb_end2end_test.cc:265] LB[0x1a3f2e0]: shut down\r\nI0925 16:27:12.951977462    1231 grpclb_end2end_test.cc:549] balancer about to shutdown\r\nE0925 16:27:12.952106550    2135 grpclb.c:1876]              assertion failed: glb_policy->lb_call == NULL\r\n\r\n\r\n\r\n*******************************\r\nCaught signal SIGABRT\r\nI0925 16:27:12.952132151    1321 grpclb_end2end_test.cc:250] LB[0x1a3f2e0]: done\r\nbins/opt/grpclb_end2end_test[0x5901ee]\r\n/lib/x86_64-linux-gnu/libpthread.so.0(+0x10330)[0x7f74535e1330]\r\n/lib/x86_64-linux-gnu/libc.so.6(gsignal+0x37)[0x7f7452805c37]\r\n/lib/x86_64-linux-gnu/libc.so.6(abort+0x148)[0x7f7452809028]\r\nbins/opt/grpclb_end2end_test[0x4cbea0]\r\nbins/opt/grpclb_end2end_test[0x44f726]\r\nbins/opt/grpclb_end2end_test[0x451c78]\r\nbins/opt/grpclb_end2end_test[0x462fdc]\r\nbins/opt/grpclb_end2end_test[0x48d294]\r\nbins/opt/grpclb_end2end_test[0x48d72b]\r\nbins/opt/grpclb_end2end_test[0x4707a8]\r\nbins/opt/grpclb_end2end_test[0x476e5d]\r\nbins/opt/grpclb_end2end_test[0x47d3a5]\r\nbins/opt/grpclb_end2end_test[0x47d4cc]\r\n/usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb1a60)[0x7f7453165a60]\r\n/lib/x86_64-linux-gnu/libpthread.so.0(+0x8184)[0x7f74535d9184]\r\n/lib/x86_64-linux-gnu/libc.so.6(clone+0x6d)[0x7f74528ccffd]\r\n```\r\n\r\nIt only happens in `SingleBalancerTest.FallbackUpdate`, also the pre-existing `UpdatesTest.UpdateBalancersRepeated` has the same flake stacktrace, so I think they have the same root cause. @dgquintas can check.\r\n\r\nOtherwise, I don't see directly-related issues to fix."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/332046829",
    "html_url": "https://github.com/grpc/grpc/pull/12587#issuecomment-332046829",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12587",
    "id": 332046829,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjA0NjgyOQ==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-25T23:58:37Z",
    "updated_at": "2017-09-25T23:58:37Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/332054010",
    "html_url": "https://github.com/grpc/grpc/pull/12587#issuecomment-332054010",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12587",
    "id": 332054010,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjA1NDAxMA==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-26T00:51:39Z",
    "updated_at": "2017-09-26T00:51:39Z",
    "author_association": "NONE",
    "body": "```\nCorrupt JSON data (indicates timeout or crash): \n    bm_fullstack_streaming_ping_pong.BM_StreamingPingPongWithCoalescingApi_MinInProcessCHTTP2_NoOpMutator_NoOpMutator__2M_2_0.opt.old: 1\n\n\n[microbenchmarks] Performance differences noted:\nBenchmark                                                                                                    atm_cas_per_iteration    cpu_time    real_time\n-----------------------------------------------------------------------------------------------------------  -----------------------  ----------  -----------\nBM_CreateDestroyPollset                                                                                                               +6%         +6%\nBM_ErrorStringOnNewError<SimpleError>                                                                                                 +6%         +6%\nBM_HpackEncoderEncodeHeader<EmptyBatch>/0/16k                                                                                         +4%\nBM_HpackEncoderEncodeHeader<SingleInternedBinaryElem<1, false>>/0/16k                                                                 +6%         +6%\nBM_HpackEncoderEncodeHeader<SingleNonInternedBinaryElem<100, false>>/0/16k                                                            +4%         +4%\nBM_HpackParserParseHeader<IndexedSingleStaticElem>                                                                                    +6%         +6%\nBM_Pluck1Core                                                                                                                         +5%         +6%\nBM_PumpStreamClientToServer<InProcessCHTTP2>/32k                                                                                      +8%         +8%\nBM_PumpStreamClientToServer<SockPair>/512                                                                                                         +5%\nBM_PumpStreamServerToClient<InProcess>/0                                                                                                          +4%\nBM_PumpStreamServerToClient<SockPair>/64                                                                                                          +7%\nBM_StreamingPingPong<InProcessCHTTP2, NoOpMutator, NoOpMutator>/512/1                                                                 +7%         +7%\nBM_StreamingPingPong<MinInProcessCHTTP2, NoOpMutator, NoOpMutator>/64/1                                                               +18%        +17%\nBM_StreamingPingPong<TCP, NoOpMutator, NoOpMutator>/0/1                                                                               +7%         +7%\nBM_StreamingPingPongWithCoalescingApi<InProcess, NoOpMutator, NoOpMutator>/4k/2/1                                                     +12%        +12%\nBM_StreamingPingPongWithCoalescingApi<InProcess, NoOpMutator, NoOpMutator>/512/2/0                                                    +5%         +6%\nBM_StreamingPingPongWithCoalescingApi<InProcess, NoOpMutator, NoOpMutator>/8/2/1                                                      +14%        +14%\nBM_StreamingPingPongWithCoalescingApi<MinInProcess, NoOpMutator, NoOpMutator>/32k/1/1                                                 +4%         +4%\nBM_StreamingPingPongWithCoalescingApi<MinInProcess, NoOpMutator, NoOpMutator>/4k/2/1                                                  +4%         +4%\nBM_StreamingPingPongWithCoalescingApi<MinInProcess, NoOpMutator, NoOpMutator>/512/2/0                                                 +9%         +9%\nBM_UnaryPingPong<InProcess, Client_AddMetadata<RandomBinaryMetadata<10>, 2>, NoOpMutator>/0/0                                         +5%         +5%\nBM_UnaryPingPong<InProcess, NoOpMutator, NoOpMutator>/0/0                                                                             +8%         +8%\nBM_UnaryPingPong<InProcess, NoOpMutator, NoOpMutator>/0/2M                                                   +5%\nBM_UnaryPingPong<InProcess, NoOpMutator, NoOpMutator>/512/0                                                                           +10%        +9%\nBM_UnaryPingPong<InProcess, NoOpMutator, NoOpMutator>/512/512                                                                         +5%         +5%\nBM_UnaryPingPong<InProcess, NoOpMutator, Server_AddInitialMetadata<RandomAsciiMetadata<100>, 1>>/0/0                                  +5%         +5%\nBM_UnaryPingPong<InProcessCHTTP2, Client_AddMetadata<RandomBinaryMetadata<31>, 1>, NoOpMutator>/0/0                                   +4%         +4%\nBM_UnaryPingPong<InProcessCHTTP2, NoOpMutator, NoOpMutator>/4k/4k                                                                     +15%        +15%\nBM_UnaryPingPong<InProcessCHTTP2, NoOpMutator, NoOpMutator>/512/0                                                                     +4%         +4%\nBM_UnaryPingPong<InProcessCHTTP2, NoOpMutator, Server_AddInitialMetadata<RandomAsciiMetadata<10>, 100>>/0/0                           +4%         +4%\nBM_UnaryPingPong<MinInProcessCHTTP2, NoOpMutator, NoOpMutator>/0/4k                                                                   +4%         +5%\nBM_UnaryPingPong<MinInProcessCHTTP2, NoOpMutator, NoOpMutator>/0/8                                                                    +7%         +7%\nBM_UnaryPingPong<MinInProcessCHTTP2, NoOpMutator, NoOpMutator>/1/1                                                                    +5%         +5%\nBM_UnaryPingPong<TCP, NoOpMutator, NoOpMutator>/4k/0                                                                                  +5%         +5%\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/332232179",
    "html_url": "https://github.com/grpc/grpc/pull/12587#issuecomment-332232179",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12587",
    "id": 332232179,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjIzMjE3OQ==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-26T15:15:40Z",
    "updated_at": "2017-09-26T15:15:40Z",
    "author_association": "MEMBER",
    "body": "Does the flake you're seeing still happen in `UpdatesTest.UpdateBalancersRepeated` even without this PR?  If so, then I agree that it's probably unrelated to this PR, but @dgquintas should verify.\n\nOverall, the code looks good.  My comments are mostly minor.\n\n---\n\nReviewed 5 of 7 files at r1, 1 of 1 files at r5, 1 of 1 files at r6.\nReview status: all files reviewed at latest revision, 8 unresolved discussions, some commit checks broke.\n\n---\n\n*[src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.c, line 1678 at r6](https://reviewable.io:443/reviews/grpc/grpc/12587#-KuycolMF0gIyOi_3qIv:-KuycolMF0gIyOi_3qIw:b-9f2ltu) ([raw file](https://github.com/grpc/grpc/blob/373d0783d37946586c4b127032191fa2a93f98b4/src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.c#L1678)):*\n> ```C\n>    * actually runs, don't do anything. */\n>   if (glb_policy->serverlist != NULL) {\n>     GRPC_LB_POLICY_WEAK_UNREF(exec_ctx, &glb_policy->base,\n> ```\n\nThis unref already happens at the end of the function, so we could eliminate the duplication by inverting the conditional and moving the rest of the function inside of it:\n\n```\nif (glb_policy->serverlist == NULL) {\n  // ... the existing code from lines 1683-1691 ...\n}\nGRPC_LB_POLICY_WEAK_UNREF(exec_ctx, &glb_policy->base,\n                          \"grpclb_fallback_timer\");\n```\n\n---\n\n*[src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.c, line 1682 at r6](https://reviewable.io:443/reviews/grpc/grpc/12587#-KuycSvYop1bxeJQAsVA:-KuycSvZb_PYOe5njtIw:bxx4mc1) ([raw file](https://github.com/grpc/grpc/blob/373d0783d37946586c4b127032191fa2a93f98b4/src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.c#L1682)):*\n> ```C\n>     return;\n>   }\n>   glb_policy->fallback_timer_active = false;\n> ```\n\nShouldn't we do this even if `glb_policy->serverlist` is null?  Might want to move this above the preceding conditional.\n\n---\n\n*[src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.c, line 1750 at r6](https://reviewable.io:443/reviews/grpc/grpc/12587#-KuygwkF1hXBbxKmmQvZ:-KuygwkF1hXBbxKmmQv_:b-v1beo4) ([raw file](https://github.com/grpc/grpc/blob/373d0783d37946586c4b127032191fa2a93f98b4/src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.c#L1750)):*\n>   const grpc_arg *arg =\n>       grpc_channel_args_find(args->args, GRPC_ARG_LB_ADDRESSES);\n>   if (arg == NULL || arg->type != GRPC_ARG_POINTER) {\n>     return;\n>   }\n>   const grpc_lb_addresses *addresses =\n>       (const grpc_lb_addresses *)arg->value.pointer.p;\n\nThis code duplicates what already exists in `glb_update_locked()`.  To avoid this duplication, I suggest the following:\n\n- Move the code from lines 1798-1818 to the top of `glb_update_locked()`, so that we have already constructed the `grpc_lb_addresses` object before we call this function.\n- Pass in the `grpc_lb_addresses` object as a parameter to this function.\n\n---\n\n*[src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.c, line 1761 at r6](https://reviewable.io:443/reviews/grpc/grpc/12587#-KuyfseBp8Uhl5-1W9CS:-KuyfseBp8Uhl5-1W9CT:b7mk2rh) ([raw file](https://github.com/grpc/grpc/blob/373d0783d37946586c4b127032191fa2a93f98b4/src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.c#L1761)):*\n> ```C\n>   glb_policy->fallback_backend_addresses =\n>       extract_backend_addresses_locked(exec_ctx, addresses);\n>   if (glb_policy->lb_fallback_timeout_ms > 0 &&\n> ```\n\nThis was originally `if (glb_policy->rr_policy != NULL)`.  Why change it?  What was wrong with the original condition?\n\n---\n\n*[src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.c, line 1776 at r6](https://reviewable.io:443/reviews/grpc/grpc/12587#-KuyfaT_ZdnL2vQEBsZt:-KuyfaT_ZdnL2vQEBsZu:bkyccwk) ([raw file](https://github.com/grpc/grpc/blob/373d0783d37946586c4b127032191fa2a93f98b4/src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.c#L1776)):*\n> ```C\n>   }\n> \n>   if (glb_policy->updating_lb_channel && glb_policy->serverlist != NULL) {\n> ```\n\nThis could just be:\n\n```\nelse if (glb_policy->updating_lb_channel)\n```\n\n---\n\n*[test/cpp/end2end/grpclb_end2end_test.cc, line 684 at r6](https://reviewable.io:443/reviews/grpc/grpc/12587#-Kuyi-ESxLjY6IC6VZl1:-Kuyi-ESxLjY6IC6VZl2:b4lmtbx) ([raw file](https://github.com/grpc/grpc/blob/373d0783d37946586c4b127032191fa2a93f98b4/test/cpp/end2end/grpclb_end2end_test.cc#L684)):*\n> ```cpp\n>   }\n> \n>   // Wait until the serverlist reception has been processed.\n> ```\n\n...and all backends are reachable.\n\n---\n\n*[test/cpp/end2end/grpclb_end2end_test.cc, line 759 at r6](https://reviewable.io:443/reviews/grpc/grpc/12587#-Kuyi4F1f_vGbNo-JiFc:-Kuyi4F1f_vGbNo-JiFd:b4lmtbx) ([raw file](https://github.com/grpc/grpc/blob/373d0783d37946586c4b127032191fa2a93f98b4/test/cpp/end2end/grpclb_end2end_test.cc#L759)):*\n> ```cpp\n>   SetNextResolution(addresses);\n> \n>   // Wait until the resolution update has been processed.\n> ```\n\n...and all backends are reachable.\n\n---\n\n*[test/cpp/end2end/grpclb_end2end_test.cc, line 784 at r6](https://reviewable.io:443/reviews/grpc/grpc/12587#-Kuyi6x-tTlRKk7RKtP-:-Kuyi6x-tTlRKk7RKtP0:b4lmtbx) ([raw file](https://github.com/grpc/grpc/blob/373d0783d37946586c4b127032191fa2a93f98b4/test/cpp/end2end/grpclb_end2end_test.cc#L784)):*\n> ```cpp\n>   }\n> \n>   // Wait until the serverlist reception has been processed.\n> ```\n\n...and all backends are reachable.\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/12587#-:-Kuyjmi7YdPks-NpnVX5:b-ld3kgx)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/332289055",
    "html_url": "https://github.com/grpc/grpc/pull/12587#issuecomment-332289055",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12587",
    "id": 332289055,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjI4OTA1NQ==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-26T18:19:40Z",
    "updated_at": "2017-09-26T18:19:40Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/332291116",
    "html_url": "https://github.com/grpc/grpc/pull/12587#issuecomment-332291116",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12587",
    "id": 332291116,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjI5MTExNg==",
    "user": {
      "login": "AspirinSJL",
      "id": 3314176,
      "node_id": "MDQ6VXNlcjMzMTQxNzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3314176?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AspirinSJL",
      "html_url": "https://github.com/AspirinSJL",
      "followers_url": "https://api.github.com/users/AspirinSJL/followers",
      "following_url": "https://api.github.com/users/AspirinSJL/following{/other_user}",
      "gists_url": "https://api.github.com/users/AspirinSJL/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AspirinSJL/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AspirinSJL/subscriptions",
      "organizations_url": "https://api.github.com/users/AspirinSJL/orgs",
      "repos_url": "https://api.github.com/users/AspirinSJL/repos",
      "events_url": "https://api.github.com/users/AspirinSJL/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AspirinSJL/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-26T18:26:21Z",
    "updated_at": "2017-09-26T18:26:21Z",
    "author_association": "MEMBER",
    "body": "Yes, the flake in `UpdatesTest.UpdateBalancersRepeated` happens at the master branch too, with similar flakiness.  \n\n---\n\nReview status: all files reviewed at latest revision, 8 unresolved discussions, some commit checks broke.\n\n---\n\n*[src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.c, line 1678 at r6](https://reviewable.io:443/reviews/grpc/grpc/12587#-KuycolMF0gIyOi_3qIv:-KuyzQFhh92IMy7O2aHb:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/373d0783d37946586c4b127032191fa2a93f98b4/src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.c#L1678)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nThis unref already happens at the end of the function, so we could eliminate the duplication by inverting the conditional and moving the rest of the function inside of it:\n\n```\nif (glb_policy->serverlist == NULL) {\n  // ... the existing code from lines 1683-1691 ...\n}\nGRPC_LB_POLICY_WEAK_UNREF(exec_ctx, &glb_policy->base,\n                          \"grpclb_fallback_timer\");\n```\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.c, line 1682 at r6](https://reviewable.io:443/reviews/grpc/grpc/12587#-KuycSvYop1bxeJQAsVA:-Kuz0R5HjuprgqXAE-eL:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/373d0783d37946586c4b127032191fa2a93f98b4/src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.c#L1682)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nShouldn't we do this even if `glb_policy->serverlist` is null?  Might want to move this above the preceding conditional.\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.c, line 1750 at r6](https://reviewable.io:443/reviews/grpc/grpc/12587#-KuygwkF1hXBbxKmmQvZ:-Kuz6R_CuQuXOv2IOmws:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/373d0783d37946586c4b127032191fa2a93f98b4/src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.c#L1750)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\n>   const grpc_arg *arg =\n>       grpc_channel_args_find(args->args, GRPC_ARG_LB_ADDRESSES);\n>   if (arg == NULL || arg->type != GRPC_ARG_POINTER) {\n>     return;\n>   }\n>   const grpc_lb_addresses *addresses =\n>       (const grpc_lb_addresses *)arg->value.pointer.p;\n\nThis code duplicates what already exists in `glb_update_locked()`.  To avoid this duplication, I suggest the following:\n\n- Move the code from lines 1798-1818 to the top of `glb_update_locked()`, so that we have already constructed the `grpc_lb_addresses` object before we call this function.\n- Pass in the `grpc_lb_addresses` object as a parameter to this function.\n</blockquote></details>\n\nDone.\n\n---\n\n*[src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.c, line 1761 at r6](https://reviewable.io:443/reviews/grpc/grpc/12587#-KuyfseBp8Uhl5-1W9CS:-Kuz8FeRmkthwfYbODBs:b-hnoyx3) ([raw file](https://github.com/grpc/grpc/blob/373d0783d37946586c4b127032191fa2a93f98b4/src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.c#L1761)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nThis was originally `if (glb_policy->rr_policy != NULL)`.  Why change it?  What was wrong with the original condition?\n</blockquote></details>\n\nThe problem of the previous code is that it doesn't include the case when `glb_policy->rr_policy == NULL` and we do want to propagate the update. For example, the fallback backends are restarted so there is a period without valid `rr_policy`. We saw this situation in our integration test.\n\n---\n\n*[src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.c, line 1776 at r6](https://reviewable.io:443/reviews/grpc/grpc/12587#-KuyfaT_ZdnL2vQEBsZt:-KuzCRXJVPJA98LAmYfw:bjikzaa) ([raw file](https://github.com/grpc/grpc/blob/373d0783d37946586c4b127032191fa2a93f98b4/src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.c#L1776)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nThis could just be:\n\n```\nelse if (glb_policy->updating_lb_channel)\n```\n</blockquote></details>\n\nDone.\n\nBTW, `&& glb_policy->serverlist != NULL` is added in this line to overwrite the bogus balancer update which takes forever in the integration test.\n\n---\n\n*[test/cpp/end2end/grpclb_end2end_test.cc, line 684 at r6](https://reviewable.io:443/reviews/grpc/grpc/12587#-Kuyi-ESxLjY6IC6VZl1:-KuzEHbb3njes_kdpn_e:bb8jfvo) ([raw file](https://github.com/grpc/grpc/blob/373d0783d37946586c4b127032191fa2a93f98b4/test/cpp/end2end/grpclb_end2end_test.cc#L684)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\n...and all backends are reachable.\n</blockquote></details>\n\nActually, if I add `WaitForAllBackends()` at the beginning of this test just like other tests in this file, this test always fails because it waits until the `serverlist` is received. That's why I separated all the waiting mutual-exclusively.\n\nBut now I wonder why `WaitForAllBackends()` can finish in the fallback related test cases.. \n\nI wanted to change the waiting into a incremental way. All the increments don't introduce problems (which looks strange to me now..) except the `serverlist` reception part in `FallbackUpdate` test.\n\n---\n\n*[test/cpp/end2end/grpclb_end2end_test.cc, line 759 at r6](https://reviewable.io:443/reviews/grpc/grpc/12587#-Kuyi4F1f_vGbNo-JiFc:-KuzG2EjJqE2LT7bHZ_0:bb9xe20) ([raw file](https://github.com/grpc/grpc/blob/373d0783d37946586c4b127032191fa2a93f98b4/test/cpp/end2end/grpclb_end2end_test.cc#L759)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\n...and all backends are reachable.\n</blockquote></details>\n\nThe same as above (line 684).\n\n---\n\n*[test/cpp/end2end/grpclb_end2end_test.cc, line 784 at r6](https://reviewable.io:443/reviews/grpc/grpc/12587#-Kuyi6x-tTlRKk7RKtP-:-KuzG7gOWaF2gfOLfgOY:bb9xe20) ([raw file](https://github.com/grpc/grpc/blob/373d0783d37946586c4b127032191fa2a93f98b4/test/cpp/end2end/grpclb_end2end_test.cc#L784)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\n...and all backends are reachable.\n</blockquote></details>\n\nThe same as above (line 684).\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/12587#-:-KuywORFkrupAQm5ZBKV:b-sig8b9)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/332294507",
    "html_url": "https://github.com/grpc/grpc/pull/12587#issuecomment-332294507",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12587",
    "id": 332294507,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjI5NDUwNw==",
    "user": {
      "login": "dgquintas",
      "id": 120217,
      "node_id": "MDQ6VXNlcjEyMDIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/120217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgquintas",
      "html_url": "https://github.com/dgquintas",
      "followers_url": "https://api.github.com/users/dgquintas/followers",
      "following_url": "https://api.github.com/users/dgquintas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgquintas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgquintas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgquintas/subscriptions",
      "organizations_url": "https://api.github.com/users/dgquintas/orgs",
      "repos_url": "https://api.github.com/users/dgquintas/repos",
      "events_url": "https://api.github.com/users/dgquintas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgquintas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-26T18:37:53Z",
    "updated_at": "2017-09-26T19:27:01Z",
    "author_association": "NONE",
    "body": "I'm having a look at the preexisting flake in `UpdatesTest.UpdateBalancersRepeated`\r\n\r\nEdit: Fixed in https://github.com/grpc/grpc/pull/12720"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/332303580",
    "html_url": "https://github.com/grpc/grpc/pull/12587#issuecomment-332303580",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12587",
    "id": 332303580,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjMwMzU4MA==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-26T19:09:09Z",
    "updated_at": "2017-09-26T19:09:09Z",
    "author_association": "NONE",
    "body": "```\nCorrupt JSON data (indicates timeout or crash): \n    bm_fullstack_streaming_ping_pong.BM_StreamingPingPongWithCoalescingApi_MinInProcessCHTTP2_NoOpMutator_NoOpMutator__2M_2_0.counters.old: 1\n\n\n[microbenchmarks] Performance differences noted:\nBenchmark                                                                             cpu_time    locks_per_iteration    nows_per_iteration    real_time\n------------------------------------------------------------------------------------  ----------  ---------------------  --------------------  -----------\nBM_HpackEncoderEncodeHeader<SingleNonInternedBinaryElem<100, true>>/0/16k             +8%                                                      +9%\nBM_PumpStreamClientToServer<InProcess>/512                                            +6%                                                      +6%\nBM_PumpStreamServerToClient<UDS>/512                                                                                                           +5%\nBM_SliceInternEqualToStaticMetadata                                                   +4%                                                      +4%\nBM_StreamingPingPongMsgs<InProcess, NoOpMutator, NoOpMutator>/512                     +5%                                                      +5%\nBM_StreamingPingPongMsgs<InProcess, NoOpMutator, NoOpMutator>/64                                                                               +4%\nBM_StreamingPingPongWithCoalescingApi<MinInProcess, NoOpMutator, NoOpMutator>/64/2/1  +4%                                                      +4%\nBM_TransportStreamRecv/8                                                              +4%                                                      +4%\nBM_UnaryPingPong<MinInProcess, NoOpMutator, NoOpMutator>/128M/0                                   +6%                    +6%\nBM_UnaryPingPong<MinInProcessCHTTP2, NoOpMutator, NoOpMutator>/4k/4k                  +12%                                                     +13%\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/332305687",
    "html_url": "https://github.com/grpc/grpc/pull/12587#issuecomment-332305687",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12587",
    "id": 332305687,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjMwNTY4Nw==",
    "user": {
      "login": "dgquintas",
      "id": 120217,
      "node_id": "MDQ6VXNlcjEyMDIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/120217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgquintas",
      "html_url": "https://github.com/dgquintas",
      "followers_url": "https://api.github.com/users/dgquintas/followers",
      "following_url": "https://api.github.com/users/dgquintas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgquintas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgquintas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgquintas/subscriptions",
      "organizations_url": "https://api.github.com/users/dgquintas/orgs",
      "repos_url": "https://api.github.com/users/dgquintas/repos",
      "events_url": "https://api.github.com/users/dgquintas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgquintas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-26T19:15:27Z",
    "updated_at": "2017-09-26T19:15:27Z",
    "author_association": "NONE",
    "body": "\n\n\n\n\n\n\n\n*[test/cpp/end2end/grpclb_end2end_test.cc, line 684 at r6](https://reviewable.io:443/reviews/grpc/grpc/12587#-Kuyi-ESxLjY6IC6VZl1:-KuzaspBNFZR7H5JKje2:b-ypvpft) ([raw file](https://github.com/grpc/grpc/blob/373d0783d37946586c4b127032191fa2a93f98b4/test/cpp/end2end/grpclb_end2end_test.cc#L684)):*\n<details><summary><i>Previously, AspirinSJL (Juanli Shen) wrote…</i></summary><blockquote>\n\nActually, if I add `WaitForAllBackends()` at the beginning of this test just like other tests in this file, this test always fails because it waits until the `serverlist` is received. That's why I separated all the waiting mutual-exclusively.\n\nBut now I wonder why `WaitForAllBackends()` can finish in the fallback related test cases.. \n\nI wanted to change the waiting into a incremental way. All the increments don't introduce problems (which looks strange to me now..) except the `serverlist` reception part in `FallbackUpdate` test.\n\n</blockquote></details>\n\n`WaitForAllBackends()` simply waits until all backends have serviced a request, it knows nothing about serverlists. Because in the fallback case you are hitting the backends directly, it's able to make progress. In the general case (without fallback active), it's true that a serverlist is a prerequisite, but only because that's the only way grpclb has to find what the backends are.\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/12587)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/332309474",
    "html_url": "https://github.com/grpc/grpc/pull/12587#issuecomment-332309474",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12587",
    "id": 332309474,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjMwOTQ3NA==",
    "user": {
      "login": "AspirinSJL",
      "id": 3314176,
      "node_id": "MDQ6VXNlcjMzMTQxNzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3314176?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AspirinSJL",
      "html_url": "https://github.com/AspirinSJL",
      "followers_url": "https://api.github.com/users/AspirinSJL/followers",
      "following_url": "https://api.github.com/users/AspirinSJL/following{/other_user}",
      "gists_url": "https://api.github.com/users/AspirinSJL/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AspirinSJL/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AspirinSJL/subscriptions",
      "organizations_url": "https://api.github.com/users/AspirinSJL/orgs",
      "repos_url": "https://api.github.com/users/AspirinSJL/repos",
      "events_url": "https://api.github.com/users/AspirinSJL/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AspirinSJL/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-26T19:29:25Z",
    "updated_at": "2017-09-26T19:29:25Z",
    "author_association": "MEMBER",
    "body": "\n\n\n\nReview status: 6 of 7 files reviewed at latest revision, 8 unresolved discussions, some commit checks broke.\n\n---\n\n*[test/cpp/end2end/grpclb_end2end_test.cc, line 684 at r6](https://reviewable.io:443/reviews/grpc/grpc/12587#-Kuyi-ESxLjY6IC6VZl1:-KuzdhCmOmPRKstByKpb:b-60trpm) ([raw file](https://github.com/grpc/grpc/blob/373d0783d37946586c4b127032191fa2a93f98b4/test/cpp/end2end/grpclb_end2end_test.cc#L684)):*\n<details><summary><i>Previously, dgquintas (David G. Quintas) wrote…</i></summary><blockquote>\n\n`WaitForAllBackends()` simply waits until all backends have serviced a request, it knows nothing about serverlists. Because in the fallback case you are hitting the backends directly, it's able to make progress. In the general case (without fallback active), it's true that a serverlist is a prerequisite, but only because that's the only way grpclb has to find what the backends are.\n</blockquote></details>\n\nI see. I just realized that I didn't reset the counters after each batch..  Then all of it makes sense to me now.. I feel this PR is mergable soon!!!\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/12587)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/332314833",
    "html_url": "https://github.com/grpc/grpc/pull/12587#issuecomment-332314833",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12587",
    "id": 332314833,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjMxNDgzMw==",
    "user": {
      "login": "AspirinSJL",
      "id": 3314176,
      "node_id": "MDQ6VXNlcjMzMTQxNzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3314176?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AspirinSJL",
      "html_url": "https://github.com/AspirinSJL",
      "followers_url": "https://api.github.com/users/AspirinSJL/followers",
      "following_url": "https://api.github.com/users/AspirinSJL/following{/other_user}",
      "gists_url": "https://api.github.com/users/AspirinSJL/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AspirinSJL/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AspirinSJL/subscriptions",
      "organizations_url": "https://api.github.com/users/AspirinSJL/orgs",
      "repos_url": "https://api.github.com/users/AspirinSJL/repos",
      "events_url": "https://api.github.com/users/AspirinSJL/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AspirinSJL/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-26T19:49:40Z",
    "updated_at": "2017-09-26T19:49:40Z",
    "author_association": "MEMBER",
    "body": "\n\n\n\nReview status: 6 of 7 files reviewed at latest revision, 8 unresolved discussions, some commit checks broke.\n\n---\n\n*[test/cpp/end2end/grpclb_end2end_test.cc, line 684 at r6](https://reviewable.io:443/reviews/grpc/grpc/12587#-Kuyi-ESxLjY6IC6VZl1:-Kuzi3oQaC8gSGqlwy_C:bj72j57) ([raw file](https://github.com/grpc/grpc/blob/373d0783d37946586c4b127032191fa2a93f98b4/test/cpp/end2end/grpclb_end2end_test.cc#L684)):*\n<details><summary><i>Previously, AspirinSJL (Juanli Shen) wrote…</i></summary><blockquote>\n\nI see. I just realized that I didn't reset the counters after each batch..  Then all of it makes sense to me now.. I feel this PR is mergable soon!!!\n</blockquote></details>\n\nI think we should use the previous comments, because `WaitForBackend()` works in a customer view instead of infrastructure view. If `WaitForBackend(i)` finishes, it only means backend `i` is reachable (from the client).\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/12587)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/332343357",
    "html_url": "https://github.com/grpc/grpc/pull/12587#issuecomment-332343357",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12587",
    "id": 332343357,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjM0MzM1Nw==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-26T21:35:41Z",
    "updated_at": "2017-09-26T21:35:41Z",
    "author_association": "MEMBER",
    "body": "\n\n\n\nReviewed 1 of 1 files at r7.\nReview status: all files reviewed at latest revision, 9 unresolved discussions, some commit checks broke.\n\n---\n\n*[src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.c, line 1761 at r6](https://reviewable.io:443/reviews/grpc/grpc/12587#-KuyfseBp8Uhl5-1W9CS:-KuzqGM-2S7a6jCdnX1k:b-rybco9) ([raw file](https://github.com/grpc/grpc/blob/373d0783d37946586c4b127032191fa2a93f98b4/src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.c#L1761)):*\n<details><summary><i>Previously, AspirinSJL (Juanli Shen) wrote…</i></summary><blockquote>\n\nThe problem of the previous code is that it doesn't include the case when `glb_policy->rr_policy == NULL` and we do want to propagate the update. For example, the fallback backends are restarted so there is a period without valid `rr_policy`. We saw this situation in our integration test.\n</blockquote></details>\n\nAh, so this happens in the case where the RR policy shuts down?  Okay, then this is fine for now.  Eventually, we will want to change the RR policy not to shut down when all of its subchannels go bad, in which case this change would not be necessary.  But this alternative expression should work fine.\n\n---\n\n*[src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.c, line 1776 at r6](https://reviewable.io:443/reviews/grpc/grpc/12587#-KuyfaT_ZdnL2vQEBsZt:-KuzshgCr7u0xJfLuX8l:b-s8lpms) ([raw file](https://github.com/grpc/grpc/blob/373d0783d37946586c4b127032191fa2a93f98b4/src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.c#L1776)):*\n<details><summary><i>Previously, AspirinSJL (Juanli Shen) wrote…</i></summary><blockquote>\n\nDone.\n\nBTW, `&& glb_policy->serverlist != NULL` is added in this line to overwrite the bogus balancer update which takes forever in the integration test.\n</blockquote></details>\n\nHmm... This is interesting.  I'm actually a little surprised that this works, because in principle it is not necessarily safe to abort an in-progress update.  But I don't see anything in the code that prevents this.\n\nActually, looking at the current code, I'm not sure why we bother to track pending updates here at all.  We should be able to just send the updated addresses to the LB channel via the fake resolver unconditionally, and let the pick_first code in the LB channel handle the updates itself.  But we can make that change in a separate PR, so let's not worry about it for now.\n\n---\n\n*[src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.c, line 1785 at r7](https://reviewable.io:443/reviews/grpc/grpc/12587#-KuzsXHtvj9YQ147hae_:-KuzsXHtvj9YQ147haea:btny72m) ([raw file](https://github.com/grpc/grpc/blob/b2300febd8101fa2230bd561b59f7cd39eaf8c98/src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.c#L1785)):*\n> ```C\n>     // If a non-empty serverlist hasn't been received from the balancer,\n>     // propagate\n>     // the update to fallback_backend_addresses.\n> ```\n\nNit: This can move to the previous line.\n\n---\n\n*[test/cpp/end2end/grpclb_end2end_test.cc, line 684 at r6](https://reviewable.io:443/reviews/grpc/grpc/12587#-Kuyi-ESxLjY6IC6VZl1:-Kuzsv0sUc3rhjqPAkow:b1eecxx) ([raw file](https://github.com/grpc/grpc/blob/373d0783d37946586c4b127032191fa2a93f98b4/test/cpp/end2end/grpclb_end2end_test.cc#L684)):*\n<details><summary><i>Previously, AspirinSJL (Juanli Shen) wrote…</i></summary><blockquote>\n\nI think we should use the previous comments, because `WaitForBackend()` works in a customer view instead of infrastructure view. If `WaitForBackend(i)` finishes, it only means backend `i` is reachable (from the client).\n</blockquote></details>\n\nWhat I mean here is that the goal of this loop is to ensure that all of the backends that we should have (not all of the entries in `backend_servers_`) are actually ready.  If the initial address list contains more than one backend and we check only the first of them, then we know that the address list was processed but we don't know that all of the backends are actually connected.  What we are checking here is both (a) that the address list is being used and (b) that the backends are connected.  The comment should reflect that.\n\n---\n\n*[test/cpp/end2end/grpclb_end2end_test.cc, line 759 at r6](https://reviewable.io:443/reviews/grpc/grpc/12587#-Kuyi4F1f_vGbNo-JiFc:-KuztZvRP2AX3C3FPPKS:b-q64pkt) ([raw file](https://github.com/grpc/grpc/blob/373d0783d37946586c4b127032191fa2a93f98b4/test/cpp/end2end/grpclb_end2end_test.cc#L759)):*\n<details><summary><i>Previously, AspirinSJL (Juanli Shen) wrote…</i></summary><blockquote>\n\nThe same as above (line 684).\n</blockquote></details>\n\nSee above.\n\n---\n\n*[test/cpp/end2end/grpclb_end2end_test.cc, line 784 at r6](https://reviewable.io:443/reviews/grpc/grpc/12587#-Kuyi6x-tTlRKk7RKtP-:-Kuzt_tFjZzSfjEFZdLq:b-q64pkt) ([raw file](https://github.com/grpc/grpc/blob/373d0783d37946586c4b127032191fa2a93f98b4/test/cpp/end2end/grpclb_end2end_test.cc#L784)):*\n<details><summary><i>Previously, AspirinSJL (Juanli Shen) wrote…</i></summary><blockquote>\n\nThe same as above (line 684).\n</blockquote></details>\n\nSee above.\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/12587)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/332351983",
    "html_url": "https://github.com/grpc/grpc/pull/12587#issuecomment-332351983",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12587",
    "id": 332351983,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjM1MTk4Mw==",
    "user": {
      "login": "AspirinSJL",
      "id": 3314176,
      "node_id": "MDQ6VXNlcjMzMTQxNzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3314176?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AspirinSJL",
      "html_url": "https://github.com/AspirinSJL",
      "followers_url": "https://api.github.com/users/AspirinSJL/followers",
      "following_url": "https://api.github.com/users/AspirinSJL/following{/other_user}",
      "gists_url": "https://api.github.com/users/AspirinSJL/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AspirinSJL/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AspirinSJL/subscriptions",
      "organizations_url": "https://api.github.com/users/AspirinSJL/orgs",
      "repos_url": "https://api.github.com/users/AspirinSJL/repos",
      "events_url": "https://api.github.com/users/AspirinSJL/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AspirinSJL/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-26T22:14:57Z",
    "updated_at": "2017-09-26T22:14:57Z",
    "author_association": "MEMBER",
    "body": "\n\n\n\nReview status: all files reviewed at latest revision, 7 unresolved discussions, some commit checks broke.\n\n---\n\n*[src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.c, line 1761 at r6](https://reviewable.io:443/reviews/grpc/grpc/12587#-KuyfseBp8Uhl5-1W9CS:-Kv-AXwlhB_pcrQS1Bd9:btdsfzr) ([raw file](https://github.com/grpc/grpc/blob/373d0783d37946586c4b127032191fa2a93f98b4/src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.c#L1761)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nAh, so this happens in the case where the RR policy shuts down?  Okay, then this is fine for now.  Eventually, we will want to change the RR policy not to shut down when all of its subchannels go bad, in which case this change would not be necessary.  But this alternative expression should work fine.\n</blockquote></details>\n\nI see.\n\n---\n\n*[src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.c, line 1776 at r6](https://reviewable.io:443/reviews/grpc/grpc/12587#-KuyfaT_ZdnL2vQEBsZt:-Kv-BYBTvr0EqEZvvwc_:b-vbdp0r) ([raw file](https://github.com/grpc/grpc/blob/373d0783d37946586c4b127032191fa2a93f98b4/src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.c#L1776)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nHmm... This is interesting.  I'm actually a little surprised that this works, because in principle it is not necessarily safe to abort an in-progress update.  But I don't see anything in the code that prevents this.\n\nActually, looking at the current code, I'm not sure why we bother to track pending updates here at all.  We should be able to just send the updated addresses to the LB channel via the fake resolver unconditionally, and let the pick_first code in the LB channel handle the updates itself.  But we can make that change in a separate PR, so let's not worry about it for now.\n</blockquote></details>\n\nYes, the PF policy should be able to handle this itself.\n\n---\n\n*[src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.c, line 1785 at r7](https://reviewable.io:443/reviews/grpc/grpc/12587#-KuzsXHtvj9YQ147hae_:-Kv-C0urSJ3GN52xzxiF:b-urihqg) ([raw file](https://github.com/grpc/grpc/blob/b2300febd8101fa2230bd561b59f7cd39eaf8c98/src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.c#L1785)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nNit: This can move to the previous line.\n</blockquote></details>\n\nDone. Sorry about that.\n\n---\n\n*[test/cpp/end2end/grpclb_end2end_test.cc, line 684 at r6](https://reviewable.io:443/reviews/grpc/grpc/12587#-Kuyi-ESxLjY6IC6VZl1:-Kv-CPVKkXGr-vzC6Quz:b-b9hsr) ([raw file](https://github.com/grpc/grpc/blob/373d0783d37946586c4b127032191fa2a93f98b4/test/cpp/end2end/grpclb_end2end_test.cc#L684)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nWhat I mean here is that the goal of this loop is to ensure that all of the backends that we should have (not all of the entries in `backend_servers_`) are actually ready.  If the initial address list contains more than one backend and we check only the first of them, then we know that the address list was processed but we don't know that all of the backends are actually connected.  What we are checking here is both (a) that the address list is being used and (b) that the backends are connected.  The comment should reflect that.\n</blockquote></details>\n\nAh, I see. That's also why I changed the previous code into a for loop over each subset. \n\nChanged the comment.\n\n---\n\n*[test/cpp/end2end/grpclb_end2end_test.cc, line 759 at r6](https://reviewable.io:443/reviews/grpc/grpc/12587#-Kuyi4F1f_vGbNo-JiFc:-Kv-FRRUWGPNU_cqJwYU:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/373d0783d37946586c4b127032191fa2a93f98b4/test/cpp/end2end/grpclb_end2end_test.cc#L759)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nSee above.\n</blockquote></details>\n\nDone.\n\n---\n\n*[test/cpp/end2end/grpclb_end2end_test.cc, line 784 at r6](https://reviewable.io:443/reviews/grpc/grpc/12587#-Kuyi6x-tTlRKk7RKtP-:-Kv-FSG3bNaEEe3Bp1zM:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/373d0783d37946586c4b127032191fa2a93f98b4/test/cpp/end2end/grpclb_end2end_test.cc#L784)):*\n<details><summary><i>Previously, markdroth (Mark D. Roth) wrote…</i></summary><blockquote>\n\nSee above.\n</blockquote></details>\n\nDone.\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/12587)*\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/332356766",
    "html_url": "https://github.com/grpc/grpc/pull/12587#issuecomment-332356766",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12587",
    "id": 332356766,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjM1Njc2Ng==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-26T22:39:42Z",
    "updated_at": "2017-09-26T22:39:42Z",
    "author_association": "NONE",
    "body": "```\n[trickle] No significant performance differences\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/332358919",
    "html_url": "https://github.com/grpc/grpc/pull/12587#issuecomment-332358919",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12587",
    "id": 332358919,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjM1ODkxOQ==",
    "user": {
      "login": "AspirinSJL",
      "id": 3314176,
      "node_id": "MDQ6VXNlcjMzMTQxNzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3314176?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AspirinSJL",
      "html_url": "https://github.com/AspirinSJL",
      "followers_url": "https://api.github.com/users/AspirinSJL/followers",
      "following_url": "https://api.github.com/users/AspirinSJL/following{/other_user}",
      "gists_url": "https://api.github.com/users/AspirinSJL/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AspirinSJL/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AspirinSJL/subscriptions",
      "organizations_url": "https://api.github.com/users/AspirinSJL/orgs",
      "repos_url": "https://api.github.com/users/AspirinSJL/repos",
      "events_url": "https://api.github.com/users/AspirinSJL/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AspirinSJL/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-26T22:52:23Z",
    "updated_at": "2017-09-26T22:52:23Z",
    "author_association": "MEMBER",
    "body": "I filed the \"issue\" about propagating update in #12727."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/332371241",
    "html_url": "https://github.com/grpc/grpc/pull/12587#issuecomment-332371241",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12587",
    "id": 332371241,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjM3MTI0MQ==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-27T00:12:01Z",
    "updated_at": "2017-09-27T00:12:01Z",
    "author_association": "NONE",
    "body": "```\nCorrupt JSON data (indicates timeout or crash): \n    bm_fullstack_trickle.BM_PumpStreamServerToClient_Trickle_2M_32k.opt.new: 1\n\n\n[trickle] No significant performance differences\n```"
  }
]
