[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/294231958",
    "html_url": "https://github.com/grpc/grpc/issues/10665#issuecomment-294231958",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10665",
    "id": 294231958,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDIzMTk1OA==",
    "user": {
      "login": "apolcyn",
      "id": 9566254,
      "node_id": "MDQ6VXNlcjk1NjYyNTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9566254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apolcyn",
      "html_url": "https://github.com/apolcyn",
      "followers_url": "https://api.github.com/users/apolcyn/followers",
      "following_url": "https://api.github.com/users/apolcyn/following{/other_user}",
      "gists_url": "https://api.github.com/users/apolcyn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apolcyn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apolcyn/subscriptions",
      "organizations_url": "https://api.github.com/users/apolcyn/orgs",
      "repos_url": "https://api.github.com/users/apolcyn/repos",
      "events_url": "https://api.github.com/users/apolcyn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apolcyn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-14T20:37:45Z",
    "updated_at": "2017-04-14T20:37:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "Are the call credentials being used on a secure channel? e.g., using `ChannelCredentials`?\r\n\r\nThere's some documentation (with ruby and other languages) in http://www.grpc.io/docs/guides/auth.html, with an example use of `CallCredentials` in the \"Authenticate with Google\" section"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/294240729",
    "html_url": "https://github.com/grpc/grpc/issues/10665#issuecomment-294240729",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10665",
    "id": 294240729,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDI0MDcyOQ==",
    "user": {
      "login": "anotherminh",
      "id": 12694524,
      "node_id": "MDQ6VXNlcjEyNjk0NTI0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/12694524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anotherminh",
      "html_url": "https://github.com/anotherminh",
      "followers_url": "https://api.github.com/users/anotherminh/followers",
      "following_url": "https://api.github.com/users/anotherminh/following{/other_user}",
      "gists_url": "https://api.github.com/users/anotherminh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anotherminh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anotherminh/subscriptions",
      "organizations_url": "https://api.github.com/users/anotherminh/orgs",
      "repos_url": "https://api.github.com/users/anotherminh/repos",
      "events_url": "https://api.github.com/users/anotherminh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anotherminh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-14T21:31:31Z",
    "updated_at": "2017-04-14T21:41:58Z",
    "author_association": "NONE",
    "body": "Does it ONLY work when composed with ChannelCredentials?  I've played with the Java grpc library, and for that library, CallCredentials work without ChannelCredentials.  Here's how I'm using it in ruby:\r\n\r\n```\r\ncreds = GRPC::Core::CallCredentials.new(proc { auth_header: \"blahblahblah\" })\r\nstub = NameSpace::Stub.new(\"someaddress\", :this_channel_is_insecure)\r\nstub.get_foo(request_object, credentials: creds)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/294254557",
    "html_url": "https://github.com/grpc/grpc/issues/10665#issuecomment-294254557",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10665",
    "id": 294254557,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDI1NDU1Nw==",
    "user": {
      "login": "apolcyn",
      "id": 9566254,
      "node_id": "MDQ6VXNlcjk1NjYyNTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9566254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apolcyn",
      "html_url": "https://github.com/apolcyn",
      "followers_url": "https://api.github.com/users/apolcyn/followers",
      "following_url": "https://api.github.com/users/apolcyn/following{/other_user}",
      "gists_url": "https://api.github.com/users/apolcyn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apolcyn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apolcyn/subscriptions",
      "organizations_url": "https://api.github.com/users/apolcyn/orgs",
      "repos_url": "https://api.github.com/users/apolcyn/repos",
      "events_url": "https://api.github.com/users/apolcyn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apolcyn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-14T23:21:00Z",
    "updated_at": "2017-04-14T23:21:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "yes AFAIK this is the case with the ruby client"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/294538812",
    "html_url": "https://github.com/grpc/grpc/issues/10665#issuecomment-294538812",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10665",
    "id": 294538812,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDUzODgxMg==",
    "user": {
      "login": "anotherminh",
      "id": 12694524,
      "node_id": "MDQ6VXNlcjEyNjk0NTI0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/12694524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anotherminh",
      "html_url": "https://github.com/anotherminh",
      "followers_url": "https://api.github.com/users/anotherminh/followers",
      "following_url": "https://api.github.com/users/anotherminh/following{/other_user}",
      "gists_url": "https://api.github.com/users/anotherminh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anotherminh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anotherminh/subscriptions",
      "organizations_url": "https://api.github.com/users/anotherminh/orgs",
      "repos_url": "https://api.github.com/users/anotherminh/repos",
      "events_url": "https://api.github.com/users/anotherminh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anotherminh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-17T17:43:42Z",
    "updated_at": "2017-04-17T17:43:42Z",
    "author_association": "NONE",
    "body": "I see. Thanks for your help!"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/376040587",
    "html_url": "https://github.com/grpc/grpc/issues/10665#issuecomment-376040587",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10665",
    "id": 376040587,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjA0MDU4Nw==",
    "user": {
      "login": "colinmorelli",
      "id": 1615780,
      "node_id": "MDQ6VXNlcjE2MTU3ODA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1615780?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/colinmorelli",
      "html_url": "https://github.com/colinmorelli",
      "followers_url": "https://api.github.com/users/colinmorelli/followers",
      "following_url": "https://api.github.com/users/colinmorelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/colinmorelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/colinmorelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/colinmorelli/subscriptions",
      "organizations_url": "https://api.github.com/users/colinmorelli/orgs",
      "repos_url": "https://api.github.com/users/colinmorelli/repos",
      "events_url": "https://api.github.com/users/colinmorelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/colinmorelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-26T04:04:32Z",
    "updated_at": "2018-03-26T04:04:32Z",
    "author_association": "NONE",
    "body": "Is there any chance this could be revisited? Running into the same issue now with Node (I would assume anything based on the C API?)\r\n\r\nThis is likely to become more of an issue if service meshes such as Istio rise in popularity, as they offload mTLS outside of the client applications anyway (thus making the RPC appear insecure to the app, while still going secure over the wire).\r\n\r\nIt's not the end of the day in the interim, it just means that I have to craft `Metadata` instances to pass around manually, but it would be _much_ cleaner if gRPC would allow this. If there's concern over the security of passing credentials on insecure channels, what about an option that is disabled by default?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/376235501",
    "html_url": "https://github.com/grpc/grpc/issues/10665#issuecomment-376235501",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10665",
    "id": 376235501,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjIzNTUwMQ==",
    "user": {
      "login": "apolcyn",
      "id": 9566254,
      "node_id": "MDQ6VXNlcjk1NjYyNTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9566254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apolcyn",
      "html_url": "https://github.com/apolcyn",
      "followers_url": "https://api.github.com/users/apolcyn/followers",
      "following_url": "https://api.github.com/users/apolcyn/following{/other_user}",
      "gists_url": "https://api.github.com/users/apolcyn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apolcyn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apolcyn/subscriptions",
      "organizations_url": "https://api.github.com/users/apolcyn/orgs",
      "repos_url": "https://api.github.com/users/apolcyn/repos",
      "events_url": "https://api.github.com/users/apolcyn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apolcyn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-26T16:53:55Z",
    "updated_at": "2018-03-26T16:53:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "> If there's concern over the security of passing credentials on insecure channels, what about an option that is disabled by default?\r\n\r\nreopening this issue to look into this last suggestion"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/376516825",
    "html_url": "https://github.com/grpc/grpc/issues/10665#issuecomment-376516825",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10665",
    "id": 376516825,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjUxNjgyNQ==",
    "user": {
      "login": "colinmorelli",
      "id": 1615780,
      "node_id": "MDQ6VXNlcjE2MTU3ODA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1615780?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/colinmorelli",
      "html_url": "https://github.com/colinmorelli",
      "followers_url": "https://api.github.com/users/colinmorelli/followers",
      "following_url": "https://api.github.com/users/colinmorelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/colinmorelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/colinmorelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/colinmorelli/subscriptions",
      "organizations_url": "https://api.github.com/users/colinmorelli/orgs",
      "repos_url": "https://api.github.com/users/colinmorelli/repos",
      "events_url": "https://api.github.com/users/colinmorelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/colinmorelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-27T13:03:50Z",
    "updated_at": "2018-03-27T13:03:50Z",
    "author_association": "NONE",
    "body": "Thanks! I posted over on the grpc-io mailing list [here](https://groups.google.com/forum/#!topic/grpc-io/ifL63H0kN48) some reasons why this makes sense to me. It feels worth enumerating them again here if this is where the discussion would happen:\r\n\r\n1) At least gRPC-java does support this. At best, the inconsistency is strange, at worst it could lead to painful realizations down the road if starting on Java and assuming that similar patterns will \"just work\" on other languages. This is what happened in my case, where our gRPC-Java implementations worked fine, but attempting to do the same thing in Node did not work and took a while before I realized this was the reason.\r\n2) While I understand gRPC's belief that it's insecure to exchange tokens over plaintext channels, the reality is that the application-level implementation really has no idea what channel the data will actually be exchanged over. For example, in Istio deployments, the application may think it's communicating insecurely (and thus not allow CallCredentials to be sent), when in fact the traffic is going to hit an external container that will perform mTLS auth with the destination service. From the client and server perspective, this is an insecure channel, but in reality - it's not (unless you're concerned about the ability to tcpdump the loopback interface - at which point you're probably screwed anyway).\r\n3) There are plenty of cases where the CallCredentials themselves are not nearly as sensitive (i.e. they're enforced single-use tokens like JWTs), and thus may be less risky to exchange over plaintext anyway. This could be the case in scenarios where the services themselves are not dealing with private information, but perhaps they perform an action that should still be authenticated. Understandably, everything should be TLS anyway, but see point #2 for cases in which the service could be using TLS in ways that gRPC may not know about.\r\n4) Finally, from a developer experience perspective, it's still possible to send this information anyway - but it results in more fragile implementations of gRPC clients. For example, in Node, I've worked around this limitation by simply pre-generating Metadata instances that can be passed to calls (instead of using CallCredentials), but this requires me to take care to ensure that, at all call-sites, I have valid metadata (i.e. it hasn't expired since it was generated - we're using JWTs). CallCredentials provide a single way for me to do this, but it's currently not possible because of the restriction to use secure channels."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/389342285",
    "html_url": "https://github.com/grpc/grpc/issues/10665#issuecomment-389342285",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10665",
    "id": 389342285,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTM0MjI4NQ==",
    "user": {
      "login": "apolcyn",
      "id": 9566254,
      "node_id": "MDQ6VXNlcjk1NjYyNTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9566254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apolcyn",
      "html_url": "https://github.com/apolcyn",
      "followers_url": "https://api.github.com/users/apolcyn/followers",
      "following_url": "https://api.github.com/users/apolcyn/following{/other_user}",
      "gists_url": "https://api.github.com/users/apolcyn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apolcyn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apolcyn/subscriptions",
      "organizations_url": "https://api.github.com/users/apolcyn/orgs",
      "repos_url": "https://api.github.com/users/apolcyn/repos",
      "events_url": "https://api.github.com/users/apolcyn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apolcyn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-15T23:06:44Z",
    "updated_at": "2018-05-15T23:06:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am closing this issue because this is more of a feature request than a bug but @colinmorelli I don't mean to close your question that you posted here. @colinmorelli for your question, I am leaving open the google groups chat."
  }
]
