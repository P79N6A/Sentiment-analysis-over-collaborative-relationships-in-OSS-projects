[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/476444222",
    "html_url": "https://github.com/grpc/grpc/pull/18407#issuecomment-476444222",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/18407",
    "id": 476444222,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjQ0NDIyMg==",
    "user": {
      "login": "arjunroy",
      "id": 702191,
      "node_id": "MDQ6VXNlcjcwMjE5MQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/702191?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arjunroy",
      "html_url": "https://github.com/arjunroy",
      "followers_url": "https://api.github.com/users/arjunroy/followers",
      "following_url": "https://api.github.com/users/arjunroy/following{/other_user}",
      "gists_url": "https://api.github.com/users/arjunroy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arjunroy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arjunroy/subscriptions",
      "organizations_url": "https://api.github.com/users/arjunroy/orgs",
      "repos_url": "https://api.github.com/users/arjunroy/repos",
      "events_url": "https://api.github.com/users/arjunroy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arjunroy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-26T01:59:41Z",
    "updated_at": "2019-03-26T01:59:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "> That said... it was a little unexpected that changing from virtual functions to a switch would have had such a positive impact on performance; can you document or detail how that arises so that we won't have the temptation to switch it back the other direction? Are the branches in the switch highly predictable, for example? Is that because they're dominated by one specific type of use?\r\n\r\nAt a very high level, one example is https://godbolt.org/z/NJRt01\r\n\r\nExample: Eq() with static metadata refcount.\r\n\r\nNew way: 16 instructions, 1 branch.\r\nOld way: 26 instructions, 3 branches.\r\n\r\nnew_way:\r\nmain:\r\n        sub     rsp, 56\r\n        mov     eax, DWORD PTR ds:0\r\n        mov     rdx, QWORD PTR [rsp]\r\n        test    eax, eax\r\n        je      .L2\r\n.L2:\r\n        xor     eax, eax\r\n        sub     rdx, OFFSET FLAT:grpc_static_metadata_refcounts\r\n        sub     rax, OFFSET FLAT:grpc_static_metadata_refcounts\r\n        sar     rdx, 2\r\n        sar     rax, 2\r\n        cmp     eax, edx\r\n        sete    al\r\n        movzx   eax, al\r\n        jmp     .L1\r\n.L1:\r\n        add     rsp, 56\r\n        ret\r\nTotal: 16 instructions, 1 branch.\r\n\r\nold way:\r\n        sub     rsp, 104\r\n        lea     rsi, [rsp+48]\r\n        mov     rdi, rsp\r\n        call    grpc_slice_eq(grpc_slice&, grpc_slice&)\r\ngrpc_slice_eq(grpc_slice&, grpc_slice&):\r\n        mov     rax, QWORD PTR [rdi+8]\r\n        test    rax, rax\r\n        je      .L24\r\n        mov     rdx, QWORD PTR [rsi+8]\r\n        test    rdx, rdx\r\n        je      .L24\r\n        mov     rax, QWORD PTR [rax]\r\n        cmp     rax, QWORD PTR [rdx]\r\n        je      .L50\r\n.L50:\r\n        jmp     [QWORD PTR [rax+16]]\r\ngrpc_static_slice_eq(grpc_slice&, grpc_slice&):\r\n        mov     rdx, QWORD PTR [rdi]\r\n        mov     rax, QWORD PTR [rsi]\r\n        sub     rdx, OFFSET FLAT:grpc_static_metadata_refcounts\r\n        sub     rax, OFFSET FLAT:grpc_static_metadata_refcounts\r\n        sar     rdx, 2\r\n        sar     rax, 2\r\n        cmp     edx, eax\r\n        sete    al\r\n        movzx   eax, al\r\n        ret\r\n        add     rsp, 104\r\n        ret\r\n\r\nTotal: 26 instructions, 3 branches.\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/477308013",
    "html_url": "https://github.com/grpc/grpc/pull/18407#issuecomment-477308013",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/18407",
    "id": 477308013,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NzMwODAxMw==",
    "user": {
      "login": "arjunroy",
      "id": 702191,
      "node_id": "MDQ6VXNlcjcwMjE5MQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/702191?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arjunroy",
      "html_url": "https://github.com/arjunroy",
      "followers_url": "https://api.github.com/users/arjunroy/followers",
      "following_url": "https://api.github.com/users/arjunroy/following{/other_user}",
      "gists_url": "https://api.github.com/users/arjunroy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arjunroy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arjunroy/subscriptions",
      "organizations_url": "https://api.github.com/users/arjunroy/orgs",
      "repos_url": "https://api.github.com/users/arjunroy/repos",
      "events_url": "https://api.github.com/users/arjunroy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arjunroy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-27T19:09:25Z",
    "updated_at": "2019-03-27T19:09:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "Updated PR based on earlier comments. Still a couple of things outstanding (most notably, the get() => ASSERT check that we can no longer do)."
  }
]
