[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/389231605",
    "html_url": "https://github.com/grpc/grpc/issues/15207#issuecomment-389231605",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15207",
    "id": 389231605,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTIzMTYwNQ==",
    "user": {
      "login": "evildour",
      "id": 4014815,
      "node_id": "MDQ6VXNlcjQwMTQ4MTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4014815?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/evildour",
      "html_url": "https://github.com/evildour",
      "followers_url": "https://api.github.com/users/evildour/followers",
      "following_url": "https://api.github.com/users/evildour/following{/other_user}",
      "gists_url": "https://api.github.com/users/evildour/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/evildour/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/evildour/subscriptions",
      "organizations_url": "https://api.github.com/users/evildour/orgs",
      "repos_url": "https://api.github.com/users/evildour/repos",
      "events_url": "https://api.github.com/users/evildour/events{/privacy}",
      "received_events_url": "https://api.github.com/users/evildour/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-15T16:34:28Z",
    "updated_at": "2018-05-15T16:34:28Z",
    "author_association": "NONE",
    "body": "Any update on this?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/389358628",
    "html_url": "https://github.com/grpc/grpc/issues/15207#issuecomment-389358628",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15207",
    "id": 389358628,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTM1ODYyOA==",
    "user": {
      "login": "AspirinSJL",
      "id": 3314176,
      "node_id": "MDQ6VXNlcjMzMTQxNzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3314176?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AspirinSJL",
      "html_url": "https://github.com/AspirinSJL",
      "followers_url": "https://api.github.com/users/AspirinSJL/followers",
      "following_url": "https://api.github.com/users/AspirinSJL/following{/other_user}",
      "gists_url": "https://api.github.com/users/AspirinSJL/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AspirinSJL/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AspirinSJL/subscriptions",
      "organizations_url": "https://api.github.com/users/AspirinSJL/orgs",
      "repos_url": "https://api.github.com/users/AspirinSJL/repos",
      "events_url": "https://api.github.com/users/AspirinSJL/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AspirinSJL/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-16T00:42:39Z",
    "updated_at": "2018-05-16T00:42:39Z",
    "author_association": "MEMBER",
    "body": "Sorry, I haven't worked on this yet. I will try to reproduce it in C++ tomorrow. "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/390839671",
    "html_url": "https://github.com/grpc/grpc/issues/15207#issuecomment-390839671",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15207",
    "id": 390839671,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDgzOTY3MQ==",
    "user": {
      "login": "AspirinSJL",
      "id": 3314176,
      "node_id": "MDQ6VXNlcjMzMTQxNzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3314176?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AspirinSJL",
      "html_url": "https://github.com/AspirinSJL",
      "followers_url": "https://api.github.com/users/AspirinSJL/followers",
      "following_url": "https://api.github.com/users/AspirinSJL/following{/other_user}",
      "gists_url": "https://api.github.com/users/AspirinSJL/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AspirinSJL/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AspirinSJL/subscriptions",
      "organizations_url": "https://api.github.com/users/AspirinSJL/orgs",
      "repos_url": "https://api.github.com/users/AspirinSJL/repos",
      "events_url": "https://api.github.com/users/AspirinSJL/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AspirinSJL/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-22T02:06:22Z",
    "updated_at": "2018-05-22T02:06:22Z",
    "author_association": "MEMBER",
    "body": "I am unable to reproduce it in C++. \r\n\r\nI added 20 same test channels in the end2end_test like the following:\r\n```\r\ndiff --git a/test/cpp/end2end/end2end_test.cc b/test/cpp/end2end/end2end_test.cc\r\nindex 60238e930d..fc38d6767a 100644\r\n--- a/test/cpp/end2end/end2end_test.cc\r\n+++ b/test/cpp/end2end/end2end_test.cc\r\n@@ -292,8 +292,13 @@ class End2endTest : public ::testing::TestWithParam<TestScenario> {\r\n     args.SetString(GRPC_ARG_SECONDARY_USER_AGENT_STRING, \"end2end_test\");\r\n \r\n     if (!GetParam().inproc) {\r\n+      gpr_log(GPR_INFO, \"Creating channels\");\r\n       channel_ =\r\n           CreateCustomChannel(server_address_.str(), channel_creds, args);\r\n+      for (size_t i = 0; i < 20; ++i) {\r\n+        test_channels_.push_back(CreateCustomChannel(server_address_.str(), channel_creds, args));\r\n+        gpr_log(GPR_INFO, \"channel %lu created\", i);\r\n+      }\r\n     } else {\r\n       channel_ = server_->InProcessChannel(args);\r\n     }\r\n@@ -324,6 +329,7 @@ class End2endTest : public ::testing::TestWithParam<TestScenario> {\r\n \r\n   bool is_server_started_;\r\n   std::shared_ptr<Channel> channel_;\r\n+  std::vector<std::shared_ptr<Channel>> test_channels_;\r\n   std::unique_ptr<grpc::testing::EchoTestService::Stub> stub_;\r\n   std::unique_ptr<Server> server_;\r\n   std::unique_ptr<Server> proxy_server_;\r\n```\r\n\r\nThe log after running `GRPC_VERBOSITY=DEBUG bins/opt/end2end_test --gtest_filter=End2endServerTryCancel/End2endServerTryCancelTest.RequestEchoServerCancel/1\r\n` shows\r\n```\r\nNote: Google Test filter = End2endServerTryCancel/End2endServerTryCancelTest.RequestEchoServerCancel/1\r\n[==========] Running 1 test from 1 test case.\r\n[----------] Global test environment set-up.\r\n[----------] 1 test from End2endServerTryCancel/End2endServerTryCancelTest\r\n[ RUN      ] End2endServerTryCancel/End2endServerTryCancelTest.RequestEchoServerCancel/1\r\nD0521 19:00:13.913177842  174102 end2end_test.cc:216]        TestScenario{use_proxy=false, inproc=false, credentials='INSECURE_CREDENTIALS'}\r\nD0521 19:00:13.913242835  174102 ev_posix.cc:145]            Using polling engine: epollex\r\nD0521 19:00:13.913257351  174102 dns_resolver.cc:339]        Using native dns resolver\r\nD0521 19:00:13.914543904  174102 ev_posix.cc:145]            Using polling engine: epollex\r\nD0521 19:00:13.914562304  174102 dns_resolver.cc:339]        Using native dns resolver\r\nI0521 19:00:13.914593831  174102 server_builder.cc:269]      Synchronous server. Num CQs: 4, Min pollers: 1, Max Pollers: 2, CQ timeout (msec): 10\r\nI0521 19:00:13.914798923  174102 end2end_test.cc:295]        Creating channels\r\nI0521 19:00:13.914852294  174102 end2end_test.cc:300]        channel 0 created\r\nI0521 19:00:13.914870227  174102 end2end_test.cc:300]        channel 1 created\r\nI0521 19:00:13.914885427  174102 end2end_test.cc:300]        channel 2 created\r\nI0521 19:00:13.914900406  174102 end2end_test.cc:300]        channel 3 created\r\nI0521 19:00:13.914915374  174102 end2end_test.cc:300]        channel 4 created\r\nI0521 19:00:13.914930912  174102 end2end_test.cc:300]        channel 5 created\r\nI0521 19:00:13.914946100  174102 end2end_test.cc:300]        channel 6 created\r\nI0521 19:00:13.914963170  174102 end2end_test.cc:300]        channel 7 created\r\nI0521 19:00:13.914983775  174102 end2end_test.cc:300]        channel 8 created\r\nI0521 19:00:13.914998949  174102 end2end_test.cc:300]        channel 9 created\r\nI0521 19:00:13.915015288  174102 end2end_test.cc:300]        channel 10 created\r\nI0521 19:00:13.915029863  174102 end2end_test.cc:300]        channel 11 created\r\nI0521 19:00:13.915046025  174102 end2end_test.cc:300]        channel 12 created\r\nI0521 19:00:13.915060677  174102 end2end_test.cc:300]        channel 13 created\r\nI0521 19:00:13.915076663  174102 end2end_test.cc:300]        channel 14 created\r\nI0521 19:00:13.915091193  174102 end2end_test.cc:300]        channel 15 created\r\nI0521 19:00:13.915109073  174102 end2end_test.cc:300]        channel 16 created\r\nI0521 19:00:13.915123957  174102 end2end_test.cc:300]        channel 17 created\r\nI0521 19:00:13.915140114  174102 end2end_test.cc:300]        channel 18 created\r\nI0521 19:00:13.915154498  174102 end2end_test.cc:300]        channel 19 created\r\nD0521 19:00:13.915184154  174102 dns_resolver.cc:280]        Start resolving.\r\nI0521 19:00:13.915372517  174306 subchannel.cc:608]          New connected subchannel at 0x7f87f80065f0 for subchannel 0x7f87f80055f0\r\nI0521 19:00:13.915551152  174308 test_service_impl.cc:342]   server_try_cancel : 1\r\nI0521 19:00:13.915588618  174308 test_service_impl.cc:351]   Server called TryCancel() to cancel the request\r\n[       OK ] End2endServerTryCancel/End2endServerTryCancelTest.RequestEchoServerCancel/1 (3 ms)\r\n[----------] 1 test from End2endServerTryCancel/End2endServerTryCancelTest (3 ms total)\r\n\r\n[----------] Global test environment tear-down\r\n[==========] 1 test from 1 test case ran. (3 ms total)\r\n[  PASSED  ] 1 test.\r\nD0521 19:00:13.916826812  174102 ev_posix.cc:145]            Using polling engine: epollex\r\nD0521 19:00:13.916842111  174102 dns_resolver.cc:339]        Using native dns resolver\r\n```\r\n\r\nThere is only one `New connected subchannel at 0x7f87f80065f0 for subchannel 0x7f87f80055f0` log.\r\n\r\nMaybe a bug in C#? Re-assigning to @jtattermusch for further triaging. "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/394809855",
    "html_url": "https://github.com/grpc/grpc/issues/15207#issuecomment-394809855",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15207",
    "id": 394809855,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDgwOTg1NQ==",
    "user": {
      "login": "evildour",
      "id": 4014815,
      "node_id": "MDQ6VXNlcjQwMTQ4MTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4014815?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/evildour",
      "html_url": "https://github.com/evildour",
      "followers_url": "https://api.github.com/users/evildour/followers",
      "following_url": "https://api.github.com/users/evildour/following{/other_user}",
      "gists_url": "https://api.github.com/users/evildour/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/evildour/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/evildour/subscriptions",
      "organizations_url": "https://api.github.com/users/evildour/orgs",
      "repos_url": "https://api.github.com/users/evildour/repos",
      "events_url": "https://api.github.com/users/evildour/events{/privacy}",
      "received_events_url": "https://api.github.com/users/evildour/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-05T18:18:12Z",
    "updated_at": "2018-06-05T18:18:12Z",
    "author_association": "NONE",
    "body": "Any update on this @jtattermusch?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/413387059",
    "html_url": "https://github.com/grpc/grpc/issues/15207#issuecomment-413387059",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15207",
    "id": 413387059,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzM4NzA1OQ==",
    "user": {
      "login": "evildour",
      "id": 4014815,
      "node_id": "MDQ6VXNlcjQwMTQ4MTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4014815?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/evildour",
      "html_url": "https://github.com/evildour",
      "followers_url": "https://api.github.com/users/evildour/followers",
      "following_url": "https://api.github.com/users/evildour/following{/other_user}",
      "gists_url": "https://api.github.com/users/evildour/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/evildour/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/evildour/subscriptions",
      "organizations_url": "https://api.github.com/users/evildour/orgs",
      "repos_url": "https://api.github.com/users/evildour/repos",
      "events_url": "https://api.github.com/users/evildour/events{/privacy}",
      "received_events_url": "https://api.github.com/users/evildour/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-16T00:55:20Z",
    "updated_at": "2018-08-16T00:55:20Z",
    "author_association": "NONE",
    "body": "Ping @jtattermusch "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/414344470",
    "html_url": "https://github.com/grpc/grpc/issues/15207#issuecomment-414344470",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15207",
    "id": 414344470,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDM0NDQ3MA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-20T14:52:52Z",
    "updated_at": "2018-08-20T14:52:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "I was able to reproduce the problem and I also have a theory why subchannel sharing doesn't work in this case.\r\n\r\nA few things to know:\r\n- in C core, for a subchannel to be reused, the new channel must created with channel arguments (ChannelOption in C#) that are equal (= same names and values) as channel arguments of an existing channel  (see https://github.com/grpc/grpc/blob/af89e8c00e796f3398b09b7daed693df2b14da56/src/core/ext/filters/client_channel/subchannel.cc#L330)\r\n- internally, the ChannelCredentials are represented as a channel argument (= basically a pointer to the native ChannelCredentials object), so the channels must be created with the same credentials object for channel credentials to kick in.\r\n\r\nWith the current implementation in C#, the managed credentials (such as SslCredentials objects) are converted to a native object each time a channel gets created:\r\nhttps://github.com/grpc/grpc/blob/af89e8c00e796f3398b09b7daed693df2b14da56/src/csharp/Grpc.Core/Channel.cs#L75\r\nAs a result, if one creates 2 channels from the same managed \"ChannelCredentials\" object, they will end up created with 2 different instances of native credential object, which breaks the subchannel sharing.\r\n\r\nThe idea of the fix is simple (we need to create channel using the same nativeCredentials object), but doing that will complicate management of nativeCredential's lifetime, so I will need to put some thought into it.\r\n\r\nAs a side note, if ChannelCredentials.Insecure is used, the subchannel sharing works fine (because no \"credentials\" pointer is passed to channels at creation time).\r\n\r\n\r\n\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/416290695",
    "html_url": "https://github.com/grpc/grpc/issues/15207#issuecomment-416290695",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15207",
    "id": 416290695,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjI5MDY5NQ==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-27T16:49:33Z",
    "updated_at": "2018-08-27T16:49:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Should be fixed by #16438 (which should be available in the upcoming 1.15.0 release)."
  }
]
