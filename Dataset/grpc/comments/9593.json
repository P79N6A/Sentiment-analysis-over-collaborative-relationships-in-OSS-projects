[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/277694301",
    "html_url": "https://github.com/grpc/grpc/issues/9593#issuecomment-277694301",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9593",
    "id": 277694301,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NzY5NDMwMQ==",
    "user": {
      "login": "tuxagon",
      "id": 2936223,
      "node_id": "MDQ6VXNlcjI5MzYyMjM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2936223?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tuxagon",
      "html_url": "https://github.com/tuxagon",
      "followers_url": "https://api.github.com/users/tuxagon/followers",
      "following_url": "https://api.github.com/users/tuxagon/following{/other_user}",
      "gists_url": "https://api.github.com/users/tuxagon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tuxagon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tuxagon/subscriptions",
      "organizations_url": "https://api.github.com/users/tuxagon/orgs",
      "repos_url": "https://api.github.com/users/tuxagon/repos",
      "events_url": "https://api.github.com/users/tuxagon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tuxagon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-06T14:18:26Z",
    "updated_at": "2017-02-06T14:18:26Z",
    "author_association": "NONE",
    "body": "I actually encountered this exact same error using C# and the documentation is pitiful regarding how gRPC handles authentication with SSL/TLS. It is due to this error, the lack of care from the community/creators and the poor documentation that I am completely abandoning the use of gRPC for the foreseeable future."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/277808373",
    "html_url": "https://github.com/grpc/grpc/issues/9593#issuecomment-277808373",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9593",
    "id": 277808373,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NzgwODM3Mw==",
    "user": {
      "login": "jcanizales",
      "id": 5120183,
      "node_id": "MDQ6VXNlcjUxMjAxODM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5120183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jcanizales",
      "html_url": "https://github.com/jcanizales",
      "followers_url": "https://api.github.com/users/jcanizales/followers",
      "following_url": "https://api.github.com/users/jcanizales/following{/other_user}",
      "gists_url": "https://api.github.com/users/jcanizales/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jcanizales/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jcanizales/subscriptions",
      "organizations_url": "https://api.github.com/users/jcanizales/orgs",
      "repos_url": "https://api.github.com/users/jcanizales/repos",
      "events_url": "https://api.github.com/users/jcanizales/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jcanizales/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-06T20:48:07Z",
    "updated_at": "2017-02-06T20:48:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "> the lack of care from the community/creators and the poor documentation\r\n\r\nSorry to hear that, Kenneth. Would you share with us specific places in the documentation that could be improved (I'm CC'ing @jboeuf for TLS errors)? And situations in which the community and the authors should have cared more?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/277815255",
    "html_url": "https://github.com/grpc/grpc/issues/9593#issuecomment-277815255",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9593",
    "id": 277815255,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NzgxNTI1NQ==",
    "user": {
      "login": "tuxagon",
      "id": 2936223,
      "node_id": "MDQ6VXNlcjI5MzYyMjM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2936223?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tuxagon",
      "html_url": "https://github.com/tuxagon",
      "followers_url": "https://api.github.com/users/tuxagon/followers",
      "following_url": "https://api.github.com/users/tuxagon/following{/other_user}",
      "gists_url": "https://api.github.com/users/tuxagon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tuxagon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tuxagon/subscriptions",
      "organizations_url": "https://api.github.com/users/tuxagon/orgs",
      "repos_url": "https://api.github.com/users/tuxagon/repos",
      "events_url": "https://api.github.com/users/tuxagon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tuxagon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-06T21:13:54Z",
    "updated_at": "2017-02-06T21:13:54Z",
    "author_association": "NONE",
    "body": "Sure, I can provide several examples\r\n1) [Grpc Auth](http://www.grpc.io/docs/guides/auth.html). This page does not follow standard terminology regarding certificates (like what is \"roots.pem\", does that mean CA?)? I see nothing regarding client vs server certificate setup (there is only a unhelpful client setup, if you even call that a code example), which, from my experimentation, is required on both sides, not just the client. The code examples are very minimal and what is there wasn't helpful, in my experience. I have never been able to get it working with certificates and nothing on that page provides any help to approaching issues like the one for which this issue is created. In addition, the approach to certificates for Windows seems very non-standard, so it will be harder to get a company to consider it as a viable solution due to the extra maintenance of dealing with certificates vs leveraging the certificate store.\r\n\r\n2. Health-checking and production readiness are both articles I would expect (and I understand they might not be written yet), but there is nothing I have seen on either, especially since, for Windows, there seems to be some non-standard ways of things being done.\r\n\r\n3. I, and several others, have asked questions via gitter and there is never a reply. The community there is just not active, like at all. Stackoverflow is very hit-or-miss and a lot of times it isn't even someone who knows the tech, they are just guessing. GitHub Issues seem to be the best, but are very quickly disregarded if the assignee doesn't believe you.\r\n\r\nI really wanted to like gRPC because of the proto language's basis in protocol buffers, but the authentication with certificates not working put me over the edge where I couldn't trust the technology.\r\n\r\nIt's for these reasons that I had to abandon gRPC. If I have misunderstood any of this, I would love to be corrected, but nothing I've seen provides anything to contradict my observations."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/277816279",
    "html_url": "https://github.com/grpc/grpc/issues/9593#issuecomment-277816279",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9593",
    "id": 277816279,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NzgxNjI3OQ==",
    "user": {
      "login": "jboeuf",
      "id": 6262765,
      "node_id": "MDQ6VXNlcjYyNjI3NjU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6262765?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jboeuf",
      "html_url": "https://github.com/jboeuf",
      "followers_url": "https://api.github.com/users/jboeuf/followers",
      "following_url": "https://api.github.com/users/jboeuf/following{/other_user}",
      "gists_url": "https://api.github.com/users/jboeuf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jboeuf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jboeuf/subscriptions",
      "organizations_url": "https://api.github.com/users/jboeuf/orgs",
      "repos_url": "https://api.github.com/users/jboeuf/repos",
      "events_url": "https://api.github.com/users/jboeuf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jboeuf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-06T21:17:48Z",
    "updated_at": "2017-02-06T21:17:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "@AngryLemonn can you please confirm that you are using gRPC node both on the client and on the server. Assuming that this is the case, can you please share the code that you're using to create the channel on the client side and the secure port on the server side (bind call)?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/277821349",
    "html_url": "https://github.com/grpc/grpc/issues/9593#issuecomment-277821349",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9593",
    "id": 277821349,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NzgyMTM0OQ==",
    "user": {
      "login": "AngryLemonn",
      "id": 6731364,
      "node_id": "MDQ6VXNlcjY3MzEzNjQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6731364?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AngryLemonn",
      "html_url": "https://github.com/AngryLemonn",
      "followers_url": "https://api.github.com/users/AngryLemonn/followers",
      "following_url": "https://api.github.com/users/AngryLemonn/following{/other_user}",
      "gists_url": "https://api.github.com/users/AngryLemonn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AngryLemonn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AngryLemonn/subscriptions",
      "organizations_url": "https://api.github.com/users/AngryLemonn/orgs",
      "repos_url": "https://api.github.com/users/AngryLemonn/repos",
      "events_url": "https://api.github.com/users/AngryLemonn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AngryLemonn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-06T21:36:03Z",
    "updated_at": "2017-02-06T21:36:03Z",
    "author_association": "NONE",
    "body": "Sorry, I could not reply until now,\r\n\r\nThe problem was solved, I made a mistake with my C++ server implementation... The solution was make again the server, following the SSL examples under other languages...\r\n\r\nSorry again..."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/277822855",
    "html_url": "https://github.com/grpc/grpc/issues/9593#issuecomment-277822855",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9593",
    "id": 277822855,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NzgyMjg1NQ==",
    "user": {
      "login": "jcanizales",
      "id": 5120183,
      "node_id": "MDQ6VXNlcjUxMjAxODM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5120183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jcanizales",
      "html_url": "https://github.com/jcanizales",
      "followers_url": "https://api.github.com/users/jcanizales/followers",
      "following_url": "https://api.github.com/users/jcanizales/following{/other_user}",
      "gists_url": "https://api.github.com/users/jcanizales/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jcanizales/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jcanizales/subscriptions",
      "organizations_url": "https://api.github.com/users/jcanizales/orgs",
      "repos_url": "https://api.github.com/users/jcanizales/repos",
      "events_url": "https://api.github.com/users/jcanizales/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jcanizales/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-06T21:41:19Z",
    "updated_at": "2017-02-06T21:41:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the specifics Kenneth. I'll be forwarding that to the relevant folks for each piece. "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/277835124",
    "html_url": "https://github.com/grpc/grpc/issues/9593#issuecomment-277835124",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9593",
    "id": 277835124,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NzgzNTEyNA==",
    "user": {
      "login": "jboeuf",
      "id": 6262765,
      "node_id": "MDQ6VXNlcjYyNjI3NjU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6262765?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jboeuf",
      "html_url": "https://github.com/jboeuf",
      "followers_url": "https://api.github.com/users/jboeuf/followers",
      "following_url": "https://api.github.com/users/jboeuf/following{/other_user}",
      "gists_url": "https://api.github.com/users/jboeuf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jboeuf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jboeuf/subscriptions",
      "organizations_url": "https://api.github.com/users/jboeuf/orgs",
      "repos_url": "https://api.github.com/users/jboeuf/repos",
      "events_url": "https://api.github.com/users/jboeuf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jboeuf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-06T22:28:40Z",
    "updated_at": "2017-02-06T22:28:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "@AngryLemonn thanks for the feedback. Can you please explain the mistake that made so that it could be more useful to the community? It could be that the SSL message is a bit misleading and that we could improve the content of the logs to guide our users in the right direction.\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/277946137",
    "html_url": "https://github.com/grpc/grpc/issues/9593#issuecomment-277946137",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9593",
    "id": 277946137,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3Nzk0NjEzNw==",
    "user": {
      "login": "AngryLemonn",
      "id": 6731364,
      "node_id": "MDQ6VXNlcjY3MzEzNjQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6731364?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AngryLemonn",
      "html_url": "https://github.com/AngryLemonn",
      "followers_url": "https://api.github.com/users/AngryLemonn/followers",
      "following_url": "https://api.github.com/users/AngryLemonn/following{/other_user}",
      "gists_url": "https://api.github.com/users/AngryLemonn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AngryLemonn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AngryLemonn/subscriptions",
      "organizations_url": "https://api.github.com/users/AngryLemonn/orgs",
      "repos_url": "https://api.github.com/users/AngryLemonn/repos",
      "events_url": "https://api.github.com/users/AngryLemonn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AngryLemonn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-07T09:32:37Z",
    "updated_at": "2017-02-08T21:13:22Z",
    "author_association": "NONE",
    "body": "These are my own greeter examples in C++ working under SSL:\r\n\r\ngreeter_secure_server.cc\r\n```c++\r\n#include <memory>\r\n#include <string>\r\n#include <sstream>\r\n#include <fstream>\r\n#include <iostream>\r\n#include <grpc++/grpc++.h>\r\n\r\n#include \"helloworld.grpc.pb.h\"\r\n\r\nusing grpc::Server;\r\nusing grpc::ServerBuilder;\r\nusing grpc::ServerContext;\r\nusing grpc::Status;\r\n\r\nusing helloworld::HelloRequest;\r\nusing helloworld::HelloReply;\r\nusing helloworld::Greeter;\r\n\r\nclass GreeterServiceImpl final : public Greeter::Service\r\n{\r\n\tStatus SayHello ( ServerContext* context,\r\n                          const HelloRequest* request,\r\n                          HelloReply* reply ) override\r\n\t{\r\n\t\tstd::string prefix ( \"Hello \" );\r\n\r\n\t\treply->set_message ( prefix + request->name () );\r\n\r\n\t\treturn Status::OK;\r\n\t}\r\n};\r\n\r\nvoid\r\nread ( const std::string& filename, std::string& data )\r\n{\r\n        std::ifstream file ( filename.c_str (), std::ios::in );\r\n\r\n\tif ( file.is_open () )\r\n\t{\r\n\t\tstd::stringstream ss;\r\n\t\tss << file.rdbuf ();\r\n\r\n\t\tfile.close ();\r\n\r\n\t\tdata = ss.str ();\r\n\t}\r\n\r\n\treturn;\r\n}\r\n\r\n\r\nvoid\r\nrunServer()\r\n{\r\n\t/**\r\n\t * [!] Be carefull here using one cert with the CN != localhost. [!]\r\n\t **/\r\n\tstd::string server_address ( \"localhost:50051\" );\r\n\r\n\tstd::string key;\r\n\tstd::string cert;\r\n\tstd::string root;\r\n\r\n\tread ( \"server.crt\", cert );\r\n\tread ( \"server.key\", key );\r\n\tread ( \"ca.crt\", root );\r\n\r\n\tServerBuilder builder;\r\n\r\n\tgrpc::SslServerCredentialsOptions::PemKeyCertPair keycert =\r\n\t{\r\n\t\tkey,\r\n\t\tcert\r\n\t};\r\n\r\n\tgrpc::SslServerCredentialsOptions sslOps;\r\n\tsslOps.pem_root_certs = root;\r\n\tsslOps.pem_key_cert_pairs.push_back ( keycert );\r\n\r\n\tbuilder.AddListeningPort(server_address, grpc::SslServerCredentials( sslOps ));\r\n\r\n\tGreeterServiceImpl service;\r\n\tbuilder.RegisterService(&service);\r\n\r\n\tstd::unique_ptr < Server > server ( builder.BuildAndStart () );\r\n\tstd::cout << \"Server listening on \" << server_address << std::endl;\r\n\r\n\tserver->Wait ();\r\n}\r\n\r\nint\r\nmain ( int argc, char** argv )\r\n{\r\n\trunServer();\r\n\r\n\treturn 0;\r\n}\r\n```\r\n\r\ngreeter_secure_client.cc\r\n```c++\r\n#include <memory>\r\n#include <string>\r\n#include <sstream>\r\n#include <fstream>\r\n#include <iostream>\r\n#include <grpc++/grpc++.h>\r\n\r\n#include \"helloworld.grpc.pb.h\"\r\n\r\nusing grpc::Channel;\r\nusing grpc::ClientContext;\r\nusing grpc::Status;\r\n\r\nusing helloworld::HelloRequest;\r\nusing helloworld::HelloReply;\r\nusing helloworld::Greeter;\r\n\r\nclass GreeterClient\r\n{\r\npublic:\r\n  \tGreeterClient ( const std::string& cert,\r\n\t                const std::string& key,\r\n                        const std::string& root,\r\n                        const std::string& server )\r\n\t{\r\n\t\tgrpc::SslCredentialsOptions opts =\r\n\t\t{\r\n\t\t\troot,\r\n\t\t\tkey,\r\n\t\t\tcert\r\n\t\t};\r\n\r\n\t\tstub_ = Greeter::NewStub ( grpc::CreateChannel (\r\n\t\t\tserver, grpc::SslCredentials ( opts ) ) );\r\n\t}\r\n\r\n  \tstd::string\r\n\tSayHello ( const std::string& user )\r\n\t{\r\n\t\tHelloRequest request;\r\n\t\trequest.set_name(user);\r\n\r\n\t\tHelloReply reply;\r\n\r\n\t\tClientContext context;\r\n\r\n\t\tStatus status = stub_->SayHello ( &context, request, &reply );\r\n\r\n\t\tif ( status.ok () )\r\n\t\t{\r\n\t\t\treturn reply.message ();\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tstd::cout << status.error_code () << \": \"\r\n\t\t\t          << status.error_message () << std::endl;\r\n\t\t\treturn \"RPC failed\";\r\n\t\t}\r\n  \t}\r\n\r\nprivate:\r\n  \tstd::unique_ptr<Greeter::Stub> stub_;\r\n};\r\n\r\nvoid\r\nread ( const std::string& filename, std::string& data )\r\n{\r\n\tstd::ifstream file ( filename.c_str (), std::ios::in );\r\n\r\n\tif ( file.is_open () )\r\n\t{\r\n\t\tstd::stringstream ss;\r\n\t\tss << file.rdbuf ();\r\n\r\n\t\tfile.close ();\r\n\r\n\t\tdata = ss.str ();\r\n\t}\r\n\r\n\treturn;\r\n}\r\n\r\nint\r\nmain ( int argc, char** argv )\r\n{\r\n\tstd::string cert;\r\n\tstd::string key;\r\n\tstd::string root;\r\n\tstd::string server { \"localhost:50051\" };\r\n\r\n\tread ( \"client.crt\", cert );\r\n\tread ( \"client.key\", key );\r\n\tread ( \"ca.crt\", root );\r\n\r\n  \tGreeterClient greeter ( cert, key, root, server );\r\n\r\n\tstd::string user ( \"world\" );\r\n  \tstd::string reply = greeter.SayHello ( user );\r\n\r\n  \tstd::cout << \"Greeter received: \" << reply << std::endl;\r\n\r\n  \treturn 0;\r\n}\r\n```\r\n\r\ngen-certs.sh\r\n```bash\r\n#!/bin/bash\r\n\r\n# Generate valid CA\r\nopenssl genrsa -passout pass:1234 -des3 -out ca.key 4096\r\nopenssl req -passin pass:1234 -new -x509 -days 365 -key ca.key -out ca.crt -subj  \"/C=SP/ST=Spain/L=Valdepenias/O=Test/OU=Test/CN=Root CA\"\r\n\r\n# Generate valid Server Key/Cert\r\nopenssl genrsa -passout pass:1234 -des3 -out server.key 4096\r\nopenssl req -passin pass:1234 -new -key server.key -out server.csr -subj  \"/C=SP/ST=Spain/L=Valdepenias/O=Test/OU=Server/CN=localhost\"\r\nopenssl x509 -req -passin pass:1234 -days 365 -in server.csr -CA ca.crt -CAkey ca.key -set_serial 01 -out server.crt\r\n\r\n# Remove passphrase from the Server Key\r\nopenssl rsa -passin pass:1234 -in server.key -out server.key\r\n\r\n# Generate valid Client Key/Cert\r\nopenssl genrsa -passout pass:1234 -des3 -out client.key 4096\r\nopenssl req -passin pass:1234 -new -key client.key -out client.csr -subj  \"/C=SP/ST=Spain/L=Valdepenias/O=Test/OU=Client/CN=localhost\"\r\nopenssl x509 -passin pass:1234 -req -days 365 -in client.csr -CA ca.crt -CAkey ca.key -set_serial 01 -out client.crt\r\n\r\n# Remove passphrase from Client Key\r\nopenssl rsa -passin pass:1234 -in client.key -out client.key\r\n```\r\n\r\nThe problems that I had with SSL comes from mix secure and insecure client/server (SSL routines:OPENSSL_internal:WRONG_VERSION_NUMBER) and from the bad use of certificates for grpc (SSL routines:OPENSSL_internal:CERTIFICATE_VERIFY_FAILED), certificates that works with other libs (ZeroC Ice for example). \r\n\r\nThe _**gen-certs.sh**_ script generates valid certificates for grpc. Be carefull changin the OU and CN from the subject. I recommend not use IP addresses in CN because I got some error doing that, is better use hostnames like localhost. Use or set names to the IP that you want to use in /etc/hosts.\r\n\r\nRegards,\r\nJ. A\r\n\r\nP.S This code is free to use, and this issue was solved. Please, close it.\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/278078836",
    "html_url": "https://github.com/grpc/grpc/issues/9593#issuecomment-278078836",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9593",
    "id": 278078836,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODA3ODgzNg==",
    "user": {
      "login": "jboeuf",
      "id": 6262765,
      "node_id": "MDQ6VXNlcjYyNjI3NjU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6262765?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jboeuf",
      "html_url": "https://github.com/jboeuf",
      "followers_url": "https://api.github.com/users/jboeuf/followers",
      "following_url": "https://api.github.com/users/jboeuf/following{/other_user}",
      "gists_url": "https://api.github.com/users/jboeuf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jboeuf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jboeuf/subscriptions",
      "organizations_url": "https://api.github.com/users/jboeuf/orgs",
      "repos_url": "https://api.github.com/users/jboeuf/repos",
      "events_url": "https://api.github.com/users/jboeuf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jboeuf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-07T17:41:03Z",
    "updated_at": "2017-02-07T17:41:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK thanks much. So it looks like the WRONG_VERSION_NUMBER is symptomatic of\nan SSL client talking to a plain text server or vice-versa. I'll see if I\ncan catch this error and change the error log so that it says something\nlike: \"Please make sure that the peer is also an SSL endpoint.\".\n\nCheers,\n\n     Julien.\n\nOn Tue, Feb 7, 2017 at 1:32 AM, Jose Alberto Granados <\nnotifications@github.com> wrote:\n\n> These are my own greeter examples in C++ working under SSL:\n>\n> greeter_secure_server.cc\n>\n> #include <memory>\n> #include <string>\n> #include <sstream>\n> #include <fstream>\n> #include <iostream>\n> #include <grpc++/grpc++.h>\n>\n> #include \"helloworld.grpc.pb.h\"\n>\n> using grpc::Server;\n> using grpc::ServerBuilder;\n> using grpc::ServerContext;\n> using grpc::Status;\n>\n> using helloworld::HelloRequest;\n> using helloworld::HelloReply;\n> using helloworld::Greeter;\n>\n> class GreeterServiceImpl final : public Greeter::Service\n> {\n> \tStatus SayHello ( ServerContext* context,\n>                       const HelloRequest* request,\n>                       HelloReply* reply ) override\n> \t{\n> \t\tstd::string prefix ( \"Hello \" );\n>\n> \t\treply->set_message ( prefix + request->name () );\n>\n> \t\treturn Status::OK;\n> \t}\n> };\n>\n> void\n> read ( const std::string& filename, std::string& data )\n> {\n>         std::ifstream file ( filename.c_str (), std::ios::in );\n>\n> \tif ( file.is_open () )\n> \t{\n> \t\tstd::stringstream ss;\n> \t\tss << file.rdbuf ();\n>\n> \t\tfile.close ();\n>\n> \t\tdata = ss.str ();\n> \t}\n>\n> \treturn;\n> }\n>\n>\n> void\n> runServer()\n> {\n> \t/**\n> \t * [!] Be carefull here using one cert with the CN =! localhost. [!]\n> \t **/\n> \tstd::string server_address ( \"localhost:50051\" );\n>\n> \tstd::string key;\n> \tstd::string cert;\n> \tstd::string root;\n>\n> \tread ( \"server.crt\", cert );\n> \tread ( \"server.key\", key );\n> \tread ( \"ca.crt\", root );\n>\n> \tServerBuilder builder;\n>\n> \tgrpc::SslServerCredentialsOptions::PemKeyCertPair keycert =\n> \t{\n> \t\tkey,\n> \t\tcert\n> \t};\n>\n> \tgrpc::SslServerCredentialsOptions sslOps;\n> \tsslOps.pem_root_certs = root;\n> \tsslOps.pem_key_cert_pairs.push_back ( keycert );\n>\n> \tbuilder.AddListeningPort(server_address, grpc::SslServerCredentials( sslOps ));\n>\n> \tGreeterServiceImpl service;\n> \tbuilder.RegisterService(&service);\n>\n> \tstd::unique_ptr < Server > server ( builder.BuildAndStart () );\n> \tstd::cout << \"Server listening on \" << server_address << std::endl;\n>\n> \tserver->Wait ();\n> }\n>\n> int\n> main ( int argc, char** argv )\n> {\n> \trunServer();\n>\n> \treturn 0;\n> }\n>\n> greeter_secure_client.cc\n>\n> #include <memory>\n> #include <string>\n> #include <sstream>\n> #include <fstream>\n> #include <iostream>\n> #include <grpc++/grpc++.h>\n>\n> #include \"helloworld.grpc.pb.h\"\n>\n> using grpc::Channel;\n> using grpc::ClientContext;\n> using grpc::Status;\n>\n> using helloworld::HelloRequest;\n> using helloworld::HelloReply;\n> using helloworld::Greeter;\n>\n> class GreeterClient\n> {\n> public:\n>   \tGreeterClient ( const std::string& cert,\n> \t                const std::string& key,\n>                         const std::string& root,\n>                         const std::string& server )\n> \t{\n> \t\tgrpc::SslCredentialsOptions opts =\n> \t\t{\n> \t\t\troot,\n> \t\t\tkey,\n> \t\t\tcert\n> \t\t};\n>\n> \t\tstub_ = Greeter::NewStub ( grpc::CreateChannel (\n> \t\t\tserver, grpc::SslCredentials ( opts ) ) );\n> \t}\n>\n>   \tstd::string\n> \tSayHello ( const std::string& user )\n> \t{\n> \t\tHelloRequest request;\n> \t\trequest.set_name(user);\n>\n> \t\tHelloReply reply;\n>\n> \t\tClientContext context;\n>\n> \t\tStatus status = stub_->SayHello ( &context, request, &reply );\n>\n> \t\tif ( status.ok () )\n> \t\t{\n> \t\t\treturn reply.message ();\n> \t\t}\n> \t\telse\n> \t\t{\n> \t\t\tstd::cout << status.error_code () << \": \"\n> \t\t\t          << status.error_message () << std::endl;\n> \t\t\treturn \"RPC failed\";\n> \t\t}\n>   \t}\n>\n> private:\n>   \tstd::unique_ptr<Greeter::Stub> stub_;\n> };\n>\n> void\n> read ( const std::string& filename, std::string& data )\n> {\n> \tstd::ifstream file ( filename.c_str (), std::ios::in );\n>\n> \tif ( file.is_open () )\n> \t{\n> \t\tstd::stringstream ss;\n> \t\tss << file.rdbuf ();\n>\n> \t\tfile.close ();\n>\n> \t\tdata = ss.str ();\n> \t}\n>\n> \treturn;\n> }\n>\n> int\n> main ( int argc, char** argv )\n> {\n> \tstd::string cert;\n> \tstd::string key;\n> \tstd::string root;\n> \tstd::string server { \"localhost:50051\" };\n>\n> \tread ( \"client.crt\", cert );\n> \tread ( \"client.key\", key );\n> \tread ( \"ca.crt\", root );\n>\n>   \tGreeterClient greeter ( cert, key, root, server );\n>\n> \tstd::string user ( \"world\" );\n>   \tstd::string reply = greeter.SayHello ( user );\n>\n>   \tstd::cout << \"Greeter received: \" << reply << std::endl;\n>\n>   \treturn 0;\n> }\n>\n> gen-certs.sh\n>\n> #!/bin/bash\n>\n> # Generate valid CA\n> openssl genrsa -passout pass:1234 -des3 -out ca.key 4096\n> openssl req -passin pass:1234 -new -x509 -days 365 -key ca.key -out ca.crt -subj  \"/C=SP/ST=Spain/L=Valdepenias/O=Test/OU=Test/CN=Root CA\"\n>\n> # Generate valid Server Key/Cert\n> openssl genrsa -passout pass:1234 -des3 -out server.key 4096\n> openssl req -passin pass:1234 -new -key server.key -out server.csr -subj  \"/C=SP/ST=Spain/L=Valdepenias/O=Test/OU=Server/CN=localhost\"\n> openssl x509 -req -passin pass:1234 -days 365 -in server.csr -CA ca.crt -CAkey ca.key -set_serial 01 -out server.crt\n>\n> # Remove passphrase from the Server Key\n> openssl rsa -passin pass:1234 -in server.key -out server.key\n>\n> # Generate valid Client Key/Cert\n> openssl genrsa -passout pass:1234 -des3 -out client.key 4096\n> openssl req -passin pass:1234 -new -key client.key -out client.csr -subj  \"/C=SP/ST=Spain/L=Valdepenias/O=Test/OU=Client/CN=localhost\"\n> openssl x509 -passin pass:1111 -req -days 365 -in client.csr -CA ca.crt -CAkey ca.key -set_serial 01 -out client.crt\n>\n> # Remove passphrase from Client Key\n> openssl rsa -passin pass:1234 -in client.key -out client.key\n>\n> The problems that I had securing with SSL comes from mix secure and\n> insecure client/server (SSL routines:OPENSSL_internal:WRONG_VERSION_NUMBER)\n> and from the bad use certifies for grpc (SSL routines:OPENSSL_internal:CERTIFICATE_VERIFY_FAILED),\n> certifies that works with other libs (ZeroC Ice for example).\n>\n> The *gen-certs.sh* script generates valid certifiers. Be carefull changin\n> the OU and CN from the subject. I recommend not use IP addresses in CN\n> because I got some error doing that, is better use hostnames like\n> localhost. Use or set names to the IP that you want to use in /etc/hosts.\n>\n> Regards,\n> J. A\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/grpc/grpc/issues/9593#issuecomment-277946137>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AF-P7b3vBWQB3fi0McRgKbnrrHiAe4g2ks5raDpJgaJpZM4L4BCS>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/298589179",
    "html_url": "https://github.com/grpc/grpc/issues/9593#issuecomment-298589179",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9593",
    "id": 298589179,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODU4OTE3OQ==",
    "user": {
      "login": "patricia93sousa",
      "id": 10425874,
      "node_id": "MDQ6VXNlcjEwNDI1ODc0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10425874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/patricia93sousa",
      "html_url": "https://github.com/patricia93sousa",
      "followers_url": "https://api.github.com/users/patricia93sousa/followers",
      "following_url": "https://api.github.com/users/patricia93sousa/following{/other_user}",
      "gists_url": "https://api.github.com/users/patricia93sousa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/patricia93sousa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/patricia93sousa/subscriptions",
      "organizations_url": "https://api.github.com/users/patricia93sousa/orgs",
      "repos_url": "https://api.github.com/users/patricia93sousa/repos",
      "events_url": "https://api.github.com/users/patricia93sousa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/patricia93sousa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-02T10:05:59Z",
    "updated_at": "2017-05-02T10:05:59Z",
    "author_association": "NONE",
    "body": "@AngryLemonn  your example works for a true CA?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/298619695",
    "html_url": "https://github.com/grpc/grpc/issues/9593#issuecomment-298619695",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9593",
    "id": 298619695,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODYxOTY5NQ==",
    "user": {
      "login": "AngryLemonn",
      "id": 6731364,
      "node_id": "MDQ6VXNlcjY3MzEzNjQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6731364?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AngryLemonn",
      "html_url": "https://github.com/AngryLemonn",
      "followers_url": "https://api.github.com/users/AngryLemonn/followers",
      "following_url": "https://api.github.com/users/AngryLemonn/following{/other_user}",
      "gists_url": "https://api.github.com/users/AngryLemonn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AngryLemonn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AngryLemonn/subscriptions",
      "organizations_url": "https://api.github.com/users/AngryLemonn/orgs",
      "repos_url": "https://api.github.com/users/AngryLemonn/repos",
      "events_url": "https://api.github.com/users/AngryLemonn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AngryLemonn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-02T12:21:08Z",
    "updated_at": "2017-05-02T12:21:08Z",
    "author_association": "NONE",
    "body": "I don't know what you mean with a \"_true CA_\", but with certificates signed by a CA created with OpenSSL, it works. \r\n\r\nThis examples was made for the Grpc version 1.1. I tested the examples again with the currently master branch and still works. Can you be more specific with your problem?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/298621812",
    "html_url": "https://github.com/grpc/grpc/issues/9593#issuecomment-298621812",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9593",
    "id": 298621812,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODYyMTgxMg==",
    "user": {
      "login": "patricia93sousa",
      "id": 10425874,
      "node_id": "MDQ6VXNlcjEwNDI1ODc0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10425874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/patricia93sousa",
      "html_url": "https://github.com/patricia93sousa",
      "followers_url": "https://api.github.com/users/patricia93sousa/followers",
      "following_url": "https://api.github.com/users/patricia93sousa/following{/other_user}",
      "gists_url": "https://api.github.com/users/patricia93sousa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/patricia93sousa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/patricia93sousa/subscriptions",
      "organizations_url": "https://api.github.com/users/patricia93sousa/orgs",
      "repos_url": "https://api.github.com/users/patricia93sousa/repos",
      "events_url": "https://api.github.com/users/patricia93sousa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/patricia93sousa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-02T12:31:42Z",
    "updated_at": "2017-05-02T12:32:09Z",
    "author_association": "NONE",
    "body": "@AngryLemonn , first let'm say thanks for the fast reply.\r\nWhat I mean by a true CA is a CA that is not in the localhost(a self-signed CA) , a remote CA."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/298635269",
    "html_url": "https://github.com/grpc/grpc/issues/9593#issuecomment-298635269",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9593",
    "id": 298635269,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODYzNTI2OQ==",
    "user": {
      "login": "AngryLemonn",
      "id": 6731364,
      "node_id": "MDQ6VXNlcjY3MzEzNjQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6731364?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AngryLemonn",
      "html_url": "https://github.com/AngryLemonn",
      "followers_url": "https://api.github.com/users/AngryLemonn/followers",
      "following_url": "https://api.github.com/users/AngryLemonn/following{/other_user}",
      "gists_url": "https://api.github.com/users/AngryLemonn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AngryLemonn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AngryLemonn/subscriptions",
      "organizations_url": "https://api.github.com/users/AngryLemonn/orgs",
      "repos_url": "https://api.github.com/users/AngryLemonn/repos",
      "events_url": "https://api.github.com/users/AngryLemonn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AngryLemonn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-02T13:28:05Z",
    "updated_at": "2017-05-02T13:28:05Z",
    "author_association": "NONE",
    "body": "@patricia93sousa,\r\n\r\nIn this case, I don't know if Grpc allow you to use a remote file as CA. The documentation say this:\r\n\r\n> **grpc::SslCredentialsOptions::pem_root_certs**\r\n> The buffer containing the PEM encoding of the server root certificates.\r\n> If this parameter is empty, the default roots will be used. The default roots can be overridden using the GRPC_DEFAULT_SSL_ROOTS_FILE_PATH environment variable pointing to a file on the file system containing the roots.\r\n\r\nIf is your client who doesn't have access to the root CA, you should try connect to the server whitout this file. The client certificates must be signed with the server CA, and the handsake should not cause problems. Maybe the client will say you that can not connect with an untrusted server, and this is because Grpc will use the default roots and your root CA is not there...Sorry if this doesn't help you a lot, but I don't have had to deal with this problem yet...\r\n\r\nIf you need to connect to a remote server, the common name (CN) of the client and server certificates must have the server's name (ex: www.github.com). In Linux, Grpc will checks this name in the **/etc/hosts**, and will use the associated IP to connect the client with the server. In Windows and Mac, I don't know how this works, sorry...\r\n\r\nRegards,\r\nJ. A."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/353105832",
    "html_url": "https://github.com/grpc/grpc/issues/9593#issuecomment-353105832",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9593",
    "id": 353105832,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzEwNTgzMg==",
    "user": {
      "login": "sihussain2",
      "id": 34717700,
      "node_id": "MDQ6VXNlcjM0NzE3NzAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/34717700?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sihussain2",
      "html_url": "https://github.com/sihussain2",
      "followers_url": "https://api.github.com/users/sihussain2/followers",
      "following_url": "https://api.github.com/users/sihussain2/following{/other_user}",
      "gists_url": "https://api.github.com/users/sihussain2/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sihussain2/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sihussain2/subscriptions",
      "organizations_url": "https://api.github.com/users/sihussain2/orgs",
      "repos_url": "https://api.github.com/users/sihussain2/repos",
      "events_url": "https://api.github.com/users/sihussain2/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sihussain2/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-20T16:08:42Z",
    "updated_at": "2017-12-20T16:11:13Z",
    "author_association": "NONE",
    "body": "I have tried the solution mentioned by AngryLemon, but i get this error. \r\n./greeter_secure_server\r\nE1220 00:01:46.818535379   31190 ssl_transport_security.cc:621] Invalid cert chain file.\r\nE1220 00:01:46.818590151   31190 security_connector.cc:1108] Handshaker factory creation failed with TSI_INVALID_ARGUMENT.\r\nE1220 00:01:46.818608706   31190 server_secure_chttp2.cc:83] {\"created\":\"@1513746106.818598472\",\"description\":\"Unable to create secure server with credentials of type Ssl.\",\"file\":\"src/core/ext/transport/chttp2/server/secure/server_secure_chttp2.cc\",\"file_line\":62,\"security_status\":1}\r\nServer listening on localhost:50051\r\nSegmentation fault (core dumped)\r\n\r\nBasicaly, i am trying to implement grpc with TLS support. When i run the server, it gives the above error. The client hasnt even started yet. Any help would be deeply appreciated. I have tried everything, but couldnt resolve the problem. "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/357103085",
    "html_url": "https://github.com/grpc/grpc/issues/9593#issuecomment-357103085",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9593",
    "id": 357103085,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzEwMzA4NQ==",
    "user": {
      "login": "muxi",
      "id": 1054404,
      "node_id": "MDQ6VXNlcjEwNTQ0MDQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1054404?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/muxi",
      "html_url": "https://github.com/muxi",
      "followers_url": "https://api.github.com/users/muxi/followers",
      "following_url": "https://api.github.com/users/muxi/following{/other_user}",
      "gists_url": "https://api.github.com/users/muxi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/muxi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/muxi/subscriptions",
      "organizations_url": "https://api.github.com/users/muxi/orgs",
      "repos_url": "https://api.github.com/users/muxi/repos",
      "events_url": "https://api.github.com/users/muxi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/muxi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-12T00:09:52Z",
    "updated_at": "2018-01-12T00:09:52Z",
    "author_association": "MEMBER",
    "body": "Is the issue above still active?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/357103361",
    "html_url": "https://github.com/grpc/grpc/issues/9593#issuecomment-357103361",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9593",
    "id": 357103361,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzEwMzM2MQ==",
    "user": {
      "login": "sihussain2",
      "id": 34717700,
      "node_id": "MDQ6VXNlcjM0NzE3NzAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/34717700?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sihussain2",
      "html_url": "https://github.com/sihussain2",
      "followers_url": "https://api.github.com/users/sihussain2/followers",
      "following_url": "https://api.github.com/users/sihussain2/following{/other_user}",
      "gists_url": "https://api.github.com/users/sihussain2/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sihussain2/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sihussain2/subscriptions",
      "organizations_url": "https://api.github.com/users/sihussain2/orgs",
      "repos_url": "https://api.github.com/users/sihussain2/repos",
      "events_url": "https://api.github.com/users/sihussain2/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sihussain2/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-12T00:11:29Z",
    "updated_at": "2018-01-12T00:11:29Z",
    "author_association": "NONE",
    "body": "Hi. No. It is resolved. Thanks\n\nOn Jan 11, 2018 7:10 PM, \"Muxi Yan\" <notifications@github.com> wrote:\n\n> Is the issue above still active?\n>\n> —\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/grpc/grpc/issues/9593#issuecomment-357103085>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AhHABIDQ2bH9Y3VHmkBTESSdeCcXgGryks5tJqLigaJpZM4L4BCS>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/357103781",
    "html_url": "https://github.com/grpc/grpc/issues/9593#issuecomment-357103781",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9593",
    "id": 357103781,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzEwMzc4MQ==",
    "user": {
      "login": "muxi",
      "id": 1054404,
      "node_id": "MDQ6VXNlcjEwNTQ0MDQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1054404?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/muxi",
      "html_url": "https://github.com/muxi",
      "followers_url": "https://api.github.com/users/muxi/followers",
      "following_url": "https://api.github.com/users/muxi/following{/other_user}",
      "gists_url": "https://api.github.com/users/muxi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/muxi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/muxi/subscriptions",
      "organizations_url": "https://api.github.com/users/muxi/orgs",
      "repos_url": "https://api.github.com/users/muxi/repos",
      "events_url": "https://api.github.com/users/muxi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/muxi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-12T00:13:57Z",
    "updated_at": "2018-01-12T00:13:57Z",
    "author_association": "MEMBER",
    "body": "Cool thanks!"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/377096296",
    "html_url": "https://github.com/grpc/grpc/issues/9593#issuecomment-377096296",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9593",
    "id": 377096296,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzA5NjI5Ng==",
    "user": {
      "login": "sihussain2",
      "id": 34717700,
      "node_id": "MDQ6VXNlcjM0NzE3NzAw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/34717700?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sihussain2",
      "html_url": "https://github.com/sihussain2",
      "followers_url": "https://api.github.com/users/sihussain2/followers",
      "following_url": "https://api.github.com/users/sihussain2/following{/other_user}",
      "gists_url": "https://api.github.com/users/sihussain2/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sihussain2/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sihussain2/subscriptions",
      "organizations_url": "https://api.github.com/users/sihussain2/orgs",
      "repos_url": "https://api.github.com/users/sihussain2/repos",
      "events_url": "https://api.github.com/users/sihussain2/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sihussain2/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-29T02:01:34Z",
    "updated_at": "2018-03-29T02:01:34Z",
    "author_association": "NONE",
    "body": "Sorry for the late reply. I actually did couple of things. Not sure which\none actually solved the problem\n 1. cn name in the generate certificate.\n2. Override of the server name in the client code.  Although this is\nspecific to my setup due to proxy settings\n3. Just double check the certificate creation technique. It's tricky to get\nit right\n\nOn Mar 27, 2018 12:47 PM, \"rahul217\" <notifications@github.com> wrote:\n\n@sihussain2 <https://github.com/sihussain2>, I am facing the same error for\nInvalid cert chain file.\nHow did you resolve it? Do you mind letting us know?\nThanks!\n\n—\nYou are receiving this because you were mentioned.\n\nReply to this email directly, view it on GitHub\n<https://github.com/grpc/grpc/issues/9593#issuecomment-376594949>, or mute\nthe thread\n<https://github.com/notifications/unsubscribe-auth/AhHABGidxpv7gxx0kHd-6klRHpNTvKxDks5tim07gaJpZM4L4BCS>\n.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/379141328",
    "html_url": "https://github.com/grpc/grpc/issues/9593#issuecomment-379141328",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/9593",
    "id": 379141328,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTE0MTMyOA==",
    "user": {
      "login": "pcj",
      "id": 50580,
      "node_id": "MDQ6VXNlcjUwNTgw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/50580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcj",
      "html_url": "https://github.com/pcj",
      "followers_url": "https://api.github.com/users/pcj/followers",
      "following_url": "https://api.github.com/users/pcj/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcj/subscriptions",
      "organizations_url": "https://api.github.com/users/pcj/orgs",
      "repos_url": "https://api.github.com/users/pcj/repos",
      "events_url": "https://api.github.com/users/pcj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-06T03:55:16Z",
    "updated_at": "2018-04-06T03:55:16Z",
    "author_association": "NONE",
    "body": "This ended up working for me to connect to a public grpc endpoint :443\r\n\r\nFirst, bundle up all the system certs into a single `roots.pem` file:\r\n\r\n```python\r\ngenrule(\r\n    name = \"roots_pem\",\r\n    outs = [\"roots.pem\"],\r\n    cmd = \" && \".join([\r\n        \"OUT=$$(pwd)/$@\",\r\n        \"TMP=$$(mktemp -d $${TMPDIR:-/tmp}/genrule.XXXXXXXXXX)\",\r\n        \"cd $$TMP\",\r\n        \"cat /etc/ssl/certs/*.pem > $$OUT\",\r\n        \"rm -rf $$TMP\",\r\n    ]),\r\n    executable = True,\r\n)\r\n```\r\n\r\nNext, assign the name of that file to this magic environment variable:\r\n\r\n```\r\nexport GRPC_DEFAULT_SSL_ROOTS_FILE_PATH=./bazel-genfiles/client/cpp/roots.pem\r\n```\r\n\r\nLastly, invoke the client:\r\n\r\n```c++\r\n  auto options = grpc::SslCredentialsOptions();\r\n  auto creds = grpc::SslCredentials(options);\r\n  auto channel = grpc::CreateChannel(\"fortune.stack.build:443\", creds);\r\n  std::unique_ptr<FortuneTeller::Stub> stub(FortuneTeller::NewStub(channel));\r\n  FortuneTellerClient FortuneTeller(channel);\r\n  std::string reply = FortuneTeller.Predict();\r\n  std::cout << \"FortuneTeller received: \" << reply << std::endl;\r\n```\r\n\r\n```\r\n$ ./bazel-bin/client/cpp/fortune\r\nFortuneTeller received: All generalizations are false, including this one.\r\n```\r\n\r\nThis example assumes that fortune.stack.build is first hitting a load balancer or something that can terminate TLS and forward the request to an internal gRPC server implementation running in insecure mode."
  }
]
