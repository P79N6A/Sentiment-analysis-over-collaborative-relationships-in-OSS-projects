[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/215310804",
    "html_url": "https://github.com/grpc/grpc/issues/6276#issuecomment-215310804",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6276",
    "id": 215310804,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNTMxMDgwNA==",
    "user": {
      "login": "soltanmm",
      "id": 4889063,
      "node_id": "MDQ6VXNlcjQ4ODkwNjM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4889063?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/soltanmm",
      "html_url": "https://github.com/soltanmm",
      "followers_url": "https://api.github.com/users/soltanmm/followers",
      "following_url": "https://api.github.com/users/soltanmm/following{/other_user}",
      "gists_url": "https://api.github.com/users/soltanmm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/soltanmm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/soltanmm/subscriptions",
      "organizations_url": "https://api.github.com/users/soltanmm/orgs",
      "repos_url": "https://api.github.com/users/soltanmm/repos",
      "events_url": "https://api.github.com/users/soltanmm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/soltanmm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-28T05:04:05Z",
    "updated_at": "2016-04-28T05:04:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't think we support this yet... It should be a purely additive change though AFAICT.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/215314289",
    "html_url": "https://github.com/grpc/grpc/issues/6276#issuecomment-215314289",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6276",
    "id": 215314289,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNTMxNDI4OQ==",
    "user": {
      "login": "GuoJing",
      "id": 363073,
      "node_id": "MDQ6VXNlcjM2MzA3Mw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/363073?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GuoJing",
      "html_url": "https://github.com/GuoJing",
      "followers_url": "https://api.github.com/users/GuoJing/followers",
      "following_url": "https://api.github.com/users/GuoJing/following{/other_user}",
      "gists_url": "https://api.github.com/users/GuoJing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GuoJing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GuoJing/subscriptions",
      "organizations_url": "https://api.github.com/users/GuoJing/orgs",
      "repos_url": "https://api.github.com/users/GuoJing/repos",
      "events_url": "https://api.github.com/users/GuoJing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GuoJing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-28T05:33:04Z",
    "updated_at": "2016-04-28T05:33:04Z",
    "author_association": "NONE",
    "body": "hi @soltanmm , I have simple but dirty way to get the option in Python.\n\n``` python\n# pb2 is module object equals import server_pb2\n# import server_pb2\n# get_service_identify_from_pb_file(server_pb2)\n\ndef get_service_identify_from_pb_file(pb2):\n    method_mapping = dict()\n    p = descriptor_pb2.FileDescriptorProto()\n    pb2.DESCRIPTOR.CopyToProto(p)\n    for s in p.service:\n        for m in s.method:\n            if not method_mapping.get(m.name):\n                method_mapping[m.name] = dict()\n            for k, v in m.options._fields.items():\n                if hasattr(v, '_fields'):\n                    for i, j in v._fields.items():\n                        method_mapping[m.name][i.name] = j\n    return method_mapping\n\n# returns {'Hello': {'method': 'GET'}}\n```\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/245608552",
    "html_url": "https://github.com/grpc/grpc/issues/6276#issuecomment-245608552",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6276",
    "id": 245608552,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTYwODU1Mg==",
    "user": {
      "login": "arthur-tacca",
      "id": 20324099,
      "node_id": "MDQ6VXNlcjIwMzI0MDk5",
      "avatar_url": "https://avatars1.githubusercontent.com/u/20324099?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arthur-tacca",
      "html_url": "https://github.com/arthur-tacca",
      "followers_url": "https://api.github.com/users/arthur-tacca/followers",
      "following_url": "https://api.github.com/users/arthur-tacca/following{/other_user}",
      "gists_url": "https://api.github.com/users/arthur-tacca/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arthur-tacca/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arthur-tacca/subscriptions",
      "organizations_url": "https://api.github.com/users/arthur-tacca/orgs",
      "repos_url": "https://api.github.com/users/arthur-tacca/repos",
      "events_url": "https://api.github.com/users/arthur-tacca/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arthur-tacca/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-08T14:07:00Z",
    "updated_at": "2016-09-08T14:07:00Z",
    "author_association": "NONE",
    "body": "Wow, that's really useful code @GuoJing. It's also possible to get the request/response types and streaming type for each RPC by using the other members of the method descriptor, which is the object in the variable \"m\".\n\nMy previous searches for \"Python gRPC reflection\" had led me to believe that getting that information was planned but not currently possible. (I now realize the other results were for the case you want to get information about a service without access to its .proto, unlike my situation.) Perhaps this code could be documented a bit more prominently?\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/261477278",
    "html_url": "https://github.com/grpc/grpc/issues/6276#issuecomment-261477278",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6276",
    "id": 261477278,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MTQ3NzI3OA==",
    "user": {
      "login": "jkryanchou",
      "id": 1206342,
      "node_id": "MDQ6VXNlcjEyMDYzNDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1206342?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jkryanchou",
      "html_url": "https://github.com/jkryanchou",
      "followers_url": "https://api.github.com/users/jkryanchou/followers",
      "following_url": "https://api.github.com/users/jkryanchou/following{/other_user}",
      "gists_url": "https://api.github.com/users/jkryanchou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jkryanchou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jkryanchou/subscriptions",
      "organizations_url": "https://api.github.com/users/jkryanchou/orgs",
      "repos_url": "https://api.github.com/users/jkryanchou/repos",
      "events_url": "https://api.github.com/users/jkryanchou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jkryanchou/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-18T08:38:18Z",
    "updated_at": "2016-11-18T08:38:18Z",
    "author_association": "NONE",
    "body": "+1 I have struggled on it for hours. The issue's answer help me figure it out. Is there any other pythonic way to support the custom method options? I thought the feature were so siginificant to use.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/350878230",
    "html_url": "https://github.com/grpc/grpc/issues/6276#issuecomment-350878230",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/6276",
    "id": 350878230,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDg3ODIzMA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-11T22:23:46Z",
    "updated_at": "2017-12-11T22:23:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "Closing as this is more a question than an issue."
  }
]
