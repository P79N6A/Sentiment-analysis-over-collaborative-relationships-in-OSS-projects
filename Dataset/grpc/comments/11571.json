[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/310227966",
    "html_url": "https://github.com/grpc/grpc/pull/11571#issuecomment-310227966",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11571",
    "id": 310227966,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDIyNzk2Ng==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-21T22:56:33Z",
    "updated_at": "2017-06-21T22:56:33Z",
    "author_association": "NONE",
    "body": "```\nPerformance differences noted:\nBenchmark                                               atm_add_per_iteration    atm_cas_per_iteration    locks_per_iteration\n------------------------------------------------------  -----------------------  -----------------------  ---------------------\nBM_PumpStreamClientToServer<MinUDS>/0                   +10%                     +17%                     +49%\nBM_PumpStreamClientToServer<UDS>/0                      +10%                     +17%                     +49%\nBM_PumpStreamClientToServer<UDS>/1                      +10%                     +17%                     +49%\nBM_PumpStreamClientToServer<UDS>/256k                                                                     +15%\nBM_PumpStreamClientToServer<UDS>/32k                    +4%                      +11%                     +30%\nBM_PumpStreamClientToServer<UDS>/4k                     +7%                      +15%                     +46%\nBM_PumpStreamClientToServer<UDS>/512                    +8%                      +17%                     +49%\nBM_PumpStreamClientToServer<UDS>/64                     +8%                      +17%                     +49%\nBM_PumpStreamClientToServer<UDS>/8                      +10%                     +17%                     +49%\nBM_PumpStreamServerToClient<MinUDS>/0                   +10%                     +17%                     +49%\nBM_PumpStreamServerToClient<UDS>/0                      +10%                     +17%                     +49%\nBM_PumpStreamServerToClient<UDS>/1                      +10%                     +17%                     +49%\nBM_PumpStreamServerToClient<UDS>/256k                                                                     +17%\nBM_PumpStreamServerToClient<UDS>/32k                                             +7%                      +30%\nBM_PumpStreamServerToClient<UDS>/4k                     +8%                      +14%                     +46%\nBM_PumpStreamServerToClient<UDS>/512                    +8%                      +15%                     +49%\nBM_PumpStreamServerToClient<UDS>/64                     +8%                      +17%                     +49%\nBM_PumpStreamServerToClient<UDS>/8                      +10%                     +17%                     +49%\nBM_UnaryPingPong<MinUDS, NoOpMutator, NoOpMutator>/0/0  +4%                      +6%                      +17%\nBM_UnaryPingPong<UDS, NoOpMutator, NoOpMutator>/0/0     +4%                      +6%                      +17%\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/310229652",
    "html_url": "https://github.com/grpc/grpc/pull/11571#issuecomment-310229652",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11571",
    "id": 310229652,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDIyOTY1Mg==",
    "user": {
      "login": "ncteisen",
      "id": 6148140,
      "node_id": "MDQ6VXNlcjYxNDgxNDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6148140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ncteisen",
      "html_url": "https://github.com/ncteisen",
      "followers_url": "https://api.github.com/users/ncteisen/followers",
      "following_url": "https://api.github.com/users/ncteisen/following{/other_user}",
      "gists_url": "https://api.github.com/users/ncteisen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ncteisen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ncteisen/subscriptions",
      "organizations_url": "https://api.github.com/users/ncteisen/orgs",
      "repos_url": "https://api.github.com/users/ncteisen/repos",
      "events_url": "https://api.github.com/users/ncteisen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ncteisen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-21T23:06:44Z",
    "updated_at": "2017-06-21T23:06:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "Are there tests cases that show the error reproducibly?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/310394547",
    "html_url": "https://github.com/grpc/grpc/pull/11571#issuecomment-310394547",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11571",
    "id": 310394547,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDM5NDU0Nw==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-22T14:20:17Z",
    "updated_at": "2017-06-22T14:20:17Z",
    "author_association": "MEMBER",
    "body": "As Noah suggested, it would be helpful to see a test case that demonstrates why this change it necessary.  In the absence of that test, it's hard to know what (if any) fix is appropriate.\r\n\r\nThis particular change seems wrong to me.  If connect() returns immediately, there should be no need to add the fd to the pollset, because there's no need to poll to cause the connection to be completed.  Note that this is consistent with the behavior when the connection happens asychronously: in that case, the fd is removed from the pollset in on_writable(), before the application's callback is invoked.  In other words, the contract of grpc_tcp_client_connect() is that the fd may be temporarily added to the pollset if needed for asychronous connection, but once the connection is established (either synchronously or asynchronously), the fd will not be present in the pollset.  If a caller wants the fd to be added to some pollset after the connection is established, it's up to that application to add the fd to the pollset.\r\n\r\nAlso, as shown by the bm_diff output above, there is a performance cost to doing this.  Adding an fd to a pollset requires locking, so this increases contention.  So even if a change really is necessary, I think we should look for a different fix."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/310408985",
    "html_url": "https://github.com/grpc/grpc/pull/11571#issuecomment-310408985",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11571",
    "id": 310408985,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDQwODk4NQ==",
    "user": {
      "login": "kpayson64",
      "id": 18316330,
      "node_id": "MDQ6VXNlcjE4MzE2MzMw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18316330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kpayson64",
      "html_url": "https://github.com/kpayson64",
      "followers_url": "https://api.github.com/users/kpayson64/followers",
      "following_url": "https://api.github.com/users/kpayson64/following{/other_user}",
      "gists_url": "https://api.github.com/users/kpayson64/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kpayson64/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kpayson64/subscriptions",
      "organizations_url": "https://api.github.com/users/kpayson64/orgs",
      "repos_url": "https://api.github.com/users/kpayson64/repos",
      "events_url": "https://api.github.com/users/kpayson64/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kpayson64/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-22T15:08:09Z",
    "updated_at": "2017-06-22T15:08:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm not sure I can codify this behavior in a unit test, but here is a hack that exposes the behavior by making the socket blocking for the connect() call:\r\nhttps://github.com/grpc/grpc/pull/11574\r\n\r\nI'd expect tests that exercise connection timeouts to fail, but I'm guessing there is going to be a large number of test failures unrelated to that"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/310416351",
    "html_url": "https://github.com/grpc/grpc/pull/11571#issuecomment-310416351",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11571",
    "id": 310416351,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDQxNjM1MQ==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-22T15:32:27Z",
    "updated_at": "2017-06-22T15:32:27Z",
    "author_association": "MEMBER",
    "body": "Let me ask the question a different way: What is the motivation for this change?  Your original description says that this \"can cause hangs when doing TLS negotiations\", but where are you seeing that, and how did you determine that this fix addresses the problem?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/310420173",
    "html_url": "https://github.com/grpc/grpc/pull/11571#issuecomment-310420173",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11571",
    "id": 310420173,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDQyMDE3Mw==",
    "user": {
      "login": "kpayson64",
      "id": 18316330,
      "node_id": "MDQ6VXNlcjE4MzE2MzMw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18316330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kpayson64",
      "html_url": "https://github.com/kpayson64",
      "followers_url": "https://api.github.com/users/kpayson64/followers",
      "following_url": "https://api.github.com/users/kpayson64/following{/other_user}",
      "gists_url": "https://api.github.com/users/kpayson64/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kpayson64/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kpayson64/subscriptions",
      "organizations_url": "https://api.github.com/users/kpayson64/orgs",
      "repos_url": "https://api.github.com/users/kpayson64/repos",
      "events_url": "https://api.github.com/users/kpayson64/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kpayson64/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-22T15:45:00Z",
    "updated_at": "2017-06-22T15:46:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "This was a failure I was seeing in the App Engine standard unit tests for gRPC.  A detailed trace showed the following was happening:\r\n\r\nConnect called (returned succesfully)\r\nServer accepted connection\r\nClient writes first part of TLS handshake\r\nServer Reads clients handshake, and writes first part of server handshake.\r\nThe process gets stuck in a poll loop.  on_fd_read() had been called for the connected client fd, but it wasn't being polled as part of the poll loop.  This was seen with PHP, where a single global completion queue is  used for everything.\r\n\r\nMaking this one line change caused the test to succeed.  It was deterministically timing out before.\r\n\r\nIf we aren't happy with this approach, the other obvious fix is to just remove this code path altogether,  The async codepath should trigger even if we connected immediately."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/310429729",
    "html_url": "https://github.com/grpc/grpc/pull/11571#issuecomment-310429729",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11571",
    "id": 310429729,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDQyOTcyOQ==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-22T16:18:05Z",
    "updated_at": "2017-06-22T16:18:05Z",
    "author_association": "MEMBER",
    "body": "I don't think this is the right fix for the problem you're describing.\r\n\r\nThe contract of grpc_tcp_client_connect() is that the fd is not present in the pollset when the application's callback is invoked.  Whether the connection happens synchronously or asynchronously is not exposed to the application (nor should it be).  In the synchronous case, the fd is never added to the pollset, and the application's callback is invoked immediately.  In the asynchronous case, the fd is added to the pollset so that we will be able to detect when the connection attempt is finished, at which point on_writable() is invoked from the polling.  Then on_writable() removes the fd from the pollset before invoking the application callback.\r\n\r\nThis PR breaks the contract by leaving the fd in the pollset, but only in the synchronous case.  This is not just a change to the existing contract, but it's also unworkable in practice, because the caller has no idea whether or not the connection attempt happened synchronously or asynchronously, so it has no way of knowing whether to expect that the fd will be left in the pollset when its callback is invoked.\r\n\r\nI'm not sure what the right fix is here, but I suspect that instead of modifying the behavior of grpc_tcp_client_connect(), you need to somehow add the fd to the pollset in the application's callback.\r\n\r\n@sreecha may be able to advise further on this."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/310445785",
    "html_url": "https://github.com/grpc/grpc/pull/11571#issuecomment-310445785",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11571",
    "id": 310445785,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDQ0NTc4NQ==",
    "user": {
      "login": "kpayson64",
      "id": 18316330,
      "node_id": "MDQ6VXNlcjE4MzE2MzMw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18316330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kpayson64",
      "html_url": "https://github.com/kpayson64",
      "followers_url": "https://api.github.com/users/kpayson64/followers",
      "following_url": "https://api.github.com/users/kpayson64/following{/other_user}",
      "gists_url": "https://api.github.com/users/kpayson64/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kpayson64/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kpayson64/subscriptions",
      "organizations_url": "https://api.github.com/users/kpayson64/orgs",
      "repos_url": "https://api.github.com/users/kpayson64/repos",
      "events_url": "https://api.github.com/users/kpayson64/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kpayson64/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-22T17:19:32Z",
    "updated_at": "2017-06-22T17:31:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "@sreecha \r\n~~The section of the code that @markdroth is referring to removing the fd from the callback in the pollset is here: https://github.com/grpc/grpc/blob/master/src/core/lib/iomgr/tcp_client_posix.c#L211~~\r\n\r\n~~But that that would also mean we call fd_orphan on the newly connected fd, which immediately closes the fd, which doesn't make sense to me\r\nhttps://github.com/grpc/grpc/blob/master/src/core/lib/iomgr/ev_epollsig_linux.c#L878~~\r\n\r\nDo you have any idea where we should look to add the fd to the pollset?"
  }
]
