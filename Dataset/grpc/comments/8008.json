[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/246072793",
    "html_url": "https://github.com/grpc/grpc/pull/8008#issuecomment-246072793",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8008",
    "id": 246072793,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjA3Mjc5Mw==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-10T00:10:31Z",
    "updated_at": "2016-09-10T00:10:31Z",
    "author_association": "MEMBER",
    "body": "All reviewers: Because this PR is so complex, can I suggest that we maintain a pattern of giving a file-level comment on each file that we complete saying something like \"This file is reviewed\" or \"LGTM on this file\" if we don't have anything else to say? Just so Craig can keep a running tally of what's done and not done.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/246455704",
    "html_url": "https://github.com/grpc/grpc/pull/8008#issuecomment-246455704",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8008",
    "id": 246455704,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjQ1NTcwNA==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-12T19:03:27Z",
    "updated_at": "2016-09-12T19:03:27Z",
    "author_association": "MEMBER",
    "body": "This now includes the roll forward of #7279 also\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/247478113",
    "html_url": "https://github.com/grpc/grpc/pull/8008#issuecomment-247478113",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8008",
    "id": 247478113,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzQ3ODExMw==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-15T22:58:29Z",
    "updated_at": "2016-09-15T22:58:29Z",
    "author_association": "MEMBER",
    "body": "Reviewers: Is it worth rolling forward #7279 to simplify this review?\n\n(now that it's been shown not to be the culprit)\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/249985535",
    "html_url": "https://github.com/grpc/grpc/pull/8008#issuecomment-249985535",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8008",
    "id": 249985535,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTk4NTUzNQ==",
    "user": {
      "login": "yang-g",
      "id": 10122250,
      "node_id": "MDQ6VXNlcjEwMTIyMjUw",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10122250?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yang-g",
      "html_url": "https://github.com/yang-g",
      "followers_url": "https://api.github.com/users/yang-g/followers",
      "following_url": "https://api.github.com/users/yang-g/following{/other_user}",
      "gists_url": "https://api.github.com/users/yang-g/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yang-g/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yang-g/subscriptions",
      "organizations_url": "https://api.github.com/users/yang-g/orgs",
      "repos_url": "https://api.github.com/users/yang-g/repos",
      "events_url": "https://api.github.com/users/yang-g/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yang-g/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-27T20:18:32Z",
    "updated_at": "2016-09-27T20:18:32Z",
    "author_association": "MEMBER",
    "body": "Review status: 0 of 211 files reviewed at latest revision, 6 unresolved discussions, some commit checks failed.\n\n---\n\n_[src/core/ext/transport/chttp2/transport/chttp2_transport.c, line 882 at r8](https://reviewable.io:443/reviews/grpc/grpc/8008#-KShEhASwkWx5x4Fk9PU:-KShEhATESwrm9ULL1gY:bbeorp2) ([raw file](https://github.com/grpc/grpc/blob/5abf79a91b1a06e7fb971fce65c30661b4c8bf38/src/core/ext/transport/chttp2/transport/chttp2_transport.c#L882)):_\n\n> ``` C\n>   } else {\n>     /* TODO(ctiller): what to do here */\n>     abort();\n> ```\n\nIs this possible to happen?\n\n---\n\n_[src/core/ext/transport/chttp2/transport/chttp2_transport.c, line 917 at r8](https://reviewable.io:443/reviews/grpc/grpc/8008#-KShH3SBAtm6_JN3x1I-:-KShH3SBAtm6_JN3x1I0:bik7uge) ([raw file](https://github.com/grpc/grpc/blob/5abf79a91b1a06e7fb971fce65c30661b4c8bf38/src/core/ext/transport/chttp2/transport/chttp2_transport.c#L917)):_\n\n> ``` C\n> \n>   if (grpc_http_trace) {\n>     gpr_log(GPR_DEBUG, \"  on_complete = %p\", on_complete);\n> ```\n\nIs it better to merge the above trace with this into the same log line?\n\n---\n\n_[src/core/ext/transport/chttp2/transport/chttp2_transport.c, line 1012 at r8](https://reviewable.io:443/reviews/grpc/grpc/8008#-KShCyvCe8DGM47Aj0NC:-KShCyvCe8DGM47Aj0ND:b8hkbkv) ([raw file](https://github.com/grpc/grpc/blob/5abf79a91b1a06e7fb971fce65c30661b4c8bf38/src/core/ext/transport/chttp2/transport/chttp2_transport.c#L1012)):_\n\n> ``` C\n>       s->complete_fetch_covered_by_poller = op->covered_by_poller;\n>       if (flags & GRPC_WRITE_BUFFER_HINT) {\n>         s->fetching_slice_end_offset -= 65536;\n> ```\n\nWhat is special about 65536?\n\n---\n\n_[src/core/ext/transport/chttp2/transport/chttp2_transport.c, line 1236 at r8](https://reviewable.io:443/reviews/grpc/grpc/8008#-KShHNfUBhDspehDBngc:-KShHNfUBhDspehDBngd:b-yw9t7s) ([raw file](https://github.com/grpc/grpc/blob/5abf79a91b1a06e7fb971fce65c30661b4c8bf38/src/core/ext/transport/chttp2/transport/chttp2_transport.c#L1236)):_\n\n> ``` C\n>       while ((bs = grpc_chttp2_incoming_frame_queue_pop(&s->incoming_frames)) !=\n>              NULL) {\n>         gpr_log(GPR_DEBUG, \"discard %p\", bs);\n> ```\n\nIs this log line debug leftover?\n\n---\n\n_[src/core/ext/transport/chttp2/transport/chttp2_transport.c, line 1255 at r8](https://reviewable.io:443/reviews/grpc/grpc/8008#-KShHUc4o0sfRl2dbwcw:-KShHUc5RQMlYTtpWJ1C:b-yw9t7s) ([raw file](https://github.com/grpc/grpc/blob/5abf79a91b1a06e7fb971fce65c30661b4c8bf38/src/core/ext/transport/chttp2/transport/chttp2_transport.c#L1255)):_\n\n> ``` C\n>            (bs = grpc_chttp2_incoming_frame_queue_pop(&s->incoming_frames)) !=\n>                NULL) {\n>       gpr_log(GPR_DEBUG, \"discard %p\", bs);\n> ```\n\nIs this log line debug leftover?\n\n---\n\n_[src/core/ext/transport/chttp2/transport/chttp2_transport.c, line 1280 at r8](https://reviewable.io:443/reviews/grpc/grpc/8008#-KShHjc6HUdNdfQ_xGd6:-KShHjc6HUdNdfQ_xGd7:b-yw9t7s) ([raw file](https://github.com/grpc/grpc/blob/5abf79a91b1a06e7fb971fce65c30661b4c8bf38/src/core/ext/transport/chttp2/transport/chttp2_transport.c#L1280)):_\n\n> ``` C\n>       while ((bs = grpc_chttp2_incoming_frame_queue_pop(&s->incoming_frames)) !=\n>              NULL) {\n>         gpr_log(GPR_DEBUG, \"discard %p\", bs);\n> ```\n\nIs this log line debug leftover?\n\n---\n\n_Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/8008)_\n\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/250245995",
    "html_url": "https://github.com/grpc/grpc/pull/8008#issuecomment-250245995",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8008",
    "id": 250245995,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDI0NTk5NQ==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-28T17:56:50Z",
    "updated_at": "2016-09-28T17:56:50Z",
    "author_association": "MEMBER",
    "body": "Review status: 0 of 211 files reviewed at latest revision, 6 unresolved discussions.\n\n---\n\n_[src/core/ext/transport/chttp2/transport/chttp2_transport.c, line 882 at r8](https://reviewable.io:443/reviews/grpc/grpc/8008#-KShEhASwkWx5x4Fk9PU:-KSlvxdrQE9efY4-tSHU:bml18go) ([raw file](https://github.com/grpc/grpc/blob/5abf79a91b1a06e7fb971fce65c30661b4c8bf38/src/core/ext/transport/chttp2/transport/chttp2_transport.c#L882)):_\n<details><summary>\n\n<i>Previously, yang-g (Yang Gao) wrote…</i></summary>\n\n\n\n> Is this possible to happen?\n> </details>\n> Not currently, but it will be possible. I plan to address it when it does become possible.\n\n---\n\n_[src/core/ext/transport/chttp2/transport/chttp2_transport.c, line 917 at r8](https://reviewable.io:443/reviews/grpc/grpc/8008#-KShH3SBAtm6_JN3x1I-:-KSlw2tUnLjJM5nFTFLg:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/5abf79a91b1a06e7fb971fce65c30661b4c8bf38/src/core/ext/transport/chttp2/transport/chttp2_transport.c#L917)):_\n<details><summary>\n\n<i>Previously, yang-g (Yang Gao) wrote…</i></summary>\n\n\n\n> Is it better to merge the above trace with this into the same log line?\n> </details>\n> Done.\n\n---\n\n_[src/core/ext/transport/chttp2/transport/chttp2_transport.c, line 1012 at r8](https://reviewable.io:443/reviews/grpc/grpc/8008#-KShCyvCe8DGM47Aj0NC:-KSlw4764B5MIUoRgkYd:bmnk1js) ([raw file](https://github.com/grpc/grpc/blob/5abf79a91b1a06e7fb971fce65c30661b4c8bf38/src/core/ext/transport/chttp2/transport/chttp2_transport.c#L1012)):_\n<details><summary>\n\n<i>Previously, yang-g (Yang Gao) wrote…</i></summary>\n\n\n\n> What is special about 65536?\n> </details>\n> Added a comment. It's a magic number for now.\n\n---\n\n_[src/core/ext/transport/chttp2/transport/chttp2_transport.c, line 1236 at r8](https://reviewable.io:443/reviews/grpc/grpc/8008#-KShHNfUBhDspehDBngc:-KSlw4wGsozcxi_7QjnA:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/5abf79a91b1a06e7fb971fce65c30661b4c8bf38/src/core/ext/transport/chttp2/transport/chttp2_transport.c#L1236)):_\n<details><summary>\n\n<i>Previously, yang-g (Yang Gao) wrote…</i></summary>\n\n\n\n> Is this log line debug leftover?\n> </details>\n> Done.\n\n---\n\n_[src/core/ext/transport/chttp2/transport/chttp2_transport.c, line 1255 at r8](https://reviewable.io:443/reviews/grpc/grpc/8008#-KShHUc4o0sfRl2dbwcw:-KSlw5WE2xvTWi01us2n:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/5abf79a91b1a06e7fb971fce65c30661b4c8bf38/src/core/ext/transport/chttp2/transport/chttp2_transport.c#L1255)):_\n<details><summary>\n\n<i>Previously, yang-g (Yang Gao) wrote…</i></summary>\n\n\n\n> Is this log line debug leftover?\n> </details>\n> Done.\n\n---\n\n_[src/core/ext/transport/chttp2/transport/chttp2_transport.c, line 1280 at r8](https://reviewable.io:443/reviews/grpc/grpc/8008#-KShHjc6HUdNdfQ_xGd6:-KSlw64tUCUKvwgKztGc:b-896fix) ([raw file](https://github.com/grpc/grpc/blob/5abf79a91b1a06e7fb971fce65c30661b4c8bf38/src/core/ext/transport/chttp2/transport/chttp2_transport.c#L1280)):_\n<details><summary>\n\n<i>Previously, yang-g (Yang Gao) wrote…</i></summary>\n\n\n\n> Is this log line debug leftover?\n> </details>\n> Done.\n\n---\n\n_Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/8008)_\n\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/250535327",
    "html_url": "https://github.com/grpc/grpc/pull/8008#issuecomment-250535327",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8008",
    "id": 250535327,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDUzNTMyNw==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-29T17:29:14Z",
    "updated_at": "2016-09-29T17:29:14Z",
    "author_association": "MEMBER",
    "body": "@markdroth - I had some fairly large merge errors in call.c after #7970, can you PTAL at that file.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/250535633",
    "html_url": "https://github.com/grpc/grpc/pull/8008#issuecomment-250535633",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8008",
    "id": 250535633,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDUzNTYzMw==",
    "user": {
      "login": "yang-g",
      "id": 10122250,
      "node_id": "MDQ6VXNlcjEwMTIyMjUw",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10122250?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yang-g",
      "html_url": "https://github.com/yang-g",
      "followers_url": "https://api.github.com/users/yang-g/followers",
      "following_url": "https://api.github.com/users/yang-g/following{/other_user}",
      "gists_url": "https://api.github.com/users/yang-g/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yang-g/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yang-g/subscriptions",
      "organizations_url": "https://api.github.com/users/yang-g/orgs",
      "repos_url": "https://api.github.com/users/yang-g/repos",
      "events_url": "https://api.github.com/users/yang-g/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yang-g/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-29T17:30:25Z",
    "updated_at": "2016-09-29T17:30:25Z",
    "author_association": "MEMBER",
    "body": "LGTM\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/250777862",
    "html_url": "https://github.com/grpc/grpc/pull/8008#issuecomment-250777862",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8008",
    "id": 250777862,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDc3Nzg2Mg==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-30T15:39:38Z",
    "updated_at": "2016-09-30T15:39:38Z",
    "author_association": "MEMBER",
    "body": "Waiting on @vjpai, @sreecha \n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/252080481",
    "html_url": "https://github.com/grpc/grpc/pull/8008#issuecomment-252080481",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8008",
    "id": 252080481,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MjA4MDQ4MQ==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-06T20:34:49Z",
    "updated_at": "2016-10-06T20:34:49Z",
    "author_association": "MEMBER",
    "body": "Ping\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/252113840",
    "html_url": "https://github.com/grpc/grpc/pull/8008#issuecomment-252113840",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8008",
    "id": 252113840,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MjExMzg0MA==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-06T23:11:20Z",
    "updated_at": "2016-10-06T23:11:20Z",
    "author_association": "MEMBER",
    "body": "Jenkins: test this please\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/252390713",
    "html_url": "https://github.com/grpc/grpc/pull/8008#issuecomment-252390713",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8008",
    "id": 252390713,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MjM5MDcxMw==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-08T00:39:25Z",
    "updated_at": "2016-10-08T00:39:25Z",
    "author_association": "MEMBER",
    "body": "I sent in a review of combiner. I still need to review closure and exec_ctx\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/252734813",
    "html_url": "https://github.com/grpc/grpc/pull/8008#issuecomment-252734813",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8008",
    "id": 252734813,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MjczNDgxMw==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-10T20:18:34Z",
    "updated_at": "2016-10-10T20:18:34Z",
    "author_association": "MEMBER",
    "body": "I think I've addressed all of @vjpai's comments\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/252744251",
    "html_url": "https://github.com/grpc/grpc/pull/8008#issuecomment-252744251",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8008",
    "id": 252744251,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1Mjc0NDI1MQ==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-10T20:57:35Z",
    "updated_at": "2016-10-10T20:57:35Z",
    "author_association": "MEMBER",
    "body": "I'm always wary about #defining something to be zero that gets or'd in\nanywhere: it can lead to subtle bugs and bad assumptions when the code gets\nchanged down the line.\n\nOn Mon, Oct 10, 2016 at 1:55 PM Vijay Pai notifications@github.com wrote:\n\n> ## _@vjpai_ commented on this pull request.\n> \n> In src/core/lib/iomgr/combiner.c\n> https://github.com/grpc/grpc/pull/8008#pullrequestreview-3572225:\n> \n> > @@ -50,17 +50,20 @@ int grpc_combiner_trace = 0;\n> >      }                           \\\n> >    } while (0)\n> \n> +#define STATE_UNORPHANED 1\n> \n> If there's UNORPHANED to represent 1, how about ORPHANED to represent 0?\n> Makes the case statements below more readable.\n> \n> —\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/grpc/grpc/pull/8008#pullrequestreview-3572225, or mute\n> the thread\n> https://github.com/notifications/unsubscribe-auth/AJpudSEvZpN0hsKzeoK-xnloVznMiJoIks5qyqZTgaJpZM4J2fsA\n> .\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/252744361",
    "html_url": "https://github.com/grpc/grpc/pull/8008#issuecomment-252744361",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8008",
    "id": 252744361,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1Mjc0NDM2MQ==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-10T20:57:59Z",
    "updated_at": "2016-10-10T20:57:59Z",
    "author_association": "MEMBER",
    "body": "Your changes up to d80a8c9 addressed my review of combiner but I still had a comment on exec_ctx in my 2nd review . Can you address that?\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/252745217",
    "html_url": "https://github.com/grpc/grpc/pull/8008#issuecomment-252745217",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8008",
    "id": 252745217,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1Mjc0NTIxNw==",
    "user": {
      "login": "vjpai",
      "id": 8864912,
      "node_id": "MDQ6VXNlcjg4NjQ5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8864912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vjpai",
      "html_url": "https://github.com/vjpai",
      "followers_url": "https://api.github.com/users/vjpai/followers",
      "following_url": "https://api.github.com/users/vjpai/following{/other_user}",
      "gists_url": "https://api.github.com/users/vjpai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vjpai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vjpai/subscriptions",
      "organizations_url": "https://api.github.com/users/vjpai/orgs",
      "repos_url": "https://api.github.com/users/vjpai/repos",
      "events_url": "https://api.github.com/users/vjpai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vjpai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-10T21:01:24Z",
    "updated_at": "2016-10-10T21:01:24Z",
    "author_association": "MEMBER",
    "body": "There will be numerous subtle bugs of all kinds if the code gets changed down the line, but STATE_ORPHANED to parallel STATE_UNORPHANED makes the code easier to read and understand. Maybe a big boldface saying that thou shalt not change this from 0? Or a #error if it's ever a value other than 0? (The C moral equivalent of a static_assert, I guess)\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/252747181",
    "html_url": "https://github.com/grpc/grpc/pull/8008#issuecomment-252747181",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8008",
    "id": 252747181,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1Mjc0NzE4MQ==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-10T21:10:11Z",
    "updated_at": "2016-10-10T21:10:11Z",
    "author_association": "MEMBER",
    "body": "#define X 0, with X | foo has always been a bad code smell in my\nexperience, so I'd really prefer not to do that.\n\nThat said, agree the readability could be improved. I've pushed an\nalternative - PTAL.\n\nOn Mon, Oct 10, 2016 at 2:01 PM Vijay Pai notifications@github.com wrote:\n\nThere will be numerous subtle bugs of all kinds if the code gets changed\ndown the line, but STATE_ORPHANED to parallel STATE_UNORPHANED makes the\ncode easier to read and understand. Maybe a big boldface saying that thou\nshalt not change this from 0? Or a #error if it's ever a value other than\n0? (The C moral equivalent of a static_assert, I guess)\n\n—\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/grpc/grpc/pull/8008#issuecomment-252745217, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AJpudYni4m54RdlhIf-COw-6bASrYWFXks5qyqe5gaJpZM4J2fsA\n.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/253279261",
    "html_url": "https://github.com/grpc/grpc/pull/8008#issuecomment-253279261",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8008",
    "id": 253279261,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzI3OTI2MQ==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-12T17:22:07Z",
    "updated_at": "2016-10-12T17:22:07Z",
    "author_association": "MEMBER",
    "body": "@kpayson64 @soltanmm @nathanielmanistaatgoogle - seeing some failures with Python - can anyone shed some light?\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/253313161",
    "html_url": "https://github.com/grpc/grpc/pull/8008#issuecomment-253313161",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8008",
    "id": 253313161,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzMxMzE2MQ==",
    "user": {
      "login": "kpayson64",
      "id": 18316330,
      "node_id": "MDQ6VXNlcjE4MzE2MzMw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18316330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kpayson64",
      "html_url": "https://github.com/kpayson64",
      "followers_url": "https://api.github.com/users/kpayson64/followers",
      "following_url": "https://api.github.com/users/kpayson64/following{/other_user}",
      "gists_url": "https://api.github.com/users/kpayson64/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kpayson64/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kpayson64/subscriptions",
      "organizations_url": "https://api.github.com/users/kpayson64/orgs",
      "repos_url": "https://api.github.com/users/kpayson64/repos",
      "events_url": "https://api.github.com/users/kpayson64/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kpayson64/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-12T19:27:06Z",
    "updated_at": "2016-10-12T19:27:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ctiller do you have a link to the failed python tests? The last 4 runs of jenkins linux have failed.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/253393030",
    "html_url": "https://github.com/grpc/grpc/pull/8008#issuecomment-253393030",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8008",
    "id": 253393030,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzM5MzAzMA==",
    "user": {
      "login": "sreecha",
      "id": 2754995,
      "node_id": "MDQ6VXNlcjI3NTQ5OTU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2754995?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sreecha",
      "html_url": "https://github.com/sreecha",
      "followers_url": "https://api.github.com/users/sreecha/followers",
      "following_url": "https://api.github.com/users/sreecha/following{/other_user}",
      "gists_url": "https://api.github.com/users/sreecha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sreecha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sreecha/subscriptions",
      "organizations_url": "https://api.github.com/users/sreecha/orgs",
      "repos_url": "https://api.github.com/users/sreecha/repos",
      "events_url": "https://api.github.com/users/sreecha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sreecha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-13T02:10:31Z",
    "updated_at": "2016-10-13T02:10:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "Reviewed 138 of 205 files at r2, 3 of 7 files at r3, 4 of 24 files at r8, 11 of 31 files at r10, 6 of 14 files at r12, 8 of 9 files at r14, 1 of 2 files at r16.\nReview status: 171 of 207 files reviewed at latest revision, 22 unresolved discussions, some commit checks failed.\n\n---\n\n_[src/core/lib/iomgr/ev_epoll_linux.c, line 168 at r19](https://reviewable.io:443/reviews/grpc/grpc/8008#-KTvUZQqBjqrkk9YIvO_:-KTvUZQrt_hb3256gdhg:b-vhtkiz) ([raw file](https://github.com/grpc/grpc/blob/9381c00857d0acc4fc034937260f32ee26e836b9/src/core/lib/iomgr/ev_epoll_linux.c#L168)):_\n\n> ``` C\n> #endif /* !defined(GPRC_PI_REF_COUNT_DEBUG) */\n> \n> typedef struct polling_island {\n> ```\n\nIt is worth adding a comment above polling_island that this structure also acts as a grpc_workqueue \n\n---\n\n_[src/core/lib/iomgr/ev_epoll_linux.c, line 191 at r19](https://reviewable.io:443/reviews/grpc/grpc/8008#-KTvIhfUqMAe7APOLxIa:-KTvIhfUqMAe7APOLxIb:bhv7wec) ([raw file](https://github.com/grpc/grpc/blob/9381c00857d0acc4fc034937260f32ee26e836b9/src/core/lib/iomgr/ev_epoll_linux.c#L191)):_\nNeed comments for these fields. \n\n>   gpr_atm poller_count;\n>   gpr_mu workqueue_read_mu;\n>   gpr_mpscq workqueue_items;\n>   gpr_atm workqueue_item_count;\n>   grpc_wakeup_fd workqueue_wakeup_fd;\n\n---\n\n_[src/core/lib/iomgr/ev_epoll_linux.c, line 797 at r19](https://reviewable.io:443/reviews/grpc/grpc/8008#-KTvlqQLhJC5KR6oOAkh:-KTvlqQLhJC5KR6oOAki:blkjrv0) ([raw file](https://github.com/grpc/grpc/blob/9381c00857d0acc4fc034937260f32ee26e836b9/src/core/lib/iomgr/ev_epoll_linux.c#L797)):_\n\n> ``` C\n>     workqueue_maybe_wakeup(pi);\n>   }\n>   workqueue_move_items_to_parent(pi);\n> ```\n\nSince workqueue_move_items_to_parent() does not grab the locks on polling islands, I am a bit worried that we might run in to a corner case where workitem might be \"lost\" . i.e \n\nlets say workqueue_move_items_to_parent(pi), moved all the items by traversing the merged_to link and eventually moved to polling island \"x\"\n\nHowever, \"x\" was in the process of being merged with \"y\" and somehow the polling_island_merge() and workqueue_move_items_to_parent() interleaved in such a way that  workqueue_move_items_to_parent() didn't know of \"y\"\n\nIt is possible that no poller may look at \"x\".\n\n(I will think about this some more - but not taking a lock on pi does present this as a potential problem in future. Perhaps we should do a sweep of work items in pollset_maybe_work_and_unlock ... I will think about this some more..)\n\n---\n\n_[src/core/lib/iomgr/ev_epoll_linux.c, line 1398 at r19](https://reviewable.io:443/reviews/grpc/grpc/8008#-KTvZwo4tML5vo8It5aS:-KTvZwo4tML5vo8It5aT:b1upzep) ([raw file](https://github.com/grpc/grpc/blob/9381c00857d0acc4fc034937260f32ee26e836b9/src/core/lib/iomgr/ev_epoll_linux.c#L1398)):_\n\n> > else if (gpr_atm_no_barrier_load(&pi->workqueue_item_count) > 0)\n> > Is this check strictly needed here?  \n\nI am assuming you have it here because some items may have been added to the workqueue after we released the workqueue_read_mu above. \n\nIf we do not have it here, wouldn't the next polling thread pop the item? \n\n---\n\n_[src/core/lib/iomgr/ev_epoll_linux.c, line 1414 at r19](https://reviewable.io:443/reviews/grpc/grpc/8008#-KTvVdpfFhIkZSXVoBlH:-KTvVdpfFhIkZSXVoBlI:b-7c8cut) ([raw file](https://github.com/grpc/grpc/blob/fad04cc4adb9607ff6e0e14fa863e581c5574124/src/core/lib/iomgr/ev_epoll_linux.c#L1414)):_\n\n> while (ep_rv == GRPC_EPOLL_MAX_EVENTS);\n\nJust wondering if removing this while loop was intentional.\nDo you think it was a bit of a stretch to have it in the first place? (Now that you reduced GRPC_EPOLL_MAX_EVENTS to 100, wouldn't this be even a greater possibility that ep_rv == GRPC_EPOLL_MAX_EVENTS  ? )\n\n---\n\n_[src/core/lib/iomgr/ev_epoll_linux.c, line 1460 at r19](https://reviewable.io:443/reviews/grpc/grpc/8008#-KTva1T8yf9kl64UuHK3:-KTva1T8yf9kl64UuHK4:b-dzic8t) ([raw file](https://github.com/grpc/grpc/blob/9381c00857d0acc4fc034937260f32ee26e836b9/src/core/lib/iomgr/ev_epoll_linux.c#L1460)):_\n\n> ``` C\n>   gpr_mu_unlock(&pollset->mu);\n> \n>   if (!maybe_do_workqueue_work(exec_ctx, pi)) {\n> ```\n\nI am assuming we do not do a epoll_wait here if 'maybe_do_workqueue_work' returns 'true', because the closure just executed by maybe_do_workqueue_work might have put something on the completion queue. Is that correct? \n\nIt would help to have a brief comment here as to why we are skipping this iteration here.\n\n---\n\n_[src/core/lib/iomgr/exec_ctx.h, line 67 at r19](https://reviewable.io:443/reviews/grpc/grpc/8008#-KTvCPMLv_HZX5jCrATk:-KTvCPMLv_HZX5jCrATl:bubgf6d) ([raw file](https://github.com/grpc/grpc/blob/9381c00857d0acc4fc034937260f32ee26e836b9/src/core/lib/iomgr/exec_ctx.h#L67)):_\n\n> ``` objc\n>  */\n> #ifndef GRPC_EXECUTION_CONTEXT_SANITIZER\n> struct grpc_exec_ctx {\n> ```\n\nSome description of the fields would be helpful (especially, the 'stealing_from_workfqueue' and 'stolen_closure'  fields)\n\n---\n\n_Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/8008)_\n\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/253394132",
    "html_url": "https://github.com/grpc/grpc/pull/8008#issuecomment-253394132",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8008",
    "id": 253394132,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzM5NDEzMg==",
    "user": {
      "login": "sreecha",
      "id": 2754995,
      "node_id": "MDQ6VXNlcjI3NTQ5OTU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2754995?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sreecha",
      "html_url": "https://github.com/sreecha",
      "followers_url": "https://api.github.com/users/sreecha/followers",
      "following_url": "https://api.github.com/users/sreecha/following{/other_user}",
      "gists_url": "https://api.github.com/users/sreecha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sreecha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sreecha/subscriptions",
      "organizations_url": "https://api.github.com/users/sreecha/orgs",
      "repos_url": "https://api.github.com/users/sreecha/repos",
      "events_url": "https://api.github.com/users/sreecha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sreecha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-13T02:15:24Z",
    "updated_at": "2016-10-13T02:15:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ctiller , I am done with the review. I added my comments. Only one of them is _potentially_ serious (i.e about `workqueue_move_items_to_parent` function - when called from `workqueue_enqueue` )\n\nAll others are very minor\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/253574492",
    "html_url": "https://github.com/grpc/grpc/pull/8008#issuecomment-253574492",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8008",
    "id": 253574492,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzU3NDQ5Mg==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-13T17:02:22Z",
    "updated_at": "2016-10-13T17:02:22Z",
    "author_association": "MEMBER",
    "body": "Review status: 171 of 207 files reviewed at latest revision, 22 unresolved discussions, some commit checks failed.\n\n---\n\n_[src/core/lib/iomgr/ev_epoll_linux.c, line 797 at r19](https://reviewable.io:443/reviews/grpc/grpc/8008#-KTvlqQLhJC5KR6oOAkh:-KTyvJ7OWR_1Lx5Gsbag:bnbjgha) ([raw file](https://github.com/grpc/grpc/blob/9381c00857d0acc4fc034937260f32ee26e836b9/src/core/lib/iomgr/ev_epoll_linux.c#L797)):_\n<details><summary>\n\n<i>Previously, sreecha (Sree Kuchibhotla) wrote…</i></summary>\n\n\n\n> Since workqueue_move_items_to_parent() does not grab the locks on polling islands, I am a bit worried that we might run in to a corner case where workitem might be \"lost\" . i.e \n> \n> lets say workqueue_move_items_to_parent(pi), moved all the items by traversing the merged_to link and eventually moved to polling island \"x\"\n> \n> However, \"x\" was in the process of being merged with \"y\" and somehow the polling_island_merge() and workqueue_move_items_to_parent() interleaved in such a way that  workqueue_move_items_to_parent() didn't know of \"y\"\n> \n> It is possible that no poller may look at \"x\".\n> \n> (I will think about this some more - but not taking a lock on pi does present this as a potential problem in future. Perhaps we should do a sweep of work items in pollset_maybe_work_and_unlock ... I will think about this some more..)\n> </details>\n> So I think this case gets covered because we additionally perform the sweep after merging, and importantly after we store merged_to. Either the merge will sweep the new element up, or the enqueue will see merged_to and sweep anything up.\n\n---\n\n_[src/core/lib/iomgr/ev_epoll_linux.c, line 1398 at r19](https://reviewable.io:443/reviews/grpc/grpc/8008#-KTvZwo4tML5vo8It5aS:-KTywSCjQqVbJEXzstU8:brjgdbo) ([raw file](https://github.com/grpc/grpc/blob/9381c00857d0acc4fc034937260f32ee26e836b9/src/core/lib/iomgr/ev_epoll_linux.c#L1398)):_\n<details><summary>\n\n<i>Previously, sreecha (Sree Kuchibhotla) wrote…</i></summary>\n\n\n\n> > > else if (gpr_atm_no_barrier_load(&pi->workqueue_item_count) > 0)\n> > > Is this check strictly needed here?  \n> \n> I am assuming you have it here because some items may have been added to the workqueue after we released the workqueue_read_mu above. \n> \n> If we do not have it here, wouldn't the next polling thread pop the item? \n> \n> </details>\n> n == NULL means one of:\n> 1. the queue is empty\n> 2. the queue is in an inconsistent state and cannot pop an element yet\n\nIf the list is not empty we need to ensure that a thread will come in and pick up that work. The next poller certainly will, but if all the pollers for this island are stuck in an infinite wait, then that means nobody ever will: we need to either spin or wakeup.\n\nI actually expect a future version of this will play with spinning a little to do this to improve latency.\n\n---\n\n_[src/core/lib/iomgr/ev_epoll_linux.c, line 1414 at r19](https://reviewable.io:443/reviews/grpc/grpc/8008#-KTvVdpfFhIkZSXVoBlH:-KTyxwrnSmCV-vtJcN_G:b-ixk9) ([raw file](https://github.com/grpc/grpc/blob/fad04cc4adb9607ff6e0e14fa863e581c5574124/src/core/lib/iomgr/ev_epoll_linux.c#L1414)):_\n<details><summary>\n\n<i>Previously, sreecha (Sree Kuchibhotla) wrote…</i></summary>\n\n\n\n> > while (ep_rv == GRPC_EPOLL_MAX_EVENTS);\n> \n> Just wondering if removing this while loop was intentional.\n> Do you think it was a bit of a stretch to have it in the first place? (Now that you reduced GRPC_EPOLL_MAX_EVENTS to 100, wouldn't this be even a greater possibility that ep_rv == GRPC_EPOLL_MAX_EVENTS  ? )\n> \n> </details>\n> This was more of a latency worry: if we continue reaping events, they're piling up on the exec_ctx and we're not doing anything about them. I expect we're better off taking the work we've got and working on that, and letting some other poller come in and grab the excess events later. \n\nThis effect ought to get more pronounced as we move towards rpc manager style solutions with autosizing of poller counts.\n\n---\n\n_Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/8008)_\n\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/253581585",
    "html_url": "https://github.com/grpc/grpc/pull/8008#issuecomment-253581585",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8008",
    "id": 253581585,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzU4MTU4NQ==",
    "user": {
      "login": "sreecha",
      "id": 2754995,
      "node_id": "MDQ6VXNlcjI3NTQ5OTU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2754995?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sreecha",
      "html_url": "https://github.com/sreecha",
      "followers_url": "https://api.github.com/users/sreecha/followers",
      "following_url": "https://api.github.com/users/sreecha/following{/other_user}",
      "gists_url": "https://api.github.com/users/sreecha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sreecha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sreecha/subscriptions",
      "organizations_url": "https://api.github.com/users/sreecha/orgs",
      "repos_url": "https://api.github.com/users/sreecha/repos",
      "events_url": "https://api.github.com/users/sreecha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sreecha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-13T17:30:10Z",
    "updated_at": "2016-10-13T17:30:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "Review status: 170 of 207 files reviewed at latest revision, 22 unresolved discussions.\n\n---\n\n_[src/core/lib/iomgr/ev_epoll_linux.c, line 1398 at r19](https://reviewable.io:443/reviews/grpc/grpc/8008#-KTvZwo4tML5vo8It5aS:-KTz1LCP7VLZENMfrjv2:b3rfxjb) ([raw file](https://github.com/grpc/grpc/blob/9381c00857d0acc4fc034937260f32ee26e836b9/src/core/lib/iomgr/ev_epoll_linux.c#L1398)):_\n<details><summary>\n\n<i>Previously, ctiller (Craig Tiller) wrote…</i></summary>\n\n\n\n> n == NULL means one of:\n> 1. the queue is empty\n> 2. the queue is in an inconsistent state and cannot pop an element yet\n> \n> If the list is not empty we need to ensure that a thread will come in and pick up that work. The next poller certainly will, but if all the pollers for this island are stuck in an infinite wait, then that means nobody ever will: we need to either spin or wakeup.\n> \n> I actually expect a future version of this will play with spinning a little to do this to improve latency.\n> </details>\n> Oh I forgot. You did explain the other meaning of n == NULL yesterday (that it may mean the queue is in a transient inconsistent state)\n\nThis makes sense\n\n---\n\n_[src/core/lib/iomgr/ev_epoll_linux.c, line 1414 at r19](https://reviewable.io:443/reviews/grpc/grpc/8008#-KTvVdpfFhIkZSXVoBlH:-KTz37THdiYU_fD8DFUT:b-dxcbts) ([raw file](https://github.com/grpc/grpc/blob/fad04cc4adb9607ff6e0e14fa863e581c5574124/src/core/lib/iomgr/ev_epoll_linux.c#L1414)):_\n<details><summary>\n\n<i>Previously, ctiller (Craig Tiller) wrote…</i></summary>\n\n\n\n> This was more of a latency worry: if we continue reaping events, they're piling up on the exec_ctx and we're not doing anything about them. I expect we're better off taking the work we've got and working on that, and letting some other poller come in and grab the excess events later. \n> \n> This effect ought to get more pronounced as we move towards rpc manager style solutions with autosizing of poller counts.\n> </details>\n> Makes sense.\n\n---\n\n_Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/8008)_\n\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/253589769",
    "html_url": "https://github.com/grpc/grpc/pull/8008#issuecomment-253589769",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8008",
    "id": 253589769,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzU4OTc2OQ==",
    "user": {
      "login": "sreecha",
      "id": 2754995,
      "node_id": "MDQ6VXNlcjI3NTQ5OTU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2754995?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sreecha",
      "html_url": "https://github.com/sreecha",
      "followers_url": "https://api.github.com/users/sreecha/followers",
      "following_url": "https://api.github.com/users/sreecha/following{/other_user}",
      "gists_url": "https://api.github.com/users/sreecha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sreecha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sreecha/subscriptions",
      "organizations_url": "https://api.github.com/users/sreecha/orgs",
      "repos_url": "https://api.github.com/users/sreecha/repos",
      "events_url": "https://api.github.com/users/sreecha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sreecha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-13T17:59:36Z",
    "updated_at": "2016-10-13T17:59:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "Review status: 170 of 207 files reviewed at latest revision, 22 unresolved discussions.\n\n---\n\n_[src/core/lib/iomgr/ev_epoll_linux.c, line 797 at r19](https://reviewable.io:443/reviews/grpc/grpc/8008#-KTvlqQLhJC5KR6oOAkh:-KTzAR5xjE4w3NzTc1q9:b-e6a21e) ([raw file](https://github.com/grpc/grpc/blob/9381c00857d0acc4fc034937260f32ee26e836b9/src/core/lib/iomgr/ev_epoll_linux.c#L797)):_\n<details><summary>\n\n<i>Previously, ctiller (Craig Tiller) wrote…</i></summary>\n\n\n\n> So I think this case gets covered because we additionally perform the sweep after merging, and importantly after we store merged_to. Either the merge will sweep the new element up, or the enqueue will see merged_to and sweep anything up.\n> </details>\n> Yes you are right. \n- move_items_to_parent() ensures that all work items are moved to a given polling island BEFORE reading its \"merged_to\" pointer (and quitting if its NULL)\n- polling_island_merge() ensures that move_items_to_parent() is called to move current work items to the parent AFTER the \"merged_to\" is updated. \n\nI am convinced. Thanks!\n\n---\n\n_Comments from [Reviewable](https://reviewable.io:443/reviews/grpc/grpc/8008)_\n\n<!-- Sent from Reviewable.io -->\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/253591586",
    "html_url": "https://github.com/grpc/grpc/pull/8008#issuecomment-253591586",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8008",
    "id": 253591586,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzU5MTU4Ng==",
    "user": {
      "login": "sreecha",
      "id": 2754995,
      "node_id": "MDQ6VXNlcjI3NTQ5OTU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2754995?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sreecha",
      "html_url": "https://github.com/sreecha",
      "followers_url": "https://api.github.com/users/sreecha/followers",
      "following_url": "https://api.github.com/users/sreecha/following{/other_user}",
      "gists_url": "https://api.github.com/users/sreecha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sreecha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sreecha/subscriptions",
      "organizations_url": "https://api.github.com/users/sreecha/orgs",
      "repos_url": "https://api.github.com/users/sreecha/repos",
      "events_url": "https://api.github.com/users/sreecha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sreecha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-13T18:05:50Z",
    "updated_at": "2016-10-13T18:06:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ctiller . LGTM from me as well (for all the files under lib/iomgr) . \nAdd some comments (at places I mentioned above) but that is optional. \n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/253594278",
    "html_url": "https://github.com/grpc/grpc/pull/8008#issuecomment-253594278",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8008",
    "id": 253594278,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzU5NDI3OA==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-13T18:15:44Z",
    "updated_at": "2016-10-13T18:15:44Z",
    "author_association": "MEMBER",
    "body": "@kpayson64 - PTAL at https://grpc-testing.appspot.com/job/gRPC_pull_requests_linux/160/console, searching for _read_some_but_not_all_responses_test.ReadSomeButNotAllResponsesTest.testReadSomeButNotAllResponses\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/253594950",
    "html_url": "https://github.com/grpc/grpc/pull/8008#issuecomment-253594950",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8008",
    "id": 253594950,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzU5NDk1MA==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-13T18:18:06Z",
    "updated_at": "2016-10-13T18:18:06Z",
    "author_association": "MEMBER",
    "body": "@apolcyn - can you help me understand why Ruby is failing (https://grpc-testing.appspot.com/job/gRPC_pull_requests_linux/160/console)\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/253599428",
    "html_url": "https://github.com/grpc/grpc/pull/8008#issuecomment-253599428",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8008",
    "id": 253599428,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzU5OTQyOA==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-13T18:34:48Z",
    "updated_at": "2016-10-13T18:34:48Z",
    "author_association": "MEMBER",
    "body": "@ctiller: are the Python failures always `_read_some_but_not_all_responses_test.ReadSomeButNotAllResponsesTest.testReadSomeButNotAllResponses`? And deterministic or flaky?\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/253603739",
    "html_url": "https://github.com/grpc/grpc/pull/8008#issuecomment-253603739",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8008",
    "id": 253603739,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzYwMzczOQ==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-13T18:49:43Z",
    "updated_at": "2016-10-13T18:49:43Z",
    "author_association": "MEMBER",
    "body": "@nathanielmanistaatgoogle - it does seem to be that test, and somewhat deterministically.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/253612531",
    "html_url": "https://github.com/grpc/grpc/pull/8008#issuecomment-253612531",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8008",
    "id": 253612531,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzYxMjUzMQ==",
    "user": {
      "login": "apolcyn",
      "id": 9566254,
      "node_id": "MDQ6VXNlcjk1NjYyNTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9566254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apolcyn",
      "html_url": "https://github.com/apolcyn",
      "followers_url": "https://api.github.com/users/apolcyn/followers",
      "following_url": "https://api.github.com/users/apolcyn/following{/other_user}",
      "gists_url": "https://api.github.com/users/apolcyn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apolcyn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apolcyn/subscriptions",
      "organizations_url": "https://api.github.com/users/apolcyn/orgs",
      "repos_url": "https://api.github.com/users/apolcyn/repos",
      "events_url": "https://api.github.com/users/apolcyn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apolcyn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-13T19:23:06Z",
    "updated_at": "2016-10-13T19:23:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ctiller looking into it, it's looking like the client in that test is doing a start_batch/pluck with a GRPC_SEND_MESSAGE op, and a 'write_flag' of 1. But I guess that when setting the write flag to 1 in there, the message isn't reaching the server as expected (on the server side, the buffer it passed to run_batch on it's RECV_MESSAGE op ends up NULL).\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/254329189",
    "html_url": "https://github.com/grpc/grpc/pull/8008#issuecomment-254329189",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8008",
    "id": 254329189,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDMyOTE4OQ==",
    "user": {
      "login": "ctiller",
      "id": 10120821,
      "node_id": "MDQ6VXNlcjEwMTIwODIx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10120821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctiller",
      "html_url": "https://github.com/ctiller",
      "followers_url": "https://api.github.com/users/ctiller/followers",
      "following_url": "https://api.github.com/users/ctiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctiller/subscriptions",
      "organizations_url": "https://api.github.com/users/ctiller/orgs",
      "repos_url": "https://api.github.com/users/ctiller/repos",
      "events_url": "https://api.github.com/users/ctiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-17T20:48:09Z",
    "updated_at": "2016-10-17T20:48:09Z",
    "author_association": "MEMBER",
    "body": "Unless there are violent objections: I plan to bombs-away later this afternoon assuming tests look good.\n\nThere have been some minor edits since LGTM's came in:\n@yang-g may want a quick look at df0f365 936f1ea 1409dbf\n@vjpai may want a quick look at c2dd2a2 b019d61\n@rjshade may want a quick look at 68cf8ce\n"
  }
]
