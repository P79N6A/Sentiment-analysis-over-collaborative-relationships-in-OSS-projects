[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/313533055",
    "html_url": "https://github.com/grpc/grpc/issues/11704#issuecomment-313533055",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11704",
    "id": 313533055,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzUzMzA1NQ==",
    "user": {
      "login": "carl-mastrangelo",
      "id": 8943572,
      "node_id": "MDQ6VXNlcjg5NDM1NzI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8943572?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carl-mastrangelo",
      "html_url": "https://github.com/carl-mastrangelo",
      "followers_url": "https://api.github.com/users/carl-mastrangelo/followers",
      "following_url": "https://api.github.com/users/carl-mastrangelo/following{/other_user}",
      "gists_url": "https://api.github.com/users/carl-mastrangelo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carl-mastrangelo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carl-mastrangelo/subscriptions",
      "organizations_url": "https://api.github.com/users/carl-mastrangelo/orgs",
      "repos_url": "https://api.github.com/users/carl-mastrangelo/repos",
      "events_url": "https://api.github.com/users/carl-mastrangelo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carl-mastrangelo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-06T22:09:44Z",
    "updated_at": "2017-07-06T22:09:44Z",
    "author_association": "MEMBER",
    "body": "cc: @markdroth @dgquintas \r\n\r\nThis is the issue we talked about recently.  @ola-rozenfeld  is using Java, but the issue applies to all languages."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/313700072",
    "html_url": "https://github.com/grpc/grpc/issues/11704#issuecomment-313700072",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11704",
    "id": 313700072,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzcwMDA3Mg==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-07T14:36:34Z",
    "updated_at": "2017-07-07T14:36:52Z",
    "author_association": "MEMBER",
    "body": "Based on our discussion, I think the issue here is that the client is hitting the server's HTTP/2 SETTINGS_MAX_CONCURRENT_STREAMS limit for a single connection.  So the request here is to create multiple connections to the backend server and balance the number of open streams across those connections.\r\n\r\nNote that, in principle, this is somewhat orthogonal to our existing load-balancing mechanism, since this is not about balancing load across backends; it's about balancing open streams across connections.  The two types of balancing are actually orthogonal, although we might wind up conflating the two, depending on how we choose to implement this.\r\n\r\nWe have talked about supporting this in the past, but it will require some careful design work and then implementation in all languages.  Right now, our plate is full for Q3, but if this is hurting a lot of people, we can consider prioritizing it for Q4."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/313710963",
    "html_url": "https://github.com/grpc/grpc/issues/11704#issuecomment-313710963",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11704",
    "id": 313710963,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzcxMDk2Mw==",
    "user": {
      "login": "ola-rozenfeld",
      "id": 25823928,
      "node_id": "MDQ6VXNlcjI1ODIzOTI4",
      "avatar_url": "https://avatars1.githubusercontent.com/u/25823928?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ola-rozenfeld",
      "html_url": "https://github.com/ola-rozenfeld",
      "followers_url": "https://api.github.com/users/ola-rozenfeld/followers",
      "following_url": "https://api.github.com/users/ola-rozenfeld/following{/other_user}",
      "gists_url": "https://api.github.com/users/ola-rozenfeld/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ola-rozenfeld/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ola-rozenfeld/subscriptions",
      "organizations_url": "https://api.github.com/users/ola-rozenfeld/orgs",
      "repos_url": "https://api.github.com/users/ola-rozenfeld/repos",
      "events_url": "https://api.github.com/users/ola-rozenfeld/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ola-rozenfeld/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-07T15:16:35Z",
    "updated_at": "2017-07-07T15:16:35Z",
    "author_association": "NONE",
    "body": "So if I understand correctly, even using a load balancer such as RoundRobinLoadBalancerFactory might not eliminate our problem, even though it will likely help (because we will have more connections, it will be less likely for us to hit the SETTINGS_MAX_CONCURRENT_STREAMS limit on a single one). Right?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/313720987",
    "html_url": "https://github.com/grpc/grpc/issues/11704#issuecomment-313720987",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11704",
    "id": 313720987,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzcyMDk4Nw==",
    "user": {
      "login": "markdroth",
      "id": 18664614,
      "node_id": "MDQ6VXNlcjE4NjY0NjE0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18664614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markdroth",
      "html_url": "https://github.com/markdroth",
      "followers_url": "https://api.github.com/users/markdroth/followers",
      "following_url": "https://api.github.com/users/markdroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/markdroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markdroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markdroth/subscriptions",
      "organizations_url": "https://api.github.com/users/markdroth/orgs",
      "repos_url": "https://api.github.com/users/markdroth/repos",
      "events_url": "https://api.github.com/users/markdroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markdroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-07T15:53:53Z",
    "updated_at": "2017-07-07T16:14:07Z",
    "author_association": "MEMBER",
    "body": "Yes, but only if your server name resolves to multiple IP addresses.  If your server name only resolves to one IP address, then the client will only use a single connection, regardless of which load-balancing policy you choose.\r\n\r\ngRPC's load-balancing mechanism is intended for balancing load across multiple backend servers.  The basic idea is that we treat each IP address returned by the name resolver as a separate backend, and then we apply a particular LB policy to balance the load across those backends.  The workflow is described here:\r\n\r\nhttps://github.com/grpc/grpc/blob/master/doc/load-balancing.md#workflow\r\n\r\nThe default LB policy is pick_first, which iterates through the list of addresses returned by the resolver and picks the first one to which it can establish a connection.  It then sends all RPCs across that single connection.  So each client will wind up sending all of its RPCs to a single backend server, but if the name resolver returns the IP addresses in randomized order (which most DNS servers do), then different clients will pick different backend addresses.  If you have a large enough number of clients, and if each client sends about the same amount of load, this may be good enough to balance load across the backends, but if either of those conditions are not met, then it probably won't do a very good job.\r\n\r\nThe round_robin LB policy is better, although still somewhat naive.  It will attempt to establish connections to all addresses returned by the name resolver.  It will then send each subsequent RPC to each successive address in the list, wrapping back around to the beginning when it hits the end.  This does a better job than pick_first, since it can spread out the load when there are a small number of clients or different clients sending RPCs at different rates.  However, the reason I said that this is a naive algorithm is that it assumes that every RPC imposes the same amount of load on every server.  So if you have some RPCs that are a lot more expensive for the server to process than others, or if some of your servers are faster than others, then this is still not really good enough.\r\n\r\nThe grpclb LB policy is the one that we intend to be the most extensible, although it's not yet fully implemented in open-source.  The idea is that there is a separate tier of look-aside load balancers that can receive load reports from the backend servers and intelligently decide where to send the load in a more dynamic way.  The gRPC client will contact the load balancer to find out where to send each RPC.\r\n\r\nAnyway, as you can see, all of the above is designed around the idea of balancing load across multiple backends.  However, from what @carl-mastrangelo described to me yesterday, it seems that your problem here is not actually about balancing the load on the backend servers themselves, but rather balancing the number of open streams across multiple connections.  We don't support a mechanism for doing this yet.  But in the interim, if you do have multiple server addresses, then using the round_robin LB policy will probably alleviate some of the problems you're seeing by spreading the load across multiple connections.\r\n\r\nI hope this explanation is helpful (and I apologize if I wound up explaining things that you already understood).  Please let me know if you have any other questions."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/313725484",
    "html_url": "https://github.com/grpc/grpc/issues/11704#issuecomment-313725484",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11704",
    "id": 313725484,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzcyNTQ4NA==",
    "user": {
      "login": "ola-rozenfeld",
      "id": 25823928,
      "node_id": "MDQ6VXNlcjI1ODIzOTI4",
      "avatar_url": "https://avatars1.githubusercontent.com/u/25823928?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ola-rozenfeld",
      "html_url": "https://github.com/ola-rozenfeld",
      "followers_url": "https://api.github.com/users/ola-rozenfeld/followers",
      "following_url": "https://api.github.com/users/ola-rozenfeld/following{/other_user}",
      "gists_url": "https://api.github.com/users/ola-rozenfeld/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ola-rozenfeld/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ola-rozenfeld/subscriptions",
      "organizations_url": "https://api.github.com/users/ola-rozenfeld/orgs",
      "repos_url": "https://api.github.com/users/ola-rozenfeld/repos",
      "events_url": "https://api.github.com/users/ola-rozenfeld/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ola-rozenfeld/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-07T16:11:09Z",
    "updated_at": "2017-07-07T16:11:09Z",
    "author_association": "NONE",
    "body": "Yes, this is very helpful, thank you!"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/395924701",
    "html_url": "https://github.com/grpc/grpc/issues/11704#issuecomment-395924701",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11704",
    "id": 395924701,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTkyNDcwMQ==",
    "user": {
      "login": "dgquintas",
      "id": 120217,
      "node_id": "MDQ6VXNlcjEyMDIxNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/120217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgquintas",
      "html_url": "https://github.com/dgquintas",
      "followers_url": "https://api.github.com/users/dgquintas/followers",
      "following_url": "https://api.github.com/users/dgquintas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgquintas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgquintas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgquintas/subscriptions",
      "organizations_url": "https://api.github.com/users/dgquintas/orgs",
      "repos_url": "https://api.github.com/users/dgquintas/repos",
      "events_url": "https://api.github.com/users/dgquintas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgquintas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-09T00:21:36Z",
    "updated_at": "2018-06-09T00:21:36Z",
    "author_association": "NONE",
    "body": "This issue seems resolved. Closing. "
  }
]
