[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/230001514",
    "html_url": "https://github.com/grpc/grpc/issues/7200#issuecomment-230001514",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7200",
    "id": 230001514,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMDAwMTUxNA==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-01T17:18:42Z",
    "updated_at": "2016-07-01T17:18:42Z",
    "author_association": "MEMBER",
    "body": "It seems like the problem here is with protobuf serialization. I would suggest posting an issue at https://github.com/google/protobuf\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/230068654",
    "html_url": "https://github.com/grpc/grpc/issues/7200#issuecomment-230068654",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7200",
    "id": 230068654,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMDA2ODY1NA==",
    "user": {
      "login": "pmullaney",
      "id": 520134,
      "node_id": "MDQ6VXNlcjUyMDEzNA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/520134?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pmullaney",
      "html_url": "https://github.com/pmullaney",
      "followers_url": "https://api.github.com/users/pmullaney/followers",
      "following_url": "https://api.github.com/users/pmullaney/following{/other_user}",
      "gists_url": "https://api.github.com/users/pmullaney/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pmullaney/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pmullaney/subscriptions",
      "organizations_url": "https://api.github.com/users/pmullaney/orgs",
      "repos_url": "https://api.github.com/users/pmullaney/repos",
      "events_url": "https://api.github.com/users/pmullaney/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pmullaney/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-01T23:38:32Z",
    "updated_at": "2016-07-01T23:38:32Z",
    "author_association": "NONE",
    "body": "Thanks - I will do that. The reason I posted here first is that encoding the messages via .encode() seems to work fine so perhaps its related to grpc method of using protobufjs.\n\\\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/230548144",
    "html_url": "https://github.com/grpc/grpc/issues/7200#issuecomment-230548144",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7200",
    "id": 230548144,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMDU0ODE0NA==",
    "user": {
      "login": "pmullaney",
      "id": 520134,
      "node_id": "MDQ6VXNlcjUyMDEzNA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/520134?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pmullaney",
      "html_url": "https://github.com/pmullaney",
      "followers_url": "https://api.github.com/users/pmullaney/followers",
      "following_url": "https://api.github.com/users/pmullaney/following{/other_user}",
      "gists_url": "https://api.github.com/users/pmullaney/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pmullaney/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pmullaney/subscriptions",
      "organizations_url": "https://api.github.com/users/pmullaney/orgs",
      "repos_url": "https://api.github.com/users/pmullaney/repos",
      "events_url": "https://api.github.com/users/pmullaney/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pmullaney/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-05T17:38:20Z",
    "updated_at": "2016-07-05T17:38:20Z",
    "author_association": "NONE",
    "body": "Here is the example showing that protobuf seems to handle oneof properly.\n\n[greeter_client.js.txt](https://github.com/grpc/grpc/files/348296/greeter_client.js.txt)\n\nI think this is a valid grpc problem.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/230833001",
    "html_url": "https://github.com/grpc/grpc/issues/7200#issuecomment-230833001",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7200",
    "id": 230833001,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMDgzMzAwMQ==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-06T16:45:30Z",
    "updated_at": "2016-07-06T16:45:30Z",
    "author_association": "MEMBER",
    "body": "It's interesting that the message's `.encode()` method works. What happens if you call the `.serializeBinary()` method? That's the one that gRPC uses in the serializer.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/233095773",
    "html_url": "https://github.com/grpc/grpc/issues/7200#issuecomment-233095773",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7200",
    "id": 233095773,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzA5NTc3Mw==",
    "user": {
      "login": "angrbrd",
      "id": 14612437,
      "node_id": "MDQ6VXNlcjE0NjEyNDM3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/14612437?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/angrbrd",
      "html_url": "https://github.com/angrbrd",
      "followers_url": "https://api.github.com/users/angrbrd/followers",
      "following_url": "https://api.github.com/users/angrbrd/following{/other_user}",
      "gists_url": "https://api.github.com/users/angrbrd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/angrbrd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/angrbrd/subscriptions",
      "organizations_url": "https://api.github.com/users/angrbrd/orgs",
      "repos_url": "https://api.github.com/users/angrbrd/repos",
      "events_url": "https://api.github.com/users/angrbrd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/angrbrd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-16T00:07:57Z",
    "updated_at": "2016-07-16T00:07:57Z",
    "author_association": "NONE",
    "body": "I am seeing the same issue as @pmullaney. When I try to use the `.serializeBinary()` method on the message I get:\n\n```\n  var ahSerialized = msg.serializeBinary();\n                         ^\nTypeError: msg.serializeBinary is not a function\n```\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/233366324",
    "html_url": "https://github.com/grpc/grpc/issues/7200#issuecomment-233366324",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7200",
    "id": 233366324,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzM2NjMyNA==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-18T15:37:26Z",
    "updated_at": "2016-07-18T15:37:26Z",
    "author_association": "MEMBER",
    "body": "@angrbrd Are you sure that the `msg` object you have is a protobuf message object of the type that the `google-protobuf` library exposes?\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/233391561",
    "html_url": "https://github.com/grpc/grpc/issues/7200#issuecomment-233391561",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7200",
    "id": 233391561,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzM5MTU2MQ==",
    "user": {
      "login": "pmullaney",
      "id": 520134,
      "node_id": "MDQ6VXNlcjUyMDEzNA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/520134?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pmullaney",
      "html_url": "https://github.com/pmullaney",
      "followers_url": "https://api.github.com/users/pmullaney/followers",
      "following_url": "https://api.github.com/users/pmullaney/following{/other_user}",
      "gists_url": "https://api.github.com/users/pmullaney/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pmullaney/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pmullaney/subscriptions",
      "organizations_url": "https://api.github.com/users/pmullaney/orgs",
      "repos_url": "https://api.github.com/users/pmullaney/repos",
      "events_url": "https://api.github.com/users/pmullaney/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pmullaney/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-18T17:03:51Z",
    "updated_at": "2016-07-18T17:03:51Z",
    "author_association": "NONE",
    "body": "The crash I am seeing is in MessagePrototype.set. Here's the snippet causing it:\n\nvar field = T._fieldsByName[keyOrObj];\n                    if (!noAssert) {\n                       if (!field)\n                            throw Error(this+\"#\"+keyOrObj+\" is not a field: undefined\");\n\nThe problem is either the oneof field should be mapped in the T._fieldsByName or there should be appropriate logic to avoid and skip the checks inside the !noAssert conditional. I hacked a version to avoid the checks and it works. Unfortunately, I can't seem to find a decent way to check that the field is a oneof.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/233394858",
    "html_url": "https://github.com/grpc/grpc/issues/7200#issuecomment-233394858",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7200",
    "id": 233394858,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzM5NDg1OA==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-18T17:15:26Z",
    "updated_at": "2016-07-18T17:15:26Z",
    "author_association": "MEMBER",
    "body": "Are you seeing that crash when you call the message's `.serializeBinary()` method? If so, you should bring this issue to the [google/protobuf](https://github.com/google/protobuf) repo.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/233399615",
    "html_url": "https://github.com/grpc/grpc/issues/7200#issuecomment-233399615",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7200",
    "id": 233399615,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzM5OTYxNQ==",
    "user": {
      "login": "pmullaney",
      "id": 520134,
      "node_id": "MDQ6VXNlcjUyMDEzNA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/520134?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pmullaney",
      "html_url": "https://github.com/pmullaney",
      "followers_url": "https://api.github.com/users/pmullaney/followers",
      "following_url": "https://api.github.com/users/pmullaney/following{/other_user}",
      "gists_url": "https://api.github.com/users/pmullaney/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pmullaney/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pmullaney/subscriptions",
      "organizations_url": "https://api.github.com/users/pmullaney/orgs",
      "repos_url": "https://api.github.com/users/pmullaney/repos",
      "events_url": "https://api.github.com/users/pmullaney/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pmullaney/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-18T17:32:40Z",
    "updated_at": "2016-07-18T17:35:37Z",
    "author_association": "NONE",
    "body": "I'm having the same issues trying that as angrbrd, generally unfamiliar with using the serializeBinary and haven't been able to find a simple example of using it. Does it require me to statically generate the grpc code? I have opened an issue on google/protobuf in any case but it has received no feedback.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/233407412",
    "html_url": "https://github.com/grpc/grpc/issues/7200#issuecomment-233407412",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7200",
    "id": 233407412,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzQwNzQxMg==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-18T17:59:46Z",
    "updated_at": "2016-07-18T17:59:46Z",
    "author_association": "MEMBER",
    "body": "I just realized that I missed something when I originally read your example code. You are using `grpc.load`, which means that you are using the built-in Protobuf.js code generation. But that also means that you don't need to (and shouldn't) explicitly construct message objects. You should just create regular objects with the right structure. For example, you can do\n\n``` js\nvar h = {a: {foo: user}};\nvar bh = {b: {bar: user}};\n```\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/233412378",
    "html_url": "https://github.com/grpc/grpc/issues/7200#issuecomment-233412378",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7200",
    "id": 233412378,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzQxMjM3OA==",
    "user": {
      "login": "pmullaney",
      "id": 520134,
      "node_id": "MDQ6VXNlcjUyMDEzNA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/520134?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pmullaney",
      "html_url": "https://github.com/pmullaney",
      "followers_url": "https://api.github.com/users/pmullaney/followers",
      "following_url": "https://api.github.com/users/pmullaney/following{/other_user}",
      "gists_url": "https://api.github.com/users/pmullaney/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pmullaney/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pmullaney/subscriptions",
      "organizations_url": "https://api.github.com/users/pmullaney/orgs",
      "repos_url": "https://api.github.com/users/pmullaney/repos",
      "events_url": "https://api.github.com/users/pmullaney/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pmullaney/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-18T18:16:49Z",
    "updated_at": "2016-07-18T18:16:49Z",
    "author_association": "NONE",
    "body": "I have tried that as well and it still crashes - will post that crash next.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/233422168",
    "html_url": "https://github.com/grpc/grpc/issues/7200#issuecomment-233422168",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7200",
    "id": 233422168,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzQyMjE2OA==",
    "user": {
      "login": "angrbrd",
      "id": 14612437,
      "node_id": "MDQ6VXNlcjE0NjEyNDM3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/14612437?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/angrbrd",
      "html_url": "https://github.com/angrbrd",
      "followers_url": "https://api.github.com/users/angrbrd/followers",
      "following_url": "https://api.github.com/users/angrbrd/following{/other_user}",
      "gists_url": "https://api.github.com/users/angrbrd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/angrbrd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/angrbrd/subscriptions",
      "organizations_url": "https://api.github.com/users/angrbrd/orgs",
      "repos_url": "https://api.github.com/users/angrbrd/repos",
      "events_url": "https://api.github.com/users/angrbrd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/angrbrd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-18T18:50:10Z",
    "updated_at": "2016-07-18T19:18:06Z",
    "author_association": "NONE",
    "body": "Hi @murgatroid99 \n\nThanks for your response. I am using the `.serializeBinary()` method on a protobuf message object. And when I do so, this is the crash that I observe. I am attaching both server and client code here as well as the .proto file.\n\n[helloworld2.proto.txt](https://github.com/grpc/grpc/files/369863/helloworld2.proto.txt)\n[greeter_client_v2.js.txt](https://github.com/grpc/grpc/files/369864/greeter_client_v2.js.txt)\n[greeter_server_v2.js.txt](https://github.com/grpc/grpc/files/369914/greeter_server_v2.js.txt)\n\n```\nInitializing gRPC client...\nempty request A = {\"alt\":null,\"a\":null,\"b\":null}\nmsgA = {\"foo\":\"ANGRBRD\"}\nfilled request A = {\"alt\":\"a\",\"a\":{\"foo\":\"ANGRBRD\"},\"b\":null}\nrequestADecoded = {\"alt\":\"a\",\"a\":{\"foo\":\"ANGRBRD\"},\"b\":null}\n/Users/anya/dev/node/grpc/examples/node/dynamic_codegen/greeter_client_v2.js:69\n  var requestASerialized = requestA.serializeBinary();\n                                    ^\n\nTypeError: requestA.serializeBinary is not a function\n    at main (/Users/anya/dev/node/grpc/examples/node/dynamic_codegen/greeter_client_v2.js:69:37)\n    at Object.<anonymous> (/Users/anya/dev/node/grpc/examples/node/dynamic_codegen/greeter_client_v2.js:113:1)\n    at Module._compile (module.js:409:26)\n    at Object.Module._extensions..js (module.js:416:10)\n    at Module.load (module.js:343:32)\n    at Function.Module._load (module.js:300:12)\n    at Function.Module.runMain (module.js:441:10)\n    at startup (node.js:139:18)\n    at node.js:968:3\n```\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/233423558",
    "html_url": "https://github.com/grpc/grpc/issues/7200#issuecomment-233423558",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7200",
    "id": 233423558,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzQyMzU1OA==",
    "user": {
      "login": "angrbrd",
      "id": 14612437,
      "node_id": "MDQ6VXNlcjE0NjEyNDM3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/14612437?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/angrbrd",
      "html_url": "https://github.com/angrbrd",
      "followers_url": "https://api.github.com/users/angrbrd/followers",
      "following_url": "https://api.github.com/users/angrbrd/following{/other_user}",
      "gists_url": "https://api.github.com/users/angrbrd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/angrbrd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/angrbrd/subscriptions",
      "organizations_url": "https://api.github.com/users/angrbrd/orgs",
      "repos_url": "https://api.github.com/users/angrbrd/repos",
      "events_url": "https://api.github.com/users/angrbrd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/angrbrd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-18T18:55:03Z",
    "updated_at": "2016-07-18T18:55:03Z",
    "author_association": "NONE",
    "body": "If I comment out lines 69 and 70 of my greeter_client_v2.js file (attached above), which removes the usage of `.serializeBinary()` on the protobuf message, I do receive the same crash as @pmullaney.\n\n```\nInitializing gRPC client...\nempty request A = {\"alt\":null,\"a\":null,\"b\":null}\nmsgA = {\"foo\":\"ANGRBRD\"}\nfilled request A = {\"alt\":\"a\",\"a\":{\"foo\":\"ANGRBRD\"},\"b\":null}\nrequestADecoded = {\"alt\":\"a\",\"a\":{\"foo\":\"ANGRBRD\"},\"b\":null}\n/Users/anya/dev/node/grpc/examples/node/node_modules/grpc/node_modules/protobufjs/dist/ProtoBuf.js:2440\n                            throw Error(this+\"#\"+keyOrObj+\" is not a field: undefined\");\n                            ^\n\nError: .helloworld2.HelloRequest#alt is not a field: undefined\n    at Error (native)\n    at MessagePrototype.set (/Users/anya/dev/node/grpc/examples/node/node_modules/grpc/node_modules/protobufjs/dist/ProtoBuf.js:2440:35)\n    at MessagePrototype.set (/Users/anya/dev/node/grpc/examples/node/node_modules/grpc/node_modules/protobufjs/dist/ProtoBuf.js:2434:38)\n    at Message (/Users/anya/dev/node/grpc/examples/node/node_modules/grpc/node_modules/protobufjs/dist/ProtoBuf.js:2363:34)\n    at serialize (/Users/anya/dev/node/grpc/examples/node/node_modules/grpc/src/node/src/common.js:87:23)\n    at Client.makeUnaryRequest [as sayHello] (/Users/anya/dev/node/grpc/examples/node/node_modules/grpc/src/node/src/client.js:381:19)\n    at main (/Users/anya/dev/node/grpc/examples/node/dynamic_codegen/greeter_client_v2.js:77:10)\n    at Object.<anonymous> (/Users/anya/dev/node/grpc/examples/node/dynamic_codegen/greeter_client_v2.js:113:1)\n    at Module._compile (module.js:409:26)\n    at Object.Module._extensions..js (module.js:416:10)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/233425956",
    "html_url": "https://github.com/grpc/grpc/issues/7200#issuecomment-233425956",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7200",
    "id": 233425956,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzQyNTk1Ng==",
    "user": {
      "login": "angrbrd",
      "id": 14612437,
      "node_id": "MDQ6VXNlcjE0NjEyNDM3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/14612437?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/angrbrd",
      "html_url": "https://github.com/angrbrd",
      "followers_url": "https://api.github.com/users/angrbrd/followers",
      "following_url": "https://api.github.com/users/angrbrd/following{/other_user}",
      "gists_url": "https://api.github.com/users/angrbrd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/angrbrd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/angrbrd/subscriptions",
      "organizations_url": "https://api.github.com/users/angrbrd/orgs",
      "repos_url": "https://api.github.com/users/angrbrd/repos",
      "events_url": "https://api.github.com/users/angrbrd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/angrbrd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-18T19:03:40Z",
    "updated_at": "2016-07-18T19:55:31Z",
    "author_association": "NONE",
    "body": "PLEASE IGNORE THIS COMMENT... SEE BELOW.\n\nIf I instead follow the approach that you described here by constructing regular objects:\n\n```\nvar h = {a: {foo: user}};\nvar bh = {b: {bar: user}};\n```\n\nYou may find that code in my greeter_client_v2.js file (attached above). You can comment out for request A lines 55-70 and 77. And uncomment liens 73-74 and 78. Similarly, you can comment/uncomment the appropriate lines for request B lower in the file. You will observe that request A succeeds on request/response, but request B causes the following problem on the server side. It receives request type B, but is trying to parse for `foo`, which appears in request type A.\n\n```\nrequest={\"alt\":\"b\",\"a\":null,\"b\":{\"bar\":\"SUNSHINE\"}}\n/Users/anya/dev/node/grpc/examples/node/dynamic_codegen/greeter_server_v2.js:57\n  callback(null, {message: 'Hello ' + call.request.a.foo});\n                                                    ^\n\nTypeError: Cannot read property 'foo' of null\n    at Object.sayHello (/Users/anya/dev/node/grpc/examples/node/dynamic_codegen/greeter_server_v2.js:57:53)\n    at Object.wrapper [as func] (/Users/anya/dev/node/grpc/examples/node/node_modules/grpc/node_modules/lodash/index.js:3095:19)\n    at /Users/anya/dev/node/grpc/examples/node/node_modules/grpc/src/node/src/server.js:485:13\n```\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/233427620",
    "html_url": "https://github.com/grpc/grpc/issues/7200#issuecomment-233427620",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7200",
    "id": 233427620,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzQyNzYyMA==",
    "user": {
      "login": "angrbrd",
      "id": 14612437,
      "node_id": "MDQ6VXNlcjE0NjEyNDM3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/14612437?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/angrbrd",
      "html_url": "https://github.com/angrbrd",
      "followers_url": "https://api.github.com/users/angrbrd/followers",
      "following_url": "https://api.github.com/users/angrbrd/following{/other_user}",
      "gists_url": "https://api.github.com/users/angrbrd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/angrbrd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/angrbrd/subscriptions",
      "organizations_url": "https://api.github.com/users/angrbrd/orgs",
      "repos_url": "https://api.github.com/users/angrbrd/repos",
      "events_url": "https://api.github.com/users/angrbrd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/angrbrd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-18T19:09:39Z",
    "updated_at": "2016-07-18T19:10:13Z",
    "author_association": "NONE",
    "body": "Hold on... nevermind the very last comment regarding the usage of:\n\n```\nvar h = {a: {foo: user}};\nvar bh = {b: {bar: user}};\n```\n\nStill looking into that.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/233438113",
    "html_url": "https://github.com/grpc/grpc/issues/7200#issuecomment-233438113",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7200",
    "id": 233438113,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzQzODExMw==",
    "user": {
      "login": "angrbrd",
      "id": 14612437,
      "node_id": "MDQ6VXNlcjE0NjEyNDM3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/14612437?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/angrbrd",
      "html_url": "https://github.com/angrbrd",
      "followers_url": "https://api.github.com/users/angrbrd/followers",
      "following_url": "https://api.github.com/users/angrbrd/following{/other_user}",
      "gists_url": "https://api.github.com/users/angrbrd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/angrbrd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/angrbrd/subscriptions",
      "organizations_url": "https://api.github.com/users/angrbrd/orgs",
      "repos_url": "https://api.github.com/users/angrbrd/repos",
      "events_url": "https://api.github.com/users/angrbrd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/angrbrd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-18T19:49:45Z",
    "updated_at": "2016-07-18T19:49:45Z",
    "author_association": "NONE",
    "body": "@murgatroid99 The usage you described below does work for me. My code is below. Could you please clarify why this is the proper usage, as opposed to creating a protobuf message first and filling in the fields? I do not understand the difference.\n\n```\nvar h = {a: {foo: user}};\nvar bh = {b: {bar: user}};\n```\n\n```\n  //\n  // Construct a request\n  //\n\n  // Sample requests below\n  var requestATEST = {a: {foo: \"ANGRBRD\"}};\n  console.log(\"requestATEST = \" + JSON.stringify(requestATEST));\n\n  client.sayHello(requestATEST, function(err, response) {\n     console.log(\"Response received!\");\n     console.log('Greeting: %j', response);\n     console.log(\"\\n\\n\\n\");\n\n     //\n     // Construct another request\n     //\n\n     var requestBTEST = {b: {bar: \"SUNSHINE\"}};\n     console.log(\"requestBTEST = \" + JSON.stringify(requestBTEST));\n\n     client.sayHello(requestBTEST, function(err, response) {\n        console.log('Greeting:', response.message);\n     });\n  });\n```\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/233440749",
    "html_url": "https://github.com/grpc/grpc/issues/7200#issuecomment-233440749",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7200",
    "id": 233440749,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzQ0MDc0OQ==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-18T19:59:54Z",
    "updated_at": "2016-07-18T19:59:54Z",
    "author_association": "MEMBER",
    "body": "@angrbrd The \"dynamic codegen\" usage pattern, using `grpc.load` and Protobuf.js, was intended to be easy to use and familiar, so it uses regular JavaScript objects. That's just how the API is designed.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/233454963",
    "html_url": "https://github.com/grpc/grpc/issues/7200#issuecomment-233454963",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7200",
    "id": 233454963,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzQ1NDk2Mw==",
    "user": {
      "login": "pmullaney",
      "id": 520134,
      "node_id": "MDQ6VXNlcjUyMDEzNA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/520134?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pmullaney",
      "html_url": "https://github.com/pmullaney",
      "followers_url": "https://api.github.com/users/pmullaney/followers",
      "following_url": "https://api.github.com/users/pmullaney/following{/other_user}",
      "gists_url": "https://api.github.com/users/pmullaney/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pmullaney/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pmullaney/subscriptions",
      "organizations_url": "https://api.github.com/users/pmullaney/orgs",
      "repos_url": "https://api.github.com/users/pmullaney/repos",
      "events_url": "https://api.github.com/users/pmullaney/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pmullaney/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-18T20:52:18Z",
    "updated_at": "2016-07-18T20:52:18Z",
    "author_association": "NONE",
    "body": "@murgatroid99: Thanks for pointing out that using javascripts objects in the form above works. It seems more than odd though with the examples using actual messages that the form I originally used doesn't work. I suspect others will run into this.\nThere is also another problem worth mentioning and it is the reason I used the method of constructing the entire message(setting the oneof field). Consider the example proto in the attached file:\n[helloworld2.proto.txt](https://github.com/grpc/grpc/files/370107/helloworld2.proto.txt)\n\nWouldn't \"var requestATEST = {a: {foo: \"ANGRBRD\"}};\" be ambiguous as to the message to create?\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/233456272",
    "html_url": "https://github.com/grpc/grpc/issues/7200#issuecomment-233456272",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7200",
    "id": 233456272,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzQ1NjI3Mg==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-18T20:56:53Z",
    "updated_at": "2016-07-18T20:56:53Z",
    "author_association": "MEMBER",
    "body": "I'm not sure what examples you're referring to. The dynamic codegen examples don't use message objects, and the static codegen examples don't use `grpc.load`.\n\nAnd you are correct that that line of code alone isn't completely specified. But if you're passing that object to `sayHello`, then we know what message to create based on the signature of that method.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/233478742",
    "html_url": "https://github.com/grpc/grpc/issues/7200#issuecomment-233478742",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7200",
    "id": 233478742,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzQ3ODc0Mg==",
    "user": {
      "login": "pmullaney",
      "id": 520134,
      "node_id": "MDQ6VXNlcjUyMDEzNA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/520134?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pmullaney",
      "html_url": "https://github.com/pmullaney",
      "followers_url": "https://api.github.com/users/pmullaney/followers",
      "following_url": "https://api.github.com/users/pmullaney/following{/other_user}",
      "gists_url": "https://api.github.com/users/pmullaney/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pmullaney/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pmullaney/subscriptions",
      "organizations_url": "https://api.github.com/users/pmullaney/orgs",
      "repos_url": "https://api.github.com/users/pmullaney/repos",
      "events_url": "https://api.github.com/users/pmullaney/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pmullaney/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-18T22:30:28Z",
    "updated_at": "2016-07-18T22:30:28Z",
    "author_association": "NONE",
    "body": "@murgatroid99: Sorry you're right, the examples in the dynamic codegen don't use message objects. And thanks for the clarification on the how the ambiguity is resolved via the method signature. We may post some examples here run into the same confusion.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/233489038",
    "html_url": "https://github.com/grpc/grpc/issues/7200#issuecomment-233489038",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7200",
    "id": 233489038,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzQ4OTAzOA==",
    "user": {
      "login": "angrbrd",
      "id": 14612437,
      "node_id": "MDQ6VXNlcjE0NjEyNDM3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/14612437?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/angrbrd",
      "html_url": "https://github.com/angrbrd",
      "followers_url": "https://api.github.com/users/angrbrd/followers",
      "following_url": "https://api.github.com/users/angrbrd/following{/other_user}",
      "gists_url": "https://api.github.com/users/angrbrd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/angrbrd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/angrbrd/subscriptions",
      "organizations_url": "https://api.github.com/users/angrbrd/orgs",
      "repos_url": "https://api.github.com/users/angrbrd/repos",
      "events_url": "https://api.github.com/users/angrbrd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/angrbrd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-18T23:26:35Z",
    "updated_at": "2016-07-18T23:27:33Z",
    "author_association": "NONE",
    "body": "Hi @murgatroid99 Thanks a lot for your help with these explanations, that makes much more sense now. Specifically, the point on the \"dynamic codegen\" pattern which uses `grpc.load` and regular JavaScript objects. As opposed to the \"static codegen\" pattern which does not use `grpc.load` and instead uses protobuf message objects. \n\nI have modified my files to have a usage example of each of the scenarios below. I am attaching here. Or if you think there's a better way to share these examples that might help others with the same issue? I could push them as .proto and .js to my own repo if that would help others. Just let me know.\n\n[helloworld2.proto.txt](https://github.com/grpc/grpc/files/370338/helloworld2.proto.txt)\n[greeter_client_v3.js.txt](https://github.com/grpc/grpc/files/370340/greeter_client_v3.js.txt)\n[greeter_server_v3.js.txt](https://github.com/grpc/grpc/files/370341/greeter_server_v3.js.txt)\n\n```\nmessage A {\n    string foo = 1;\n}\nmessage B {\n    string bar = 1;\n}\nmessage C {\n    string baz = 1;\n}\nmessage HelloRequest {\n    oneof alt {\n        A a = 1;\n        B b = 2;\n    }\n}\nmessage HelloRequest2 {\n    oneof alt {\n        A a = 1;\n        C c = 2;\n    }\n}\nmessage HelloRequest3 {\n   C c = 1;\n   oneof alt {\n       A a = 2;\n       B b = 3;\n   }\n}\n```\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/233987194",
    "html_url": "https://github.com/grpc/grpc/issues/7200#issuecomment-233987194",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7200",
    "id": 233987194,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzk4NzE5NA==",
    "user": {
      "login": "pmullaney",
      "id": 520134,
      "node_id": "MDQ6VXNlcjUyMDEzNA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/520134?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pmullaney",
      "html_url": "https://github.com/pmullaney",
      "followers_url": "https://api.github.com/users/pmullaney/followers",
      "following_url": "https://api.github.com/users/pmullaney/following{/other_user}",
      "gists_url": "https://api.github.com/users/pmullaney/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pmullaney/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pmullaney/subscriptions",
      "organizations_url": "https://api.github.com/users/pmullaney/orgs",
      "repos_url": "https://api.github.com/users/pmullaney/repos",
      "events_url": "https://api.github.com/users/pmullaney/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pmullaney/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-20T15:33:49Z",
    "updated_at": "2016-07-20T15:33:49Z",
    "author_association": "NONE",
    "body": "@murgatroid99 : thanks for the help. I have add another case for streaming messages containing oneof to the example above that I will include here for completeness and close the issue.\n\n[greeter_client_v3.js.txt](https://github.com/grpc/grpc/files/374072/greeter_client_v3.js.txt)\n[greeter_server_v3.js.txt](https://github.com/grpc/grpc/files/374073/greeter_server_v3.js.txt)\n[helloworld2.proto.txt](https://github.com/grpc/grpc/files/374074/helloworld2.proto.txt)\n"
  }
]
