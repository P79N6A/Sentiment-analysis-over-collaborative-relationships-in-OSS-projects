[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/423695215",
    "html_url": "https://github.com/grpc/grpc/issues/15764#issuecomment-423695215",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15764",
    "id": 423695215,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzY5NTIxNQ==",
    "user": {
      "login": "tudor",
      "id": 125148,
      "node_id": "MDQ6VXNlcjEyNTE0OA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/125148?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tudor",
      "html_url": "https://github.com/tudor",
      "followers_url": "https://api.github.com/users/tudor/followers",
      "following_url": "https://api.github.com/users/tudor/following{/other_user}",
      "gists_url": "https://api.github.com/users/tudor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tudor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tudor/subscriptions",
      "organizations_url": "https://api.github.com/users/tudor/orgs",
      "repos_url": "https://api.github.com/users/tudor/repos",
      "events_url": "https://api.github.com/users/tudor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tudor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-21T23:21:18Z",
    "updated_at": "2018-09-21T23:21:18Z",
    "author_association": "NONE",
    "body": "For C++, if I want to use custom serialization (actually specialize `SerializationTraits` for my request / response classes), I don't really need generic methods. *Most* (perhaps all?) of the generated code would just work as is! Services, stubs, sync/async, streaming-- everything would just work.\r\n\r\nThe `protoc` compiler plugin doesn't need to see the proto descriptors for the request / response objects either.\r\n\r\nThe only hassle is that `protoc` errors out when it encounters unknown types in a method definition.\r\nI can't say `rpc Foo(FooReq) returns (FooResp)` unless `FooReq` and `FooResp` are defined.\r\n\r\nIf we could optionally make `protoc` allow unknown types in a method declaration, we could do custom serialization with very little hassle. Yes, I'd have to make sure that the appropriate class declarations are `#include`d everywhere, but that seems like a small price to pay."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/461070250",
    "html_url": "https://github.com/grpc/grpc/issues/15764#issuecomment-461070250",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15764",
    "id": 461070250,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTA3MDI1MA==",
    "user": {
      "login": "ncteisen",
      "id": 6148140,
      "node_id": "MDQ6VXNlcjYxNDgxNDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6148140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ncteisen",
      "html_url": "https://github.com/ncteisen",
      "followers_url": "https://api.github.com/users/ncteisen/followers",
      "following_url": "https://api.github.com/users/ncteisen/following{/other_user}",
      "gists_url": "https://api.github.com/users/ncteisen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ncteisen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ncteisen/subscriptions",
      "organizations_url": "https://api.github.com/users/ncteisen/orgs",
      "repos_url": "https://api.github.com/users/ncteisen/repos",
      "events_url": "https://api.github.com/users/ncteisen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ncteisen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-06T15:42:31Z",
    "updated_at": "2019-02-06T15:42:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "Redirected to @vjpai in case you continue the work for unbalanced raw API."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/463242621",
    "html_url": "https://github.com/grpc/grpc/issues/15764#issuecomment-463242621",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/15764",
    "id": 463242621,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MzI0MjYyMQ==",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-13T15:29:18Z",
    "updated_at": "2019-02-13T15:29:18Z",
    "author_association": "NONE",
    "body": "We recently had the requirement of doing parsing-by-hand of a protocol buffer to avoid unnecessary copying of a binary payload, while still allowing clients to read the protobuf without any memory optimizations. \r\n\r\nIt's a bit of a gross hack since the serde path needs to be specialized before even the generated gRPC service is compiled:\r\n\r\nhttps://github.com/apache/arrow/pull/3633"
  }
]
