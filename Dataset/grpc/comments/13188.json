[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/340479829",
    "html_url": "https://github.com/grpc/grpc/pull/13188#issuecomment-340479829",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13188",
    "id": 340479829,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDQ3OTgyOQ==",
    "user": {
      "login": "thelinuxfoundation",
      "id": 4450729,
      "node_id": "MDQ6VXNlcjQ0NTA3Mjk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4450729?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thelinuxfoundation",
      "html_url": "https://github.com/thelinuxfoundation",
      "followers_url": "https://api.github.com/users/thelinuxfoundation/followers",
      "following_url": "https://api.github.com/users/thelinuxfoundation/following{/other_user}",
      "gists_url": "https://api.github.com/users/thelinuxfoundation/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thelinuxfoundation/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thelinuxfoundation/subscriptions",
      "organizations_url": "https://api.github.com/users/thelinuxfoundation/orgs",
      "repos_url": "https://api.github.com/users/thelinuxfoundation/repos",
      "events_url": "https://api.github.com/users/thelinuxfoundation/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thelinuxfoundation/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-30T15:26:08Z",
    "updated_at": "2017-10-30T15:26:08Z",
    "author_association": "NONE",
    "body": "Thank you for your pull request. Before we can look at your contribution, we need to ensure all contributors are covered by a Contributor License Agreement.\n\nAfter the following items are addressed, please respond with a new comment here, and the automated system will re-verify.\n\n* User @cauthu isn't covered by a CLA. They will need to complete the form at https://identity.linuxfoundation.org/projects/cncf\n\n_Regards,\nThe Linux Foundation CLA GitHub bot_\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/340640295",
    "html_url": "https://github.com/grpc/grpc/pull/13188#issuecomment-340640295",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13188",
    "id": 340640295,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDY0MDI5NQ==",
    "user": {
      "login": "cauthu",
      "id": 1170852,
      "node_id": "MDQ6VXNlcjExNzA4NTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1170852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cauthu",
      "html_url": "https://github.com/cauthu",
      "followers_url": "https://api.github.com/users/cauthu/followers",
      "following_url": "https://api.github.com/users/cauthu/following{/other_user}",
      "gists_url": "https://api.github.com/users/cauthu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cauthu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cauthu/subscriptions",
      "organizations_url": "https://api.github.com/users/cauthu/orgs",
      "repos_url": "https://api.github.com/users/cauthu/repos",
      "events_url": "https://api.github.com/users/cauthu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cauthu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-31T02:20:56Z",
    "updated_at": "2017-10-31T02:20:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "high-level description of the new C-core api:\r\n\r\none has two options to create server credentials:\r\n1) by specifying a fixed certificate config, or\r\n2) by specifying a certificate config fetch callback that will be called during server initialization and subsequently on every new client connection, and which should return new certificate config or \"unchanged.\"\r\n\r\nspecifically: one creates a `grpc_ssl_server_credentials_options *` by using either:\r\n\r\n1. `grpc_ssl_server_credentials_create_options_using_config()`\r\n1. `grpc_ssl_server_credentials_create_options_using_config_fetcher()`\r\n\r\nthen one passes the options object to `grpc_ssl_server_credentials_create_with_options()` and then, as before, passes the credentials object to `add_secure_port()`.\r\n\r\nsince the fetcher case (2) is key for server cert reload, i prefer to focus on it here in this PR and leave support for (1) for a future PR."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/340847552",
    "html_url": "https://github.com/grpc/grpc/pull/13188#issuecomment-340847552",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13188",
    "id": 340847552,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDg0NzU1Mg==",
    "user": {
      "login": "cauthu",
      "id": 1170852,
      "node_id": "MDQ6VXNlcjExNzA4NTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1170852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cauthu",
      "html_url": "https://github.com/cauthu",
      "followers_url": "https://api.github.com/users/cauthu/followers",
      "following_url": "https://api.github.com/users/cauthu/following{/other_user}",
      "gists_url": "https://api.github.com/users/cauthu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cauthu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cauthu/subscriptions",
      "organizations_url": "https://api.github.com/users/cauthu/orgs",
      "repos_url": "https://api.github.com/users/cauthu/repos",
      "events_url": "https://api.github.com/users/cauthu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cauthu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-31T17:53:01Z",
    "updated_at": "2017-10-31T17:53:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "@nathanielmanistaatgoogle i've updated the tests to address most of your earlier feedback.\r\n\r\ni do have a question: in the tests, i would like to check more specific reason of the connection failure: i.e., whether (a) client rejects server, or (b) server rejects client. i used to check for (a) with\r\n```\r\n        # this assert is fragile, i.e., depends on how the core lib logs the error\r\n        # assert 'SSL_ERROR_SSL: error:1000007d:SSL routines:OPENSSL_internal:CERTIFICATE_VERIFY_FAILED' in stderr\r\n```\r\nwhen the tests were launching client processes. do you know how i can achieve the same with the new way i'm doing the tests?\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/341286177",
    "html_url": "https://github.com/grpc/grpc/pull/13188#issuecomment-341286177",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13188",
    "id": 341286177,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTI4NjE3Nw==",
    "user": {
      "login": "cauthu",
      "id": 1170852,
      "node_id": "MDQ6VXNlcjExNzA4NTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1170852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cauthu",
      "html_url": "https://github.com/cauthu",
      "followers_url": "https://api.github.com/users/cauthu/followers",
      "following_url": "https://api.github.com/users/cauthu/following{/other_user}",
      "gists_url": "https://api.github.com/users/cauthu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cauthu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cauthu/subscriptions",
      "organizations_url": "https://api.github.com/users/cauthu/orgs",
      "repos_url": "https://api.github.com/users/cauthu/repos",
      "events_url": "https://api.github.com/users/cauthu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cauthu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-02T00:50:52Z",
    "updated_at": "2017-11-02T00:50:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "i've addressed most of earlier feedback, except for these two, still waiting for your guidance:\r\n* https://github.com/grpc/grpc/pull/13188#discussion_r147771781\r\n* https://github.com/grpc/grpc/pull/13188#discussion_r148346796\r\n\r\nof course my recent commits might require further changes :)"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/341492803",
    "html_url": "https://github.com/grpc/grpc/pull/13188#issuecomment-341492803",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13188",
    "id": 341492803,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTQ5MjgwMw==",
    "user": {
      "login": "cauthu",
      "id": 1170852,
      "node_id": "MDQ6VXNlcjExNzA4NTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1170852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cauthu",
      "html_url": "https://github.com/cauthu",
      "followers_url": "https://api.github.com/users/cauthu/followers",
      "following_url": "https://api.github.com/users/cauthu/following{/other_user}",
      "gists_url": "https://api.github.com/users/cauthu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cauthu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cauthu/subscriptions",
      "organizations_url": "https://api.github.com/users/cauthu/orgs",
      "repos_url": "https://api.github.com/users/cauthu/repos",
      "events_url": "https://api.github.com/users/cauthu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cauthu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-02T17:11:50Z",
    "updated_at": "2017-11-02T17:11:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "> i've addressed most of earlier feedback, except for these two, still waiting for your guidance:\r\n>\r\n> #13188 (comment)\r\n> #13188 (comment)\r\n\r\n@nathanielmanistaatgoogle I've just fixed the 2nd one (test in `unit` depending on `interop.modules`), so at this time the remaining major issue is the single callback provided by the user that has to distinguish between being called during server initialization and on subsequent client connections.\r\nBecause the core lib calls back into the user's cert config fetcher without providing information about what the \"current config\" is, the user has two options:\r\n1. Always blindly return the current config according to its best knowledge (i.e., never returns `None`), by querying some other source for the cert material, such as on-disk files, and returning that.\r\nThis way, the config fetcher does not need to distinguish between the above two situations. The downside is, even if the cert has not actually changed, returning the cert config will cause the core lib to unnecessarily recreate internal SSL structures, etc. (though likely an insignificant cost compared to reading from disks).\r\n1. Keeps track of some state, e.g., timestamps, cert content, of \"the last time the core lib was updated with new config,\" etc. so that it can tell whether it can simply return `None` (if the core lib's current cert config is already up-to-date) or the latest config.\r\n```\r\nclass CertConfigFetcher():\r\n    def __init__(self):\r\n        self.ca_pem = None\r\n        self.cert_pem = None\r\n        # ...\r\n        self.cert_config = None\r\n        self._maybe_update_cert_config()\r\n\r\n    def _maybe_update_cert_config(self):\r\n        ca_pem = read_ca_pem()\r\n        cert_pem = read_cert_pem()\r\n        # ...\r\n        if self.ca_pem != ca_pem or self.cert_pem != cert_pem or ...:\r\n            self.cert_config = create_cert_config()\r\n\r\n    def __call__(self):\r\n        # self._maybe_update_cert_config() can be called here, or\r\n        # maybe not here but in some periodic fashion\r\n\r\n        ret = self.cert_config\r\n        self.cert_config = None # will return None until someone creates a new cert config\r\n        return ret\r\n\r\n###\r\nserver = grpc.server(...)\r\ncreds = grpc.ssl_server_credentials_with_cert_config_fetcher(CertConfigFetcher(), ...)\r\nserver.add_secure_port(..., creds)\r\n```\r\nThis `CertConfigFetcher` class here does not have to go out of its way to distinguish between the initialization call or subsequent calls on new client connections.\r\n\r\nWhat do you think? If you still want a different API, please let me know what it should be, and I'll be happy to implement it.\r\n\r\nThanks!"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/342340393",
    "html_url": "https://github.com/grpc/grpc/pull/13188#issuecomment-342340393",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13188",
    "id": 342340393,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MjM0MDM5Mw==",
    "user": {
      "login": "cauthu",
      "id": 1170852,
      "node_id": "MDQ6VXNlcjExNzA4NTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1170852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cauthu",
      "html_url": "https://github.com/cauthu",
      "followers_url": "https://api.github.com/users/cauthu/followers",
      "following_url": "https://api.github.com/users/cauthu/following{/other_user}",
      "gists_url": "https://api.github.com/users/cauthu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cauthu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cauthu/subscriptions",
      "organizations_url": "https://api.github.com/users/cauthu/orgs",
      "repos_url": "https://api.github.com/users/cauthu/repos",
      "events_url": "https://api.github.com/users/cauthu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cauthu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-07T01:00:54Z",
    "updated_at": "2017-11-07T01:00:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "@nathanielmanistaatgoogle please let me know what you think about https://github.com/grpc/grpc/pull/13188#issuecomment-341492803. Much appreciated :)"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/342359211",
    "html_url": "https://github.com/grpc/grpc/pull/13188#issuecomment-342359211",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13188",
    "id": 342359211,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MjM1OTIxMQ==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-07T02:50:20Z",
    "updated_at": "2017-11-07T02:50:20Z",
    "author_association": "MEMBER",
    "body": "(Thanks for your patience; tried to get this proper attention today but wasn't able to get to it. Tomorrow looks promising.)"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/342359483",
    "html_url": "https://github.com/grpc/grpc/pull/13188#issuecomment-342359483",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13188",
    "id": 342359483,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MjM1OTQ4Mw==",
    "user": {
      "login": "cauthu",
      "id": 1170852,
      "node_id": "MDQ6VXNlcjExNzA4NTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1170852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cauthu",
      "html_url": "https://github.com/cauthu",
      "followers_url": "https://api.github.com/users/cauthu/followers",
      "following_url": "https://api.github.com/users/cauthu/following{/other_user}",
      "gists_url": "https://api.github.com/users/cauthu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cauthu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cauthu/subscriptions",
      "organizations_url": "https://api.github.com/users/cauthu/orgs",
      "repos_url": "https://api.github.com/users/cauthu/repos",
      "events_url": "https://api.github.com/users/cauthu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cauthu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-07T02:52:16Z",
    "updated_at": "2017-11-07T02:52:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sounds good! Thanks!"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/342924015",
    "html_url": "https://github.com/grpc/grpc/pull/13188#issuecomment-342924015",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13188",
    "id": 342924015,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MjkyNDAxNQ==",
    "user": {
      "login": "cauthu",
      "id": 1170852,
      "node_id": "MDQ6VXNlcjExNzA4NTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1170852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cauthu",
      "html_url": "https://github.com/cauthu",
      "followers_url": "https://api.github.com/users/cauthu/followers",
      "following_url": "https://api.github.com/users/cauthu/following{/other_user}",
      "gists_url": "https://api.github.com/users/cauthu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cauthu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cauthu/subscriptions",
      "organizations_url": "https://api.github.com/users/cauthu/orgs",
      "repos_url": "https://api.github.com/users/cauthu/repos",
      "events_url": "https://api.github.com/users/cauthu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cauthu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-08T19:01:34Z",
    "updated_at": "2017-11-08T19:04:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "@nathanielmanistaatgoogle it is the latter, i.e., gRPC core calls the callback on _every new client_ connection and it is _asking_ the certificate fetcher to make the judgement.\r\n\r\nTherefore, (1) the certificate fetcher has to keep some state, in order to be efficient. (2) If it does not keep state, then it has to always query some other source (e.g., disk), for the keys/certs, and always return a new certificate config to the core, which is not efficient because, (a) always having to query that other source, and (b) causing the core to re-initialize SSL structures on every client connection. (a) and (b) can affect performance, but it's up to the application/user, depending on their usage scenario.\r\n\r\nWhat do you think?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/342999570",
    "html_url": "https://github.com/grpc/grpc/pull/13188#issuecomment-342999570",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13188",
    "id": 342999570,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Mjk5OTU3MA==",
    "user": {
      "login": "cauthu",
      "id": 1170852,
      "node_id": "MDQ6VXNlcjExNzA4NTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1170852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cauthu",
      "html_url": "https://github.com/cauthu",
      "followers_url": "https://api.github.com/users/cauthu/followers",
      "following_url": "https://api.github.com/users/cauthu/following{/other_user}",
      "gists_url": "https://api.github.com/users/cauthu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cauthu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cauthu/subscriptions",
      "organizations_url": "https://api.github.com/users/cauthu/orgs",
      "repos_url": "https://api.github.com/users/cauthu/repos",
      "events_url": "https://api.github.com/users/cauthu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cauthu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-08T23:45:06Z",
    "updated_at": "2017-11-08T23:45:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "@nathanielmanistaatgoogle I've made the change requested: use two config fetchers. It's a roughly work-in-progress; I want to push it out to get early feedback. I'll work on adding tests in the mean time. Please let me know. Thanks!"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/343366693",
    "html_url": "https://github.com/grpc/grpc/pull/13188#issuecomment-343366693",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13188",
    "id": 343366693,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzM2NjY5Mw==",
    "user": {
      "login": "cauthu",
      "id": 1170852,
      "node_id": "MDQ6VXNlcjExNzA4NTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1170852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cauthu",
      "html_url": "https://github.com/cauthu",
      "followers_url": "https://api.github.com/users/cauthu/followers",
      "following_url": "https://api.github.com/users/cauthu/following{/other_user}",
      "gists_url": "https://api.github.com/users/cauthu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cauthu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cauthu/subscriptions",
      "organizations_url": "https://api.github.com/users/cauthu/orgs",
      "repos_url": "https://api.github.com/users/cauthu/repos",
      "events_url": "https://api.github.com/users/cauthu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cauthu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-10T03:43:23Z",
    "updated_at": "2017-11-10T03:43:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "discussed with Nathaniel offline and we want Python API to ask for an initial cert config (NOT a fetcher) and a cert config fetcher. this way, Python API will insulate the user from having to provide the initial cert config via a fetcher, which is what C core API is."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/343368110",
    "html_url": "https://github.com/grpc/grpc/pull/13188#issuecomment-343368110",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13188",
    "id": 343368110,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzM2ODExMA==",
    "user": {
      "login": "cauthu",
      "id": 1170852,
      "node_id": "MDQ6VXNlcjExNzA4NTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1170852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cauthu",
      "html_url": "https://github.com/cauthu",
      "followers_url": "https://api.github.com/users/cauthu/followers",
      "following_url": "https://api.github.com/users/cauthu/following{/other_user}",
      "gists_url": "https://api.github.com/users/cauthu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cauthu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cauthu/subscriptions",
      "organizations_url": "https://api.github.com/users/cauthu/orgs",
      "repos_url": "https://api.github.com/users/cauthu/repos",
      "events_url": "https://api.github.com/users/cauthu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cauthu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-10T03:55:27Z",
    "updated_at": "2017-11-10T03:59:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "(A) roughly, the new proposed api is:\r\n```\r\nssl_server_credentials_dynamic_cert_config(initial_cert_config, cert_config_fetcher, require_client_auth=False)\r\n```\r\nwhere both `initial_cert_config` and `cert_config_fetcher` are required.\r\n\r\n(B) i was tempted to make it:\r\n```\r\nssl_server_credentials_cert_config(initial_cert_config, cert_config_fetcher=None, require_client_auth=False)\r\n```\r\ni.e., without specifying the `cert_config_fetcher`, then the server will just use the initial cert config throughout the server's lifetime (which is the current behavior).\r\n\r\nsuggestions solicited.\r\n\r\nif we go with (A), then we might want to introduce a second API like\r\n```\r\nssl_server_credentials_fixed_cert_config(cert_config, require_client_auth=False)\r\n```\r\nhowever, this should be a separate PR, so as not to hold up this PR :)"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/343545075",
    "html_url": "https://github.com/grpc/grpc/pull/13188#issuecomment-343545075",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13188",
    "id": 343545075,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzU0NTA3NQ==",
    "user": {
      "login": "cauthu",
      "id": 1170852,
      "node_id": "MDQ6VXNlcjExNzA4NTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1170852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cauthu",
      "html_url": "https://github.com/cauthu",
      "followers_url": "https://api.github.com/users/cauthu/followers",
      "following_url": "https://api.github.com/users/cauthu/following{/other_user}",
      "gists_url": "https://api.github.com/users/cauthu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cauthu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cauthu/subscriptions",
      "organizations_url": "https://api.github.com/users/cauthu/orgs",
      "repos_url": "https://api.github.com/users/cauthu/repos",
      "events_url": "https://api.github.com/users/cauthu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cauthu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-10T18:07:29Z",
    "updated_at": "2017-11-10T23:45:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "chatted with Nathaniel. the API is now OK. list of minor items to fix:\r\n* ~remove shell script in the tests~\r\n* ~DO the TODO in `credentials.pyx.xi`~ (have refactored the dup code into common functions)\r\n* ~squash into one commit~\r\n* run all python tests:\r\n```\r\nrun_test.py -l sanity # (this covers copyright, lint, yapf)\r\nrun_test.py -l python -r sanity\r\n```\r\n* ~move the test cert hierarchies into `unit/credentials/`, then move the test up to `unit/`~\r\n* ~reorder `ssl_server_certificate_config()` and `ssl_server_credentials_dynamic_cert_config()` in `__init__.py`~\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/343614100",
    "html_url": "https://github.com/grpc/grpc/pull/13188#issuecomment-343614100",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13188",
    "id": 343614100,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzYxNDEwMA==",
    "user": {
      "login": "thelinuxfoundation",
      "id": 4450729,
      "node_id": "MDQ6VXNlcjQ0NTA3Mjk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4450729?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thelinuxfoundation",
      "html_url": "https://github.com/thelinuxfoundation",
      "followers_url": "https://api.github.com/users/thelinuxfoundation/followers",
      "following_url": "https://api.github.com/users/thelinuxfoundation/following{/other_user}",
      "gists_url": "https://api.github.com/users/thelinuxfoundation/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thelinuxfoundation/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thelinuxfoundation/subscriptions",
      "organizations_url": "https://api.github.com/users/thelinuxfoundation/orgs",
      "repos_url": "https://api.github.com/users/thelinuxfoundation/repos",
      "events_url": "https://api.github.com/users/thelinuxfoundation/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thelinuxfoundation/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-10T23:29:51Z",
    "updated_at": "2017-11-10T23:29:51Z",
    "author_association": "NONE",
    "body": "Thank you for your pull request. Before we can look at your contribution, we need to ensure all contributors are covered by a Contributor License Agreement.\n\nAfter the following items are addressed, please respond with a new comment here, and the automated system will re-verify.\n\n* User @cauthu isn't covered by a CLA. They will need to complete the form at https://identity.linuxfoundation.org/projects/cncf\n\n_Regards,\nThe Linux Foundation CLA GitHub bot_\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/343617987",
    "html_url": "https://github.com/grpc/grpc/pull/13188#issuecomment-343617987",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13188",
    "id": 343617987,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzYxNzk4Nw==",
    "user": {
      "login": "cauthu",
      "id": 1170852,
      "node_id": "MDQ6VXNlcjExNzA4NTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1170852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cauthu",
      "html_url": "https://github.com/cauthu",
      "followers_url": "https://api.github.com/users/cauthu/followers",
      "following_url": "https://api.github.com/users/cauthu/following{/other_user}",
      "gists_url": "https://api.github.com/users/cauthu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cauthu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cauthu/subscriptions",
      "organizations_url": "https://api.github.com/users/cauthu/orgs",
      "repos_url": "https://api.github.com/users/cauthu/repos",
      "events_url": "https://api.github.com/users/cauthu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cauthu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-10T23:57:52Z",
    "updated_at": "2017-11-10T23:57:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "* sanity for python 2.7\r\n```\r\n$ ./tools/run_tests/run_tests.py -l python --compiler python2.7 -r sanity\r\nUnexpected error getting flaky tests: <type 'exceptions.ImportError'>\r\nPASSED: /home/cauthu/my-grpc-fork/tools/run_tests/helper_scripts/build_python.sh [time=26.7sec, retries=0:0]\r\n\r\nOmitting EPOLLEXCLUSIVE tests\r\n\r\n\r\n2017-11-10 23:56:45,534 detected port server running version 20\r\n2017-11-10 23:56:45,561 my port server is version 20\r\nSUCCESS: All tests passed\r\n$\r\n```\r\n\r\n* sanity for python 3.5 (i don't have 3.4 on my machine)\r\n```\r\n$ ./tools/run_tests/run_tests.py -l python --compiler python3.5 -r sanity\r\nUnexpected error getting flaky tests: <type 'exceptions.ImportError'>\r\nPASSED: /home/cauthu/my-grpc-fork/tools/run_tests/helper_scripts/build_python.sh [time=42.3sec, retries=0:0]\r\n\r\nOmitting EPOLLEXCLUSIVE tests\r\n\r\n\r\n2017-11-10 23:54:57,605 detected port server running version 20\r\n2017-11-10 23:54:57,633 my port server is version 20\r\nSUCCESS: All tests passed\r\n$\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/343618167",
    "html_url": "https://github.com/grpc/grpc/pull/13188#issuecomment-343618167",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13188",
    "id": 343618167,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzYxODE2Nw==",
    "user": {
      "login": "thelinuxfoundation",
      "id": 4450729,
      "node_id": "MDQ6VXNlcjQ0NTA3Mjk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4450729?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thelinuxfoundation",
      "html_url": "https://github.com/thelinuxfoundation",
      "followers_url": "https://api.github.com/users/thelinuxfoundation/followers",
      "following_url": "https://api.github.com/users/thelinuxfoundation/following{/other_user}",
      "gists_url": "https://api.github.com/users/thelinuxfoundation/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thelinuxfoundation/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thelinuxfoundation/subscriptions",
      "organizations_url": "https://api.github.com/users/thelinuxfoundation/orgs",
      "repos_url": "https://api.github.com/users/thelinuxfoundation/repos",
      "events_url": "https://api.github.com/users/thelinuxfoundation/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thelinuxfoundation/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-10T23:59:02Z",
    "updated_at": "2017-11-10T23:59:02Z",
    "author_association": "NONE",
    "body": "Thank you for your pull request. Before we can look at your contribution, we need to ensure all contributors are covered by a Contributor License Agreement.\n\nAfter the following items are addressed, please respond with a new comment here, and the automated system will re-verify.\n\n* User @cauthu isn't covered by a CLA. They will need to complete the form at https://identity.linuxfoundation.org/projects/cncf\n\n_Regards,\nThe Linux Foundation CLA GitHub bot_\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/343620063",
    "html_url": "https://github.com/grpc/grpc/pull/13188#issuecomment-343620063",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13188",
    "id": 343620063,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzYyMDA2Mw==",
    "user": {
      "login": "thelinuxfoundation",
      "id": 4450729,
      "node_id": "MDQ6VXNlcjQ0NTA3Mjk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4450729?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thelinuxfoundation",
      "html_url": "https://github.com/thelinuxfoundation",
      "followers_url": "https://api.github.com/users/thelinuxfoundation/followers",
      "following_url": "https://api.github.com/users/thelinuxfoundation/following{/other_user}",
      "gists_url": "https://api.github.com/users/thelinuxfoundation/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thelinuxfoundation/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thelinuxfoundation/subscriptions",
      "organizations_url": "https://api.github.com/users/thelinuxfoundation/orgs",
      "repos_url": "https://api.github.com/users/thelinuxfoundation/repos",
      "events_url": "https://api.github.com/users/thelinuxfoundation/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thelinuxfoundation/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-11T00:11:47Z",
    "updated_at": "2017-11-11T00:11:47Z",
    "author_association": "NONE",
    "body": "Thank you for your pull request. Before we can look at your contribution, we need to ensure all contributors are covered by a Contributor License Agreement.\n\nAfter the following items are addressed, please respond with a new comment here, and the automated system will re-verify.\n\n* User @cauthu isn't covered by a CLA. They will need to complete the form at https://identity.linuxfoundation.org/projects/cncf\n\n_Regards,\nThe Linux Foundation CLA GitHub bot_\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/343622202",
    "html_url": "https://github.com/grpc/grpc/pull/13188#issuecomment-343622202",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13188",
    "id": 343622202,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzYyMjIwMg==",
    "user": {
      "login": "cauthu",
      "id": 1170852,
      "node_id": "MDQ6VXNlcjExNzA4NTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1170852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cauthu",
      "html_url": "https://github.com/cauthu",
      "followers_url": "https://api.github.com/users/cauthu/followers",
      "following_url": "https://api.github.com/users/cauthu/following{/other_user}",
      "gists_url": "https://api.github.com/users/cauthu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cauthu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cauthu/subscriptions",
      "organizations_url": "https://api.github.com/users/cauthu/orgs",
      "repos_url": "https://api.github.com/users/cauthu/repos",
      "events_url": "https://api.github.com/users/cauthu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cauthu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-11T00:28:07Z",
    "updated_at": "2017-11-11T00:28:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "all python 2.7 tests:\r\n```\r\n$ ./tools/run_tests/run_tests.py -l python --compiler python2.7 \r\nUnexpected error getting flaky tests: <type 'exceptions.ImportError'>\r\nPASSED: /home/cauthu/my-grpc-fork/tools/run_tests/helper_scripts/build_python.sh [time=34.0sec, retries=0:0]\r\n\r\nOmitting EPOLLEXCLUSIVE tests\r\n\r\n\r\n2017-11-11 00:14:38,472 detected port server running version 20\r\n2017-11-11 00:14:38,499 my port server is version 20\r\nSUCCESS: All tests passed\r\n$ \r\n```\r\n\r\nall python 3.5 tests (i don't have python 3.4)\r\n```\r\n$ ./tools/run_tests/run_tests.py -l python --compiler python3.5\r\nUnexpected error getting flaky tests: <type 'exceptions.ImportError'>\r\nPASSED: /home/cauthu/my-grpc-fork/tools/run_tests/helper_scripts/build_python.sh [time=37.3sec, retries=0:0]\r\n\r\nOmitting EPOLLEXCLUSIVE tests\r\n\r\n\r\n2017-11-11 00:24:09,243 detected port server running version 20\r\n2017-11-11 00:24:09,271 my port server is version 20\r\nSUCCESS: All tests passed\r\n$ \r\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/343623438",
    "html_url": "https://github.com/grpc/grpc/pull/13188#issuecomment-343623438",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13188",
    "id": 343623438,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzYyMzQzOA==",
    "user": {
      "login": "thelinuxfoundation",
      "id": 4450729,
      "node_id": "MDQ6VXNlcjQ0NTA3Mjk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4450729?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thelinuxfoundation",
      "html_url": "https://github.com/thelinuxfoundation",
      "followers_url": "https://api.github.com/users/thelinuxfoundation/followers",
      "following_url": "https://api.github.com/users/thelinuxfoundation/following{/other_user}",
      "gists_url": "https://api.github.com/users/thelinuxfoundation/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thelinuxfoundation/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thelinuxfoundation/subscriptions",
      "organizations_url": "https://api.github.com/users/thelinuxfoundation/orgs",
      "repos_url": "https://api.github.com/users/thelinuxfoundation/repos",
      "events_url": "https://api.github.com/users/thelinuxfoundation/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thelinuxfoundation/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-11T00:37:21Z",
    "updated_at": "2017-11-11T00:37:21Z",
    "author_association": "NONE",
    "body": "Thank you for your pull request. Before we can look at your contribution, we need to ensure all contributors are covered by a Contributor License Agreement.\n\nAfter the following items are addressed, please respond with a new comment here, and the automated system will re-verify.\n\n* User @cauthu isn't covered by a CLA. They will need to complete the form at https://identity.linuxfoundation.org/projects/cncf\n\n_Regards,\nThe Linux Foundation CLA GitHub bot_\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/344057304",
    "html_url": "https://github.com/grpc/grpc/pull/13188#issuecomment-344057304",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13188",
    "id": 344057304,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDA1NzMwNA==",
    "user": {
      "login": "cauthu",
      "id": 1170852,
      "node_id": "MDQ6VXNlcjExNzA4NTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1170852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cauthu",
      "html_url": "https://github.com/cauthu",
      "followers_url": "https://api.github.com/users/cauthu/followers",
      "following_url": "https://api.github.com/users/cauthu/following{/other_user}",
      "gists_url": "https://api.github.com/users/cauthu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cauthu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cauthu/subscriptions",
      "organizations_url": "https://api.github.com/users/cauthu/orgs",
      "repos_url": "https://api.github.com/users/cauthu/repos",
      "events_url": "https://api.github.com/users/cauthu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cauthu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-13T21:04:19Z",
    "updated_at": "2017-11-13T21:04:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "not squashing the commits at this time, with the assumption that it's easier for you to see the changes that reflect the feedback.\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/344423424",
    "html_url": "https://github.com/grpc/grpc/pull/13188#issuecomment-344423424",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13188",
    "id": 344423424,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDQyMzQyNA==",
    "user": {
      "login": "nathanielmanistaatgoogle",
      "id": 10131044,
      "node_id": "MDQ6VXNlcjEwMTMxMDQ0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielmanistaatgoogle",
      "html_url": "https://github.com/nathanielmanistaatgoogle",
      "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers",
      "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs",
      "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos",
      "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-14T22:38:43Z",
    "updated_at": "2017-11-14T22:38:43Z",
    "author_association": "MEMBER",
    "body": "@grpc-testing: test this please."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/344597374",
    "html_url": "https://github.com/grpc/grpc/pull/13188#issuecomment-344597374",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13188",
    "id": 344597374,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDU5NzM3NA==",
    "user": {
      "login": "cauthu",
      "id": 1170852,
      "node_id": "MDQ6VXNlcjExNzA4NTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1170852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cauthu",
      "html_url": "https://github.com/cauthu",
      "followers_url": "https://api.github.com/users/cauthu/followers",
      "following_url": "https://api.github.com/users/cauthu/following{/other_user}",
      "gists_url": "https://api.github.com/users/cauthu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cauthu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cauthu/subscriptions",
      "organizations_url": "https://api.github.com/users/cauthu/orgs",
      "repos_url": "https://api.github.com/users/cauthu/repos",
      "events_url": "https://api.github.com/users/cauthu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cauthu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-15T13:49:19Z",
    "updated_at": "2017-11-15T13:49:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "i think all the python tests now pass. i've also incorporated the style/formatting suggestions from the `yapf_code.sh` from the `-l sanity` test.\r\n```\r\n$ ./tools/run_tests/run_tests.py -l python --compiler python3.5 -r sanity 2>&1 | tail -n2\r\n2017-11-15 08:45:34,861 PASSED: py35.test._sanity._sanity_test.SanityTest [time=1.2sec, retries=0:0]\r\n2017-11-15 08:45:34,862 SUCCESS: All tests passed\r\n$ \r\n$ ./tools/run_tests/run_tests.py -l python --compiler python3.5 2>&1 | tail -n2\r\n2017-11-15 08:59:03,017 PASSED: py35.test.unit._cython._no_messages_server_completion_queue_per_call_test.Test [time=42.7sec, retries=0:0]\r\n2017-11-15 08:59:03,017 SUCCESS: All tests passed\r\n$ \r\n$ \r\n$ ./tools/run_tests/run_tests.py -l python --compiler python2.7 -r sanity 2>&1 | tail -n2\r\n2017-11-15 13:21:17,702 PASSED: py27.test._sanity._sanity_test.SanityTest [time=1.3sec, retries=0:0]\r\n2017-11-15 13:21:17,702 SUCCESS: All tests passed\r\n$ \r\n$ ./tools/run_tests/run_tests.py -l python --compiler python2.7 2>&1 | tail -n2\r\n2017-11-15 13:29:09,473 PASSED: py27.test.unit._cython._no_messages_server_completion_queue_per_call_test.Test [time=94.1sec, retries=0:0]\r\n2017-11-15 13:29:09,473 SUCCESS: All tests passed\r\n$ \r\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/344985137",
    "html_url": "https://github.com/grpc/grpc/pull/13188#issuecomment-344985137",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13188",
    "id": 344985137,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDk4NTEzNw==",
    "user": {
      "login": "cauthu",
      "id": 1170852,
      "node_id": "MDQ6VXNlcjExNzA4NTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1170852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cauthu",
      "html_url": "https://github.com/cauthu",
      "followers_url": "https://api.github.com/users/cauthu/followers",
      "following_url": "https://api.github.com/users/cauthu/following{/other_user}",
      "gists_url": "https://api.github.com/users/cauthu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cauthu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cauthu/subscriptions",
      "organizations_url": "https://api.github.com/users/cauthu/orgs",
      "repos_url": "https://api.github.com/users/cauthu/repos",
      "events_url": "https://api.github.com/users/cauthu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cauthu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-16T16:49:36Z",
    "updated_at": "2017-11-16T16:49:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "@nathanielmanistaatgoogle please let me know how the cert config reuse test is doing in the latest run... if it's still failing due to the missing `grpc.RpcError`, which i can't reproduce on my machine, your assistance in figuring out the root cause would be greatly appreciated!"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/344992490",
    "html_url": "https://github.com/grpc/grpc/pull/13188#issuecomment-344992490",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/13188",
    "id": 344992490,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDk5MjQ5MA==",
    "user": {
      "login": "cauthu",
      "id": 1170852,
      "node_id": "MDQ6VXNlcjExNzA4NTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1170852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cauthu",
      "html_url": "https://github.com/cauthu",
      "followers_url": "https://api.github.com/users/cauthu/followers",
      "following_url": "https://api.github.com/users/cauthu/following{/other_user}",
      "gists_url": "https://api.github.com/users/cauthu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cauthu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cauthu/subscriptions",
      "organizations_url": "https://api.github.com/users/cauthu/orgs",
      "repos_url": "https://api.github.com/users/cauthu/repos",
      "events_url": "https://api.github.com/users/cauthu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cauthu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-16T17:12:05Z",
    "updated_at": "2017-11-16T17:12:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "in case it makes a difference, here are how i run the test and what the output looks like---i'm wondering if google's internal tests are showing the `ImportError` and/or the `Omitting EPOLLEXCLUSIVE tests`?\r\n\r\n```bash\r\n$ git status\r\nOn branch python-server-cert-reload\r\nYour branch is up-to-date with 'origin/python-server-cert-reload'.\r\nnothing to commit, working tree clean\r\n$ \r\n$ ./tools/run_tests/run_tests.py -l python --compiler python2.7 -r ServerSSLCertReloadTestCertConfigReuse\r\nUnexpected error getting flaky tests: <type 'exceptions.ImportError'>\r\nPASSED: /home/cauthu/my-grpc-fork/tools/run_tests/helper_scripts/build_python.sh [time=46.8sec, retries=0:0]\r\n\r\nOmitting EPOLLEXCLUSIVE tests\r\n\r\n\r\n2017-11-16 17:05:38,044 detected port server running version 20\r\n2017-11-16 17:05:38,073 my port server is version 20\r\nSUCCESS: All tests passed\r\n$ \r\n```"
  }
]
