[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/265381596",
    "html_url": "https://github.com/grpc/grpc/issues/8978#issuecomment-265381596",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8978",
    "id": 265381596,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTM4MTU5Ng==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-07T08:02:54Z",
    "updated_at": "2016-12-07T08:02:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "That option currently doesn't exist. Can you tell us more about your use case?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/265479744",
    "html_url": "https://github.com/grpc/grpc/issues/8978#issuecomment-265479744",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8978",
    "id": 265479744,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTQ3OTc0NA==",
    "user": {
      "login": "mrapavy",
      "id": 24238516,
      "node_id": "MDQ6VXNlcjI0MjM4NTE2",
      "avatar_url": "https://avatars2.githubusercontent.com/u/24238516?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mrapavy",
      "html_url": "https://github.com/mrapavy",
      "followers_url": "https://api.github.com/users/mrapavy/followers",
      "following_url": "https://api.github.com/users/mrapavy/following{/other_user}",
      "gists_url": "https://api.github.com/users/mrapavy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mrapavy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mrapavy/subscriptions",
      "organizations_url": "https://api.github.com/users/mrapavy/orgs",
      "repos_url": "https://api.github.com/users/mrapavy/repos",
      "events_url": "https://api.github.com/users/mrapavy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mrapavy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-07T15:37:13Z",
    "updated_at": "2016-12-07T15:37:13Z",
    "author_association": "NONE",
    "body": "The use case is pretty simple: I have a C# GRPC Server which makes use of the bidirectional streaming rpc calls using grpc c# library. Typically, in enterprise Windows environment, the certificates and public keys on production servers are stored in Windows certificate store. I would like for my application to be able to make use of that instead of forcing the enterprise to add another channel for certificate management (file-based PEM encoded cert/key pairs) considering export option of the private key are usually limited or impossible."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/266359420",
    "html_url": "https://github.com/grpc/grpc/issues/8978#issuecomment-266359420",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8978",
    "id": 266359420,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjM1OTQyMA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-12T07:22:31Z",
    "updated_at": "2016-12-12T07:22:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "I see. I think this feature would be useful, but I am not sure it can be achieved easily enough. We basically need a piece of C code that loads a certificate from win cert store and converts it to a PEM format (that's the format accepted by https://github.com/grpc/grpc/blob/b62bffbea5eef106bfbe644e8af161889c927401/include/grpc/grpc_security.h#L325)"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/283469676",
    "html_url": "https://github.com/grpc/grpc/issues/8978#issuecomment-283469676",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8978",
    "id": 283469676,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzQ2OTY3Ng==",
    "user": {
      "login": "NGNeer",
      "id": 10360342,
      "node_id": "MDQ6VXNlcjEwMzYwMzQy",
      "avatar_url": "https://avatars1.githubusercontent.com/u/10360342?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NGNeer",
      "html_url": "https://github.com/NGNeer",
      "followers_url": "https://api.github.com/users/NGNeer/followers",
      "following_url": "https://api.github.com/users/NGNeer/following{/other_user}",
      "gists_url": "https://api.github.com/users/NGNeer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NGNeer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NGNeer/subscriptions",
      "organizations_url": "https://api.github.com/users/NGNeer/orgs",
      "repos_url": "https://api.github.com/users/NGNeer/repos",
      "events_url": "https://api.github.com/users/NGNeer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NGNeer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-01T21:05:22Z",
    "updated_at": "2017-03-03T20:34:39Z",
    "author_association": "NONE",
    "body": "Not sure why you would need C code to perform that conversion. If you are writing a C# application you could generate such a file on the fly using the following export functionality:\r\n\r\n[taken from http://stackoverflow.com/questions/4739407/exporting-a-certificate-as-base-64-encoded-cer and placed here in case the original post is removed]\r\n\r\n```\r\n/// <summary>\r\n/// Export a certificate to a PEM format string\r\n/// </summary>\r\n/// <param name=\"cert\">The certificate to export</param>\r\n/// <returns>A PEM encoded string</returns>\r\npublic static string ExportToPEM(X509Certificate cert)\r\n{\r\n    StringBuilder builder = new StringBuilder();            \r\n\r\n    builder.AppendLine(\"-----BEGIN CERTIFICATE-----\");\r\n    builder.AppendLine(Convert.ToBase64String(cert.Export(X509ContentType.Cert), Base64FormattingOptions.InsertLineBreaks));\r\n    builder.AppendLine(\"-----END CERTIFICATE-----\");\r\n\r\n    return builder.ToString();\r\n}\r\n```\r\n\r\nYou can wrap this in something like\r\n```\r\npublic static string GetRootCertificates()\r\n{\r\n    StringBuilder builder = new StringBuilder();\r\n    X509Store store = new X509Store(StoreName.Root);\r\n    store.Open(OpenFlags.ReadOnly);\r\n    foreach (X509Certificate2 mCert in store.Certificates)\r\n    {\r\n        builder.AppendLine(\r\n            \"# Issuer: \" + mCert.Issuer.ToString() + \"\\n\" +\r\n            \"# Subject: \" + mCert.Subject.ToString() + \"\\n\" +\r\n            \"# Label: \" + mCert.FriendlyName.ToString() + \"\\n\" +\r\n            \"# Serial: \" + mCert.SerialNumber.ToString() + \"\\n\" +\r\n            \"# SHA1 Fingerprint: \" + mCert.GetCertHashString().ToString() + \"\\n\" +\r\n            ExportToPEM(mCert) + \"\\n\");\r\n    }\r\n    return builder.ToString();\r\n}\r\n```"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/283698035",
    "html_url": "https://github.com/grpc/grpc/issues/8978#issuecomment-283698035",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8978",
    "id": 283698035,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzY5ODAzNQ==",
    "user": {
      "login": "mrapavy",
      "id": 24238516,
      "node_id": "MDQ6VXNlcjI0MjM4NTE2",
      "avatar_url": "https://avatars2.githubusercontent.com/u/24238516?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mrapavy",
      "html_url": "https://github.com/mrapavy",
      "followers_url": "https://api.github.com/users/mrapavy/followers",
      "following_url": "https://api.github.com/users/mrapavy/following{/other_user}",
      "gists_url": "https://api.github.com/users/mrapavy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mrapavy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mrapavy/subscriptions",
      "organizations_url": "https://api.github.com/users/mrapavy/orgs",
      "repos_url": "https://api.github.com/users/mrapavy/repos",
      "events_url": "https://api.github.com/users/mrapavy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mrapavy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-02T16:12:44Z",
    "updated_at": "2017-03-02T16:12:44Z",
    "author_association": "NONE",
    "body": "I never suggested this to be done in C code. I indeed export those certs and keypairs on the fly as you suggested. However wouldn't it be better for this to be available directly in the C# wrapper?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/283889277",
    "html_url": "https://github.com/grpc/grpc/issues/8978#issuecomment-283889277",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8978",
    "id": 283889277,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4Mzg4OTI3Nw==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-03T07:53:16Z",
    "updated_at": "2017-03-03T07:53:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "You actually don't need to create a file. you can create an instance of SslCredentials from an PEM formatted string: \r\nhttps://github.com/grpc/grpc/blob/b19e30430df8b6cc6fc227ceed68d1ce419b040e/src/csharp/Grpc.Core/ChannelCredentials.cs#L119\r\n\r\nFeel free to come up with a pull request."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/284063427",
    "html_url": "https://github.com/grpc/grpc/issues/8978#issuecomment-284063427",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8978",
    "id": 284063427,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDA2MzQyNw==",
    "user": {
      "login": "NGNeer",
      "id": 10360342,
      "node_id": "MDQ6VXNlcjEwMzYwMzQy",
      "avatar_url": "https://avatars1.githubusercontent.com/u/10360342?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NGNeer",
      "html_url": "https://github.com/NGNeer",
      "followers_url": "https://api.github.com/users/NGNeer/followers",
      "following_url": "https://api.github.com/users/NGNeer/following{/other_user}",
      "gists_url": "https://api.github.com/users/NGNeer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NGNeer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NGNeer/subscriptions",
      "organizations_url": "https://api.github.com/users/NGNeer/orgs",
      "repos_url": "https://api.github.com/users/NGNeer/repos",
      "events_url": "https://api.github.com/users/NGNeer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NGNeer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-03T20:35:16Z",
    "updated_at": "2017-03-03T20:35:16Z",
    "author_association": "NONE",
    "body": "My comment regarding C code was aimed at jtattermusch, not at mrapavy. Yes, agreed, a string return value is better, the code above has been revised accordingly."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/287183449",
    "html_url": "https://github.com/grpc/grpc/issues/8978#issuecomment-287183449",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8978",
    "id": 287183449,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzE4MzQ0OQ==",
    "user": {
      "login": "jmblakl",
      "id": 3864704,
      "node_id": "MDQ6VXNlcjM4NjQ3MDQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3864704?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmblakl",
      "html_url": "https://github.com/jmblakl",
      "followers_url": "https://api.github.com/users/jmblakl/followers",
      "following_url": "https://api.github.com/users/jmblakl/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmblakl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmblakl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmblakl/subscriptions",
      "organizations_url": "https://api.github.com/users/jmblakl/orgs",
      "repos_url": "https://api.github.com/users/jmblakl/repos",
      "events_url": "https://api.github.com/users/jmblakl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmblakl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-16T20:36:53Z",
    "updated_at": "2017-03-16T20:36:53Z",
    "author_association": "NONE",
    "body": "This may be off topic, but it seems similar.  I have a server set up which is serving traffic secured by a Certificate.  Every example I have seen on consuming a service like that, essentially requires the client to supply the Root CA when constructing the Channel.  Is there a way to have the channel negotiate which chain to use based on the certificate chain the server sends back? \r\n\r\nIt doesn't seem very practical to make the developer supply the Root CA to use when constructing the channel.  If the Channel could negotiate and validate the certificate based on the Windows Certificate store that would be ideal. "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/287404284",
    "html_url": "https://github.com/grpc/grpc/issues/8978#issuecomment-287404284",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8978",
    "id": 287404284,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzQwNDI4NA==",
    "user": {
      "login": "NGNeer",
      "id": 10360342,
      "node_id": "MDQ6VXNlcjEwMzYwMzQy",
      "avatar_url": "https://avatars1.githubusercontent.com/u/10360342?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NGNeer",
      "html_url": "https://github.com/NGNeer",
      "followers_url": "https://api.github.com/users/NGNeer/followers",
      "following_url": "https://api.github.com/users/NGNeer/following{/other_user}",
      "gists_url": "https://api.github.com/users/NGNeer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NGNeer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NGNeer/subscriptions",
      "organizations_url": "https://api.github.com/users/NGNeer/orgs",
      "repos_url": "https://api.github.com/users/NGNeer/repos",
      "events_url": "https://api.github.com/users/NGNeer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NGNeer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-17T16:32:05Z",
    "updated_at": "2017-03-17T16:36:57Z",
    "author_association": "NONE",
    "body": "@jmblakl You may need to read up on public key infrastructure. The root CA that is set up on the client is a bare necessity and a result of an out-of-band agreement. There is no way for the channel to negotiate certificate chains in-band, because the underlying medium is assumed to be insecure.\r\n\r\nAs an example, if the server sends back a certificate and the client has not set up a root CA allowing verification of said certificate, then there is no way for the client to distinguish between the certificate that the server actually sent and a replacement certificate placed on the channel by an adversary.\r\n\r\nThe developer does not need to \"supply\" the root CA, unless the developer is tasked with setting up the public key infrastructure. The developer only needs to point the gRPC client to the existing root CAs in the Windows certificate store, tapping into the existing infrastructure, which this issue (#8978) shows how to do. It is alright to supply multiple root CAs, and verification will succeed if any chain exists."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/287413337",
    "html_url": "https://github.com/grpc/grpc/issues/8978#issuecomment-287413337",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8978",
    "id": 287413337,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzQxMzMzNw==",
    "user": {
      "login": "jmblakl",
      "id": 3864704,
      "node_id": "MDQ6VXNlcjM4NjQ3MDQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3864704?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmblakl",
      "html_url": "https://github.com/jmblakl",
      "followers_url": "https://api.github.com/users/jmblakl/followers",
      "following_url": "https://api.github.com/users/jmblakl/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmblakl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmblakl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmblakl/subscriptions",
      "organizations_url": "https://api.github.com/users/jmblakl/orgs",
      "repos_url": "https://api.github.com/users/jmblakl/repos",
      "events_url": "https://api.github.com/users/jmblakl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmblakl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-17T17:05:09Z",
    "updated_at": "2017-03-17T17:05:09Z",
    "author_association": "NONE",
    "body": "Thanks, I am clear now on how to accomplish this."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/287413369",
    "html_url": "https://github.com/grpc/grpc/issues/8978#issuecomment-287413369",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8978",
    "id": 287413369,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzQxMzM2OQ==",
    "user": {
      "login": "NGNeer",
      "id": 10360342,
      "node_id": "MDQ6VXNlcjEwMzYwMzQy",
      "avatar_url": "https://avatars1.githubusercontent.com/u/10360342?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NGNeer",
      "html_url": "https://github.com/NGNeer",
      "followers_url": "https://api.github.com/users/NGNeer/followers",
      "following_url": "https://api.github.com/users/NGNeer/following{/other_user}",
      "gists_url": "https://api.github.com/users/NGNeer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NGNeer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NGNeer/subscriptions",
      "organizations_url": "https://api.github.com/users/NGNeer/orgs",
      "repos_url": "https://api.github.com/users/NGNeer/repos",
      "events_url": "https://api.github.com/users/NGNeer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NGNeer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-17T17:05:15Z",
    "updated_at": "2017-03-17T17:05:15Z",
    "author_association": "NONE",
    "body": "Ah. Sorry, it was me who misunderstood the question. You are asking why the Windows store cannot be relied upon by default, and why the developer needs to configure gRPC client trust. I agree that it is a sensible default, and would point out that the code above allows you to implement such a default. At the same time, note that the configurability of the channel is actually a feature, allowing the developer to define a client that is detached from any existing public key infrastructure. Also note that gRPC supports multiple platforms, and does not necessarily run on Windows. This is not an answer, just observation."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/287413664",
    "html_url": "https://github.com/grpc/grpc/issues/8978#issuecomment-287413664",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8978",
    "id": 287413664,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzQxMzY2NA==",
    "user": {
      "login": "jmblakl",
      "id": 3864704,
      "node_id": "MDQ6VXNlcjM4NjQ3MDQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3864704?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmblakl",
      "html_url": "https://github.com/jmblakl",
      "followers_url": "https://api.github.com/users/jmblakl/followers",
      "following_url": "https://api.github.com/users/jmblakl/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmblakl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmblakl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmblakl/subscriptions",
      "organizations_url": "https://api.github.com/users/jmblakl/orgs",
      "repos_url": "https://api.github.com/users/jmblakl/repos",
      "events_url": "https://api.github.com/users/jmblakl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmblakl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-17T17:06:21Z",
    "updated_at": "2017-03-17T17:06:21Z",
    "author_association": "NONE",
    "body": "ha we just traded comments.  I agree the above example will work, so i can use that now.  but it would be a sensible alternative to point client libraries at the win store directly\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/287413769",
    "html_url": "https://github.com/grpc/grpc/issues/8978#issuecomment-287413769",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8978",
    "id": 287413769,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzQxMzc2OQ==",
    "user": {
      "login": "NGNeer",
      "id": 10360342,
      "node_id": "MDQ6VXNlcjEwMzYwMzQy",
      "avatar_url": "https://avatars1.githubusercontent.com/u/10360342?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NGNeer",
      "html_url": "https://github.com/NGNeer",
      "followers_url": "https://api.github.com/users/NGNeer/followers",
      "following_url": "https://api.github.com/users/NGNeer/following{/other_user}",
      "gists_url": "https://api.github.com/users/NGNeer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NGNeer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NGNeer/subscriptions",
      "organizations_url": "https://api.github.com/users/NGNeer/orgs",
      "repos_url": "https://api.github.com/users/NGNeer/repos",
      "events_url": "https://api.github.com/users/NGNeer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NGNeer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-17T17:06:45Z",
    "updated_at": "2017-03-17T17:06:45Z",
    "author_association": "NONE",
    "body": "`:)`"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/311022874",
    "html_url": "https://github.com/grpc/grpc/issues/8978#issuecomment-311022874",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8978",
    "id": 311022874,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMTAyMjg3NA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-26T10:32:23Z",
    "updated_at": "2017-06-26T10:32:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "This issue has been open for a while and I believe we're reached a state where it it possible to:\r\n1. workaround the missing support by using the code snippets above (constructing SslCredentials/SslServerCredentials from X509Certificate obtained from win certificate store)\r\n2. make it reasonably easy to come up with a pull request that adds said functionality. I'll leave that to the community - please contribute if you need this feature.\r\n\r\nMarking this issue as \"help wanted\" and closing."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/419008378",
    "html_url": "https://github.com/grpc/grpc/issues/8978#issuecomment-419008378",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/8978",
    "id": 419008378,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTAwODM3OA==",
    "user": {
      "login": "Euphoric",
      "id": 2451173,
      "node_id": "MDQ6VXNlcjI0NTExNzM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2451173?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Euphoric",
      "html_url": "https://github.com/Euphoric",
      "followers_url": "https://api.github.com/users/Euphoric/followers",
      "following_url": "https://api.github.com/users/Euphoric/following{/other_user}",
      "gists_url": "https://api.github.com/users/Euphoric/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Euphoric/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Euphoric/subscriptions",
      "organizations_url": "https://api.github.com/users/Euphoric/orgs",
      "repos_url": "https://api.github.com/users/Euphoric/repos",
      "events_url": "https://api.github.com/users/Euphoric/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Euphoric/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-06T08:22:59Z",
    "updated_at": "2018-09-06T08:22:59Z",
    "author_association": "NONE",
    "body": "I believe the workaround in this thread is not complete. It is simple to get Public Key PEM from X509Certificate2 . But it is not for Private Key PEM, which is required to setup server (or client two-way). "
  }
]
