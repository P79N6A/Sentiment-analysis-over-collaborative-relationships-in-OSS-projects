[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/242469227",
    "html_url": "https://github.com/grpc/grpc/pull/7867#issuecomment-242469227",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7867",
    "id": 242469227,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjQ2OTIyNw==",
    "user": {
      "login": "muxi",
      "id": 1054404,
      "node_id": "MDQ6VXNlcjEwNTQ0MDQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1054404?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/muxi",
      "html_url": "https://github.com/muxi",
      "followers_url": "https://api.github.com/users/muxi/followers",
      "following_url": "https://api.github.com/users/muxi/following{/other_user}",
      "gists_url": "https://api.github.com/users/muxi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/muxi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/muxi/subscriptions",
      "organizations_url": "https://api.github.com/users/muxi/orgs",
      "repos_url": "https://api.github.com/users/muxi/repos",
      "events_url": "https://api.github.com/users/muxi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/muxi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-25T17:15:27Z",
    "updated_at": "2016-08-25T17:15:27Z",
    "author_association": "MEMBER",
    "body": "This looks good to me. What is the hard reason that we defined the lambda individually on other ObjC objects?\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/242469288",
    "html_url": "https://github.com/grpc/grpc/pull/7867#issuecomment-242469288",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7867",
    "id": 242469288,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjQ2OTI4OA==",
    "user": {
      "login": "muxi",
      "id": 1054404,
      "node_id": "MDQ6VXNlcjEwNTQ0MDQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1054404?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/muxi",
      "html_url": "https://github.com/muxi",
      "followers_url": "https://api.github.com/users/muxi/followers",
      "following_url": "https://api.github.com/users/muxi/following{/other_user}",
      "gists_url": "https://api.github.com/users/muxi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/muxi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/muxi/subscriptions",
      "organizations_url": "https://api.github.com/users/muxi/orgs",
      "repos_url": "https://api.github.com/users/muxi/repos",
      "events_url": "https://api.github.com/users/muxi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/muxi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-25T17:15:35Z",
    "updated_at": "2016-08-25T17:15:35Z",
    "author_association": "MEMBER",
    "body": "Oh and I'm curious what is the unsafe (but maybe preferable) way to do this?\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/242497629",
    "html_url": "https://github.com/grpc/grpc/pull/7867#issuecomment-242497629",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7867",
    "id": 242497629,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjQ5NzYyOQ==",
    "user": {
      "login": "jcanizales",
      "id": 5120183,
      "node_id": "MDQ6VXNlcjUxMjAxODM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5120183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jcanizales",
      "html_url": "https://github.com/jcanizales",
      "followers_url": "https://api.github.com/users/jcanizales/followers",
      "following_url": "https://api.github.com/users/jcanizales/following{/other_user}",
      "gists_url": "https://api.github.com/users/jcanizales/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jcanizales/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jcanizales/subscriptions",
      "organizations_url": "https://api.github.com/users/jcanizales/orgs",
      "repos_url": "https://api.github.com/users/jcanizales/repos",
      "events_url": "https://api.github.com/users/jcanizales/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jcanizales/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-25T18:46:54Z",
    "updated_at": "2016-08-25T18:46:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "The deal is in ObjC this is allowed:\n\n``` objective-c\nstatic const NSString * kConstant = @\"string literal\";\n```\n\nbut these aren't:\n\n``` objective-c\nstatic const NSString * kConstant = [NSString someConstructor];\n\nstatic const NSArray * kAnother = [NSArray blahblah];\n```\n\nThe compiler errors out in these cases explaining that, due to Objective-C's dynamic nature, it cannot know the amount of space needed to allocate those objects until runtime. For literal strings it can, which is why it lets us initialize a string statically. Fair.\n\nThe question is: does that work for blocks too? The compiler decides what a block looks like in memory, and, unlike other objects, there's no way to change that using the functions of the ObjC runtime. So it should work. And the compiler doesn't error out. But I've failed to find it explicitly documented as valid.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/242498297",
    "html_url": "https://github.com/grpc/grpc/pull/7867#issuecomment-242498297",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7867",
    "id": 242498297,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjQ5ODI5Nw==",
    "user": {
      "login": "jcanizales",
      "id": 5120183,
      "node_id": "MDQ6VXNlcjUxMjAxODM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5120183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jcanizales",
      "html_url": "https://github.com/jcanizales",
      "followers_url": "https://api.github.com/users/jcanizales/followers",
      "following_url": "https://api.github.com/users/jcanizales/following{/other_user}",
      "gists_url": "https://api.github.com/users/jcanizales/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jcanizales/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jcanizales/subscriptions",
      "organizations_url": "https://api.github.com/users/jcanizales/orgs",
      "repos_url": "https://api.github.com/users/jcanizales/repos",
      "events_url": "https://api.github.com/users/jcanizales/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jcanizales/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-25T18:49:12Z",
    "updated_at": "2016-08-25T18:49:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "The advantage of the way it was written before is just that it gets a name. So it's no big deal. And _maybe_ the way we were doing it is causing b/30913446.\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/242521205",
    "html_url": "https://github.com/grpc/grpc/pull/7867#issuecomment-242521205",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7867",
    "id": 242521205,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjUyMTIwNQ==",
    "user": {
      "login": "muxi",
      "id": 1054404,
      "node_id": "MDQ6VXNlcjEwNTQ0MDQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1054404?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/muxi",
      "html_url": "https://github.com/muxi",
      "followers_url": "https://api.github.com/users/muxi/followers",
      "following_url": "https://api.github.com/users/muxi/following{/other_user}",
      "gists_url": "https://api.github.com/users/muxi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/muxi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/muxi/subscriptions",
      "organizations_url": "https://api.github.com/users/muxi/orgs",
      "repos_url": "https://api.github.com/users/muxi/repos",
      "events_url": "https://api.github.com/users/muxi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/muxi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-25T20:12:07Z",
    "updated_at": "2016-08-25T20:12:07Z",
    "author_association": "MEMBER",
    "body": "That makes perfect sense. Thanks!\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/243621878",
    "html_url": "https://github.com/grpc/grpc/pull/7867#issuecomment-243621878",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/7867",
    "id": 243621878,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MzYyMTg3OA==",
    "user": {
      "login": "jcanizales",
      "id": 5120183,
      "node_id": "MDQ6VXNlcjUxMjAxODM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5120183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jcanizales",
      "html_url": "https://github.com/jcanizales",
      "followers_url": "https://api.github.com/users/jcanizales/followers",
      "following_url": "https://api.github.com/users/jcanizales/following{/other_user}",
      "gists_url": "https://api.github.com/users/jcanizales/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jcanizales/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jcanizales/subscriptions",
      "organizations_url": "https://api.github.com/users/jcanizales/orgs",
      "repos_url": "https://api.github.com/users/jcanizales/repos",
      "events_url": "https://api.github.com/users/jcanizales/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jcanizales/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-31T00:17:55Z",
    "updated_at": "2016-08-31T00:17:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ping @makdharma for supermerge powers.\n"
  }
]
