[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/304333678",
    "html_url": "https://github.com/grpc/grpc/issues/11032#issuecomment-304333678",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11032",
    "id": 304333678,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDMzMzY3OA==",
    "user": {
      "login": "peterwishart",
      "id": 5476758,
      "node_id": "MDQ6VXNlcjU0NzY3NTg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5476758?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/peterwishart",
      "html_url": "https://github.com/peterwishart",
      "followers_url": "https://api.github.com/users/peterwishart/followers",
      "following_url": "https://api.github.com/users/peterwishart/following{/other_user}",
      "gists_url": "https://api.github.com/users/peterwishart/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/peterwishart/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/peterwishart/subscriptions",
      "organizations_url": "https://api.github.com/users/peterwishart/orgs",
      "repos_url": "https://api.github.com/users/peterwishart/repos",
      "events_url": "https://api.github.com/users/peterwishart/events{/privacy}",
      "received_events_url": "https://api.github.com/users/peterwishart/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-26T16:54:37Z",
    "updated_at": "2017-05-26T16:54:37Z",
    "author_association": "NONE",
    "body": "I can reproduce the issue you describe.\r\n\r\nRemoving the blocking `Thread.Sleep()` call in `HelloServiceImpl.Serve` fixes it e.g. `return Task.Delay((int)request.DelayFor).ContinueWith(t => reply)`.\r\n\r\nThe assignment of incoming requests to worker threads can queue the incoming request with a blocked worker (even though unblocked workers may be available), meaning the connection is accepted but not processed until the worker unblocks.\r\n\r\nThis seems to me to be a bug in the test project rather than Grpc though."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/304336205",
    "html_url": "https://github.com/grpc/grpc/issues/11032#issuecomment-304336205",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11032",
    "id": 304336205,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDMzNjIwNQ==",
    "user": {
      "login": "dibyendumajumdar",
      "id": 1548494,
      "node_id": "MDQ6VXNlcjE1NDg0OTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1548494?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dibyendumajumdar",
      "html_url": "https://github.com/dibyendumajumdar",
      "followers_url": "https://api.github.com/users/dibyendumajumdar/followers",
      "following_url": "https://api.github.com/users/dibyendumajumdar/following{/other_user}",
      "gists_url": "https://api.github.com/users/dibyendumajumdar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dibyendumajumdar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dibyendumajumdar/subscriptions",
      "organizations_url": "https://api.github.com/users/dibyendumajumdar/orgs",
      "repos_url": "https://api.github.com/users/dibyendumajumdar/repos",
      "events_url": "https://api.github.com/users/dibyendumajumdar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dibyendumajumdar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-26T17:04:49Z",
    "updated_at": "2017-05-26T17:04:49Z",
    "author_association": "NONE",
    "body": "I am not sure I understand what you are saying here - in my view it is a grpc bug, as it is valid that a thread is blocked doing long running piece of work (Thread.Sleep()) is just to simulate a blocked thread. "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/304359834",
    "html_url": "https://github.com/grpc/grpc/issues/11032#issuecomment-304359834",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11032",
    "id": 304359834,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDM1OTgzNA==",
    "user": {
      "login": "dibyendumajumdar",
      "id": 1548494,
      "node_id": "MDQ6VXNlcjE1NDg0OTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1548494?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dibyendumajumdar",
      "html_url": "https://github.com/dibyendumajumdar",
      "followers_url": "https://api.github.com/users/dibyendumajumdar/followers",
      "following_url": "https://api.github.com/users/dibyendumajumdar/following{/other_user}",
      "gists_url": "https://api.github.com/users/dibyendumajumdar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dibyendumajumdar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dibyendumajumdar/subscriptions",
      "organizations_url": "https://api.github.com/users/dibyendumajumdar/orgs",
      "repos_url": "https://api.github.com/users/dibyendumajumdar/repos",
      "events_url": "https://api.github.com/users/dibyendumajumdar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dibyendumajumdar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-26T18:45:33Z",
    "updated_at": "2017-05-26T18:45:33Z",
    "author_association": "NONE",
    "body": "I do not claim to understand what grpc is doing but when I had a brief look I found that the thread was blocked at:\r\n```\r\nGrpc.Core.dll!Grpc.Core.Internal.CompletionQueueSafeHandle.Pluck(System.IntPtr tag)\tUnknown\r\n \tGrpc.Core.dll!Grpc.Core.Internal.AsyncCall<Request, Response>.UnaryCall(Request msg)\tUnknown\r\n \tGrpc.Core.dll!Grpc.Core.DefaultCallInvoker.BlockingUnaryCall<Request, Response>(Grpc.Core.Method<Request, Response> method, string host, Grpc.Core.CallOptions options, Request request)\tUnknown\r\n \tGrpc.Core.dll!Grpc.Core.Internal.InterceptingCallInvoker.BlockingUnaryCall<Request, Response>(Grpc.Core.Method<Request, Response> method, string host, Grpc.Core.CallOptions options, Request request)\tUnknown\r\n```\r\nIt seemed to me by looking at the code that the issue might be quite fundamental - i.e. the way an RPC call is identified at the server seems to rely on a pointer - so if two processes are running on the same client machine and happen to come up with the same pointer then the server cannot distinguish between them.\r\n\r\nI may be totally misunderstanding what is going on here , as I don't really know the grpc codebase."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/305094514",
    "html_url": "https://github.com/grpc/grpc/issues/11032#issuecomment-305094514",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11032",
    "id": 305094514,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTA5NDUxNA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-31T06:16:21Z",
    "updated_at": "2017-05-31T06:16:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've looked at your example code and the server handler implementation is flawed:\r\n\r\n```\r\npublic override Task<HelloReply> Serve(HelloRequest request, ServerCallContext context)\r\n        {\r\n            if (request.DelayFor > 0)\r\n            {\r\n                Thread.Sleep((int)request.DelayFor);\r\n            }\r\n            var reply = new HelloReply\r\n            {\r\n                Message = request.Message\r\n            };\r\n            return Task.FromResult(reply);\r\n        }\r\n```\r\n\r\nAs @peterwishart is suggesting, the problem is in the Thread.Sleep() invocation - it's a bad idea to run synchronously blocking methods (such as Thread sleep) from within async code (there's plenty of blogpost around why it's bad - in short you're risking deadlocking your application, which is what has happened in your case).\r\n\r\nThe correct way to delay in async code is `await Task.Delay(request.DelayFor)` - which is non-blocking and will allow gRPC to do its job while waiting."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/305095241",
    "html_url": "https://github.com/grpc/grpc/issues/11032#issuecomment-305095241",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11032",
    "id": 305095241,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTA5NTI0MQ==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-31T06:21:07Z",
    "updated_at": "2017-05-31T06:21:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "@dibyendumajumdar  gRPC assumes you'll write server side handlers as a well-behaving async code. Currently, if you want to perform long-running computations as part of the handler, you should offload the operations to another thread."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/305097002",
    "html_url": "https://github.com/grpc/grpc/issues/11032#issuecomment-305097002",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11032",
    "id": 305097002,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTA5NzAwMg==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-31T06:31:13Z",
    "updated_at": "2017-05-31T06:31:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "On Fri, May 26, 2017 at 11:45 AM, Dibyendu Majumdar <\nnotifications@github.com> wrote:\n\n> I do not claim to understand what grpc is doing but when I had a brief\n> look I found that the thread was blocked at:\n>\n> Grpc.Core.dll!Grpc.Core.Internal.CompletionQueueSafeHandle.Pluck(System.IntPtr tag)\tUnknown\n>  \tGrpc.Core.dll!Grpc.Core.Internal.AsyncCall<Request, Response>.UnaryCall(Request msg)\tUnknown\n>  \tGrpc.Core.dll!Grpc.Core.DefaultCallInvoker.BlockingUnaryCall<Request, Response>(Grpc.Core.Method<Request, Response> method, string host, Grpc.Core.CallOptions options, Request request)\tUnknown\n>  \tGrpc.Core.dll!Grpc.Core.Internal.InterceptingCallInvoker.BlockingUnaryCall<Request, Response>(Grpc.Core.Method<Request, Response> method, string host, Grpc.Core.CallOptions options, Request request)\tUnknown\n>\n> What you posted is a stack trace of a thread in the middle of invoking a\nblocking unary call (on the client side), waiting to get a response from\nserver.\n\n\n> It seemed to me by looking at the code that the issue might be quite\n> fundamental - i.e. the way an RPC call is identified at the server seems to\n> rely on a pointer - so if two processes are running on the same client\n> machine and happen to come up with the same pointer then the server cannot\n> distinguish between them.\n>\nYou're just speculating here without really understanding what's going on.\nAll gRPC operation completions coming from C core a identified by an\npointer - and the pointer actually corresponds to an address of an\nunmanaged object (grpcsharp_batch_context in this case) that stores the\ncontext of the grpc operation. The pointers don't have any significance\nbeyond process boundary (as they are pointers to actual unmanaged objects\nin current process' address space).\nThat said, your argument is not really making much sense.\n\n\n> I may be totally misunderstanding what is going on here , as I don't\n> really know the grpc codebase.\n>\n> —\n> You are receiving this because you were assigned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/grpc/grpc/issues/11032#issuecomment-304359834>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AJeq5FGt6Mf7wouxNbOcQUH18C_rI2n6ks5r9x3ZgaJpZM4NUobi>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/305097089",
    "html_url": "https://github.com/grpc/grpc/issues/11032#issuecomment-305097089",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11032",
    "id": 305097089,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTA5NzA4OQ==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-31T06:31:38Z",
    "updated_at": "2017-05-31T06:31:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "Closing this issue as it seems everything is behaving the way it was intended."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/305116298",
    "html_url": "https://github.com/grpc/grpc/issues/11032#issuecomment-305116298",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11032",
    "id": 305116298,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTExNjI5OA==",
    "user": {
      "login": "dibyendumajumdar",
      "id": 1548494,
      "node_id": "MDQ6VXNlcjE1NDg0OTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1548494?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dibyendumajumdar",
      "html_url": "https://github.com/dibyendumajumdar",
      "followers_url": "https://api.github.com/users/dibyendumajumdar/followers",
      "following_url": "https://api.github.com/users/dibyendumajumdar/following{/other_user}",
      "gists_url": "https://api.github.com/users/dibyendumajumdar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dibyendumajumdar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dibyendumajumdar/subscriptions",
      "organizations_url": "https://api.github.com/users/dibyendumajumdar/orgs",
      "repos_url": "https://api.github.com/users/dibyendumajumdar/repos",
      "events_url": "https://api.github.com/users/dibyendumajumdar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dibyendumajumdar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-31T08:04:11Z",
    "updated_at": "2017-05-31T08:04:11Z",
    "author_association": "NONE",
    "body": "Hi @jtattermusch,\r\n\r\n> gRPC assumes you'll write server side handlers as a well-behaving async code. Currently, if you want to perform long-running computations as part of the handler, you should offload the operations to another thread.\r\n\r\nMaybe I misunderstood how grpc handles server threading. I am going by the examples in grpc and also by this thread:\r\n\r\nhttps://groups.google.com/forum/#!searchin/grpc-io/grpc$20server$20threading%7Csort:relevance/grpc-io/Cul6fd7cOB0/Hwl3aR68FwAJ\r\n\r\nSo based on what your are saying then the server implementation should offload the work to another threadpool and not rely on grpc managing the threadpool. \r\n\r\nCan you refer me to any documentation that clarifies this? \r\n\r\nThanks and Regards\r\n\r\np.s. The thread sleep was to simulate a blocking thread doing a long running task - based on above assumption that grpc manages the threadpool and in sync mode work does not need to be offloaded into another thread. I am aware of the way threads should be used etc.\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/307307794",
    "html_url": "https://github.com/grpc/grpc/issues/11032#issuecomment-307307794",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11032",
    "id": 307307794,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzMwNzc5NA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-09T06:34:15Z",
    "updated_at": "2017-06-09T06:34:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "The guidelines for writing well-behaved async code are not gRPC specific, they are valid for .NET in general.\r\nhttps://msdn.microsoft.com/en-us/magazine/jj991977.aspx (see \"Async all the way\").\r\nhttps://blog.stephencleary.com/2012/07/dont-block-on-async-code.html"
  }
]
