[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/323823636",
    "html_url": "https://github.com/grpc/grpc/issues/11407#issuecomment-323823636",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11407",
    "id": 323823636,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMzgyMzYzNg==",
    "user": {
      "login": "peterdeme",
      "id": 19969687,
      "node_id": "MDQ6VXNlcjE5OTY5Njg3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/19969687?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/peterdeme",
      "html_url": "https://github.com/peterdeme",
      "followers_url": "https://api.github.com/users/peterdeme/followers",
      "following_url": "https://api.github.com/users/peterdeme/following{/other_user}",
      "gists_url": "https://api.github.com/users/peterdeme/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/peterdeme/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/peterdeme/subscriptions",
      "organizations_url": "https://api.github.com/users/peterdeme/orgs",
      "repos_url": "https://api.github.com/users/peterdeme/repos",
      "events_url": "https://api.github.com/users/peterdeme/events{/privacy}",
      "received_events_url": "https://api.github.com/users/peterdeme/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-21T18:58:18Z",
    "updated_at": "2017-08-21T18:58:18Z",
    "author_association": "NONE",
    "body": "@Jamesxql How about this https://github.com/peterdeme/Grpc.PoC/blob/master/ECommerce.Services/ProductService/Program.cs#L21 ?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/333361313",
    "html_url": "https://github.com/grpc/grpc/issues/11407#issuecomment-333361313",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11407",
    "id": 333361313,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzM2MTMxMw==",
    "user": {
      "login": "gotoxu",
      "id": 10518551,
      "node_id": "MDQ6VXNlcjEwNTE4NTUx",
      "avatar_url": "https://avatars1.githubusercontent.com/u/10518551?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gotoxu",
      "html_url": "https://github.com/gotoxu",
      "followers_url": "https://api.github.com/users/gotoxu/followers",
      "following_url": "https://api.github.com/users/gotoxu/following{/other_user}",
      "gists_url": "https://api.github.com/users/gotoxu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gotoxu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gotoxu/subscriptions",
      "organizations_url": "https://api.github.com/users/gotoxu/orgs",
      "repos_url": "https://api.github.com/users/gotoxu/repos",
      "events_url": "https://api.github.com/users/gotoxu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gotoxu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-01T08:22:06Z",
    "updated_at": "2017-10-01T08:22:06Z",
    "author_association": "NONE",
    "body": "@peterdeme I think the best way should be that way: \r\n```csharp\r\npublic static void Main(string[] args)\r\n        {\r\n            IServiceCollection services = new ServiceCollection();\r\n            // init services collection\r\n\r\n            Server server = new Server\r\n            {\r\n                Services = {\r\n                    Contracts.ProductService.BindService(typeof(ProductRepository))\r\n                },\r\n                Ports = { { \"0.0.0.0\", SharedConstants.GRPC.ProductServiceBackendPortNumber, ServerCredentials.Insecure } },\r\n                ServiceProvider = services.BuildServiceProvider()\r\n            };\r\n\r\n            server.Start();\r\n\r\n            Console.WriteLine(\"Server listening on port \" + SharedConstants.GRPC.ProductServiceBackendPortNumber);\r\n            Console.WriteLine(\"Press any key to stop the server...\");\r\n\r\n            Console.Read();\r\n            server.ShutdownAsync().Wait();\r\n        }\r\n```\r\n\r\nBut this requires the gRPC team to do some development work"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/346991507",
    "html_url": "https://github.com/grpc/grpc/issues/11407#issuecomment-346991507",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/11407",
    "id": 346991507,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Njk5MTUwNw==",
    "user": {
      "login": "gotoxu",
      "id": 10518551,
      "node_id": "MDQ6VXNlcjEwNTE4NTUx",
      "avatar_url": "https://avatars1.githubusercontent.com/u/10518551?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gotoxu",
      "html_url": "https://github.com/gotoxu",
      "followers_url": "https://api.github.com/users/gotoxu/followers",
      "following_url": "https://api.github.com/users/gotoxu/following{/other_user}",
      "gists_url": "https://api.github.com/users/gotoxu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gotoxu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gotoxu/subscriptions",
      "organizations_url": "https://api.github.com/users/gotoxu/orgs",
      "repos_url": "https://api.github.com/users/gotoxu/repos",
      "events_url": "https://api.github.com/users/gotoxu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gotoxu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-26T08:06:20Z",
    "updated_at": "2017-11-26T08:06:20Z",
    "author_association": "NONE",
    "body": "I reconsidered, I think this feature should not be achieved by the gRPC Server, and we should implement a Hosting function wrap the gRPC Server, and then implement dependency injection in Hosting."
  }
]
