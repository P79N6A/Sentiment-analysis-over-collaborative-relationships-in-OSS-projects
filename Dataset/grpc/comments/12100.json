[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/320700077",
    "html_url": "https://github.com/grpc/grpc/pull/12100#issuecomment-320700077",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12100",
    "id": 320700077,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDcwMDA3Nw==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-07T15:43:04Z",
    "updated_at": "2017-08-07T15:43:04Z",
    "author_association": "NONE",
    "body": "Thanks for your pull request. The automated tests will run as soon as one of the admins verifies this change is ok for us to run on our infrastructure."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/320700385",
    "html_url": "https://github.com/grpc/grpc/pull/12100#issuecomment-320700385",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12100",
    "id": 320700385,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDcwMDM4NQ==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-07T15:44:07Z",
    "updated_at": "2017-08-07T15:44:07Z",
    "author_association": "NONE",
    "body": "Thanks for your pull request. The automated tests will run as soon as one of the admins verifies this change is ok for us to run on our infrastructure."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/320700677",
    "html_url": "https://github.com/grpc/grpc/pull/12100#issuecomment-320700677",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12100",
    "id": 320700677,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDcwMDY3Nw==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-07T15:45:06Z",
    "updated_at": "2017-08-07T15:45:06Z",
    "author_association": "NONE",
    "body": "Thanks for your pull request. The automated tests will run as soon as one of the admins verifies this change is ok for us to run on our infrastructure."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/320700751",
    "html_url": "https://github.com/grpc/grpc/pull/12100#issuecomment-320700751",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12100",
    "id": 320700751,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDcwMDc1MQ==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-07T15:45:19Z",
    "updated_at": "2017-08-07T15:45:19Z",
    "author_association": "NONE",
    "body": "Thanks for your pull request. The automated tests will run as soon as one of the admins verifies this change is ok for us to run on our infrastructure."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/320700815",
    "html_url": "https://github.com/grpc/grpc/pull/12100#issuecomment-320700815",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12100",
    "id": 320700815,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDcwMDgxNQ==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-07T15:45:29Z",
    "updated_at": "2017-08-07T15:45:29Z",
    "author_association": "NONE",
    "body": "Thanks for your pull request. The automated tests will run as soon as one of the admins verifies this change is ok for us to run on our infrastructure."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/320700996",
    "html_url": "https://github.com/grpc/grpc/pull/12100#issuecomment-320700996",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12100",
    "id": 320700996,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDcwMDk5Ng==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-07T15:46:07Z",
    "updated_at": "2017-08-07T15:46:07Z",
    "author_association": "NONE",
    "body": "Thanks for your pull request. The automated tests will run as soon as one of the admins verifies this change is ok for us to run on our infrastructure."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/320701300",
    "html_url": "https://github.com/grpc/grpc/pull/12100#issuecomment-320701300",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12100",
    "id": 320701300,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDcwMTMwMA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-07T15:47:06Z",
    "updated_at": "2017-08-07T15:47:06Z",
    "author_association": "NONE",
    "body": "Thanks for your pull request. The automated tests will run as soon as one of the admins verifies this change is ok for us to run on our infrastructure."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/320701349",
    "html_url": "https://github.com/grpc/grpc/pull/12100#issuecomment-320701349",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12100",
    "id": 320701349,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDcwMTM0OQ==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-07T15:47:15Z",
    "updated_at": "2017-08-07T15:47:15Z",
    "author_association": "NONE",
    "body": "Thanks for your pull request. The automated tests will run as soon as one of the admins verifies this change is ok for us to run on our infrastructure."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/320701572",
    "html_url": "https://github.com/grpc/grpc/pull/12100#issuecomment-320701572",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12100",
    "id": 320701572,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDcwMTU3Mg==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-07T15:48:05Z",
    "updated_at": "2017-08-07T15:48:05Z",
    "author_association": "NONE",
    "body": "Thanks for your pull request. The automated tests will run as soon as one of the admins verifies this change is ok for us to run on our infrastructure."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/320701854",
    "html_url": "https://github.com/grpc/grpc/pull/12100#issuecomment-320701854",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12100",
    "id": 320701854,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDcwMTg1NA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-07T15:49:06Z",
    "updated_at": "2017-08-07T15:49:06Z",
    "author_association": "NONE",
    "body": "Thanks for your pull request. The automated tests will run as soon as one of the admins verifies this change is ok for us to run on our infrastructure."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/320701891",
    "html_url": "https://github.com/grpc/grpc/pull/12100#issuecomment-320701891",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12100",
    "id": 320701891,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDcwMTg5MQ==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-07T15:49:15Z",
    "updated_at": "2017-08-07T15:49:15Z",
    "author_association": "NONE",
    "body": "Thanks for your pull request. The automated tests will run as soon as one of the admins verifies this change is ok for us to run on our infrastructure."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/320701925",
    "html_url": "https://github.com/grpc/grpc/pull/12100#issuecomment-320701925",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12100",
    "id": 320701925,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDcwMTkyNQ==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-07T15:49:23Z",
    "updated_at": "2017-08-07T15:49:23Z",
    "author_association": "NONE",
    "body": "Thanks for your pull request. The automated tests will run as soon as one of the admins verifies this change is ok for us to run on our infrastructure."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/320702108",
    "html_url": "https://github.com/grpc/grpc/pull/12100#issuecomment-320702108",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12100",
    "id": 320702108,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDcwMjEwOA==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-07T15:50:06Z",
    "updated_at": "2017-08-07T15:50:06Z",
    "author_association": "NONE",
    "body": "Thanks for your pull request. The automated tests will run as soon as one of the admins verifies this change is ok for us to run on our infrastructure."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/320702160",
    "html_url": "https://github.com/grpc/grpc/pull/12100#issuecomment-320702160",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12100",
    "id": 320702160,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDcwMjE2MA==",
    "user": {
      "login": "grpc-testing",
      "id": 28024233,
      "node_id": "MDQ6VXNlcjI4MDI0MjMz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/28024233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-testing",
      "html_url": "https://github.com/grpc-testing",
      "followers_url": "https://api.github.com/users/grpc-testing/followers",
      "following_url": "https://api.github.com/users/grpc-testing/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-testing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-testing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-testing/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-testing/orgs",
      "repos_url": "https://api.github.com/users/grpc-testing/repos",
      "events_url": "https://api.github.com/users/grpc-testing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-testing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-07T15:50:15Z",
    "updated_at": "2017-08-07T15:50:15Z",
    "author_association": "NONE",
    "body": "Thanks for your pull request. The automated tests will run as soon as one of the admins verifies this change is ok for us to run on our infrastructure."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/320702198",
    "html_url": "https://github.com/grpc/grpc/pull/12100#issuecomment-320702198",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12100",
    "id": 320702198,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDcwMjE5OA==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-07T15:50:24Z",
    "updated_at": "2017-08-07T15:50:24Z",
    "author_association": "NONE",
    "body": "Thanks for your pull request. The automated tests will run as soon as one of the admins verifies this change is ok for us to run on our infrastructure."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/320702364",
    "html_url": "https://github.com/grpc/grpc/pull/12100#issuecomment-320702364",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12100",
    "id": 320702364,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDcwMjM2NA==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-07T15:51:05Z",
    "updated_at": "2017-08-07T15:51:05Z",
    "author_association": "NONE",
    "body": "Thanks for your pull request. The automated tests will run as soon as one of the admins verifies this change is ok for us to run on our infrastructure."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/320702669",
    "html_url": "https://github.com/grpc/grpc/pull/12100#issuecomment-320702669",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12100",
    "id": 320702669,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDcwMjY2OQ==",
    "user": {
      "login": "grpc-kokoro",
      "id": 12722905,
      "node_id": "MDQ6VXNlcjEyNzIyOTA1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/12722905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grpc-kokoro",
      "html_url": "https://github.com/grpc-kokoro",
      "followers_url": "https://api.github.com/users/grpc-kokoro/followers",
      "following_url": "https://api.github.com/users/grpc-kokoro/following{/other_user}",
      "gists_url": "https://api.github.com/users/grpc-kokoro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grpc-kokoro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grpc-kokoro/subscriptions",
      "organizations_url": "https://api.github.com/users/grpc-kokoro/orgs",
      "repos_url": "https://api.github.com/users/grpc-kokoro/repos",
      "events_url": "https://api.github.com/users/grpc-kokoro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grpc-kokoro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-07T15:52:05Z",
    "updated_at": "2017-08-07T15:52:05Z",
    "author_association": "NONE",
    "body": "Thanks for your pull request. The automated tests will run as soon as one of the admins verifies this change is ok for us to run on our infrastructure."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/320709681",
    "html_url": "https://github.com/grpc/grpc/pull/12100#issuecomment-320709681",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12100",
    "id": 320709681,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDcwOTY4MQ==",
    "user": {
      "login": "apolcyn",
      "id": 9566254,
      "node_id": "MDQ6VXNlcjk1NjYyNTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9566254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apolcyn",
      "html_url": "https://github.com/apolcyn",
      "followers_url": "https://api.github.com/users/apolcyn/followers",
      "following_url": "https://api.github.com/users/apolcyn/following{/other_user}",
      "gists_url": "https://api.github.com/users/apolcyn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apolcyn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apolcyn/subscriptions",
      "organizations_url": "https://api.github.com/users/apolcyn/orgs",
      "repos_url": "https://api.github.com/users/apolcyn/repos",
      "events_url": "https://api.github.com/users/apolcyn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apolcyn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-07T16:17:59Z",
    "updated_at": "2017-08-07T16:17:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "jenkins: this is ok to test"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/320860727",
    "html_url": "https://github.com/grpc/grpc/pull/12100#issuecomment-320860727",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12100",
    "id": 320860727,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDg2MDcyNw==",
    "user": {
      "login": "apolcyn",
      "id": 9566254,
      "node_id": "MDQ6VXNlcjk1NjYyNTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9566254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apolcyn",
      "html_url": "https://github.com/apolcyn",
      "followers_url": "https://api.github.com/users/apolcyn/followers",
      "following_url": "https://api.github.com/users/apolcyn/following{/other_user}",
      "gists_url": "https://api.github.com/users/apolcyn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apolcyn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apolcyn/subscriptions",
      "organizations_url": "https://api.github.com/users/apolcyn/orgs",
      "repos_url": "https://api.github.com/users/apolcyn/repos",
      "events_url": "https://api.github.com/users/apolcyn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apolcyn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-08T06:14:15Z",
    "updated_at": "2017-08-08T06:14:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the contribution! With a first look, I think this looks a really good patch.\r\n\r\n+ @mehrdada, who's implementing interceptors in other languages."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/320965341",
    "html_url": "https://github.com/grpc/grpc/pull/12100#issuecomment-320965341",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12100",
    "id": 320965341,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDk2NTM0MQ==",
    "user": {
      "login": "splittingred",
      "id": 233334,
      "node_id": "MDQ6VXNlcjIzMzMzNA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/233334?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/splittingred",
      "html_url": "https://github.com/splittingred",
      "followers_url": "https://api.github.com/users/splittingred/followers",
      "following_url": "https://api.github.com/users/splittingred/following{/other_user}",
      "gists_url": "https://api.github.com/users/splittingred/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/splittingred/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/splittingred/subscriptions",
      "organizations_url": "https://api.github.com/users/splittingred/orgs",
      "repos_url": "https://api.github.com/users/splittingred/repos",
      "events_url": "https://api.github.com/users/splittingred/events{/privacy}",
      "received_events_url": "https://api.github.com/users/splittingred/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-08T14:02:32Z",
    "updated_at": "2017-08-08T14:02:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "@apolcyn Thanks! Just an fyi - I went ahead and moved the `intercept` call into `RpcDesc` - as I noted in the description above, I feel like that's a more usable place for it, as it allows interceptors to throw `BadStatus` codes (as well as others) and have the `run_server_method` call properly handle unhappy paths. The prior location (in `RpcServer` would have required interceptors to duplicate the rescue handling in `RpcDesc` if they wanted to maintain functionality; I wasn't crazy about that. This should be a little cleaner.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/321020955",
    "html_url": "https://github.com/grpc/grpc/pull/12100#issuecomment-321020955",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12100",
    "id": 321020955,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTAyMDk1NQ==",
    "user": {
      "login": "mehrdada",
      "id": 900411,
      "node_id": "MDQ6VXNlcjkwMDQxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/900411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mehrdada",
      "html_url": "https://github.com/mehrdada",
      "followers_url": "https://api.github.com/users/mehrdada/followers",
      "following_url": "https://api.github.com/users/mehrdada/following{/other_user}",
      "gists_url": "https://api.github.com/users/mehrdada/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mehrdada/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mehrdada/subscriptions",
      "organizations_url": "https://api.github.com/users/mehrdada/orgs",
      "repos_url": "https://api.github.com/users/mehrdada/repos",
      "events_url": "https://api.github.com/users/mehrdada/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mehrdada/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-08T17:10:35Z",
    "updated_at": "2017-08-08T17:10:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "@splittingred Thanks for the PR! I am wondering how difficult it would be to have client interceptors as well as server ones in a single PR so we can ensure the design applies consistently across both sides? In other languages like Go and Java, generally the client interceptors are registered on a channel (or wrap a channel and return another object, in a decorator-like pattern)."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/321080961",
    "html_url": "https://github.com/grpc/grpc/pull/12100#issuecomment-321080961",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12100",
    "id": 321080961,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTA4MDk2MQ==",
    "user": {
      "login": "splittingred",
      "id": 233334,
      "node_id": "MDQ6VXNlcjIzMzMzNA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/233334?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/splittingred",
      "html_url": "https://github.com/splittingred",
      "followers_url": "https://api.github.com/users/splittingred/followers",
      "following_url": "https://api.github.com/users/splittingred/following{/other_user}",
      "gists_url": "https://api.github.com/users/splittingred/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/splittingred/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/splittingred/subscriptions",
      "organizations_url": "https://api.github.com/users/splittingred/orgs",
      "repos_url": "https://api.github.com/users/splittingred/repos",
      "events_url": "https://api.github.com/users/splittingred/events{/privacy}",
      "received_events_url": "https://api.github.com/users/splittingred/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-08T21:02:42Z",
    "updated_at": "2017-08-08T21:03:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mehrdada Sure. I can take a look - my initial thoughts are that due to the way `GenericService.rpc_stub_class` works, we'd have to wrap the dynamic method definitions there in the intercept call to properly handle it across request types. That said, the Channel route might work as well, but I'll have to look further - most of the Ruby impl has the Channel code in the C extensions. Did either you or @apolcyn have any thoughts there? Happy to take a stab at it."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/321082050",
    "html_url": "https://github.com/grpc/grpc/pull/12100#issuecomment-321082050",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12100",
    "id": 321082050,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTA4MjA1MA==",
    "user": {
      "login": "mehrdada",
      "id": 900411,
      "node_id": "MDQ6VXNlcjkwMDQxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/900411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mehrdada",
      "html_url": "https://github.com/mehrdada",
      "followers_url": "https://api.github.com/users/mehrdada/followers",
      "following_url": "https://api.github.com/users/mehrdada/following{/other_user}",
      "gists_url": "https://api.github.com/users/mehrdada/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mehrdada/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mehrdada/subscriptions",
      "organizations_url": "https://api.github.com/users/mehrdada/orgs",
      "repos_url": "https://api.github.com/users/mehrdada/repos",
      "events_url": "https://api.github.com/users/mehrdada/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mehrdada/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-08T21:07:08Z",
    "updated_at": "2017-08-08T21:07:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "@splittingred I'd like to defer to @apolcyn on this one, since I don't grok Ruby per se. IMO, in abstract, language-agnostic terms, there should be a way to construct an \"InterceptedChannel\" from a Channel that you would then create a Stub on top of. This way, you can have a potentially different set of interceptors operating on different Stubs."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/321150360",
    "html_url": "https://github.com/grpc/grpc/pull/12100#issuecomment-321150360",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12100",
    "id": 321150360,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTE1MDM2MA==",
    "user": {
      "login": "apolcyn",
      "id": 9566254,
      "node_id": "MDQ6VXNlcjk1NjYyNTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9566254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apolcyn",
      "html_url": "https://github.com/apolcyn",
      "followers_url": "https://api.github.com/users/apolcyn/followers",
      "following_url": "https://api.github.com/users/apolcyn/following{/other_user}",
      "gists_url": "https://api.github.com/users/apolcyn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apolcyn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apolcyn/subscriptions",
      "organizations_url": "https://api.github.com/users/apolcyn/orgs",
      "repos_url": "https://api.github.com/users/apolcyn/repos",
      "events_url": "https://api.github.com/users/apolcyn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apolcyn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-09T04:36:23Z",
    "updated_at": "2017-08-09T04:36:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "\r\nShould we add client-side interceptors, I'm not exactly sure what we'd want out of them (e.g., per-message intercepts or per-call intercepts?). \r\n\r\nIf we are going to do add them though, then indeed it might make sense to add them in the same PR as server interceptors if they're working together at all. And in that case the `GenericService.rpc_stub_class` seems to me like it has direct access to the input and return values of all of the different RPCs.\r\n\r\nBut what I'm mostly wondering right now is:\r\n\r\n* should interceptors have access to <i>messages</i>, or just RPC's and their \"call objects\"\r\n* should server-side interceptors have the same access to the `active call` that handlers do - e.g., should they be allowed to do things like sending initial metadata.\r\n\r\nA design of interceptors for other languages should be documented soon. It might be useful to wait for that to compare this API to other languages."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/321899264",
    "html_url": "https://github.com/grpc/grpc/pull/12100#issuecomment-321899264",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12100",
    "id": 321899264,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTg5OTI2NA==",
    "user": {
      "login": "splittingred",
      "id": 233334,
      "node_id": "MDQ6VXNlcjIzMzMzNA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/233334?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/splittingred",
      "html_url": "https://github.com/splittingred",
      "followers_url": "https://api.github.com/users/splittingred/followers",
      "following_url": "https://api.github.com/users/splittingred/following{/other_user}",
      "gists_url": "https://api.github.com/users/splittingred/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/splittingred/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/splittingred/subscriptions",
      "organizations_url": "https://api.github.com/users/splittingred/orgs",
      "repos_url": "https://api.github.com/users/splittingred/repos",
      "events_url": "https://api.github.com/users/splittingred/events{/privacy}",
      "received_events_url": "https://api.github.com/users/splittingred/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-11T19:29:08Z",
    "updated_at": "2017-08-11T20:11:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Should we add client-side interceptors, I'm not exactly sure what we'd want out of them (e.g., per-message intercepts or per-call intercepts?).\r\n\r\nIn my experience, we've used them elsewhere to:\r\n\r\n* Propagate the request context, which is useful for systems like [linkerd](https://linkerd.iuo)/[envoy](https://lyft.github.io/envoy/)\r\n* Measure client calls to grpc services via [statsd](https://github.com/Etsy/statsd)\r\n* Implement spans for distributed tracing, a la [zipkin](http://zipkin.io/)\r\n\r\n> If we are going to do add them though, then indeed it might make sense to add them in the same PR as server interceptors if they're working together at all. And in that case the GenericService.rpc_stub_class seems to me like it has direct access to the input and return values of all of the different RPCs.\r\n\r\nThat was my initial thought, though I understand that the java (and other) clients use the channel for client interception.\r\n\r\n> should interceptors have access to messages, or just RPC's and their \"call objects\"\r\n\r\nIMO, yes - at least at a read-only level, as that can be used to determine stats key routing, auth, dynamic marshalling of domain objects into rpc messages, etc.\r\n\r\n> should server-side interceptors have the same access to the active call that handlers do - e.g., should they be allowed to do things like sending initial metadata.\r\n\r\nWe've used interceptors to inject metadata into the request, which is useful for scenarios I listed above.\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/321900406",
    "html_url": "https://github.com/grpc/grpc/pull/12100#issuecomment-321900406",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12100",
    "id": 321900406,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTkwMDQwNg==",
    "user": {
      "login": "mehrdada",
      "id": 900411,
      "node_id": "MDQ6VXNlcjkwMDQxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/900411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mehrdada",
      "html_url": "https://github.com/mehrdada",
      "followers_url": "https://api.github.com/users/mehrdada/followers",
      "following_url": "https://api.github.com/users/mehrdada/following{/other_user}",
      "gists_url": "https://api.github.com/users/mehrdada/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mehrdada/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mehrdada/subscriptions",
      "organizations_url": "https://api.github.com/users/mehrdada/orgs",
      "repos_url": "https://api.github.com/users/mehrdada/repos",
      "events_url": "https://api.github.com/users/mehrdada/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mehrdada/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-11T19:34:37Z",
    "updated_at": "2017-08-11T19:34:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "@splittingred I think I'm in agreement with all your design points, including at least read-only message access. The one I am implementing in C# looks similar: https://github.com/grpc/grpc/pull/12143 \r\nThe primary difference is I realized the equivalent to the Channel object is not exposed in the Ruby API at the moment, so perhaps the registration of interceptors should happen at Stub creation point or somewhere it makes more sense, if the Channel is not going to be publicized."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/321904561",
    "html_url": "https://github.com/grpc/grpc/pull/12100#issuecomment-321904561",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12100",
    "id": 321904561,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTkwNDU2MQ==",
    "user": {
      "login": "splittingred",
      "id": 233334,
      "node_id": "MDQ6VXNlcjIzMzMzNA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/233334?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/splittingred",
      "html_url": "https://github.com/splittingred",
      "followers_url": "https://api.github.com/users/splittingred/followers",
      "following_url": "https://api.github.com/users/splittingred/following{/other_user}",
      "gists_url": "https://api.github.com/users/splittingred/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/splittingred/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/splittingred/subscriptions",
      "organizations_url": "https://api.github.com/users/splittingred/orgs",
      "repos_url": "https://api.github.com/users/splittingred/repos",
      "events_url": "https://api.github.com/users/splittingred/events{/privacy}",
      "received_events_url": "https://api.github.com/users/splittingred/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-11T19:54:46Z",
    "updated_at": "2017-08-11T19:54:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "> The primary difference is I realized the equivalent to the Channel object is not exposed in the Ruby API at the moment, so perhaps the registration of interceptors should happen at Stub creation point or somewhere it makes more sense, if the Channel is not going to be publicized.\r\n\r\nYeah, this was my main issue as well (similarly in the PHP client). We could take the NodeJS approach, which is passing it through the client call (though I'm not a fan of having to specify an interceptor per-call), or instead maintain it in a client interceptor registry on the stub itself (my preference).\r\n\r\nI took a look at the same - specifically creating an `InterceptedChannel` object, but yes, you're right: there's no exposed `GRPC::Channel` object at the moment, and so I was overriding things in the C-bindings which felt dirty, as well as put this PR at risk of ballooning very quickly."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/321926645",
    "html_url": "https://github.com/grpc/grpc/pull/12100#issuecomment-321926645",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12100",
    "id": 321926645,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTkyNjY0NQ==",
    "user": {
      "login": "mehrdada",
      "id": 900411,
      "node_id": "MDQ6VXNlcjkwMDQxMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/900411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mehrdada",
      "html_url": "https://github.com/mehrdada",
      "followers_url": "https://api.github.com/users/mehrdada/followers",
      "following_url": "https://api.github.com/users/mehrdada/following{/other_user}",
      "gists_url": "https://api.github.com/users/mehrdada/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mehrdada/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mehrdada/subscriptions",
      "organizations_url": "https://api.github.com/users/mehrdada/orgs",
      "repos_url": "https://api.github.com/users/mehrdada/repos",
      "events_url": "https://api.github.com/users/mehrdada/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mehrdada/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-11T21:48:24Z",
    "updated_at": "2017-08-11T21:48:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "My preference is for per-stub over per-call."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/322238731",
    "html_url": "https://github.com/grpc/grpc/pull/12100#issuecomment-322238731",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12100",
    "id": 322238731,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjIzODczMQ==",
    "user": {
      "login": "splittingred",
      "id": 233334,
      "node_id": "MDQ6VXNlcjIzMzMzNA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/233334?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/splittingred",
      "html_url": "https://github.com/splittingred",
      "followers_url": "https://api.github.com/users/splittingred/followers",
      "following_url": "https://api.github.com/users/splittingred/following{/other_user}",
      "gists_url": "https://api.github.com/users/splittingred/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/splittingred/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/splittingred/subscriptions",
      "organizations_url": "https://api.github.com/users/splittingred/orgs",
      "repos_url": "https://api.github.com/users/splittingred/repos",
      "events_url": "https://api.github.com/users/splittingred/events{/privacy}",
      "received_events_url": "https://api.github.com/users/splittingred/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-14T16:28:50Z",
    "updated_at": "2017-08-14T16:28:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "@apolcyn @mehrdada I've added Client Interceptors and streamlined the Server Interceptors to have different handler points for each type of gRPC requests. Mind taking a look?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/322381270",
    "html_url": "https://github.com/grpc/grpc/pull/12100#issuecomment-322381270",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12100",
    "id": 322381270,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjM4MTI3MA==",
    "user": {
      "login": "apolcyn",
      "id": 9566254,
      "node_id": "MDQ6VXNlcjk1NjYyNTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9566254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apolcyn",
      "html_url": "https://github.com/apolcyn",
      "followers_url": "https://api.github.com/users/apolcyn/followers",
      "following_url": "https://api.github.com/users/apolcyn/following{/other_user}",
      "gists_url": "https://api.github.com/users/apolcyn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apolcyn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apolcyn/subscriptions",
      "organizations_url": "https://api.github.com/users/apolcyn/orgs",
      "repos_url": "https://api.github.com/users/apolcyn/repos",
      "events_url": "https://api.github.com/users/apolcyn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apolcyn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-15T05:34:34Z",
    "updated_at": "2017-08-15T06:03:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Yes, and it provides a clean interface to the registry of interceptors; you can easily deregister one as if it were a Hash: server.interceptors[:test] = nil, or change it by assigning a new interceptor to the same key. I took this approach with the registry as a Hash is generally the easiest way to ensure uniqueness for interceptors within it, while providing a interface that Ruby developers would be automatically familiar with. Happy to change if we feel that's not a good idea.\r\n\r\nPersonally, I would favor an interceptor-registration scheme (on both the client and the server), that only allows pre-configuring interceptors:\r\n* before the server has started, (before `RpcServer#run` is called`), on the server\r\n* upon client stub creation, (maybe within as a parameter to `ClientStub#new`)\r\n\r\n... with the interceptor registries of the client and server frozen from that point on.\r\n\r\nMostly I think it would simplify things by not having to think about the race conditions of active server configuration, and to keep the present one-time setup of the `ClientStub` (I think things like future forking support will likely want to take advantage of the `ClientStub`'s current single point of setup).\r\n\r\nStill we can take on that requirement if the active registration/de-registration is important.\r\n\r\nAnd please let me know your thoughts of such a more constricted API"
  }
]
