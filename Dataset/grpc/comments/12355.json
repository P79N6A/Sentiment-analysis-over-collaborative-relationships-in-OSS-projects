[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/327437430",
    "html_url": "https://github.com/grpc/grpc/issues/12355#issuecomment-327437430",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12355",
    "id": 327437430,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzQzNzQzMA==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-06T10:03:06Z",
    "updated_at": "2017-09-06T10:03:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "On hard server shutdown (server,KillAsync()) all pending calls will be cancelled, which will result in cancelling all their active operations.\r\n\r\nFor soft server shutdown (server.ShutdownAsync()), all existing calls will continue to be handled normally but no new calls will be accepted."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/332539969",
    "html_url": "https://github.com/grpc/grpc/issues/12355#issuecomment-332539969",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12355",
    "id": 332539969,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjUzOTk2OQ==",
    "user": {
      "login": "jskeet",
      "id": 17011,
      "node_id": "MDQ6VXNlcjE3MDEx",
      "avatar_url": "https://avatars1.githubusercontent.com/u/17011?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jskeet",
      "html_url": "https://github.com/jskeet",
      "followers_url": "https://api.github.com/users/jskeet/followers",
      "following_url": "https://api.github.com/users/jskeet/following{/other_user}",
      "gists_url": "https://api.github.com/users/jskeet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jskeet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jskeet/subscriptions",
      "organizations_url": "https://api.github.com/users/jskeet/orgs",
      "repos_url": "https://api.github.com/users/jskeet/repos",
      "events_url": "https://api.github.com/users/jskeet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jskeet/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-27T14:29:29Z",
    "updated_at": "2017-09-27T14:29:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've just run into this from a client-side perspective. Not supporting cancellation for an async call that can block for arbitrary amounts of time is *really* unfortunate IMO.\r\n\r\nIt also makes it impossible to use cleanly with a lot of the LINQ support in System.Interactive.Async. The situation I have is that I'd like to wrap the `IAsyncStreamReader<T>` (which derives from `IAsyncEnumerator<T>` in an `IAsyncEnumerable<T>` so that I can use `Select`, `Where` etc. I can perform the wrapping easily with `AsyncEnumerable.Create`, but the core of Rx passes a cancellation token to `MoveNext` even if the caller doesn't, so that if the iterator is disposed, any current `MoveNext()` call can be cancelled. Obviously, this doesn't work with gRPC.\r\n\r\nI understand the reasoning behind \"If you want to cancel the read, cancel the whole call\" - but the piece of code responsible for the overall call isn't necessarily the same code that's responsible for each call to MoveNext.\r\n\r\nI think it would be much cleaner if the whole call were automatically cancelled if the cancellation token passed to `MoveNext()` were cancelled. (And yes, `MoveNext()` would still fail if the cancellation token passed to the original call were cancelled, too.)"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/332540205",
    "html_url": "https://github.com/grpc/grpc/issues/12355#issuecomment-332540205",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12355",
    "id": 332540205,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjU0MDIwNQ==",
    "user": {
      "login": "jskeet",
      "id": 17011,
      "node_id": "MDQ6VXNlcjE3MDEx",
      "avatar_url": "https://avatars1.githubusercontent.com/u/17011?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jskeet",
      "html_url": "https://github.com/jskeet",
      "followers_url": "https://api.github.com/users/jskeet/followers",
      "following_url": "https://api.github.com/users/jskeet/following{/other_user}",
      "gists_url": "https://api.github.com/users/jskeet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jskeet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jskeet/subscriptions",
      "organizations_url": "https://api.github.com/users/jskeet/orgs",
      "repos_url": "https://api.github.com/users/jskeet/repos",
      "events_url": "https://api.github.com/users/jskeet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jskeet/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-27T14:30:17Z",
    "updated_at": "2017-09-27T14:30:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "Relevant Rx code: https://github.com/Reactive-Extensions/Rx.NET/blob/96ecc4309716813ff6479601fdf68100e18e2dce/Ix.NET/Source/System.Interactive.Async/AsyncIterator.cs#L35\r\n\r\nI *may* be able to work around all of this using linked token sources, but it's going to be really painful to do, and would be better done in gRPC, I think."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/334133899",
    "html_url": "https://github.com/grpc/grpc/issues/12355#issuecomment-334133899",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12355",
    "id": 334133899,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDEzMzg5OQ==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-04T12:04:36Z",
    "updated_at": "2017-10-04T12:04:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "I will look into the possibility of allowing a cancellable token as MoveNext argument and cancelling the entire call if MoveNext's cancellationToken gets cancelled.  "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/339902533",
    "html_url": "https://github.com/grpc/grpc/issues/12355#issuecomment-339902533",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/12355",
    "id": 339902533,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTkwMjUzMw==",
    "user": {
      "login": "jtattermusch",
      "id": 9939684,
      "node_id": "MDQ6VXNlcjk5Mzk2ODQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9939684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtattermusch",
      "html_url": "https://github.com/jtattermusch",
      "followers_url": "https://api.github.com/users/jtattermusch/followers",
      "following_url": "https://api.github.com/users/jtattermusch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtattermusch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtattermusch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtattermusch/subscriptions",
      "organizations_url": "https://api.github.com/users/jtattermusch/orgs",
      "repos_url": "https://api.github.com/users/jtattermusch/repos",
      "events_url": "https://api.github.com/users/jtattermusch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtattermusch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-27T08:05:00Z",
    "updated_at": "2017-10-27T08:05:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "Support has been added in #12822."
  }
]
