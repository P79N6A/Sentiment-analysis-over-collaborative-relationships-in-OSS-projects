[
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/285209507",
    "html_url": "https://github.com/grpc/grpc/issues/10035#issuecomment-285209507",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10035",
    "id": 285209507,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTIwOTUwNw==",
    "user": {
      "login": "apolcyn",
      "id": 9566254,
      "node_id": "MDQ6VXNlcjk1NjYyNTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9566254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apolcyn",
      "html_url": "https://github.com/apolcyn",
      "followers_url": "https://api.github.com/users/apolcyn/followers",
      "following_url": "https://api.github.com/users/apolcyn/following{/other_user}",
      "gists_url": "https://api.github.com/users/apolcyn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apolcyn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apolcyn/subscriptions",
      "organizations_url": "https://api.github.com/users/apolcyn/orgs",
      "repos_url": "https://api.github.com/users/apolcyn/repos",
      "events_url": "https://api.github.com/users/apolcyn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apolcyn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-08T23:56:13Z",
    "updated_at": "2017-03-08T23:56:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "> At DigitalOcean we are using gRPC fairly heavily for internal services. While the majority of those services are written in go, we have a couple of core rails monoliths that as a course of necessity we've integrated with our gRPC servers. We've been seeing significantly worse performance with our Ruby clients than our go ones, and so I've been doing some investigation.\r\n\r\nThe large performance disparity between ruby and go is definitely going to be expected. More performance effort is going into java/c#/c++/go than ruby, but these languages also appear to much higher performance potential.\r\n\r\nFYI we have some small message benchmarks that show some comparisons between grpc language libraries in\r\nhttps://performance-dot-grpc-testing.appspot.com/explore?dashboard=5652536396611584. For ruby comparisons, \"Streaming secure throughput QPS (8 core client to 8 core server)\" and \"Unary secure ping pong median latency - Language comparison (in microsec)\" are probably relevant.\r\n\r\nThese benchmarks aren't entirely apples to apples: ruby has only 1000 total outstanding requests while c#/go/java/c++ use 6400 outstanding requests on the server - but note that the scaling between them shows c#/go/java/c++ much greater than ruby. (e.g., with about 6.4 times the number of outstanding calls, c# gets ~40x QPS as ruby).\r\n\r\n> rb_completion_queue_pluck was taking the majority of execution time\r\n\r\nThis is for the most part expected, the basic model is that whenever ruby is making a grpc call, it loses the GIL and calls into the grpc C-library, during this time it repeatedly calls into the C-core library to complete its request (currently with a 20ms timeout on each call).\r\n\r\n> Ruby gRPC client seems to be around 15ms per request\r\n\r\nThis seems unexpectedly high with network latency < 1ms. What are the types/message sizes of the grpc calls? Is this time not just being taken up on the server? Also are the calls all sharing the same client stub? \r\n\r\nIn general a larger redesign is probably needed in order for ruby to be in the same ballpark as the c++/go/java/c# libraries, at least in QPS, but the 15ms per call with 1ms latency seems a bit strange. It might be helpful if there's an example client that reproduces.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/285212075",
    "html_url": "https://github.com/grpc/grpc/issues/10035#issuecomment-285212075",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10035",
    "id": 285212075,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTIxMjA3NQ==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-09T00:10:14Z",
    "updated_at": "2017-03-09T00:10:14Z",
    "author_association": "MEMBER",
    "body": "I would like to point out that if you look at the latency benchmark linked above, you can see that our Ruby tests routinely measure an average call latency of about 500 microseconds, so your average latency of 15+ milliseconds is far removed from our own observations.\r\n\r\nI would also like to note that the repeated calls to `grpc_completion_queue_pluck` are in a tight loop, without any intervening GVL acquisitions. The overhead of doing that should be negligible compared to the 20ms timeout per call."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/285212314",
    "html_url": "https://github.com/grpc/grpc/issues/10035#issuecomment-285212314",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10035",
    "id": 285212314,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTIxMjMxNA==",
    "user": {
      "login": "samphippen",
      "id": 96662,
      "node_id": "MDQ6VXNlcjk2NjYy",
      "avatar_url": "https://avatars1.githubusercontent.com/u/96662?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/samphippen",
      "html_url": "https://github.com/samphippen",
      "followers_url": "https://api.github.com/users/samphippen/followers",
      "following_url": "https://api.github.com/users/samphippen/following{/other_user}",
      "gists_url": "https://api.github.com/users/samphippen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/samphippen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/samphippen/subscriptions",
      "organizations_url": "https://api.github.com/users/samphippen/orgs",
      "repos_url": "https://api.github.com/users/samphippen/repos",
      "events_url": "https://api.github.com/users/samphippen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/samphippen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-09T00:11:33Z",
    "updated_at": "2017-03-09T00:11:33Z",
    "author_association": "NONE",
    "body": "Just for my clarity of understanding: does each `grpc_completion_queue_pluck` call result in a network operation?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/285215914",
    "html_url": "https://github.com/grpc/grpc/issues/10035#issuecomment-285215914",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10035",
    "id": 285215914,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTIxNTkxNA==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-09T00:31:39Z",
    "updated_at": "2017-03-09T00:31:39Z",
    "author_association": "MEMBER",
    "body": "No. Each start_batch call initiates a fixed set of operations; for the most part, a `SEND_*` operation initiates a network write, and a `RECV_*` operation initiates a network read. `grpc_completion_queue_pluck` may cause new reads and writes (e.g. if a TCP read finishes, but more more data is expected, new TCP reads will be started), but for the most part, `grpc_completion_queue_pluck` will simply wait for network events."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/285216903",
    "html_url": "https://github.com/grpc/grpc/issues/10035#issuecomment-285216903",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10035",
    "id": 285216903,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTIxNjkwMw==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-09T00:37:33Z",
    "updated_at": "2017-03-09T00:37:33Z",
    "author_association": "MEMBER",
    "body": "More to the point, we call `grpc_completion_queue_pluck` with a timeout repeatedly until it returns a non-TIMEOUT event. This should be functionally identical to calling `grpc_completion_queue_pluck` once without a timeout."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/287900405",
    "html_url": "https://github.com/grpc/grpc/issues/10035#issuecomment-287900405",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10035",
    "id": 287900405,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzkwMDQwNQ==",
    "user": {
      "login": "blowmage",
      "id": 730,
      "node_id": "MDQ6VXNlcjczMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blowmage",
      "html_url": "https://github.com/blowmage",
      "followers_url": "https://api.github.com/users/blowmage/followers",
      "following_url": "https://api.github.com/users/blowmage/following{/other_user}",
      "gists_url": "https://api.github.com/users/blowmage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blowmage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blowmage/subscriptions",
      "organizations_url": "https://api.github.com/users/blowmage/orgs",
      "repos_url": "https://api.github.com/users/blowmage/repos",
      "events_url": "https://api.github.com/users/blowmage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blowmage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-20T21:15:29Z",
    "updated_at": "2017-03-20T21:15:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Can we get an update on this?"
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/287907922",
    "html_url": "https://github.com/grpc/grpc/issues/10035#issuecomment-287907922",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10035",
    "id": 287907922,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzkwNzkyMg==",
    "user": {
      "login": "murgatroid99",
      "id": 961599,
      "node_id": "MDQ6VXNlcjk2MTU5OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/961599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murgatroid99",
      "html_url": "https://github.com/murgatroid99",
      "followers_url": "https://api.github.com/users/murgatroid99/followers",
      "following_url": "https://api.github.com/users/murgatroid99/following{/other_user}",
      "gists_url": "https://api.github.com/users/murgatroid99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murgatroid99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murgatroid99/subscriptions",
      "organizations_url": "https://api.github.com/users/murgatroid99/orgs",
      "repos_url": "https://api.github.com/users/murgatroid99/repos",
      "events_url": "https://api.github.com/users/murgatroid99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murgatroid99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-20T21:44:47Z",
    "updated_at": "2017-03-20T21:44:47Z",
    "author_association": "MEMBER",
    "body": "One thing I just noticed: the trace above shows that a lot of time is spent in `completion_queue_next` before the server starts processing the request, but it returns almost immediately after the server finishes processing the request. I would normally expect something like that to happen with the first request after the client is created, because that's when gRPC does the TCP handshake, the TLS handshake, the HTTP2 connection establishment, and possibly other connection startup work. But all subsequent requests from the same client should not have that overhead.\r\n\r\nDoes that pattern occur with all calls? Do you reuse client objects for subsequent requests? If tail latency is a problem, it may be a good idea to just force early connection establishment by making a dummy call with each client you create."
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/288054765",
    "html_url": "https://github.com/grpc/grpc/issues/10035#issuecomment-288054765",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10035",
    "id": 288054765,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODA1NDc2NQ==",
    "user": {
      "login": "samphippen",
      "id": 96662,
      "node_id": "MDQ6VXNlcjk2NjYy",
      "avatar_url": "https://avatars1.githubusercontent.com/u/96662?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/samphippen",
      "html_url": "https://github.com/samphippen",
      "followers_url": "https://api.github.com/users/samphippen/followers",
      "following_url": "https://api.github.com/users/samphippen/following{/other_user}",
      "gists_url": "https://api.github.com/users/samphippen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/samphippen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/samphippen/subscriptions",
      "organizations_url": "https://api.github.com/users/samphippen/orgs",
      "repos_url": "https://api.github.com/users/samphippen/repos",
      "events_url": "https://api.github.com/users/samphippen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/samphippen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-21T11:48:23Z",
    "updated_at": "2017-03-21T11:48:23Z",
    "author_association": "NONE",
    "body": "Hi!\r\n\r\nYeah, we worked out that newing up a connection on every request was the cause:\r\n\r\n![image](https://cloud.githubusercontent.com/assets/96662/24146123/ab429c1a-0e0a-11e7-9faf-8a3e98953cdf.png)\r\n\r\nI think we can close this issue, as this looks like we're using the library in a pretty non-performant way. Thanks for helping everyone ^_^ "
  },
  {
    "url": "https://api.github.com/repos/grpc/grpc/issues/comments/288066295",
    "html_url": "https://github.com/grpc/grpc/issues/10035#issuecomment-288066295",
    "issue_url": "https://api.github.com/repos/grpc/grpc/issues/10035",
    "id": 288066295,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODA2NjI5NQ==",
    "user": {
      "login": "blowmage",
      "id": 730,
      "node_id": "MDQ6VXNlcjczMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blowmage",
      "html_url": "https://github.com/blowmage",
      "followers_url": "https://api.github.com/users/blowmage/followers",
      "following_url": "https://api.github.com/users/blowmage/following{/other_user}",
      "gists_url": "https://api.github.com/users/blowmage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blowmage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blowmage/subscriptions",
      "organizations_url": "https://api.github.com/users/blowmage/orgs",
      "repos_url": "https://api.github.com/users/blowmage/repos",
      "events_url": "https://api.github.com/users/blowmage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blowmage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-21T12:40:54Z",
    "updated_at": "2017-03-21T12:40:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Glad you got it working Sam!"
  }
]
