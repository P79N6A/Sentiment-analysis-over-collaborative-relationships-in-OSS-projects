{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"COLLABORATOR","body":"Hm, not only does KeyframeTrack call `optimize()` on itself when created, but AnimationClip calls `optimize()` on each track again when they're passed into its constructor? That does seem redundant... \ud83e\udd14","created_at":"2018-06-20T04:46:26.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14336#issuecomment-398622912","id":398622912,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14336","node_id":"MDEyOklzc3VlQ29tbWVudDM5ODYyMjkxMg==","updated_at":"2018-06-20T04:46:58.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/398622912","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":1,"author_association":"COLLABORATOR","body":"Yeah, optimization and validation in exporters rather than in importer\/viewer sounds more reasonable.\r\n\r\n> Hm, not only does KeyframeTrack call optimize() on itself when created, but AnimationClip calls optimize() on each track again when they're passed into its constructor? That does seem redundant... \ud83e\udd14\r\n\r\nI haven't looked into the code yet (I'm in the airport now!) but I'm wondering how the CPU time for `optimize()` will be if we remove redundancy.","created_at":"2018-06-20T07:06:38.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14336#issuecomment-398646709","id":398646709,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14336","node_id":"MDEyOklzc3VlQ29tbWVudDM5ODY0NjcwOQ==","updated_at":"2018-06-20T07:07:03.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/398646709","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":2,"author_association":"CONTRIBUTOR","body":"Unless there is a valid reason to call `optimize` more than once on the same instance, wouldn't it be better to just set an `isOptimized`-flag once an instance is optimized? On consecutive calls to `optimize`, it just sees if the flag is set and aborts immediately. \r\n\r\nThat way we won't have breaking changes in the API, while still removing the redundancy.\r\n","created_at":"2018-06-20T09:35:30.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14336#issuecomment-398687487","id":398687487,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14336","node_id":"MDEyOklzc3VlQ29tbWVudDM5ODY4NzQ4Nw==","updated_at":"2018-06-20T09:35:30.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/398687487","user":{"following_url":"https:\/\/api.github.com\/users\/haroldiedema\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/haroldiedema\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/567518?v=4","url":"https:\/\/api.github.com\/users\/haroldiedema","gists_url":"https:\/\/api.github.com\/users\/haroldiedema\/gists{\/gist_id}","html_url":"https:\/\/github.com\/haroldiedema","subscriptions_url":"https:\/\/api.github.com\/users\/haroldiedema\/subscriptions","node_id":"MDQ6VXNlcjU2NzUxOA==","repos_url":"https:\/\/api.github.com\/users\/haroldiedema\/repos","received_events_url":"https:\/\/api.github.com\/users\/haroldiedema\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/haroldiedema\/starred{\/owner}{\/repo}","site_admin":false,"login":"haroldiedema","type":"User","id":567518,"followers_url":"https:\/\/api.github.com\/users\/haroldiedema\/followers","organizations_url":"https:\/\/api.github.com\/users\/haroldiedema\/orgs"}},{"index":3,"author_association":"CONTRIBUTOR","body":"> wouldn't it be better to just set an isOptimized-flag once an instance is optimized?\r\n> That way we won't have breaking changes in the API, while still removing the redundancy. \r\n\r\n+1","created_at":"2018-06-20T10:06:10.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14336#issuecomment-398696294","id":398696294,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14336","node_id":"MDEyOklzc3VlQ29tbWVudDM5ODY5NjI5NA==","updated_at":"2018-06-20T10:06:10.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/398696294","user":{"following_url":"https:\/\/api.github.com\/users\/RemusMar\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/RemusMar\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/11772787?v=4","url":"https:\/\/api.github.com\/users\/RemusMar","gists_url":"https:\/\/api.github.com\/users\/RemusMar\/gists{\/gist_id}","html_url":"https:\/\/github.com\/RemusMar","subscriptions_url":"https:\/\/api.github.com\/users\/RemusMar\/subscriptions","node_id":"MDQ6VXNlcjExNzcyNzg3","repos_url":"https:\/\/api.github.com\/users\/RemusMar\/repos","received_events_url":"https:\/\/api.github.com\/users\/RemusMar\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/RemusMar\/starred{\/owner}{\/repo}","site_admin":false,"login":"RemusMar","type":"User","id":11772787,"followers_url":"https:\/\/api.github.com\/users\/RemusMar\/followers","organizations_url":"https:\/\/api.github.com\/users\/RemusMar\/orgs"}},{"index":4,"author_association":"CONTRIBUTOR","body":"I'm a bit weary of \"optimize\", I think importers\/exporters should take care of that, alternatively - it should be in the user domain. Validation only makes sense in the asset pipeline, I think, let's say deserialization code is justified to perform validation, but that's about it.","created_at":"2018-06-20T12:48:47.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14336#issuecomment-398736594","id":398736594,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14336","node_id":"MDEyOklzc3VlQ29tbWVudDM5ODczNjU5NA==","updated_at":"2018-06-20T12:48:47.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/398736594","user":{"following_url":"https:\/\/api.github.com\/users\/Usnul\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Usnul\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/5939063?v=4","url":"https:\/\/api.github.com\/users\/Usnul","gists_url":"https:\/\/api.github.com\/users\/Usnul\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Usnul","subscriptions_url":"https:\/\/api.github.com\/users\/Usnul\/subscriptions","node_id":"MDQ6VXNlcjU5MzkwNjM=","repos_url":"https:\/\/api.github.com\/users\/Usnul\/repos","received_events_url":"https:\/\/api.github.com\/users\/Usnul\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Usnul\/starred{\/owner}{\/repo}","site_admin":false,"login":"Usnul","type":"User","id":5939063,"followers_url":"https:\/\/api.github.com\/users\/Usnul\/followers","organizations_url":"https:\/\/api.github.com\/users\/Usnul\/orgs"}},{"index":5,"author_association":"COLLABORATOR","body":"> Unless there is a valid reason to call optimize more than once on the same instance, wouldn't it be better to just set an isOptimized-flag once an instance is optimized? \r\n\r\nThe problem is there are two redundancies: we call `optimize()` twice, but even one call would be pointless if the author has already optimized their animation, which we have no way of knowing (and most likely, they have not).\r\n\r\n> That way we won't have breaking changes in the API, while still removing the redundancy.\r\n\r\nI'm not suggesting any breaking API changes, just a way for an author to indicate their animation does not need to be optimized without forking KeyframeTrack.\r\n\r\n> I'm a bit weary of \"optimize\", I think importers\/exporters should take care of that, alternatively - it should be in the user domain.\r\n\r\nIt would be ideal for optimization to happen before animation is brought into three.js, but that's a much harder problem. In any case we should keep the `optimize()` method around, because using it and then storing the result with `clip.toJSON()` is a completely valid way of creating an optimization step.","created_at":"2018-06-20T14:23:20.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14336#issuecomment-398768003","id":398768003,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14336","node_id":"MDEyOklzc3VlQ29tbWVudDM5ODc2ODAwMw==","updated_at":"2018-06-20T14:23:20.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/398768003","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":6,"author_association":"CONTRIBUTOR","body":"> I think importers\/exporters should take care of that, alternatively - it should be in the user domain.\r\n\r\nThat's true, but there are millions of assets uploaded on thousands of servers.\r\nDo you expect them to be re-exported in the \"optimized\" way?\r\n\r\np.s.\r\nThe backwards compatibility is (should be) a critical factor in software development.","created_at":"2018-06-20T14:34:59.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14336#issuecomment-398772162","id":398772162,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14336","node_id":"MDEyOklzc3VlQ29tbWVudDM5ODc3MjE2Mg==","updated_at":"2018-06-20T14:34:59.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/398772162","user":{"following_url":"https:\/\/api.github.com\/users\/RemusMar\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/RemusMar\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/11772787?v=4","url":"https:\/\/api.github.com\/users\/RemusMar","gists_url":"https:\/\/api.github.com\/users\/RemusMar\/gists{\/gist_id}","html_url":"https:\/\/github.com\/RemusMar","subscriptions_url":"https:\/\/api.github.com\/users\/RemusMar\/subscriptions","node_id":"MDQ6VXNlcjExNzcyNzg3","repos_url":"https:\/\/api.github.com\/users\/RemusMar\/repos","received_events_url":"https:\/\/api.github.com\/users\/RemusMar\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/RemusMar\/starred{\/owner}{\/repo}","site_admin":false,"login":"RemusMar","type":"User","id":11772787,"followers_url":"https:\/\/api.github.com\/users\/RemusMar\/followers","organizations_url":"https:\/\/api.github.com\/users\/RemusMar\/orgs"}},{"index":7,"author_association":"CONTRIBUTOR","body":"@RemusMar  & @donmccurdy \r\n> That's true, but there are millions of assets uploaded on thousands of servers.\r\nDo you expect them to be re-exported in the \"optimized\" way?\r\n\r\n> It would be ideal for optimization to happen before animation is brought into three.js, but that's a much harder problem. \r\n\r\nAsset pipeline is something everyone has, some put more effort into it that others, some pipelines are completely custom while others are heavily standardized etc. I am not advocating for removal of validation and optimization methods - I think they are wonderful tools that serve real need. I believe that it's reasonable to assume that once an animation is loaded it is:\r\n* valid\r\n* expressed as desired (no optimization is wanted)\r\n\r\nWhen these assumptions are insufficient, i believe it is reasonable to offer the tools (`validate` and `optimize`) to the user in order to deal with such usecases.\r\n\r\n### Unrelated:\r\n@donmccurdy writeup on GOat was quite insightful, especially part about glTF exporter. They said they wrote 13k lines for that interactive experience which, when reading the writeup, indicated me think that there's a lot of room for improvement in glTF export as well as animation module and three.js in general. \r\n\r\n@RemusMar \r\n> The backwards compatibility is (should be) a critical factor in software development.\r\n\r\n\"Everything in moderation\". I don't subscribe to your view, backwards compatibility is critical for some applications and harmful for others. Language design is one example where backwards compatibility is a clear net negative for the user, take C++ as example, there are a fraction of a percent of a percent of C++ developers who can rightfully claim to know all of 'standard' C++ - thanks to backwards compatibility. Backwards compatibility is expensive, it bloats your code, it takes time, it leads to rigidity in your architecture which strongly opposes evolution and progress. Three.js is not backwards compatible, I enjoy migration and deprecation notices, but that's not backwards compatibility, I can't boot up my application written against three.js r50 in three.js r93 and expect it to work - it doesn't. There is something called \"semantic versioning\" which might be a good thing for people to familiarize themselves with, if not to practice religiously. \/rant","created_at":"2018-06-20T14:56:27.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14336#issuecomment-398781518","id":398781518,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14336","node_id":"MDEyOklzc3VlQ29tbWVudDM5ODc4MTUxOA==","updated_at":"2018-06-20T14:58:20.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/398781518","user":{"following_url":"https:\/\/api.github.com\/users\/Usnul\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Usnul\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/5939063?v=4","url":"https:\/\/api.github.com\/users\/Usnul","gists_url":"https:\/\/api.github.com\/users\/Usnul\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Usnul","subscriptions_url":"https:\/\/api.github.com\/users\/Usnul\/subscriptions","node_id":"MDQ6VXNlcjU5MzkwNjM=","repos_url":"https:\/\/api.github.com\/users\/Usnul\/repos","received_events_url":"https:\/\/api.github.com\/users\/Usnul\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Usnul\/starred{\/owner}{\/repo}","site_admin":false,"login":"Usnul","type":"User","id":5939063,"followers_url":"https:\/\/api.github.com\/users\/Usnul\/followers","organizations_url":"https:\/\/api.github.com\/users\/Usnul\/orgs"}},{"index":8,"author_association":"CONTRIBUTOR","body":">  I don't subscribe to your view, backwards compatibility is critical for some applications and harmful for others.\r\n\r\nThat's the problem with most of the juniors these days.\r\nIn their opinion, everything new is better.\r\nAs result: the internet is full of bloatware and spyware.","created_at":"2018-06-20T15:06:09.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14336#issuecomment-398785181","id":398785181,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14336","node_id":"MDEyOklzc3VlQ29tbWVudDM5ODc4NTE4MQ==","updated_at":"2018-06-20T15:06:09.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/398785181","user":{"following_url":"https:\/\/api.github.com\/users\/RemusMar\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/RemusMar\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/11772787?v=4","url":"https:\/\/api.github.com\/users\/RemusMar","gists_url":"https:\/\/api.github.com\/users\/RemusMar\/gists{\/gist_id}","html_url":"https:\/\/github.com\/RemusMar","subscriptions_url":"https:\/\/api.github.com\/users\/RemusMar\/subscriptions","node_id":"MDQ6VXNlcjExNzcyNzg3","repos_url":"https:\/\/api.github.com\/users\/RemusMar\/repos","received_events_url":"https:\/\/api.github.com\/users\/RemusMar\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/RemusMar\/starred{\/owner}{\/repo}","site_admin":false,"login":"RemusMar","type":"User","id":11772787,"followers_url":"https:\/\/api.github.com\/users\/RemusMar\/followers","organizations_url":"https:\/\/api.github.com\/users\/RemusMar\/orgs"}},{"index":9,"author_association":"CONTRIBUTOR","body":"If I love Microsoft for something is that I can play most of the DOS games (25 years old) on Windows 10.\r\nThat's a lesson of backwards compatibility for all the juniors and noobs.","created_at":"2018-06-20T15:09:41.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14336#issuecomment-398786464","id":398786464,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14336","node_id":"MDEyOklzc3VlQ29tbWVudDM5ODc4NjQ2NA==","updated_at":"2018-06-20T15:09:41.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/398786464","user":{"following_url":"https:\/\/api.github.com\/users\/RemusMar\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/RemusMar\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/11772787?v=4","url":"https:\/\/api.github.com\/users\/RemusMar","gists_url":"https:\/\/api.github.com\/users\/RemusMar\/gists{\/gist_id}","html_url":"https:\/\/github.com\/RemusMar","subscriptions_url":"https:\/\/api.github.com\/users\/RemusMar\/subscriptions","node_id":"MDQ6VXNlcjExNzcyNzg3","repos_url":"https:\/\/api.github.com\/users\/RemusMar\/repos","received_events_url":"https:\/\/api.github.com\/users\/RemusMar\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/RemusMar\/starred{\/owner}{\/repo}","site_admin":false,"login":"RemusMar","type":"User","id":11772787,"followers_url":"https:\/\/api.github.com\/users\/RemusMar\/followers","organizations_url":"https:\/\/api.github.com\/users\/RemusMar\/orgs"}},{"index":10,"author_association":"COLLABORATOR","body":"Let's start with one of three things:\r\n\r\n1. Provide a global opt-out.\r\n2. Provide a per-instance opt-out and allow passing that setting into every three.js loader\r\n3. Not call .optimize() and .validate() by default, let users call them manually.\r\n\r\nI would prefer (1).\r\n\r\n@RemusMar given that we currently call `optimize()` by default, do you consider (3) to be backward-incompatible? I think that is the only option on the table that potentially breaks back-compat.\r\n\r\n> ...there's a lot of room for improvement in glTF export as well as animation module and three.js in general.\r\n\r\nSure. Keep in mind that they evaluated FBX, JSON, and DAE and had even less success with those. But glTF is a new format and we're fully aware great support from exporters is going to take time, and that's a high priority for Khronos Group. The most effective way to improve things, other than PRs, is to give specific feedback in the appropriate repositories. I'm also working on other points mentioned in the article, not just this one.","created_at":"2018-06-20T15:27:03.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14336#issuecomment-398792437","id":398792437,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14336","node_id":"MDEyOklzc3VlQ29tbWVudDM5ODc5MjQzNw==","updated_at":"2018-06-20T15:27:03.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/398792437","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":11,"author_association":"CONTRIBUTOR","body":"Don,\r\n\r\nAll my assets are highly optimized from any point of view, but that's irrelevant.\r\nI was talking about millions of older assets stored everywhere.\r\n\r\n> I would prefer (1).\r\n\r\nThat's a good idea.","created_at":"2018-06-20T15:43:20.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14336#issuecomment-398797974","id":398797974,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14336","node_id":"MDEyOklzc3VlQ29tbWVudDM5ODc5Nzk3NA==","updated_at":"2018-06-20T15:43:20.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/398797974","user":{"following_url":"https:\/\/api.github.com\/users\/RemusMar\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/RemusMar\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/11772787?v=4","url":"https:\/\/api.github.com\/users\/RemusMar","gists_url":"https:\/\/api.github.com\/users\/RemusMar\/gists{\/gist_id}","html_url":"https:\/\/github.com\/RemusMar","subscriptions_url":"https:\/\/api.github.com\/users\/RemusMar\/subscriptions","node_id":"MDQ6VXNlcjExNzcyNzg3","repos_url":"https:\/\/api.github.com\/users\/RemusMar\/repos","received_events_url":"https:\/\/api.github.com\/users\/RemusMar\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/RemusMar\/starred{\/owner}{\/repo}","site_admin":false,"login":"RemusMar","type":"User","id":11772787,"followers_url":"https:\/\/api.github.com\/users\/RemusMar\/followers","organizations_url":"https:\/\/api.github.com\/users\/RemusMar\/orgs"}},{"index":12,"author_association":"COLLABORATOR","body":"a fourth idea:\r\n\r\nDefer automatic validation and optimization until the `clipAction` call, so that it still happens by default, but the user can opt out through the mixer without a global setting:\r\n\r\n```js\r\nvar track = new KeyframeTrack(...); \/\/ not optimized\r\nvar clip = new AnimationClip( 'run', [track] ); \/\/ not optimized\r\nvar action = mixer.clipAction( clip ); \/\/ validated and optimized\r\n\r\n\/\/ (a)\r\nmixer.autoValidate = false;\r\nmixer.autoOptimize = false;\r\nvar action = mixer.clipAction( clip ); \/\/ validation and optimization skipped\r\n\r\n\/\/ (b)\r\nvar action = mixer.clipAction( clip, null, false ); \/\/ validation and optimization skipped\r\n```\r\n\r\nThis requires an internal isOptimized\/isValidated flag on the clip so that creating multiple actions from one clip won't re-optimize it.\r\n\r\nI don't love that this modifies `clip` as a side effect of the method, so I'm still leaning toward (1) above, using a global opt-out.","created_at":"2018-06-20T16:00:13.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14336#issuecomment-398803522","id":398803522,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14336","node_id":"MDEyOklzc3VlQ29tbWVudDM5ODgwMzUyMg==","updated_at":"2018-06-20T16:01:08.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/398803522","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":13,"author_association":"CONTRIBUTOR","body":"How do you see the global opt-out working out in practice? Some assets may have been optimized, some have not.\r\n\r\nFor example : I'm building a map editor for my game. I know my assets are all optimized but I can't guarantee that the assets of the end users are. How are we to deal with this? \r\n\r\nI still prefer a call-once and store the state option, with the possibility of an opt-out for the situations where you have full control over the assets your 'engine' is loading. ","created_at":"2018-06-20T16:41:07.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14336#issuecomment-398816938","id":398816938,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14336","node_id":"MDEyOklzc3VlQ29tbWVudDM5ODgxNjkzOA==","updated_at":"2018-06-20T16:41:07.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/398816938","user":{"following_url":"https:\/\/api.github.com\/users\/haroldiedema\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/haroldiedema\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/567518?v=4","url":"https:\/\/api.github.com\/users\/haroldiedema","gists_url":"https:\/\/api.github.com\/users\/haroldiedema\/gists{\/gist_id}","html_url":"https:\/\/github.com\/haroldiedema","subscriptions_url":"https:\/\/api.github.com\/users\/haroldiedema\/subscriptions","node_id":"MDQ6VXNlcjU2NzUxOA==","repos_url":"https:\/\/api.github.com\/users\/haroldiedema\/repos","received_events_url":"https:\/\/api.github.com\/users\/haroldiedema\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/haroldiedema\/starred{\/owner}{\/repo}","site_admin":false,"login":"haroldiedema","type":"User","id":567518,"followers_url":"https:\/\/api.github.com\/users\/haroldiedema\/followers","organizations_url":"https:\/\/api.github.com\/users\/haroldiedema\/orgs"}},{"index":14,"author_association":"CONTRIBUTOR","body":"> I still prefer a call-once and store the state option, with the possibility of an opt-out for the situations where you have full control over the assets your 'engine' is loading.\r\n\r\nAnother good idea (and 100% backwards compatible)","created_at":"2018-06-20T16:54:14.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14336#issuecomment-398821433","id":398821433,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14336","node_id":"MDEyOklzc3VlQ29tbWVudDM5ODgyMTQzMw==","updated_at":"2018-06-20T16:54:14.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/398821433","user":{"following_url":"https:\/\/api.github.com\/users\/RemusMar\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/RemusMar\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/11772787?v=4","url":"https:\/\/api.github.com\/users\/RemusMar","gists_url":"https:\/\/api.github.com\/users\/RemusMar\/gists{\/gist_id}","html_url":"https:\/\/github.com\/RemusMar","subscriptions_url":"https:\/\/api.github.com\/users\/RemusMar\/subscriptions","node_id":"MDQ6VXNlcjExNzcyNzg3","repos_url":"https:\/\/api.github.com\/users\/RemusMar\/repos","received_events_url":"https:\/\/api.github.com\/users\/RemusMar\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/RemusMar\/starred{\/owner}{\/repo}","site_admin":false,"login":"RemusMar","type":"User","id":11772787,"followers_url":"https:\/\/api.github.com\/users\/RemusMar\/followers","organizations_url":"https:\/\/api.github.com\/users\/RemusMar\/orgs"}},{"index":15,"author_association":"COLLABORATOR","body":"How would you suggest implementing `possibility of an opt-out for the situations where you have full control over the assets`?","created_at":"2018-06-20T17:10:18.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14336#issuecomment-398826410","id":398826410,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14336","node_id":"MDEyOklzc3VlQ29tbWVudDM5ODgyNjQxMA==","updated_at":"2018-06-20T17:10:18.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/398826410","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":16,"author_association":"CONTRIBUTOR","body":"@donmccurdy \r\nI believe you already gave a suggestion that I would personally be very happy with:\r\n\r\n```js\r\nlet action = mixer.clipAction(clip, null, false); \/\/ Skip validation & optimization.\r\nlet action = mixer.clipAction(clip, null, true); \/\/ Do validation & optimization.\r\n```\r\n\r\nHowever, I believe the default behavior should be `true` instead of `false`. This way the behavior doesn't change compared with the current situation, whilst giving developers the freedom to skip this process since they know about their own assets.\r\n\r\nThe problem with changing this API as you initially proposed is that both settings are valid. Either skip validation and optimization (which would be the default from what I get from your suggestion) or enable it. The problem is that since both ways are valid, you can't post a warning message stating that the validation is skipped. This would cause console log clutter for no valid reason.\r\n\r\nSince you can't reliably warn the user about it (if that's even needed, but I would presume so for performance reasons), there would be a likely chance of people reporting issues due to - what they think  is - unexpected behavior.\r\n\r\nThat said, I would propose exactly what you did but swap the default behavior around.\r\n\r\nAfter I gave it some thought, I don't like the situation where `ClipAction` would rely on a \"global\" variable that would be declared on the `THREE` object, since this could potentially mess up module loading or cause the need of unwanted dependencies.\r\n","created_at":"2018-06-20T18:17:52.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14336#issuecomment-398847393","id":398847393,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14336","node_id":"MDEyOklzc3VlQ29tbWVudDM5ODg0NzM5Mw==","updated_at":"2018-06-20T18:20:23.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/398847393","user":{"following_url":"https:\/\/api.github.com\/users\/haroldiedema\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/haroldiedema\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/567518?v=4","url":"https:\/\/api.github.com\/users\/haroldiedema","gists_url":"https:\/\/api.github.com\/users\/haroldiedema\/gists{\/gist_id}","html_url":"https:\/\/github.com\/haroldiedema","subscriptions_url":"https:\/\/api.github.com\/users\/haroldiedema\/subscriptions","node_id":"MDQ6VXNlcjU2NzUxOA==","repos_url":"https:\/\/api.github.com\/users\/haroldiedema\/repos","received_events_url":"https:\/\/api.github.com\/users\/haroldiedema\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/haroldiedema\/starred{\/owner}{\/repo}","site_admin":false,"login":"haroldiedema","type":"User","id":567518,"followers_url":"https:\/\/api.github.com\/users\/haroldiedema\/followers","organizations_url":"https:\/\/api.github.com\/users\/haroldiedema\/orgs"}},{"index":17,"author_association":"COLLABORATOR","body":"Ok, thanks! I'd meant to say the default should be to optimize (i.e. keep current behavior) as well, and just provide an option \u2014 somewhere \u2014 to disable it, so I think we're on the same page.","created_at":"2018-06-20T18:22:31.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14336#issuecomment-398848810","id":398848810,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14336","node_id":"MDEyOklzc3VlQ29tbWVudDM5ODg0ODgxMA==","updated_at":"2018-06-20T18:22:31.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/398848810","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":18,"author_association":"CONTRIBUTOR","body":"@RemusMar\r\nWhen commenting on my expression of professional views, you wrote:\r\n> That's the problem with most of the juniors these days.\r\nIn their opinion, everything new is better.\r\nAs result: the internet is full of bloatware and spyware.\r\n\r\nAnd then immediately after \r\n> If I love Microsoft for something is that I can play most of the DOS games (25 years old) on Windows 10.\r\nThat's a lesson of backwards compatibility for all the juniors and noobs.\r\n\r\nLet this remain here for public record. I don\u2019t think I could add to this.","created_at":"2018-06-20T19:42:06.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14336#issuecomment-398872199","id":398872199,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14336","node_id":"MDEyOklzc3VlQ29tbWVudDM5ODg3MjE5OQ==","updated_at":"2018-06-20T19:42:06.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/398872199","user":{"following_url":"https:\/\/api.github.com\/users\/Usnul\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Usnul\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/5939063?v=4","url":"https:\/\/api.github.com\/users\/Usnul","gists_url":"https:\/\/api.github.com\/users\/Usnul\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Usnul","subscriptions_url":"https:\/\/api.github.com\/users\/Usnul\/subscriptions","node_id":"MDQ6VXNlcjU5MzkwNjM=","repos_url":"https:\/\/api.github.com\/users\/Usnul\/repos","received_events_url":"https:\/\/api.github.com\/users\/Usnul\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Usnul\/starred{\/owner}{\/repo}","site_admin":false,"login":"Usnul","type":"User","id":5939063,"followers_url":"https:\/\/api.github.com\/users\/Usnul\/followers","organizations_url":"https:\/\/api.github.com\/users\/Usnul\/orgs"}},{"index":19,"author_association":"CONTRIBUTOR","body":"On topic of compatibility. I don't know if we are talking about the same point here. Lets say that I had an invalid animation that I tried to load and it failed before, now it loads but doesn't work potentially - that's one issue and is a break from previous behaviour. When it comes to optimization - I don't see the argument, so if someone could explain it - I would appreciate it; the way I see it - behaviour is still the same. Sure, it might be running a bit or a lot slower, but functionally - it's the same.\r\n\r\n@haroldiedema \r\n> For example : I'm building a map editor for my game. I know my assets are all optimized but I can't guarantee that the assets of the end users are. How are we to deal with this?\r\n\r\nthat's a good example, and my answer would be - just run `.optimize` explicitly on any imported assets.\r\n\r\nMy objection stems from my experience with compilers, there's a strong need for correct functionality, but performance is typically an optional requirement, at least it has a gradient. You produce functionally correct code, and then you either optimize it as needed (online optimizations such as hot-spot) or you have special flags in static compilers, and even projects like https:\/\/github.com\/google\/souper which go above and beyond \"reasonable\" optimizations. This kind of approach puts trade-off between startup time and runtime performance into the hands of users instead of saying \"we know what's best for you, you're going to have it this way, and you're going to enjoy it\" - which, by the way, is also a totally valid strategy.","created_at":"2018-06-20T20:13:22.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14336#issuecomment-398881382","id":398881382,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14336","node_id":"MDEyOklzc3VlQ29tbWVudDM5ODg4MTM4Mg==","updated_at":"2018-06-20T20:13:22.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/398881382","user":{"following_url":"https:\/\/api.github.com\/users\/Usnul\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Usnul\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/5939063?v=4","url":"https:\/\/api.github.com\/users\/Usnul","gists_url":"https:\/\/api.github.com\/users\/Usnul\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Usnul","subscriptions_url":"https:\/\/api.github.com\/users\/Usnul\/subscriptions","node_id":"MDQ6VXNlcjU5MzkwNjM=","repos_url":"https:\/\/api.github.com\/users\/Usnul\/repos","received_events_url":"https:\/\/api.github.com\/users\/Usnul\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Usnul\/starred{\/owner}{\/repo}","site_admin":false,"login":"Usnul","type":"User","id":5939063,"followers_url":"https:\/\/api.github.com\/users\/Usnul\/followers","organizations_url":"https:\/\/api.github.com\/users\/Usnul\/orgs"}},{"index":20,"author_association":"CONTRIBUTOR","body":"@donmccurdy \r\n> Sure. Keep in mind that they evaluated FBX, JSON, and DAE and had even less success with those.\r\n\r\nSure, I feel like I say this rather too often: \"I didn't mean this as a negative criticism of [insert here]\".\r\nSo... I didn't mean this as a negative criticism of  GLTF . I think it's a wonderful format, the tooling is not up to scratch, and I have contributed my meager efforts towards improving that a bit myself. I do seem to rub people the wrong way a lot it seems, sorry about that.","created_at":"2018-06-20T20:20:44.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14336#issuecomment-398883544","id":398883544,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14336","node_id":"MDEyOklzc3VlQ29tbWVudDM5ODg4MzU0NA==","updated_at":"2018-06-20T20:20:44.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/398883544","user":{"following_url":"https:\/\/api.github.com\/users\/Usnul\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Usnul\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/5939063?v=4","url":"https:\/\/api.github.com\/users\/Usnul","gists_url":"https:\/\/api.github.com\/users\/Usnul\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Usnul","subscriptions_url":"https:\/\/api.github.com\/users\/Usnul\/subscriptions","node_id":"MDQ6VXNlcjU5MzkwNjM=","repos_url":"https:\/\/api.github.com\/users\/Usnul\/repos","received_events_url":"https:\/\/api.github.com\/users\/Usnul\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Usnul\/starred{\/owner}{\/repo}","site_admin":false,"login":"Usnul","type":"User","id":5939063,"followers_url":"https:\/\/api.github.com\/users\/Usnul\/followers","organizations_url":"https:\/\/api.github.com\/users\/Usnul\/orgs"}},{"index":21,"author_association":"COLLABORATOR","body":"Proposed fix in https:\/\/github.com\/mrdoob\/three.js\/pull\/14345.\r\n\r\n@Usnul thanks, yeah misunderstandings are easy in this format. Appreciate your feedback. \ud83d\ude42\r\n","created_at":"2018-06-21T19:12:51.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14336#issuecomment-399212523","id":399212523,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14336","node_id":"MDEyOklzc3VlQ29tbWVudDM5OTIxMjUyMw==","updated_at":"2018-06-21T19:12:51.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/399212523","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":22,"author_association":"COLLABORATOR","body":"Let me reopen this issue until #14385 will be merged.","created_at":"2018-07-20T05:27:51.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14336#issuecomment-406493018","id":406493018,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14336","node_id":"MDEyOklzc3VlQ29tbWVudDQwNjQ5MzAxOA==","updated_at":"2018-07-20T05:27:51.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/406493018","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":23,"author_association":"COLLABORATOR","body":"I still have one thing I'm not really sure.\r\n\r\nWhy do we validate\/optimize animation keyframe track on the fly as default while we generally don't validate\/optimize other assets(models, textures, and so on) and user inputs? A lot existing animation assets aren't validated\/optimized while a lot other assets are? Or any historical reasons?","created_at":"2018-07-20T05:37:23.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14336#issuecomment-406494297","id":406494297,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14336","node_id":"MDEyOklzc3VlQ29tbWVudDQwNjQ5NDI5Nw==","updated_at":"2018-07-20T06:29:34.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/406494297","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":24,"author_association":"COLLABORATOR","body":"The docs say `equivalent sequential keys ... are common in morph target sequences`.  I don't know much more than that, but Blender similarly overbakes animations commonly. I don't feel especially strongly about the default, but would like to provide some way to turn this optimization off.","created_at":"2018-07-20T06:11:52.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14336#issuecomment-406499143","id":406499143,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14336","node_id":"MDEyOklzc3VlQ29tbWVudDQwNjQ5OTE0Mw==","updated_at":"2018-07-20T06:12:01.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/406499143","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":25,"author_association":"COLLABORATOR","body":"It won't be productive to have a strict rule that all automatic optimization is bad... we should try to provide good defaults to users, and make any performance issues easy to understand and debug. I don't how often KeyframeTrack's automatic optimizations pay off, and because I don't know I was hoping to avoid changing it while providing the opt-out...\r\n\r\n\/cc @bhouston ","created_at":"2018-07-21T22:10:00.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14336#issuecomment-406826640","id":406826640,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14336","node_id":"MDEyOklzc3VlQ29tbWVudDQwNjgyNjY0MA==","updated_at":"2018-07-21T22:10:00.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/406826640","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":26,"author_association":"CONTRIBUTOR","body":"I think disabling it is find and requiring it to be called explicitly.  I put it in the contractor when I wrote keyframetrack because I wanted to make it easy to test.  So I ran it a lot and yeah it works well.  But yes, let's make it explicitly.  Should be a big deal.","created_at":"2018-07-22T13:07:09.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14336#issuecomment-406865347","id":406865347,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14336","node_id":"MDEyOklzc3VlQ29tbWVudDQwNjg2NTM0Nw==","updated_at":"2018-07-22T13:07:09.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/406865347","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":27,"author_association":"CONTRIBUTOR","body":"Should NOT be a big deal.","created_at":"2018-07-22T13:07:22.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14336#issuecomment-406865362","id":406865362,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14336","node_id":"MDEyOklzc3VlQ29tbWVudDQwNjg2NTM2Mg==","updated_at":"2018-07-22T13:07:22.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/406865362","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":28,"author_association":"COLLABORATOR","body":"I'm OK with removing the automatic optimization here then. Or any of my previous PRs. @takahirox preference?","created_at":"2018-07-22T18:40:02.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14336#issuecomment-406887555","id":406887555,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14336","node_id":"MDEyOklzc3VlQ29tbWVudDQwNjg4NzU1NQ==","updated_at":"2018-07-22T18:40:02.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/406887555","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":29,"author_association":"COLLABORATOR","body":"I agree with removing automatic optimization\/validation and asking users to explicitly call `.validate\/optimize()`.\r\n\r\nAnd I don't think we need `isValidated\/Optimized` flags yet if we remove them. As I mentioned in another thread, the flags can be inconsistent. We can start discussion the flags again when user request such optimization.","created_at":"2018-07-23T03:04:11.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14336#issuecomment-406926082","id":406926082,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14336","node_id":"MDEyOklzc3VlQ29tbWVudDQwNjkyNjA4Mg==","updated_at":"2018-07-23T03:14:44.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/406926082","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}}]}