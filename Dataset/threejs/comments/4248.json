{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"CONTRIBUTOR","body":"It gets used in the examples.\nhttps:\/\/github.com\/mrdoob\/three.js\/search?q=statusDomElement\nThis is the domElement that gets added when in the constructor of Loader, showstatus has been set.\n\nAltough I agree it needs some improvements. It would be best if the manager had a simple default loading DOM.\nThat is easily overwritten in the examples.\n","created_at":"2013-12-27T15:01:29.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/4248#issuecomment-31263315","id":31263315,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/4248","node_id":"MDEyOklzc3VlQ29tbWVudDMxMjYzMzE1","updated_at":"2013-12-27T15:01:29.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/31263315","user":{"following_url":"https:\/\/api.github.com\/users\/gero3\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/gero3\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/155535?v=4","url":"https:\/\/api.github.com\/users\/gero3","gists_url":"https:\/\/api.github.com\/users\/gero3\/gists{\/gist_id}","html_url":"https:\/\/github.com\/gero3","subscriptions_url":"https:\/\/api.github.com\/users\/gero3\/subscriptions","node_id":"MDQ6VXNlcjE1NTUzNQ==","repos_url":"https:\/\/api.github.com\/users\/gero3\/repos","received_events_url":"https:\/\/api.github.com\/users\/gero3\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/gero3\/starred{\/owner}{\/repo}","site_admin":false,"login":"gero3","type":"User","id":155535,"followers_url":"https:\/\/api.github.com\/users\/gero3\/followers","organizations_url":"https:\/\/api.github.com\/users\/gero3\/orgs"}},{"index":1,"author_association":"OWNER","body":"> So my proposal is to remove that functionality, and if it gets put back in, put it into the examples. Thoughts?\n\nSounds good to me :+1: \n","created_at":"2013-12-28T14:08:52.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/4248#issuecomment-31297170","id":31297170,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/4248","node_id":"MDEyOklzc3VlQ29tbWVudDMxMjk3MTcw","updated_at":"2013-12-28T14:08:52.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/31297170","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":2,"author_association":"CONTRIBUTOR","body":"How crazy would it be to look at using promises for loaders and the loading manager? I have a bunch of code going down this path and I'm wondering if it's worth pursuing. I'm not sure about dependencies and getting something that could be a self-contained promise implementation for use inside the three.js codebase. Promises seem to make things work out nice at the end of it. The end user would then have an onLoad callback, and a promise that could be used to interact with.\n","created_at":"2014-04-12T03:03:48.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/4248#issuecomment-40270137","id":40270137,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/4248","node_id":"MDEyOklzc3VlQ29tbWVudDQwMjcwMTM3","updated_at":"2014-04-12T03:03:48.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/40270137","user":{"following_url":"https:\/\/api.github.com\/users\/gregtatum\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/gregtatum\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1588648?v=4","url":"https:\/\/api.github.com\/users\/gregtatum","gists_url":"https:\/\/api.github.com\/users\/gregtatum\/gists{\/gist_id}","html_url":"https:\/\/github.com\/gregtatum","subscriptions_url":"https:\/\/api.github.com\/users\/gregtatum\/subscriptions","node_id":"MDQ6VXNlcjE1ODg2NDg=","repos_url":"https:\/\/api.github.com\/users\/gregtatum\/repos","received_events_url":"https:\/\/api.github.com\/users\/gregtatum\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/gregtatum\/starred{\/owner}{\/repo}","site_admin":false,"login":"gregtatum","type":"User","id":1588648,"followers_url":"https:\/\/api.github.com\/users\/gregtatum\/followers","organizations_url":"https:\/\/api.github.com\/users\/gregtatum\/orgs"}},{"index":3,"author_association":"OWNER","body":"I've yet to understand promises. Do you know of a page doing a good explanation. At the moment, I don't understand the difference between callbacks and promises.\n","created_at":"2014-04-12T03:43:32.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/4248#issuecomment-40270813","id":40270813,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/4248","node_id":"MDEyOklzc3VlQ29tbWVudDQwMjcwODEz","updated_at":"2014-04-12T03:43:32.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/40270813","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":4,"author_association":"CONTRIBUTOR","body":"http:\/\/www.html5rocks.com\/en\/tutorials\/es6\/promises\/\nhttp:\/\/promises-aplus.github.io\/promises-spec\/\nhttp:\/\/blog.parse.com\/2013\/01\/29\/whats-so-great-about-javascript-promises\/\n\nEssentially you can pass promises around, and you don't really have to care specifically when they are resolved. So you can load external shaders, images, models, etc, then use a promise to determine when to start the execution of your game logic or whatever else, only when the promised results have been resolved. It also helps get rid of callback hell and makes code easier to read since callbacks don't have to be crazily nested. It also makes error handling happen in a much more logical order.\n\nA bunch of examples using Q: https:\/\/github.com\/kriskowal\/q\/wiki\/Examples-Gallery\nHere's a simple chaining example using Q: https:\/\/gist.github.com\/jeffcogswell\/8257755\n","created_at":"2014-04-13T02:10:54.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/4248#issuecomment-40297609","id":40297609,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/4248","node_id":"MDEyOklzc3VlQ29tbWVudDQwMjk3NjA5","updated_at":"2014-04-13T02:10:54.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/40297609","user":{"following_url":"https:\/\/api.github.com\/users\/gregtatum\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/gregtatum\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1588648?v=4","url":"https:\/\/api.github.com\/users\/gregtatum","gists_url":"https:\/\/api.github.com\/users\/gregtatum\/gists{\/gist_id}","html_url":"https:\/\/github.com\/gregtatum","subscriptions_url":"https:\/\/api.github.com\/users\/gregtatum\/subscriptions","node_id":"MDQ6VXNlcjE1ODg2NDg=","repos_url":"https:\/\/api.github.com\/users\/gregtatum\/repos","received_events_url":"https:\/\/api.github.com\/users\/gregtatum\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/gregtatum\/starred{\/owner}{\/repo}","site_admin":false,"login":"gregtatum","type":"User","id":1588648,"followers_url":"https:\/\/api.github.com\/users\/gregtatum\/followers","organizations_url":"https:\/\/api.github.com\/users\/gregtatum\/orgs"}},{"index":5,"author_association":"CONTRIBUTOR","body":"Promises vs Callbacks is a pretty opinionated topic.\n\nPersonally I feel like callbacks are the simplest implementation, and if you want the Loader to provide a promise, you can convert the operation yourself using something like [q-wrap](https:\/\/github.com\/arikon\/q-wrap)\n\n[This](https:\/\/github.com\/arikon\/q-wrap\/blob\/master\/q-wrap.js#L35-L43) is how `q-wrap` does its magic by the way.\n","created_at":"2014-04-13T03:52:40.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/4248#issuecomment-40298945","id":40298945,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/4248","node_id":"MDEyOklzc3VlQ29tbWVudDQwMjk4OTQ1","updated_at":"2014-04-13T03:52:40.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/40298945","user":{"following_url":"https:\/\/api.github.com\/users\/kumavis\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/kumavis\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/1474978?v=4","url":"https:\/\/api.github.com\/users\/kumavis","gists_url":"https:\/\/api.github.com\/users\/kumavis\/gists{\/gist_id}","html_url":"https:\/\/github.com\/kumavis","subscriptions_url":"https:\/\/api.github.com\/users\/kumavis\/subscriptions","node_id":"MDQ6VXNlcjE0NzQ5Nzg=","repos_url":"https:\/\/api.github.com\/users\/kumavis\/repos","received_events_url":"https:\/\/api.github.com\/users\/kumavis\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/kumavis\/starred{\/owner}{\/repo}","site_admin":false,"login":"kumavis","type":"User","id":1474978,"followers_url":"https:\/\/api.github.com\/users\/kumavis\/followers","organizations_url":"https:\/\/api.github.com\/users\/kumavis\/orgs"}},{"index":6,"author_association":"CONTRIBUTOR","body":"Yeah, I think you're right about it being too opinionated a topic. I wrote some code going down this path, and left it for awhile. I'll just use the q-wrap in my own stuff. That looks like a handy tool. It seems like it would be trivial to implement.\n","created_at":"2014-04-13T15:07:07.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/4248#issuecomment-40309718","id":40309718,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/4248","node_id":"MDEyOklzc3VlQ29tbWVudDQwMzA5NzE4","updated_at":"2014-04-13T15:07:07.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/40309718","user":{"following_url":"https:\/\/api.github.com\/users\/gregtatum\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/gregtatum\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1588648?v=4","url":"https:\/\/api.github.com\/users\/gregtatum","gists_url":"https:\/\/api.github.com\/users\/gregtatum\/gists{\/gist_id}","html_url":"https:\/\/github.com\/gregtatum","subscriptions_url":"https:\/\/api.github.com\/users\/gregtatum\/subscriptions","node_id":"MDQ6VXNlcjE1ODg2NDg=","repos_url":"https:\/\/api.github.com\/users\/gregtatum\/repos","received_events_url":"https:\/\/api.github.com\/users\/gregtatum\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/gregtatum\/starred{\/owner}{\/repo}","site_admin":false,"login":"gregtatum","type":"User","id":1588648,"followers_url":"https:\/\/api.github.com\/users\/gregtatum\/followers","organizations_url":"https:\/\/api.github.com\/users\/gregtatum\/orgs"}},{"index":7,"author_association":"CONTRIBUTOR","body":"TIL: Promises.\n\nThanks for sharing at least. I see the appeal but because of the work I do I have to think about backwards compatibility and that companies I deal with, or their clients, may not have the most updated browsers (in fact they are normally at least a year behind) so I would be concerned about depending on a native implementation of Promises being present.\n","created_at":"2014-04-13T22:06:26.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/4248#issuecomment-40321487","id":40321487,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/4248","node_id":"MDEyOklzc3VlQ29tbWVudDQwMzIxNDg3","updated_at":"2014-04-13T22:06:26.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/40321487","user":{"following_url":"https:\/\/api.github.com\/users\/repsac\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/repsac\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1109289?v=4","url":"https:\/\/api.github.com\/users\/repsac","gists_url":"https:\/\/api.github.com\/users\/repsac\/gists{\/gist_id}","html_url":"https:\/\/github.com\/repsac","subscriptions_url":"https:\/\/api.github.com\/users\/repsac\/subscriptions","node_id":"MDQ6VXNlcjExMDkyODk=","repos_url":"https:\/\/api.github.com\/users\/repsac\/repos","received_events_url":"https:\/\/api.github.com\/users\/repsac\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/repsac\/starred{\/owner}{\/repo}","site_admin":false,"login":"repsac","type":"User","id":1109289,"followers_url":"https:\/\/api.github.com\/users\/repsac\/followers","organizations_url":"https:\/\/api.github.com\/users\/repsac\/orgs"}},{"index":8,"author_association":"CONTRIBUTOR","body":"- 100500 for using promises instead of callbacks\n","created_at":"2015-07-27T14:57:41.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/4248#issuecomment-125236659","id":125236659,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/4248","node_id":"MDEyOklzc3VlQ29tbWVudDEyNTIzNjY1OQ==","updated_at":"2015-07-27T14:57:41.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/125236659","user":{"following_url":"https:\/\/api.github.com\/users\/SET001\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/SET001\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/30506?v=4","url":"https:\/\/api.github.com\/users\/SET001","gists_url":"https:\/\/api.github.com\/users\/SET001\/gists{\/gist_id}","html_url":"https:\/\/github.com\/SET001","subscriptions_url":"https:\/\/api.github.com\/users\/SET001\/subscriptions","node_id":"MDQ6VXNlcjMwNTA2","repos_url":"https:\/\/api.github.com\/users\/SET001\/repos","received_events_url":"https:\/\/api.github.com\/users\/SET001\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/SET001\/starred{\/owner}{\/repo}","site_admin":false,"login":"SET001","type":"User","id":30506,"followers_url":"https:\/\/api.github.com\/users\/SET001\/followers","organizations_url":"https:\/\/api.github.com\/users\/SET001\/orgs"}},{"index":9,"author_association":"CONTRIBUTOR","body":"Isn't too hard to switch to promises in the calling code, using the existing callback system.\n\natm we use https:\/\/github.com\/taylorhakes\/promise-polyfill as a promise polyfill as its tiny\n\nWrap our texture loads in promises, with caching and cpu-side dumping post gpu load something like this:\n\n``` javascript\n\nvar texturePromises = {};\n\nTHREE.ImageUtils.crossOrigin = \"anonymous\";\n\nfunction SetTextureAsync( path, wrapping, uniform ) {\n    var promise;\n    var hashPath = path + '|' + wrapping;\n    if ( texturePromises[hashPath] ) {\n        promise = texturePromises[hashPath];\n    } else {\n        promise = LoadTextureAsync( path );\n        texturePromises[hashPath] = promise;\n    }\n    return promise.then( updateLoadStatus )\n            .then( function ( texture ) {\n                texture.wrapS = texture.wrapT = wrapping;\n                uniform.value = texture;\n            } );\n}\n\nfunction SetCompressedTextureAsync( path, wrapping, uniform ) {\n    var promise;\n    var hashPath = path + '|' + wrapping;\n    if ( texturePromises[hashPath] ) {\n        promise = texturePromises[hashPath];\n    } else {\n        promise = LoadCompressedTextureAsync( path );\n        texturePromises[hashPath] = promise;\n    }\n    return promise.then( updateLoadStatus )\n            .then( function ( texture ) {\n            texture.wrapS = texture.wrapT = wrapping;\n            uniform.value = texture;\n    } );\n}\n\nvar LoadTextureAsync = ( function () {\n    function ReleaseTexture( texture ) {\n        texture.image = null;\n        if ( texture.mipmaps ) {\n            texture.mipmaps = null;\n        }\n        texture.onUpdate = undefined;\n    }\n    return function LoadTextureAsync( texturePath ) {\n        return new Promise( function ( resolve, reject ) {\n            var texture = THREE.ImageUtils.loadTexture( pathTextures + texturePath, undefined, resolve, reject );\n            console.log( \"* Loading \" + texturePath );\n            texture.onUpdate = ReleaseTexture;\n        } );\n    }\n} )();\n\nvar LoadCompressedTextureAsync = ( function () {\n    var ddsLoader = new THREE.DDSLoader();\n    function ReleaseTexture( texture ) {\n        if ( texture.mipmaps ) {\n            texture.image = null;\n            texture.mipmaps = null;\n        }\n        texture.onUpdate = undefined;\n    }\n    return function LoadCompressedTextureAsync( texturePath ) {\n        return new Promise( function ( resolve, reject ) {\n            var texture = ddsLoader.load( pathTextures + texturePath + '.dds' + ext, resolve, undefined, reject );\n            console.log( \"* Loading \" + texturePath + '.dds' + ext );\n            texture.onUpdate = ReleaseTexture;\n        } );\n    }\n} )();\n```\n\nHave an item that holds all the start up promises:\n\n``` javascript\nvar startupResources = [];\n```\n\nCreate a bunch of texture uniforms and load the promises into the `startupResources`\n\n``` javascript\nvar textures = {};\n\nfunction downloadTextures() {\n    textures[\"tileTexture\"] = { type: \"t\", value: null };\n    startupResources.push( SetCompressedTextureAsync( \"terrain_r\", \n        THREE.ClampToEdgeWrapping, textures[\"tileTexture\"] ) );\n    ...\n}\n```\n\nHave an `animate` function that switches to `render` when the `loadStage` is `Running` \n\n`render` has its own call to `requestAnimationFrame` so essentially this function is dumped when everything is loaded.\n\n``` javascript\nfunction animate() {\n    if ( loadStage === loadStages.Running ) {\n        render();\n    } else if ( loadStage === loadStages.Loading ) {\n        tickLoader();\n        requestAnimationFrame( animate );\n    }\n}\n```\n\nIn the `init` it kicks off all the downloads which add them to `startupResources` as per `downloadTextures` above.\n\nWe then use `Promise.all( startupResources )` to wait until they all complete before switching `loadStage = loadStages.Running` which triggers the animate function to move to rendering rather than an animated loading screen\n\n``` javascript\nWorld.init = function init() {\n\n    if ( setupRenderer() !== true ) return false;\n\n    downloadExtraData();\n    downloadShaders();\n    downloadTextures();\n\n    animate();\n\n    startWorker();\n\n    Promise.all( startupResources )\n        .then( function () {\n            needsResize = true;\n            startupResources = texturePromises = undefined;\n            document.getElementById( \"loadingText\" ).style.display = \"none\";\n            document.getElementById( \"progressBar\" ).style.display = \"none\";\n            document.getElementById( \"logoLoading\" ).classList.add( \"disappear\" );\n            document.getElementById(\"topbar\").classList.remove( \"off\" );\n            setTimeout( function () {\n                document.getElementById( \"logoLoading\" ).style.display = \"none\";\n            }, 3000 );\n            console.info( \"All loaded\" );\n\n            SetUpModels();\n            SetupUIEvents();\n\n            loadStage = loadStages.Running;\n        } )\n        .catch( function ( e ) {\n            console.error( \"Error\", e );\n            loadStage = loadStages.Errored;\n        } );\n\n    return true;\n}\n```\n","created_at":"2015-07-27T15:27:11.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/4248#issuecomment-125244327","id":125244327,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/4248","node_id":"MDEyOklzc3VlQ29tbWVudDEyNTI0NDMyNw==","updated_at":"2015-07-27T15:45:31.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/125244327","user":{"following_url":"https:\/\/api.github.com\/users\/benaadams\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/benaadams\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/1142958?v=4","url":"https:\/\/api.github.com\/users\/benaadams","gists_url":"https:\/\/api.github.com\/users\/benaadams\/gists{\/gist_id}","html_url":"https:\/\/github.com\/benaadams","subscriptions_url":"https:\/\/api.github.com\/users\/benaadams\/subscriptions","node_id":"MDQ6VXNlcjExNDI5NTg=","repos_url":"https:\/\/api.github.com\/users\/benaadams\/repos","received_events_url":"https:\/\/api.github.com\/users\/benaadams\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/benaadams\/starred{\/owner}{\/repo}","site_admin":false,"login":"benaadams","type":"User","id":1142958,"followers_url":"https:\/\/api.github.com\/users\/benaadams\/followers","organizations_url":"https:\/\/api.github.com\/users\/benaadams\/orgs"}},{"index":10,"author_association":"CONTRIBUTOR","body":"If promises are too opinionated, perhaps loaders could at least use the common Node.js callback style i.e. `function(error, value) { }`? Then three.js wouldn't need to use promises, but folks could easily promisify loaders if they wanted to.\r\n\r\nCallback example:\r\n\r\n```js\r\nvar loader = new THREE.ImageLoader();\r\n\r\nloader.load('texture.png', function(error, image) {\r\n  if (error) {\r\n    \/\/ Do something with the error.\r\n  } else {\r\n    \/\/ Do something with the image.\r\n  }\r\n});\r\n```\r\n\r\n[Promisified](https:\/\/nodejs.org\/api\/util.html#util_util_promisify_original) example:\r\n\r\n```js\r\nvar util = require('util');\r\nvar loader = new THREE.ImageLoader();\r\n\r\nutil.promisify(loader.load)('texture.png')\r\n.then(function(image) {\r\n  \/\/ Do something with the image.\r\n})\r\n.catch(function(error) {\r\n  \/\/ Do something with the error.\r\n});\r\n```","created_at":"2017-10-01T23:57:40.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/4248#issuecomment-333416072","id":333416072,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/4248","node_id":"MDEyOklzc3VlQ29tbWVudDMzMzQxNjA3Mg==","updated_at":"2017-10-01T23:58:30.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/333416072","user":{"following_url":"https:\/\/api.github.com\/users\/lukehorvat\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/lukehorvat\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1034878?v=4","url":"https:\/\/api.github.com\/users\/lukehorvat","gists_url":"https:\/\/api.github.com\/users\/lukehorvat\/gists{\/gist_id}","html_url":"https:\/\/github.com\/lukehorvat","subscriptions_url":"https:\/\/api.github.com\/users\/lukehorvat\/subscriptions","node_id":"MDQ6VXNlcjEwMzQ4Nzg=","repos_url":"https:\/\/api.github.com\/users\/lukehorvat\/repos","received_events_url":"https:\/\/api.github.com\/users\/lukehorvat\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/lukehorvat\/starred{\/owner}{\/repo}","site_admin":false,"login":"lukehorvat","type":"User","id":1034878,"followers_url":"https:\/\/api.github.com\/users\/lukehorvat\/followers","organizations_url":"https:\/\/api.github.com\/users\/lukehorvat\/orgs"}},{"index":11,"author_association":"OWNER","body":"> If promises are too opinionated, perhaps loaders could at least use the common Node.js callback style i.e. `function(error, value) { }`?\r\n\r\nIs there a spec for that?","created_at":"2017-10-02T19:25:06.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/4248#issuecomment-333638345","id":333638345,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/4248","node_id":"MDEyOklzc3VlQ29tbWVudDMzMzYzODM0NQ==","updated_at":"2017-10-02T19:25:06.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/333638345","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":12,"author_association":"CONTRIBUTOR","body":"The closest I've found to a spec is [this](https:\/\/gist.github.com\/CrabDude\/10907185). And it is explained in the Node.js documentation [here](https:\/\/nodejs.org\/api\/errors.html#errors_node_js_style_callbacks).\r\n\r\nIt's just a Node.js convention, and pretty much every library that provides promisification (including ones that aren't tied to Node.js and work in the browser) follows this convention.\r\n\r\nYou can read more about it [here](http:\/\/thenodeway.io\/posts\/understanding-error-first-callbacks\/).","created_at":"2017-10-03T01:24:32.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/4248#issuecomment-333712119","id":333712119,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/4248","node_id":"MDEyOklzc3VlQ29tbWVudDMzMzcxMjExOQ==","updated_at":"2017-10-03T01:24:32.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/333712119","user":{"following_url":"https:\/\/api.github.com\/users\/lukehorvat\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/lukehorvat\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1034878?v=4","url":"https:\/\/api.github.com\/users\/lukehorvat","gists_url":"https:\/\/api.github.com\/users\/lukehorvat\/gists{\/gist_id}","html_url":"https:\/\/github.com\/lukehorvat","subscriptions_url":"https:\/\/api.github.com\/users\/lukehorvat\/subscriptions","node_id":"MDQ6VXNlcjEwMzQ4Nzg=","repos_url":"https:\/\/api.github.com\/users\/lukehorvat\/repos","received_events_url":"https:\/\/api.github.com\/users\/lukehorvat\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/lukehorvat\/starred{\/owner}{\/repo}","site_admin":false,"login":"lukehorvat","type":"User","id":1034878,"followers_url":"https:\/\/api.github.com\/users\/lukehorvat\/followers","organizations_url":"https:\/\/api.github.com\/users\/lukehorvat\/orgs"}},{"index":13,"author_association":"COLLABORATOR","body":"I've been promisifying the current loaders for quite a while now without issues. I don't think that they need to be refactored for this. ","created_at":"2017-10-03T01:32:42.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/4248#issuecomment-333713492","id":333713492,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/4248","node_id":"MDEyOklzc3VlQ29tbWVudDMzMzcxMzQ5Mg==","updated_at":"2017-10-03T01:32:42.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/333713492","user":{"following_url":"https:\/\/api.github.com\/users\/looeee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/looeee\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/5307958?v=4","url":"https:\/\/api.github.com\/users\/looeee","gists_url":"https:\/\/api.github.com\/users\/looeee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/looeee","subscriptions_url":"https:\/\/api.github.com\/users\/looeee\/subscriptions","node_id":"MDQ6VXNlcjUzMDc5NTg=","repos_url":"https:\/\/api.github.com\/users\/looeee\/repos","received_events_url":"https:\/\/api.github.com\/users\/looeee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/looeee\/starred{\/owner}{\/repo}","site_admin":false,"login":"looeee","type":"User","id":5307958,"followers_url":"https:\/\/api.github.com\/users\/looeee\/followers","organizations_url":"https:\/\/api.github.com\/users\/looeee\/orgs"}},{"index":14,"author_association":"CONTRIBUTOR","body":"Hi all, One thing that springs to my mind regarding Promises, is that they allow for ES6 async \/ await style coding, which can help to simplify highly asynchronous code in many cases.","created_at":"2017-10-03T23:22:21.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/4248#issuecomment-334007079","id":334007079,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/4248","node_id":"MDEyOklzc3VlQ29tbWVudDMzNDAwNzA3OQ==","updated_at":"2017-10-03T23:22:21.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/334007079","user":{"following_url":"https:\/\/api.github.com\/users\/satori99\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/satori99\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1762580?v=4","url":"https:\/\/api.github.com\/users\/satori99","gists_url":"https:\/\/api.github.com\/users\/satori99\/gists{\/gist_id}","html_url":"https:\/\/github.com\/satori99","subscriptions_url":"https:\/\/api.github.com\/users\/satori99\/subscriptions","node_id":"MDQ6VXNlcjE3NjI1ODA=","repos_url":"https:\/\/api.github.com\/users\/satori99\/repos","received_events_url":"https:\/\/api.github.com\/users\/satori99\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/satori99\/starred{\/owner}{\/repo}","site_admin":false,"login":"satori99","type":"User","id":1762580,"followers_url":"https:\/\/api.github.com\/users\/satori99\/followers","organizations_url":"https:\/\/api.github.com\/users\/satori99\/orgs"}},{"index":15,"author_association":"COLLABORATOR","body":"THREE.Loader no longer has any DOM\/status management code, so I think this issue can be closed? If we want to do anything different with promises vs callbacks that could be opened in a new issue.","created_at":"2017-12-27T02:51:42.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/4248#issuecomment-354041863","id":354041863,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/4248","node_id":"MDEyOklzc3VlQ29tbWVudDM1NDA0MTg2Mw==","updated_at":"2017-12-27T02:51:42.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/354041863","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":16,"author_association":"COLLABORATOR","body":"> If we want to do anything different with promises vs callbacks that could be opened in a new issue.\r\n\r\nYeah, sounds good. Let's close this one.","created_at":"2017-12-27T17:22:38.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/4248#issuecomment-354146257","id":354146257,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/4248","node_id":"MDEyOklzc3VlQ29tbWVudDM1NDE0NjI1Nw==","updated_at":"2017-12-27T17:22:38.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/354146257","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}}]}