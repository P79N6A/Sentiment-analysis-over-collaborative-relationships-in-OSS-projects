{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"OWNER","body":"I don't mind if we \"break\" things with this change. If anything breaks the user would only need to do `material.premultipliedAlpha = false`. After all, most users will likely want to have good looking transparencies+shines and a minority will want to disable premultipliedAlpha for specific effects.\n","created_at":"2016-03-01T15:47:59.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/8255#issuecomment-190778469","id":190778469,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8255","node_id":"MDEyOklzc3VlQ29tbWVudDE5MDc3ODQ2OQ==","updated_at":"2016-03-01T15:47:59.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/190778469","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":1,"author_association":"OWNER","body":"Do you agree @WestLangley?\n","created_at":"2016-03-01T15:49:19.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/8255#issuecomment-190778911","id":190778911,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8255","node_id":"MDEyOklzc3VlQ29tbWVudDE5MDc3ODkxMQ==","updated_at":"2016-03-01T15:49:19.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/190778911","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":2,"author_association":"COLLABORATOR","body":"I support @bhouston's improvement. but there are several things to consider...\n\nIn the renderer constructor, we set `renderer.premultipliedAlpha = true` by default. This tells the compositor, when it composites with the webpage, than the drawing buffer's RGB values have been premultiplied by alpha.\n\nThat means it is important that our shader output and blending modes are always set to always write premultiplied values into the drawing buffer.\n\nPreviously, we have used `NormalBlending` as the default for \"alpha blending\". This blending mode is correct as long as:\n1. `renderer.premultipliedAlpha = true` (the default)\n2. we always write premultiplied RGB values into the drawing buffer\n3. the output of the shader's RGB values are NOT premultiplied by alpha.\n\nNow, @bhouston has suggested that it is better to output RGB values from the shader that ARE premultiplied by alpha (see footnote 1). It is OK to do that, we just need to change the blending function. I have proposed `THREE.PremultipliedAlphaBlending`.\n\nThe blending mode `THREE.PremultipliedAlphaBlending` is correct as long as:\n1. `renderer.premultipliedAlpha = true` (the default)\n2. we always write premultiplied RGB values into the drawing buffer\n3. the output of the shader's RGB values ARE premultiplied by alpha.\n\nThe user's parameter settting have to be internally consistent. As far as which API to use, I am open, but I always prefer to limit the user's choices so it \"just works\". I know I differ from others in that opinion.\n\nHere are some more thoughts\/questions:\n1. Most users output non-premultiplied values from their `ShaderMaterial`, so we will have premultiply for `ShaderMaterial`, too.\n2. Does the Composer require non-premultiplied values in the render target?\n3. What about `AdditiveBlending`? What is the right formula?\n4. Perhaps just redefine `NormalBlending` mode to use the premultiplied formula, and always premultiply the user's shader output for them. (I think that is what I prefer, now.)\n\n---\n1. His reason is the shader's RBG values are clamped before blending with the drawing buffer, and it is better to clamp premultiplied values than to clamp non-premultiplied values.\n","created_at":"2016-03-01T16:48:28.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/8255#issuecomment-190806610","id":190806610,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8255","node_id":"MDEyOklzc3VlQ29tbWVudDE5MDgwNjYxMA==","updated_at":"2016-03-01T16:48:47.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/190806610","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":3,"author_association":"CONTRIBUTOR","body":"I'm actually not that picky about either mode.  I think that because material.premultipliedAlpha is available on a per-material basis, it is easy to enable it for the materials that support it, such as the built-in ones like Standard, Lambert, Phong, and to not enable it for others like ShaderMaterial.  This is actually how this PR works already.  There are no downsides to mixing premultipliedAlpha and non-premultipliedAlpha materials because what it writes to the render buffer in the end is the same, it just has different blending modes.  Clara.io actually only uses premultipliedAlpha for its PBR material while still using non-premultiplied for the Phong material.  No one notices this except that the PBR material generally looks better when transparent.\n","created_at":"2016-03-01T18:11:44.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/8255#issuecomment-190837926","id":190837926,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8255","node_id":"MDEyOklzc3VlQ29tbWVudDE5MDgzNzkyNg==","updated_at":"2016-03-01T18:11:44.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/190837926","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":4,"author_association":"OWNER","body":"> I think that because material.premultipliedAlpha is available on a per-material basis, it is easy to enable it for the materials that support it, such as the built-in ones like Standard, Lambert, Phong, and to not enable it for others like ShaderMaterial. This is actually how this PR works already.\n\nWe should then set `premultipliedAlpha` to `false` by default, but set it to `true` in the built in material constructors?\n","created_at":"2016-03-01T19:08:08.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/8255#issuecomment-190855382","id":190855382,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8255","node_id":"MDEyOklzc3VlQ29tbWVudDE5MDg1NTM4Mg==","updated_at":"2016-03-01T19:08:08.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/190855382","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":5,"author_association":"COLLABORATOR","body":"> Perhaps just redefine NormalBlending mode to use the premultiplied formula, and always premultiply the user's shader output for them.\n\nThis approach is the simplest, it will \"just work\", and it does not require a new material property or new blending mode. It will give @bhouston the behavior he wants, and it will be backwards compatible. It will also give @WestLangley what he wants -- fewer options to confuse the average user.\n\nUnless, of course, I am missing something...\n","created_at":"2016-03-01T19:40:12.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/8255#issuecomment-190868409","id":190868409,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8255","node_id":"MDEyOklzc3VlQ29tbWVudDE5MDg2ODQwOQ==","updated_at":"2016-03-01T19:40:12.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/190868409","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":6,"author_association":"CONTRIBUTOR","body":"The current approach in this PR is nearly identical to @WestLangley is proposing with the exception that it has a per-material premultipliedAlpha flag that can default to false for non-build-in materials.  What is nice about this hybrid approach is that it is fully backwards compatible with the hundreds of custom shaders.  People are not forced to adopt premultipliedAlpha when they update to the latest ThreeJS, --  feature which is likely to appreciated, especially because most people do not have transparent materials that will benefit from it.\n","created_at":"2016-03-01T20:35:47.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/8255#issuecomment-190890200","id":190890200,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8255","node_id":"MDEyOklzc3VlQ29tbWVudDE5MDg5MDIwMA==","updated_at":"2016-03-01T20:35:47.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/190890200","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":7,"author_association":"COLLABORATOR","body":"I've decided I don't like my suggestion, now, because in hindsight it was not a very good idea. : - )\n\nIn any event, I prefer @bhouston's #8245 PR over this one. A change I would recommend to #8245 is to set the default blending mode for the built-in shaders to be `THREE.PremultipliedAlphaBlending`, and remove the `#ifdef`s from `premultiplied_alpha_fragment.glsl`, as they are not needed.\n","created_at":"2016-03-01T22:04:26.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/8255#issuecomment-190926782","id":190926782,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8255","node_id":"MDEyOklzc3VlQ29tbWVudDE5MDkyNjc4Mg==","updated_at":"2016-03-01T22:04:26.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/190926782","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":8,"author_association":"OWNER","body":"I think I prefer this approach because it allows for more combinations. If it's a type of blending then we'll have to create `THREE.PremultipliedAdditiveBlending`, `THREE.PremultipliedSubtractiveBlending`, etc\n\nI'll merge this by now and see how it goes...\n","created_at":"2016-03-02T09:35:26.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/8255#issuecomment-191154670","id":191154670,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8255","node_id":"MDEyOklzc3VlQ29tbWVudDE5MTE1NDY3MA==","updated_at":"2016-03-02T09:35:26.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/191154670","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":9,"author_association":"OWNER","body":"Thanks guys!\n","created_at":"2016-03-02T09:35:34.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/8255#issuecomment-191154739","id":191154739,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8255","node_id":"MDEyOklzc3VlQ29tbWVudDE5MTE1NDczOQ==","updated_at":"2016-03-02T09:35:34.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/191154739","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":10,"author_association":"OWNER","body":"Hmm, I studied this a tiny bit more... I agree with @WestLangley. Reverting! \ud83d\ude05\n","created_at":"2016-03-02T09:44:22.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/8255#issuecomment-191158779","id":191158779,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8255","node_id":"MDEyOklzc3VlQ29tbWVudDE5MTE1ODc3OQ==","updated_at":"2016-03-02T09:44:22.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/191158779","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":11,"author_association":"OWNER","body":"> and remove the `#ifdef`s from `premultiplied_alpha_fragment.glsl`, as they are not needed.\n\nI would keep it by now, someone may want to change blending back to `NormalBlending` for whatever reason...\n","created_at":"2016-03-02T10:06:03.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/8255#issuecomment-191168034","id":191168034,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8255","node_id":"MDEyOklzc3VlQ29tbWVudDE5MTE2ODAzNA==","updated_at":"2016-03-02T10:06:03.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/191168034","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":12,"author_association":"OWNER","body":"Something that we need to keep in mind now is that if someone sets `opacity` to `0.5` and `transparent` is set to `false` the output color will be darker.\n\nShould we only do premultiplyAlpha when `transparent` is set to `true`?\n","created_at":"2016-03-02T10:27:12.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/8255#issuecomment-191173924","id":191173924,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8255","node_id":"MDEyOklzc3VlQ29tbWVudDE5MTE3MzkyNA==","updated_at":"2016-03-02T10:27:12.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/191173924","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":13,"author_association":"CONTRIBUTOR","body":"> Something that we need to keep in mind now is that if someone sets opacity to 0.5 and transparent is set to false the output color will be darker.\n> \n> Should we only do premultiplyAlpha when transparent is set to true?\n\nI'm okay with that.  I'm adding the other blending modes, subtractive, additive, multiply, to premultipliedAlpha now.\n","created_at":"2016-03-02T14:07:44.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/8255#issuecomment-191249975","id":191249975,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8255","node_id":"MDEyOklzc3VlQ29tbWVudDE5MTI0OTk3NQ==","updated_at":"2016-03-02T14:07:44.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/191249975","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":14,"author_association":"CONTRIBUTOR","body":"> Should we only do premultiplyAlpha when transparent is set to true?\n\nWe could actually drive material.transparent from material.blending -- basically if material.blending = THREE.NoBlending, then the material is not transparent, otherwise it is transparent.  That sort of makes sense to me?  That is sort of how it is implemented.  So I am basically proposing getting rid of the semi-duplication between material.blending and material.transparent.\n\n```\n        if ( material.transparent === true ) {\n\n            state.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha );\n\n        } else {\n\n            state.setBlending( THREE.NoBlending );\n\n        }\n```\n","created_at":"2016-03-02T14:51:50.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/8255#issuecomment-191268865","id":191268865,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8255","node_id":"MDEyOklzc3VlQ29tbWVudDE5MTI2ODg2NQ==","updated_at":"2016-03-02T14:51:50.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/191268865","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":15,"author_association":"CONTRIBUTOR","body":"There is actually the case where one can have material.transparent = true, and then material.blending = NoBlending, which is somewhat confusing.\n","created_at":"2016-03-02T14:53:16.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/8255#issuecomment-191269792","id":191269792,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8255","node_id":"MDEyOklzc3VlQ29tbWVudDE5MTI2OTc5Mg==","updated_at":"2016-03-02T14:53:16.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/191269792","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}}]}