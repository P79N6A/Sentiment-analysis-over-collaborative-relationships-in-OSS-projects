{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"CONTRIBUTOR","body":"```javascript\r\nvar cluster = new THREE.InstancedMesh( \t\t\t\t\t\t\r\n  geometry , \t\t\t\t\t\t\r\n  new THREE.MeshPhongMaterial( {\r\n    color: c,\r\n    shininess: 150,\r\n    specular: 0xffffff,\r\n    shading: THREE.SmoothShading\r\n  } ), \t\t\t\t\t\t\t\r\n  function( positioningObject , instanceIndex , instanceNumber ){\r\n     positioningObject.position.set(...);\r\n     positioningObject.rotation.set(...);\r\n     positioningObject.scale.set(...);\r\n  },\r\n\r\n  numInstances,\r\n  false, \/\/uniform scale\r\n  false \/\/delete original geometry\r\n);\r\n```","created_at":"2017-02-07T10:25:01.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10750#issuecomment-277958338","id":277958338,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10750","node_id":"MDEyOklzc3VlQ29tbWVudDI3Nzk1ODMzOA==","updated_at":"2017-02-09T21:13:06.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/277958338","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":1,"author_association":"CONTRIBUTOR","body":"@Benjamin-Dobell is working on one in #10093 which is freaking amazing. I have tested it out and the performance gains are beyond fantastic. Check it out!","created_at":"2017-02-08T00:48:53.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10750#issuecomment-278193827","id":278193827,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10750","node_id":"MDEyOklzc3VlQ29tbWVudDI3ODE5MzgyNw==","updated_at":"2017-02-08T00:48:53.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/278193827","user":{"following_url":"https:\/\/api.github.com\/users\/titansoftime\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/titansoftime\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/6549763?v=4","url":"https:\/\/api.github.com\/users\/titansoftime","gists_url":"https:\/\/api.github.com\/users\/titansoftime\/gists{\/gist_id}","html_url":"https:\/\/github.com\/titansoftime","subscriptions_url":"https:\/\/api.github.com\/users\/titansoftime\/subscriptions","node_id":"MDQ6VXNlcjY1NDk3NjM=","repos_url":"https:\/\/api.github.com\/users\/titansoftime\/repos","received_events_url":"https:\/\/api.github.com\/users\/titansoftime\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/titansoftime\/starred{\/owner}{\/repo}","site_admin":false,"login":"titansoftime","type":"User","id":6549763,"followers_url":"https:\/\/api.github.com\/users\/titansoftime\/followers","organizations_url":"https:\/\/api.github.com\/users\/titansoftime\/orgs"}},{"index":2,"author_association":"CONTRIBUTOR","body":"oh lord, and i'm the one doing the trolling lol :) I'm afraid to say anything more in that conversation, i hope it was just a giant misunderstanding. I'm more interested in breaking up the renderer into smaller modules so they could be monkey patched than to get this particular pull request accepted.\r\n\r\nThis is a totally different approach, no auto anything, it just simplifies the creation of static instanced geometries, and hooks the instancing functionality to the shaders. It may not even do a perfect job at it, but the point is, it works somewhat, but requires a lot of hacking and overriding. (like replace an entire class just to add a `#define` to a template.\r\n\r\n\r\n","created_at":"2017-02-08T01:11:54.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10750#issuecomment-278197934","id":278197934,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10750","node_id":"MDEyOklzc3VlQ29tbWVudDI3ODE5NzkzNA==","updated_at":"2017-02-08T01:14:27.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/278197934","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":3,"author_association":"CONTRIBUTOR","body":"Uh.. yea I didn't read that entire thread. No time for that. Hey man the more the merrier in my book. I can't wait to benchmark your build as well!","created_at":"2017-02-08T01:14:24.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10750#issuecomment-278198365","id":278198365,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10750","node_id":"MDEyOklzc3VlQ29tbWVudDI3ODE5ODM2NQ==","updated_at":"2017-02-08T01:14:24.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/278198365","user":{"following_url":"https:\/\/api.github.com\/users\/titansoftime\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/titansoftime\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/6549763?v=4","url":"https:\/\/api.github.com\/users\/titansoftime","gists_url":"https:\/\/api.github.com\/users\/titansoftime\/gists{\/gist_id}","html_url":"https:\/\/github.com\/titansoftime","subscriptions_url":"https:\/\/api.github.com\/users\/titansoftime\/subscriptions","node_id":"MDQ6VXNlcjY1NDk3NjM=","repos_url":"https:\/\/api.github.com\/users\/titansoftime\/repos","received_events_url":"https:\/\/api.github.com\/users\/titansoftime\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/titansoftime\/starred{\/owner}{\/repo}","site_admin":false,"login":"titansoftime","type":"User","id":6549763,"followers_url":"https:\/\/api.github.com\/users\/titansoftime\/followers","organizations_url":"https:\/\/api.github.com\/users\/titansoftime\/orgs"}},{"index":4,"author_association":"CONTRIBUTOR","body":"Well, i'm currently working on a module. The only way i can think of making it work is by locking it to a specific version of three and then maintaining the monkey patch.\r\n\r\nProbably doesnt work yet, but stay tuned in. In the meanwhile, two examples are posted up there, the one with the shadows renders 1 million triangles in a few passes (2 lights). The build should be unminified. You also have my fork and branch.\r\n\r\nhttps:\/\/github.com\/pailhead\/three-instanced-mesh","created_at":"2017-02-08T01:16:38.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10750#issuecomment-278198731","id":278198731,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10750","node_id":"MDEyOklzc3VlQ29tbWVudDI3ODE5ODczMQ==","updated_at":"2017-02-08T01:16:38.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/278198731","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":5,"author_association":"CONTRIBUTOR","body":"@pailhead You had almost 3 months to propose an alternate implementation, but instead chose to  introduce artificial constraints such as \"static geometry\" so that you could bash my implementation, without any statistical or analytical evidence to substantiate your claims.\r\n\r\nNow that you've got an alternate proposal in place we can have a constructive conversation about this.","created_at":"2017-02-08T01:17:36.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10750#issuecomment-278198895","id":278198895,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10750","node_id":"MDEyOklzc3VlQ29tbWVudDI3ODE5ODg5NQ==","updated_at":"2017-02-08T01:17:50.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/278198895","user":{"following_url":"https:\/\/api.github.com\/users\/Benjamin-Dobell\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Benjamin-Dobell\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/482276?v=4","url":"https:\/\/api.github.com\/users\/Benjamin-Dobell","gists_url":"https:\/\/api.github.com\/users\/Benjamin-Dobell\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Benjamin-Dobell","subscriptions_url":"https:\/\/api.github.com\/users\/Benjamin-Dobell\/subscriptions","node_id":"MDQ6VXNlcjQ4MjI3Ng==","repos_url":"https:\/\/api.github.com\/users\/Benjamin-Dobell\/repos","received_events_url":"https:\/\/api.github.com\/users\/Benjamin-Dobell\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Benjamin-Dobell\/starred{\/owner}{\/repo}","site_admin":false,"login":"Benjamin-Dobell","type":"User","id":482276,"followers_url":"https:\/\/api.github.com\/users\/Benjamin-Dobell\/followers","organizations_url":"https:\/\/api.github.com\/users\/Benjamin-Dobell\/orgs"}},{"index":6,"author_association":"CONTRIBUTOR","body":"No intention to bash anyone, three.js comes first and foremost :) peace brothers, how many people even do stuff like this, especially for fun, we should be friends ","created_at":"2017-02-08T01:19:31.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10750#issuecomment-278199256","id":278199256,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10750","node_id":"MDEyOklzc3VlQ29tbWVudDI3ODE5OTI1Ng==","updated_at":"2017-02-08T01:19:31.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/278199256","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":7,"author_association":"CONTRIBUTOR","body":"Ungh, so in 78 i could monkey patch it by doing something like this:\r\n\r\n```javascript\r\nmodule.exports = function( THREE ){\r\n\r\n\t\/\/patches these methods and shader chunks with the required logic \r\n\r\n\trequire('.\/Material.js')(THREE);  \/\/override the constructor\r\n\r\n\r\n        \/\/all the constancts, libs and stuff are under THREE namespace\r\n\tTHREE.WebGLProgram = \trequire('.\/WebGLProgram.js')(THREE);  \r\n\tTHREE.WebGLPrograms =\trequire('.\/WebGLPrograms.js')(THREE);\r\n\r\n\trequire('.\/WebGLShadowMap.js')(THREE);\r\n        \r\n        \/\/just override the chunks\r\n\tTHREE.ShaderChunk[ 'begin_vertex' ] = require('.\/begin_vertex.glsl.js'); \r\n\tTHREE.ShaderChunk[ 'defaultnormal_vertex' ] = require('.\/defaultnormal_vertex.glsl.js');\r\n\r\n\tTHREE.ShaderChunk[ 'common' ] += \trequire('.\/common.glsl.js'); \/\/just append the inverse function\r\n\t\r\n}\r\n```\r\n\r\n```\r\nmodule.exports = function ( THREE ){\r\n\r\n\trequire('.\/monkey-patch\/index.js')( THREE );\r\n\r\n\tTHREE.REVISION = \"78_InstancedMesh\";\r\n\r\n\tconsole.log( THREE );\r\n\r\n\treturn THREE;\r\n\r\n}\r\n```\r\n\r\nI'd have to override all three webgl functions, but they would still not be the entire webglrenderer.\r\n\r\nIn 84, most of the classes and constants are  imported and exist only in that scope. For instance, replacing `THREE.WebGLPrograms` wont get it called in `THREE.WebGLRenderer` since it's private , and doesnt exist in `THREE`' scope. \r\n\r\nI tried to build the renderer but it built all the imports recursively, so i ended up with a 500kb file containing definitions for matrices and vectors. \r\n\r\nI was going to ask about breaking the WebGL* modules even further, and exposing all of the functions so that they could be overridden. But in the newer versions this is closed even further, or at least a bit confusing.\r\n\r\nI want to achieve this:\r\n\r\nhttps:\/\/www.npmjs.com\/package\/three-instanced-mesh\r\n\r\n```javascript\r\nrequire('three-instanced-mesh\/monkey-patch.js')(THREE); \/\/make three read an additional Material property and add some #defines \r\n\r\nrequire('three-instanced-mesh')(THREE);\r\n\r\nvar im = new THREE.InstancedMesh(...);\r\n```\r\n\r\nSo with this, i can theoretically have a class that helps set up `THREE.InstancedBufferGeometry`, fill an attribute for me, and have some shader snippets to do a transformation. It may be somewhat useful and i can share it with others.\r\n\r\nBut if i want to add the functionality to this module, so that it can work with shadows, AO, regular materials, i need to patch a lot of stuff under the hood on three :(\r\n\r\nAny thoughts @mrdoob? ","created_at":"2017-02-08T20:57:03.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10750#issuecomment-278459138","id":278459138,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10750","node_id":"MDEyOklzc3VlQ29tbWVudDI3ODQ1OTEzOA==","updated_at":"2017-02-08T21:04:09.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/278459138","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":8,"author_association":"CONTRIBUTOR","body":"It's possible to use 3 v4 atts instead of 4 here.\r\n\r\nWithout shadows working, there's no need do change anything in the renderer. \r\n```\r\nnpm install three-instanced-mesh\r\n```\r\n\r\nif you want to take it for a spin.\r\n\r\n\r\nI think if `WebGLShadowMap` would tag it's depth shaders with `#define INSTANCED` an effect like this could be further extended. ","created_at":"2017-02-09T02:28:11.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10750#issuecomment-278528662","id":278528662,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10750","node_id":"MDEyOklzc3VlQ29tbWVudDI3ODUyODY2Mg==","updated_at":"2017-02-09T03:24:06.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/278528662","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":9,"author_association":"OWNER","body":"I'm liking this! \ud83d\udc4d\r\n\r\nWould it be possible to change the API to something more like this? https:\/\/github.com\/mrdoob\/three.js\/pull\/10093#issuecomment-260165930\r\n\r\n``` js\r\nvar mesh = new THREE.Mesh( geometry, material );\r\nvar instances = new THREE.Instances( mesh, 1000 ); \/\/ This produces an internal array of 1000 identity matrices\r\n\r\nvar vector = new THREE.Vector3();\r\n\r\nfor ( var i = 0; i < 1000; i ++  ) {\r\n\r\n    vector.x = i;\r\n    instances.setPositionOf( i, vector ); \/\/ This sets the position in the internal matrices array\r\n\r\n}\r\n\r\nscene.add( instances );\r\n```","created_at":"2017-02-09T05:45:32.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10750#issuecomment-278553180","id":278553180,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10750","node_id":"MDEyOklzc3VlQ29tbWVudDI3ODU1MzE4MA==","updated_at":"2017-02-09T05:45:32.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/278553180","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":10,"author_association":"OWNER","body":"Actually, something similar to what you have already:\r\n\r\n``` js\r\nvar instances = new THREE.InstancedMesh( geometry, material, 1000 );\r\n\r\nvar vector = new THREE.Vector3();\r\n\r\nfor ( var i = 0; i < 1000; i ++  ) {\r\n\r\n    vector.x = i;\r\n    instances.setPositionOf( i, vector ); \/\/ This sets the position in the internal matrices array\r\n    \/\/ instances.setRotationOf( i, euler );\r\n    \/\/ instances.setQuaternionOf( i, quaternion );\r\n    \/\/ instances.setScaleOf( i, vector );\r\n    \/\/ instances.setMatrixOf( i, matrix );\r\n\r\n}\r\n\r\nscene.add( instances );\r\n```","created_at":"2017-02-09T05:50:02.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10750#issuecomment-278553713","id":278553713,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10750","node_id":"MDEyOklzc3VlQ29tbWVudDI3ODU1MzcxMw==","updated_at":"2017-02-09T05:50:02.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/278553713","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":11,"author_association":"CONTRIBUTOR","body":"w00t, i was able to build this and hook it up without needing to hack anything! \r\n\r\nhttps:\/\/github.com\/pailhead\/three-instanced-mesh\/blob\/master\/README.md\r\n\r\nI'd be more than happy to commit this though. Need to figure out what exactly happens when you update the attribute buffer. \r\n\r\nWhat you're proposing should be a method right? Still could take the \"placement\" function? \r\n\r\nShould the distributed geometry also be made into a module or kept private within the mesh?\r\n\r\n","created_at":"2017-02-09T06:11:03.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10750#issuecomment-278556366","id":278556366,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10750","node_id":"MDEyOklzc3VlQ29tbWVudDI3ODU1NjM2Ng==","updated_at":"2017-02-09T06:11:03.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/278556366","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":12,"author_association":"OWNER","body":">  Still could take the \"placement\" function?\r\n\r\nNot a fan of that API... I would prefer to keep things separated (constructor from transformations)\r\n\r\n> Should the distributed geometry also be made into a module or kept private within the mesh?\r\n\r\nNot sure I understand what you're asking...","created_at":"2017-02-09T06:43:11.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10750#issuecomment-278560663","id":278560663,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10750","node_id":"MDEyOklzc3VlQ29tbWVudDI3ODU2MDY2Mw==","updated_at":"2017-02-09T06:47:16.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/278560663","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":13,"author_association":"NONE","body":"I'm just seeing this branch now. I have a few questions based on my particular use case and how I might use this new API for it:\r\n\r\n1. It looks like the InstancedMesh has its numCopies set at construction time; does this mean that the number cannot be changed after the fact without destroying and replacing that InstancedMesh object and its underyling geometry+buffers?\r\n2. Assuming that answer is yes, is there any way to frustum-cull instances without changing the numCopies?\r\n3. How would one handle raycasting to select (and, presumably, modify in some way that may make it non-instanceable) a single instance within the InstancedMesh?\r\n4. The instanceUniform flag is an interesting optimization; for the non-uniform case I'm curious about the impact of computing the normal matrix per-vertex on the GPU rather than per-mesh on the CPU, have you benchmarked that at all with varying vertex counts?\r\n5. Is there any fallback for the (admittedly rare) case where the instanced arrays extension is not available?\r\n\r\nEDIT: Whoa, I just noticed that not only is the numCopies static, the distributeFunction is only called once at construction time. Unless I'm mistaken this means that the transforms of the instances are totally static?! If so, then this is a total non-starter for me. I don't need a baking solution, I need to be able to improve performance of dynamic objects.","created_at":"2017-02-09T17:05:15.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10750#issuecomment-278705465","id":278705465,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10750","node_id":"MDEyOklzc3VlQ29tbWVudDI3ODcwNTQ2NQ==","updated_at":"2017-02-09T17:21:19.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/278705465","user":{"following_url":"https:\/\/api.github.com\/users\/lojjic\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/lojjic\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/138124?v=4","url":"https:\/\/api.github.com\/users\/lojjic","gists_url":"https:\/\/api.github.com\/users\/lojjic\/gists{\/gist_id}","html_url":"https:\/\/github.com\/lojjic","subscriptions_url":"https:\/\/api.github.com\/users\/lojjic\/subscriptions","node_id":"MDQ6VXNlcjEzODEyNA==","repos_url":"https:\/\/api.github.com\/users\/lojjic\/repos","received_events_url":"https:\/\/api.github.com\/users\/lojjic\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/lojjic\/starred{\/owner}{\/repo}","site_admin":false,"login":"lojjic","type":"User","id":138124,"followers_url":"https:\/\/api.github.com\/users\/lojjic\/followers","organizations_url":"https:\/\/api.github.com\/users\/lojjic\/orgs"}},{"index":14,"author_association":"CONTRIBUTOR","body":"> EDIT: Whoa, I just noticed that not only is the numCopies static, the distributeFunction is only called once at construction time. Unless I'm mistaken this means that the transforms of the instances are totally static?! If so, then this is a total non-starter for me. I don't need a baking solution, I need to be able to improve performance of dynamic objects.\r\n\r\nYes you are right, this is just for \"baking\" or drawing lots of static stuff. Perhaps you should make your own fork of three.js and try to experiment a bit with the thing you need?\r\n\r\nI worked on 78 for i don't even know how long, because thats the one where i maintained the instancing and some other stuff. It took this whole pull request to figure out that none of this is needed, other than perhaps global vert and frag includes. Try running **npm install three-instanced-mesh** and you should be able to use this with just shadows.\r\n\r\n[Look here for source](https:\/\/github.com\/pailhead\/three-instanced-mesh)\r\n\r\n> 1. It looks like the InstancedMesh has its numCopies set at construction time; does this mean that the number cannot be changed after the fact without destroying and replacing that InstancedMesh object and its underyling geometry+buffers?\r\n\r\n[Generally you shouldnt resize buffers.](https:\/\/threejs.org\/docs\/#Manual\/Next_Steps\/How_to_update_things)\r\n\r\n**With regards to updating BufferGeometries, the most important thing to understand is that you you cannot resize buffers (this is very costly, basically the equivalent to creating new a geometry). You can however update the content of buffers.** \r\n\r\nSo i think the approach here is generally in the spirit of three. It's not impossible to set the scale to 0, thus not rasterizing an instance, but a transformation needs to happen. I don't entirely understand what happens here, or for example when you branch the shader and say `if( instanceAtt == something ) gl_Position = vec4(0.);`, but i think it doesnt actually help. \r\n\r\n\r\n> 2. Assuming that answer is yes, is there any way to frustum-cull instances without changing the numCopies?\r\n\r\nWell, dont know if it's yes or no. I think its more no, but these two questions are not related. In the example of that cluster of boxes\/cylinders\/spheres, you can assign the bounding box manually, knowing that your logic ran `Math.random()` in three directions, it would be a box from (0,0,0) to (1,1,1). You can also write a function to test the meshe's bounding box with each iteration, and extend the previous one if it needs extending, youll end up with the tightest fitting AABB. \r\n\r\nUp to you if you want to instance every  lamp post in the world, or every lamp post belonging to a tile in a grid... But yeah, this is a mesh, it can be frustum culled.\r\n\r\n\r\n\r\n>3. How would one handle raycasting to select (and, presumably, modify in some way that may make it non-instanceable) a single instance within the InstancedMesh?\r\n\r\nYou probably couldnt do this without the shaders. Although i was thinking that maybe material color should also be considered and have an attribute, especially now that this can use 3 atts instead of 4. \r\nIn either case, you'd have to write your own logic:\r\n```javascript\r\nvar positions_rotations_scale_colors_whatever = computeStuff();\r\n\r\nvar culling_raycating_collision = computeBoundingStuff( myMesh );\r\n\r\nvar drawing_stuff = new InstancedMesh( myMesh.geometry ); \r\n```\r\nJust imagine that you have two scenes, a precomputed set of positions, you build the graph out of a 1000 mesh nodes in one, you build a graph out of a 1 mesh node rendering 1000 instances. Youd use the other one for collision, picking, culling etc....\r\n\r\n\r\n\r\n\r\n>5. The instanceUniform flag is an interesting optimization; for the non-uniform case I'm curious about the impact of computing the normal matrix per-vertex on the GPU rather than per-mesh on the CPU, have you benchmarked that at all with varying vertex counts?\r\n\r\nHave you seen the examples? I've got it running quite buttery with millions of triangles, no culling, and two shadow lights. I've got to look a bit into the math myself, this was just taken from literature. I agree that there is a tradeoff here, and i think things could be slightly simpler if the lighting was done in world space, but i'm not sure. I don't really see a way to avoid the inverse if it's an on uniform scale. \r\n\r\nIn any case, **you** should make that choice based upon the knowledge of how webgl works:\r\n\r\nFew high-res meshes - precompute stuff.\r\nMany low-res meshes - parallelize stuff \r\n\r\n>6. Is there any fallback for the (admittedly rare) case where the instanced arrays extension is not available?\r\n\r\nNot sure what would happen here. For my use case it would actually be useful to transform and merge the instances together, but it should probably be left for the user to handle. \r\n","created_at":"2017-02-09T19:35:54.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10750#issuecomment-278748418","id":278748418,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10750","node_id":"MDEyOklzc3VlQ29tbWVudDI3ODc0ODQxOA==","updated_at":"2017-02-09T20:08:41.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/278748418","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":15,"author_association":"CONTRIBUTOR","body":">I don't need a baking solution, I need to be able to improve performance of dynamic objects.\r\n\r\nThe question is should that be a part of this, perhaps by saying `.dynamic = true;` or if it shuold be a part of a particle system...","created_at":"2017-02-09T20:14:12.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10750#issuecomment-278759342","id":278759342,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10750","node_id":"MDEyOklzc3VlQ29tbWVudDI3ODc1OTM0Mg==","updated_at":"2017-02-09T20:14:12.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/278759342","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":16,"author_association":"CONTRIBUTOR","body":"@mrdoob this is actually a bit more complicated now that i think of it. With the constructor, the mechanism for distribution is super simple.\r\n\r\nWhat happens when you set only one transformation\r\n\r\n    setPositionOf( 20 , ... );\r\n    setRotationOf( 20 , ... );\r\n    \/\/move to next one, what should happen here\r\n    setPositionOf( 21 , ...)\r\n\r\nI'm not keeping any position rotation scales as objects, it just goes straight to the buffer.\r\n\r\nIt would probably have to be something like \r\n\r\n    instanced.setPositionOf( index , vector , writeIndexToAttribute );\r\n\r\nSo:\r\n\r\n    instanced.setPositionOf( 20 , vec , false );\r\n    instanced.setRotationOf( 20 , vec , true );\r\n    instanced.setPositionOf( 21 ...);\r\n\r\nor (of course not with this names but illustrates the problem):\r\n\r\n    instanced.setPositionToBeSet( vec );\r\n    instanced.setRotationToBeSet( vec );\r\n    instanced.updateTRSBufferAt( index );\r\n\r\n","created_at":"2017-02-09T20:16:37.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10750#issuecomment-278759992","id":278759992,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10750","node_id":"MDEyOklzc3VlQ29tbWVudDI3ODc1OTk5Mg==","updated_at":"2017-02-09T20:18:13.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/278759992","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":17,"author_association":"NONE","body":"@pailhead Thanks for the clarifications. \r\n\r\nSo, even though this was aggressively promoted as an alternative\/better approach to handle the use cases that were improved by @Benjamin-Dobell's #10093 (including mine), it in fact does not do that at all; it's for an entirely different use case. That's frustrating, but I'll move forward...\r\n\r\nI do see that even though your InstancedMesh class specifically does not meet my need, the changes you made to the program\/shader code that lets them accept the transformation matrix as instanced attributes are _generically_ useful. So another layer could handle setting up the InstancedBufferGeometries in using whatever API shape is most ergonomic for the use case, and feed to the shaders using those same hooks. I'm 100% in favor of that.","created_at":"2017-02-09T22:00:43.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10750#issuecomment-278788072","id":278788072,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10750","node_id":"MDEyOklzc3VlQ29tbWVudDI3ODc4ODA3Mg==","updated_at":"2017-02-09T22:00:43.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/278788072","user":{"following_url":"https:\/\/api.github.com\/users\/lojjic\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/lojjic\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/138124?v=4","url":"https:\/\/api.github.com\/users\/lojjic","gists_url":"https:\/\/api.github.com\/users\/lojjic\/gists{\/gist_id}","html_url":"https:\/\/github.com\/lojjic","subscriptions_url":"https:\/\/api.github.com\/users\/lojjic\/subscriptions","node_id":"MDQ6VXNlcjEzODEyNA==","repos_url":"https:\/\/api.github.com\/users\/lojjic\/repos","received_events_url":"https:\/\/api.github.com\/users\/lojjic\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/lojjic\/starred{\/owner}{\/repo}","site_admin":false,"login":"lojjic","type":"User","id":138124,"followers_url":"https:\/\/api.github.com\/users\/lojjic\/followers","organizations_url":"https:\/\/api.github.com\/users\/lojjic\/orgs"}},{"index":18,"author_association":"CONTRIBUTOR","body":"> So, even though this was aggressively promoted as an alternative\/better approach to handle the use cases that were improved by @Benjamin-Dobell's #10093 (including mine)\r\n\r\nNo it was not. As a three.js user, i just voiced my concern about having cruft in the core. \r\n\r\n**This is available as a module, it doesn't even have to be present in the library, it can be completely optional if you want to use it or not**.\r\n","created_at":"2017-02-09T22:08:58.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10750#issuecomment-278790339","id":278790339,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10750","node_id":"MDEyOklzc3VlQ29tbWVudDI3ODc5MDMzOQ==","updated_at":"2017-02-09T22:08:58.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/278790339","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":19,"author_association":"CONTRIBUTOR","body":"> the changes you made to the program\/shader code that lets them accept the transformation matrix as instanced attributes are generically useful. \r\n\r\nWell, it's up to you how you fill that attribute, the pull request once i update it helps you format that matrix4 with three vectors, guess you can call that generic enough. But sounds to me like you would settle for just a `#IS_INSTANCED` define that would be set on all encountered `InstancedBufferGeometry`. \r\n\r\nPlease consult this to see how this is implemented and what hooks three.js already provides. \r\n\r\nhttps:\/\/github.com\/pailhead\/three-instanced-mesh\/blob\/master\/index.js\r\n\r\nUsing this pattern you can totally modify this however you feel. Make other methods for setting up attributes, different shaders, whatever. \r\n\r\nConsult the other conversation on how to render those crates from the warehouse, or whatever dynamic thing that needs to happen. Up to you to fine that sweet spot where something is performance tuned, but this should give you an additional tool. \r\n\r\nI've been super patient, but i'm done giving free graphics lessons, the cohort from the other thread owes me a beer ;)","created_at":"2017-02-09T22:13:34.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10750#issuecomment-278791543","id":278791543,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10750","node_id":"MDEyOklzc3VlQ29tbWVudDI3ODc5MTU0Mw==","updated_at":"2017-02-09T22:15:35.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/278791543","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":20,"author_association":"CONTRIBUTOR","body":"> how many people even do stuff like this, especially for fun\r\n\r\n> I've been super patient, but i'm done giving free graphics lessons, the cohort from the other thread owes me a beer ;)\r\n\r\nIf only you hadn't decided to give out \"free graphics lessons\" in the first place, based on a blog post you read this one time...","created_at":"2017-02-09T22:23:07.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10750#issuecomment-278793773","id":278793773,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10750","node_id":"MDEyOklzc3VlQ29tbWVudDI3ODc5Mzc3Mw==","updated_at":"2017-02-09T22:23:07.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/278793773","user":{"following_url":"https:\/\/api.github.com\/users\/Benjamin-Dobell\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Benjamin-Dobell\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/482276?v=4","url":"https:\/\/api.github.com\/users\/Benjamin-Dobell","gists_url":"https:\/\/api.github.com\/users\/Benjamin-Dobell\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Benjamin-Dobell","subscriptions_url":"https:\/\/api.github.com\/users\/Benjamin-Dobell\/subscriptions","node_id":"MDQ6VXNlcjQ4MjI3Ng==","repos_url":"https:\/\/api.github.com\/users\/Benjamin-Dobell\/repos","received_events_url":"https:\/\/api.github.com\/users\/Benjamin-Dobell\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Benjamin-Dobell\/starred{\/owner}{\/repo}","site_admin":false,"login":"Benjamin-Dobell","type":"User","id":482276,"followers_url":"https:\/\/api.github.com\/users\/Benjamin-Dobell\/followers","organizations_url":"https:\/\/api.github.com\/users\/Benjamin-Dobell\/orgs"}},{"index":21,"author_association":"NONE","body":"> No it was not. As a three.js user, i just voiced my concern about having cruft in the core.\r\n\r\nThen I apologize for interpreting it that way. I think your message got lost in the overwhelming amount of noise.\r\n\r\n> Well, it's up to you how you fill that attribute, the pull request once i update it helps you format that matrix4 with three vectors, guess you can call that generic enough.\r\n\r\nYeah, I think we're saying the same thing here. I _appreciate_ having those defines and attributes available in the core (without monkeypatching!) for me to populate via other APIs that work for my needs. In fact that same set of shader chunk changes (details aside) were the most valuable part of #10093 in my opinion. I'm not enough of a shader expert to debate the pros\/cons of the two changesets, unfortunately.","created_at":"2017-02-09T22:29:52.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10750#issuecomment-278795587","id":278795587,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10750","node_id":"MDEyOklzc3VlQ29tbWVudDI3ODc5NTU4Nw==","updated_at":"2017-02-09T22:29:52.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/278795587","user":{"following_url":"https:\/\/api.github.com\/users\/lojjic\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/lojjic\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/138124?v=4","url":"https:\/\/api.github.com\/users\/lojjic","gists_url":"https:\/\/api.github.com\/users\/lojjic\/gists{\/gist_id}","html_url":"https:\/\/github.com\/lojjic","subscriptions_url":"https:\/\/api.github.com\/users\/lojjic\/subscriptions","node_id":"MDQ6VXNlcjEzODEyNA==","repos_url":"https:\/\/api.github.com\/users\/lojjic\/repos","received_events_url":"https:\/\/api.github.com\/users\/lojjic\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/lojjic\/starred{\/owner}{\/repo}","site_admin":false,"login":"lojjic","type":"User","id":138124,"followers_url":"https:\/\/api.github.com\/users\/lojjic\/followers","organizations_url":"https:\/\/api.github.com\/users\/lojjic\/orgs"}},{"index":22,"author_association":"CONTRIBUTOR","body":"@lojjic  \r\n\r\nSince you keep referencing that pull... you're concerned about the inverse operation in the vertex shader, sure it's expensive:\r\n\r\n```glsl\r\n+\r\n +#ifdef INSTANCE_TRANSFORM\r\n +\r\n +mat3 inverse(mat3 m) {\r\n +  float a00 = m[0][0], a01 = m[0][1], a02 = m[0][2];\r\n +  float a10 = m[1][0], a11 = m[1][1], a12 = m[1][2];\r\n +  float a20 = m[2][0], a21 = m[2][1], a22 = m[2][2];\r\n +\r\n +  float b01 = a22 * a11 - a12 * a21;\r\n +  float b11 = -a22 * a10 + a12 * a20;\r\n +  float b21 = a21 * a10 - a11 * a20;\r\n +\r\n +  float det = a00 * b01 + a01 * b11 + a02 * b21;\r\n +\r\n +  return mat3(b01, (-a22 * a01 + a02 * a21), (a12 * a01 - a02 * a11),\r\n +              b11, (a22 * a00 - a02 * a20), (-a12 * a00 + a02 * a10),\r\n +              b21, (-a21 * a00 + a01 * a20), (a11 * a00 - a01 * a10)) \/ det;\r\n +}\r\n```\r\nIt has three divisions, a whole bunch of multiplications, 21 i think, with some additions, i think 11. But still, compare it to what goes on here. 7 divisions and mods, 18 multiplications, 12 additions. Since divisions are heavy, this may actually be more expensive than the inversion. This is not even counting the overhead of doing 7 texture fetches. \r\n\r\nOn top of all of that, you have the overhead of doing an arbitrary amount of matrix computation on the cpu and the overhead of updating the texture. \r\n\r\nDo you see why another user would want to avoid this happening. And why another would freak out if this just magically appeared in three one day? \r\n\r\n\r\n```glsl\r\n+#ifdef USE_INSTANCING\r\n +\r\n +\t#ifdef USE_INSTANCING_TEXTURE\r\n +\r\n +\t\tuniform sampler2D instancingTexture;\r\n +\t\tuniform int instancingTextureSize;\r\n +\r\n +\t\tmat4 getModelMatrix() {\r\n +\r\n +\t\t\tfloat dx = 1.0 \/ float( instancingTextureSize );\r\n +\t\t\tfloat dy = 1.0 \/ float( instancingTextureSize );\r\n +\r\n +\t\t\tfloat j = instanceIndex * 4.0;\r\n +\t\t\tfloat x = mod( j, float( instancingTextureSize ) );\r\n +\t\t\tfloat y = floor( j * dy );\r\n +\r\n +\t\t\ty = dy * ( y + 0.5 );\r\n +\r\n +\t\t\tvec4 v1 = texture2D( instancingTexture, vec2( dx * ( x + 0.5 ), y ) );\r\n +\t\t\tvec4 v2 = texture2D( instancingTexture, vec2( dx * ( x + 1.5 ), y ) );\r\n +\t\t\tvec4 v3 = texture2D( instancingTexture, vec2( dx * ( x + 2.5 ), y ) );\r\n +\t\t\tvec4 v4 = texture2D( instancingTexture, vec2( dx * ( x + 3.5 ), y ) );\r\n +\r\n +\t\t\treturn mat4( v1, v2, v3, v4 );\r\n +\r\n +\t\t}\r\n +\r\n +\t\tmat3 getNormalMatrix() {\r\n +\r\n +\t\t\tfloat j = float( MAX_INSTANCES ) * 4.0 + instanceIndex * 3.0;\r\n +\r\n +\t\t\tfloat dx = 1.0 \/ float( instancingTextureSize );\r\n +\t\t\tfloat dy = dx;\r\n +\r\n +\t\t\tvec2 coord;\r\n +\r\n +\t\t\tcoord.x = dx * ( mod( j, float( instancingTextureSize ) ) + 0.5 );\r\n +\t\t\tcoord.y = dy * ( floor( j * dy ) + 0.5 );\r\n +\t\t\tvec3 v1 = texture2D( instancingTexture, coord ).xyz;\r\n +\r\n +\t\t\tcoord.x = dx * ( mod( j + 1.0, float( instancingTextureSize ) ) + 0.5 );\r\n +\t\t\tcoord.y = dy * ( floor( ( j + 1.0 ) * dy ) + 0.5 );\r\n +\t\t\tvec3 v2 = texture2D( instancingTexture, coord ).xyz;\r\n +\r\n +\t\t\tcoord.x = dx * ( mod( j + 2.0, float( instancingTextureSize ) ) + 0.5 );\r\n +\t\t\tcoord.y = dy * ( floor( ( j + 2.0 ) * dy ) + 0.5 );\r\n +\t\t\tvec3 v3 = texture2D( instancingTexture, coord ).xyz;\r\n +\r\n +\t\t\treturn mat3( v1, v2, v3 );\r\n +\r\n +\t\t}\r\n\r\n```\r\n\r\nAgain, this can all be completely optional, thanks to Material.defines, Material.customDepthMaterial and Material.customDistanceMaterial. \r\n\r\nPlease have the conversation about #10093 there. ","created_at":"2017-02-09T22:42:38.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10750#issuecomment-278798917","id":278798917,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10750","node_id":"MDEyOklzc3VlQ29tbWVudDI3ODc5ODkxNw==","updated_at":"2017-02-09T22:48:55.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/278798917","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":23,"author_association":"CONTRIBUTOR","body":"@pailhead I have no problem with your implementation. This functionality definitely _has it's uses_.\r\n\r\nIt's just hugely hypocritical that you attacked me for things like texture look-ups (without providing benchmarks), and are now going ahead doing things like matrix inversion in a shader.\r\n\r\nI don't _actually_ have a problem with it happening in the shader, but some perspective would nice.\r\n\r\nMy problem with you was that you kept bashing my pull request _despite_ it not doing the same thing as this pull request, or @mrdoob's proposed `Instances` API. You knit picked over minor details, and wouldn't discuss the bigger picture. I'm not going to waste your's or my time knit-picking over you implementation because I think that's a pretty lowly thing to do.\r\n\r\nI specifically mentioned much earlier on,  https:\/\/github.com\/mrdoob\/three.js\/pull\/10093#issuecomment-259867649, that my implementation was _not_ like this (or @mrdoob's instancing proposal) and yet no-one was actually willing to have a detailed discussion about the pros and cons of the approaches.\r\n\r\nI spent a huge amount of my time on that pull request too. Neither yourself or @mrdoob would give me the time of day to actually discuss what it was I was trying to achieve, or _why_ I was trying to achieve it. Instead I just got brash responses from the two of you based on the assumption that @mrdoob's initial proposal was the way to go in the first place:\r\n\r\n> Seems like @pailhead's #10750 is more in line with my proposal.\r\n\r\nI never claimed my pull request was in line with an `Instances` proposal. It was never meant to be. I tried desperately to discuss the pros and cons of the API (repeatedly pointing out the implementation wasn't perfect and that I'd be willing to modify it), but nope, it didn't match the proposal, so it wasn't even worth considering.","created_at":"2017-02-09T22:54:33.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10750#issuecomment-278801740","id":278801740,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10750","node_id":"MDEyOklzc3VlQ29tbWVudDI3ODgwMTc0MA==","updated_at":"2017-02-09T22:55:35.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/278801740","user":{"following_url":"https:\/\/api.github.com\/users\/Benjamin-Dobell\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Benjamin-Dobell\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/482276?v=4","url":"https:\/\/api.github.com\/users\/Benjamin-Dobell","gists_url":"https:\/\/api.github.com\/users\/Benjamin-Dobell\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Benjamin-Dobell","subscriptions_url":"https:\/\/api.github.com\/users\/Benjamin-Dobell\/subscriptions","node_id":"MDQ6VXNlcjQ4MjI3Ng==","repos_url":"https:\/\/api.github.com\/users\/Benjamin-Dobell\/repos","received_events_url":"https:\/\/api.github.com\/users\/Benjamin-Dobell\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Benjamin-Dobell\/starred{\/owner}{\/repo}","site_admin":false,"login":"Benjamin-Dobell","type":"User","id":482276,"followers_url":"https:\/\/api.github.com\/users\/Benjamin-Dobell\/followers","organizations_url":"https:\/\/api.github.com\/users\/Benjamin-Dobell\/orgs"}},{"index":24,"author_association":"CONTRIBUTOR","body":"I have a limited understanding of how the gpu works, and texture fetches are a hardware implementation. I've read that once upon a time it was cheaper to look up a normalized vector from a cubemap than to perform a normalization, but that seems to have changed. I know a float texture makes a lot of data.\r\n\r\n","created_at":"2017-02-09T23:05:04.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10750#issuecomment-278803995","id":278803995,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10750","node_id":"MDEyOklzc3VlQ29tbWVudDI3ODgwMzk5NQ==","updated_at":"2017-02-09T23:05:04.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/278803995","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":25,"author_association":"CONTRIBUTOR","body":"@mrdoob \r\n\r\napologies, the conversation went off topic,\r\n\r\nany thoughts on https:\/\/github.com\/mrdoob\/three.js\/pull\/10750#issuecomment-278759992","created_at":"2017-02-10T20:45:39.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10750#issuecomment-279061120","id":279061120,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10750","node_id":"MDEyOklzc3VlQ29tbWVudDI3OTA2MTEyMA==","updated_at":"2017-02-10T20:45:39.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/279061120","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":26,"author_association":"CONTRIBUTOR","body":"As is currently, this can only be constructed. But, it's no longer touching on any parts of the renderer, except the shader.\r\n\r\n@mrdoob \r\n\r\nhttps:\/\/github.com\/mrdoob\/three.js\/pull\/10750#issuecomment-278759992\r\n\r\nWhat about something like \r\n\r\n     set( index , position , rotation , scale ){ ... }\r\n\r\n     myMesh.set( 25 , undefined , euler ); \r\n\r\nor\r\n\r\n     set( index , trs ){...}\r\n     \r\n      myMesh.set( 25 , {position: vec3} );","created_at":"2017-02-17T04:01:30.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10750#issuecomment-280544743","id":280544743,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10750","node_id":"MDEyOklzc3VlQ29tbWVudDI4MDU0NDc0Mw==","updated_at":"2017-02-17T04:02:50.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/280544743","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":27,"author_association":"CONTRIBUTOR","body":"Something is wrong with the dir light shadow camera, it's not being made in the latest dev branch.","created_at":"2017-02-25T22:53:53.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10750#issuecomment-282518589","id":282518589,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10750","node_id":"MDEyOklzc3VlQ29tbWVudDI4MjUxODU4OQ==","updated_at":"2017-02-25T22:53:53.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/282518589","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":28,"author_association":"COLLABORATOR","body":"@pailhead Is there some reason why your example has groups -- of colors -- of clusters -- of `InstancedMesh`? Can you make the example simpler so it is more clear what is going on?\r\n\r\nMaybe one `instancedMesh` would be sufficient. (Or two, if that is important).\r\n\r\nAlso, all you are doing in the example is rotating the groups. Instead, can you update the instances themselves and demonstrate the capabilities of the proposed features?","created_at":"2017-02-28T00:58:21.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10750#issuecomment-282907591","id":282907591,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10750","node_id":"MDEyOklzc3VlQ29tbWVudDI4MjkwNzU5MQ==","updated_at":"2017-02-28T00:58:21.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/282907591","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":29,"author_association":"CONTRIBUTOR","body":"@WestLangley \r\n\r\nYes, it's a good example on how to mix and match stuff that needs to be different, although color could perhaps be passed per instance. Can you look at the interface suggestions, since i currently don't have an interface set to do this:\r\n\r\n>Instead, can you update the instances themselves and demonstrate the capabilities of the proposed features?\r\n","created_at":"2017-02-28T02:27:40.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10750#issuecomment-282922763","id":282922763,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10750","node_id":"MDEyOklzc3VlQ29tbWVudDI4MjkyMjc2Mw==","updated_at":"2017-02-28T02:27:40.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/282922763","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}}]}