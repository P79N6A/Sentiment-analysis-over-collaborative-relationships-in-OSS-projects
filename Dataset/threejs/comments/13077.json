{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"OWNER","body":"Nice and clean approach!\r\n\r\n`WeakMap` is IE11+, but it's mainly used in the `WebGLRenderer` so that should be safe?\r\n\r\nIt would be very nice if you could get some numbers. For instance, how long it takes to generate 1 million `Object3D`s with and without, memory with and without, etc.\r\n  ","created_at":"2018-01-10T00:51:42.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13077#issuecomment-356463254","id":356463254,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13077","node_id":"MDEyOklzc3VlQ29tbWVudDM1NjQ2MzI1NA==","updated_at":"2018-01-10T00:52:37.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/356463254","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":1,"author_association":"COLLABORATOR","body":"Yeah, I want the performance and memory number, too.\r\n\r\n>WeakMap is IE11+, but it's mainly used in the WebGLRenderer so that should be safe?\r\n\r\nWhat does this mean? Why safe?","created_at":"2018-01-10T12:00:54.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13077#issuecomment-356582490","id":356582490,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13077","node_id":"MDEyOklzc3VlQ29tbWVudDM1NjU4MjQ5MA==","updated_at":"2018-01-11T11:24:24.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/356582490","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":2,"author_association":"CONTRIBUTOR","body":"OK some initial stats ( creation without uuids only)\r\n\r\nI timed the init() function of the webgl_lights_pointlights2.html example, creating 100,000 objects (geometry and material shared so that's 100,000 uuid creations difference ). Chrome 63 on WIn10.\r\n\r\n90dev : \r\n\r\naverage: 2589ms\r\nstd dev: 44ms\r\n\r\n90dev + this PR:\r\n\r\naverage: 1651ms\r\nstd dev: 37ms\r\n\r\n( 10 runs each )\r\n\r\n\r\nI'll look at property lookups in WebGL(Attributes|Properties) next with Object property vs WeakMap lookup. \r\n\r\nWorthwhile noting this: https:\/\/v8project.blogspot.co.uk\/  , the figures only look at creating and adding to WeakMaps, so maybe WeakMap.get() is already optimized. \r\n\r\n\r\n\r\n\r\n","created_at":"2018-01-10T14:16:02.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13077#issuecomment-356614379","id":356614379,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13077","node_id":"MDEyOklzc3VlQ29tbWVudDM1NjYxNDM3OQ==","updated_at":"2018-01-10T14:16:02.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/356614379","user":{"following_url":"https:\/\/api.github.com\/users\/aardgoose\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/aardgoose\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/17364910?v=4","url":"https:\/\/api.github.com\/users\/aardgoose","gists_url":"https:\/\/api.github.com\/users\/aardgoose\/gists{\/gist_id}","html_url":"https:\/\/github.com\/aardgoose","subscriptions_url":"https:\/\/api.github.com\/users\/aardgoose\/subscriptions","node_id":"MDQ6VXNlcjE3MzY0OTEw","repos_url":"https:\/\/api.github.com\/users\/aardgoose\/repos","received_events_url":"https:\/\/api.github.com\/users\/aardgoose\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/aardgoose\/starred{\/owner}{\/repo}","site_admin":false,"login":"aardgoose","type":"User","id":17364910,"followers_url":"https:\/\/api.github.com\/users\/aardgoose\/followers","organizations_url":"https:\/\/api.github.com\/users\/aardgoose\/orgs"}},{"index":3,"author_association":"COLLABORATOR","body":"Can you also evaluate `scene.toJSON()` performance?\r\nI'm worried if `.toJSON()` would have an bad impact from lazy uuid generation if we merge this PR.\r\n`.toJSON()` would be the typical usecase where it generates uuid at a time.","created_at":"2018-01-10T14:33:39.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13077#issuecomment-356619472","id":356619472,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13077","node_id":"MDEyOklzc3VlQ29tbWVudDM1NjYxOTQ3Mg==","updated_at":"2018-01-10T14:33:39.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/356619472","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":4,"author_association":"CONTRIBUTOR","body":"Testing a render loop using http:\/\/localhost:8080\/examples\/#webgldeferred_animation\r\n(its not changing the scene but I expect when  most property and attribute access will be lookup.\r\n\r\nRunning for roughly 40seconds with no interaction @ 60 fps.\r\n\r\n90dev   \r\n\r\nscripting:  17.234% of wall time\r\n\r\n90dev + lazy uuid:\r\n\r\nscripting: 17.150% of wall time\r\n\r\nIt looks like any difference is in the noise (I tested with Chrome 65 (canary) and got similar numbers with a marginal improvement with lazy uuid.\r\n\r\n@takahirox I'll take a look at toJSON, Of course the overhead of generateUUID() will move from object creation time to serialization time, which will show up, but you have to take it in one place or another,\r\n\r\nAny extra overhead will be getting the uuid via a setter method and a test for null in the setter.\r\n\r\n\r\n","created_at":"2018-01-10T15:08:30.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13077#issuecomment-356630145","id":356630145,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13077","node_id":"MDEyOklzc3VlQ29tbWVudDM1NjYzMDE0NQ==","updated_at":"2018-01-10T15:09:23.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/356630145","user":{"following_url":"https:\/\/api.github.com\/users\/aardgoose\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/aardgoose\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/17364910?v=4","url":"https:\/\/api.github.com\/users\/aardgoose","gists_url":"https:\/\/api.github.com\/users\/aardgoose\/gists{\/gist_id}","html_url":"https:\/\/github.com\/aardgoose","subscriptions_url":"https:\/\/api.github.com\/users\/aardgoose\/subscriptions","node_id":"MDQ6VXNlcjE3MzY0OTEw","repos_url":"https:\/\/api.github.com\/users\/aardgoose\/repos","received_events_url":"https:\/\/api.github.com\/users\/aardgoose\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/aardgoose\/starred{\/owner}{\/repo}","site_admin":false,"login":"aardgoose","type":"User","id":17364910,"followers_url":"https:\/\/api.github.com\/users\/aardgoose\/followers","organizations_url":"https:\/\/api.github.com\/users\/aardgoose\/orgs"}},{"index":5,"author_association":"CONTRIBUTOR","body":"Another go at the results above - I think my browser was struggling with memory pressure.\r\n\r\nWith a clean browser (closed and opened before each set of 10 runs) I get ( for 100000 objects ). Looking at the standard deviations I suspect that the base line has more disturbance from GC activity?  The last case (lazy + ) has the String().toLowerCase() hack added and the resultant heap size is around 40 - 45MB lower (from 445Mb to 40MB).  No rendering pass was made, json serialization was carried out with scene.traverse().\r\n\r\n90dev | create | json | total\r\n----|----|---|---\r\nave | 999 | 1006| 2005\r\nstdev | 265|407|564\r\n\r\nlazy uuid|create|json|total\r\n----------|-------|----|---\r\nave | 827 | 931 | 1758\r\nstdev | 153 | 187 | 313\r\n\r\nlazy + | create | json | total\r\n-------|--------|-------|-----\r\nave| 809|889|1698\r\nstdev|129|173|267\r\n\r\n","created_at":"2018-01-10T21:05:27.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13077#issuecomment-356736408","id":356736408,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13077","node_id":"MDEyOklzc3VlQ29tbWVudDM1NjczNjQwOA==","updated_at":"2018-01-10T21:05:27.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/356736408","user":{"following_url":"https:\/\/api.github.com\/users\/aardgoose\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/aardgoose\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/17364910?v=4","url":"https:\/\/api.github.com\/users\/aardgoose","gists_url":"https:\/\/api.github.com\/users\/aardgoose\/gists{\/gist_id}","html_url":"https:\/\/github.com\/aardgoose","subscriptions_url":"https:\/\/api.github.com\/users\/aardgoose\/subscriptions","node_id":"MDQ6VXNlcjE3MzY0OTEw","repos_url":"https:\/\/api.github.com\/users\/aardgoose\/repos","received_events_url":"https:\/\/api.github.com\/users\/aardgoose\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/aardgoose\/starred{\/owner}{\/repo}","site_admin":false,"login":"aardgoose","type":"User","id":17364910,"followers_url":"https:\/\/api.github.com\/users\/aardgoose\/followers","organizations_url":"https:\/\/api.github.com\/users\/aardgoose\/orgs"}},{"index":6,"author_association":"COLLABORATOR","body":">Testing a render loop using http:\/\/localhost:8080\/examples\/#webgldeferred_animation\r\n\r\nI don't recommend you to use webgldeferred_animation for the test because it uses special WebGLRenderer `WebGLDeferredRenderer`.","created_at":"2018-01-11T11:59:18.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13077#issuecomment-356913983","id":356913983,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13077","node_id":"MDEyOklzc3VlQ29tbWVudDM1NjkxMzk4Mw==","updated_at":"2018-01-11T11:59:18.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/356913983","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":7,"author_association":"CONTRIBUTOR","body":"![image](https:\/\/user-images.githubusercontent.com\/314997\/34853998-da13d094-f771-11e7-95fc-86f32fe62e03.png)\r\n\r\nhttps:\/\/developer.mozilla.org\/en-US\/docs\/Web\/JavaScript\/Reference\/Global_Objects\/WeakMap\r\n\r\n\ud83e\udd14  Weakmap browsers compatibility is better than what I recalled, I hope they are well optimised across them too.","created_at":"2018-01-12T00:25:36.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13077#issuecomment-357105764","id":357105764,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13077","node_id":"MDEyOklzc3VlQ29tbWVudDM1NzEwNTc2NA==","updated_at":"2018-01-12T00:25:36.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/357105764","user":{"following_url":"https:\/\/api.github.com\/users\/zz85\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/zz85\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/314997?v=4","url":"https:\/\/api.github.com\/users\/zz85","gists_url":"https:\/\/api.github.com\/users\/zz85\/gists{\/gist_id}","html_url":"https:\/\/github.com\/zz85","subscriptions_url":"https:\/\/api.github.com\/users\/zz85\/subscriptions","node_id":"MDQ6VXNlcjMxNDk5Nw==","repos_url":"https:\/\/api.github.com\/users\/zz85\/repos","received_events_url":"https:\/\/api.github.com\/users\/zz85\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/zz85\/starred{\/owner}{\/repo}","site_admin":false,"login":"zz85","type":"User","id":314997,"followers_url":"https:\/\/api.github.com\/users\/zz85\/followers","organizations_url":"https:\/\/api.github.com\/users\/zz85\/orgs"}},{"index":8,"author_association":"CONTRIBUTOR","body":"Some micro benchmarks of WeakMap vs the existing WebGLProperties mechanism. (Code below).\r\nThis attempts to reproduce a fairly typical pattern of properties.get() access with a mixture of object types (Using a single object type may allow the VM to optimise the uuid property lookup, which doesn't happen in the WebgLRenderer. n=10000 is roughly equivalent to 2000 unique scene graph objects.\r\n\r\nTests on Windows 10 with Chrome 63 and Firefox 57 browsers restarted for each test run. I'm surprised the FF is an order of magnitude slower for all these tests, but this difference was repeated with more test runs.\r\n\r\nFlattened strings in Chrome are faster, presumably because there is more work traversing the string fragments of the UUID in the un-flattened case. WeakMap.get() is significantly faster on both broswers here.\r\n\r\nNote: I added an export of WebGLProperties for these tests.\r\n\r\n\r\n## Chrome 63\r\n\r\n### test: 90dev\r\n\r\nruntime (addition): 14.68999999999994\r\nruntime (lookup): 88012.05\r\n\r\n\r\n### test: uuid-flatten\r\n\r\nruntime (addition): 10.134999999999991\r\nruntime (lookup): 37377.66000000001\r\n\r\n\r\n### test: WeakMap\r\n\r\nruntime (addition): 5.569999999999993\r\nruntime (lookup): 29048.085000000003\r\n\r\n\r\n## FireFox 57.0.4\r\n\r\n\r\n### test: 90dev\r\n\r\nruntime (addition): 29\r\nruntime (lookup): 269494.98000000004\r\n\r\n\r\n### test: uuid-flatten\r\n\r\nruntime (addition): 18.079999999999984\r\nruntime (lookup): 252126.\r\n\r\n\r\n### test: WeakMap\r\n\r\nruntime (addition): 19.139999999999986\r\nruntime (lookup): 100928.78\r\n\r\n\r\n```js\r\n\tvar objects = [];\r\n\tvar n = 10000;\r\n\tvar i,j,o, t0, t1;\r\n\r\n\tconsole.log( 'test: WeakMap');\r\n\r\n\tfor ( i = 0; i < n \/ 5; i++ ) {\r\n\r\n\t\tobjects.push( new THREE.Object3D() );\r\n\t\tobjects.push( new THREE.BufferGeometry() );\r\n\t\tobjects.push( new THREE.MeshBasicMaterial() );\r\n\t\tobjects.push( new THREE.Texture() );\r\n\t\tobjects.push( new THREE.Texture() );\r\n\r\n\t}\r\n\r\n\tvar properties = new THREE.WebGLProperties();\r\n\r\n\tt0 = performance.now();\r\n\r\n\tfor ( i = 0; i < objects.length; i++ ) {\r\n\r\n\t\tproperties.get( objects[ i ] );\r\n\r\n\t}\r\n\r\n\tt1 = performance.now();\r\n\r\n\tconsole.log( 'runtime (addition):', t1 - t0 );\r\n\r\n\tt0 = performance.now();\r\n\r\n\tfor ( i = 0; i < 100000; i++ ) {\r\n\r\n\t\tfor ( j = 0; j < objects.length; j++ ) {\r\n\r\n\t\t\tproperties.get( objects[ j ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tt1 = performance.now();\r\n\r\n\tconsole.log( 'runtime (lookup):', t1 - t0 );\r\n\r\n```","created_at":"2018-01-12T16:00:16.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13077#issuecomment-357277594","id":357277594,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13077","node_id":"MDEyOklzc3VlQ29tbWVudDM1NzI3NzU5NA==","updated_at":"2018-01-12T20:11:25.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/357277594","user":{"following_url":"https:\/\/api.github.com\/users\/aardgoose\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/aardgoose\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/17364910?v=4","url":"https:\/\/api.github.com\/users\/aardgoose","gists_url":"https:\/\/api.github.com\/users\/aardgoose\/gists{\/gist_id}","html_url":"https:\/\/github.com\/aardgoose","subscriptions_url":"https:\/\/api.github.com\/users\/aardgoose\/subscriptions","node_id":"MDQ6VXNlcjE3MzY0OTEw","repos_url":"https:\/\/api.github.com\/users\/aardgoose\/repos","received_events_url":"https:\/\/api.github.com\/users\/aardgoose\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/aardgoose\/starred{\/owner}{\/repo}","site_admin":false,"login":"aardgoose","type":"User","id":17364910,"followers_url":"https:\/\/api.github.com\/users\/aardgoose\/followers","organizations_url":"https:\/\/api.github.com\/users\/aardgoose\/orgs"}},{"index":9,"author_association":"OWNER","body":"Interesting. I'm all for adopting `WeakMap`. Would you like to do a new PR only for that change? We can merge it at the beginning of the next cycle (next week) and try it for a month.","created_at":"2018-01-12T20:10:57.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13077#issuecomment-357341816","id":357341816,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13077","node_id":"MDEyOklzc3VlQ29tbWVudDM1NzM0MTgxNg==","updated_at":"2018-01-12T20:10:57.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/357341816","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":10,"author_association":"CONTRIBUTOR","body":"Done: #13102 \r\n\r\nActually for the lazy uuid setter\/getter copying to work in IE11 a polyfill for getOwnPropertyDescriptors() is needed.","created_at":"2018-01-12T22:58:11.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13077#issuecomment-357377556","id":357377556,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13077","node_id":"MDEyOklzc3VlQ29tbWVudDM1NzM3NzU1Ng==","updated_at":"2018-01-12T22:58:11.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/357377556","user":{"following_url":"https:\/\/api.github.com\/users\/aardgoose\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/aardgoose\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/17364910?v=4","url":"https:\/\/api.github.com\/users\/aardgoose","gists_url":"https:\/\/api.github.com\/users\/aardgoose\/gists{\/gist_id}","html_url":"https:\/\/github.com\/aardgoose","subscriptions_url":"https:\/\/api.github.com\/users\/aardgoose\/subscriptions","node_id":"MDQ6VXNlcjE3MzY0OTEw","repos_url":"https:\/\/api.github.com\/users\/aardgoose\/repos","received_events_url":"https:\/\/api.github.com\/users\/aardgoose\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/aardgoose\/starred{\/owner}{\/repo}","site_admin":false,"login":"aardgoose","type":"User","id":17364910,"followers_url":"https:\/\/api.github.com\/users\/aardgoose\/followers","organizations_url":"https:\/\/api.github.com\/users\/aardgoose\/orgs"}}]}