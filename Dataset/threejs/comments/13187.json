{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"COLLABORATOR","body":"TBH, i would prefer a solution which is less \"hacky\" even if that means we are not fully backwards compatible. Such changes can be noted in the migration guide:\r\n\r\nhttps:\/\/github.com\/mrdoob\/three.js\/wiki\/Migration-Guide \r\n\r\nSo i vote to slightly refactor `ObjectLoader` in the way I've mentioned in https:\/\/github.com\/mrdoob\/three.js\/issues\/13177#issuecomment-360781725","created_at":"2018-01-28T11:01:31.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13187#issuecomment-361054358","id":361054358,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13187","node_id":"MDEyOklzc3VlQ29tbWVudDM2MTA1NDM1OA==","updated_at":"2018-01-28T11:02:11.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/361054358","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":1,"author_association":"CONTRIBUTOR","body":"Sounds cleaner to me as well, I'm just used to being overly cautious on backward-compatibility! \ud83d\ude04 \r\n\r\nSo to clarify the changes:\r\n\r\n- All images in the object being loaded will use the manager passed to the constructor of the `ObjectLoader` (else `DefaultLoadingManager` if nothing passed)\r\n- No ability to change that \u261d\ufe0f behavior via an option\r\n- Does it make sense to have image load errors trigger the `onError` callbacks (i.e., `parse` and `parseImages` would now also accept `onProgress, onError` and `load` would forward its arguments on)?","created_at":"2018-01-28T18:17:03.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13187#issuecomment-361083425","id":361083425,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13187","node_id":"MDEyOklzc3VlQ29tbWVudDM2MTA4MzQyNQ==","updated_at":"2018-01-28T18:17:03.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/361083425","user":{"following_url":"https:\/\/api.github.com\/users\/emeyex\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/emeyex\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/33731918?v=4","url":"https:\/\/api.github.com\/users\/emeyex","gists_url":"https:\/\/api.github.com\/users\/emeyex\/gists{\/gist_id}","html_url":"https:\/\/github.com\/emeyex","subscriptions_url":"https:\/\/api.github.com\/users\/emeyex\/subscriptions","node_id":"MDQ6VXNlcjMzNzMxOTE4","repos_url":"https:\/\/api.github.com\/users\/emeyex\/repos","received_events_url":"https:\/\/api.github.com\/users\/emeyex\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/emeyex\/starred{\/owner}{\/repo}","site_admin":false,"login":"emeyex","type":"User","id":33731918,"followers_url":"https:\/\/api.github.com\/users\/emeyex\/followers","organizations_url":"https:\/\/api.github.com\/users\/emeyex\/orgs"}},{"index":2,"author_association":"CONTRIBUTOR","body":"Checked the behavior of `GLTFLoader`, it looks like image load errors do indeed trigger `onError` callbacks, so making the changes above would make things more consistent between `ObjectLoader` and `GLTFLoader`. Will push up changes matching the above bullet points.","created_at":"2018-01-28T18:56:38.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13187#issuecomment-361086322","id":361086322,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13187","node_id":"MDEyOklzc3VlQ29tbWVudDM2MTA4NjMyMg==","updated_at":"2018-01-28T18:56:38.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/361086322","user":{"following_url":"https:\/\/api.github.com\/users\/emeyex\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/emeyex\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/33731918?v=4","url":"https:\/\/api.github.com\/users\/emeyex","gists_url":"https:\/\/api.github.com\/users\/emeyex\/gists{\/gist_id}","html_url":"https:\/\/github.com\/emeyex","subscriptions_url":"https:\/\/api.github.com\/users\/emeyex\/subscriptions","node_id":"MDQ6VXNlcjMzNzMxOTE4","repos_url":"https:\/\/api.github.com\/users\/emeyex\/repos","received_events_url":"https:\/\/api.github.com\/users\/emeyex\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/emeyex\/starred{\/owner}{\/repo}","site_admin":false,"login":"emeyex","type":"User","id":33731918,"followers_url":"https:\/\/api.github.com\/users\/emeyex\/followers","organizations_url":"https:\/\/api.github.com\/users\/emeyex\/orgs"}},{"index":3,"author_association":"COLLABORATOR","body":"Closing for now. If we actually change `ObjectLoader`, we need to implement that differently.","created_at":"2018-02-01T08:39:48.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13187#issuecomment-362196144","id":362196144,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13187","node_id":"MDEyOklzc3VlQ29tbWVudDM2MjE5NjE0NA==","updated_at":"2018-02-01T08:39:48.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/362196144","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":4,"author_association":"CONTRIBUTOR","body":"I am curious to know how it needs to be implemented differently. Is there an issue with this PR as it currently stands? I believe it matches the guidelines you laid out in #13177, and passes my tests using several different objects (some with multiple textures). If there is a specific test suite I can run it through, I would also be more than happy to.","created_at":"2018-02-01T16:30:57.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13187#issuecomment-362321628","id":362321628,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13187","node_id":"MDEyOklzc3VlQ29tbWVudDM2MjMyMTYyOA==","updated_at":"2018-02-01T16:30:57.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/362321628","user":{"following_url":"https:\/\/api.github.com\/users\/emeyex\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/emeyex\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/33731918?v=4","url":"https:\/\/api.github.com\/users\/emeyex","gists_url":"https:\/\/api.github.com\/users\/emeyex\/gists{\/gist_id}","html_url":"https:\/\/github.com\/emeyex","subscriptions_url":"https:\/\/api.github.com\/users\/emeyex\/subscriptions","node_id":"MDQ6VXNlcjMzNzMxOTE4","repos_url":"https:\/\/api.github.com\/users\/emeyex\/repos","received_events_url":"https:\/\/api.github.com\/users\/emeyex\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/emeyex\/starred{\/owner}{\/repo}","site_admin":false,"login":"emeyex","type":"User","id":33731918,"followers_url":"https:\/\/api.github.com\/users\/emeyex\/followers","organizations_url":"https:\/\/api.github.com\/users\/emeyex\/orgs"}}]}