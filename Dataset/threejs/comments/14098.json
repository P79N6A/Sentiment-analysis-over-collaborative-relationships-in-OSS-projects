{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"COLLABORATOR","body":"Actually, I am not in favor of the approach used in this PR (using injections and string substitutions) because the shader code is obfuscated; the modified shader is not readable. In the [current listing](https:\/\/github.com\/mrdoob\/three.js\/blob\/dev\/examples\/webgl_buffergeometry_instancing_lambert.html) it is.\r\n\r\nUsers learn from these examples.","created_at":"2018-05-20T04:59:12.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14098#issuecomment-390457976","id":390457976,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14098","node_id":"MDEyOklzc3VlQ29tbWVudDM5MDQ1Nzk3Ng==","updated_at":"2018-05-20T04:59:12.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/390457976","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":1,"author_association":"CONTRIBUTOR","body":"I stand somewhere in the middle on this. I referred to what you're describing as \"academic value\" - very basic series of atomic steps needed to create an effect or illustrate an algorithm. But per a water-cooler conversation i had with @mrdoob it sounded like he might be in favor of showing how to \"properly\" use the api. \r\n\r\nMy understanding was that, if there already exists an example of how to use templates, then why not give visibility to `onBeforeCompile` with a well suited example? (I don't know if another one exists though). The current `webgl materials modified` example is more of an artistic expression than it helps illustrate what kind of problems `onBeforeCompile` or shader injection in general could solve. This seems like a real world example, and a good usage of this particular API. \r\n\r\nThe extra 100 lines may make the example daunting, and harder to follow. With comments and proper documentation, a user would know where to look for templates and possible have a better understanding of how they work. \r\n\r\nAs is, i think the example could use more comments, perhaps explaining the following:\r\n\r\n- why is a depth shader needed\r\n- why is the instancing code needed\r\n- why it needs to happen where its happening\r\n- what is the preprocessor syntax, aka why `#ifdef`s \r\n","created_at":"2018-05-20T06:25:07.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14098#issuecomment-390460801","id":390460801,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14098","node_id":"MDEyOklzc3VlQ29tbWVudDM5MDQ2MDgwMQ==","updated_at":"2018-05-20T06:32:28.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/390460801","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":2,"author_association":"OWNER","body":"Maybe this is not the best example to add `onBeforeCompile` to actually. I'm hoping that the instancing examples will no longer be relevant as soon as we manage to introduce instancing in core.","created_at":"2018-05-22T18:53:25.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14098#issuecomment-391101976","id":391101976,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14098","node_id":"MDEyOklzc3VlQ29tbWVudDM5MTEwMTk3Ng==","updated_at":"2018-05-22T18:53:25.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/391101976","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":3,"author_association":"OWNER","body":"Sorry about that!","created_at":"2018-05-22T18:54:18.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14098#issuecomment-391102252","id":391102252,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14098","node_id":"MDEyOklzc3VlQ29tbWVudDM5MTEwMjI1Mg==","updated_at":"2018-05-22T18:54:18.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/391102252","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":4,"author_association":"CONTRIBUTOR","body":"Could you elaborate more? The shader code here is not even glsl, it\u2019s just an ordered list of these include statements. ","created_at":"2018-05-22T19:30:14.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14098#issuecomment-391112803","id":391112803,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14098","node_id":"MDEyOklzc3VlQ29tbWVudDM5MTExMjgwMw==","updated_at":"2018-05-22T19:30:14.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/391112803","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":5,"author_association":"OWNER","body":"Ideally, this example should just look something like this:\r\n\r\n```js\r\nvar geometry =  new THREE.TorusBufferGeometry( 2, 0.5, 8, 128 );\r\nvar material = new THREE.MeshLamberMaterial();\r\nvar meshes = new THREE.InstancedMesh( geometry, material );\r\nvar positions = new THREE.Curves.TorusKnot( 10 ).getSpacedPoints( 256 );\r\nmeshes.setPositions( positions );\r\nscene.add( meshes );\r\n```","created_at":"2018-05-22T19:40:58.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14098#issuecomment-391115841","id":391115841,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14098","node_id":"MDEyOklzc3VlQ29tbWVudDM5MTExNTg0MQ==","updated_at":"2018-05-22T19:40:58.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/391115841","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":6,"author_association":"CONTRIBUTOR","body":"@mrdoob there are two different things outlined in the example IMHO:\r\n\r\n1. how to use a webgl\/opengl feature called \"instancing\" in real life.\r\n2. how to modify existing shader templates to do more stuff. \r\n\r\n`onBeforeCompile` illustrates how to do both better (with less code, closer to real life). \r\n\r\nIf you remove this example altogether in favor of the suggested API, then this example was a waste of resources. `InstancedMesh` has been proposed a year ago, and is used a lot as an npm module, **a better use of resources would be merging `InstancedMesh`.** \r\n\r\nhttps:\/\/github.com\/mrdoob\/three.js\/pull\/10750\r\n\r\nI would still use this for an example for `onBeforeCompile` **even if InstancedMesh** existed, it doesn't matter that it's specifically illustrating instancing in this case. This feature should be so powerful that theoretically there should be hundreds of different examples by now, but there are none. \r\n\r\ntldr;\r\n>Ideally, this example should just look something like this:\r\n\r\nYou're talking about `webgl-mesh-instanced` not `webgl-materials-instanced-lambert`. \r\n\r\nOne is an example of how to use `InstancedMesh` the other is an example of how to write various different materials (instanced + lambert).\r\n\r\ntldr2;\r\n\r\nWe probably don't want:\r\n`webgl-materials-instanced-lambert`\r\n`webgl-materials-instanced-phong`\r\n`webgl-materials-instanced-standard`\r\n`webgl-materials-instanced-basic`\r\n...\r\n\r\nWe want:\r\n`webgl-materials-modified-but-not-with-that-twist-instead-something-useful-like-instancing-or-normal-maps-etc`\r\n`instanced-mesh-with-any-material`\r\n\r\n@WestLangley \r\n>Users learn from these examples.\r\n\r\nI'm confused, i'm not sure what they're supposed to learn. If **this** example should look like @mrdoob described, then it seems like users would learn something completely different. ","created_at":"2018-05-22T19:54:53.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14098#issuecomment-391119741","id":391119741,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14098","node_id":"MDEyOklzc3VlQ29tbWVudDM5MTExOTc0MQ==","updated_at":"2018-05-22T20:16:25.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/391119741","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":7,"author_association":"OWNER","body":"I think this example was just to show how to use built-in materials with instancing with the current code.\r\n\r\n> If you remove this example altogether in favor of the suggested API, then this example was a waste of resources. `InstancedMesh` has been proposed a year ago, and is used a lot as an npm module, a better use of resources would be merging `InstancedMesh`.\r\n\r\nPlease, be mindful with your wording. People don't like to be told that they're wasting their time.\r\n\r\nAs per the `InstancedMesh` PRs... As far as I remember I think they still had unresolved issues?","created_at":"2018-05-22T20:18:11.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14098#issuecomment-391126437","id":391126437,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14098","node_id":"MDEyOklzc3VlQ29tbWVudDM5MTEyNjQzNw==","updated_at":"2018-05-22T20:18:45.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/391126437","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":8,"author_association":"CONTRIBUTOR","body":"Sorry i didn't mean it like that but i feel that i am making a valid point. This is an example of how to do something that involves GLSL, what you are suggesting is an example of how to use a javascript class thats part of three.js. \r\n\r\nWhat i meant by wasted time:\r\n\r\nWith `InstancedMesh` is there a reason for this example to stay?\r\n\r\nyes - not a waste of time\r\nno - ? _(for me, if it were my example, it would feel like i wasted time)_\r\n\r\nWith your suggestion, i see absolutely no reason for this to stay. Why would anyone do instancing like this, if it's 3 lines of code with what you presented. \r\n\r\nIf however this is re-purposed to show how to extend materials, with something useful, then this example could stay **despite the availability of `InstancedMesh`.** \r\n\r\n___\r\n>As far as I remember I think they still had unresolved issues?\r\n\r\nNo, it never had any issues and worked fine since day one. It had some open questions as to how far the automagic should go _(should you be able to change roughness across instances for example)_. It's downloaded roughly a 100 times a month off of npm. \r\n\r\nPeople seem to use it fine, and surprisingly, are not asking for any features. I just like to think of the next steps when i code or design something, (i'm a chess player). \r\n\r\n>The issue may be with three's lifecycle though. The code submitted is not the cleanest if it has to work around the limitations of `THREE.WebGLRenderer`, with a line or two of modifications, the code becomes much cleaner, but also much harder to submit\/review. \r\n\r\n>The npm module for example, has some weird design decisions, **stemming from the lack of access to three's core, but it still works just fine**. My whole goal with this proposal is to reduce these dependencies and the coupling. \r\n\r\nIf you have an environment set, you can get this up and running in 1 minute:\r\nhttps:\/\/www.npmjs.com\/package\/three-instanced-mesh\r\n\r\n**fun fact:**\r\n\r\ntoday marks the anniversary of this npm module going live and just... working :)\r\n\r\n\r\n","created_at":"2018-05-22T20:24:34.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14098#issuecomment-391128423","id":391128423,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14098","node_id":"MDEyOklzc3VlQ29tbWVudDM5MTEyODQyMw==","updated_at":"2018-05-22T20:34:57.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/391128423","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":9,"author_association":"OWNER","body":"> With `InstancedMesh` is there a reason for this example to stay?\r\n\r\nNo. But until then, it's useful.","created_at":"2018-05-22T21:45:27.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14098#issuecomment-391151038","id":391151038,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14098","node_id":"MDEyOklzc3VlQ29tbWVudDM5MTE1MTAzOA==","updated_at":"2018-05-22T21:45:27.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/391151038","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":10,"author_association":"CONTRIBUTOR","body":"Well, I suggest reconsidering this. For learning purposes it would make sense to keep an example like this, and introduce others. I see little reason to have an example for lambert alone, especially if `InstancedMesh` works with all the materials. With `onBeforeCompile` this example could (for now) illustrate this concept on all the materials as well. Peace. ","created_at":"2018-05-22T21:54:59.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14098#issuecomment-391153402","id":391153402,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14098","node_id":"MDEyOklzc3VlQ29tbWVudDM5MTE1MzQwMg==","updated_at":"2018-05-22T22:14:20.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/391153402","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":11,"author_association":"CONTRIBUTOR","body":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14069\r\n\r\nIt's really hard to pinpoint what you guys want :)\r\n\r\n@WestLangley @mrdoob \r\n\r\n>Consequently, rather than adding Lambert shader chunks into a custom ShaderMaterial (as in #14012), it is preferable to add custom instancing code into the built-in MeshLambertMaterial, instead.\r\n\r\nIt feels odd to modify a global object such as `THREE.ShaderLib`, but if that's the preferred way to achieve this from the quote, there's very little that can be argued there. Not sure what `onBeforeCompile` should be used for if it doesn't qualify for `add custom instancing code into the built-in (material)`","created_at":"2018-05-28T13:31:35.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14098#issuecomment-392527819","id":392527819,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14098","node_id":"MDEyOklzc3VlQ29tbWVudDM5MjUyNzgxOQ==","updated_at":"2018-05-28T13:43:08.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/392527819","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":12,"author_association":"COLLABORATOR","body":"@pailhead We are all trying to work through this. We are considering a variety of techniques to see what the pitfalls are. Your contributions and experiments have been very illuminating. It is not always clear what approach is 'best'. Often that is a subjective decision.\r\n\r\nAll you and I can do is voice an opinion. I have learned to simply state my opinion and avoid protracted debates. @mrdoob will make a decision and we will move on. I don't take it personally if the decision is not my preference. I think that is good advice for anyone to follow.\r\n\r\nBe patient, we will get there! :)\r\n\r\n","created_at":"2018-05-28T16:29:49.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14098#issuecomment-392566267","id":392566267,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14098","node_id":"MDEyOklzc3VlQ29tbWVudDM5MjU2NjI2Nw==","updated_at":"2018-05-28T20:09:28.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/392566267","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":13,"author_association":"CONTRIBUTOR","body":"But how do we figure out what's best without debates :D \r\n\r\n","created_at":"2018-05-28T19:40:08.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14098#issuecomment-392592492","id":392592492,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14098","node_id":"MDEyOklzc3VlQ29tbWVudDM5MjU5MjQ5Mg==","updated_at":"2018-05-28T19:40:08.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/392592492","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":14,"author_association":"COLLABORATOR","body":"We have some debates, but in general, you and I don't decide what's 'best'. @mrdoob makes that judgment call.\r\n","created_at":"2018-05-28T20:47:29.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14098#issuecomment-392601106","id":392601106,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14098","node_id":"MDEyOklzc3VlQ29tbWVudDM5MjYwMTEwNg==","updated_at":"2018-05-28T20:47:29.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/392601106","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":15,"author_association":"CONTRIBUTOR","body":"@WestLangley \r\n\r\nBut @mrdoob doesn't have the time to even scratch the surface on these debates. When i got some of his precious times, it sounded like he was really in favor of this PR, i think your dismissal influenced his decision, a lot if not completely :)\r\n\r\nI would really appreciate a brief discussion here with you, you seemed to have liked this way back in the day:\r\nhttps:\/\/github.com\/mrdoob\/three.js\/pull\/10791\r\n\r\n\r\n>Yes, this PR allows for the replacement of shader chunks. It would be convenient to be able to do that on a per-material-instance basis.\r\n>It could also be useful when using InstancedBufferGeometry with built-in materials. In such a case, one may want to replace begin_vertex or default_normal, for example, with custom shader code.\r\n\r\nSeems like you were in favor of this PR in two other places, but dismissed it?\r\n\r\nWould an alternative example of instancing (not just lambert) with `onBeforeCompile` suffice? I think ill muster this up in the meantime. \r\n\r\nAlso what mrdoob mentions above is basically the api from https:\/\/www.npmjs.com\/package\/three-instanced-mesh and https:\/\/github.com\/mrdoob\/three.js\/pull\/10750. Not to offend anyone but i think apples and oranges are somewhat mixed here. I made the npm module to R&D and see what's needed to not have this coupled with the core. I suggested `materialIncludes`, but `onBeforeCompile` may work too. `InstancedMesh` was abandoned because of no further input. There were lots and lots of findings in this process. ","created_at":"2018-05-28T21:05:17.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14098#issuecomment-392603290","id":392603290,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14098","node_id":"MDEyOklzc3VlQ29tbWVudDM5MjYwMzI5MA==","updated_at":"2018-05-28T21:20:25.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/392603290","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}}]}