{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"OWNER","body":"> This is all quite tedious.\r\n\r\nIndeed... It's good exploration to know how it could be done inside core though!","created_at":"2018-05-16T06:05:05.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14069#issuecomment-389404998","id":389404998,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14069","node_id":"MDEyOklzc3VlQ29tbWVudDM4OTQwNDk5OA==","updated_at":"2018-05-16T06:05:37.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/389404998","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":1,"author_association":"OWNER","body":"Thanks!","created_at":"2018-05-16T06:05:18.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14069#issuecomment-389405047","id":389405047,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14069","node_id":"MDEyOklzc3VlQ29tbWVudDM4OTQwNTA0Nw==","updated_at":"2018-05-16T06:05:18.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/389405047","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":2,"author_association":"CONTRIBUTOR","body":"Why is only Lambert considered for instancing examples? \r\n\r\n_[There is a demo](http:\/\/dusanbosnjak.com\/test\/webGL\/three-instanced-mesh\/webgl_instanced_mesh_v4.html) with phong and standard working too._\r\n\r\n@WestLangley \r\n>Consequently, rather than adding Lambert shader chunks into a custom ShaderMaterial (as in #14012), it is preferable to add custom instancing code into the built-in MeshLambertMaterial, instead.\r\n\r\nWhat's the \"built-in\" `MeshLambertMaterial`. I'm really confused about this. \r\nhttps:\/\/github.com\/mrdoob\/three.js\/pull\/14098\r\n\r\nShould be doing exactly what you are describing. \r\n\r\nI'm not sure which version this is, but should this be the example of how this is done? \r\n\r\nModifying the global `THREE.ShaderLib` may possibly be not a good practice? However, if one opts to modify, there should be less code if `THREE.ShaderChunk` was modified instead. It would also work on other materials, not just lambert.\r\n\r\nNot sure why `onBeforeCompile` exists if this is the three.js pattern?","created_at":"2018-05-28T09:15:37.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14069#issuecomment-392470191","id":392470191,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14069","node_id":"MDEyOklzc3VlQ29tbWVudDM5MjQ3MDE5MQ==","updated_at":"2018-05-28T13:39:12.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/392470191","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}}]}