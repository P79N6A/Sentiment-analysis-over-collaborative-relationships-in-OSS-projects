{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"COLLABORATOR","body":"Scaling the camera is not supported. Can you please explain your use case?\r\n\r\nGranted, even if the camera is unscaled, the camera could be added as a child of another object, so your proposed code change has merit.\r\n\r\nPlease experiment with this pattern and see what consequences you find:\r\n```javascript\r\nvar group = new THREE.Group();\r\nscene.add( group );\r\ngroup.add( camera );\r\n\r\ngroup.scale.set( a, b, c );\r\ncamera.scale.set( d, e, f );\r\n```","created_at":"2018-06-26T17:07:21.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14372#issuecomment-400391528","id":400391528,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14372","node_id":"MDEyOklzc3VlQ29tbWVudDQwMDM5MTUyOA==","updated_at":"2018-06-26T17:07:21.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/400391528","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":1,"author_association":"CONTRIBUTOR","body":"The use case is to flip the view space around an axis, effectively mirroring the rendered image. It is perfectly supported and works well, except that normals are inverted. In the PR that I referenced this bug was fixed for object transforms, but not for view transforms. I think this should be corrected.","created_at":"2018-06-26T18:30:09.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14372#issuecomment-400417318","id":400417318,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14372","node_id":"MDEyOklzc3VlQ29tbWVudDQwMDQxNzMxOA==","updated_at":"2018-06-26T18:30:09.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/400417318","user":{"following_url":"https:\/\/api.github.com\/users\/Korijn\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Korijn\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/1882046?v=4","url":"https:\/\/api.github.com\/users\/Korijn","gists_url":"https:\/\/api.github.com\/users\/Korijn\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Korijn","subscriptions_url":"https:\/\/api.github.com\/users\/Korijn\/subscriptions","node_id":"MDQ6VXNlcjE4ODIwNDY=","repos_url":"https:\/\/api.github.com\/users\/Korijn\/repos","received_events_url":"https:\/\/api.github.com\/users\/Korijn\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Korijn\/starred{\/owner}{\/repo}","site_admin":false,"login":"Korijn","type":"User","id":1882046,"followers_url":"https:\/\/api.github.com\/users\/Korijn\/followers","organizations_url":"https:\/\/api.github.com\/users\/Korijn\/orgs"}},{"index":2,"author_association":"COLLABORATOR","body":"I can understand the use case for mirroring a scene object. What is your use case for mirroring the rendered image? Can you use post-processing for that?","created_at":"2018-06-26T18:49:58.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14372#issuecomment-400423272","id":400423272,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14372","node_id":"MDEyOklzc3VlQ29tbWVudDQwMDQyMzI3Mg==","updated_at":"2018-06-26T18:49:58.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/400423272","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":3,"author_association":"CONTRIBUTOR","body":"if you negatively scale your camera, what happens is you turn camera frustum inside-out, in which case, rightly, nothing bound by the frustum should be rendered, and everything outside of it should be, i think? \r\n\r\nIt's an interesting proposition which I personally haven't thought much about.","created_at":"2018-06-27T09:30:46.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14372#issuecomment-400606941","id":400606941,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14372","node_id":"MDEyOklzc3VlQ29tbWVudDQwMDYwNjk0MQ==","updated_at":"2018-06-27T09:30:46.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/400606941","user":{"following_url":"https:\/\/api.github.com\/users\/Usnul\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Usnul\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/5939063?v=4","url":"https:\/\/api.github.com\/users\/Usnul","gists_url":"https:\/\/api.github.com\/users\/Usnul\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Usnul","subscriptions_url":"https:\/\/api.github.com\/users\/Usnul\/subscriptions","node_id":"MDQ6VXNlcjU5MzkwNjM=","repos_url":"https:\/\/api.github.com\/users\/Usnul\/repos","received_events_url":"https:\/\/api.github.com\/users\/Usnul\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Usnul\/starred{\/owner}{\/repo}","site_admin":false,"login":"Usnul","type":"User","id":5939063,"followers_url":"https:\/\/api.github.com\/users\/Usnul\/followers","organizations_url":"https:\/\/api.github.com\/users\/Usnul\/orgs"}},{"index":4,"author_association":"CONTRIBUTOR","body":"@Usnul That is not what is happening. First the camera applies its view matrix (camera.matrixWorld) to the world, to align it with view-space where (0, 0, -1) is the view direction, (0, 0, 0) is the camera position and camera up is (0, 1, 0). Then it applies the projection matrix (camera.projectionMatrix), which takes a frustum in view space and projects it onto the screen. The scale, position and rotation properties of camera go into camera.matrixWorld (the view matrix), not in the projection matrix. So, the frustum is not turned inside out, just the world.","created_at":"2018-06-27T09:55:19.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14372#issuecomment-400613865","id":400613865,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14372","node_id":"MDEyOklzc3VlQ29tbWVudDQwMDYxMzg2NQ==","updated_at":"2018-06-27T09:56:14.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/400613865","user":{"following_url":"https:\/\/api.github.com\/users\/Korijn\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Korijn\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/1882046?v=4","url":"https:\/\/api.github.com\/users\/Korijn","gists_url":"https:\/\/api.github.com\/users\/Korijn\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Korijn","subscriptions_url":"https:\/\/api.github.com\/users\/Korijn\/subscriptions","node_id":"MDQ6VXNlcjE4ODIwNDY=","repos_url":"https:\/\/api.github.com\/users\/Korijn\/repos","received_events_url":"https:\/\/api.github.com\/users\/Korijn\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Korijn\/starred{\/owner}{\/repo}","site_admin":false,"login":"Korijn","type":"User","id":1882046,"followers_url":"https:\/\/api.github.com\/users\/Korijn\/followers","organizations_url":"https:\/\/api.github.com\/users\/Korijn\/orgs"}},{"index":5,"author_association":"OWNER","body":"Inverting the camera scale sounds super hacky to me.  Have you considered using CSS instead?\r\n\r\n```js\r\nrenderer.domElement.style.transform = 'scaleX(-1)';\r\n```","created_at":"2018-06-27T10:09:56.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14372#issuecomment-400617815","id":400617815,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14372","node_id":"MDEyOklzc3VlQ29tbWVudDQwMDYxNzgxNQ==","updated_at":"2018-06-27T10:10:39.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/400617815","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":6,"author_association":"CONTRIBUTOR","body":"@Korijn \r\nExplain this to me please, if I have a frustum, which is defined by a set of 6 planes, and each plane has a normal and an offset, applying a negative scale to such a thing will invert normals, by design - right? Now, I don't know about you, but in my book a frustum with normals pointing OUT instead of IN is not an INCLUSION frustum, but and EXCLUSION one, it's like saying \"i want to see everything except for what's in this frustum\". \r\n\r\nI understand that the transfrom matrix and frustum paradigms exist in parallel and aren't actually strictly tied, so you _could_ compute a valid inclusion frustum after negatively scaling your transform matrix. Scaling a position is different from scaling a direction.","created_at":"2018-06-27T13:31:17.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14372#issuecomment-400672134","id":400672134,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14372","node_id":"MDEyOklzc3VlQ29tbWVudDQwMDY3MjEzNA==","updated_at":"2018-06-27T13:31:17.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/400672134","user":{"following_url":"https:\/\/api.github.com\/users\/Usnul\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Usnul\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/5939063?v=4","url":"https:\/\/api.github.com\/users\/Usnul","gists_url":"https:\/\/api.github.com\/users\/Usnul\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Usnul","subscriptions_url":"https:\/\/api.github.com\/users\/Usnul\/subscriptions","node_id":"MDQ6VXNlcjU5MzkwNjM=","repos_url":"https:\/\/api.github.com\/users\/Usnul\/repos","received_events_url":"https:\/\/api.github.com\/users\/Usnul\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Usnul\/starred{\/owner}{\/repo}","site_admin":false,"login":"Usnul","type":"User","id":5939063,"followers_url":"https:\/\/api.github.com\/users\/Usnul\/followers","organizations_url":"https:\/\/api.github.com\/users\/Usnul\/orgs"}},{"index":7,"author_association":"CONTRIBUTOR","body":"The reason we don't want to use post-processing effects (like CSS or image-space shaders) is that we still want to be able to project world space coordinates to 2D screen coordinates with `coord.project(camera)`.\r\n\r\nI'm not sure why you consider it hacky? It's just a transform of the view space?\r\n\r\nPut it another way: if you put the negative scale in the object transform instead of the camera transform (as is supported already before this PR), it will still end up in the modelViewMatrix and have the same effect on the frustum.","created_at":"2018-06-27T13:42:05.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14372#issuecomment-400675882","id":400675882,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14372","node_id":"MDEyOklzc3VlQ29tbWVudDQwMDY3NTg4Mg==","updated_at":"2018-06-27T13:42:05.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/400675882","user":{"following_url":"https:\/\/api.github.com\/users\/Korijn\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Korijn\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/1882046?v=4","url":"https:\/\/api.github.com\/users\/Korijn","gists_url":"https:\/\/api.github.com\/users\/Korijn\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Korijn","subscriptions_url":"https:\/\/api.github.com\/users\/Korijn\/subscriptions","node_id":"MDQ6VXNlcjE4ODIwNDY=","repos_url":"https:\/\/api.github.com\/users\/Korijn\/repos","received_events_url":"https:\/\/api.github.com\/users\/Korijn\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Korijn\/starred{\/owner}{\/repo}","site_admin":false,"login":"Korijn","type":"User","id":1882046,"followers_url":"https:\/\/api.github.com\/users\/Korijn\/followers","organizations_url":"https:\/\/api.github.com\/users\/Korijn\/orgs"}}]}