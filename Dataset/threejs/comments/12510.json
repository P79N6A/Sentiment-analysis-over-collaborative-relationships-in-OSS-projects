{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"COLLABORATOR","body":"From the website:\r\n\r\n> Historically, Chrome implemented dezippering such that when the value setter of an AudioParam was used, the value was not changed instantaneously. Instead, an exponential approach equivalent to setTargetValueAtTime was done. The actual time constant used was never specified and depended on the AudioParam. With the spec change in https:\/\/github.com\/WebAudio\/web-audio-api\/pull\/393, (Sep 2015), all dezippering was removed from the spec. Dezippering will be removed from Chrome. \r\nThe appropriate replacement is to use setTargetAtTime(value, context.currentTime, timeConstant), where timeConstant is probably around 10-20 ms, which was the typical value used in Chrome for dezippering.\r\n\r\nExplanation for dezippering: https:\/\/github.com\/WebAudio\/web-audio-api\/issues\/76#issuecomment-27954865\r\n\r\nI think this setup should work then:\r\n\r\n```javascript\r\nthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\r\n```","created_at":"2017-10-27T17:40:06.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12510#issuecomment-340037372","id":340037372,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12510","node_id":"MDEyOklzc3VlQ29tbWVudDM0MDAzNzM3Mg==","updated_at":"2017-10-27T17:40:06.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/340037372","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":1,"author_association":"COLLABORATOR","body":"I've realized that it might be no good idea to hard-code the value `timeConstant`. It's better to use the time delta value from the previous frame.\r\n\r\n@mrdoob Any ideas how we can provide such a time delta value to `AudioListener` and `Audio`?","created_at":"2017-11-03T13:24:53.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12510#issuecomment-341702128","id":341702128,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12510","node_id":"MDEyOklzc3VlQ29tbWVudDM0MTcwMjEyOA==","updated_at":"2017-11-03T13:24:53.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/341702128","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":2,"author_association":"OWNER","body":"@Mugen87 Seems like some objects may benefit from a `.update()` method which the renderer could call per frame... Another example is `VideoTexture`. https:\/\/github.com\/mrdoob\/three.js\/issues\/12605#issuecomment-343005903","created_at":"2017-11-22T10:27:37.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12510#issuecomment-346308681","id":346308681,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12510","node_id":"MDEyOklzc3VlQ29tbWVudDM0NjMwODY4MQ==","updated_at":"2017-11-22T10:27:37.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/346308681","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":3,"author_association":"COLLABORATOR","body":"Okay, i'll try to find a solution by using a `.update()`  method.","created_at":"2017-11-28T10:15:40.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12510#issuecomment-347476544","id":347476544,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12510","node_id":"MDEyOklzc3VlQ29tbWVudDM0NzQ3NjU0NA==","updated_at":"2017-11-28T10:15:40.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/347476544","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":4,"author_association":"COLLABORATOR","body":"I think it should be sufficient if the renderer just updates `AudioListener`. Objects of type `Audio` and `PositionalAudio` can access the time delta value via their `listener` reference (a ctor parameter). The actual problem is: How can the renderer reliably find an instance of `AudioListener`? If we determine that `AudioListener` has to be a child of the camera, it might be an easy task. But this approach introduces limitations since `AudioListener` won't work correctly if users add it to the scene graph.","created_at":"2017-11-30T10:03:12.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12510#issuecomment-348140580","id":348140580,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12510","node_id":"MDEyOklzc3VlQ29tbWVudDM0ODE0MDU4MA==","updated_at":"2017-12-17T19:40:09.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/348140580","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":5,"author_association":"OWNER","body":"> But this approach introduces limitations since `AudioListener` won't work correctly if users add it to the scene graph.\r\n\r\nYou mean conceptually or technically?","created_at":"2017-12-05T09:37:54.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12510#issuecomment-349248670","id":349248670,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12510","node_id":"MDEyOklzc3VlQ29tbWVudDM0OTI0ODY3MA==","updated_at":"2017-12-05T09:37:54.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/349248670","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":6,"author_association":"COLLABORATOR","body":"I guess....conceptually? (not sure about that^^) \r\n\r\nMy point is: If the renderer only checks the camera for an instance of `AudioListener`, it won't find the object in the scene graph. I don't know if there are any use cases where an audio listener is not a child of the camera but added elsewhere in the scene.\r\n\r\nI'd like to have a easy way to define: \"Hey renderer, that is the one and only listener of the scene. Be so kind and update it every frame.\"","created_at":"2017-12-05T10:00:07.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12510#issuecomment-349254677","id":349254677,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12510","node_id":"MDEyOklzc3VlQ29tbWVudDM0OTI1NDY3Nw==","updated_at":"2017-12-05T15:23:22.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/349254677","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":7,"author_association":"COLLABORATOR","body":"Maybe with some explicit code?\r\n\r\n```javascript\r\nrenderer.setAudioListener( listener );\r\n```","created_at":"2017-12-05T15:24:33.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12510#issuecomment-349337327","id":349337327,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12510","node_id":"MDEyOklzc3VlQ29tbWVudDM0OTMzNzMyNw==","updated_at":"2017-12-05T15:25:07.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/349337327","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":8,"author_association":"NONE","body":"Not sure if this is the most elegant solution\/complies with the three.js coding conventions, but in the meantime anyone looking for a quick fix, I just required setVolume to take in the delta as a parameter each time the renderer is updated and it works for me.\r\n\r\n`setVolume:function(value,delta){this.gain.gain.setTargetAtTime(value, this.context.currentTime, delta);return this}});`\r\n","created_at":"2017-12-15T07:30:22.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12510#issuecomment-351933917","id":351933917,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12510","node_id":"MDEyOklzc3VlQ29tbWVudDM1MTkzMzkxNw==","updated_at":"2017-12-15T07:30:22.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/351933917","user":{"following_url":"https:\/\/api.github.com\/users\/jshamble\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/jshamble\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/6364311?v=4","url":"https:\/\/api.github.com\/users\/jshamble","gists_url":"https:\/\/api.github.com\/users\/jshamble\/gists{\/gist_id}","html_url":"https:\/\/github.com\/jshamble","subscriptions_url":"https:\/\/api.github.com\/users\/jshamble\/subscriptions","node_id":"MDQ6VXNlcjYzNjQzMTE=","repos_url":"https:\/\/api.github.com\/users\/jshamble\/repos","received_events_url":"https:\/\/api.github.com\/users\/jshamble\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/jshamble\/starred{\/owner}{\/repo}","site_admin":false,"login":"jshamble","type":"User","id":6364311,"followers_url":"https:\/\/api.github.com\/users\/jshamble\/followers","organizations_url":"https:\/\/api.github.com\/users\/jshamble\/orgs"}},{"index":9,"author_association":"COLLABORATOR","body":"@jshamble Yes, this solution works but it also a bit strange that `.setVolume()` has a time delta parameter. Such a technical detail should be hidden by the library.\r\n\r\nAnyway, we are happy for any suggestions that help us to implement this feature \ud83d\udc4d ","created_at":"2017-12-17T17:58:33.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12510#issuecomment-352273447","id":352273447,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12510","node_id":"MDEyOklzc3VlQ29tbWVudDM1MjI3MzQ0Nw==","updated_at":"2017-12-17T22:22:43.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/352273447","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":10,"author_association":"COLLABORATOR","body":"If we can't find a solution in time, i suggest to do this:\r\n```javascript\r\nthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\r\n```\r\nThis means to use a fix value for the `timeConstant` parameter. In the meantime, we can still search for a better approach.","created_at":"2017-12-19T11:18:18.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12510#issuecomment-352719736","id":352719736,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12510","node_id":"MDEyOklzc3VlQ29tbWVudDM1MjcxOTczNg==","updated_at":"2017-12-19T11:18:24.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/352719736","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":11,"author_association":"CONTRIBUTOR","body":"more deprecation warnings from the [sandbox example](https:\/\/rawgit.com\/mrdoob\/three.js\/dev\/examples\/?q=webaud#webaudio_sandbox), M65 is the current stable version (`65.0.3325.181` here)\r\n\r\n> [Deprecation] OscillatorNode.frequency.value setter smoothing is deprecated and will be removed in M64, around January 2018. Please use setTargetAtTime() instead if smoothing is needed. See https:\/\/www.chromestatus.com\/features\/5287995770929152 for more details.\r\n\r\n> [Deprecation] AudioParam value setter will become equivalent to AudioParam.setValueAtTime() in M65, around March 2018  See https:\/\/webaudio.github.io\/web-audio-api\/#dom-audioparam-value for more details.\r\n\r\n> [Deprecation] GainNode.gain.value setter smoothing is deprecated and will be removed in M64, around January 2018. Please use setTargetAtTime() instead if smoothing is needed. See https:\/\/www.chromestatus.com\/features\/5287995770929152 for more details.","created_at":"2018-03-28T18:53:51.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12510#issuecomment-376996926","id":376996926,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12510","node_id":"MDEyOklzc3VlQ29tbWVudDM3Njk5NjkyNg==","updated_at":"2018-03-28T18:53:51.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/376996926","user":{"following_url":"https:\/\/api.github.com\/users\/moraxy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/moraxy\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/4936897?v=4","url":"https:\/\/api.github.com\/users\/moraxy","gists_url":"https:\/\/api.github.com\/users\/moraxy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/moraxy","subscriptions_url":"https:\/\/api.github.com\/users\/moraxy\/subscriptions","node_id":"MDQ6VXNlcjQ5MzY4OTc=","repos_url":"https:\/\/api.github.com\/users\/moraxy\/repos","received_events_url":"https:\/\/api.github.com\/users\/moraxy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/moraxy\/starred{\/owner}{\/repo}","site_admin":false,"login":"moraxy","type":"User","id":4936897,"followers_url":"https:\/\/api.github.com\/users\/moraxy\/followers","organizations_url":"https:\/\/api.github.com\/users\/moraxy\/orgs"}}]}