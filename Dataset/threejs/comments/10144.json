{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"CONTRIBUTOR","body":"I was planning on fixing this as it seems fairly easy. After some digging, it seems `OutlinePass` just doesn't check `renderToScreen` like the other passes do and only modifies the `readBuffer`.\n\nHowever, I'm not 100% sure how the post processing framework is structured. Is it meant so that multiple passes have `renderToScreen` (writing over\/adding imagery to old passes) or should effects like this combine the `readBuffer` with their own data into the writeBuffer and then render to the desired position if `renderToScreen` is set?\n","created_at":"2016-11-16T19:27:54.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/10144#issuecomment-261046135","id":261046135,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10144","node_id":"MDEyOklzc3VlQ29tbWVudDI2MTA0NjEzNQ==","updated_at":"2016-11-16T19:27:54.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/261046135","user":{"following_url":"https:\/\/api.github.com\/users\/Cobertos\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Cobertos\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/6759176?v=4","url":"https:\/\/api.github.com\/users\/Cobertos","gists_url":"https:\/\/api.github.com\/users\/Cobertos\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Cobertos","subscriptions_url":"https:\/\/api.github.com\/users\/Cobertos\/subscriptions","node_id":"MDQ6VXNlcjY3NTkxNzY=","repos_url":"https:\/\/api.github.com\/users\/Cobertos\/repos","received_events_url":"https:\/\/api.github.com\/users\/Cobertos\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Cobertos\/starred{\/owner}{\/repo}","site_admin":false,"login":"Cobertos","type":"User","id":6759176,"followers_url":"https:\/\/api.github.com\/users\/Cobertos\/followers","organizations_url":"https:\/\/api.github.com\/users\/Cobertos\/orgs"}},{"index":1,"author_association":"COLLABORATOR","body":"As far as i know, `renderToScreen` should always be set to `true` for the final pass in your chain. If this pass does not evaluate the property, use an additional `CopyShader` pass for the final render step.\n\nI'm not sure, why some passes don't check `renderToScreen`. Besides, some passes (like `OutlinePass`) are rendering to the `readBuffer`. Not sure if this approach is correct\/consistent. I've always thought a pass should basically read its input data from the `readBuffer` and write its result to the `writeBuffer` (`MaskPass` might be an exception). In these cases `needsSwap` should be set to `true` so the composer swaps the buffers after the render process.\n","created_at":"2016-11-16T20:27:50.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/10144#issuecomment-261061933","id":261061933,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10144","node_id":"MDEyOklzc3VlQ29tbWVudDI2MTA2MTkzMw==","updated_at":"2016-11-16T21:14:45.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/261061933","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":2,"author_association":"CONTRIBUTOR","body":"Hmm, okay. `needsSwap` sounds like the right tool to handle this. I was also getting some other problems with `OutlinePass` like not hiding instances of THREE.Line in my scene when rendering the outlines. I eventually have to include this functionality into the project I'm currently working on so I'll probably go ahead and commit some changes when that time comes.\n\nOn that note though, why do we have `renderToScreen` then? Why doesn't `EffectComposer` just render out the last pass to wherever it needs to (`WebGLRenderer` or `WebGLRenderTarget`). It seems to me the API might look better as `new EffectComposer(target, camera) where`target`is a`WebGLRenderer`or`WebGLRenderTarget`,`camera` is the camera, and it implicitly renders out the last pass to the target.\n","created_at":"2016-11-16T21:00:12.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/10144#issuecomment-261070064","id":261070064,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10144","node_id":"MDEyOklzc3VlQ29tbWVudDI2MTA3MDA2NA==","updated_at":"2016-11-16T21:00:12.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/261070064","user":{"following_url":"https:\/\/api.github.com\/users\/Cobertos\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Cobertos\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/6759176?v=4","url":"https:\/\/api.github.com\/users\/Cobertos","gists_url":"https:\/\/api.github.com\/users\/Cobertos\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Cobertos","subscriptions_url":"https:\/\/api.github.com\/users\/Cobertos\/subscriptions","node_id":"MDQ6VXNlcjY3NTkxNzY=","repos_url":"https:\/\/api.github.com\/users\/Cobertos\/repos","received_events_url":"https:\/\/api.github.com\/users\/Cobertos\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Cobertos\/starred{\/owner}{\/repo}","site_admin":false,"login":"Cobertos","type":"User","id":6759176,"followers_url":"https:\/\/api.github.com\/users\/Cobertos\/followers","organizations_url":"https:\/\/api.github.com\/users\/Cobertos\/orgs"}},{"index":3,"author_association":"COLLABORATOR","body":"I don't think that the `EffectComposer` should have a reference to the camera object. The actual rendering of the scene is currently done by an instance of `RenderPass`. This approach has the advantage of encapsulation. `EffectComposer` should not be involved in how the passes create their result. It just controls\/manages the composition of the final image. \r\n\r\nI don't know why the last pass in a chain is not automatically rendered to screen. Maybe @mrdoob or @WestLangley can help here.\r\n","created_at":"2016-11-16T21:12:44.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/10144#issuecomment-261073520","id":261073520,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10144","node_id":"MDEyOklzc3VlQ29tbWVudDI2MTA3MzUyMA==","updated_at":"2017-09-03T19:47:46.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/261073520","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":4,"author_association":"COLLABORATOR","body":"`EffectComposer` has not had significant development in 4 years or so. If you are interested in considering alternate implementations, you might want to have a look at @spite's [Wagner](https:\/\/github.com\/spite\/Wagner) API. I expect there would be a lot of interest in revisiting this topic.\n","created_at":"2016-11-17T00:28:34.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/10144#issuecomment-261117232","id":261117232,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10144","node_id":"MDEyOklzc3VlQ29tbWVudDI2MTExNzIzMg==","updated_at":"2016-11-17T00:28:34.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/261117232","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":5,"author_association":"CONTRIBUTOR","body":"Wagner needs a big refactor, mostly on alpha and stencil handling, and shader loading. I plan to address that at some point, but I'd love to hear what people think about it. Also, I know there's a fork out there that supports modules and bundling.\n","created_at":"2016-11-17T00:34:41.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/10144#issuecomment-261118347","id":261118347,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10144","node_id":"MDEyOklzc3VlQ29tbWVudDI2MTExODM0Nw==","updated_at":"2016-11-17T00:34:41.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/261118347","user":{"following_url":"https:\/\/api.github.com\/users\/spite\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/spite\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/731885?v=4","url":"https:\/\/api.github.com\/users\/spite","gists_url":"https:\/\/api.github.com\/users\/spite\/gists{\/gist_id}","html_url":"https:\/\/github.com\/spite","subscriptions_url":"https:\/\/api.github.com\/users\/spite\/subscriptions","node_id":"MDQ6VXNlcjczMTg4NQ==","repos_url":"https:\/\/api.github.com\/users\/spite\/repos","received_events_url":"https:\/\/api.github.com\/users\/spite\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/spite\/starred{\/owner}{\/repo}","site_admin":false,"login":"spite","type":"User","id":731885,"followers_url":"https:\/\/api.github.com\/users\/spite\/followers","organizations_url":"https:\/\/api.github.com\/users\/spite\/orgs"}}]}