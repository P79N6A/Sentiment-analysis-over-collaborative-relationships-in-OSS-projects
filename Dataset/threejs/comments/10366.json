{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"COLLABORATOR","body":"Ideas, mostly from the other thread:\r\n\r\n1. **Replace `.` characters in names with something arbitrary (e.g. `__dot__`), within the loader.** **Pro:** no other changes needed. **Con:** feels a bit hacky, and might interfere with userland code that expects original names.\r\n2. **Use UUIDs in track path**, avoiding the user-defined names. **Pro:** Robust against weird names, no other changes needed. **Con:** Animations will no longer work with cloned meshes, as UUIDs will change. Animations should ideally be more reusable.\r\n3. **Don't serialize path as a string**. Example: instead of `\"nodeName.property[accessor]\"` use `[nodeName, property, accessor]` or `{nodeName: ..., property: ..., accessor: ...}`. **Pro:** No (de)serialization or delimiters needed. **Con:** I don't know if other things depend on string track paths.","created_at":"2017-01-08T21:21:06.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/10366#issuecomment-271180409","id":271180409,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10366","node_id":"MDEyOklzc3VlQ29tbWVudDI3MTE4MDQwOQ==","updated_at":"2017-01-08T21:21:06.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/271180409","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":1,"author_association":"COLLABORATOR","body":"[This change](https:\/\/github.com\/donmccurdy\/three.js\/compare\/feat-track-type...donmccurdy:feat-track-parsed-name) would be one way to fix the issue for GLTFLoader, by allowing the loader to specify `track.parsedPath`. The issue would remain for KeyframeTrack instances created without a parsed path.","created_at":"2017-01-09T03:00:13.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/10366#issuecomment-271203579","id":271203579,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10366","node_id":"MDEyOklzc3VlQ29tbWVudDI3MTIwMzU3OQ==","updated_at":"2017-01-09T03:00:13.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/271203579","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":2,"author_association":"COLLABORATOR","body":"Another idea:\r\n\r\n4. In `PropertyBinding.findNode()`, **also check against some private\/internal property**, like `node._name`. This would allow us to safely alter the original node name. Or, even better for glTF, assign `node._name = target.id`. glTF does not require names at all: animations reference the target node using a glTF ID: [glTF IDs and Names](https:\/\/github.com\/KhronosGroup\/glTF\/tree\/master\/specification\/1.0#ids-and-names).","created_at":"2017-01-10T07:08:51.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/10366#issuecomment-271502403","id":271502403,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10366","node_id":"MDEyOklzc3VlQ29tbWVudDI3MTUwMjQwMw==","updated_at":"2017-01-10T07:08:51.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/271502403","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":3,"author_association":"CONTRIBUTOR","body":"I think this may be possible to do via regex modification:\r\n\r\n(1) The last dot is required as a separator between the property name and the node path name.\r\n(2) A further dot is required if one has one of the pre-defined sub-properties supported such as \".material.\" or a \".bone[...].\"\r\n(4) The name inside of a bone can have a dot, but no slashes as it isn't a path.\r\n(5) Dots are not allowed inside of property names.\r\n(6) Otherwise dots are allowed between slashes as they are node names.\r\n\r\nThe above rules appear to work for all examples here:\r\nhttps:\/\/github.com\/mrdoob\/three.js\/blob\/14c47ec320add4a6b649a35ff03c53a8cc62b1c9\/src\/animation\/PropertyBinding.js#L535\r\n\r\nBut this one:\r\n```\r\nuuid.objectName[objectIndex].propertyName[propertyIndex]\r\n```\r\nBut I am unsure how common the above is.  We could just discontinue support for it.  I think the above can be handled but I am not sure it is used in practice.\r\n\r\nI think that using some form of the above, you possibly can fix this just by making the regex a more complicated and making no other changes.\r\n\r\nMy only concern then becomes is there is a way to make regexes manageable as you increase their complexity?  I worry that while this can be done, we'll move towards a regex from hell that only @donmccurdy understands.","created_at":"2017-01-10T13:09:32.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/10366#issuecomment-271571348","id":271571348,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10366","node_id":"MDEyOklzc3VlQ29tbWVudDI3MTU3MTM0OA==","updated_at":"2017-01-10T13:09:32.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/271571348","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":4,"author_association":"CONTRIBUTOR","body":"I favor the regex modification because it is fixing this in a long-term way and it is a minimal change, even though it will increase the complexity of the regex.","created_at":"2017-01-10T13:10:13.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/10366#issuecomment-271571492","id":271571492,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10366","node_id":"MDEyOklzc3VlQ29tbWVudDI3MTU3MTQ5Mg==","updated_at":"2017-01-10T13:10:13.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/271571492","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":5,"author_association":"COLLABORATOR","body":"@bhouston I'm open to that plan, assuming the regex is manageable.\r\n\r\nBefore we make that call, here's one more consideration if we want to support glTF robustly: glTF doesn't require node names, and it would be completely valid to have a rigged model with no named nodes. The format uses string IDs to bind animation to nodes instead. IMO, it seems like solving this robustly for glTF (since that's the format that raised this bug) will require persisting those IDs in some way. Assign them as `mesh.name`, `mesh.userData.id`... I'm not sure.\r\n\r\nEDIT: It seems that the FBX loader is [dealing with some similar things](https:\/\/github.com\/mrdoob\/three.js\/blob\/4e2f72b\/examples\/js\/loaders\/FBXLoader2.js#L1140-L1141).","created_at":"2017-01-12T06:44:53.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/10366#issuecomment-272089171","id":272089171,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10366","node_id":"MDEyOklzc3VlQ29tbWVudDI3MjA4OTE3MQ==","updated_at":"2017-01-18T01:12:25.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/272089171","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}}]}