{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"COLLABORATOR","body":"Cool!\r\n\r\nBut probably this still has a problem.\r\nThese two should consist of the same bones set\r\n- bones graph under `SkinnedMesh` as children\r\n- `skeleton.bones`\r\n\r\nRefer to https:\/\/github.com\/mrdoob\/three.js\/blob\/872b6061e66612d963562e06749cc93c3a60976c\/src\/objects\/SkinnedMesh.js#L28-L70\r\n\r\nSo, after calling\r\n\r\n    Mesh.prototype.copy.call( this, source );\r\n\r\nwe need to gather bones from children, make a bone array from them,\r\nand then make `Skeleton` with the array.\r\n","created_at":"2017-02-15T06:43:08.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10807#issuecomment-279930201","id":279930201,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10807","node_id":"MDEyOklzc3VlQ29tbWVudDI3OTkzMDIwMQ==","updated_at":"2017-02-16T05:08:32.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/279930201","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":1,"author_association":"COLLABORATOR","body":"hmmm the problem goes deeper. here is a section from CesiumMan.glTF:\r\n\r\n```\r\n\"nodes\": {\r\n    \"Armature\": {\r\n        \"children\": [\"Skeleton_torso_joint_1\"],\r\n        \"matrix\": [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],\r\n        \"name\": \"Armature\"\r\n    },\r\n    \"Cesium_Man\": {\r\n        \"children\": [],\r\n        \"matrix\": [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],\r\n        \"meshes\": [\"Cesium_Man-mesh\"],\r\n        \"name\": \"Cesium_Man\",\r\n        \"skeletons\": [\"Skeleton_torso_joint_1\"],\r\n        \"skin\": \"Armature_Cesium_Man-skin\"\r\n    },\r\n    ...\r\n```\r\n\r\nThe \"Cesium_Man\" node becomes a `SkinnedMesh`, and the \"Armature\" node becomes an `Object3D`. GLTFLoader first adds the root bone \"Skeleton_torso_joint_1\" as a child of the `SkinnedMesh`, but then later adds the bone as a child of \"Armature\", removing it from the `SkinnedMesh`. So the bones are not there on the `SkinnedMesh` when it is added to the scene, it just happens to animate correctly anyway. The problem surfaces when I try to clone the mesh. \u2639\ufe0f \r\n\r\nI will look more into the glTF animation spec and see if this is correct. \"Armature\" seems a little pointless, since we use the skeleton as an armature.","created_at":"2017-02-17T01:07:41.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10807#issuecomment-280518038","id":280518038,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10807","node_id":"MDEyOklzc3VlQ29tbWVudDI4MDUxODAzOA==","updated_at":"2017-02-17T01:09:19.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/280518038","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":2,"author_association":"COLLABORATOR","body":"Ok, I think the glTF file itself is fine. It is reasonable that the bones might be in an armature, if for example the skeleton is reused across multiple meshes. Or that is the gist of discussion here: https:\/\/github.com\/mrdoob\/three.js\/issues\/5212\r\n\r\nSo i think my questions are:\r\n\r\n- [ ] GLTFLoader should probably not add bones as children of Cesium_Man just because of the `skeletons` property, and then remove them to attach to Armature. Bones should be children of Armature only. If the opposite was intended, bones should be attached to Cesium_Man's `children` property. Is this right?\r\n- [ ] Is it really OK for a SkinnedMesh not to have any children, just a Skeleton?\r\n- [ ] If I am cloning a `SkinnedMesh` that has a skeleton but no children (i.e. maybe the bones are in an armature), what should the result be? Should the cloned mesh be bound to the same exact skeleton? Or should it create a new copy of the skeleton, and the bones in that new skeleton are orphaned?\r\n\r\nI don't understand the skinning\/skeleton process well enough to answer these.","created_at":"2017-02-17T01:45:55.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10807#issuecomment-280524486","id":280524486,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10807","node_id":"MDEyOklzc3VlQ29tbWVudDI4MDUyNDQ4Ng==","updated_at":"2017-02-17T01:45:55.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/280524486","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":3,"author_association":"COLLABORATOR","body":"These threads would help?\r\n\r\n#8422\r\n#8978\r\n#9606\r\n\r\nEspecially here?\r\nhttps:\/\/github.com\/mrdoob\/three.js\/pull\/8422#r61738317\r\n","created_at":"2017-02-17T01:54:58.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10807#issuecomment-280526001","id":280526001,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10807","node_id":"MDEyOklzc3VlQ29tbWVudDI4MDUyNjAwMQ==","updated_at":"2017-02-17T01:57:23.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/280526001","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":4,"author_association":"COLLABORATOR","body":"If I'm right, the root issue seems that Three.js doesn't support shared `Skeleton`.\r\n(We plan, but haven't implemented yet)\r\n\r\n`SkinnedMesh` supports both two bone representations.\r\n- bone hierarchies (for editing, inverse kinematics, and so on)\r\n- skeleton (for playback animation, and so on)\r\n\r\nThis is one of the reasons `Skeleton` cannot be shared with proper Three.js manner.\r\n(A `Object3D` cannot be a child of two or more different `Object3D`s)\r\n\r\nI think we should discuss short and long term solutions\r\n\r\nShort term solution:\r\nHow we handle such glTF files though Three.js doesn't support shared `Skeleton`.\r\n\r\nLong term solution:\r\nHow we support shared `Skeleton`.\r\n","created_at":"2017-02-18T05:34:01.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10807#issuecomment-280823690","id":280823690,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10807","node_id":"MDEyOklzc3VlQ29tbWVudDI4MDgyMzY5MA==","updated_at":"2017-02-18T20:32:38.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/280823690","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":5,"author_association":"COLLABORATOR","body":"Thanks, lots for me to learn about this. I think what's most difficult to me is that there are three places the bones might be stored:\r\n\r\n1. `skinnedMesh.geometry.bones`\r\n2. `skinnedMesh.children`\r\n3. `skinnedMesh.skeleton.bones`\r\n\r\nAnd (1) and (2) are optional, but (3) is required? My thought would be, if a user clones a mesh that _only_ has a skeleton, and the bones themselves are children of something else, then it's a shared skeleton, and the cloned mesh should probably get a reference to that same skeleton. If it's not a shared skeleton, then cloning is harder and I don't know how to handle that. \r\n\r\nI've updated the PR with the logic above, but since shared skeletons aren't actually supported yet, this PR also does not work. So work-in-progress.\r\n\r\nShort term:\r\nI don't think any change is necessarily needed short term; users may manually configure skeletons if they need to clone a skinned mesh. This isn't breaking GLTFLoader or anything.\r\n\r\nLong term:\r\nSupporting shared `Skeleton` sounds great, but I have no idea how that should work. Eliminating some of the places bones might be stored (1, 2, or both) would simplify life. :)","created_at":"2017-02-21T01:03:39.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10807#issuecomment-281216666","id":281216666,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10807","node_id":"MDEyOklzc3VlQ29tbWVudDI4MTIxNjY2Ng==","updated_at":"2017-02-21T01:03:39.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/281216666","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":6,"author_association":"COLLABORATOR","body":"Probably it's time we should start to review and restructure `SkinnedMesh` and `Skeleton` design.\r\n\r\nCurrently and ideally 2, 3 are required.\r\nPerhaps making 2 optional would be the first step.\r\n","created_at":"2017-02-25T23:07:19.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10807#issuecomment-282519241","id":282519241,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10807","node_id":"MDEyOklzc3VlQ29tbWVudDI4MjUxOTI0MQ==","updated_at":"2017-02-25T23:07:19.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/282519241","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":7,"author_association":"COLLABORATOR","body":"> Currently and ideally 2, 3 are required.\r\nPerhaps making 2 optional would be the first step.\r\n\r\nWhat about (1)?\r\n\r\nI'll close this PR for now. I hoped it was a quick fix to a minor bug (cloning models with armatures), and the correct solution seems more complicated than that. If refactoring makes sense regardless then I'm in favor, but the cloning fix here is not critical.","created_at":"2017-02-25T23:35:22.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10807#issuecomment-282520647","id":282520647,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10807","node_id":"MDEyOklzc3VlQ29tbWVudDI4MjUyMDY0Nw==","updated_at":"2017-02-25T23:35:22.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/282520647","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":8,"author_association":"OWNER","body":"I think we should just keep the bones in `skinnedMesh.skeleton.bones` and allow `skeleton` to be shared by different `SkinnedMesh`. The reason we're currently adding the bones to the scene graph was so we could easily add a weapon as a child of a bone for instance. But I think we should, instead add a method to mesh... Something like, `SkinnedMesh.addToBone( bone, child )`.\r\n\r\nIt's also a serialisation\/deserialisation issue. Right now `Bones` are added to the scene graph in the json. I think we should, instead create a new `skeleton` section in the json:\r\n\r\n```json\r\n{\r\n    \"metadata\": {\r\n        \"version\": 4.3,\r\n        \"type\": \"Object\",\r\n        \"generator\": \"ObjectExporter\"\r\n    },\r\n    \"skeletons\": [\r\n        {\r\n            \"uuid\": \"C3BF1E70-0BE7-4E6D-B184-C9F1E84A3423\",\r\n            \"bones\": {}\r\n        }\r\n    ],\r\n    \"object\": {\r\n        \"uuid\": \"89529CC6-CBAC-412F-AFD1-FEEAE785BA19\",\r\n        \"type\": \"Scene\",\r\n        \"matrix\": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],\r\n        \"children\": [\r\n            {\r\n                \"uuid\": \"33FA38D9-0AAC-4657-9BBE-5E5780DDFB2F\",\r\n                \"name\": \"Box 1\",\r\n                \"type\": \"SkinnedMesh\",\r\n                \"geometry\": \"16F2E381-2B73-44C4-A7BB-38D7E1CD2381\",\r\n                \"material\": \"87D95D6C-6BB4-4B8F-8166-A3A6945BA5E3\",\r\n                \"skeleton\": \"C3BF1E70-0BE7-4E6D-B184-C9F1E84A3423\",\r\n                \"matrix\": [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]\r\n            }\r\n        ]\r\n    }\r\n}\r\n```\r\n\r\nDoes this go well with the GLTF design?","created_at":"2017-02-26T16:24:38.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10807#issuecomment-282567434","id":282567434,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10807","node_id":"MDEyOklzc3VlQ29tbWVudDI4MjU2NzQzNA==","updated_at":"2017-02-26T16:24:38.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/282567434","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":9,"author_association":"COLLABORATOR","body":"I think it'd work.\r\n\r\nBTW It'd be helpful to have `SkinnedMesh.getWorldPosition\/Quaternion\/ScaleOfBone(id or name)`.\r\nFor example, we sometimes wants the world position of left hand bone of a certain mesh.\r\n","created_at":"2017-03-07T03:23:19.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10807#issuecomment-284610332","id":284610332,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10807","node_id":"MDEyOklzc3VlQ29tbWVudDI4NDYxMDMzMg==","updated_at":"2017-03-07T03:23:19.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/284610332","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":10,"author_association":"COLLABORATOR","body":"Let me change what I said a bit.\r\n\r\nIn glTF, bone graph can be in scene graph\r\n(a node which has jointName can be a child of another normal node).\r\n\r\nAnd if it's in a scene graph, it seems like\r\nthe skinning related parameters(bindMatrix, boneInverses, animations, and so on) have\r\nvalues fitting to bone graph in a scene graph.\r\n\r\nSo I want Three.js to allow bone graph be in scene graph.\r\n\r\nHow about like this?\r\nIn standard Three.js flow, `SkinnedMesh` (or something) keeps the bones only in `Skeleton` but\r\nThree.js also provides the ability that *Loader under example\/ or end user\r\ncan place bone graph in a scene graph.\r\n\r\n@donmccurdy \r\nSorry for the late reply.\r\n`geometry.bones` is optional but \r\ngenerating bones from that seems the most standard way in current Three.js.\r\n","created_at":"2017-03-20T08:00:40.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10807#issuecomment-287695362","id":287695362,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10807","node_id":"MDEyOklzc3VlQ29tbWVudDI4NzY5NTM2Mg==","updated_at":"2017-03-20T08:13:39.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/287695362","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}}]}