{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"COLLABORATOR","body":">Changing this to [page:Material SmoothShading] will have no effect - MeshLambertMaterial is always smooth shaded.\r\n\r\n\"MeshLambertMaterial is always smooth shaded.\" This brings up an issue that has been in the back of my mind for awhile...\r\n\r\nThe three.js terminology here is unfortunately not very good. Should one say that `BoxGeometry` rendered with `MeshLambertMaterial` with `shading = THREE.SmoothShading` (the default) is \"smooth shaded\"? I do not think so.\r\n\r\nThe option we are really allowing users is to (1) use the specified normals for shading, or (2) ignore the specified normals and use flat shading.\r\n\r\nSo something that makes sense to me is to remove `material.shading`, and replace it with the flag `material.flatShading`, which takes the values `true` or `false`, defaulting to `false`.\r\n\r\n---\r\n\r\nSomewhat-related side note: Users who want flat shading with `MeshLambertMaterial` can call `Geometry.computeFlatVertexNormals()`. This only works for regular `Geometry`, so users with `BufferGeometry` will need to convert to `Geometry` first.","created_at":"2016-12-17T04:11:19.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10383#issuecomment-267741949","id":267741949,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10383","node_id":"MDEyOklzc3VlQ29tbWVudDI2Nzc0MTk0OQ==","updated_at":"2016-12-17T04:11:19.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/267741949","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":1,"author_association":"OWNER","body":"> So something that makes sense to me is to remove `material.shading`, and replace it with the flag `material.flatShading`, which takes the values `true` or `false`, defaulting to `false`.\r\n\r\nInteresting... Yeah, I would definitely support this.","created_at":"2016-12-17T04:33:19.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10383#issuecomment-267742808","id":267742808,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10383","node_id":"MDEyOklzc3VlQ29tbWVudDI2Nzc0MjgwOA==","updated_at":"2016-12-17T04:33:19.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/267742808","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":2,"author_association":"COLLABORATOR","body":"Agreed - having constants when there are only two options seems unnecessary. \r\n\r\n>Somewhat-related side note: Users who want flat shading with MeshLambertMaterial can call Geometry.computeFlatVertexNormals(). This only works for regular Geometry, so users with BufferGeometry will need to convert to Geometry first.\r\n\r\nI intentionally didn't add this to the docs - it seems like the intention is to gradually phase out Geometry completely right? There was mention of only supporting BufferGeometry with the WebGL2Renderer. \r\nI can add it in if you guys  want though. ","created_at":"2016-12-18T01:33:12.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10383#issuecomment-267797770","id":267797770,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10383","node_id":"MDEyOklzc3VlQ29tbWVudDI2Nzc5Nzc3MA==","updated_at":"2016-12-18T01:33:12.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/267797770","user":{"following_url":"https:\/\/api.github.com\/users\/looeee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/looeee\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/5307958?v=4","url":"https:\/\/api.github.com\/users\/looeee","gists_url":"https:\/\/api.github.com\/users\/looeee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/looeee","subscriptions_url":"https:\/\/api.github.com\/users\/looeee\/subscriptions","node_id":"MDQ6VXNlcjUzMDc5NTg=","repos_url":"https:\/\/api.github.com\/users\/looeee\/repos","received_events_url":"https:\/\/api.github.com\/users\/looeee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/looeee\/starred{\/owner}{\/repo}","site_admin":false,"login":"looeee","type":"User","id":5307958,"followers_url":"https:\/\/api.github.com\/users\/looeee\/followers","organizations_url":"https:\/\/api.github.com\/users\/looeee\/orgs"}},{"index":3,"author_association":"COLLABORATOR","body":">Agreed - having constants when there are only two options seems unnecessary.\r\n\r\nTo make it clear, it is more than that.\r\n\r\nAccording to the code as written,`THREE.SmoothShading` means \"use the vertex normals for shading\". But if the vertex normals are face-orthogonal, then the shading will not appear smooth at all; it will appear flat.\r\n\r\nSo the suggestion is to avoid the terminology altogether, and simply substitute a new boolean property `flatShading`.\r\n\r\nAlso, there used to be three options: https:\/\/github.com\/mrdoob\/three.js\/issues\/7115.\r\n","created_at":"2016-12-18T01:54:22.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10383#issuecomment-267798460","id":267798460,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10383","node_id":"MDEyOklzc3VlQ29tbWVudDI2Nzc5ODQ2MA==","updated_at":"2016-12-18T01:54:22.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/267798460","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":4,"author_association":"COLLABORATOR","body":"`.shading` was removed. This PR is obsolete.","created_at":"2017-09-21T12:35:21.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10383#issuecomment-331143097","id":331143097,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10383","node_id":"MDEyOklzc3VlQ29tbWVudDMzMTE0MzA5Nw==","updated_at":"2017-09-21T12:35:28.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/331143097","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}}]}