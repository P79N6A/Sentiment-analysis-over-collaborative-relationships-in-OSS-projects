{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"NONE","body":"You can look into setting a Loading Manager. Check out the [loading manager example on three.js docs](https:\/\/threejs.org\/docs\/#api\/loaders\/managers\/LoadingManager).","created_at":"2018-02-15T20:25:17.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/13336#issuecomment-366050727","id":366050727,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13336","node_id":"MDEyOklzc3VlQ29tbWVudDM2NjA1MDcyNw==","updated_at":"2018-02-15T20:25:17.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/366050727","user":{"following_url":"https:\/\/api.github.com\/users\/arquilca\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/arquilca\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/16353943?v=4","url":"https:\/\/api.github.com\/users\/arquilca","gists_url":"https:\/\/api.github.com\/users\/arquilca\/gists{\/gist_id}","html_url":"https:\/\/github.com\/arquilca","subscriptions_url":"https:\/\/api.github.com\/users\/arquilca\/subscriptions","node_id":"MDQ6VXNlcjE2MzUzOTQz","repos_url":"https:\/\/api.github.com\/users\/arquilca\/repos","received_events_url":"https:\/\/api.github.com\/users\/arquilca\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/arquilca\/starred{\/owner}{\/repo}","site_admin":false,"login":"arquilca","type":"User","id":16353943,"followers_url":"https:\/\/api.github.com\/users\/arquilca\/followers","organizations_url":"https:\/\/api.github.com\/users\/arquilca\/orgs"}},{"index":1,"author_association":"NONE","body":"I went through the examples given there which are below.\r\n\r\n[WebGL \/ loader \/ babylon](https:\/\/threejs.org\/examples\/#webgl_loader_babylon)\r\n[WebGL \/ loader \/ fbx](https:\/\/threejs.org\/examples\/#webgl_loader_fbx)\r\n[WebGL \/ loader \/ obj](https:\/\/threejs.org\/examples\/#webgl_loader_obj)\r\n[WebGL \/ materials \/ reflectivity](https:\/\/threejs.org\/examples\/#webgl_materials_reflectivity)\r\n[WebGL \/ postprocesing \/ outline](https:\/\/threejs.org\/examples\/#webgl_postprocessing_outline)\r\n[WebGL \/ terrain \/ dynamic](https:\/\/threejs.org\/examples\/#webgl_terrain_dynamic)\r\n\r\n\r\nNone of the above have the MTLLoader example. \r\n\r\nAlso, to my understanding, the Loading managers are available for loading obj , mtl, texture etc.. and is perfectly fine.\r\n\r\nWhen its comes to MTLLOader, it returns MaterialCreator instance on loading. On this instance we call preload method to create the actual material. And my point is that this does not have callback support.\r\n\r\nHope i am clear on this.","created_at":"2018-02-16T05:26:59.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/13336#issuecomment-366147413","id":366147413,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13336","node_id":"MDEyOklzc3VlQ29tbWVudDM2NjE0NzQxMw==","updated_at":"2018-02-16T05:26:59.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/366147413","user":{"following_url":"https:\/\/api.github.com\/users\/boyravikumar\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/boyravikumar\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/9973182?v=4","url":"https:\/\/api.github.com\/users\/boyravikumar","gists_url":"https:\/\/api.github.com\/users\/boyravikumar\/gists{\/gist_id}","html_url":"https:\/\/github.com\/boyravikumar","subscriptions_url":"https:\/\/api.github.com\/users\/boyravikumar\/subscriptions","node_id":"MDQ6VXNlcjk5NzMxODI=","repos_url":"https:\/\/api.github.com\/users\/boyravikumar\/repos","received_events_url":"https:\/\/api.github.com\/users\/boyravikumar\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/boyravikumar\/starred{\/owner}{\/repo}","site_admin":false,"login":"boyravikumar","type":"User","id":9973182,"followers_url":"https:\/\/api.github.com\/users\/boyravikumar\/followers","organizations_url":"https:\/\/api.github.com\/users\/boyravikumar\/orgs"}},{"index":2,"author_association":"COLLABORATOR","body":"> And my point is that this does not have callback support.\r\n\r\nI think when you create an instance of `LoadingManager` and pass it to the constructor of `MTLLoader`, it's possible to use the respective `onLoad()` in order to wait until all resources are loaded.\r\n\r\nLet's say you issue a single request to a `mtl` file. The `onLoad()` callback of `LoadingManager` only fires when the `onLoad()` callback of `MTLLoader` has completed. If you call `materials.preload();` inside the `onLoad()` callback of `MTLLoader`, new network requests are issued in order to load the corresponding textures. These requests will raise the internal request counter of `LoadingManager`. As soon as all textures are loaded, the `onLoad()` callback of `LoadingManager` will fire.\r\n\r\nPlease give it a try and see what's happening :blush: ","created_at":"2018-02-16T17:29:57.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/13336#issuecomment-366302918","id":366302918,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13336","node_id":"MDEyOklzc3VlQ29tbWVudDM2NjMwMjkxOA==","updated_at":"2018-02-16T18:28:48.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/366302918","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":3,"author_association":"COLLABORATOR","body":"@boyravikumar The usage of `LoadingManager` should solve the problem. You can reopen the issue if you think that there is a bug. In this case, please provide a little [live example](https:\/\/jsfiddle.net\/f2Lommf5\/) to demonstrate the problem.","created_at":"2018-02-19T09:13:09.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/13336#issuecomment-366628795","id":366628795,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13336","node_id":"MDEyOklzc3VlQ29tbWVudDM2NjYyODc5NQ==","updated_at":"2018-02-19T09:13:09.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/366628795","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":4,"author_association":"NONE","body":"@Mugen87 . Great that you have closed this. I tried with loading manager. Yes, by using Manager i am able to call onLoad after calling the preload method. Should we mention in documentation\/ an example where its use absolutely demonstrated.","created_at":"2018-02-20T06:54:16.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/13336#issuecomment-366883572","id":366883572,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13336","node_id":"MDEyOklzc3VlQ29tbWVudDM2Njg4MzU3Mg==","updated_at":"2018-02-20T06:54:16.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/366883572","user":{"following_url":"https:\/\/api.github.com\/users\/boyravikumar\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/boyravikumar\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/9973182?v=4","url":"https:\/\/api.github.com\/users\/boyravikumar","gists_url":"https:\/\/api.github.com\/users\/boyravikumar\/gists{\/gist_id}","html_url":"https:\/\/github.com\/boyravikumar","subscriptions_url":"https:\/\/api.github.com\/users\/boyravikumar\/subscriptions","node_id":"MDQ6VXNlcjk5NzMxODI=","repos_url":"https:\/\/api.github.com\/users\/boyravikumar\/repos","received_events_url":"https:\/\/api.github.com\/users\/boyravikumar\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/boyravikumar\/starred{\/owner}{\/repo}","site_admin":false,"login":"boyravikumar","type":"User","id":9973182,"followers_url":"https:\/\/api.github.com\/users\/boyravikumar\/followers","organizations_url":"https:\/\/api.github.com\/users\/boyravikumar\/orgs"}}]}