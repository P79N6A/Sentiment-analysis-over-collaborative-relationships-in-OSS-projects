{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"CONTRIBUTOR","body":"I've just run the example in the [current `dev` branch](http:\/\/rawgit.com\/mrdoob\/three.js\/dev\/examples\/webgl_shaders_ocean.html) on Debian 9.1 with FF 52.4 and FF 58.0, this did not happen.\r\n\r\nThe geometries did not change much in the PR, the fragment shader just includes the needed chunks to call `getShadowMask()`.\r\n\r\nDoes the error message log what is at `0:102(109)` ? ","created_at":"2017-10-01T10:24:45.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12312#issuecomment-333367156","id":333367156,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12312","node_id":"MDEyOklzc3VlQ29tbWVudDMzMzM2NzE1Ng==","updated_at":"2017-10-01T10:55:48.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/333367156","user":{"following_url":"https:\/\/api.github.com\/users\/Astrak\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Astrak\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/10037511?v=4","url":"https:\/\/api.github.com\/users\/Astrak","gists_url":"https:\/\/api.github.com\/users\/Astrak\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Astrak","subscriptions_url":"https:\/\/api.github.com\/users\/Astrak\/subscriptions","node_id":"MDQ6VXNlcjEwMDM3NTEx","repos_url":"https:\/\/api.github.com\/users\/Astrak\/repos","received_events_url":"https:\/\/api.github.com\/users\/Astrak\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Astrak\/starred{\/owner}{\/repo}","site_admin":false,"login":"Astrak","type":"User","id":10037511,"followers_url":"https:\/\/api.github.com\/users\/Astrak\/followers","organizations_url":"https:\/\/api.github.com\/users\/Astrak\/orgs"}},{"index":1,"author_association":"COLLABORATOR","body":"Unfortunately not. The logged fragment shader gets cut off after line 27 :unamused:","created_at":"2017-10-01T11:21:10.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12312#issuecomment-333369902","id":333369902,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12312","node_id":"MDEyOklzc3VlQ29tbWVudDMzMzM2OTkwMg==","updated_at":"2017-10-01T11:23:24.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/333369902","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":2,"author_association":"COLLABORATOR","body":"If i remove the shader chunks in the fragment shader (`THREE.Water`) and the call of `getShadowMask()`, the error disappears.","created_at":"2017-10-01T11:24:45.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12312#issuecomment-333370077","id":333370077,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12312","node_id":"MDEyOklzc3VlQ29tbWVudDMzMzM3MDA3Nw==","updated_at":"2017-10-01T11:24:45.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/333370077","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":3,"author_association":"CONTRIBUTOR","body":"> Unfortunately not. The logged fragment shader gets cut off after line 27 \ud83d\ude12\r\n\r\napologies for the question, but is there a _[...]_ at the end of the shader log where it gets cut off?","created_at":"2017-10-01T11:27:16.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12312#issuecomment-333370193","id":333370193,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12312","node_id":"MDEyOklzc3VlQ29tbWVudDMzMzM3MDE5Mw==","updated_at":"2017-10-01T11:31:00.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/333370193","user":{"following_url":"https:\/\/api.github.com\/users\/moraxy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/moraxy\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/4936897?v=4","url":"https:\/\/api.github.com\/users\/moraxy","gists_url":"https:\/\/api.github.com\/users\/moraxy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/moraxy","subscriptions_url":"https:\/\/api.github.com\/users\/moraxy\/subscriptions","node_id":"MDQ6VXNlcjQ5MzY4OTc=","repos_url":"https:\/\/api.github.com\/users\/moraxy\/repos","received_events_url":"https:\/\/api.github.com\/users\/moraxy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/moraxy\/starred{\/owner}{\/repo}","site_admin":false,"login":"moraxy","type":"User","id":4936897,"followers_url":"https:\/\/api.github.com\/users\/moraxy\/followers","organizations_url":"https:\/\/api.github.com\/users\/moraxy\/orgs"}},{"index":4,"author_association":"COLLABORATOR","body":"@moraxy Thanks for that advice! When i click on _[...]_, i can see the whole program.\r\nHere is the entire fragment shader:\r\n```\r\nTHREE.WebGLShader: Shader couldn't compile.\r\nTHREE.WebGLShader: gl.getShaderInfoLog() fragment 0:2(12): warning: extension `GL_ARB_gpu_shader5' unsupported in fragment shader\r\n0:102(109): error: sampler arrays indexed with non-constant expressions are forbidden in GLSL 1.30 and later\r\n1: precision highp float;\r\n2: precision highp int;\r\n3: #define SHADER_NAME ShaderMaterial\r\n4: #define GAMMA_FACTOR 2\r\n5: #define USE_FOG\r\n6: #define FOG_EXP2\r\n7: #define NUM_CLIPPING_PLANES 0\r\n8: #define UNION_CLIPPING_PLANES 0\r\n9: #define USE_SHADOWMAP\r\n10: #define SHADOWMAP_TYPE_PCF\r\n11: uniform mat4 viewMatrix;\r\n12: uniform vec3 cameraPosition;\r\n13: #define TONE_MAPPING\r\n14: #define saturate(a) clamp( a, 0.0, 1.0 )\r\n15: uniform float toneMappingExposure;\r\n16: uniform float toneMappingWhitePoint;\r\n17: vec3 LinearToneMapping( vec3 color ) {\r\n18: \treturn toneMappingExposure * color;\r\n19: }\r\n20: vec3 ReinhardToneMapping( vec3 color ) {\r\n21: \tcolor *= toneMappingExposure;\r\n22: \treturn saturate( color \/ ( vec3( 1.0 ) + color ) );\r\n23: }\r\n24: #define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) \/ ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 \/ 0.30, vec3( 0.0 ) )\r\n25: vec3 Uncharted2ToneMapping( vec3 color ) {\r\n26: \tcolor *= toneMappingExposure;\r\n27: \treturn saturate( Uncharted2Helper( color ) \/ Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\r\n28: }\r\n29: vec3 OptimizedCineonToneMapping( vec3 color ) {\r\n30: \tcolor *= toneMappingExposure;\r\n31: \tcolor = max( vec3( 0.0 ), color - 0.004 );\r\n32: \treturn pow( ( color * ( 6.2 * color + 0.5 ) ) \/ ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\r\n33: }\r\n34: \r\n35: vec3 toneMapping( vec3 color ) { return LinearToneMapping( color ); }\r\n36: \r\n37: vec4 LinearToLinear( in vec4 value ) {\r\n38: \treturn value;\r\n39: }\r\n40: vec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\r\n41: \treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\r\n42: }\r\n43: vec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\r\n44: \treturn vec4( pow( value.xyz, vec3( 1.0 \/ gammaFactor ) ), value.w );\r\n45: }\r\n46: vec4 sRGBToLinear( in vec4 value ) {\r\n47: \treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\r\n48: }\r\n49: vec4 LinearTosRGB( in vec4 value ) {\r\n50: \treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\r\n51: }\r\n52: vec4 RGBEToLinear( in vec4 value ) {\r\n53: \treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\r\n54: }\r\n55: vec4 LinearToRGBE( in vec4 value ) {\r\n56: \tfloat maxComponent = max( max( value.r, value.g ), value.b );\r\n57: \tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\r\n58: \treturn vec4( value.rgb \/ exp2( fExp ), ( fExp + 128.0 ) \/ 255.0 );\r\n59: }\r\n60: vec4 RGBMToLinear( in vec4 value, in float maxRange ) {\r\n61: \treturn vec4( value.xyz * value.w * maxRange, 1.0 );\r\n62: }\r\n63: vec4 LinearToRGBM( in vec4 value, in float maxRange ) {\r\n64: \tfloat maxRGB = max( value.x, max( value.g, value.b ) );\r\n65: \tfloat M      = clamp( maxRGB \/ maxRange, 0.0, 1.0 );\r\n66: \tM            = ceil( M * 255.0 ) \/ 255.0;\r\n67: \treturn vec4( value.rgb \/ ( M * maxRange ), M );\r\n68: }\r\n69: vec4 RGBDToLinear( in vec4 value, in float maxRange ) {\r\n70: \treturn vec4( value.rgb * ( ( maxRange \/ 255.0 ) \/ value.a ), 1.0 );\r\n71: }\r\n72: vec4 LinearToRGBD( in vec4 value, in float maxRange ) {\r\n73: \tfloat maxRGB = max( value.x, max( value.g, value.b ) );\r\n74: \tfloat D      = max( maxRange \/ maxRGB, 1.0 );\r\n75: \tD            = min( floor( D ) \/ 255.0, 1.0 );\r\n76: \treturn vec4( value.rgb * ( D * ( 255.0 \/ maxRange ) ), D );\r\n77: }\r\n78: const mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\r\n79: vec4 LinearToLogLuv( in vec4 value )  {\r\n80: \tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\r\n81: \tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\r\n82: \tvec4 vResult;\r\n83: \tvResult.xy = Xp_Y_XYZp.xy \/ Xp_Y_XYZp.z;\r\n84: \tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\r\n85: \tvResult.w = fract(Le);\r\n86: \tvResult.z = (Le - (floor(vResult.w*255.0))\/255.0)\/255.0;\r\n87: \treturn vResult;\r\n88: }\r\n89: const mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\r\n90: vec4 LogLuvToLinear( in vec4 value ) {\r\n91: \tfloat Le = value.z * 255.0 + value.w;\r\n92: \tvec3 Xp_Y_XYZp;\r\n93: \tXp_Y_XYZp.y = exp2((Le - 127.0) \/ 2.0);\r\n94: \tXp_Y_XYZp.z = Xp_Y_XYZp.y \/ value.y;\r\n95: \tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\r\n96: \tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\r\n97: \treturn vec4( max(vRGB, 0.0), 1.0 );\r\n98: }\r\n99: \r\n100: vec4 mapTexelToLinear( vec4 value ) { return LinearToLinear( value ); }\r\n101: vec4 envMapTexelToLinear( vec4 value ) { return LinearToLinear( value ); }\r\n102: vec4 emissiveMapTexelToLinear( vec4 value ) { return LinearToLinear( value ); }\r\n103: vec4 linearToOutputTexel( vec4 value ) { return LinearToLinear( value ); }\r\n104: \r\n105: uniform sampler2D mirrorSampler;\r\n106: uniform float alpha;\r\n107: uniform float time;\r\n108: uniform float size;\r\n109: uniform float distortionScale;\r\n110: uniform sampler2D normalSampler;\r\n111: uniform vec3 sunColor;\r\n112: uniform vec3 sunDirection;\r\n113: uniform vec3 eye;\r\n114: uniform vec3 waterColor;\r\n115: varying vec4 mirrorCoord;\r\n116: varying vec4 worldPosition;\r\n117: vec4 getNoise( vec2 uv ) {\r\n118: \tvec2 uv0 = ( uv \/ 103.0 ) + vec2(time \/ 17.0, time \/ 29.0);\r\n119: \tvec2 uv1 = uv \/ 107.0-vec2( time \/ -19.0, time \/ 31.0 );\r\n120: \tvec2 uv2 = uv \/ vec2( 8907.0, 9803.0 ) + vec2( time \/ 101.0, time \/ 97.0 );\r\n121: \tvec2 uv3 = uv \/ vec2( 1091.0, 1027.0 ) - vec2( time \/ 109.0, time \/ -113.0 );\r\n122: \tvec4 noise = texture2D( normalSampler, uv0 ) +\r\n123: \t\ttexture2D( normalSampler, uv1 ) +\r\n124: \t\ttexture2D( normalSampler, uv2 ) +\r\n125: \t\ttexture2D( normalSampler, uv3 );\r\n126: \treturn noise * 0.5 - 1.0;\r\n127: }\r\n128: void sunLight( const vec3 surfaceNormal, const vec3 eyeDirection, float shiny, float spec, float diffuse, inout vec3 diffuseColor, inout vec3 specularColor ) {\r\n129: \tvec3 reflection = normalize( reflect( -sunDirection, surfaceNormal ) );\r\n130: \tfloat direction = max( 0.0, dot( eyeDirection, reflection ) );\r\n131: \tspecularColor += pow( direction, shiny ) * sunColor * spec;\r\n132: \tdiffuseColor += max( dot( sunDirection, surfaceNormal ), 0.0 ) * sunColor * diffuse;\r\n133: }\r\n134: #define PI 3.14159265359\r\n135: #define PI2 6.28318530718\r\n136: #define PI_HALF 1.5707963267949\r\n137: #define RECIPROCAL_PI 0.31830988618\r\n138: #define RECIPROCAL_PI2 0.15915494\r\n139: #define LOG2 1.442695\r\n140: #define EPSILON 1e-6\r\n141: #define saturate(a) clamp( a, 0.0, 1.0 )\r\n142: #define whiteCompliment(a) ( 1.0 - saturate( a ) )\r\n143: float pow2( const in float x ) { return x*x; }\r\n144: float pow3( const in float x ) { return x*x*x; }\r\n145: float pow4( const in float x ) { float x2 = x*x; return x2*x2; }\r\n146: float average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\r\n147: highp float rand( const in vec2 uv ) {\r\n148: \tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\r\n149: \thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\r\n150: \treturn fract(sin(sn) * c);\r\n151: }\r\n152: struct IncidentLight {\r\n153: \tvec3 color;\r\n154: \tvec3 direction;\r\n155: \tbool visible;\r\n156: };\r\n157: struct ReflectedLight {\r\n158: \tvec3 directDiffuse;\r\n159: \tvec3 directSpecular;\r\n160: \tvec3 indirectDiffuse;\r\n161: \tvec3 indirectSpecular;\r\n162: };\r\n163: struct GeometricContext {\r\n164: \tvec3 position;\r\n165: \tvec3 normal;\r\n166: \tvec3 viewDir;\r\n167: };\r\n168: vec3 transformDirection( in vec3 dir, in mat4 matrix ) {\r\n169: \treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\r\n170: }\r\n171: vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\r\n172: \treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\r\n173: }\r\n174: vec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\r\n175: \tfloat distance = dot( planeNormal, point - pointOnPlane );\r\n176: \treturn - distance * planeNormal + point;\r\n177: }\r\n178: float sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\r\n179: \treturn sign( dot( point - pointOnPlane, planeNormal ) );\r\n180: }\r\n181: vec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\r\n182: \treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) \/ dot( planeNormal, lineDirection ) ) + pointOnLine;\r\n183: }\r\n184: mat3 transposeMat3( const in mat3 m ) {\r\n185: \tmat3 tmp;\r\n186: \ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\r\n187: \ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\r\n188: \ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\r\n189: \treturn tmp;\r\n190: }\r\n191: float linearToRelativeLuminance( const in vec3 color ) {\r\n192: \tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\r\n193: \treturn dot( weights, color.rgb );\r\n194: }\r\n195: \r\n196: vec3 packNormalToRGB( const in vec3 normal ) {\r\n197: \treturn normalize( normal ) * 0.5 + 0.5;\r\n198: }\r\n199: vec3 unpackRGBToNormal( const in vec3 rgb ) {\r\n200: \treturn 2.0 * rgb.xyz - 1.0;\r\n201: }\r\n202: const float PackUpscale = 256. \/ 255.;const float UnpackDownscale = 255. \/ 256.;\r\n203: const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\r\n204: const vec4 UnpackFactors = UnpackDownscale \/ vec4( PackFactors, 1. );\r\n205: const float ShiftRight8 = 1. \/ 256.;\r\n206: vec4 packDepthToRGBA( const in float v ) {\r\n207: \tvec4 r = vec4( fract( v * PackFactors ), v );\r\n208: \tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\r\n209: }\r\n210: float unpackRGBAToDepth( const in vec4 v ) {\r\n211: \treturn dot( v, UnpackFactors );\r\n212: }\r\n213: float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\r\n214: \treturn ( viewZ + near ) \/ ( near - far );\r\n215: }\r\n216: float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\r\n217: \treturn linearClipZ * ( near - far ) - near;\r\n218: }\r\n219: float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\r\n220: \treturn (( near + viewZ ) * far ) \/ (( far - near ) * viewZ );\r\n221: }\r\n222: float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\r\n223: \treturn ( near * far ) \/ ( ( far - near ) * invClipZ - far );\r\n224: }\r\n225: \r\n226: float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\r\n227: \tif( decayExponent > 0.0 ) {\r\n228: #if defined ( PHYSICALLY_CORRECT_LIGHTS )\r\n229: \t\tfloat distanceFalloff = 1.0 \/ max( pow( lightDistance, decayExponent ), 0.01 );\r\n230: \t\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance \/ cutoffDistance ) ) );\r\n231: \t\treturn distanceFalloff * maxDistanceCutoffFactor;\r\n232: #else\r\n233: \t\treturn pow( saturate( -lightDistance \/ cutoffDistance + 1.0 ), decayExponent );\r\n234: #endif\r\n235: \t}\r\n236: \treturn 1.0;\r\n237: }\r\n238: vec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\r\n239: \treturn RECIPROCAL_PI * diffuseColor;\r\n240: }\r\n241: vec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\r\n242: \tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\r\n243: \treturn ( 1.0 - specularColor ) * fresnel + specularColor;\r\n244: }\r\n245: float G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\r\n246: \tfloat a2 = pow2( alpha );\r\n247: \tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\r\n248: \tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\r\n249: \treturn 1.0 \/ ( gl * gv );\r\n250: }\r\n251: float G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\r\n252: \tfloat a2 = pow2( alpha );\r\n253: \tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\r\n254: \tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\r\n255: \treturn 0.5 \/ max( gv + gl, EPSILON );\r\n256: }\r\n257: float D_GGX( const in float alpha, const in float dotNH ) {\r\n258: \tfloat a2 = pow2( alpha );\r\n259: \tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\r\n260: \treturn RECIPROCAL_PI * a2 \/ pow2( denom );\r\n261: }\r\n262: vec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\r\n263: \tfloat alpha = pow2( roughness );\r\n264: \tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\r\n265: \tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\r\n266: \tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\r\n267: \tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\r\n268: \tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\r\n269: \tvec3 F = F_Schlick( specularColor, dotLH );\r\n270: \tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\r\n271: \tfloat D = D_GGX( alpha, dotNH );\r\n272: \treturn F * ( G * D );\r\n273: }\r\n274: vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\r\n275: \tconst float LUT_SIZE  = 64.0;\r\n276: \tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) \/ LUT_SIZE;\r\n277: \tconst float LUT_BIAS  = 0.5 \/ LUT_SIZE;\r\n278: \tfloat theta = acos( dot( N, V ) );\r\n279: \tvec2 uv = vec2(\r\n280: \t\tsqrt( saturate( roughness ) ),\r\n281: \t\tsaturate( theta \/ ( 0.5 * PI ) ) );\r\n282: \tuv = uv * LUT_SCALE + LUT_BIAS;\r\n283: \treturn uv;\r\n284: }\r\n285: float LTC_ClippedSphereFormFactor( const in vec3 f ) {\r\n286: \tfloat l = length( f );\r\n287: \treturn max( ( l * l + f.z ) \/ ( l + 1.0 ), 0.0 );\r\n288: }\r\n289: vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\r\n290: \tfloat x = dot( v1, v2 );\r\n291: \tfloat y = abs( x );\r\n292: \tfloat a = 0.86267 + (0.49788 + 0.01436 * y ) * y;\r\n293: \tfloat b = 3.45068 + (4.18814 + y) * y;\r\n294: \tfloat v = a \/ b;\r\n295: \tfloat theta_sintheta = (x > 0.0) ? v : 0.5 * inversesqrt( 1.0 - x * x ) - v;\r\n296: \treturn cross( v1, v2 ) * theta_sintheta;\r\n297: }\r\n298: vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\r\n299: \tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\r\n300: \tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\r\n301: \tvec3 lightNormal = cross( v1, v2 );\r\n302: \tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\r\n303: \tvec3 T1, T2;\r\n304: \tT1 = normalize( V - N * dot( V, N ) );\r\n305: \tT2 = - cross( N, T1 );\r\n306: \tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\r\n307: \tvec3 coords[ 4 ];\r\n308: \tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\r\n309: \tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\r\n310: \tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\r\n311: \tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\r\n312: \tcoords[ 0 ] = normalize( coords[ 0 ] );\r\n313: \tcoords[ 1 ] = normalize( coords[ 1 ] );\r\n314: \tcoords[ 2 ] = normalize( coords[ 2 ] );\r\n315: \tcoords[ 3 ] = normalize( coords[ 3 ] );\r\n316: \tvec3 vectorFormFactor = vec3( 0.0 );\r\n317: \tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\r\n318: \tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\r\n319: \tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\r\n320: \tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\r\n321: \tvec3 result = vec3( LTC_ClippedSphereFormFactor( vectorFormFactor ) );\r\n322: \treturn result;\r\n323: }\r\n324: vec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\r\n325: \tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\r\n326: \tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\r\n327: \tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\r\n328: \tvec4 r = roughness * c0 + c1;\r\n329: \tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\r\n330: \tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\r\n331: \treturn specularColor * AB.x + AB.y;\r\n332: }\r\n333: float G_BlinnPhong_Implicit( ) {\r\n334: \treturn 0.25;\r\n335: }\r\n336: float D_BlinnPhong( const in float shininess, const in float dotNH ) {\r\n337: \treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\r\n338: }\r\n339: vec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\r\n340: \tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\r\n341: \tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\r\n342: \tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\r\n343: \tvec3 F = F_Schlick( specularColor, dotLH );\r\n344: \tfloat G = G_BlinnPhong_Implicit( );\r\n345: \tfloat D = D_BlinnPhong( shininess, dotNH );\r\n346: \treturn F * ( G * D );\r\n347: }\r\n348: float GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\r\n349: \treturn ( 2.0 \/ pow2( ggxRoughness + 0.0001 ) - 2.0 );\r\n350: }\r\n351: float BlinnExponentToGGXRoughness( const in float blinnExponent ) {\r\n352: \treturn sqrt( 2.0 \/ ( blinnExponent + 2.0 ) );\r\n353: }\r\n354: \r\n355: #ifdef USE_FOG\r\n356: \tuniform vec3 fogColor;\r\n357: \tvarying float fogDepth;\r\n358: \t#ifdef FOG_EXP2\r\n359: \t\tuniform float fogDensity;\r\n360: \t#else\r\n361: \t\tuniform float fogNear;\r\n362: \t\tuniform float fogFar;\r\n363: \t#endif\r\n364: #endif\r\n365: \r\n366: uniform vec3 ambientLightColor;\r\n367: vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\r\n368: \tvec3 irradiance = ambientLightColor;\r\n369: \t#ifndef PHYSICALLY_CORRECT_LIGHTS\r\n370: \t\tirradiance *= PI;\r\n371: \t#endif\r\n372: \treturn irradiance;\r\n373: }\r\n374: #if 1 > 0\r\n375: \tstruct DirectionalLight {\r\n376: \t\tvec3 direction;\r\n377: \t\tvec3 color;\r\n378: \t\tint shadow;\r\n379: \t\tfloat shadowBias;\r\n380: \t\tfloat shadowRadius;\r\n381: \t\tvec2 shadowMapSize;\r\n382: \t};\r\n383: \tuniform DirectionalLight directionalLights[ 1 ];\r\n384: \tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\r\n385: \t\tdirectLight.color = directionalLight.color;\r\n386: \t\tdirectLight.direction = directionalLight.direction;\r\n387: \t\tdirectLight.visible = true;\r\n388: \t}\r\n389: #endif\r\n390: #if 0 > 0\r\n391: \tstruct PointLight {\r\n392: \t\tvec3 position;\r\n393: \t\tvec3 color;\r\n394: \t\tfloat distance;\r\n395: \t\tfloat decay;\r\n396: \t\tint shadow;\r\n397: \t\tfloat shadowBias;\r\n398: \t\tfloat shadowRadius;\r\n399: \t\tvec2 shadowMapSize;\r\n400: \t\tfloat shadowCameraNear;\r\n401: \t\tfloat shadowCameraFar;\r\n402: \t};\r\n403: \tuniform PointLight pointLights[ 0 ];\r\n404: \tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\r\n405: \t\tvec3 lVector = pointLight.position - geometry.position;\r\n406: \t\tdirectLight.direction = normalize( lVector );\r\n407: \t\tfloat lightDistance = length( lVector );\r\n408: \t\tdirectLight.color = pointLight.color;\r\n409: \t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\r\n410: \t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\r\n411: \t}\r\n412: #endif\r\n413: #if 0 > 0\r\n414: \tstruct SpotLight {\r\n415: \t\tvec3 position;\r\n416: \t\tvec3 direction;\r\n417: \t\tvec3 color;\r\n418: \t\tfloat distance;\r\n419: \t\tfloat decay;\r\n420: \t\tfloat coneCos;\r\n421: \t\tfloat penumbraCos;\r\n422: \t\tint shadow;\r\n423: \t\tfloat shadowBias;\r\n424: \t\tfloat shadowRadius;\r\n425: \t\tvec2 shadowMapSize;\r\n426: \t};\r\n427: \tuniform SpotLight spotLights[ 0 ];\r\n428: \tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\r\n429: \t\tvec3 lVector = spotLight.position - geometry.position;\r\n430: \t\tdirectLight.direction = normalize( lVector );\r\n431: \t\tfloat lightDistance = length( lVector );\r\n432: \t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\r\n433: \t\tif ( angleCos > spotLight.coneCos ) {\r\n434: \t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\r\n435: \t\t\tdirectLight.color = spotLight.color;\r\n436: \t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\r\n437: \t\t\tdirectLight.visible = true;\r\n438: \t\t} else {\r\n439: \t\t\tdirectLight.color = vec3( 0.0 );\r\n440: \t\t\tdirectLight.visible = false;\r\n441: \t\t}\r\n442: \t}\r\n443: #endif\r\n444: #if 0 > 0\r\n445: \tstruct RectAreaLight {\r\n446: \t\tvec3 color;\r\n447: \t\tvec3 position;\r\n448: \t\tvec3 halfWidth;\r\n449: \t\tvec3 halfHeight;\r\n450: \t};\r\n451: \tuniform sampler2D ltcMat;\tuniform sampler2D ltcMag;\r\n452: \tuniform RectAreaLight rectAreaLights[ 0 ];\r\n453: #endif\r\n454: #if 0 > 0\r\n455: \tstruct HemisphereLight {\r\n456: \t\tvec3 direction;\r\n457: \t\tvec3 skyColor;\r\n458: \t\tvec3 groundColor;\r\n459: \t};\r\n460: \tuniform HemisphereLight hemisphereLights[ 0 ];\r\n461: \tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\r\n462: \t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\r\n463: \t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\r\n464: \t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\r\n465: \t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\r\n466: \t\t\tirradiance *= PI;\r\n467: \t\t#endif\r\n468: \t\treturn irradiance;\r\n469: \t}\r\n470: #endif\r\n471: #if defined( USE_ENVMAP ) && defined( PHYSICAL )\r\n472: \tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\r\n473: \t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\r\n474: \t\t#ifdef ENVMAP_TYPE_CUBE\r\n475: \t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\r\n476: \t\t\t#ifdef TEXTURE_LOD_EXT\r\n477: \t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\r\n478: \t\t\t#else\r\n479: \t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\r\n480: \t\t\t#endif\r\n481: \t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\r\n482: \t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\r\n483: \t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\r\n484: \t\t\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\r\n485: \t\t#else\r\n486: \t\t\tvec4 envMapColor = vec4( 0.0 );\r\n487: \t\t#endif\r\n488: \t\treturn PI * envMapColor.rgb * envMapIntensity;\r\n489: \t}\r\n490: \tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\r\n491: \t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\r\n492: \t\tfloat desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\r\n493: \t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\r\n494: \t}\r\n495: \tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\r\n496: \t\t#ifdef ENVMAP_MODE_REFLECTION\r\n497: \t\t\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\r\n498: \t\t#else\r\n499: \t\t\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\r\n500: \t\t#endif\r\n501: \t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\r\n502: \t\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\r\n503: \t\t#ifdef ENVMAP_TYPE_CUBE\r\n504: \t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\r\n505: \t\t\t#ifdef TEXTURE_LOD_EXT\r\n506: \t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\r\n507: \t\t\t#else\r\n508: \t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\r\n509: \t\t\t#endif\r\n510: \t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\r\n511: \t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\r\n512: \t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\r\n513: \t\t\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\r\n514: \t\t#elif defined( ENVMAP_TYPE_EQUIREC )\r\n515: \t\t\tvec2 sampleUV;\r\n516: \t\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\r\n517: \t\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\r\n518: \t\t\t#ifdef TEXTURE_LOD_EXT\r\n519: \t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\r\n520: \t\t\t#else\r\n521: \t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\r\n522: \t\t\t#endif\r\n523: \t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\r\n524: \t\t#elif defined( ENVMAP_TYPE_SPHERE )\r\n525: \t\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\r\n526: \t\t\t#ifdef TEXTURE_LOD_EXT\r\n527: \t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\r\n528: \t\t\t#else\r\n529: \t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\r\n530: \t\t\t#endif\r\n531: \t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\r\n532: \t\t#endif\r\n533: \t\treturn envMapColor.rgb * envMapIntensity;\r\n534: \t}\r\n535: #endif\r\n536: \r\n537: #ifdef USE_SHADOWMAP\r\n538: \t#if 1 > 0\r\n539: \t\tuniform sampler2D directionalShadowMap[ 1 ];\r\n540: \t\tvarying vec4 vDirectionalShadowCoord[ 1 ];\r\n541: \t#endif\r\n542: \t#if 0 > 0\r\n543: \t\tuniform sampler2D spotShadowMap[ 0 ];\r\n544: \t\tvarying vec4 vSpotShadowCoord[ 0 ];\r\n545: \t#endif\r\n546: \t#if 0 > 0\r\n547: \t\tuniform sampler2D pointShadowMap[ 0 ];\r\n548: \t\tvarying vec4 vPointShadowCoord[ 0 ];\r\n549: \t#endif\r\n550: \tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\r\n551: \t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\r\n552: \t}\r\n553: \tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\r\n554: \t\tconst vec2 offset = vec2( 0.0, 1.0 );\r\n555: \t\tvec2 texelSize = vec2( 1.0 ) \/ size;\r\n556: \t\tvec2 centroidUV = floor( uv * size + 0.5 ) \/ size;\r\n557: \t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\r\n558: \t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\r\n559: \t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\r\n560: \t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\r\n561: \t\tvec2 f = fract( uv * size + 0.5 );\r\n562: \t\tfloat a = mix( lb, lt, f.y );\r\n563: \t\tfloat b = mix( rb, rt, f.y );\r\n564: \t\tfloat c = mix( a, b, f.x );\r\n565: \t\treturn c;\r\n566: \t}\r\n567: \tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\r\n568: \t\tfloat shadow = 1.0;\r\n569: \t\tshadowCoord.xyz \/= shadowCoord.w;\r\n570: \t\tshadowCoord.z += shadowBias;\r\n571: \t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\r\n572: \t\tbool inFrustum = all( inFrustumVec );\r\n573: \t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\r\n574: \t\tbool frustumTest = all( frustumTestVec );\r\n575: \t\tif ( frustumTest ) {\r\n576: \t\t#if defined( SHADOWMAP_TYPE_PCF )\r\n577: \t\t\tvec2 texelSize = vec2( 1.0 ) \/ shadowMapSize;\r\n578: \t\t\tfloat dx0 = - texelSize.x * shadowRadius;\r\n579: \t\t\tfloat dy0 = - texelSize.y * shadowRadius;\r\n580: \t\t\tfloat dx1 = + texelSize.x * shadowRadius;\r\n581: \t\t\tfloat dy1 = + texelSize.y * shadowRadius;\r\n582: \t\t\tshadow = (\r\n583: \t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\r\n584: \t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\r\n585: \t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\r\n586: \t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\r\n587: \t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\r\n588: \t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\r\n589: \t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\r\n590: \t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\r\n591: \t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\r\n592: \t\t\t) * ( 1.0 \/ 9.0 );\r\n593: \t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\r\n594: \t\t\tvec2 texelSize = vec2( 1.0 ) \/ shadowMapSize;\r\n595: \t\t\tfloat dx0 = - texelSize.x * shadowRadius;\r\n596: \t\t\tfloat dy0 = - texelSize.y * shadowRadius;\r\n597: \t\t\tfloat dx1 = + texelSize.x * shadowRadius;\r\n598: \t\t\tfloat dy1 = + texelSize.y * shadowRadius;\r\n599: \t\t\tshadow = (\r\n600: \t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\r\n601: \t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\r\n602: \t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\r\n603: \t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\r\n604: \t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\r\n605: \t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\r\n606: \t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\r\n607: \t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\r\n608: \t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\r\n609: \t\t\t) * ( 1.0 \/ 9.0 );\r\n610: \t\t#else\r\n611: \t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\r\n612: \t\t#endif\r\n613: \t\t}\r\n614: \t\treturn shadow;\r\n615: \t}\r\n616: \tvec2 cubeToUV( vec3 v, float texelSizeY ) {\r\n617: \t\tvec3 absV = abs( v );\r\n618: \t\tfloat scaleToCube = 1.0 \/ max( absV.x, max( absV.y, absV.z ) );\r\n619: \t\tabsV *= scaleToCube;\r\n620: \t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\r\n621: \t\tvec2 planar = v.xy;\r\n622: \t\tfloat almostATexel = 1.5 * texelSizeY;\r\n623: \t\tfloat almostOne = 1.0 - almostATexel;\r\n624: \t\tif ( absV.z >= almostOne ) {\r\n625: \t\t\tif ( v.z > 0.0 )\r\n626: \t\t\t\tplanar.x = 4.0 - v.x;\r\n627: \t\t} else if ( absV.x >= almostOne ) {\r\n628: \t\t\tfloat signX = sign( v.x );\r\n629: \t\t\tplanar.x = v.z * signX + 2.0 * signX;\r\n630: \t\t} else if ( absV.y >= almostOne ) {\r\n631: \t\t\tfloat signY = sign( v.y );\r\n632: \t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\r\n633: \t\t\tplanar.y = v.z * signY - 2.0;\r\n634: \t\t}\r\n635: \t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\r\n636: \t}\r\n637: \tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\r\n638: \t\tvec2 texelSize = vec2( 1.0 ) \/ ( shadowMapSize * vec2( 4.0, 2.0 ) );\r\n639: \t\tvec3 lightToPosition = shadowCoord.xyz;\r\n640: \t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) \/ ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\r\n641: \t\tvec3 bd3D = normalize( lightToPosition );\r\n642: \t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\r\n643: \t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\r\n644: \t\t\treturn (\r\n645: \t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\r\n646: \t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\r\n647: \t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\r\n648: \t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\r\n649: \t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\r\n650: \t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\r\n651: \t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\r\n652: \t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\r\n653: \t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\r\n654: \t\t\t) * ( 1.0 \/ 9.0 );\r\n655: \t\t#else\r\n656: \t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\r\n657: \t\t#endif\r\n658: \t}\r\n659: #endif\r\n660: \r\n661: float getShadowMask() {\r\n662: \tfloat shadow = 1.0;\r\n663: \t#ifdef USE_SHADOWMAP\r\n664: \t#if 1 > 0\r\n665: \tDirectionalLight directionalLight;\r\n666: \tfor ( int i = 0; i < 1; i ++ ) {\r\n667: \t\tdirectionalLight = directionalLights[ i ];\r\n668: \t\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\r\n669: \t}\r\n670: \t#endif\r\n671: \t#if 0 > 0\r\n672: \tSpotLight spotLight;\r\n673: \tfor ( int i = 0; i < 0; i ++ ) {\r\n674: \t\tspotLight = spotLights[ i ];\r\n675: \t\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\r\n676: \t}\r\n677: \t#endif\r\n678: \t#if 0 > 0\r\n679: \tPointLight pointLight;\r\n680: \tfor ( int i = 0; i < 0; i ++ ) {\r\n681: \t\tpointLight = pointLights[ i ];\r\n682: \t\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\r\n683: \t}\r\n684: \t#endif\r\n685: \t#endif\r\n686: \treturn shadow;\r\n687: }\r\n688: \r\n689: void main() {\r\n690: \tvec4 noise = getNoise( worldPosition.xz * size );\r\n691: \tvec3 surfaceNormal = normalize( noise.xzy * vec3( 1.5, 1.0, 1.5 ) );\r\n692: \tvec3 diffuseLight = vec3(0.0);\r\n693: \tvec3 specularLight = vec3(0.0);\r\n694: \tvec3 worldToEye = eye-worldPosition.xyz;\r\n695: \tvec3 eyeDirection = normalize( worldToEye );\r\n696: \tsunLight( surfaceNormal, eyeDirection, 100.0, 2.0, 0.5, diffuseLight, specularLight );\r\n697: \tfloat distance = length(worldToEye);\r\n698: \tvec2 distortion = surfaceNormal.xz * ( 0.001 + 1.0 \/ distance ) * distortionScale;\r\n699: \tvec3 reflectionSample = vec3( texture2D( mirrorSampler, mirrorCoord.xy \/ mirrorCoord.z + distortion ) );\r\n700: \tfloat theta = max( dot( eyeDirection, surfaceNormal ), 0.0 );\r\n701: \tfloat rf0 = 0.3;\r\n702: \tfloat reflectance = rf0 + ( 1.0 - rf0 ) * pow( ( 1.0 - theta ), 5.0 );\r\n703: \tvec3 scatter = max( 0.0, dot( surfaceNormal, eyeDirection ) ) * waterColor;\r\n704: \tvec3 albedo = mix( ( sunColor * diffuseLight * 0.3 + scatter ) * getShadowMask(), ( vec3( 0.1 ) + reflectionSample * 0.9 + reflectionSample * specularLight ), reflectance);\r\n705: \tvec3 outgoingLight = albedo;\r\n706: \tgl_FragColor = vec4( outgoingLight, alpha );\r\n707: #if defined( TONE_MAPPING )\r\n708:   gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\r\n709: #endif\r\n710: \r\n711: #ifdef USE_FOG\r\n712: \t#ifdef FOG_EXP2\r\n713: \t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\r\n714: \t#else\r\n715: \t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\r\n716: \t#endif\r\n717: \tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\r\n718: #endif\r\n719: \r\n720: }\r\n```","created_at":"2017-10-01T11:35:25.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12312#issuecomment-333370596","id":333370596,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12312","node_id":"MDEyOklzc3VlQ29tbWVudDMzMzM3MDU5Ng==","updated_at":"2017-10-01T11:37:51.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/333370596","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":5,"author_association":"CONTRIBUTOR","body":"The only sampler that gets indexed with a non-constant expression seems to be `directionalShadowMap` in line 668? No idea why it refers to `0:102(109)`.\r\n\r\n`668: \t\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;`","created_at":"2017-10-01T11:45:53.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12312#issuecomment-333371101","id":333371101,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12312","node_id":"MDEyOklzc3VlQ29tbWVudDMzMzM3MTEwMQ==","updated_at":"2017-10-01T11:47:52.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/333371101","user":{"following_url":"https:\/\/api.github.com\/users\/moraxy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/moraxy\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/4936897?v=4","url":"https:\/\/api.github.com\/users\/moraxy","gists_url":"https:\/\/api.github.com\/users\/moraxy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/moraxy","subscriptions_url":"https:\/\/api.github.com\/users\/moraxy\/subscriptions","node_id":"MDQ6VXNlcjQ5MzY4OTc=","repos_url":"https:\/\/api.github.com\/users\/moraxy\/repos","received_events_url":"https:\/\/api.github.com\/users\/moraxy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/moraxy\/starred{\/owner}{\/repo}","site_admin":false,"login":"moraxy","type":"User","id":4936897,"followers_url":"https:\/\/api.github.com\/users\/moraxy\/followers","organizations_url":"https:\/\/api.github.com\/users\/moraxy\/orgs"}},{"index":6,"author_association":"COLLABORATOR","body":"Other shadow map examples work. It has to do something with the `THREE.Water` specific fragment shader...","created_at":"2017-10-01T12:02:27.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12312#issuecomment-333371937","id":333371937,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12312","node_id":"MDEyOklzc3VlQ29tbWVudDMzMzM3MTkzNw==","updated_at":"2017-10-01T12:12:03.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/333371937","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":7,"author_association":"CONTRIBUTOR","body":"Same conclusion. It also reports a warning for an en extension at line 2 that is not visible, so it may be referring to a different code that what is logged ? \r\n\r\nSame issue as in https:\/\/github.com\/mrdoob\/three.js\/issues\/6115 by the way\r\n\r\nAs @moraxy stated and the issue suggests, it may be linked to shadows since the only sampler array with a non-const expression is there : what if you remove `water.receiveShadow = true` in the example ?\r\n\r\nI'm digging that shader in case I have any idea in the meanwhile...","created_at":"2017-10-01T12:07:32.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12312#issuecomment-333372225","id":333372225,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12312","node_id":"MDEyOklzc3VlQ29tbWVudDMzMzM3MjIyNQ==","updated_at":"2017-10-01T12:16:26.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/333372225","user":{"following_url":"https:\/\/api.github.com\/users\/Astrak\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Astrak\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/10037511?v=4","url":"https:\/\/api.github.com\/users\/Astrak","gists_url":"https:\/\/api.github.com\/users\/Astrak\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Astrak","subscriptions_url":"https:\/\/api.github.com\/users\/Astrak\/subscriptions","node_id":"MDQ6VXNlcjEwMDM3NTEx","repos_url":"https:\/\/api.github.com\/users\/Astrak\/repos","received_events_url":"https:\/\/api.github.com\/users\/Astrak\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Astrak\/starred{\/owner}{\/repo}","site_admin":false,"login":"Astrak","type":"User","id":10037511,"followers_url":"https:\/\/api.github.com\/users\/Astrak\/followers","organizations_url":"https:\/\/api.github.com\/users\/Astrak\/orgs"}},{"index":8,"author_association":"COLLABORATOR","body":">  what if you remove water.receiveShadow = true in the example ?\r\n\r\nThat solves the problem.","created_at":"2017-10-01T12:11:52.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12312#issuecomment-333372458","id":333372458,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12312","node_id":"MDEyOklzc3VlQ29tbWVudDMzMzM3MjQ1OA==","updated_at":"2017-10-01T12:11:52.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/333372458","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":9,"author_association":"CONTRIBUTOR","body":"@Mugen87 does the shadows in the [spline editor example](http:\/\/rawgit.com\/mrdoob\/three.js\/dev\/examples\/webgl_geometry_spline_editor.html) work for you ? (I copied the chunks of the ShadowMaterial to get the shadows in the water shader)","created_at":"2017-10-01T13:27:30.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12312#issuecomment-333376642","id":333376642,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12312","node_id":"MDEyOklzc3VlQ29tbWVudDMzMzM3NjY0Mg==","updated_at":"2017-10-01T13:33:04.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/333376642","user":{"following_url":"https:\/\/api.github.com\/users\/Astrak\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Astrak\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/10037511?v=4","url":"https:\/\/api.github.com\/users\/Astrak","gists_url":"https:\/\/api.github.com\/users\/Astrak\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Astrak","subscriptions_url":"https:\/\/api.github.com\/users\/Astrak\/subscriptions","node_id":"MDQ6VXNlcjEwMDM3NTEx","repos_url":"https:\/\/api.github.com\/users\/Astrak\/repos","received_events_url":"https:\/\/api.github.com\/users\/Astrak\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Astrak\/starred{\/owner}{\/repo}","site_admin":false,"login":"Astrak","type":"User","id":10037511,"followers_url":"https:\/\/api.github.com\/users\/Astrak\/followers","organizations_url":"https:\/\/api.github.com\/users\/Astrak\/orgs"}},{"index":10,"author_association":"COLLABORATOR","body":"Yep, `webgl_geometry_spline_editor` works.","created_at":"2017-10-01T13:32:47.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12312#issuecomment-333376951","id":333376951,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12312","node_id":"MDEyOklzc3VlQ29tbWVudDMzMzM3Njk1MQ==","updated_at":"2017-10-01T13:32:47.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/333376951","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":11,"author_association":"CONTRIBUTOR","body":"Why does the same `shadowmask_pars_fragment` chunk output two different `getShadowMask` functions in these two examples ? In the water shader it has for loops with this non-constant uses in samplers arrays, in the ShadowMaterial program of the spline editor example it doesn't : ![getShadowMask](https:\/\/img11.hostingpics.net\/pics\/805752mask.png)","created_at":"2017-10-01T13:45:03.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12312#issuecomment-333377642","id":333377642,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12312","node_id":"MDEyOklzc3VlQ29tbWVudDMzMzM3NzY0Mg==","updated_at":"2017-10-01T14:10:03.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/333377642","user":{"following_url":"https:\/\/api.github.com\/users\/Astrak\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Astrak\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/10037511?v=4","url":"https:\/\/api.github.com\/users\/Astrak","gists_url":"https:\/\/api.github.com\/users\/Astrak\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Astrak","subscriptions_url":"https:\/\/api.github.com\/users\/Astrak\/subscriptions","node_id":"MDQ6VXNlcjEwMDM3NTEx","repos_url":"https:\/\/api.github.com\/users\/Astrak\/repos","received_events_url":"https:\/\/api.github.com\/users\/Astrak\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Astrak\/starred{\/owner}{\/repo}","site_admin":false,"login":"Astrak","type":"User","id":10037511,"followers_url":"https:\/\/api.github.com\/users\/Astrak\/followers","organizations_url":"https:\/\/api.github.com\/users\/Astrak\/orgs"}},{"index":12,"author_association":"CONTRIBUTOR","body":"Loop unrolling? There should be a flag or directive or something to force enable\/disable it per loop","created_at":"2017-10-01T13:47:35.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12312#issuecomment-333377789","id":333377789,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12312","node_id":"MDEyOklzc3VlQ29tbWVudDMzMzM3Nzc4OQ==","updated_at":"2017-10-01T13:47:35.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/333377789","user":{"following_url":"https:\/\/api.github.com\/users\/moraxy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/moraxy\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/4936897?v=4","url":"https:\/\/api.github.com\/users\/moraxy","gists_url":"https:\/\/api.github.com\/users\/moraxy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/moraxy","subscriptions_url":"https:\/\/api.github.com\/users\/moraxy\/subscriptions","node_id":"MDQ6VXNlcjQ5MzY4OTc=","repos_url":"https:\/\/api.github.com\/users\/moraxy\/repos","received_events_url":"https:\/\/api.github.com\/users\/moraxy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/moraxy\/starred{\/owner}{\/repo}","site_admin":false,"login":"moraxy","type":"User","id":4936897,"followers_url":"https:\/\/api.github.com\/users\/moraxy\/followers","organizations_url":"https:\/\/api.github.com\/users\/moraxy\/orgs"}},{"index":13,"author_association":"CONTRIBUTOR","body":"Does the renderer achieves the loop unrolling internally with this chunk in built-in materials (it is used in Shadow and Lambert materials) and not with ShaderMaterial ?","created_at":"2017-10-01T13:50:34.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12312#issuecomment-333377960","id":333377960,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12312","node_id":"MDEyOklzc3VlQ29tbWVudDMzMzM3Nzk2MA==","updated_at":"2017-10-01T13:50:34.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/333377960","user":{"following_url":"https:\/\/api.github.com\/users\/Astrak\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Astrak\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/10037511?v=4","url":"https:\/\/api.github.com\/users\/Astrak","gists_url":"https:\/\/api.github.com\/users\/Astrak\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Astrak","subscriptions_url":"https:\/\/api.github.com\/users\/Astrak\/subscriptions","node_id":"MDQ6VXNlcjEwMDM3NTEx","repos_url":"https:\/\/api.github.com\/users\/Astrak\/repos","received_events_url":"https:\/\/api.github.com\/users\/Astrak\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Astrak\/starred{\/owner}{\/repo}","site_admin":false,"login":"Astrak","type":"User","id":10037511,"followers_url":"https:\/\/api.github.com\/users\/Astrak\/followers","organizations_url":"https:\/\/api.github.com\/users\/Astrak\/orgs"}},{"index":14,"author_association":"COLLABORATOR","body":"That's correct, see https:\/\/github.com\/mrdoob\/three.js\/blob\/dev\/src\/renderers\/webgl\/WebGLProgram.js#L509-L514","created_at":"2017-10-01T13:55:33.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12312#issuecomment-333378224","id":333378224,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12312","node_id":"MDEyOklzc3VlQ29tbWVudDMzMzM3ODIyNA==","updated_at":"2017-10-01T13:55:33.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/333378224","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":15,"author_association":"CONTRIBUTOR","body":"How do we deal with this ?","created_at":"2017-10-01T14:00:02.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12312#issuecomment-333378504","id":333378504,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12312","node_id":"MDEyOklzc3VlQ29tbWVudDMzMzM3ODUwNA==","updated_at":"2017-10-01T14:00:02.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/333378504","user":{"following_url":"https:\/\/api.github.com\/users\/Astrak\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Astrak\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/10037511?v=4","url":"https:\/\/api.github.com\/users\/Astrak","gists_url":"https:\/\/api.github.com\/users\/Astrak\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Astrak","subscriptions_url":"https:\/\/api.github.com\/users\/Astrak\/subscriptions","node_id":"MDQ6VXNlcjEwMDM3NTEx","repos_url":"https:\/\/api.github.com\/users\/Astrak\/repos","received_events_url":"https:\/\/api.github.com\/users\/Astrak\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Astrak\/starred{\/owner}{\/repo}","site_admin":false,"login":"Astrak","type":"User","id":10037511,"followers_url":"https:\/\/api.github.com\/users\/Astrak\/followers","organizations_url":"https:\/\/api.github.com\/users\/Astrak\/orgs"}},{"index":16,"author_association":"COLLABORATOR","body":"Good question. I remember there was a feature request of a user who asked for an example that shows, how to apply lighting + shadows on a custom shader material (unfortunately, i can't find the issue right now). But we would run into the same error when implementing this. \r\n\r\nI'm not sure how to solve this problem. Let's wait how @mrdoob and @WestLangley evaluate the issue.","created_at":"2017-10-01T14:09:53.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12312#issuecomment-333379152","id":333379152,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12312","node_id":"MDEyOklzc3VlQ29tbWVudDMzMzM3OTE1Mg==","updated_at":"2017-10-01T15:05:09.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/333379152","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":17,"author_association":"CONTRIBUTOR","body":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12114","created_at":"2017-10-01T14:11:05.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12312#issuecomment-333379229","id":333379229,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12312","node_id":"MDEyOklzc3VlQ29tbWVudDMzMzM3OTIyOQ==","updated_at":"2017-10-01T14:11:05.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/333379229","user":{"following_url":"https:\/\/api.github.com\/users\/Astrak\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Astrak\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/10037511?v=4","url":"https:\/\/api.github.com\/users\/Astrak","gists_url":"https:\/\/api.github.com\/users\/Astrak\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Astrak","subscriptions_url":"https:\/\/api.github.com\/users\/Astrak\/subscriptions","node_id":"MDQ6VXNlcjEwMDM3NTEx","repos_url":"https:\/\/api.github.com\/users\/Astrak\/repos","received_events_url":"https:\/\/api.github.com\/users\/Astrak\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Astrak\/starred{\/owner}{\/repo}","site_admin":false,"login":"Astrak","type":"User","id":10037511,"followers_url":"https:\/\/api.github.com\/users\/Astrak\/followers","organizations_url":"https:\/\/api.github.com\/users\/Astrak\/orgs"}},{"index":18,"author_association":"CONTRIBUTOR","body":"As a user myself this is a big question, because in GPGPU cases we can use huge `for` loops with the ShaderMaterial, while on another hand we should be able to use this kind of chunk if we want to design special materials with the ShaderMaterial. \r\n\r\nBoth keeping and removing this condition seems to cause issues somewhere. @moraxy has mentionned using a flag, which would then look like the only exit door... ? But this is a special policy to introduce then. \r\n\r\nThis is also the general problem of customizing shaders I guess, with all the SO questions and issues going on... I love `onBeforeCompile` but creating the water shader by using it on a ShadowMaterial... this could look tricky... and would not solve the other related questions.\r\n\r\nI let you solve this :innocent: ","created_at":"2017-10-01T14:19:42.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12312#issuecomment-333379767","id":333379767,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12312","node_id":"MDEyOklzc3VlQ29tbWVudDMzMzM3OTc2Nw==","updated_at":"2017-10-01T17:02:43.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/333379767","user":{"following_url":"https:\/\/api.github.com\/users\/Astrak\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Astrak\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/10037511?v=4","url":"https:\/\/api.github.com\/users\/Astrak","gists_url":"https:\/\/api.github.com\/users\/Astrak\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Astrak","subscriptions_url":"https:\/\/api.github.com\/users\/Astrak\/subscriptions","node_id":"MDQ6VXNlcjEwMDM3NTEx","repos_url":"https:\/\/api.github.com\/users\/Astrak\/repos","received_events_url":"https:\/\/api.github.com\/users\/Astrak\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Astrak\/starred{\/owner}{\/repo}","site_admin":false,"login":"Astrak","type":"User","id":10037511,"followers_url":"https:\/\/api.github.com\/users\/Astrak\/followers","organizations_url":"https:\/\/api.github.com\/users\/Astrak\/orgs"}},{"index":19,"author_association":"OWNER","body":"I guess we could try adding a `unrollLoops` property to `ShaderMaterial`?\r\n\r\n```js\r\nif ( material.isShaderMaterial === undefined || material.unrollLoops === true ) {\r\n```","created_at":"2017-10-02T19:37:21.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12312#issuecomment-333641515","id":333641515,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12312","node_id":"MDEyOklzc3VlQ29tbWVudDMzMzY0MTUxNQ==","updated_at":"2017-10-02T19:37:21.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/333641515","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":20,"author_association":"COLLABORATOR","body":"Sounds good!","created_at":"2017-10-03T09:20:04.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12312#issuecomment-333786808","id":333786808,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12312","node_id":"MDEyOklzc3VlQ29tbWVudDMzMzc4NjgwOA==","updated_at":"2017-10-03T09:20:04.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/333786808","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":21,"author_association":"CONTRIBUTOR","body":"@Astrak \r\n\r\nWhat's this shader inspector you posted the screenshot of?","created_at":"2017-10-03T16:45:55.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12312#issuecomment-333906515","id":333906515,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12312","node_id":"MDEyOklzc3VlQ29tbWVudDMzMzkwNjUxNQ==","updated_at":"2017-10-03T16:45:55.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/333906515","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":22,"author_association":"CONTRIBUTOR","body":"@pailhead That's [WebGL Inspector](https:\/\/github.com\/benvanik\/WebGL-Inspector), available as an extension for Chrome and Firefox.","created_at":"2017-10-03T19:00:03.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12312#issuecomment-333944616","id":333944616,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12312","node_id":"MDEyOklzc3VlQ29tbWVudDMzMzk0NDYxNg==","updated_at":"2017-10-03T19:00:03.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/333944616","user":{"following_url":"https:\/\/api.github.com\/users\/Astrak\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Astrak\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/10037511?v=4","url":"https:\/\/api.github.com\/users\/Astrak","gists_url":"https:\/\/api.github.com\/users\/Astrak\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Astrak","subscriptions_url":"https:\/\/api.github.com\/users\/Astrak\/subscriptions","node_id":"MDQ6VXNlcjEwMDM3NTEx","repos_url":"https:\/\/api.github.com\/users\/Astrak\/repos","received_events_url":"https:\/\/api.github.com\/users\/Astrak\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Astrak\/starred{\/owner}{\/repo}","site_admin":false,"login":"Astrak","type":"User","id":10037511,"followers_url":"https:\/\/api.github.com\/users\/Astrak\/followers","organizations_url":"https:\/\/api.github.com\/users\/Astrak\/orgs"}},{"index":23,"author_association":"COLLABORATOR","body":"This bug is now fixed via #13140. Yay! \ud83c\udf89 \ud83d\ude4c ","created_at":"2018-02-06T09:21:32.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12312#issuecomment-363360477","id":363360477,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12312","node_id":"MDEyOklzc3VlQ29tbWVudDM2MzM2MDQ3Nw==","updated_at":"2018-02-06T09:21:32.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/363360477","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}}]}