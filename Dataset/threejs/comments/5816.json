{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"CONTRIBUTOR","body":"Neat.  Two thoughts come to mind, why not just implement this as bones?   Basically you have a virtual parent bone and then a whole bunch of children.  I think it could fit easily within that paradigm -- just combine it with a bone designer tool set, and I can help with that (because that is half of your class is a construction tool.)  I guess the only issue is you may exceed the variables allowed per shader if you do it that way?  Then I wonder if we could then modify bones to allow for different way of specifying where the matrix information is -- either shader variables or as DataTextures.\n\nMy suggestion, which is just my suggestion and no one elses, is to try and unify it with bones to reduce the near duplication in ThreeJS.\n","created_at":"2014-12-27T06:42:30.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/5816#issuecomment-68170752","id":68170752,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/5816","node_id":"MDEyOklzc3VlQ29tbWVudDY4MTcwNzUy","updated_at":"2014-12-27T06:42:30.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/68170752","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":1,"author_association":"CONTRIBUTOR","body":"I hadn't thought about just using bones. I think the interface could be a little more confusing to use than the MeshGroup idea since you'd be dealing with separate bones as opposed to the original Mesh objects. Although bones are just an Object3d with a skin property, so technically you could just pass in an array of Meshes (which feels kind of messy.)\n\nThe bones also use the inverse matrices and skin weights which feel like a lot of baggage for something that's intended to be high performance tweak.\n\nFor reducing duplication in the shader code the two practically identical matrix lookup functions could be combined into one generic function.\n\nTo deal with the lack of floating point textures you could fall back to uniforms of an array of matrices, but you do run out of variables pretty quick. You could still make it more high performance by batching N Meshes into one draw pass, so if you had 1000 meshes, you might be able to batch it into something like 20 draw passes, which should still be a nice performance increase. [I've already written a proof of concept shader that uses the uniform arrays](https:\/\/github.com\/TatumCreative\/sandbox\/tree\/master\/js\/demos\/UniformPositionalMatrices). ([live example](http:\/\/gregtatum.com\/sandbox\/#uniformPositionalMatrices))\n\nThose are some of my initial thoughts. It does look like it would be possible to implement this just using bones, but to me it seems like there are a few side-effects which seem to be counter to the intended use of a MeshGroup.\n","created_at":"2014-12-28T15:40:13.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/5816#issuecomment-68210324","id":68210324,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/5816","node_id":"MDEyOklzc3VlQ29tbWVudDY4MjEwMzI0","updated_at":"2014-12-28T15:40:13.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/68210324","user":{"following_url":"https:\/\/api.github.com\/users\/gregtatum\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/gregtatum\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1588648?v=4","url":"https:\/\/api.github.com\/users\/gregtatum","gists_url":"https:\/\/api.github.com\/users\/gregtatum\/gists{\/gist_id}","html_url":"https:\/\/github.com\/gregtatum","subscriptions_url":"https:\/\/api.github.com\/users\/gregtatum\/subscriptions","node_id":"MDQ6VXNlcjE1ODg2NDg=","repos_url":"https:\/\/api.github.com\/users\/gregtatum\/repos","received_events_url":"https:\/\/api.github.com\/users\/gregtatum\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/gregtatum\/starred{\/owner}{\/repo}","site_admin":false,"login":"gregtatum","type":"User","id":1588648,"followers_url":"https:\/\/api.github.com\/users\/gregtatum\/followers","organizations_url":"https:\/\/api.github.com\/users\/gregtatum\/orgs"}},{"index":2,"author_association":"CONTRIBUTOR","body":"Hmm.. This reminds me of an instanced particle system as well.  But I guess\nin webgl 1.x instnacing isn't supported.\n\nBest regards,\nBen Houston\nhttp:\/\/Clara.io Online 3d modeling and rendering\nOn 28 Dec 2014 10:40, \"Greg Tatum\" notifications@github.com wrote:\n\n> I hadn't thought about just using bones. I think the interface could be a\n> little more confusing to use than the MeshGroup idea since you'd be dealing\n> with separate bones as opposed to the original Mesh objects. Although bones\n> are just an Object3d with a skin property, so technically you could just\n> pass in an array of Meshes (which feels kind of messy.)\n> \n> The bones also use the inverse matrices and skin weights which feel like a\n> lot of baggage for something that's intended to be high performance tweak.\n> \n> For reducing duplication in the shader code the two practically identical\n> matrix lookup functions could be combined into one generic function.\n> \n> To deal with the lack of floating point textures you could fall back to\n> uniforms of an array of matrices, but you do run out of variables pretty\n> quick. You could still make it more high performance by batching N Meshes\n> into one draw pass, so if you had 1000 meshes, you might be able to batch\n> it into something like 20 draw passes, which should still be a nice\n> performance increase. I've already written a proof of concept shader that\n> uses the uniform arrays\n> https:\/\/github.com\/TatumCreative\/sandbox\/tree\/master\/js\/demos\/UniformPositionalMatrices.\n> (live example http:\/\/gregtatum.com\/sandbox\/#uniformPositionalMatrices)\n> \n> Those are some of my initial thoughts. It does look like it would be\n> possible to implement this just using bones, but to me it seems like there\n> are a few side-effects which seem to be counter to the intended use of a\n> MeshGroup.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https:\/\/github.com\/mrdoob\/three.js\/pull\/5816#issuecomment-68210324.\n","created_at":"2014-12-28T16:31:12.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/5816#issuecomment-68211734","id":68211734,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/5816","node_id":"MDEyOklzc3VlQ29tbWVudDY4MjExNzM0","updated_at":"2014-12-28T16:31:12.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/68211734","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":3,"author_association":"CONTRIBUTOR","body":"One big difference is that it's not really true instancing. Each individual mesh's geometry is copied over into one ArrayBuffer, so each object can be different, but share the same material. So I guess one drawback is how potentially memory intensive this is, but it does allow you to have a massively larger amount of objects you can interact with.\n\nI don't know a way around this, and personally for my own use cases I prefer it this way so that I can modify each instance to do custom things.\n","created_at":"2014-12-28T16:42:54.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/5816#issuecomment-68212105","id":68212105,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/5816","node_id":"MDEyOklzc3VlQ29tbWVudDY4MjEyMTA1","updated_at":"2014-12-28T16:42:54.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/68212105","user":{"following_url":"https:\/\/api.github.com\/users\/gregtatum\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/gregtatum\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1588648?v=4","url":"https:\/\/api.github.com\/users\/gregtatum","gists_url":"https:\/\/api.github.com\/users\/gregtatum\/gists{\/gist_id}","html_url":"https:\/\/github.com\/gregtatum","subscriptions_url":"https:\/\/api.github.com\/users\/gregtatum\/subscriptions","node_id":"MDQ6VXNlcjE1ODg2NDg=","repos_url":"https:\/\/api.github.com\/users\/gregtatum\/repos","received_events_url":"https:\/\/api.github.com\/users\/gregtatum\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/gregtatum\/starred{\/owner}{\/repo}","site_admin":false,"login":"gregtatum","type":"User","id":1588648,"followers_url":"https:\/\/api.github.com\/users\/gregtatum\/followers","organizations_url":"https:\/\/api.github.com\/users\/gregtatum\/orgs"}},{"index":4,"author_association":"COLLABORATOR","body":"This is very clever.  : - )\n\nI believe the following line is incorrect, however.\n\n```\nvec4 sharedMaterialNormal = sharedMaterialTransformMatrix * vec4( normal, 0.0 );\n```\n\nYou can't, in general, apply the same transform to the normal that you apply to the vertices. That is what the \"normal matrix\" is for. See the source code for `Geometry.applyMatrix()`.\n\nAlso, in this line\n\n```\nvec4 mvPosition = modelViewMatrix * sharedMaterialTransformMatrix * vec4( position, 1.0 );\n```\n\nit appears on the surface that you are double-counting the world transform. Are you are accounting for that, somehow?\n","created_at":"2014-12-28T18:16:07.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/5816#issuecomment-68214606","id":68214606,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/5816","node_id":"MDEyOklzc3VlQ29tbWVudDY4MjE0NjA2","updated_at":"2014-12-28T18:16:07.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/68214606","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":5,"author_association":"CONTRIBUTOR","body":"Just noticed there is an api extension for instancing in webgl:\nhttp:\/\/blog.tojicode.com\/2013\/07\/webgl-instancing-with.html but as you said\nthis doesn't fit your use case.\n\nBest regards,\nBen Houston\nhttp:\/\/Clara.io Online 3d modeling and rendering\n","created_at":"2014-12-28T19:15:15.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/5816#issuecomment-68216398","id":68216398,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/5816","node_id":"MDEyOklzc3VlQ29tbWVudDY4MjE2Mzk4","updated_at":"2014-12-28T19:15:15.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/68216398","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":6,"author_association":"CONTRIBUTOR","body":"Thanks on catching the normal issue, WestLangley. I believe there is an error in my world transform matrix as well. I'll step through the code and figure those out.\n","created_at":"2014-12-28T22:00:40.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/5816#issuecomment-68221008","id":68221008,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/5816","node_id":"MDEyOklzc3VlQ29tbWVudDY4MjIxMDA4","updated_at":"2014-12-28T22:00:40.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/68221008","user":{"following_url":"https:\/\/api.github.com\/users\/gregtatum\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/gregtatum\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1588648?v=4","url":"https:\/\/api.github.com\/users\/gregtatum","gists_url":"https:\/\/api.github.com\/users\/gregtatum\/gists{\/gist_id}","html_url":"https:\/\/github.com\/gregtatum","subscriptions_url":"https:\/\/api.github.com\/users\/gregtatum\/subscriptions","node_id":"MDQ6VXNlcjE1ODg2NDg=","repos_url":"https:\/\/api.github.com\/users\/gregtatum\/repos","received_events_url":"https:\/\/api.github.com\/users\/gregtatum\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/gregtatum\/starred{\/owner}{\/repo}","site_admin":false,"login":"gregtatum","type":"User","id":1588648,"followers_url":"https:\/\/api.github.com\/users\/gregtatum\/followers","organizations_url":"https:\/\/api.github.com\/users\/gregtatum\/orgs"}},{"index":7,"author_association":"OWNER","body":"> Working example: http:\/\/gregtatum.com\/tmp\/three.js\/examples\/webgl_mesh_group.html#5000\n> Change the hash's number and refresh to try out different values.\n> \n> Meshes not in a group for comparison:  http:\/\/gregtatum.com\/tmp\/three.js\/examples\/webgl_mesh_group2.html\n\nIsn't the `MeshGroup` example rendering 5.000 elements versus 50.000 in the other?\n","created_at":"2014-12-29T07:30:52.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/5816#issuecomment-68237612","id":68237612,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/5816","node_id":"MDEyOklzc3VlQ29tbWVudDY4MjM3NjEy","updated_at":"2014-12-29T07:30:52.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/68237612","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":8,"author_association":"CONTRIBUTOR","body":"Yes, I hadn't updated it as I developed it further. It was apples to apples at one point, but I should have spent the time to update it before sending this in. Let me spend a little bit of time making those examples more robust with dropdowns for comparison to really show the difference between the various materials.\n","created_at":"2014-12-29T15:33:49.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/5816#issuecomment-68266940","id":68266940,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/5816","node_id":"MDEyOklzc3VlQ29tbWVudDY4MjY2OTQw","updated_at":"2014-12-29T15:33:49.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/68266940","user":{"following_url":"https:\/\/api.github.com\/users\/gregtatum\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/gregtatum\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1588648?v=4","url":"https:\/\/api.github.com\/users\/gregtatum","gists_url":"https:\/\/api.github.com\/users\/gregtatum\/gists{\/gist_id}","html_url":"https:\/\/github.com\/gregtatum","subscriptions_url":"https:\/\/api.github.com\/users\/gregtatum\/subscriptions","node_id":"MDQ6VXNlcjE1ODg2NDg=","repos_url":"https:\/\/api.github.com\/users\/gregtatum\/repos","received_events_url":"https:\/\/api.github.com\/users\/gregtatum\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/gregtatum\/starred{\/owner}{\/repo}","site_admin":false,"login":"gregtatum","type":"User","id":1588648,"followers_url":"https:\/\/api.github.com\/users\/gregtatum\/followers","organizations_url":"https:\/\/api.github.com\/users\/gregtatum\/orgs"}},{"index":9,"author_association":"CONTRIBUTOR","body":"http:\/\/gregtatum.com\/tmp\/three.js\/examples\/webgl_mesh_group.html\n\n@mrdoob I updated the example with selects to play around with the various combinations. I still need to fix WestLangley's points for it to be a more accurate comparison.\n\nUpdating the mesh's individual rotation quaternions from the Euler angles seems to be a pretty expensive operation so I flip flopped it every frame on both MeshGroup and no MeshGroup examples.\n","created_at":"2014-12-30T03:56:46.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/5816#issuecomment-68328115","id":68328115,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/5816","node_id":"MDEyOklzc3VlQ29tbWVudDY4MzI4MTE1","updated_at":"2014-12-30T03:56:46.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/68328115","user":{"following_url":"https:\/\/api.github.com\/users\/gregtatum\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/gregtatum\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1588648?v=4","url":"https:\/\/api.github.com\/users\/gregtatum","gists_url":"https:\/\/api.github.com\/users\/gregtatum\/gists{\/gist_id}","html_url":"https:\/\/github.com\/gregtatum","subscriptions_url":"https:\/\/api.github.com\/users\/gregtatum\/subscriptions","node_id":"MDQ6VXNlcjE1ODg2NDg=","repos_url":"https:\/\/api.github.com\/users\/gregtatum\/repos","received_events_url":"https:\/\/api.github.com\/users\/gregtatum\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/gregtatum\/starred{\/owner}{\/repo}","site_admin":false,"login":"gregtatum","type":"User","id":1588648,"followers_url":"https:\/\/api.github.com\/users\/gregtatum\/followers","organizations_url":"https:\/\/api.github.com\/users\/gregtatum\/orgs"}},{"index":10,"author_association":"CONTRIBUTOR","body":"Does it work with MeshFaceMaterial ?\n","created_at":"2015-03-01T10:55:38.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/5816#issuecomment-76591913","id":76591913,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/5816","node_id":"MDEyOklzc3VlQ29tbWVudDc2NTkxOTEz","updated_at":"2015-03-01T10:55:38.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/76591913","user":{"following_url":"https:\/\/api.github.com\/users\/Baccanno\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Baccanno\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/3664080?v=4","url":"https:\/\/api.github.com\/users\/Baccanno","gists_url":"https:\/\/api.github.com\/users\/Baccanno\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Baccanno","subscriptions_url":"https:\/\/api.github.com\/users\/Baccanno\/subscriptions","node_id":"MDQ6VXNlcjM2NjQwODA=","repos_url":"https:\/\/api.github.com\/users\/Baccanno\/repos","received_events_url":"https:\/\/api.github.com\/users\/Baccanno\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Baccanno\/starred{\/owner}{\/repo}","site_admin":false,"login":"Baccanno","type":"User","id":3664080,"followers_url":"https:\/\/api.github.com\/users\/Baccanno\/followers","organizations_url":"https:\/\/api.github.com\/users\/Baccanno\/orgs"}},{"index":11,"author_association":"NONE","body":"Sorry for the up but I was looking to do something similar and this implementation looks really cool to me and a great addition to Threejs as I beleive batching call is a recurrent problem.\n\nany reason it didnt made it to the threejs core ?\n","created_at":"2016-09-26T07:42:26.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/5816#issuecomment-249500620","id":249500620,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/5816","node_id":"MDEyOklzc3VlQ29tbWVudDI0OTUwMDYyMA==","updated_at":"2016-10-02T15:36:55.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/249500620","user":{"following_url":"https:\/\/api.github.com\/users\/Makio64\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Makio64\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/213351?v=4","url":"https:\/\/api.github.com\/users\/Makio64","gists_url":"https:\/\/api.github.com\/users\/Makio64\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Makio64","subscriptions_url":"https:\/\/api.github.com\/users\/Makio64\/subscriptions","node_id":"MDQ6VXNlcjIxMzM1MQ==","repos_url":"https:\/\/api.github.com\/users\/Makio64\/repos","received_events_url":"https:\/\/api.github.com\/users\/Makio64\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Makio64\/starred{\/owner}{\/repo}","site_admin":false,"login":"Makio64","type":"User","id":213351,"followers_url":"https:\/\/api.github.com\/users\/Makio64\/followers","organizations_url":"https:\/\/api.github.com\/users\/Makio64\/orgs"}}]}