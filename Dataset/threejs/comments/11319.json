{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"COLLABORATOR","body":"Try [this fiddle](http:\/\/jsfiddle.net\/uz0sdzLn\/), which uses `MeshBasicMaterial` and avoids the complications of the lighting.","created_at":"2017-05-11T16:25:14.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11319#issuecomment-300842924","id":300842924,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11319","node_id":"MDEyOklzc3VlQ29tbWVudDMwMDg0MjkyNA==","updated_at":"2017-05-11T16:25:14.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/300842924","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":1,"author_association":"NONE","body":"Thank's @WestLangley, for distilling the repro down to a more fundamental level by eliminating the lighting (which, as it happens, is irrelevant.)  It's too bad that you (perhaps accidentally) avoided the issue entirely, though by rendering the image with a 1:1 scale.\r\n\r\nHere's [my fork of your fiddle](http:\/\/jsfiddle.net\/4tm07ze9\/) that demonstrates the problem.  Simply reduce the size of the geometry a little bit which avoids the 1:1 transfer of texels to framebuffer pixels and induces some amount of linear filtering.\r\n\r\nThe problem comes when a sampler reads multiple pixels.  When a black pixel (0% intensity), encoded as (0,0,0) and a white pixel (100% intensity), encoded as (255,255,255) both give equal (50-50) contributions to a final sample, the naive implementation uses an incorrect, but computationally inexpensive, technique of linearly combining the encoded values.  In a nutshell, (0 + 255) \/ 2, gives 128 (after rounding).    But 128 represents an intensity of only about 22%.  The result is that everything gets too dark.  I concede that unless you're rendering content that people care about, the results are often unobjectionable.  But it **is** incorrect.\r\n\r\n> (((128\/255)+0.055)\/(1.055)^2.4) =~ 0.215861 =~ 22%\r\n\r\nOne correct approach is to convert the pixel values to their linear normalized values according to the sRGB to Linear formula, then compute an equal weighted linear combination (0 + 1) \/ 2 = 0.5.  Then convert that linear intensity to an appropriate sRGB encoding 0.5 => (188,188,188).\r\n\r\nThis extra computation is can be costly.  The sRGB formulae require exponentiation calculations. There's one required during the decoding of each texture pixel that is read, and one more is required when encoding the linear values as their final sRGB format in the output framebuffer.\r\n\r\nThose extra operations are simply omitted by most render engines to gain the speed boost.  Render engines instead do arithmetic directly on the encoded sRGB values.\r\n\r\nWhen the naive approach gives results that are close enough for the given application and the results are greatly improved frame-rates, then the trade-off is made.  It is made almost ubiquitously.  But any application that wants accurate color and intensity should be making the correct calculations.  In my example, I've tried to opt into the extra computation by asking three.js to respect the sRGB encodings and do the encoding-aware calculations to give me the correct colors and intensities, and I'm willing to trade off some speed to make sure the colors are correct and the quality is high.\r\n\r\nThat's what I assume would happen when you declare that a texture uses an sRGB encoding and then enable \"gamma correction\" -- to get the correct results rather than the fast approximation.\r\n\r\nSo how do I get *correct* results, as opposed to these \"fast but much too dark\" results?\r\n\r\nAgain, this is a piece of cake in OpenGL.  Just use SRGB textures and SRGB frame buffers and enable SRGB in the context and all is well.  But how do I get there from three.js?","created_at":"2017-05-11T18:19:02.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11319#issuecomment-300874473","id":300874473,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11319","node_id":"MDEyOklzc3VlQ29tbWVudDMwMDg3NDQ3Mw==","updated_at":"2017-05-11T18:19:02.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/300874473","user":{"following_url":"https:\/\/api.github.com\/users\/wyckster\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/wyckster\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/6098274?v=4","url":"https:\/\/api.github.com\/users\/wyckster","gists_url":"https:\/\/api.github.com\/users\/wyckster\/gists{\/gist_id}","html_url":"https:\/\/github.com\/wyckster","subscriptions_url":"https:\/\/api.github.com\/users\/wyckster\/subscriptions","node_id":"MDQ6VXNlcjYwOTgyNzQ=","repos_url":"https:\/\/api.github.com\/users\/wyckster\/repos","received_events_url":"https:\/\/api.github.com\/users\/wyckster\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/wyckster\/starred{\/owner}{\/repo}","site_admin":false,"login":"wyckster","type":"User","id":6098274,"followers_url":"https:\/\/api.github.com\/users\/wyckster\/followers","organizations_url":"https:\/\/api.github.com\/users\/wyckster\/orgs"}},{"index":2,"author_association":"COLLABORATOR","body":"Try [this fiddle](http:\/\/jsfiddle.net\/uz0sdzLn\/1\/) which is the same as my previous fiddle, except the box is being slowly translated.","created_at":"2017-05-11T19:31:29.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11319#issuecomment-300893605","id":300893605,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11319","node_id":"MDEyOklzc3VlQ29tbWVudDMwMDg5MzYwNQ==","updated_at":"2017-05-11T19:31:29.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/300893605","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":3,"author_association":"CONTRIBUTOR","body":"What's happening in the last fiddle? If i understand it correctly, you're saying \"yes, this is an issue\"?  I'm a bit confused with the 188 value, but the issue in the last fiddle is not how dark is the checker pattern, but  how much it changes intensity when the plane is moving?\r\n\r\nWhatever the case may be, https:\/\/github.com\/mrdoob\/three.js\/pull\/10791 would allow you to inject your own glsl logic into existing material templates, and do your own correction the way you see fit without hacking the library. ","created_at":"2017-05-12T00:29:42.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11319#issuecomment-300951937","id":300951937,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11319","node_id":"MDEyOklzc3VlQ29tbWVudDMwMDk1MTkzNw==","updated_at":"2017-05-12T00:34:11.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/300951937","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":4,"author_association":"NONE","body":"OK, @WestLangley that last fiddle also demonstrates the problem.  Translating the image with a sub-pixel offset, you induced linear filtering resulting in combinations of black and white pixels.  That also successfully reproduces the problem I'm complaining about.  Thanks for the additional repro..","created_at":"2017-05-12T13:06:40.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11319#issuecomment-301071299","id":301071299,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11319","node_id":"MDEyOklzc3VlQ29tbWVudDMwMTA3MTI5OQ==","updated_at":"2017-05-12T13:06:40.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/301071299","user":{"following_url":"https:\/\/api.github.com\/users\/wyckster\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/wyckster\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/6098274?v=4","url":"https:\/\/api.github.com\/users\/wyckster","gists_url":"https:\/\/api.github.com\/users\/wyckster\/gists{\/gist_id}","html_url":"https:\/\/github.com\/wyckster","subscriptions_url":"https:\/\/api.github.com\/users\/wyckster\/subscriptions","node_id":"MDQ6VXNlcjYwOTgyNzQ=","repos_url":"https:\/\/api.github.com\/users\/wyckster\/repos","received_events_url":"https:\/\/api.github.com\/users\/wyckster\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/wyckster\/starred{\/owner}{\/repo}","site_admin":false,"login":"wyckster","type":"User","id":6098274,"followers_url":"https:\/\/api.github.com\/users\/wyckster\/followers","organizations_url":"https:\/\/api.github.com\/users\/wyckster\/orgs"}},{"index":5,"author_association":"CONTRIBUTOR","body":"This issue has nothing to do with Three.js or Gamma.\r\nIt's about image pixels interpolation.\r\nJust rescale that 512x512 image to 256x256 using any image editor you want (including Photoshop).\r\nYou'll get a \"wrong\" (darker) result.","created_at":"2017-05-12T17:17:48.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11319#issuecomment-301135083","id":301135083,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11319","node_id":"MDEyOklzc3VlQ29tbWVudDMwMTEzNTA4Mw==","updated_at":"2017-05-12T17:18:51.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/301135083","user":{"following_url":"https:\/\/api.github.com\/users\/RemusMar\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/RemusMar\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/11772787?v=4","url":"https:\/\/api.github.com\/users\/RemusMar","gists_url":"https:\/\/api.github.com\/users\/RemusMar\/gists{\/gist_id}","html_url":"https:\/\/github.com\/RemusMar","subscriptions_url":"https:\/\/api.github.com\/users\/RemusMar\/subscriptions","node_id":"MDQ6VXNlcjExNzcyNzg3","repos_url":"https:\/\/api.github.com\/users\/RemusMar\/repos","received_events_url":"https:\/\/api.github.com\/users\/RemusMar\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/RemusMar\/starred{\/owner}{\/repo}","site_admin":false,"login":"RemusMar","type":"User","id":11772787,"followers_url":"https:\/\/api.github.com\/users\/RemusMar\/followers","organizations_url":"https:\/\/api.github.com\/users\/RemusMar\/orgs"}},{"index":6,"author_association":"CONTRIBUTOR","body":"\"Just *rescale*\" is ambigous, you have a few different interpolation modes, which will thus alter the level of \"wrong\" (darker).","created_at":"2017-05-12T17:25:17.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11319#issuecomment-301136833","id":301136833,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11319","node_id":"MDEyOklzc3VlQ29tbWVudDMwMTEzNjgzMw==","updated_at":"2017-05-12T17:25:17.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/301136833","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":7,"author_association":"NONE","body":"@pailhead, allow me to try to explain where 188 comes from.  And @RemusMar, it absolutely has everything to do with gamma.\r\n\r\nTL;DR: 188 is the sRGB value that represents a 50% gray color.  And by 50% gray, I mean the color that is just as bright (on average) as an area that is half black and half white, like a checkerboard with tiny squares.\r\n\r\nWith sRGB, (and just about any typical 8-bit color format actually) the values of 0 through 255 do not represent linear intensity (\"brightness\") of the pixels.  In other words, 128 is not \"half\" as bright as 255 (and not even just because of rounding - it's not even close).  The relationship between coded pixel values and brightness follows a \"gamma curve\", (It's roughly exponential, where the ratio of the intensities of adjacent codes is approximately the same.  The exact relationship between linear intensity and the srgb encoded value is given by a curve specified in two segments, one linear and one exponential:\r\n\r\n> if linear <= 0.0031308 then srgb := 12.92 linear\r\n> if linear > 0.0031308 then srgb := 1.055 * linear^(1\/2.4) - 0.055\r\n\r\nIf you plug in a linear intensity of 0.5 (half) you get (1.055*0.5^(1\/2.4))-0.055 = 0.735358, which is about 187.516 in 8-bit sRGB, and when you round it off, you should be using 188 as a representation for 50% intensity.\r\n\r\nIt works, as the sample image I provided uses this encoding and the intensity of the solid color patch of (188,188,188) is the same average intensity as an area that is half black (0,0,0) and half white (255,255,255): the checkered pixels area of my example image.\r\n\r\nIf you instead incorrectly tried to represent 50% grey with (128,128,128), you'd find that the apparent color is much too dark compared to a checkerboard that is half white and half black.  That's because, if you invert the equations, you'll find that 128 actually is the encoding for a linear intensity of only about 22%.\r\n\r\nThe reverse equations are as follows:\r\n> if srgb <= 0.04045 then linear := srgb \/ 12.92\r\n> if srgb > 0.04045 then linear := ((srgb + 0.055)\/1.055)^2.4\r\n\r\nAnd therefore, (128,128,128) is only approximately 22% linear intensity (after rounding).\r\n> (((128\/255)+0.055)\/(1.055)^2.4) =~ 0.215861.\r\n\r\nDoes that help explain it?\r\n\r\nI suggest reading the Wikipedia articles about [sRGB](https:\/\/en.wikipedia.org\/wiki\/SRGB) or [gamma correction](https:\/\/en.wikipedia.org\/wiki\/Gamma_correction).","created_at":"2017-05-12T17:25:29.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11319#issuecomment-301136874","id":301136874,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11319","node_id":"MDEyOklzc3VlQ29tbWVudDMwMTEzNjg3NA==","updated_at":"2017-05-12T17:35:07.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/301136874","user":{"following_url":"https:\/\/api.github.com\/users\/wyckster\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/wyckster\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/6098274?v=4","url":"https:\/\/api.github.com\/users\/wyckster","gists_url":"https:\/\/api.github.com\/users\/wyckster\/gists{\/gist_id}","html_url":"https:\/\/github.com\/wyckster","subscriptions_url":"https:\/\/api.github.com\/users\/wyckster\/subscriptions","node_id":"MDQ6VXNlcjYwOTgyNzQ=","repos_url":"https:\/\/api.github.com\/users\/wyckster\/repos","received_events_url":"https:\/\/api.github.com\/users\/wyckster\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/wyckster\/starred{\/owner}{\/repo}","site_admin":false,"login":"wyckster","type":"User","id":6098274,"followers_url":"https:\/\/api.github.com\/users\/wyckster\/followers","organizations_url":"https:\/\/api.github.com\/users\/wyckster\/orgs"}},{"index":8,"author_association":"NONE","body":"@RemusMar \r\n>This issue has nothing to do wuth Three.js or Gamma.\r\n>It's about image pixels interplation.\r\n>Just rescale that 512x512 image to 256x256 using any image editor you want (including Photoshop).\r\n>You'll get a \"wrong\" (darker) result.\r\n\r\nThis is not strictly true.  If you use Photoshop and convert your image to 32 bits\/channel first (`Image > Mode > 32 Bits\/channel`), then when you resize the image, you'll see the \"correct\" linear treatment of color.","created_at":"2017-05-12T17:29:39.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11319#issuecomment-301137813","id":301137813,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11319","node_id":"MDEyOklzc3VlQ29tbWVudDMwMTEzNzgxMw==","updated_at":"2017-05-12T17:30:04.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/301137813","user":{"following_url":"https:\/\/api.github.com\/users\/wyckster\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/wyckster\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/6098274?v=4","url":"https:\/\/api.github.com\/users\/wyckster","gists_url":"https:\/\/api.github.com\/users\/wyckster\/gists{\/gist_id}","html_url":"https:\/\/github.com\/wyckster","subscriptions_url":"https:\/\/api.github.com\/users\/wyckster\/subscriptions","node_id":"MDQ6VXNlcjYwOTgyNzQ=","repos_url":"https:\/\/api.github.com\/users\/wyckster\/repos","received_events_url":"https:\/\/api.github.com\/users\/wyckster\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/wyckster\/starred{\/owner}{\/repo}","site_admin":false,"login":"wyckster","type":"User","id":6098274,"followers_url":"https:\/\/api.github.com\/users\/wyckster\/followers","organizations_url":"https:\/\/api.github.com\/users\/wyckster\/orgs"}},{"index":9,"author_association":"COLLABORATOR","body":"Beware of the many factors that can lead to these artifacts: the resolution of the image, the resolution of the drawing buffer, the texture filter modes, the use (or not) of mipmaps, the uv-alignment, the device pixel ratio, the resolution of the canvas, and in general, how the drawing buffer is composted with the canvas by the browser. These artifacts can occur regardless of the color space of the texture.\r\n\r\nTry [this fiddle](http:\/\/jsfiddle.net\/uz0sdzLn\/2\/), which is the same as my last fiddle, except gamma corrections have been commented out.\r\n\r\n","created_at":"2017-05-12T17:55:03.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11319#issuecomment-301143838","id":301143838,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11319","node_id":"MDEyOklzc3VlQ29tbWVudDMwMTE0MzgzOA==","updated_at":"2017-05-12T17:55:03.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/301143838","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":10,"author_association":"NONE","body":"@WestLangley, _of course_ they occur when the gamma correction code is commented out.  The issue I'm reporting is that gamma correction is the mechanism that is **supposed to fix it**, but it currently doesn't.  So your last fiddle would **not** qualify as a repro of my issue.\r\n\r\nIn OpenGL, to get a gamma-correct pipeline, we would utilize GL_EXT_texture_sRGB for correct samples from textures (conversion from sRGB to linear upon sampling), and GL_ARB_framebuffer_sRGB for correct writes to the frame buffer (conversions from linear to sRGB upon writing and blending).\r\n\r\nNot 100% sure how to take advantage of this within the three.js framework.  I'm assuming tagging the texture as `THREE.sRGBEncoding` is an essential part of it... what else needs to be done?","created_at":"2017-05-12T19:21:11.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11319#issuecomment-301163757","id":301163757,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11319","node_id":"MDEyOklzc3VlQ29tbWVudDMwMTE2Mzc1Nw==","updated_at":"2017-05-12T19:21:11.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/301163757","user":{"following_url":"https:\/\/api.github.com\/users\/wyckster\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/wyckster\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/6098274?v=4","url":"https:\/\/api.github.com\/users\/wyckster","gists_url":"https:\/\/api.github.com\/users\/wyckster\/gists{\/gist_id}","html_url":"https:\/\/github.com\/wyckster","subscriptions_url":"https:\/\/api.github.com\/users\/wyckster\/subscriptions","node_id":"MDQ6VXNlcjYwOTgyNzQ=","repos_url":"https:\/\/api.github.com\/users\/wyckster\/repos","received_events_url":"https:\/\/api.github.com\/users\/wyckster\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/wyckster\/starred{\/owner}{\/repo}","site_admin":false,"login":"wyckster","type":"User","id":6098274,"followers_url":"https:\/\/api.github.com\/users\/wyckster\/followers","organizations_url":"https:\/\/api.github.com\/users\/wyckster\/orgs"}},{"index":11,"author_association":"CONTRIBUTOR","body":"Any chance you could post the same example done with openGL and the extensions?","created_at":"2017-05-13T02:25:06.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11319#issuecomment-301219686","id":301219686,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11319","node_id":"MDEyOklzc3VlQ29tbWVudDMwMTIxOTY4Ng==","updated_at":"2017-05-13T02:25:06.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/301219686","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":12,"author_association":"CONTRIBUTOR","body":"Here's another [fiddle](http:\/\/jsfiddle.net\/npeyb1md\/1\/) with a procedural texture. ","created_at":"2017-05-13T03:35:05.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11319#issuecomment-301222451","id":301222451,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11319","node_id":"MDEyOklzc3VlQ29tbWVudDMwMTIyMjQ1MQ==","updated_at":"2017-05-13T03:36:55.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/301222451","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":13,"author_association":"CONTRIBUTOR","body":"@wyckster \r\n\r\n> If you use Photoshop and convert your image to 32 bits\/channel first (Image > Mode > 32 Bits\/channel), \r\n> then when you resize the image, you'll see the \"correct\" linear treatment of color.\r\n\r\n1) why should I do that if the image has 8 bit per channel (24 bits per pixel, alpha is not even required) ?\r\n2) three.js is about 3D and runtime. Do you expect Photoshop results in Three.js ???","created_at":"2017-05-13T06:59:57.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11319#issuecomment-301230284","id":301230284,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11319","node_id":"MDEyOklzc3VlQ29tbWVudDMwMTIzMDI4NA==","updated_at":"2017-05-13T06:59:57.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/301230284","user":{"following_url":"https:\/\/api.github.com\/users\/RemusMar\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/RemusMar\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/11772787?v=4","url":"https:\/\/api.github.com\/users\/RemusMar","gists_url":"https:\/\/api.github.com\/users\/RemusMar\/gists{\/gist_id}","html_url":"https:\/\/github.com\/RemusMar","subscriptions_url":"https:\/\/api.github.com\/users\/RemusMar\/subscriptions","node_id":"MDQ6VXNlcjExNzcyNzg3","repos_url":"https:\/\/api.github.com\/users\/RemusMar\/repos","received_events_url":"https:\/\/api.github.com\/users\/RemusMar\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/RemusMar\/starred{\/owner}{\/repo}","site_admin":false,"login":"RemusMar","type":"User","id":11772787,"followers_url":"https:\/\/api.github.com\/users\/RemusMar\/followers","organizations_url":"https:\/\/api.github.com\/users\/RemusMar\/orgs"}},{"index":14,"author_association":"CONTRIBUTOR","body":"2. Yeah if you program thee to do the same thing as PS. What is the point you are trying to make exactly?","created_at":"2017-05-13T19:46:29.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11319#issuecomment-301270673","id":301270673,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11319","node_id":"MDEyOklzc3VlQ29tbWVudDMwMTI3MDY3Mw==","updated_at":"2017-05-13T19:46:29.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/301270673","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":15,"author_association":"CONTRIBUTOR","body":"@pailhead \r\n> Yeah if you program thee to do the same thing as PS.\r\n> What is the point you are trying to make exactly?\r\n\r\nI thought it's obvious ...\r\nPhotoShop is not about runtime.\r\n","created_at":"2017-05-14T06:38:05.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11319#issuecomment-301294235","id":301294235,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11319","node_id":"MDEyOklzc3VlQ29tbWVudDMwMTI5NDIzNQ==","updated_at":"2017-05-14T06:38:05.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/301294235","user":{"following_url":"https:\/\/api.github.com\/users\/RemusMar\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/RemusMar\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/11772787?v=4","url":"https:\/\/api.github.com\/users\/RemusMar","gists_url":"https:\/\/api.github.com\/users\/RemusMar\/gists{\/gist_id}","html_url":"https:\/\/github.com\/RemusMar","subscriptions_url":"https:\/\/api.github.com\/users\/RemusMar\/subscriptions","node_id":"MDQ6VXNlcjExNzcyNzg3","repos_url":"https:\/\/api.github.com\/users\/RemusMar\/repos","received_events_url":"https:\/\/api.github.com\/users\/RemusMar\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/RemusMar\/starred{\/owner}{\/repo}","site_admin":false,"login":"RemusMar","type":"User","id":11772787,"followers_url":"https:\/\/api.github.com\/users\/RemusMar\/followers","organizations_url":"https:\/\/api.github.com\/users\/RemusMar\/orgs"}},{"index":16,"author_association":"CONTRIBUTOR","body":"I still don't understand how about using slightly more complex sentences and a few more of them?","created_at":"2017-05-14T17:13:43.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11319#issuecomment-301326262","id":301326262,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11319","node_id":"MDEyOklzc3VlQ29tbWVudDMwMTMyNjI2Mg==","updated_at":"2017-05-14T17:13:43.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/301326262","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":17,"author_association":"NONE","body":"@RemusMar, thanks for your reply.  Your question is \"why should I do that if the image has 8 bit per channel (24 bits per pixel, alpha is not even required) ?\"\r\n\r\nI wish I could have a conversation with you to try to get more familiar with what you do or do not understand about gamma curves.  I'm not sure if you want me to explain it all here or not.  I'm happy to explain everything, but I suspect you want a shorter response.  So here's the simplest way I can describe it.\r\n\r\n**The side effect of converting your image to 32 bits per channel is that now it has enough headroom to perform linear arithmetic on the pixels without a loss of precision -- so it does.**\r\n\r\nThere's not enough fidelity to store linear data at 8-bits per channel.  The blacks would have highly visible bands and most of your code points would be used to represent the same bright levels of almost white.  So perhaps counter-intuitively, when operating in 8-bits per channel, to maintain fidelity, you have to convert to linear internally at high-precision, then perform any arithmetic, then convert back to 8-bit for storage in the 8-bits-per-channel framebuffer.  That's remarkably slow because of the exponentiation operation required, so, when dealing with 8-bit data, most graphics engines just do naive arithmetic on the 8-bits reinterpreting them as if they were actually linear (they're not) and the results are (for most cases) \"good enough\".\r\n\r\nIf you want high precision to do linear arithmetic then you just sacrifice speed and use more bits per channel.\r\n\r\nThe exception to all this is, of course, when dealing with GPUs that have hardware dedicated to performing the conversion between sRGB and Linear.  In that case, it's easy to store 8-bit sRGB data in the buffers, but convert them to a high-precision linear format internally when performing arithmetic on the pixel values.  We rely on hardware to speed up the slow stuff.  Sadly, the \"good enough\" pipeline is also faster in hardware, and people still prefer it to get high fps rather than more accurate color, depending on the application.\r\n\r\nYour second question was, \"Do you expect Photoshop results in Three.js ???\".\r\n\r\nNot exactly.  But sort of.  I expect that I should get a reasonable high-level and convenient abstraction of the WebGL API.  WebGL accommodates [sRGB](https:\/\/www.khronos.org\/registry\/webgl\/extensions\/EXT_sRGB\/) and I expect that I should be able to make use of it somehow.  Presumably that's the direction that things are going when we allow specifying that a texture is sRGB encoded, and that we want gamma correction enabled.\r\n\r\nAll I was mentioning with Photoshop is that both pipelines are available, but you have to choose between them by selecting your buffer format.   1) In 8-bits-per-channel formats, you get the high-speed, \"good enough\" operations that sacrifice correct treatment of color to gain speed.  2) In 32-bits-per-channel format you get the low-speed but high precision pipeline that performs linear operations.  In Photoshop, you simply convert once to an 8-bits-per-channel format when saving your final results.  \r\n\r\nThis would be the same approach as using a floating-point render target in GL.  You can't rasterize a floating point format to the video generator of your display, you have to convert to 8-bits-per-channel to display the information in your floating-point format.","created_at":"2017-05-15T02:43:29.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11319#issuecomment-301363179","id":301363179,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11319","node_id":"MDEyOklzc3VlQ29tbWVudDMwMTM2MzE3OQ==","updated_at":"2017-05-15T02:45:54.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/301363179","user":{"following_url":"https:\/\/api.github.com\/users\/wyckster\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/wyckster\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/6098274?v=4","url":"https:\/\/api.github.com\/users\/wyckster","gists_url":"https:\/\/api.github.com\/users\/wyckster\/gists{\/gist_id}","html_url":"https:\/\/github.com\/wyckster","subscriptions_url":"https:\/\/api.github.com\/users\/wyckster\/subscriptions","node_id":"MDQ6VXNlcjYwOTgyNzQ=","repos_url":"https:\/\/api.github.com\/users\/wyckster\/repos","received_events_url":"https:\/\/api.github.com\/users\/wyckster\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/wyckster\/starred{\/owner}{\/repo}","site_admin":false,"login":"wyckster","type":"User","id":6098274,"followers_url":"https:\/\/api.github.com\/users\/wyckster\/followers","organizations_url":"https:\/\/api.github.com\/users\/wyckster\/orgs"}},{"index":18,"author_association":"CONTRIBUTOR","body":"@wyckster \r\n>  I expect that I should get a reasonable high-level and convenient abstraction of the WebGL API.\r\n\r\nI'm not sure if it fits with the purpose of the Three.js library:\r\nlightweight,easy to use and running as fast as possible","created_at":"2017-05-15T05:27:34.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11319#issuecomment-301379524","id":301379524,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11319","node_id":"MDEyOklzc3VlQ29tbWVudDMwMTM3OTUyNA==","updated_at":"2017-05-15T05:27:34.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/301379524","user":{"following_url":"https:\/\/api.github.com\/users\/RemusMar\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/RemusMar\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/11772787?v=4","url":"https:\/\/api.github.com\/users\/RemusMar","gists_url":"https:\/\/api.github.com\/users\/RemusMar\/gists{\/gist_id}","html_url":"https:\/\/github.com\/RemusMar","subscriptions_url":"https:\/\/api.github.com\/users\/RemusMar\/subscriptions","node_id":"MDQ6VXNlcjExNzcyNzg3","repos_url":"https:\/\/api.github.com\/users\/RemusMar\/repos","received_events_url":"https:\/\/api.github.com\/users\/RemusMar\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/RemusMar\/starred{\/owner}{\/repo}","site_admin":false,"login":"RemusMar","type":"User","id":11772787,"followers_url":"https:\/\/api.github.com\/users\/RemusMar\/followers","organizations_url":"https:\/\/api.github.com\/users\/RemusMar\/orgs"}},{"index":19,"author_association":"NONE","body":"Should we ditch SRGBEncoding then?  And simply say, \"not supported - use raw WebGL or some other library instead?\"","created_at":"2017-05-15T15:23:06.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11319#issuecomment-301509138","id":301509138,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11319","node_id":"MDEyOklzc3VlQ29tbWVudDMwMTUwOTEzOA==","updated_at":"2017-05-15T15:23:06.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/301509138","user":{"following_url":"https:\/\/api.github.com\/users\/wyckster\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/wyckster\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/6098274?v=4","url":"https:\/\/api.github.com\/users\/wyckster","gists_url":"https:\/\/api.github.com\/users\/wyckster\/gists{\/gist_id}","html_url":"https:\/\/github.com\/wyckster","subscriptions_url":"https:\/\/api.github.com\/users\/wyckster\/subscriptions","node_id":"MDQ6VXNlcjYwOTgyNzQ=","repos_url":"https:\/\/api.github.com\/users\/wyckster\/repos","received_events_url":"https:\/\/api.github.com\/users\/wyckster\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/wyckster\/starred{\/owner}{\/repo}","site_admin":false,"login":"wyckster","type":"User","id":6098274,"followers_url":"https:\/\/api.github.com\/users\/wyckster\/followers","organizations_url":"https:\/\/api.github.com\/users\/wyckster\/orgs"}},{"index":20,"author_association":"OWNER","body":"\/ping @bhouston ","created_at":"2017-05-25T23:46:35.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11319#issuecomment-304153800","id":304153800,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11319","node_id":"MDEyOklzc3VlQ29tbWVudDMwNDE1MzgwMA==","updated_at":"2017-05-25T23:46:35.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/304153800","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":21,"author_association":"NONE","body":"I would be very interested to hear how sRGB is currently being handled and how THREE wants to handle it.  Getting renders to look higher quality requires correct srgb handling.  I've been trying to figure out how THREE handles the framebuffer specifically - what the correct wayto enable the EXT_sRGB webgl extension, if the standard shader supports it, etc.  The documentation is completely silent (as far as I can tell) on the subject.","created_at":"2017-12-11T16:03:53.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11319#issuecomment-350769034","id":350769034,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11319","node_id":"MDEyOklzc3VlQ29tbWVudDM1MDc2OTAzNA==","updated_at":"2017-12-11T16:04:20.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/350769034","user":{"following_url":"https:\/\/api.github.com\/users\/schubboy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/schubboy\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/125443?v=4","url":"https:\/\/api.github.com\/users\/schubboy","gists_url":"https:\/\/api.github.com\/users\/schubboy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/schubboy","subscriptions_url":"https:\/\/api.github.com\/users\/schubboy\/subscriptions","node_id":"MDQ6VXNlcjEyNTQ0Mw==","repos_url":"https:\/\/api.github.com\/users\/schubboy\/repos","received_events_url":"https:\/\/api.github.com\/users\/schubboy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/schubboy\/starred{\/owner}{\/repo}","site_admin":false,"login":"schubboy","type":"User","id":125443,"followers_url":"https:\/\/api.github.com\/users\/schubboy\/followers","organizations_url":"https:\/\/api.github.com\/users\/schubboy\/orgs"}},{"index":22,"author_association":"NONE","body":"@wyckster \r\n\r\nhttp:\/\/jsfiddle.net\/uz0sdzLn\/32\/\r\nis this one correct?\r\n\r\nPlease correct me if it's not right below:\r\n\r\nfor speed\/storage reason, usually images are saved as 8bit format but in this format the color is actually not linear, so here comes gamma correction.\r\nfor an engine, it must process color in linear space for e.g. mixing, lighting etc purposes in order to keep a accurate color value so it usually needs to decode some encoded space into linear first, \r\nand for the final output framebuffer, we have to correct the color with gamma curve for the verious of different displays as they have different constract\/brightness settings which causes the grey looks different by eyes (although normally default factor is 2.2).\r\n\r\nin three.js\r\nthe gammaInput \/ gammaOutput are only for gamma premultipled textures, which means you cannot specify encoding for your texture otherwise the engine won't do gamma correction by the gammaFactor value.\r\nwhen you turn on renderer.gammaInput = true (if texture.encoding not set or set as LinearEncoding), the engine will consider that your texture are gamma premultipled, otherwise the engine will use what encoding you set for your texture\r\nso in these two situations:\r\n\r\n1, gammaInput = true\r\nin PS create a pic as you discribled, and finally CTRL+L to open gamma correction panel, input 0.735358 into the middle inputbox then save your pic, and then in three.js do gammaInput\/Ouput=true with gammaFactor = 2.2 (don't set encoding for texture);\r\nactually this way the shader processes these steps:\r\n a> gammatolinear -> pow(pixel.rgb, gammaFactor)\r\n b> lineartogamma -> pow(pixel.rgb, 1 \/ gammaFactor)\r\n\r\n2, texture.encoding = sRGBEncoding\r\ncreate pic in PS as what you discribed without gamma correction and save your pic,\r\nthen in threejs set gammaInput = false(default) and gammaOutput = false(default)\r\nthis way the shader does:\r\n a> srgbtolinear -> \r\n      mix(\r\n           pow(pixel.rgb * 0.9478672986 + 0.0521327014, 2.4),\r\n           pixel.rgb * 0.0773993808,\r\n           pixel.rgb <= 0.04045 ? 1 : 0\r\n      );\r\n  b> lineartosrgb ->\r\n      mix(\r\n           pow(pixel.rgb, 0.41666 * 1.055 - 0.055),\r\n           pixel.rgb * 12.92,\r\n           pixel.rgb <= 0.0031308 ? 1 : 0\r\n      );\r\n\r\nso conclusions:\r\nrenderer.gammaInput \/ output \/ texture.encoding are only for decoding a spece into linear space then do lighting, mixing whatever and then finally encode it back to what encoding you specified when output.\r\nif you wanna do myMap.texture.encoding = sRGBEncoding  and output things with gamma correction, I think there is no way in three.js for now(till r91), or write your own shader (post effect maybe) to add gamma correction with a factor parameter.\r\n","created_at":"2018-03-20T12:23:34.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11319#issuecomment-374578397","id":374578397,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11319","node_id":"MDEyOklzc3VlQ29tbWVudDM3NDU3ODM5Nw==","updated_at":"2018-03-21T03:45:37.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/374578397","user":{"following_url":"https:\/\/api.github.com\/users\/jcyuan\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/jcyuan\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/850854?v=4","url":"https:\/\/api.github.com\/users\/jcyuan","gists_url":"https:\/\/api.github.com\/users\/jcyuan\/gists{\/gist_id}","html_url":"https:\/\/github.com\/jcyuan","subscriptions_url":"https:\/\/api.github.com\/users\/jcyuan\/subscriptions","node_id":"MDQ6VXNlcjg1MDg1NA==","repos_url":"https:\/\/api.github.com\/users\/jcyuan\/repos","received_events_url":"https:\/\/api.github.com\/users\/jcyuan\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/jcyuan\/starred{\/owner}{\/repo}","site_admin":false,"login":"jcyuan","type":"User","id":850854,"followers_url":"https:\/\/api.github.com\/users\/jcyuan\/followers","organizations_url":"https:\/\/api.github.com\/users\/jcyuan\/orgs"}},{"index":23,"author_association":"NONE","body":"just found an issue, it seems that @WestLangley wants to add these new features. see #11337.","created_at":"2018-03-20T12:50:00.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11319#issuecomment-374585488","id":374585488,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11319","node_id":"MDEyOklzc3VlQ29tbWVudDM3NDU4NTQ4OA==","updated_at":"2018-03-20T12:50:00.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/374585488","user":{"following_url":"https:\/\/api.github.com\/users\/jcyuan\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/jcyuan\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/850854?v=4","url":"https:\/\/api.github.com\/users\/jcyuan","gists_url":"https:\/\/api.github.com\/users\/jcyuan\/gists{\/gist_id}","html_url":"https:\/\/github.com\/jcyuan","subscriptions_url":"https:\/\/api.github.com\/users\/jcyuan\/subscriptions","node_id":"MDQ6VXNlcjg1MDg1NA==","repos_url":"https:\/\/api.github.com\/users\/jcyuan\/repos","received_events_url":"https:\/\/api.github.com\/users\/jcyuan\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/jcyuan\/starred{\/owner}{\/repo}","site_admin":false,"login":"jcyuan","type":"User","id":850854,"followers_url":"https:\/\/api.github.com\/users\/jcyuan\/followers","organizations_url":"https:\/\/api.github.com\/users\/jcyuan\/orgs"}}]}