{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"CONTRIBUTOR","body":"See https:\/\/github.com\/mrdoob\/three.js\/pull\/14174\r\n\r\nAre there any canonical gltfs with this feature (extension?)?\r\n\r\nAny thoughts on the extension part of this spec? If it's an extension for gltf, and gltf is one of the formats that three works with, how would you be implementing this? Could it extend to other textures? Ie. from the answer on SO, could we change how repeat works so it's more in line with this extension?","created_at":"2019-01-01T19:51:51.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/15486#issuecomment-450752912","id":450752912,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/15486","node_id":"MDEyOklzc3VlQ29tbWVudDQ1MDc1MjkxMg==","updated_at":"2019-01-01T23:22:38.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/450752912","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":1,"author_association":"COLLABORATOR","body":"ThreeJS supports a strict subset of the features used by this extension \u2014 one transform per material, rather than one transform per texture. So in terms of implementing _export_, there's no problem and minimal work required, just the serialization in GLTFExporter. \r\n\r\nWe've implemented _loading_ the extension already, which (due to the subset supported) does have the limitations mentioned under [_GLTFLoader \u2022 Extensions_](https:\/\/threejs.org\/docs\/#examples\/loaders\/GLTFLoader), which you've written about elsewhere.\r\n\r\n> Are there any canonical gltfs with this feature (extension?)?\r\n\r\nThere are one or two buried in https:\/\/github.com\/KhronosGroup\/glTF\/pull\/1015, or the latest Blender exporter and Adobe Dimension 2.0 also support it, I think.\r\n\r\n> If it's an extension for gltf, and gltf is one of the formats that three works with, how would you be implementing this?\r\n\r\nThink of extensions as features of glTF that aren't yet ubiquitous, rather than as a new format or something. We list the supported extensions in the GLTFExporter\/Loader documentation, other than that it's just bit of additional JSON to read\/write when needed.\r\n\r\n> Could it extend to other textures? \r\n\r\nI'm not sure what this means?\r\n\r\n> Ie. from the answer on SO, could we change how repeat works so it's more in line with this extension?\r\n\r\nI'd like to see threejs support per-texture transforms eventually, but it's not necessary for implementing export. I don't think anything in three.js core needs to change for adding this feature to GLTFExporter.","created_at":"2019-01-03T01:01:14.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/15486#issuecomment-451031858","id":451031858,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/15486","node_id":"MDEyOklzc3VlQ29tbWVudDQ1MTAzMTg1OA==","updated_at":"2019-01-03T01:01:14.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/451031858","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":2,"author_association":"COLLABORATOR","body":"> I'd like to see threejs support per-texture transforms eventually\r\n\r\nDon't we already have some level of support, with [texture.matrix](https:\/\/threejs.org\/docs\/#api\/en\/textures\/Texture.matrix)? Rotation, translate (offset) and moving the center of rotation are supported.","created_at":"2019-01-03T02:57:03.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/15486#issuecomment-451045357","id":451045357,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/15486","node_id":"MDEyOklzc3VlQ29tbWVudDQ1MTA0NTM1Nw==","updated_at":"2019-01-03T02:57:03.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/451045357","user":{"following_url":"https:\/\/api.github.com\/users\/looeee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/looeee\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/5307958?v=4","url":"https:\/\/api.github.com\/users\/looeee","gists_url":"https:\/\/api.github.com\/users\/looeee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/looeee","subscriptions_url":"https:\/\/api.github.com\/users\/looeee\/subscriptions","node_id":"MDQ6VXNlcjUzMDc5NTg=","repos_url":"https:\/\/api.github.com\/users\/looeee\/repos","received_events_url":"https:\/\/api.github.com\/users\/looeee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/looeee\/starred{\/owner}{\/repo}","site_admin":false,"login":"looeee","type":"User","id":5307958,"followers_url":"https:\/\/api.github.com\/users\/looeee\/followers","organizations_url":"https:\/\/api.github.com\/users\/looeee\/orgs"}},{"index":3,"author_association":"CONTRIBUTOR","body":"\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nSorry i realized i wrote in a confusing manner. \r\n\r\n>I'm not sure what this means?\r\n\r\nYou got it with this:\r\n\r\n>I'd like to see threejs support per-texture transforms eventually\r\n\r\nAlso:\r\n\r\n>Don't we already have some level of support, with texture.matrix?\r\n\r\nWe do and we don't, i think that three is somewhere in between, because while we expose this property, it's being consumed in a certain way. I was hoping if we could revisit the `Texture` class itself. https:\/\/github.com\/mrdoob\/three.js\/issues\/12788\r\n\r\n\r\n\r\n\r\n","created_at":"2019-01-03T03:34:28.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/15486#issuecomment-451048930","id":451048930,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/15486","node_id":"MDEyOklzc3VlQ29tbWVudDQ1MTA0ODkzMA==","updated_at":"2019-01-03T03:34:28.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/451048930","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":4,"author_association":"COLLABORATOR","body":"> Don't we already have some level of support, with texture.matrix?\r\n\r\nMainly the limitation is that all textures on a material must share the same transform, despite its being a per-texture property in the API. There have been PRs to fix it, but they were a bit too complex I think. Not too high-priority yet; the export thing mentioned on SO can be solved now regardless.","created_at":"2019-01-03T04:40:36.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/15486#issuecomment-451054716","id":451054716,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/15486","node_id":"MDEyOklzc3VlQ29tbWVudDQ1MTA1NDcxNg==","updated_at":"2019-01-03T04:40:53.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/451054716","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":5,"author_association":"CONTRIBUTOR","body":"It would be nice to track all those issues. Yeah the exporter should not be blocked especially if its simple, but i think the `texture.matrix` or rather the `texture` part there is worth the revisit. The way the material chooses which of the transforms to use seems clunky and more of a glitch then a feature, ie. i don't think it allows for much (very similar as if it were `material.textureMatrix`) and gets in the way of things like this. ","created_at":"2019-01-03T05:13:31.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/15486#issuecomment-451057360","id":451057360,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/15486","node_id":"MDEyOklzc3VlQ29tbWVudDQ1MTA1NzM2MA==","updated_at":"2019-01-03T05:13:31.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/451057360","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":6,"author_association":"COLLABORATOR","body":"This issue is a simple fix, see #15507.\r\n\r\nI think https:\/\/github.com\/mrdoob\/three.js\/issues\/12788 describes the rest of it well enough.\r\n\r\nNodeMaterial solves the same issues (per-texture transforms, per-texture UV slots), so personally that's where I'm going to invest my time, but I'm not opposed to other changes if there's agreement on the API.","created_at":"2019-01-03T05:50:35.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/15486#issuecomment-451060501","id":451060501,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/15486","node_id":"MDEyOklzc3VlQ29tbWVudDQ1MTA2MDUwMQ==","updated_at":"2019-01-03T05:50:35.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/451060501","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}}]}