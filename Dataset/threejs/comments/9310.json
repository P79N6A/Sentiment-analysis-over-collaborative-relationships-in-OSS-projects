{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"NONE","body":"@Rich-Harris @mrdoob \n\nI tested both the legacy monolith via script-include (\/build\/three.js) and modules under \/src\/ in Webpack. Both worked flawless. The only addition one has to make in order to get it to work in Webpack is:\n\n```\nnpm install raw-loader --save-dev\n```\n\nAnd in webpack.config.js under the loaders section:\n\n```\n{ test: \/\\.glsl$\/, loader: 'raw-loader' }\n```\n\nRollup seems to be a perfect fit for building this. Compared to the old build-system it is crazy how fast and lean it is. Compiling the lib took one or two seconds. \n\nCan we please move on with this? Seeing as it doesn't seem to break examples and is already giving the source code a more logical touch, this could be the foundation of THREE-next. I feel like this is exactly what people have been asking for and it's pretty much served on a silver platter here.\n","created_at":"2016-07-11T12:27:32.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/9310#issuecomment-231719880","id":231719880,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/9310","node_id":"MDEyOklzc3VlQ29tbWVudDIzMTcxOTg4MA==","updated_at":"2016-07-11T15:12:50.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/231719880","user":{"following_url":"https:\/\/api.github.com\/users\/drcmda\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/drcmda\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/2223602?v=4","url":"https:\/\/api.github.com\/users\/drcmda","gists_url":"https:\/\/api.github.com\/users\/drcmda\/gists{\/gist_id}","html_url":"https:\/\/github.com\/drcmda","subscriptions_url":"https:\/\/api.github.com\/users\/drcmda\/subscriptions","node_id":"MDQ6VXNlcjIyMjM2MDI=","repos_url":"https:\/\/api.github.com\/users\/drcmda\/repos","received_events_url":"https:\/\/api.github.com\/users\/drcmda\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/drcmda\/starred{\/owner}{\/repo}","site_admin":false,"login":"drcmda","type":"User","id":2223602,"followers_url":"https:\/\/api.github.com\/users\/drcmda\/followers","organizations_url":"https:\/\/api.github.com\/users\/drcmda\/orgs"}},{"index":1,"author_association":"CONTRIBUTOR","body":"Greak work @Rich-Harris. IMO, this would  be a huge step forward as far as maintainability and extensability is concerned.\n\nTo build confidence in this PR, it would be nice if the examples in the [CI for this branch](http:\/\/ci.threejs.org\/viewpullrequest.html#9310) worked, but for some reason it seems like the `three.js` file is bundled but not transpiled (still contains `import` \/ `export` statements). Not sure why though, since the [bundle](https:\/\/github.com\/Rich-Harris\/three.js\/blob\/modules\/build\/three.js) looks ok in the repo.\n","created_at":"2016-07-11T13:53:26.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/9310#issuecomment-231740626","id":231740626,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/9310","node_id":"MDEyOklzc3VlQ29tbWVudDIzMTc0MDYyNg==","updated_at":"2016-07-11T13:53:26.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/231740626","user":{"following_url":"https:\/\/api.github.com\/users\/GGAlanSmithee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/GGAlanSmithee\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/11805103?v=4","url":"https:\/\/api.github.com\/users\/GGAlanSmithee","gists_url":"https:\/\/api.github.com\/users\/GGAlanSmithee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/GGAlanSmithee","subscriptions_url":"https:\/\/api.github.com\/users\/GGAlanSmithee\/subscriptions","node_id":"MDQ6VXNlcjExODA1MTAz","repos_url":"https:\/\/api.github.com\/users\/GGAlanSmithee\/repos","received_events_url":"https:\/\/api.github.com\/users\/GGAlanSmithee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/GGAlanSmithee\/starred{\/owner}{\/repo}","site_admin":false,"login":"GGAlanSmithee","type":"User","id":11805103,"followers_url":"https:\/\/api.github.com\/users\/GGAlanSmithee\/followers","organizations_url":"https:\/\/api.github.com\/users\/GGAlanSmithee\/orgs"}},{"index":2,"author_association":"CONTRIBUTOR","body":"@GGAlanSmithee thanks \u2013 it looks like the CI server is using the old build script and concating all the `src` files. Is there a way I can change that in the PR so that it uses `npm run build`?\n","created_at":"2016-07-11T14:04:18.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/9310#issuecomment-231743803","id":231743803,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/9310","node_id":"MDEyOklzc3VlQ29tbWVudDIzMTc0MzgwMw==","updated_at":"2016-07-11T14:04:18.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/231743803","user":{"following_url":"https:\/\/api.github.com\/users\/Rich-Harris\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Rich-Harris\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1162160?v=4","url":"https:\/\/api.github.com\/users\/Rich-Harris","gists_url":"https:\/\/api.github.com\/users\/Rich-Harris\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Rich-Harris","subscriptions_url":"https:\/\/api.github.com\/users\/Rich-Harris\/subscriptions","node_id":"MDQ6VXNlcjExNjIxNjA=","repos_url":"https:\/\/api.github.com\/users\/Rich-Harris\/repos","received_events_url":"https:\/\/api.github.com\/users\/Rich-Harris\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Rich-Harris\/starred{\/owner}{\/repo}","site_admin":false,"login":"Rich-Harris","type":"User","id":1162160,"followers_url":"https:\/\/api.github.com\/users\/Rich-Harris\/followers","organizations_url":"https:\/\/api.github.com\/users\/Rich-Harris\/orgs"}},{"index":3,"author_association":"CONTRIBUTOR","body":"BTW this conversion has been done before and not previously accepted: https:\/\/github.com\/mrdoob\/three.js\/pull\/7131\/  Might be worth to compare\/contrast with that PR and also look at the discussion that followed.  PRs with long discussions tend not to get merged, thus try to be focused and clear.\n\nAlso this PR will mess up all other outstanding PRs.  This types of breaking PRs generally should be done surgically -- planned, approved, executed and merged, the last two steps being done quickly together.  Here is an example of a breaking PR that I did recently - https:\/\/github.com\/mrdoob\/three.js\/pull\/8223\n","created_at":"2016-07-11T14:18:37.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/9310#issuecomment-231748043","id":231748043,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/9310","node_id":"MDEyOklzc3VlQ29tbWVudDIzMTc0ODA0Mw==","updated_at":"2016-07-11T14:20:11.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/231748043","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":4,"author_association":"CONTRIBUTOR","body":"@bhouston Thanks. This is different to #7131 though \u2013 it introduces the fewest possible changes to the source code, doesn't add any extraneous stuff (Grunt, linting, package.json changes etc), is future-proof (no legacy CommonJS stuff) and _decreases_ the bundle size rather than increasing it. If you review the thread it was actually closed by the author in favour of the approach presented here.\n\n> Also this PR will mess up all other outstanding PRs. This types of breaking PRs generally should be done surgically\n\nIt's not a breaking PR :-) As far as consumers of the library are concerned nothing changes.\n\nThe bulk of the work is done by a script, and the manual parts could also be scripted if the conversion needed to be rerun. That's deliberate, so that it's possible to wait for a more opportune time to do the conversion (i.e. after a few of those other PRs have been merged) if that's what the maintainers want. Honestly though, there will _never_ be a good time to convert an entire codebase to modules, and it's very hard to do incrementally, so it may be better to just rip the bandaid off \u2013 the sooner the codebase is modularised, the sooner it'll start paying dividends.\n\nA lot of those other PRs won't even be affected \u2013 for example https:\/\/github.com\/mrdoob\/three.js\/pull\/9307\/files doesn't touch any code that this PR touches \u2013 and the rest will be very straightforward to update because the source code changes are relatively minimal. I understand that it's a short-term source of pain, but this is something that the community has been asking for for a long time, and as far as I can see that short-term pain is a) the _only_ reason not to push forward with this, and b) outweighed by the considerable benefits.\n","created_at":"2016-07-11T14:40:31.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/9310#issuecomment-231754683","id":231754683,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/9310","node_id":"MDEyOklzc3VlQ29tbWVudDIzMTc1NDY4Mw==","updated_at":"2016-07-11T14:40:31.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/231754683","user":{"following_url":"https:\/\/api.github.com\/users\/Rich-Harris\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Rich-Harris\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1162160?v=4","url":"https:\/\/api.github.com\/users\/Rich-Harris","gists_url":"https:\/\/api.github.com\/users\/Rich-Harris\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Rich-Harris","subscriptions_url":"https:\/\/api.github.com\/users\/Rich-Harris\/subscriptions","node_id":"MDQ6VXNlcjExNjIxNjA=","repos_url":"https:\/\/api.github.com\/users\/Rich-Harris\/repos","received_events_url":"https:\/\/api.github.com\/users\/Rich-Harris\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Rich-Harris\/starred{\/owner}{\/repo}","site_admin":false,"login":"Rich-Harris","type":"User","id":1162160,"followers_url":"https:\/\/api.github.com\/users\/Rich-Harris\/followers","organizations_url":"https:\/\/api.github.com\/users\/Rich-Harris\/orgs"}},{"index":5,"author_association":"CONTRIBUTOR","body":"So all examples work including those bringing in files from examples\/js?  Particularly do the postprocessing examples work?\n\nPlease note that mrdoob's preferred compiler is the ClosureCompiler, we have looked before to swithcing to ugly.js but haven't because ClosureCompiler produced better results.\n","created_at":"2016-07-11T14:50:38.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/9310#issuecomment-231757786","id":231757786,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/9310","node_id":"MDEyOklzc3VlQ29tbWVudDIzMTc1Nzc4Ng==","updated_at":"2016-07-11T14:50:38.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/231757786","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":6,"author_association":"CONTRIBUTOR","body":"All the examples bar one \u2013 http:\/\/threejs.org\/examples\/#webgl_mirror_nodes\u00a0\u2013 which works, but without the reflective splat on the floor. I got a 'Shader couldn't compile' error that I'm not sure how to debug. I checked them all, the others appear to work normally. Unfortunately I'm not yet sure how to get the CI server to use the `npm run build` script, so it appears broken \u2013 any advice would be appreciated.\n\nAll the postprocessing examples work identically to the ones on threejs.org\/examples.\n\n> Please note that mrdoob's preferred compiler is the ClosureCompiler\n\nNo problem, can use CC instead. I just used Uglify because that's what's specified in [package.json](https:\/\/github.com\/mrdoob\/three.js\/blob\/dev\/package.json#L48) and [build.js](https:\/\/github.com\/mrdoob\/three.js\/blob\/dev\/utils\/build\/build.js#L4) \u2013 I didn't see any references to CC?\n","created_at":"2016-07-11T15:00:45.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/9310#issuecomment-231760939","id":231760939,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/9310","node_id":"MDEyOklzc3VlQ29tbWVudDIzMTc2MDkzOQ==","updated_at":"2016-07-11T15:00:45.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/231760939","user":{"following_url":"https:\/\/api.github.com\/users\/Rich-Harris\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Rich-Harris\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1162160?v=4","url":"https:\/\/api.github.com\/users\/Rich-Harris","gists_url":"https:\/\/api.github.com\/users\/Rich-Harris\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Rich-Harris","subscriptions_url":"https:\/\/api.github.com\/users\/Rich-Harris\/subscriptions","node_id":"MDQ6VXNlcjExNjIxNjA=","repos_url":"https:\/\/api.github.com\/users\/Rich-Harris\/repos","received_events_url":"https:\/\/api.github.com\/users\/Rich-Harris\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Rich-Harris\/starred{\/owner}{\/repo}","site_admin":false,"login":"Rich-Harris","type":"User","id":1162160,"followers_url":"https:\/\/api.github.com\/users\/Rich-Harris\/followers","organizations_url":"https:\/\/api.github.com\/users\/Rich-Harris\/orgs"}},{"index":7,"author_association":"CONTRIBUTOR","body":"mrdoob prefers to use the build.sh\/build.bat script I believe - or at least did: https:\/\/github.com\/mrdoob\/three.js\/blob\/dev\/utils\/build\/build.py\n\nhere is an unmerged PR that uses closure compiler in the buildjs file, very easy to use: https:\/\/github.com\/mrdoob\/three.js\/pull\/8366\n","created_at":"2016-07-11T15:09:27.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/9310#issuecomment-231763658","id":231763658,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/9310","node_id":"MDEyOklzc3VlQ29tbWVudDIzMTc2MzY1OA==","updated_at":"2016-07-11T15:09:27.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/231763658","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":8,"author_association":"NONE","body":"@Rich-Harris There's a blob of code defined twice in [lights_pars.glsl](https:\/\/github.com\/mrdoob\/three.js\/blob\/master\/src\/renderers\/shaders\/ShaderChunk\/lights_pars.glsl) and [ambient_pars.glsl](https:\/\/github.com\/mrdoob\/three.js\/blob\/master\/src\/renderers\/shaders\/ShaderChunk\/ambient_pars.glsl). It ends up doubled in the shader blob because PhongNode.js includes both. \n","created_at":"2016-07-11T15:25:16.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/9310#issuecomment-231768700","id":231768700,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/9310","node_id":"MDEyOklzc3VlQ29tbWVudDIzMTc2ODcwMA==","updated_at":"2016-07-11T15:50:54.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/231768700","user":{"following_url":"https:\/\/api.github.com\/users\/drcmda\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/drcmda\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/2223602?v=4","url":"https:\/\/api.github.com\/users\/drcmda","gists_url":"https:\/\/api.github.com\/users\/drcmda\/gists{\/gist_id}","html_url":"https:\/\/github.com\/drcmda","subscriptions_url":"https:\/\/api.github.com\/users\/drcmda\/subscriptions","node_id":"MDQ6VXNlcjIyMjM2MDI=","repos_url":"https:\/\/api.github.com\/users\/drcmda\/repos","received_events_url":"https:\/\/api.github.com\/users\/drcmda\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/drcmda\/starred{\/owner}{\/repo}","site_admin":false,"login":"drcmda","type":"User","id":2223602,"followers_url":"https:\/\/api.github.com\/users\/drcmda\/followers","organizations_url":"https:\/\/api.github.com\/users\/drcmda\/orgs"}},{"index":9,"author_association":"NONE","body":"It looks to me like an error on THREEs side.\n\nThis seems to fix it:\n1. examples\/js\/nodes\/materials\/PhongNode.js, line 147, remove THREE.ShaderChunk[ \"ambient_pars\" ]\n2. renderers\/shaders\/ShaderChunk\/lights_pars.glsl, replace first block with: \n\n```\n#include <ambient_pars>\n\n#if NUM_DIR_LIGHTS > 0\n\n    struct DirectionalLight {\n        ...\n```\n","created_at":"2016-07-11T15:44:22.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/9310#issuecomment-231774809","id":231774809,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/9310","node_id":"MDEyOklzc3VlQ29tbWVudDIzMTc3NDgwOQ==","updated_at":"2016-07-11T15:49:04.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/231774809","user":{"following_url":"https:\/\/api.github.com\/users\/drcmda\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/drcmda\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/2223602?v=4","url":"https:\/\/api.github.com\/users\/drcmda","gists_url":"https:\/\/api.github.com\/users\/drcmda\/gists{\/gist_id}","html_url":"https:\/\/github.com\/drcmda","subscriptions_url":"https:\/\/api.github.com\/users\/drcmda\/subscriptions","node_id":"MDQ6VXNlcjIyMjM2MDI=","repos_url":"https:\/\/api.github.com\/users\/drcmda\/repos","received_events_url":"https:\/\/api.github.com\/users\/drcmda\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/drcmda\/starred{\/owner}{\/repo}","site_admin":false,"login":"drcmda","type":"User","id":2223602,"followers_url":"https:\/\/api.github.com\/users\/drcmda\/followers","organizations_url":"https:\/\/api.github.com\/users\/drcmda\/orgs"}},{"index":10,"author_association":"CONTRIBUTOR","body":"Errors unrelated to this PR should probably be fixed in other PRs.  Keeps this one clean and focused.\n","created_at":"2016-07-11T15:55:51.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/9310#issuecomment-231778416","id":231778416,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/9310","node_id":"MDEyOklzc3VlQ29tbWVudDIzMTc3ODQxNg==","updated_at":"2016-07-11T15:55:51.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/231778416","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":11,"author_association":"NONE","body":"@bhouston It is the error that crashes webgl_mirror_nodes as mentioned by @Rich-Harris above, the only example that does not seem to work. It is probably not Rollups fault and if fixed, we have 100% coverage.\n","created_at":"2016-07-11T16:32:35.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/9310#issuecomment-231789008","id":231789008,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/9310","node_id":"MDEyOklzc3VlQ29tbWVudDIzMTc4OTAwOA==","updated_at":"2016-07-11T16:32:35.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/231789008","user":{"following_url":"https:\/\/api.github.com\/users\/drcmda\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/drcmda\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/2223602?v=4","url":"https:\/\/api.github.com\/users\/drcmda","gists_url":"https:\/\/api.github.com\/users\/drcmda\/gists{\/gist_id}","html_url":"https:\/\/github.com\/drcmda","subscriptions_url":"https:\/\/api.github.com\/users\/drcmda\/subscriptions","node_id":"MDQ6VXNlcjIyMjM2MDI=","repos_url":"https:\/\/api.github.com\/users\/drcmda\/repos","received_events_url":"https:\/\/api.github.com\/users\/drcmda\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/drcmda\/starred{\/owner}{\/repo}","site_admin":false,"login":"drcmda","type":"User","id":2223602,"followers_url":"https:\/\/api.github.com\/users\/drcmda\/followers","organizations_url":"https:\/\/api.github.com\/users\/drcmda\/orgs"}},{"index":12,"author_association":"CONTRIBUTOR","body":"@drcmda that does indeed fix it. Not sure why the fix wouldn't be necessary on the master branch, but I'm sure there's a reason... Happy to include the fix in this PR, just let me know what's best. Thanks.\n\n@bhouston I've created a separate branch on my fork (based off this branch) that swaps Uglify out for CC \u2013\u00a0brings the bundle size down to 383kb. Should I merge it into this branch?\n","created_at":"2016-07-12T02:03:05.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/9310#issuecomment-231917914","id":231917914,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/9310","node_id":"MDEyOklzc3VlQ29tbWVudDIzMTkxNzkxNA==","updated_at":"2016-07-12T02:03:05.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/231917914","user":{"following_url":"https:\/\/api.github.com\/users\/Rich-Harris\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Rich-Harris\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1162160?v=4","url":"https:\/\/api.github.com\/users\/Rich-Harris","gists_url":"https:\/\/api.github.com\/users\/Rich-Harris\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Rich-Harris","subscriptions_url":"https:\/\/api.github.com\/users\/Rich-Harris\/subscriptions","node_id":"MDQ6VXNlcjExNjIxNjA=","repos_url":"https:\/\/api.github.com\/users\/Rich-Harris\/repos","received_events_url":"https:\/\/api.github.com\/users\/Rich-Harris\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Rich-Harris\/starred{\/owner}{\/repo}","site_admin":false,"login":"Rich-Harris","type":"User","id":1162160,"followers_url":"https:\/\/api.github.com\/users\/Rich-Harris\/followers","organizations_url":"https:\/\/api.github.com\/users\/Rich-Harris\/orgs"}},{"index":13,"author_association":"OWNER","body":"Thanks a lot for this mammoth of a PR!! I've done a bit of review and overall looks good! \ud83d\ude01\n\nHowever, the only thing that I'm curious about is all these new `isAudio`, `isMesh`, etc\n\nUsing this approach we can no longer do `object instanceof Mesh`? This surprises me a bit...\n","created_at":"2016-07-12T03:42:51.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/9310#issuecomment-231929729","id":231929729,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/9310","node_id":"MDEyOklzc3VlQ29tbWVudDIzMTkyOTcyOQ==","updated_at":"2016-07-12T03:42:51.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/231929729","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":14,"author_association":"NONE","body":"You can do _object instanceof Mesh_, it wouldn't affect the user or break projects. But in the modular codebase it creates lots of cyclical dependencies and adds size (imports). I believe Webpack 1 couldn't even create a lean build when everything is interlinked, even if single objects are picked out for a project.\n","created_at":"2016-07-12T08:38:44.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/9310#issuecomment-231974854","id":231974854,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/9310","node_id":"MDEyOklzc3VlQ29tbWVudDIzMTk3NDg1NA==","updated_at":"2016-07-12T08:51:21.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/231974854","user":{"following_url":"https:\/\/api.github.com\/users\/drcmda\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/drcmda\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/2223602?v=4","url":"https:\/\/api.github.com\/users\/drcmda","gists_url":"https:\/\/api.github.com\/users\/drcmda\/gists{\/gist_id}","html_url":"https:\/\/github.com\/drcmda","subscriptions_url":"https:\/\/api.github.com\/users\/drcmda\/subscriptions","node_id":"MDQ6VXNlcjIyMjM2MDI=","repos_url":"https:\/\/api.github.com\/users\/drcmda\/repos","received_events_url":"https:\/\/api.github.com\/users\/drcmda\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/drcmda\/starred{\/owner}{\/repo}","site_admin":false,"login":"drcmda","type":"User","id":2223602,"followers_url":"https:\/\/api.github.com\/users\/drcmda\/followers","organizations_url":"https:\/\/api.github.com\/users\/drcmda\/orgs"}},{"index":15,"author_association":"CONTRIBUTOR","body":"Exactly \u2013 for example, any project that used `WebGLRenderer` would automatically have to include things like `Fog`, `FogExp2`, `LineSegment`, `LensFlare`, `SkinnedMesh`, `MultiMaterial`, `LineDashedMaterial`, and loads of other classes that we might otherwise be able to skip (either by treeshaking, or by selectively importing the modules we actually need) in order to have a nice lightweight application. For that reason `instanceof` checks are sometimes considered a bit of an anti-pattern in this sort of context. See also https:\/\/github.com\/mrdoob\/three.js\/issues\/4776#issuecomment-42343615, https:\/\/github.com\/mrdoob\/three.js\/issues\/4776#issuecomment-71575905 and https:\/\/github.com\/mrdoob\/three.js\/issues\/6362 for previous discussions.\n\nI don't know how important it is to have an `isWhatever` property for _every_ class \u2013 for example `BoxGeometry` has `this.isBoxGeometry = this.isGeometry = true`, and while `isGeometry` is widely used `isBoxGeometry` is _never_ used. But I thought it better to be complete and work backwards than to try and second guess these things.\n","created_at":"2016-07-12T10:48:08.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/9310#issuecomment-232004849","id":232004849,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/9310","node_id":"MDEyOklzc3VlQ29tbWVudDIzMjAwNDg0OQ==","updated_at":"2016-07-12T10:48:08.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/232004849","user":{"following_url":"https:\/\/api.github.com\/users\/Rich-Harris\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Rich-Harris\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1162160?v=4","url":"https:\/\/api.github.com\/users\/Rich-Harris","gists_url":"https:\/\/api.github.com\/users\/Rich-Harris\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Rich-Harris","subscriptions_url":"https:\/\/api.github.com\/users\/Rich-Harris\/subscriptions","node_id":"MDQ6VXNlcjExNjIxNjA=","repos_url":"https:\/\/api.github.com\/users\/Rich-Harris\/repos","received_events_url":"https:\/\/api.github.com\/users\/Rich-Harris\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Rich-Harris\/starred{\/owner}{\/repo}","site_admin":false,"login":"Rich-Harris","type":"User","id":1162160,"followers_url":"https:\/\/api.github.com\/users\/Rich-Harris\/followers","organizations_url":"https:\/\/api.github.com\/users\/Rich-Harris\/orgs"}},{"index":16,"author_association":"CONTRIBUTOR","body":"Instead of the this.isBoxGeometry, we should just have this.className or this.typeName or something to that effect.\n\nBTW if @mrdoob is in favor of merging this, we should do it soon.  These types of PRs rot quickly.  Going to modules (as well as the full ES2016) is needed at some point, when is the right time is up @mrdoob.\n\nDoes this change only support ES2016 modules or all of ES2016 via transpiling a la babel?  With Clara,io we use babel with webpack.\n","created_at":"2016-07-12T12:28:03.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/9310#issuecomment-232032357","id":232032357,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/9310","node_id":"MDEyOklzc3VlQ29tbWVudDIzMjAzMjM1Nw==","updated_at":"2016-07-12T12:28:03.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/232032357","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":17,"author_association":"CONTRIBUTOR","body":"I would be in favor of merging and then checking if everything works in all use cases.  I would recommend doing this with at least two weeks prior to a major release.  Thus maybe if @mrdoob does a release on the 15 of this month as he has sort of been doing, then we should merge this immediately after.\n","created_at":"2016-07-12T12:29:28.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/9310#issuecomment-232032644","id":232032644,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/9310","node_id":"MDEyOklzc3VlQ29tbWVudDIzMjAzMjY0NA==","updated_at":"2016-07-12T12:29:28.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/232032644","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":18,"author_association":"CONTRIBUTOR","body":"> Instead of the this.isBoxGeometry, we should just have this.className or this.typeName or something to that effect.\n\nI considered that \u2013 the issue there is that an object may instantiate multiple classes. For example you might check `object.isCamera` or `object.isObject3D` depending on what you're doing \u2013 at the moment both can be true, whereas you can't have both `object.className === 'Camera'` and `object.className === 'Object3D'` for the same object.\n\n> Does this change only support ES2016 modules or all of ES2016 via transpiling a la babel? With Clara,io we use babel with webpack.\n\nIt's only modules for now \u2013 I figured other ES2015 features could come later. Very easy to integrate into the build process \u2013 you'd just add [rollup-plugin-babel](https:\/\/github.com\/rollup\/rollup-plugin-babel) or [rollup-plugin-buble](https:\/\/gitlab.com\/Rich-Harris\/rollup-plugin-buble) to the `plugins` option in rollup.config.js ([Bubl\u00e9](https:\/\/buble.surge.sh) is an alternative to Babel that may be more appropriate depending on which ES2015 features you'd want to use \u2013 it's comparatively tiny, many times faster and generates leaner code, but skips features like generators that are awkward to transpile.)\n","created_at":"2016-07-12T12:47:17.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/9310#issuecomment-232036551","id":232036551,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/9310","node_id":"MDEyOklzc3VlQ29tbWVudDIzMjAzNjU1MQ==","updated_at":"2016-07-12T12:47:17.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/232036551","user":{"following_url":"https:\/\/api.github.com\/users\/Rich-Harris\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Rich-Harris\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1162160?v=4","url":"https:\/\/api.github.com\/users\/Rich-Harris","gists_url":"https:\/\/api.github.com\/users\/Rich-Harris\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Rich-Harris","subscriptions_url":"https:\/\/api.github.com\/users\/Rich-Harris\/subscriptions","node_id":"MDQ6VXNlcjExNjIxNjA=","repos_url":"https:\/\/api.github.com\/users\/Rich-Harris\/repos","received_events_url":"https:\/\/api.github.com\/users\/Rich-Harris\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Rich-Harris\/starred{\/owner}{\/repo}","site_admin":false,"login":"Rich-Harris","type":"User","id":1162160,"followers_url":"https:\/\/api.github.com\/users\/Rich-Harris\/followers","organizations_url":"https:\/\/api.github.com\/users\/Rich-Harris\/orgs"}},{"index":19,"author_association":"OWNER","body":"We already have `.type = 'BoxGeometry'` and `.type = 'Geometry'`. But we need to check inheritance sometimes... Would that need `class` stuff?\n","created_at":"2016-07-12T12:59:29.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/9310#issuecomment-232039462","id":232039462,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/9310","node_id":"MDEyOklzc3VlQ29tbWVudDIzMjAzOTQ2Mg==","updated_at":"2016-07-12T12:59:29.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/232039462","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":20,"author_association":"NONE","body":"Just poking in since this is a largely used module that might be affected if browser bundlers comply to Node's interop spec.\n\nCan we avoid default exports? they lead to a ton of `require('x').default`, which is a big WTF.\n\nNode core's interop spec is going to change this week after the CTC meeting. Property hoisting for CJS modules cannot be implemented like it is in babel at the VM level. It should largely not affect this PR if the consumer codebase is only ES modules, but it should be noted:\n- When this is compiled down to CJS then re-consumed by ES that there will need to be a special flag for compiled ES modules even though they run in CJS. This has not yet been standardized.\n","created_at":"2016-07-12T13:23:44.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/9310#issuecomment-232045606","id":232045606,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/9310","node_id":"MDEyOklzc3VlQ29tbWVudDIzMjA0NTYwNg==","updated_at":"2016-07-12T13:23:44.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/232045606","user":{"following_url":"https:\/\/api.github.com\/users\/bmeck\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bmeck\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/234659?v=4","url":"https:\/\/api.github.com\/users\/bmeck","gists_url":"https:\/\/api.github.com\/users\/bmeck\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bmeck","subscriptions_url":"https:\/\/api.github.com\/users\/bmeck\/subscriptions","node_id":"MDQ6VXNlcjIzNDY1OQ==","repos_url":"https:\/\/api.github.com\/users\/bmeck\/repos","received_events_url":"https:\/\/api.github.com\/users\/bmeck\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bmeck\/starred{\/owner}{\/repo}","site_admin":false,"login":"bmeck","type":"User","id":234659,"followers_url":"https:\/\/api.github.com\/users\/bmeck\/followers","organizations_url":"https:\/\/api.github.com\/users\/bmeck\/orgs"}},{"index":21,"author_association":"CONTRIBUTOR","body":"@bmeck hey there!\n\n> Can we avoid default exports?\n\nThere's no default exports in sight, I made sure of that :-)\n\n> When this is compiled down to CJS then re-consumed by ES that there will need to be a special flag for compiled ES modules even though they run in CJS.\n\nPresumably that's a concern for bundlers rather than library authors? Let me know if there's something Rollup needs to do \u2013 we're currently adding the widely used `__esModule` convention ([demo](http:\/\/rollupjs.org\/#%7B%22options%22%3A%7B%22format%22%3A%22umd%22%2C%22moduleName%22%3A%22myBundle%22%2C%22globals%22%3A%7B%7D%2C%22moduleId%22%3A%22%22%7D%2C%22modules%22%3A%5B%7B%22name%22%3A%22main.js%22%2C%22code%22%3A%22export%20var%20foo%20%3D%201%3B%22%7D%5D%7D)).\n\n@mrdoob \n\n>  Would that need `class` stuff?\n\nNo, there's no need for `class` \u2013 the `isBoxGeometry` and `isGeometry` is designed to allow you to do the same things you were previously doing with `instanceof BoxGeometry` and `instanceof Geometry` without introducing those cyclical dependencies.\n\nBut if in future you adopt a transpiler (i.e. Babel or Bubl\u00e9) then you could do this sort of thing:\n\n``` js\nimport { Geometry } from '..\/..\/core\/Geometry';\nimport { BoxBufferGeometry } from '.\/BoxBufferGeometry';\n\nexport class BoxGeometry extends Geometry {\n  constructor ( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n    super();\n\n    \/\/ one of these is probably superfluous\n    this.isBoxGeometry = true;\n    this.type === 'BoxGeometry';\n\n    this.parameters = { width, height, depth, widthSegments, heightSegments, depthSegments };\n\n    this.fromBufferGeometry( new BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\n    this.mergeVertices();\n  }\n}\n\nexport const CubeGeometry = BoxGeometry;\n```\n\nIt would transpile [something like this](https:\/\/buble.surge.sh\/#class%20BoxGeometry%20extends%20Geometry%20%7B%0A%20%20constructor%20%28%20width%2C%20height%2C%20depth%2C%20widthSegments%2C%20heightSegments%2C%20depthSegments%20%29%20%7B%0A%20%20%20%20super%28%29%3B%0A%0A%20%20%20%20%2F%2F%20one%20of%20these%20is%20probably%20superfluous%0A%20%20%20%20this.isBoxGeometry%20%3D%20true%3B%0A%20%20%20%20this.type%20%3D%3D%3D%20'BoxGeometry'%3B%0A%0A%20%20%20%20this.parameters%20%3D%20%7B%20width%2C%20height%2C%20depth%2C%20widthSegments%2C%20heightSegments%2C%20depthSegments%20%7D%3B%0A%0A%20%20%20%20this.fromBufferGeometry%28%20new%20BoxBufferGeometry%28%20width%2C%20height%2C%20depth%2C%20widthSegments%2C%20heightSegments%2C%20depthSegments%20%29%20%29%3B%0A%20%20%20%20this.mergeVertices%28%29%3B%0A%20%20%7D%0A%7D).\n\nBut that's all in the future \u2013 it's entirely optional, nothing depends on whether you choose to use `class` or the current approach to inheritance.\n","created_at":"2016-07-12T13:33:44.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/9310#issuecomment-232048402","id":232048402,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/9310","node_id":"MDEyOklzc3VlQ29tbWVudDIzMjA0ODQwMg==","updated_at":"2016-07-12T13:33:44.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/232048402","user":{"following_url":"https:\/\/api.github.com\/users\/Rich-Harris\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Rich-Harris\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1162160?v=4","url":"https:\/\/api.github.com\/users\/Rich-Harris","gists_url":"https:\/\/api.github.com\/users\/Rich-Harris\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Rich-Harris","subscriptions_url":"https:\/\/api.github.com\/users\/Rich-Harris\/subscriptions","node_id":"MDQ6VXNlcjExNjIxNjA=","repos_url":"https:\/\/api.github.com\/users\/Rich-Harris\/repos","received_events_url":"https:\/\/api.github.com\/users\/Rich-Harris\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Rich-Harris\/starred{\/owner}{\/repo}","site_admin":false,"login":"Rich-Harris","type":"User","id":1162160,"followers_url":"https:\/\/api.github.com\/users\/Rich-Harris\/followers","organizations_url":"https:\/\/api.github.com\/users\/Rich-Harris\/orgs"}},{"index":22,"author_association":"OWNER","body":"> No, there's no need for `class` \u2013 the `isBoxGeometry` and `isGeometry` is designed to allow you to do the same things you were previously doing with `instanceof BoxGeometry` and `instanceof Geometry` without introducing those cyclical dependencies.\n\nAh, I see what you did now...\n\nHow about something like this?\n\n``` js\n\/\/ in Geometry\nthis.types = [ 'Geometry' ];\n\n\/\/ in BoxGeometry\nthis.types.push( 'BoxGeometry' );\n\n\/\/ in WebGLRenderer\nif ( geometry.types.includes( 'Geometry' ) ) {}\n```\n\nEDIT: I guess it's slower, but it basically merges both the `is*` and `.type`. `.type` is used, at least, by the editor to figure out what the geometry is. So it could now do...\n\n``` js\nvar type = geometry.types[ geometry.types.length - 1 ]\n```\n","created_at":"2016-07-12T21:57:10.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/9310#issuecomment-232194321","id":232194321,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/9310","node_id":"MDEyOklzc3VlQ29tbWVudDIzMjE5NDMyMQ==","updated_at":"2016-07-12T22:22:02.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/232194321","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":23,"author_association":"CONTRIBUTOR","body":"It could be done that way, though you're right that it'd be slower. Would also need an `Array.prototype.includes` polyfill to be added as that's an ES2016 feature. Let me know if you want me to retool the script to generate code like that (probably won't have time until later this week, sorry).\n\nAnother idea would be to put the `is*` properties on the prototype, rather than assigning them in the constructor. Would remove some of the duplication (at the moment `this.isSuperClass = true` is present in `SubClass` as well as `SuperClass`, just in case there are any subclasses that don't call the superclass constructor \u2013 I'm not quite familiar enough with the codebase to know the answer to that off the top of my head!) and be a bit neater.\n\nHow important is it to avoid having both `is*` and `.type`? At the moment we have `instanceof` and `.type`, which is _sort of_ the same thing.\n\n(I did wonder about `geometry.constructor.name` as an alternative to `geometry.type`, but that won't survive some forms of minification.)\n","created_at":"2016-07-13T03:19:34.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/9310#issuecomment-232245144","id":232245144,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/9310","node_id":"MDEyOklzc3VlQ29tbWVudDIzMjI0NTE0NA==","updated_at":"2016-07-13T03:19:34.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/232245144","user":{"following_url":"https:\/\/api.github.com\/users\/Rich-Harris\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Rich-Harris\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1162160?v=4","url":"https:\/\/api.github.com\/users\/Rich-Harris","gists_url":"https:\/\/api.github.com\/users\/Rich-Harris\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Rich-Harris","subscriptions_url":"https:\/\/api.github.com\/users\/Rich-Harris\/subscriptions","node_id":"MDQ6VXNlcjExNjIxNjA=","repos_url":"https:\/\/api.github.com\/users\/Rich-Harris\/repos","received_events_url":"https:\/\/api.github.com\/users\/Rich-Harris\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Rich-Harris\/starred{\/owner}{\/repo}","site_admin":false,"login":"Rich-Harris","type":"User","id":1162160,"followers_url":"https:\/\/api.github.com\/users\/Rich-Harris\/followers","organizations_url":"https:\/\/api.github.com\/users\/Rich-Harris\/orgs"}},{"index":24,"author_association":"NONE","body":"I don't really have a stake in this as I do not yet contribute to Three.js (still learning), but I think this is an interesting thread and module systems are something I have been researching for my own projects.\n\nHaving said that, I'm not sure I understand the benefits of ES6 modules over something like the module pattern. It sounds like the significant benefits are:\n1. No longer need to specify the order in which files should be included\n2. Can allow consumers of Three.js to pull in only the parts they need\n\nTo me, these are not very compelling benefits. \n1. I have personally developed software which contains 50+ modules and load order of script tags has never really been a problem.\n2. Don't we already accomplish this by excluding some files from the build? For example, you need to include less-used modules such as the Controls or CSS3DRenderer.js for example. So what are we getting out of benefit 2? Smaller payloads? concat\/minify\/gzip already does a pretty good job here.\n\nAdditionally, this introduces a couple of downsides.\n1.  Adds a transpile that slows down the develop->reload->test->develop cycle, that for me personally, would become extremely annoying. This will eventually go away for newer browsers, so the dev cycle will return to normal eventually.\n2. \"The frustrating thing about modules is that you lose control over the order in which files are included. \"(I'm not sure the exact impact this would have, but it doesn't sound good!).\n3. Somewhat restricts your development by forcing you to avoid cyclical dependencies. Arguably this is a good thing, but not always: http:\/\/programmers.stackexchange.com\/questions\/317234\/why-support-cyclic-dependencies-at-all-are-there-valid-use-cases -- http:\/\/stackoverflow.com\/questions\/1897537\/why-are-circular-references-considered-harmful\n\nI'm not trying to derail anything. I am genuinely interested in seeing if I am missing something. \n","created_at":"2016-07-17T00:53:53.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/9310#issuecomment-233159086","id":233159086,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/9310","node_id":"MDEyOklzc3VlQ29tbWVudDIzMzE1OTA4Ng==","updated_at":"2016-07-17T00:56:04.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/233159086","user":{"following_url":"https:\/\/api.github.com\/users\/sjlynch\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/sjlynch\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/5000496?v=4","url":"https:\/\/api.github.com\/users\/sjlynch","gists_url":"https:\/\/api.github.com\/users\/sjlynch\/gists{\/gist_id}","html_url":"https:\/\/github.com\/sjlynch","subscriptions_url":"https:\/\/api.github.com\/users\/sjlynch\/subscriptions","node_id":"MDQ6VXNlcjUwMDA0OTY=","repos_url":"https:\/\/api.github.com\/users\/sjlynch\/repos","received_events_url":"https:\/\/api.github.com\/users\/sjlynch\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/sjlynch\/starred{\/owner}{\/repo}","site_admin":false,"login":"sjlynch","type":"User","id":5000496,"followers_url":"https:\/\/api.github.com\/users\/sjlynch\/followers","organizations_url":"https:\/\/api.github.com\/users\/sjlynch\/orgs"}},{"index":25,"author_association":"CONTRIBUTOR","body":"Hey @sjlynch - good questions. Let me try and win you over!\n\nFirstly, the most important benefit of using a module system is one you haven't mentioned - it _makes development easier_. For example, if you're reading the source code for BoxGeometry and you see it depends on Geometry, there's no ambiguity about where to find the source code (editors and GitHub even have extensions to turn import declarations into hyperlinks). Linting and all that stuff just gets _better_, and because ES2015 import and export statements are designed with static analysis in mind, tooling will get better over time. For big projects like Three that's a huge win. (Ever lost a couple of hours debugging a simple typo? Used to happen to me all the time, but not any more - I don't need to remember if it's RgbFormat or RGBFormat because my tools worry about that for me!)\n\nSecondly, the benefits you identified are actually pretty substantial - certainly the part about smaller builds. Three is a big library, so anything that means shipping less code is a good thing, particularly for mobile. Yes, you could make custom builds, but the beauty of ES modules is that _everyone gets a custom build for free_, without having to configure anything (of course that's not true for people using the UMD build, but then even the UMD build gets smaller when you use modules instead of a THREE namespace!). For library authors, that also means that decisions about whether to put new features in the core library or in a separate plugin repo can be based on what makes sense for the project - there's much less pressure to fragment a coherent library into dozens of microlibraries, which is a practice that typically makes life easier for library authors at the expense of users. (But if you _do_ want to split a library up like that, modules make it possible.)\n\nAs to the downsides:\n1. `npm run build` takes under a second on this machine with this PR, and it's trivial to add an `npm run dev` task with file watching and incremental rebuilds. Three already has a build step - this one is just simpler :-)\n2. Having done lots of both, I would pick automatic topological sorting over tediously maintaining a list of files to concatenate every single time. It's very rare that you need to stop and think about import order - with this codebase I did, because of its history, but Rollup literally told me which files were the problem (like I said, ES modules make it much easier to build good tooling!) You just don't need to be concerned about it.\n3. Far from it - ES modules are very cyclical-dependency friendly. There were some minor roadblocks porting an existing large codebase, but once you've got an ES module codebase you're good to go.\n\nHope this helps!\n","created_at":"2016-07-17T01:51:47.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/9310#issuecomment-233160707","id":233160707,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/9310","node_id":"MDEyOklzc3VlQ29tbWVudDIzMzE2MDcwNw==","updated_at":"2016-07-17T01:51:47.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/233160707","user":{"following_url":"https:\/\/api.github.com\/users\/Rich-Harris\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Rich-Harris\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1162160?v=4","url":"https:\/\/api.github.com\/users\/Rich-Harris","gists_url":"https:\/\/api.github.com\/users\/Rich-Harris\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Rich-Harris","subscriptions_url":"https:\/\/api.github.com\/users\/Rich-Harris\/subscriptions","node_id":"MDQ6VXNlcjExNjIxNjA=","repos_url":"https:\/\/api.github.com\/users\/Rich-Harris\/repos","received_events_url":"https:\/\/api.github.com\/users\/Rich-Harris\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Rich-Harris\/starred{\/owner}{\/repo}","site_admin":false,"login":"Rich-Harris","type":"User","id":1162160,"followers_url":"https:\/\/api.github.com\/users\/Rich-Harris\/followers","organizations_url":"https:\/\/api.github.com\/users\/Rich-Harris\/orgs"}},{"index":26,"author_association":"NONE","body":"@Rich-Harris Good points! I have been generally resistant to the increasing complexity of build steps in modern javascript development, but things like grunt minification tasks and the like are utterly unavoidable. Maintaining a list of dependencies to concat\/minify has always been greatly annoying, much more so than what it sounds like you're proposing. That alone has me interested.\n\nEasy and robust documentation generation and linters are always nice with a library of this size.\n\nAnother interesting point I believe you made in another related thread was that you were able to achieve a 40% reduction of code when using Rollup with a threejs app. This is very significant for a 500kb minified library, but comes with the caveat of requiring consumers of Three.js to use Rollup to achieve this. Sounds worth it, though.\n\nMuch of my hesitation to ES6 modules comes from the transpile step, but it sounds like it is super fast, so it wouldn't impede dev cycles. Other concerns include ES6 attempting to shoehorn the class keyword and other syntax to an inherently un-OOP language, but I think that is outside the scope of this thread. \n\nThanks for addressing the concerns!\n","created_at":"2016-07-17T20:23:44.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/9310#issuecomment-233201946","id":233201946,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/9310","node_id":"MDEyOklzc3VlQ29tbWVudDIzMzIwMTk0Ng==","updated_at":"2016-07-17T20:24:45.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/233201946","user":{"following_url":"https:\/\/api.github.com\/users\/sjlynch\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/sjlynch\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/5000496?v=4","url":"https:\/\/api.github.com\/users\/sjlynch","gists_url":"https:\/\/api.github.com\/users\/sjlynch\/gists{\/gist_id}","html_url":"https:\/\/github.com\/sjlynch","subscriptions_url":"https:\/\/api.github.com\/users\/sjlynch\/subscriptions","node_id":"MDQ6VXNlcjUwMDA0OTY=","repos_url":"https:\/\/api.github.com\/users\/sjlynch\/repos","received_events_url":"https:\/\/api.github.com\/users\/sjlynch\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/sjlynch\/starred{\/owner}{\/repo}","site_admin":false,"login":"sjlynch","type":"User","id":5000496,"followers_url":"https:\/\/api.github.com\/users\/sjlynch\/followers","organizations_url":"https:\/\/api.github.com\/users\/sjlynch\/orgs"}},{"index":27,"author_association":"NONE","body":"Back to `types`, @mrdoob's example:\n\n``` js\n\/\/ in Geometry\nthis.types = [ 'Geometry' ];\n\n\/\/ in BoxGeometry\nthis.types.push( 'BoxGeometry' );\n\n\/\/ in WebGLRenderer\nif ( geometry.types.includes( 'Geometry' ) ) {}\n```\n\n... can be changed to use `Set()` because of the simple API and because it's perfect for this. It's already [available in IE11+](https:\/\/kangax.github.io\/compat-table\/es6\/#test-Set)\n\n``` js\n\/\/ in Geometry\nthis.types = new Set([ 'Geometry' ]);\n\n\/\/ in BoxGeometry\nthis.types.add( 'BoxGeometry' );\n\n\/\/ in WebGLRenderer\nif ( geometry.types.has( 'Geometry' ) ) {}\n```\n","created_at":"2016-07-18T12:43:11.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/9310#issuecomment-233317605","id":233317605,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/9310","node_id":"MDEyOklzc3VlQ29tbWVudDIzMzMxNzYwNQ==","updated_at":"2016-07-18T12:45:22.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/233317605","user":{"following_url":"https:\/\/api.github.com\/users\/bfred-it\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bfred-it\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1402241?v=4","url":"https:\/\/api.github.com\/users\/bfred-it","gists_url":"https:\/\/api.github.com\/users\/bfred-it\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bfred-it","subscriptions_url":"https:\/\/api.github.com\/users\/bfred-it\/subscriptions","node_id":"MDQ6VXNlcjE0MDIyNDE=","repos_url":"https:\/\/api.github.com\/users\/bfred-it\/repos","received_events_url":"https:\/\/api.github.com\/users\/bfred-it\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bfred-it\/starred{\/owner}{\/repo}","site_admin":false,"login":"bfred-it","type":"User","id":1402241,"followers_url":"https:\/\/api.github.com\/users\/bfred-it\/followers","organizations_url":"https:\/\/api.github.com\/users\/bfred-it\/orgs"}},{"index":28,"author_association":"CONTRIBUTOR","body":"@bfred-it Unfortunately `Set` doesn't have a good way to determine which element was added last, so it wouldn't be possible to use this in place of `this.type` per @mrdoob's suggestion above. At that point you're probably better off sticking with `is*` (whether on the instance or on the prototype)\n","created_at":"2016-07-18T13:06:37.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/9310#issuecomment-233322733","id":233322733,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/9310","node_id":"MDEyOklzc3VlQ29tbWVudDIzMzMyMjczMw==","updated_at":"2016-07-18T13:06:37.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/233322733","user":{"following_url":"https:\/\/api.github.com\/users\/Rich-Harris\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Rich-Harris\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1162160?v=4","url":"https:\/\/api.github.com\/users\/Rich-Harris","gists_url":"https:\/\/api.github.com\/users\/Rich-Harris\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Rich-Harris","subscriptions_url":"https:\/\/api.github.com\/users\/Rich-Harris\/subscriptions","node_id":"MDQ6VXNlcjExNjIxNjA=","repos_url":"https:\/\/api.github.com\/users\/Rich-Harris\/repos","received_events_url":"https:\/\/api.github.com\/users\/Rich-Harris\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Rich-Harris\/starred{\/owner}{\/repo}","site_admin":false,"login":"Rich-Harris","type":"User","id":1162160,"followers_url":"https:\/\/api.github.com\/users\/Rich-Harris\/followers","organizations_url":"https:\/\/api.github.com\/users\/Rich-Harris\/orgs"}},{"index":29,"author_association":"NONE","body":"@sjlynch \n\n> Another interesting point I believe you made in another related thread was that you were able to achieve a 40% reduction of code when using Rollup with a threejs app. This is very significant for a 500kb minified library, but comes with the caveat of requiring consumers of Three.js to use Rollup to achieve this. Sounds worth it, though.\n> Much of my hesitation to ES6 modules comes from the transpile step, but it sounds like it is super fast, so it wouldn't impede dev cycles. Other concerns include ES6 attempting to shoehorn the class keyword and other syntax to an inherently un-OOP language, but I think that is outside the scope of this thread.\n\nThis PR does not require a specific bundler or build step as you can still script-include Three.min.js in your ES5 project and get window.THREE. A little code-base optimization and a bundler (Rollup, Webpack, system.js, etc.) could perhaps get under 200kb for a generic project, _maybe_ even touch the 100kb barrier once shaders are modularized and references are cleaned up.\n\nRollup is here solely used to compile the browser monolith, replacing the old build system. The end-product on npm would ship modules and monolith, thereby suiting all possible scenarios, old and new.  \n","created_at":"2016-07-19T09:08:55.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/9310#issuecomment-233574069","id":233574069,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/9310","node_id":"MDEyOklzc3VlQ29tbWVudDIzMzU3NDA2OQ==","updated_at":"2016-07-19T09:27:49.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/233574069","user":{"following_url":"https:\/\/api.github.com\/users\/drcmda\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/drcmda\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/2223602?v=4","url":"https:\/\/api.github.com\/users\/drcmda","gists_url":"https:\/\/api.github.com\/users\/drcmda\/gists{\/gist_id}","html_url":"https:\/\/github.com\/drcmda","subscriptions_url":"https:\/\/api.github.com\/users\/drcmda\/subscriptions","node_id":"MDQ6VXNlcjIyMjM2MDI=","repos_url":"https:\/\/api.github.com\/users\/drcmda\/repos","received_events_url":"https:\/\/api.github.com\/users\/drcmda\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/drcmda\/starred{\/owner}{\/repo}","site_admin":false,"login":"drcmda","type":"User","id":2223602,"followers_url":"https:\/\/api.github.com\/users\/drcmda\/followers","organizations_url":"https:\/\/api.github.com\/users\/drcmda\/orgs"}}]}