{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"CONTRIBUTOR","body":"Gotta advertise this :)\r\n\r\nhttps:\/\/github.com\/mrdoob\/three.js\/pull\/10791\r\n\r\nYou can check out my branch, and basically do this:\r\n```javascript\r\nmyMaterial.shaderUniforms = { uModelMatrixInverse: { value: new THREE.Matrix4() } }\r\nmyMaterial.shaderIncludes = { chunkWhereYouNeedYourLogic: GLSL_code }\r\n```\r\n\r\n**edit**\r\n>Currently, there is no way to expose the inverse of the modelMatrix to a shader\r\n\r\nThis is not true, you can provide whatever you want to `ShaderMaterial`. \r\n","created_at":"2017-04-11T17:26:10.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11162#issuecomment-293336558","id":293336558,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11162","node_id":"MDEyOklzc3VlQ29tbWVudDI5MzMzNjU1OA==","updated_at":"2017-04-11T17:27:32.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/293336558","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":1,"author_association":"COLLABORATOR","body":">which means you must write an inverse function in the shader\r\n\r\nNot necessarily. See the section _Transforming Points with the Inverse Matrix_ in [this link](https:\/\/en.wikibooks.org\/wiki\/GLSL_Programming\/Applying_Matrix_Transformations).","created_at":"2017-04-11T18:13:06.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11162#issuecomment-293352011","id":293352011,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11162","node_id":"MDEyOklzc3VlQ29tbWVudDI5MzM1MjAxMQ==","updated_at":"2017-04-11T18:13:06.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/293352011","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":2,"author_association":"NONE","body":"GLSL has a built in inverse function. https:\/\/www.khronos.org\/registry\/OpenGL-Refpages\/gl4\/html\/inverse.xhtml","created_at":"2017-04-13T14:02:18.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11162#issuecomment-293904162","id":293904162,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11162","node_id":"MDEyOklzc3VlQ29tbWVudDI5MzkwNDE2Mg==","updated_at":"2017-04-13T14:02:18.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/293904162","user":{"following_url":"https:\/\/api.github.com\/users\/mi7flat5\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mi7flat5\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/8546402?v=4","url":"https:\/\/api.github.com\/users\/mi7flat5","gists_url":"https:\/\/api.github.com\/users\/mi7flat5\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mi7flat5","subscriptions_url":"https:\/\/api.github.com\/users\/mi7flat5\/subscriptions","node_id":"MDQ6VXNlcjg1NDY0MDI=","repos_url":"https:\/\/api.github.com\/users\/mi7flat5\/repos","received_events_url":"https:\/\/api.github.com\/users\/mi7flat5\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mi7flat5\/starred{\/owner}{\/repo}","site_admin":false,"login":"mi7flat5","type":"User","id":8546402,"followers_url":"https:\/\/api.github.com\/users\/mi7flat5\/followers","organizations_url":"https:\/\/api.github.com\/users\/mi7flat5\/orgs"}},{"index":3,"author_association":"CONTRIBUTOR","body":"Glsl for OpenGL 4?","created_at":"2017-04-13T16:00:20.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11162#issuecomment-293938534","id":293938534,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11162","node_id":"MDEyOklzc3VlQ29tbWVudDI5MzkzODUzNA==","updated_at":"2017-04-13T16:00:20.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/293938534","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":4,"author_association":"NONE","body":"@pailhead - When you say \"not so, you can provide whatever you want\", how would you do this efficiently per object? Note that I'm asking for inverse(modelViewMatrix), that means it potentially changes per mesh or am I missing something?\r\n\r\n@WestLangley - From the article you linked: \"In most cases, the best solution is to define another uniform variable for the inverse matrix and set the inverse matrix in the main application. The shader can then apply the inverse matrix like any other matrix. This is by far more efficient than computing the inverse in the shader.\"\r\n\r\n@mi7flat5 - No, there is no inverse() function in glsl for WebGL 1.0 and you wouldn't want to encourage people to use it if there were.\r\n","created_at":"2017-04-13T17:32:28.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11162#issuecomment-293968923","id":293968923,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11162","node_id":"MDEyOklzc3VlQ29tbWVudDI5Mzk2ODkyMw==","updated_at":"2017-04-13T17:32:28.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/293968923","user":{"following_url":"https:\/\/api.github.com\/users\/jcowles\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/jcowles\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/1510114?v=4","url":"https:\/\/api.github.com\/users\/jcowles","gists_url":"https:\/\/api.github.com\/users\/jcowles\/gists{\/gist_id}","html_url":"https:\/\/github.com\/jcowles","subscriptions_url":"https:\/\/api.github.com\/users\/jcowles\/subscriptions","node_id":"MDQ6VXNlcjE1MTAxMTQ=","repos_url":"https:\/\/api.github.com\/users\/jcowles\/repos","received_events_url":"https:\/\/api.github.com\/users\/jcowles\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/jcowles\/starred{\/owner}{\/repo}","site_admin":false,"login":"jcowles","type":"User","id":1510114,"followers_url":"https:\/\/api.github.com\/users\/jcowles\/followers","organizations_url":"https:\/\/api.github.com\/users\/jcowles\/orgs"}},{"index":5,"author_association":"CONTRIBUTOR","body":"If you don't want to compute the inverse in the shader where do you intend to compute it?\r\n\r\n\r\n`myShaderMaterial.uniforms.uMyMatrixInverse.value.ANY_MAT_METHOD()`\r\n\r\nOr am I missing something?","created_at":"2017-04-13T18:08:54.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11162#issuecomment-293978199","id":293978199,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11162","node_id":"MDEyOklzc3VlQ29tbWVudDI5Mzk3ODE5OQ==","updated_at":"2017-04-13T18:10:32.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/293978199","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":6,"author_association":"NONE","body":"@jcowles on the first point I stand corrected, but depending on needs of application inverse may be preferred in the shader, though probably only in the vertex shader. ","created_at":"2017-04-13T18:18:57.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11162#issuecomment-293980685","id":293980685,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11162","node_id":"MDEyOklzc3VlQ29tbWVudDI5Mzk4MDY4NQ==","updated_at":"2017-04-13T18:18:57.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/293980685","user":{"following_url":"https:\/\/api.github.com\/users\/mi7flat5\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mi7flat5\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/8546402?v=4","url":"https:\/\/api.github.com\/users\/mi7flat5","gists_url":"https:\/\/api.github.com\/users\/mi7flat5\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mi7flat5","subscriptions_url":"https:\/\/api.github.com\/users\/mi7flat5\/subscriptions","node_id":"MDQ6VXNlcjg1NDY0MDI=","repos_url":"https:\/\/api.github.com\/users\/mi7flat5\/repos","received_events_url":"https:\/\/api.github.com\/users\/mi7flat5\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mi7flat5\/starred{\/owner}{\/repo}","site_admin":false,"login":"mi7flat5","type":"User","id":8546402,"followers_url":"https:\/\/api.github.com\/users\/mi7flat5\/followers","organizations_url":"https:\/\/api.github.com\/users\/mi7flat5\/orgs"}},{"index":7,"author_association":"NONE","body":"@pailhead  - I want to compute it on the CPU and send it to the shader as a uniform\r\n\r\n@mi7flat5 - fair, but I would say the common case is to not want to compute it","created_at":"2017-04-13T19:51:55.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11162#issuecomment-294004619","id":294004619,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11162","node_id":"MDEyOklzc3VlQ29tbWVudDI5NDAwNDYxOQ==","updated_at":"2017-04-13T19:51:55.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/294004619","user":{"following_url":"https:\/\/api.github.com\/users\/jcowles\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/jcowles\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/1510114?v=4","url":"https:\/\/api.github.com\/users\/jcowles","gists_url":"https:\/\/api.github.com\/users\/jcowles\/gists{\/gist_id}","html_url":"https:\/\/github.com\/jcowles","subscriptions_url":"https:\/\/api.github.com\/users\/jcowles\/subscriptions","node_id":"MDQ6VXNlcjE1MTAxMTQ=","repos_url":"https:\/\/api.github.com\/users\/jcowles\/repos","received_events_url":"https:\/\/api.github.com\/users\/jcowles\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/jcowles\/starred{\/owner}{\/repo}","site_admin":false,"login":"jcowles","type":"User","id":1510114,"followers_url":"https:\/\/api.github.com\/users\/jcowles\/followers","organizations_url":"https:\/\/api.github.com\/users\/jcowles\/orgs"}},{"index":8,"author_association":"CONTRIBUTOR","body":"Shouldn't be more than this. \r\n\r\n```\r\nlet myMatrix = new THREE.Matrix4()\r\n\r\nlet myShader = new THREE.ShaderMaterial({\r\n  uniforms:{ \r\n    uMyMatrix: { value: myMatrix } \r\n  },\r\n  ...\r\n})\r\n\r\nlet myOtherMatrix = new THREE.Matrix4()\r\n\r\n\r\nfunction someFunc(){\r\n  doStuffWithMatrix( myOtherMatrix )\r\n  myMatrix.getInverse( myOtherMatrix ) \/\/automagically update the uniform in shader\r\n}\r\n```\r\n```glsl\r\n\r\nuniform mat4 uMyMatrix;\r\n\r\nvoid main(){\r\n...\r\n}\r\n```  \r\n","created_at":"2017-04-13T21:18:58.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11162#issuecomment-294024357","id":294024357,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11162","node_id":"MDEyOklzc3VlQ29tbWVudDI5NDAyNDM1Nw==","updated_at":"2017-04-13T21:20:09.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/294024357","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":9,"author_association":"NONE","body":"@pailhead I'm having a hard time understanding how what you propose maps on to my request. Are you proposing a custom material for every mesh?\r\n","created_at":"2017-04-17T21:14:41.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11162#issuecomment-294594927","id":294594927,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11162","node_id":"MDEyOklzc3VlQ29tbWVudDI5NDU5NDkyNw==","updated_at":"2017-04-17T21:14:41.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/294594927","user":{"following_url":"https:\/\/api.github.com\/users\/jcowles\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/jcowles\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/1510114?v=4","url":"https:\/\/api.github.com\/users\/jcowles","gists_url":"https:\/\/api.github.com\/users\/jcowles\/gists{\/gist_id}","html_url":"https:\/\/github.com\/jcowles","subscriptions_url":"https:\/\/api.github.com\/users\/jcowles\/subscriptions","node_id":"MDQ6VXNlcjE1MTAxMTQ=","repos_url":"https:\/\/api.github.com\/users\/jcowles\/repos","received_events_url":"https:\/\/api.github.com\/users\/jcowles\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/jcowles\/starred{\/owner}{\/repo}","site_admin":false,"login":"jcowles","type":"User","id":1510114,"followers_url":"https:\/\/api.github.com\/users\/jcowles\/followers","organizations_url":"https:\/\/api.github.com\/users\/jcowles\/orgs"}},{"index":10,"author_association":"NONE","body":"... and iterating over every mesh on every frame to set the uniform?","created_at":"2017-04-17T21:15:35.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11162#issuecomment-294595129","id":294595129,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11162","node_id":"MDEyOklzc3VlQ29tbWVudDI5NDU5NTEyOQ==","updated_at":"2017-04-17T21:15:35.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/294595129","user":{"following_url":"https:\/\/api.github.com\/users\/jcowles\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/jcowles\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/1510114?v=4","url":"https:\/\/api.github.com\/users\/jcowles","gists_url":"https:\/\/api.github.com\/users\/jcowles\/gists{\/gist_id}","html_url":"https:\/\/github.com\/jcowles","subscriptions_url":"https:\/\/api.github.com\/users\/jcowles\/subscriptions","node_id":"MDQ6VXNlcjE1MTAxMTQ=","repos_url":"https:\/\/api.github.com\/users\/jcowles\/repos","received_events_url":"https:\/\/api.github.com\/users\/jcowles\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/jcowles\/starred{\/owner}{\/repo}","site_admin":false,"login":"jcowles","type":"User","id":1510114,"followers_url":"https:\/\/api.github.com\/users\/jcowles\/followers","organizations_url":"https:\/\/api.github.com\/users\/jcowles\/orgs"}},{"index":11,"author_association":"CONTRIBUTOR","body":"Well, i'm having a hard time understanding this issue. If you are already writing your own shaders, i don't understand what's the problem. You pass a uniform just like any other uniform. If it's a matrix4 then you can do whatever you want with that matrix ( take a matrix, transpose it, inverse it, multiply it etc. etc.).\r\n\r\nIf you are not writing your own shaders (not sure what you refer to as \"custom material\") then i'm super confused. There is no way to inject glsl into the existing (non-custom??) materials. I've made a pull request that should allow this though. \r\n\r\n>... and iterating over every mesh on every frame to set the uniform?\r\n\r\nDont know of any other way to set uniforms. ","created_at":"2017-04-17T21:25:34.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11162#issuecomment-294597749","id":294597749,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11162","node_id":"MDEyOklzc3VlQ29tbWVudDI5NDU5Nzc0OQ==","updated_at":"2017-04-17T21:26:20.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/294597749","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":12,"author_association":"NONE","body":"I want the inverse model matrix -- that's a unique matrix for every mesh, even if they have the same shader.\r\n\r\nImagine I have two meshes, both are using the same diffuse shader. Can one material have a single uniform (\"inverseModelMatrix\") with two different values for that matrix?","created_at":"2017-04-17T21:39:36.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11162#issuecomment-294601932","id":294601932,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11162","node_id":"MDEyOklzc3VlQ29tbWVudDI5NDYwMTkzMg==","updated_at":"2017-04-17T21:39:36.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/294601932","user":{"following_url":"https:\/\/api.github.com\/users\/jcowles\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/jcowles\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/1510114?v=4","url":"https:\/\/api.github.com\/users\/jcowles","gists_url":"https:\/\/api.github.com\/users\/jcowles\/gists{\/gist_id}","html_url":"https:\/\/github.com\/jcowles","subscriptions_url":"https:\/\/api.github.com\/users\/jcowles\/subscriptions","node_id":"MDQ6VXNlcjE1MTAxMTQ=","repos_url":"https:\/\/api.github.com\/users\/jcowles\/repos","received_events_url":"https:\/\/api.github.com\/users\/jcowles\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/jcowles\/starred{\/owner}{\/repo}","site_admin":false,"login":"jcowles","type":"User","id":1510114,"followers_url":"https:\/\/api.github.com\/users\/jcowles\/followers","organizations_url":"https:\/\/api.github.com\/users\/jcowles\/orgs"}},{"index":13,"author_association":"CONTRIBUTOR","body":"No, it will have one value. Can you share some code, I'm really curious where this is coming from. This may be a stack overflow issue","created_at":"2017-04-17T22:03:55.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11162#issuecomment-294607524","id":294607524,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11162","node_id":"MDEyOklzc3VlQ29tbWVudDI5NDYwNzUyNA==","updated_at":"2017-04-18T04:21:51.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/294607524","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":14,"author_association":"NONE","body":"By \"where this is coming from,\" do you mean, \"why would I want an inverse model matrix?\" -- I need to do some calculations in view space and take the result back to untransformed object space. So I take some value, multiply by modelViewMatrix, compute something, and then take the result back to object space by multiplying by inverse(modelViewMatrix).\r\n\r\nSometimes you can work around this changing the order of how the shader works, but in some cases that's not a viable option.","created_at":"2017-04-17T22:35:51.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11162#issuecomment-294615680","id":294615680,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11162","node_id":"MDEyOklzc3VlQ29tbWVudDI5NDYxNTY4MA==","updated_at":"2017-04-17T22:35:51.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/294615680","user":{"following_url":"https:\/\/api.github.com\/users\/jcowles\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/jcowles\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/1510114?v=4","url":"https:\/\/api.github.com\/users\/jcowles","gists_url":"https:\/\/api.github.com\/users\/jcowles\/gists{\/gist_id}","html_url":"https:\/\/github.com\/jcowles","subscriptions_url":"https:\/\/api.github.com\/users\/jcowles\/subscriptions","node_id":"MDQ6VXNlcjE1MTAxMTQ=","repos_url":"https:\/\/api.github.com\/users\/jcowles\/repos","received_events_url":"https:\/\/api.github.com\/users\/jcowles\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/jcowles\/starred{\/owner}{\/repo}","site_admin":false,"login":"jcowles","type":"User","id":1510114,"followers_url":"https:\/\/api.github.com\/users\/jcowles\/followers","organizations_url":"https:\/\/api.github.com\/users\/jcowles\/orgs"}},{"index":15,"author_association":"NONE","body":"Why do you think Unity provides this as a built-in value?\r\n\r\nBecause it's inefficient to compute in the shader and the renderer is the most efficient point at which it can be computed (and cached) and assigned as a uniform on the material and doesn't require creating a separate material instance for every object in the scene, just to get an inverse model matrix.","created_at":"2017-04-17T22:46:14.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11162#issuecomment-294617551","id":294617551,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11162","node_id":"MDEyOklzc3VlQ29tbWVudDI5NDYxNzU1MQ==","updated_at":"2017-04-17T22:46:14.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/294617551","user":{"following_url":"https:\/\/api.github.com\/users\/jcowles\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/jcowles\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/1510114?v=4","url":"https:\/\/api.github.com\/users\/jcowles","gists_url":"https:\/\/api.github.com\/users\/jcowles\/gists{\/gist_id}","html_url":"https:\/\/github.com\/jcowles","subscriptions_url":"https:\/\/api.github.com\/users\/jcowles\/subscriptions","node_id":"MDQ6VXNlcjE1MTAxMTQ=","repos_url":"https:\/\/api.github.com\/users\/jcowles\/repos","received_events_url":"https:\/\/api.github.com\/users\/jcowles\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/jcowles\/starred{\/owner}{\/repo}","site_admin":false,"login":"jcowles","type":"User","id":1510114,"followers_url":"https:\/\/api.github.com\/users\/jcowles\/followers","organizations_url":"https:\/\/api.github.com\/users\/jcowles\/orgs"}},{"index":16,"author_association":"COLLABORATOR","body":"@jcowles \r\n\r\n>@WestLangley - From the article you linked: \"In most cases, the best solution is to define another uniform variable for the inverse matrix and set the inverse matrix in the main application. The shader can then apply the inverse matrix like any other matrix. This is by far more efficient than computing the inverse in the shader.\"\r\n\r\n1. It is not more efficient if that inverse matrix is not needed -- which it hasn't been, so far.\r\n\r\n2. You have said you want `inverse( modelMatrix )`, and then you said you want `inverse( modelViewMatrix )` for your `ShaderMaterial`. Which one is it?\r\n\r\n3. Can you explain why the technique I linked to is not satisfactory for your use case?\r\n\r\n4. Can you try using this pattern?\r\n```\r\nvar myFunction = function( renderer, scene, camera, geometry, material, group ) {\r\n\r\n    \/\/ update your material uniform on a per-instance basis here\r\n\r\n}\r\n\r\nmesh.onBeforeRender = myFunction;\r\n```\r\n5. If that is not acceptable, can you provide a live demo of your use case?","created_at":"2017-04-17T23:25:08.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11162#issuecomment-294624499","id":294624499,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11162","node_id":"MDEyOklzc3VlQ29tbWVudDI5NDYyNDQ5OQ==","updated_at":"2017-04-17T23:25:08.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/294624499","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":17,"author_association":"CONTRIBUTOR","body":">By \"where this is coming from,\" do you mean, \"why would I want an inverse model matrix?\" -- I need to do some calculations in view space and take the result back to untransformed object space. \r\n\r\nSo it's safe to assume that you are working with `ShaderMaterial`, and you are referring to the built in variables (attributes, uniforms)? Not all shaders need this inverse, but most shaders do need things like `projectionMatrix`, `modelViewMatrix`. \r\n\r\n>and doesn't require creating a separate material instance for every object in the scene, just to get an inverse model matrix.\r\n\r\nYou might be mixing up shaders and materials. Materials are just a wrapper, an abstraction that helps you define abstract concepts such as \"color\". Three uses materials to manage the drawcalls. You can avoid keeping multiple material instances by using `#4` from what @WestLangley suggested. This approach is much closer to how WebGL actually works. You don't have to compute the inverse every frame, but you should have some check to decide when to update. If you disable sorting, the objects will render in the order they were added. Changing the uniform should incur less overhead if the same shader is sequenced. \r\n\r\nIf this doesn't make sense please provide some code :)\r\n","created_at":"2017-04-17T23:30:02.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11162#issuecomment-294625614","id":294625614,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11162","node_id":"MDEyOklzc3VlQ29tbWVudDI5NDYyNTYxNA==","updated_at":"2017-04-18T04:27:22.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/294625614","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":18,"author_association":"CONTRIBUTOR","body":"See #9870 for an example on how to use `onBeforeRender` to update uniforms.","created_at":"2017-04-20T21:50:55.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11162#issuecomment-295930446","id":295930446,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11162","node_id":"MDEyOklzc3VlQ29tbWVudDI5NTkzMDQ0Ng==","updated_at":"2017-04-20T21:50:55.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/295930446","user":{"following_url":"https:\/\/api.github.com\/users\/arose\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/arose\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/272250?v=4","url":"https:\/\/api.github.com\/users\/arose","gists_url":"https:\/\/api.github.com\/users\/arose\/gists{\/gist_id}","html_url":"https:\/\/github.com\/arose","subscriptions_url":"https:\/\/api.github.com\/users\/arose\/subscriptions","node_id":"MDQ6VXNlcjI3MjI1MA==","repos_url":"https:\/\/api.github.com\/users\/arose\/repos","received_events_url":"https:\/\/api.github.com\/users\/arose\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/arose\/starred{\/owner}{\/repo}","site_admin":false,"login":"arose","type":"User","id":272250,"followers_url":"https:\/\/api.github.com\/users\/arose\/followers","organizations_url":"https:\/\/api.github.com\/users\/arose\/orgs"}},{"index":19,"author_association":"NONE","body":"I argue that encouraging users to implement this on their own via onBeforeRender is the wrong approach for the following reasons:\r\n\r\n1) it adds performance overhead in an inner loop of the renderer.\r\n\r\n2) it forfeits the ability to do something smarter, such as caching the matrices instead of recomputing the inverse for every object on every frame. \r\n\r\n3) the renderer owns the modelView matrix and I have demonstrated in #11240 there is a simple way to expose this functionally per-material -- forcing the user to implement the inverse is both inconsistent and inconvenient.\r\n\r\nWhat are the counter arguments?\r\n","created_at":"2017-04-25T20:46:31.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11162#issuecomment-297159742","id":297159742,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11162","node_id":"MDEyOklzc3VlQ29tbWVudDI5NzE1OTc0Mg==","updated_at":"2017-04-25T20:46:31.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/297159742","user":{"following_url":"https:\/\/api.github.com\/users\/jcowles\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/jcowles\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/1510114?v=4","url":"https:\/\/api.github.com\/users\/jcowles","gists_url":"https:\/\/api.github.com\/users\/jcowles\/gists{\/gist_id}","html_url":"https:\/\/github.com\/jcowles","subscriptions_url":"https:\/\/api.github.com\/users\/jcowles\/subscriptions","node_id":"MDQ6VXNlcjE1MTAxMTQ=","repos_url":"https:\/\/api.github.com\/users\/jcowles\/repos","received_events_url":"https:\/\/api.github.com\/users\/jcowles\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/jcowles\/starred{\/owner}{\/repo}","site_admin":false,"login":"jcowles","type":"User","id":1510114,"followers_url":"https:\/\/api.github.com\/users\/jcowles\/followers","organizations_url":"https:\/\/api.github.com\/users\/jcowles\/orgs"}},{"index":20,"author_association":"CONTRIBUTOR","body":"1. I'm not sure how your solution is supposed to be more performant.... \r\n     - the `onBeforeRender()` always fires, it's by design\r\n     - you have the option of doing a check inside that function, or not\r\n     vs:\r\n     - [always doing a check for every object](https:\/\/github.com\/mrdoob\/three.js\/pull\/11240\/files#diff-c0e88b98497597a015ecf238e91ac3a0R1963)\r\n\r\n\r\n2. Care to elaborate? What's preventing you from caching your own matrices, or generally be smarter? Where is the caching happening in your pull request? Why is there a `Matrix4` object being created seemingly every frame (or am i misinterpreting [this](https:\/\/github.com\/jcowles\/three.js\/commit\/f0412c0395de7893bad5e625db1d809e2e2811db#diff-c0e88b98497597a015ecf238e91ac3a0R1964)), **if im not mistaken this is an explicit anti-pattern with three.js**, if anything should be cached it should be that. \r\n\r\n3. Are you worried about [this](https:\/\/github.com\/mrdoob\/three.js\/blob\/9b365be73b65ce6d1c01bbbd6c4ee2b0fcf69a03\/src\/renderers\/WebGLRenderer.js#L1487)? You want to do an inverse of something that happens automagically under the hood? So you want to avoid computing the matrix one more time in order to get the inverse? This could be an issue, but i think a more three like approach would be to set a `X_needsUpdate` or `autoUpdate` so that you're in control of how many times it gets computed. I might be completely missing the point.\r\n\r\n4. Tone, style of writing, something is off here. I see that people are having trouble understanding what you want to do, it's ambiguous. I used a crystal ball to guess that you are working with `ShaderMaterials` but am still not 100% on that. The first question that pops to mind is \"why arent you working with `RawShaderMaterial` and just take care of everything yourself? I think you should familiarize yourself more with how things are done with three.js and whats the reasoning behind those decisions. **Why do you think that all the materials should include this flag, or this check, when only one type actually allows you to write GLSL**? Why should a `MeshLambertMaterial` ever care about this when nothing is being done with these uniforms? It's pretty much relevant only on the `ShaderMaterial`.\r\n\r\nOne more interesting thing to note, out of 116 contributors to `WebGLRender` i see 5 authors listed in the file, similar with `Material`, out of 26, only two mentioned in the file... Good to see you added your name up there ;)\r\n\r\n \r\n\r\n     ","created_at":"2017-04-25T22:13:51.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11162#issuecomment-297180843","id":297180843,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11162","node_id":"MDEyOklzc3VlQ29tbWVudDI5NzE4MDg0Mw==","updated_at":"2017-04-25T22:23:42.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/297180843","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":21,"author_association":"NONE","body":"@pailhead  ah, sorry about adding the author, I was really just pattern matching, I'm glad you have a friendly way of onboarding new contributors that doesn't involve sarcasm :)\r\n\r\nAnd yes, great note that this should be on RawShaderMaterial, will fix both.\r\n\r\nAs for the rest of the discussion, if you think this doesn't belong in the lib, that's cool.\r\n","created_at":"2017-04-25T22:29:41.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11162#issuecomment-297183890","id":297183890,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11162","node_id":"MDEyOklzc3VlQ29tbWVudDI5NzE4Mzg5MA==","updated_at":"2017-04-25T22:29:41.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/297183890","user":{"following_url":"https:\/\/api.github.com\/users\/jcowles\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/jcowles\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/1510114?v=4","url":"https:\/\/api.github.com\/users\/jcowles","gists_url":"https:\/\/api.github.com\/users\/jcowles\/gists{\/gist_id}","html_url":"https:\/\/github.com\/jcowles","subscriptions_url":"https:\/\/api.github.com\/users\/jcowles\/subscriptions","node_id":"MDQ6VXNlcjE1MTAxMTQ=","repos_url":"https:\/\/api.github.com\/users\/jcowles\/repos","received_events_url":"https:\/\/api.github.com\/users\/jcowles\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/jcowles\/starred{\/owner}{\/repo}","site_admin":false,"login":"jcowles","type":"User","id":1510114,"followers_url":"https:\/\/api.github.com\/users\/jcowles\/followers","organizations_url":"https:\/\/api.github.com\/users\/jcowles\/orgs"}},{"index":22,"author_association":"CONTRIBUTOR","body":":)\r\n\r\nDoesn't belong like this, but i think discussion is important. Am I at least right on understanding `#3`? \r\nI still think you might be missing something, out of the two GLSL apis that three exposes, this seems like it would be more relevant on the `ShaderMaterial` rather than `RawShaderMaterial`. Raw exposes nothing or very little, you need to set everything up, shader is the one that gives you stuff for convenience. ","created_at":"2017-04-25T22:32:14.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11162#issuecomment-297184382","id":297184382,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11162","node_id":"MDEyOklzc3VlQ29tbWVudDI5NzE4NDM4Mg==","updated_at":"2017-04-25T22:39:19.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/297184382","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":23,"author_association":"CONTRIBUTOR","body":"if `#3` is the problem then i think a more three.js like solution is to have something like [this](https:\/\/github.com\/mrdoob\/three.js\/blob\/892088fd9105e553458acf07469eab32831852b3\/src\/core\/Object3D.js#L82)","created_at":"2017-04-25T22:33:51.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11162#issuecomment-297184691","id":297184691,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11162","node_id":"MDEyOklzc3VlQ29tbWVudDI5NzE4NDY5MQ==","updated_at":"2017-04-25T22:33:51.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/297184691","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":24,"author_association":"NONE","body":"Ah yeah, ShaderMaterial.\r\n\r\nAnd yes, (2) and (3) are very related. If the engine controls the transform hierarchy, it has an opportunity to do something smart. What I mean by \"forfeit\" is that the engine is giving up control to the user -- but maybe that's the three.js way? Renderers I've written have explicitly internalized this, since it's an opportunity for a big performance win and users are unlikely to do it right.\r\n\r\nSo should I fix (move to ShaderMaterial, fix comments, etc) or just kill this PR?","created_at":"2017-04-25T22:43:11.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11162#issuecomment-297186398","id":297186398,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11162","node_id":"MDEyOklzc3VlQ29tbWVudDI5NzE4NjM5OA==","updated_at":"2017-04-25T22:43:11.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/297186398","user":{"following_url":"https:\/\/api.github.com\/users\/jcowles\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/jcowles\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/1510114?v=4","url":"https:\/\/api.github.com\/users\/jcowles","gists_url":"https:\/\/api.github.com\/users\/jcowles\/gists{\/gist_id}","html_url":"https:\/\/github.com\/jcowles","subscriptions_url":"https:\/\/api.github.com\/users\/jcowles\/subscriptions","node_id":"MDQ6VXNlcjE1MTAxMTQ=","repos_url":"https:\/\/api.github.com\/users\/jcowles\/repos","received_events_url":"https:\/\/api.github.com\/users\/jcowles\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/jcowles\/starred{\/owner}{\/repo}","site_admin":false,"login":"jcowles","type":"User","id":1510114,"followers_url":"https:\/\/api.github.com\/users\/jcowles\/followers","organizations_url":"https:\/\/api.github.com\/users\/jcowles\/orgs"}},{"index":25,"author_association":"COLLABORATOR","body":"@jcowles I agree with you that there is something to be said for following Unity's lead. Thing is, there has yet to be a demand for pushing these particular inverse matrices to the GPU.\r\n\r\nEven so, we are trying to propose a flexible solution that accommodates your use case.\r\n\r\nI think `onBeforeRender` is that solution, and I think your use case is a perfect example of how the method can be beneficial.\r\n","created_at":"2017-04-26T00:02:36.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11162#issuecomment-297199553","id":297199553,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11162","node_id":"MDEyOklzc3VlQ29tbWVudDI5NzE5OTU1Mw==","updated_at":"2017-04-26T00:02:36.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/297199553","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":26,"author_association":"CONTRIBUTOR","body":"I would keep stabbing at this. Code definitely helps us half autistic dorks communicate :D \r\nI think it was kinda hard to understand your use case until you made the pull request. I also find it hard to navigate three's core. I've been poking through these classes recently but I don't know off the top of my head if your thing can be achieved the way it's been proposed here. \r\n\r\nMy understanding is that three favors some magic for ease of use *(first thing that pops to mind are gpu uploads that happen the first time `render()` encounters a new object)* but also flexibility *(exposing the necessary hooks for you to extend three)*. It's not the most optimized library, but this is a very fine balance. \r\nI'm totally in favor of borrowing ideas from other engines. Look up `onBeforeRender`'s history to see how tricky it may be to push something like this :) . The concept is totally borrowed from Unity's `onWillRenderObject` and such events. I wanted to do an `onWillUpdate` but i found it tricky the way three handles the updates as is. \r\n\r\nWith all of that being said, something that alters the core like this should probably be discussed well. \r\n\r\nWhat i think i learned from this conversation is that the `modelViewMatrix` is automagically computed under the hood, and that it isn't accessible for further computation, when needed. There is a valid use case, (computing some other matrix from this matrix), and while the current system gives you a convenient hook to write your logic and pass it to the shader, it requires a heavy matrix operation to be done twice (you'd do it once explicitly, but you can't prevent the renderer from doing it again). \r\n\r\nWhat you may have learned is that there is already a pattern in place for checking if a matrix is dirty or if the renderer should update it at all (`autoUpdate` and `needsUpdate` i think). So your approach may be adjusted. Also probably a bit about the materials that completely abstract any GLSL, and the two different GLSL apis that three has. \r\n\r\nMy suggestion would be to still rely on the `onBeforeRender` hook ( is this how you would handle it in unity, by using [Update()](https:\/\/docs.unity3d.com\/ScriptReference\/MonoBehaviour.Update.html)?) but with the `modelViewMatrix` that's updated only when needed?\r\n\r\n\r\n\r\n","created_at":"2017-04-26T01:36:49.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11162#issuecomment-297212655","id":297212655,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11162","node_id":"MDEyOklzc3VlQ29tbWVudDI5NzIxMjY1NQ==","updated_at":"2017-04-26T01:40:32.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/297212655","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":27,"author_association":"NONE","body":"@WestLangley yes, \"that's a niche use case,\" is a totally valid argument -- if that were the initial response, I would have actually dropped this right at the start.\r\n\r\nBut I am curious, why are you opposed to making it an opt-in core feature?","created_at":"2017-04-26T03:10:36.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11162#issuecomment-297225225","id":297225225,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11162","node_id":"MDEyOklzc3VlQ29tbWVudDI5NzIyNTIyNQ==","updated_at":"2017-04-26T03:10:36.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/297225225","user":{"following_url":"https:\/\/api.github.com\/users\/jcowles\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/jcowles\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/1510114?v=4","url":"https:\/\/api.github.com\/users\/jcowles","gists_url":"https:\/\/api.github.com\/users\/jcowles\/gists{\/gist_id}","html_url":"https:\/\/github.com\/jcowles","subscriptions_url":"https:\/\/api.github.com\/users\/jcowles\/subscriptions","node_id":"MDQ6VXNlcjE1MTAxMTQ=","repos_url":"https:\/\/api.github.com\/users\/jcowles\/repos","received_events_url":"https:\/\/api.github.com\/users\/jcowles\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/jcowles\/starred{\/owner}{\/repo}","site_admin":false,"login":"jcowles","type":"User","id":1510114,"followers_url":"https:\/\/api.github.com\/users\/jcowles\/followers","organizations_url":"https:\/\/api.github.com\/users\/jcowles\/orgs"}},{"index":28,"author_association":"NONE","body":"@pailhead I'm glad we're starting to understand each other :) \r\n\r\nI'll hack up the onBeforeRender approach and see how it works, though I'm pretty strapped for time currently. I'm still more in favor of what I'm proposing, but you and @WestLangley are right, I should definitely give it a try, look at the resulting code, and run some profiles.","created_at":"2017-04-26T03:17:58.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11162#issuecomment-297226163","id":297226163,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11162","node_id":"MDEyOklzc3VlQ29tbWVudDI5NzIyNjE2Mw==","updated_at":"2017-04-26T03:17:58.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/297226163","user":{"following_url":"https:\/\/api.github.com\/users\/jcowles\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/jcowles\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/1510114?v=4","url":"https:\/\/api.github.com\/users\/jcowles","gists_url":"https:\/\/api.github.com\/users\/jcowles\/gists{\/gist_id}","html_url":"https:\/\/github.com\/jcowles","subscriptions_url":"https:\/\/api.github.com\/users\/jcowles\/subscriptions","node_id":"MDQ6VXNlcjE1MTAxMTQ=","repos_url":"https:\/\/api.github.com\/users\/jcowles\/repos","received_events_url":"https:\/\/api.github.com\/users\/jcowles\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/jcowles\/starred{\/owner}{\/repo}","site_admin":false,"login":"jcowles","type":"User","id":1510114,"followers_url":"https:\/\/api.github.com\/users\/jcowles\/followers","organizations_url":"https:\/\/api.github.com\/users\/jcowles\/orgs"}},{"index":29,"author_association":"CONTRIBUTOR","body":"@jcowles Here is what I did to get a couple of matrices via `onBeforeRender ` https:\/\/github.com\/arose\/ngl\/blob\/master\/src\/viewer\/viewer.js#L48-L129\r\n\r\nWhen there would be a callback after `setProgram` is called in the `WebGLRenderer` then  you could avoid the call to `gl.useProgram( p.program );` and the calculation of the `object.modelViewMatrix`.","created_at":"2017-04-26T03:37:47.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11162#issuecomment-297228575","id":297228575,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11162","node_id":"MDEyOklzc3VlQ29tbWVudDI5NzIyODU3NQ==","updated_at":"2017-04-26T03:37:47.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/297228575","user":{"following_url":"https:\/\/api.github.com\/users\/arose\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/arose\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/272250?v=4","url":"https:\/\/api.github.com\/users\/arose","gists_url":"https:\/\/api.github.com\/users\/arose\/gists{\/gist_id}","html_url":"https:\/\/github.com\/arose","subscriptions_url":"https:\/\/api.github.com\/users\/arose\/subscriptions","node_id":"MDQ6VXNlcjI3MjI1MA==","repos_url":"https:\/\/api.github.com\/users\/arose\/repos","received_events_url":"https:\/\/api.github.com\/users\/arose\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/arose\/starred{\/owner}{\/repo}","site_admin":false,"login":"arose","type":"User","id":272250,"followers_url":"https:\/\/api.github.com\/users\/arose\/followers","organizations_url":"https:\/\/api.github.com\/users\/arose\/orgs"}}]}