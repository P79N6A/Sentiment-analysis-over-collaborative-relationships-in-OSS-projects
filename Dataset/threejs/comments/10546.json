{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"COLLABORATOR","body":"`Geometry` supports per-face UVs.\r\n\r\n`BufferGeometry` supports only one UV per vertex, so on a seam with discontinuous UVs, the vertex will have to be duplicated.\r\n\r\nThe loaders are being modified to return `BufferGeometry`.\r\n\r\n>Wanted to open a dialogue about this and determine the best way to approach this issue.\r\n\r\nCan you please explain your use case, and what, exactly, is the problem you are facing?","created_at":"2017-01-10T18:12:55.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/10546#issuecomment-271652716","id":271652716,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10546","node_id":"MDEyOklzc3VlQ29tbWVudDI3MTY1MjcxNg==","updated_at":"2017-01-10T18:12:55.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/271652716","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":1,"author_association":"CONTRIBUTOR","body":"Yes, so in our project we're currently in the process of UV-unwrapping and texturing our models for use in a three.js engine (which is why I've been pretty involved in the `FBXLoader.js` file).  When we unwrap the geometry, obviously there are seams that are present.  When the FBX with the UVs gets exported, Maya labels UVs on a per face-vertex basis.  This makes sense so that you don't interpolate all the colors in a texture between seams.  But since the FBXLoader currently only stores one UV per vertex, this means that one of the two UVs at a seam is chosen, and it causes one of the faces sharing that seam to have to interpolate colors between the two UVs.  The best example can actually be seen with the three.js fbx example: \r\n<img width=\"713\" alt=\"screen shot 2017-01-09 at 3 44 26 pm\" src=\"https:\/\/cloud.githubusercontent.com\/assets\/22209051\/21822010\/943226f6-d743-11e6-8366-1c1cad67674c.png\">\r\nThe yellow behind the neck is actually part of the leg texture.  This is because we can't sow seams together because each vertex is only allowed one UV, so the loader interpolates colors between the top of the back and the bottom of the neck, which happens to contain the leg UV\r\n<img width=\"513\" alt=\"screen shot 2017-01-10 at 2 50 35 pm\" src=\"https:\/\/cloud.githubusercontent.com\/assets\/22209051\/21822177\/2f43dffe-d744-11e6-8fcf-85fd901fece0.png\">\r\nSo in order to avoid this, we need UVs to be stored on a per-face per-vertex structure, rather than only on a per-vertex.  But if the loaders are only generating `BufferGeometry` which doesn't allow for this structure, then we can't avoid this from happening without duplicating vertices.","created_at":"2017-01-10T19:53:02.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/10546#issuecomment-271679634","id":271679634,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10546","node_id":"MDEyOklzc3VlQ29tbWVudDI3MTY3OTYzNA==","updated_at":"2017-01-10T19:56:14.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/271679634","user":{"following_url":"https:\/\/api.github.com\/users\/Kyle-Larson\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Kyle-Larson\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/22209051?v=4","url":"https:\/\/api.github.com\/users\/Kyle-Larson","gists_url":"https:\/\/api.github.com\/users\/Kyle-Larson\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Kyle-Larson","subscriptions_url":"https:\/\/api.github.com\/users\/Kyle-Larson\/subscriptions","node_id":"MDQ6VXNlcjIyMjA5MDUx","repos_url":"https:\/\/api.github.com\/users\/Kyle-Larson\/repos","received_events_url":"https:\/\/api.github.com\/users\/Kyle-Larson\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Kyle-Larson\/starred{\/owner}{\/repo}","site_admin":false,"login":"Kyle-Larson","type":"User","id":22209051,"followers_url":"https:\/\/api.github.com\/users\/Kyle-Larson\/followers","organizations_url":"https:\/\/api.github.com\/users\/Kyle-Larson\/orgs"}},{"index":2,"author_association":"COLLABORATOR","body":"Thanks for the additional detail. I think everything you say is true.\r\n\r\nIt appears in the example that `FBXLoader` is instantiating a temporary `BufferGeometry` and converting it to `Geometry` -- which is then, of course, converted back to `BufferGeometry` by the renderer.\r\n\r\nIt seems there is room for improvement in that regard.\r\n","created_at":"2017-01-10T20:41:23.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/10546#issuecomment-271691768","id":271691768,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10546","node_id":"MDEyOklzc3VlQ29tbWVudDI3MTY5MTc2OA==","updated_at":"2017-01-10T20:41:23.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/271691768","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":3,"author_association":"CONTRIBUTOR","body":"So does it make sense to make the `FBXLoader` skip creating a `BufferGeometry` and just create `Geometry` with the Per-Face data being applied per face, since the renderer will convert it back into a `BufferGeometry`?  I've heard talks of just directly using `BufferGeometry` and avoiding use of `Geometry`, but I wasn't sure what the verdict on that was.","created_at":"2017-01-10T20:54:35.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/10546#issuecomment-271694975","id":271694975,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10546","node_id":"MDEyOklzc3VlQ29tbWVudDI3MTY5NDk3NQ==","updated_at":"2017-01-10T20:54:35.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/271694975","user":{"following_url":"https:\/\/api.github.com\/users\/Kyle-Larson\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Kyle-Larson\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/22209051?v=4","url":"https:\/\/api.github.com\/users\/Kyle-Larson","gists_url":"https:\/\/api.github.com\/users\/Kyle-Larson\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Kyle-Larson","subscriptions_url":"https:\/\/api.github.com\/users\/Kyle-Larson\/subscriptions","node_id":"MDQ6VXNlcjIyMjA5MDUx","repos_url":"https:\/\/api.github.com\/users\/Kyle-Larson\/repos","received_events_url":"https:\/\/api.github.com\/users\/Kyle-Larson\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Kyle-Larson\/starred{\/owner}{\/repo}","site_admin":false,"login":"Kyle-Larson","type":"User","id":22209051,"followers_url":"https:\/\/api.github.com\/users\/Kyle-Larson\/followers","organizations_url":"https:\/\/api.github.com\/users\/Kyle-Larson\/orgs"}},{"index":4,"author_association":"COLLABORATOR","body":"It makes sense to skip `Geometry` and return `BufferGeometry`. The loader should be considerably faster on large datasets, for one thing.\r\n\r\nYou can return indexed, or non-indexed, `BufferGeometry` -- your choice.","created_at":"2017-01-10T21:11:37.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/10546#issuecomment-271699229","id":271699229,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10546","node_id":"MDEyOklzc3VlQ29tbWVudDI3MTY5OTIyOQ==","updated_at":"2017-01-10T21:11:37.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/271699229","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":5,"author_association":"CONTRIBUTOR","body":"> You can return indexed, or non-indexed, `BufferGeometry` -- your choice.\r\n\r\nSo duplicate vertices in the buffer that have different UVs depending on the face?  I'll probably have to re-do a lot of the logic behind indexing the buffer and assigning UVs \/ Normals to the geometry, but it's doable.\r\n\r\nAnd that brings up the question of what to do about Vertex normals.  We can either blend them for each vertex, choose only one of the normals, or duplicate the vertex if it has different normals per face.  If we duplicate, we're likely to copy vertices to the point of having double or triple the number of vertices, in which case we might be better off just going non-indexed.","created_at":"2017-01-10T21:25:48.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/10546#issuecomment-271702722","id":271702722,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10546","node_id":"MDEyOklzc3VlQ29tbWVudDI3MTcwMjcyMg==","updated_at":"2017-01-10T21:26:05.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/271702722","user":{"following_url":"https:\/\/api.github.com\/users\/Kyle-Larson\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Kyle-Larson\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/22209051?v=4","url":"https:\/\/api.github.com\/users\/Kyle-Larson","gists_url":"https:\/\/api.github.com\/users\/Kyle-Larson\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Kyle-Larson","subscriptions_url":"https:\/\/api.github.com\/users\/Kyle-Larson\/subscriptions","node_id":"MDQ6VXNlcjIyMjA5MDUx","repos_url":"https:\/\/api.github.com\/users\/Kyle-Larson\/repos","received_events_url":"https:\/\/api.github.com\/users\/Kyle-Larson\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Kyle-Larson\/starred{\/owner}{\/repo}","site_admin":false,"login":"Kyle-Larson","type":"User","id":22209051,"followers_url":"https:\/\/api.github.com\/users\/Kyle-Larson\/followers","organizations_url":"https:\/\/api.github.com\/users\/Kyle-Larson\/orgs"}},{"index":6,"author_association":"COLLABORATOR","body":">So duplicate vertices in the buffer that have different UVs depending on the face?\r\n\r\nYou have to duplicate the vertices in the buffer that differ on _any_ attribute, not just UVs.\r\n\r\n>might be better off just going non-indexed\r\n\r\nYes, that should get you to working code more quickly.","created_at":"2017-01-10T21:52:51.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/10546#issuecomment-271709615","id":271709615,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10546","node_id":"MDEyOklzc3VlQ29tbWVudDI3MTcwOTYxNQ==","updated_at":"2017-01-10T21:52:51.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/271709615","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":7,"author_association":"CONTRIBUTOR","body":"> It makes sense to skip Geometry and return BufferGeometry. The loader should be considerably faster on large datasets, for one thing.\r\n\r\nfor another thing, you are forcing each and every loader to implement the same logic that used to be handled by old geometry.","created_at":"2017-01-11T16:38:19.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/10546#issuecomment-271919766","id":271919766,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10546","node_id":"MDEyOklzc3VlQ29tbWVudDI3MTkxOTc2Ng==","updated_at":"2017-01-11T16:38:19.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/271919766","user":{"following_url":"https:\/\/api.github.com\/users\/makc\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/makc\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/242577?v=4","url":"https:\/\/api.github.com\/users\/makc","gists_url":"https:\/\/api.github.com\/users\/makc\/gists{\/gist_id}","html_url":"https:\/\/github.com\/makc","subscriptions_url":"https:\/\/api.github.com\/users\/makc\/subscriptions","node_id":"MDQ6VXNlcjI0MjU3Nw==","repos_url":"https:\/\/api.github.com\/users\/makc\/repos","received_events_url":"https:\/\/api.github.com\/users\/makc\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/makc\/starred{\/owner}{\/repo}","site_admin":false,"login":"makc","type":"User","id":242577,"followers_url":"https:\/\/api.github.com\/users\/makc\/followers","organizations_url":"https:\/\/api.github.com\/users\/makc\/orgs"}},{"index":8,"author_association":"CONTRIBUTOR","body":">for another thing, you are forcing each and every loader to implement the same logic that used to be handled by old geometry.\r\n\r\nYeah, makes sense.  So I'll work on updating the FBX loader to exclusively use `BufferGeometry` non-indexed so that we can get per-face UVs, normals, etc.","created_at":"2017-01-11T17:38:13.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/10546#issuecomment-271936806","id":271936806,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10546","node_id":"MDEyOklzc3VlQ29tbWVudDI3MTkzNjgwNg==","updated_at":"2017-01-11T17:38:30.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/271936806","user":{"following_url":"https:\/\/api.github.com\/users\/Kyle-Larson\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Kyle-Larson\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/22209051?v=4","url":"https:\/\/api.github.com\/users\/Kyle-Larson","gists_url":"https:\/\/api.github.com\/users\/Kyle-Larson\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Kyle-Larson","subscriptions_url":"https:\/\/api.github.com\/users\/Kyle-Larson\/subscriptions","node_id":"MDQ6VXNlcjIyMjA5MDUx","repos_url":"https:\/\/api.github.com\/users\/Kyle-Larson\/repos","received_events_url":"https:\/\/api.github.com\/users\/Kyle-Larson\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Kyle-Larson\/starred{\/owner}{\/repo}","site_admin":false,"login":"Kyle-Larson","type":"User","id":22209051,"followers_url":"https:\/\/api.github.com\/users\/Kyle-Larson\/followers","organizations_url":"https:\/\/api.github.com\/users\/Kyle-Larson\/orgs"}},{"index":9,"author_association":"CONTRIBUTOR","body":"I was addressing that to @WestLangley and the team. they are pushing too hard for buffergeometry, imho, where they maybe could just refactor geometry better.","created_at":"2017-01-11T18:24:45.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/10546#issuecomment-271951743","id":271951743,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10546","node_id":"MDEyOklzc3VlQ29tbWVudDI3MTk1MTc0Mw==","updated_at":"2017-01-11T18:24:45.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/271951743","user":{"following_url":"https:\/\/api.github.com\/users\/makc\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/makc\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/242577?v=4","url":"https:\/\/api.github.com\/users\/makc","gists_url":"https:\/\/api.github.com\/users\/makc\/gists{\/gist_id}","html_url":"https:\/\/github.com\/makc","subscriptions_url":"https:\/\/api.github.com\/users\/makc\/subscriptions","node_id":"MDQ6VXNlcjI0MjU3Nw==","repos_url":"https:\/\/api.github.com\/users\/makc\/repos","received_events_url":"https:\/\/api.github.com\/users\/makc\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/makc\/starred{\/owner}{\/repo}","site_admin":false,"login":"makc","type":"User","id":242577,"followers_url":"https:\/\/api.github.com\/users\/makc\/followers","organizations_url":"https:\/\/api.github.com\/users\/makc\/orgs"}},{"index":10,"author_association":"CONTRIBUTOR","body":">they maybe could just refactor geometry better.\r\n\r\nI agree on the idea that logic for converting `Geometry` into `BufferGeometry` that would be needed to be implemented by every loader should be extracted and made into its own utility or something.  Either via refactoring `Geometry` itself or just creating some sort of geometry utility, but as long as the user doesn't want to directly manipulate the faces of the geometry after loading the geometry, it makes sense to return `BufferGeometry` from the loaders and not pay conversion costs outside of the loaders.","created_at":"2017-01-11T19:04:55.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/10546#issuecomment-271962983","id":271962983,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10546","node_id":"MDEyOklzc3VlQ29tbWVudDI3MTk2Mjk4Mw==","updated_at":"2017-01-11T19:04:55.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/271962983","user":{"following_url":"https:\/\/api.github.com\/users\/Kyle-Larson\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Kyle-Larson\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/22209051?v=4","url":"https:\/\/api.github.com\/users\/Kyle-Larson","gists_url":"https:\/\/api.github.com\/users\/Kyle-Larson\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Kyle-Larson","subscriptions_url":"https:\/\/api.github.com\/users\/Kyle-Larson\/subscriptions","node_id":"MDQ6VXNlcjIyMjA5MDUx","repos_url":"https:\/\/api.github.com\/users\/Kyle-Larson\/repos","received_events_url":"https:\/\/api.github.com\/users\/Kyle-Larson\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Kyle-Larson\/starred{\/owner}{\/repo}","site_admin":false,"login":"Kyle-Larson","type":"User","id":22209051,"followers_url":"https:\/\/api.github.com\/users\/Kyle-Larson\/followers","organizations_url":"https:\/\/api.github.com\/users\/Kyle-Larson\/orgs"}},{"index":11,"author_association":"CONTRIBUTOR","body":"Issue resolved with new FBX loader ( #10588 ).","created_at":"2017-01-24T17:15:59.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/10546#issuecomment-274871641","id":274871641,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10546","node_id":"MDEyOklzc3VlQ29tbWVudDI3NDg3MTY0MQ==","updated_at":"2017-01-24T17:15:59.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/274871641","user":{"following_url":"https:\/\/api.github.com\/users\/Kyle-Larson\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Kyle-Larson\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/22209051?v=4","url":"https:\/\/api.github.com\/users\/Kyle-Larson","gists_url":"https:\/\/api.github.com\/users\/Kyle-Larson\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Kyle-Larson","subscriptions_url":"https:\/\/api.github.com\/users\/Kyle-Larson\/subscriptions","node_id":"MDQ6VXNlcjIyMjA5MDUx","repos_url":"https:\/\/api.github.com\/users\/Kyle-Larson\/repos","received_events_url":"https:\/\/api.github.com\/users\/Kyle-Larson\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Kyle-Larson\/starred{\/owner}{\/repo}","site_admin":false,"login":"Kyle-Larson","type":"User","id":22209051,"followers_url":"https:\/\/api.github.com\/users\/Kyle-Larson\/followers","organizations_url":"https:\/\/api.github.com\/users\/Kyle-Larson\/orgs"}}]}