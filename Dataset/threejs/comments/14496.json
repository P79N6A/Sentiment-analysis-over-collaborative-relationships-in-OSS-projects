{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"COLLABORATOR","body":"I vote for this change. Unity also respects the parent transformation when using `lookAt()`.","created_at":"2018-07-18T14:09:33.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14496#issuecomment-405944292","id":405944292,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14496","node_id":"MDEyOklzc3VlQ29tbWVudDQwNTk0NDI5Mg==","updated_at":"2018-07-18T14:11:41.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/405944292","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":1,"author_association":"COLLABORATOR","body":"BTW: Cool fiddle \ud83d\ude0a ","created_at":"2018-07-18T14:34:56.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14496#issuecomment-405953038","id":405953038,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14496","node_id":"MDEyOklzc3VlQ29tbWVudDQwNTk1MzAzOA==","updated_at":"2018-07-18T14:34:56.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/405953038","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":2,"author_association":"CONTRIBUTOR","body":">Thoughts?\r\n\r\n\r\n```javascript\r\nconst myVec = new THREE.Vector3()\r\nconst myNode = new THREE.Object3D()\r\n\r\nmyNode.updateMatrixWorld()\r\nmyNode.localToWorld(myVec)\r\n\r\nthing.lookAt(myVec)\r\n```\r\n\r\nWith the `localToWorld` this limitation is not so far detached from the scene graph. Personally, i would maybe avoid overloading `lookAt` and do `lookAtNode`, i believe this conversation was had in the past. \r\n","created_at":"2018-07-19T21:18:04.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14496#issuecomment-406417444","id":406417444,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14496","node_id":"MDEyOklzc3VlQ29tbWVudDQwNjQxNzQ0NA==","updated_at":"2018-07-19T21:18:04.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/406417444","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":3,"author_association":"CONTRIBUTOR","body":"I'm just going by pretty much every other 3D engine except three.js.  There's matrix lookAt which is of course the standard function. Then there's scene graph lookAt which in 3DSMax, Maya, Unity, Unreal, and most other engines do take the position in the scene graph into account.  It really doesn't seem to make sense for scene graph functions not to work with the scene graph. In other words. `THREE.Matrix4.lookAt` deals with matrices. `THREE.Object3D.lookAt` deals with the scene graph. So you already have 2 functions, one for each case.\r\n\r\n\r\n","created_at":"2018-07-20T01:09:44.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14496#issuecomment-406458982","id":406458982,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14496","node_id":"MDEyOklzc3VlQ29tbWVudDQwNjQ1ODk4Mg==","updated_at":"2018-07-20T01:10:16.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/406458982","user":{"following_url":"https:\/\/api.github.com\/users\/greggman\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/greggman\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/234804?v=4","url":"https:\/\/api.github.com\/users\/greggman","gists_url":"https:\/\/api.github.com\/users\/greggman\/gists{\/gist_id}","html_url":"https:\/\/github.com\/greggman","subscriptions_url":"https:\/\/api.github.com\/users\/greggman\/subscriptions","node_id":"MDQ6VXNlcjIzNDgwNA==","repos_url":"https:\/\/api.github.com\/users\/greggman\/repos","received_events_url":"https:\/\/api.github.com\/users\/greggman\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/greggman\/starred{\/owner}{\/repo}","site_admin":false,"login":"greggman","type":"User","id":234804,"followers_url":"https:\/\/api.github.com\/users\/greggman\/followers","organizations_url":"https:\/\/api.github.com\/users\/greggman\/orgs"}},{"index":4,"author_association":"COLLABORATOR","body":"@greggman Don't worry, this will be fixed. It is going to have to be implemented in conjunction with some additional changes to ensure matrix updates during graph traversal are efficient.","created_at":"2018-07-20T01:40:56.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14496#issuecomment-406463490","id":406463490,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14496","node_id":"MDEyOklzc3VlQ29tbWVudDQwNjQ2MzQ5MA==","updated_at":"2018-07-20T01:40:56.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/406463490","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":5,"author_association":"CONTRIBUTOR","body":"Does it need to wait for faster graph traversal? If I understand correctly the PR above won't really add any perf regressions for use cases that are already in use. So, for people that start using it for new uses cases their code might be a little slow (though again this is not generally something called 1000s a times a frame) and then, as the graph traversal stuff is updated it will just get faster for them. My point being I'm not sure why this feature needs to be gated on other things getter faster.","created_at":"2018-07-20T06:23:37.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14496#issuecomment-406501034","id":406501034,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14496","node_id":"MDEyOklzc3VlQ29tbWVudDQwNjUwMTAzNA==","updated_at":"2018-07-20T08:46:46.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/406501034","user":{"following_url":"https:\/\/api.github.com\/users\/greggman\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/greggman\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/234804?v=4","url":"https:\/\/api.github.com\/users\/greggman","gists_url":"https:\/\/api.github.com\/users\/greggman\/gists{\/gist_id}","html_url":"https:\/\/github.com\/greggman","subscriptions_url":"https:\/\/api.github.com\/users\/greggman\/subscriptions","node_id":"MDQ6VXNlcjIzNDgwNA==","repos_url":"https:\/\/api.github.com\/users\/greggman\/repos","received_events_url":"https:\/\/api.github.com\/users\/greggman\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/greggman\/starred{\/owner}{\/repo}","site_admin":false,"login":"greggman","type":"User","id":234804,"followers_url":"https:\/\/api.github.com\/users\/greggman\/followers","organizations_url":"https:\/\/api.github.com\/users\/greggman\/orgs"}},{"index":6,"author_association":"COLLABORATOR","body":"> with some additional changes to ensure matrix updates during graph traversal are efficient.\r\n\r\n@WestLangley are you talking about #14138?  ","created_at":"2018-07-20T07:34:04.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14496#issuecomment-406514687","id":406514687,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14496","node_id":"MDEyOklzc3VlQ29tbWVudDQwNjUxNDY4Nw==","updated_at":"2018-07-20T07:34:04.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/406514687","user":{"following_url":"https:\/\/api.github.com\/users\/looeee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/looeee\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/5307958?v=4","url":"https:\/\/api.github.com\/users\/looeee","gists_url":"https:\/\/api.github.com\/users\/looeee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/looeee","subscriptions_url":"https:\/\/api.github.com\/users\/looeee\/subscriptions","node_id":"MDQ6VXNlcjUzMDc5NTg=","repos_url":"https:\/\/api.github.com\/users\/looeee\/repos","received_events_url":"https:\/\/api.github.com\/users\/looeee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/looeee\/starred{\/owner}{\/repo}","site_admin":false,"login":"looeee","type":"User","id":5307958,"followers_url":"https:\/\/api.github.com\/users\/looeee\/followers","organizations_url":"https:\/\/api.github.com\/users\/looeee\/orgs"}},{"index":7,"author_association":"COLLABORATOR","body":"> Does it need to wait for faster graph traversal? \r\n\r\nFrom my point of view, no.","created_at":"2018-07-20T09:30:19.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14496#issuecomment-406544636","id":406544636,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14496","node_id":"MDEyOklzc3VlQ29tbWVudDQwNjU0NDYzNg==","updated_at":"2018-07-21T09:41:45.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/406544636","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":8,"author_association":"CONTRIBUTOR","body":">There's matrix lookAt which is of course the standard function. Then there's scene graph lookAt...\r\n\r\nThis is actually a great point. `SceneNode.lookAt()` should probably look at another scene node. The `Matrix4` one makes sense to look at a vector. ","created_at":"2018-07-20T17:10:19.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14496#issuecomment-406665497","id":406665497,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14496","node_id":"MDEyOklzc3VlQ29tbWVudDQwNjY2NTQ5Nw==","updated_at":"2018-07-20T17:10:19.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/406665497","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":9,"author_association":"COLLABORATOR","body":"> If I understand correctly the PR above won't really add any perf regressions for use cases that are already in use.\r\n\r\nI claim it will, if it is implemented as in your example. Every scene node, except the scene itself, has a parent.\r\n\r\n>@WestLangley are you talking about #14138?\r\n\r\nNo. The problem is that `Object3D.updateMatrixWorld()` does not properly update the world matrix of the object because it traverses the children instead of the parents. It does not do what its name implies it does.\r\n\r\nThis new `lookAt()` feature will rely on either the correct implementation of that method, or the implementation of another method to be used in its place.","created_at":"2018-07-21T03:08:47.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14496#issuecomment-406766433","id":406766433,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14496","node_id":"MDEyOklzc3VlQ29tbWVudDQwNjc2NjQzMw==","updated_at":"2018-07-21T03:08:47.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/406766433","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":10,"author_association":"CONTRIBUTOR","body":"any progress on this? I really like to use it \ud83d\ude1c  Of course I can do it in my own code but would love to be able use a built in solution.\r\n\r\nDoes the solution need to be perfect today? `lookAt` is unlikely to be called 100s of times per frame so even an inefficient solution is better than non since `lookAt` can't be used much today because of its limitations. \r\n\r\n>> If I understand correctly the PR above won't really add any perf regressions for use cases that are already in use.\r\n>\r\n> I claim it will, if it is implemented as in your example. Every scene node, except the scene itself, has a parent.\r\n\r\nMy point wasn't there are zero perf regressions, my point is they are unimportant. Because `lookAt` is not that useful today no one is calling it 100s of times a frame. They are likely calling it just once for their one camera so in the scheme of all of their code their code will get 0.0001% slower. In other words this doesn't have to wait for a perfect solution (whatever that happens to be).","created_at":"2018-08-27T08:58:48.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14496#issuecomment-416162068","id":416162068,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14496","node_id":"MDEyOklzc3VlQ29tbWVudDQxNjE2MjA2OA==","updated_at":"2018-08-27T08:58:48.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/416162068","user":{"following_url":"https:\/\/api.github.com\/users\/greggman\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/greggman\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/234804?v=4","url":"https:\/\/api.github.com\/users\/greggman","gists_url":"https:\/\/api.github.com\/users\/greggman\/gists{\/gist_id}","html_url":"https:\/\/github.com\/greggman","subscriptions_url":"https:\/\/api.github.com\/users\/greggman\/subscriptions","node_id":"MDQ6VXNlcjIzNDgwNA==","repos_url":"https:\/\/api.github.com\/users\/greggman\/repos","received_events_url":"https:\/\/api.github.com\/users\/greggman\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/greggman\/starred{\/owner}{\/repo}","site_admin":false,"login":"greggman","type":"User","id":234804,"followers_url":"https:\/\/api.github.com\/users\/greggman\/followers","organizations_url":"https:\/\/api.github.com\/users\/greggman\/orgs"}},{"index":11,"author_association":"COLLABORATOR","body":">any progress on this? \r\n\r\n#14517 has been available for a month. See if it works for you.","created_at":"2018-08-27T19:04:18.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14496#issuecomment-416333269","id":416333269,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14496","node_id":"MDEyOklzc3VlQ29tbWVudDQxNjMzMzI2OQ==","updated_at":"2018-08-27T19:04:18.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/416333269","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}}]}