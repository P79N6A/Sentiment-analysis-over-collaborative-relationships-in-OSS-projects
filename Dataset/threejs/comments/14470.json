{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"COLLABORATOR","body":"I'm a bit hesitant about merging this for a couple reasons:\r\n\r\n(1) So far it's a fairly application-specific extension. I can imagine it being useful to others, but it's early at this point, and there are other ways to approach \"responsive\" 3D models.\r\n(2) This functionality can be bypassed by using separate unlit and PBR assets, which might have different poly counts etc., so lack of this extension isn't blocking user goals.\r\n(3) This is very much the type of extension that I'd like for users to be able to implement themselves, without modifications to GLTFLoader. See https:\/\/github.com\/mrdoob\/three.js\/issues\/11682 for some previous discussion. For example, we could provide a `lazy` property to the loader to prevent downloading anything up front except the raw JSON, and then return a parser so users can request pieces of the glTF asset a la cart:\r\n\r\n```\r\nvar loader = new THREE.GLTFLoader();\r\nloader.lazy = true;\r\nloader.load('foo.gltf', function ( gltf ) {\r\n  json = gltf.json;\r\n  var myExtension = gltf.json.extensions.MOZ_foo;\r\n  \/\/ ... traverse the JSON doing stuff with custom extensions\r\n  var material = gltf.parser.getDependency( 'material', myExtension.myMaterialIndex );\r\n  var mesh = gltf.parser.getDependency( 'mesh', myExtension.myMeshIndex );\r\n});\r\n```\r\n\r\nOur glTF parser is already set up to work that way, so functionally we're already pretty close.","created_at":"2018-07-17T04:56:31.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14470#issuecomment-405459422","id":405459422,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14470","node_id":"MDEyOklzc3VlQ29tbWVudDQwNTQ1OTQyMg==","updated_at":"2018-07-17T04:56:31.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/405459422","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":1,"author_association":"CONTRIBUTOR","body":"I agree with those points and I like the idea of the lazy API. That option will help us implement a few other modifications we are looking for. I'll try it out and make another PR. Thanks!","created_at":"2018-07-17T18:08:12.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14470#issuecomment-405674696","id":405674696,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14470","node_id":"MDEyOklzc3VlQ29tbWVudDQwNTY3NDY5Ng==","updated_at":"2018-07-17T18:08:12.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/405674696","user":{"following_url":"https:\/\/api.github.com\/users\/robertlong\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/robertlong\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1753624?v=4","url":"https:\/\/api.github.com\/users\/robertlong","gists_url":"https:\/\/api.github.com\/users\/robertlong\/gists{\/gist_id}","html_url":"https:\/\/github.com\/robertlong","subscriptions_url":"https:\/\/api.github.com\/users\/robertlong\/subscriptions","node_id":"MDQ6VXNlcjE3NTM2MjQ=","repos_url":"https:\/\/api.github.com\/users\/robertlong\/repos","received_events_url":"https:\/\/api.github.com\/users\/robertlong\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/robertlong\/starred{\/owner}{\/repo}","site_admin":false,"login":"robertlong","type":"User","id":1753624,"followers_url":"https:\/\/api.github.com\/users\/robertlong\/followers","organizations_url":"https:\/\/api.github.com\/users\/robertlong\/orgs"}}]}