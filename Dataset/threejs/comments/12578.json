{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"CONTRIBUTOR","body":"\/ping @mrdoob So what is your opinion ?","created_at":"2017-11-12T01:04:56.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12578#issuecomment-343706118","id":343706118,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12578","node_id":"MDEyOklzc3VlQ29tbWVudDM0MzcwNjExOA==","updated_at":"2017-11-12T01:04:56.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/343706118","user":{"following_url":"https:\/\/api.github.com\/users\/Itee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Itee\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/5276909?v=4","url":"https:\/\/api.github.com\/users\/Itee","gists_url":"https:\/\/api.github.com\/users\/Itee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Itee","subscriptions_url":"https:\/\/api.github.com\/users\/Itee\/subscriptions","node_id":"MDQ6VXNlcjUyNzY5MDk=","repos_url":"https:\/\/api.github.com\/users\/Itee\/repos","received_events_url":"https:\/\/api.github.com\/users\/Itee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Itee\/starred{\/owner}{\/repo}","site_admin":false,"login":"Itee","type":"User","id":5276909,"followers_url":"https:\/\/api.github.com\/users\/Itee\/followers","organizations_url":"https:\/\/api.github.com\/users\/Itee\/orgs"}},{"index":1,"author_association":"OWNER","body":"If we start doing this, it'll be difficult to know where to draw the line of what to check and what not. This is basically fighting against JavaScript. I would rather move to TypeScript than going down this path...","created_at":"2017-11-22T10:49:10.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12578#issuecomment-346314133","id":346314133,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12578","node_id":"MDEyOklzc3VlQ29tbWVudDM0NjMxNDEzMw==","updated_at":"2017-11-22T10:49:10.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/346314133","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":2,"author_association":"CONTRIBUTOR","body":"I not agree with that: \r\n\r\n> This is basically fighting against JavaScript\r\n\r\n because currently it is: \r\n\r\n> Fighting against Three because i don't know what and where it is wrong in my code. And the error i got is completely out of place. (Ex: The \"position\" attribute is likely to have NaN values.)\r\n\r\nLot of the biggest libraries in JavaScript already use this type of assert in development environment to help their developers. If the biggest think it's a good solution maybe it's a good solution ?\r\n\r\nAnd i know your aversion about TypeScript so...\r\n\r\n**What can we propose to the developers to help them to know what mistake they do, and prevent them to search during hours an error that could easily be catch with a simply assert against parameters ?**\r\n\r\nI see 3-4 options:\r\n\r\n- Add asserts like i propose, with good performance in dev, a performance gain in prod, based on a contract about which could be like null, undefined and the type.\r\n- Use TypeScript\r\n- Use Flow\r\n- Do nothing and continue in this wrong way\r\n\r\nSo please, tell me what can we do ? Have you a better solution about this concern ?\r\n","created_at":"2017-12-21T09:48:38.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12578#issuecomment-353306973","id":353306973,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12578","node_id":"MDEyOklzc3VlQ29tbWVudDM1MzMwNjk3Mw==","updated_at":"2017-12-21T09:48:38.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/353306973","user":{"following_url":"https:\/\/api.github.com\/users\/Itee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Itee\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/5276909?v=4","url":"https:\/\/api.github.com\/users\/Itee","gists_url":"https:\/\/api.github.com\/users\/Itee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Itee","subscriptions_url":"https:\/\/api.github.com\/users\/Itee\/subscriptions","node_id":"MDQ6VXNlcjUyNzY5MDk=","repos_url":"https:\/\/api.github.com\/users\/Itee\/repos","received_events_url":"https:\/\/api.github.com\/users\/Itee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Itee\/starred{\/owner}{\/repo}","site_admin":false,"login":"Itee","type":"User","id":5276909,"followers_url":"https:\/\/api.github.com\/users\/Itee\/followers","organizations_url":"https:\/\/api.github.com\/users\/Itee\/orgs"}},{"index":3,"author_association":"COLLABORATOR","body":"@Itee there is a third path: expect developers to learn how to debug their code properly.\r\n\r\nThis is a vital skill and not actually that hard. Even using the most basic technique of following through the flow of your code and putting in console or debug statements will quickly lead you to the source of the error, then you can see for example that you are passing in the wrong argument to a function, or  that NaN values are being generated and passed as position attributes at this point.\r\n\r\nOf your your options:\r\n\r\n* asserts: if this was done all over the library it would be a considerable increase in code size and complexity and I think probably a performance drop too. Are you aware of any other large JS libraries that use this approach?\r\n* Typescript: I don't really have any strong opinion here, except that it would make three.js less accessible for non TS developers, which is most of the JS community\r\n* Flow: This is non-trivial to set up and puts an nonviable expectation on the development environment that people use \r\n* Do nothing and continue in this ~wrong~ way, expecting people to learn how to debug their code properly \r\n\r\nThe last one seems reasonable to me at least - although I think it should be combined with a strong effort to keep the documentation clear and up to date.","created_at":"2017-12-21T10:16:02.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12578#issuecomment-353313292","id":353313292,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12578","node_id":"MDEyOklzc3VlQ29tbWVudDM1MzMxMzI5Mg==","updated_at":"2017-12-21T10:16:02.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/353313292","user":{"following_url":"https:\/\/api.github.com\/users\/looeee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/looeee\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/5307958?v=4","url":"https:\/\/api.github.com\/users\/looeee","gists_url":"https:\/\/api.github.com\/users\/looeee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/looeee","subscriptions_url":"https:\/\/api.github.com\/users\/looeee\/subscriptions","node_id":"MDQ6VXNlcjUzMDc5NTg=","repos_url":"https:\/\/api.github.com\/users\/looeee\/repos","received_events_url":"https:\/\/api.github.com\/users\/looeee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/looeee\/starred{\/owner}{\/repo}","site_admin":false,"login":"looeee","type":"User","id":5307958,"followers_url":"https:\/\/api.github.com\/users\/looeee\/followers","organizations_url":"https:\/\/api.github.com\/users\/looeee\/orgs"}},{"index":4,"author_association":"CONTRIBUTOR","body":"@looeee It's a beautiful dream ! \ud83d\ude04\r\n\r\nAbout:\r\n\r\n- TypeScript: i totally agree with you\r\n- Flow: totally agree too\r\n- People to learn how to debug: a nice dream\r\n- asserts: If we had a simple assert for all arguments all over the library it will increase the size by maybe 1000-2000 lines (not so big, and only in dev) ? The complexity... I'm not really sure that add an assert will increase the complexity of the code, on the contrary it will clarify the intent, will allow to prove that the function do exactly what it should do using unit test with, and help the dev to understand what is his mistake !\r\n\r\nFinally,\r\n\r\n> Even using the most basic technique of following through the flow of your code and putting in console or debug statements will quickly lead you to the source of the error\r\n\r\nDebug with console is totally insane and time consumer ! Using the debug tool with breakpoints is better, but can take a while, and\/or just be unable to use in case of unreproductible\/random bug. **Instead of got immediately why and where it's broken ???** \r\nAt last, using assert will allow to catch tone of bug that are currently in the library but hidden (IMO: I talk about experience when upgrading base code with this type of protect pattern who raised a ton of bugs. )\r\n\r\nCheck user input on the public interfaces is not a good practice, but a need !\r\n\r\n","created_at":"2017-12-21T11:25:43.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12578#issuecomment-353327706","id":353327706,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12578","node_id":"MDEyOklzc3VlQ29tbWVudDM1MzMyNzcwNg==","updated_at":"2017-12-21T11:25:43.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/353327706","user":{"following_url":"https:\/\/api.github.com\/users\/Itee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Itee\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/5276909?v=4","url":"https:\/\/api.github.com\/users\/Itee","gists_url":"https:\/\/api.github.com\/users\/Itee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Itee","subscriptions_url":"https:\/\/api.github.com\/users\/Itee\/subscriptions","node_id":"MDQ6VXNlcjUyNzY5MDk=","repos_url":"https:\/\/api.github.com\/users\/Itee\/repos","received_events_url":"https:\/\/api.github.com\/users\/Itee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Itee\/starred{\/owner}{\/repo}","site_admin":false,"login":"Itee","type":"User","id":5276909,"followers_url":"https:\/\/api.github.com\/users\/Itee\/followers","organizations_url":"https:\/\/api.github.com\/users\/Itee\/orgs"}},{"index":5,"author_association":"COLLABORATOR","body":"OK, although I'm wondering now why you are suggesting options that you don't agree with. \r\n\r\nRegarding asserts, as I asked above, do you know whether any other large JS libraries use this technique to validate parameters? ","created_at":"2017-12-21T13:13:46.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12578#issuecomment-353347709","id":353347709,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12578","node_id":"MDEyOklzc3VlQ29tbWVudDM1MzM0NzcwOQ==","updated_at":"2017-12-21T13:13:46.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/353347709","user":{"following_url":"https:\/\/api.github.com\/users\/looeee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/looeee\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/5307958?v=4","url":"https:\/\/api.github.com\/users\/looeee","gists_url":"https:\/\/api.github.com\/users\/looeee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/looeee","subscriptions_url":"https:\/\/api.github.com\/users\/looeee\/subscriptions","node_id":"MDQ6VXNlcjUzMDc5NTg=","repos_url":"https:\/\/api.github.com\/users\/looeee\/repos","received_events_url":"https:\/\/api.github.com\/users\/looeee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/looeee\/starred{\/owner}{\/repo}","site_admin":false,"login":"looeee","type":"User","id":5307958,"followers_url":"https:\/\/api.github.com\/users\/looeee\/followers","organizations_url":"https:\/\/api.github.com\/users\/looeee\/orgs"}},{"index":6,"author_association":"CONTRIBUTOR","body":"If you want specifically about assert i don't really know, but about parameters check almost all ?!? With their own implementation using personal logger, throwing error, what ever they need to do the job !\r\n\r\n- npm\r\n- bower\r\n- react\r\n- blocky\r\n- closure-library\r\n- etc...\r\n\r\nOk before go further in the discussion, did you read this #12231 ?\r\n\r\nNext, i will clarify some points. \r\n\r\n> why you are suggesting options that you don't agree with.\r\n\r\nI agree with this options (except the last of course \ud83d\ude04), but they have pro\/con like you list it previously.\r\nTypeScript or Flow allows to check if parameters are correct in a certain way ! And will avoid some headache during development.\r\n\r\nThe assert part is IMO most powerful than the others, because it will provide a very fast feedback about what is the problem. Require very few characters to be useful. Can be deleted easily in production using rollup-plugin-strip.\r\n\r\nMy goal is (like i said in first place):\r\n\r\n> The main idea is to check if parameters are valid in ctor, setters and public methods in development environment. This will allow a big benefits during dev and will make a safer library.\r\n\r\nThe method to do it, is the question. I think assert or equivalent javascript check using a Validator are the best to do. But any options that do the job is ok for me ! \r\n\r\n**But currently i want to know which option we will use to do that !** To apply it on future code refactoring.\r\n\r\nI hope i'm clear \ud83d\ude1f It's not really easy to me to explain some abstract meaning due to my poor vocabulary in English, or bad sentences construction...\r\n\r\nFor example when i'm talking about asserts, it is more like any javascript line code that allow to check parameters validity and tell what's wrong to the user.\r\n\r\nthe \r\n\r\n```javascript\r\nassert( target !== undefined, 'THREE.Matrix4.getWorldPosition: Missing required target.' )\r\n```\r\n\r\nwas just an example taken from #12231 \r\n","created_at":"2017-12-21T14:38:57.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12578#issuecomment-353366712","id":353366712,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12578","node_id":"MDEyOklzc3VlQ29tbWVudDM1MzM2NjcxMg==","updated_at":"2017-12-21T14:38:57.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/353366712","user":{"following_url":"https:\/\/api.github.com\/users\/Itee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Itee\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/5276909?v=4","url":"https:\/\/api.github.com\/users\/Itee","gists_url":"https:\/\/api.github.com\/users\/Itee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Itee","subscriptions_url":"https:\/\/api.github.com\/users\/Itee\/subscriptions","node_id":"MDQ6VXNlcjUyNzY5MDk=","repos_url":"https:\/\/api.github.com\/users\/Itee\/repos","received_events_url":"https:\/\/api.github.com\/users\/Itee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Itee\/starred{\/owner}{\/repo}","site_admin":false,"login":"Itee","type":"User","id":5276909,"followers_url":"https:\/\/api.github.com\/users\/Itee\/followers","organizations_url":"https:\/\/api.github.com\/users\/Itee\/orgs"}},{"index":7,"author_association":"COLLABORATOR","body":"> Ok before go further in the discussion, did you read this #12231 ?\r\n\r\nYes, I've read over that thread. I would say it's very far from conclusive that this won't have a large performance impact based on that thread. At the very least we would need to make certain of that before going further with this.\r\n\r\n>If you want specifically about assert i don't really know, but about parameters check almost all ?!?\r\n\r\nCan you provide some specific examples? I just had a (very quick) look through the source of a couple of libraries (lodash, jQuery ) and it looks to me like they take very similar approach to what we do here - that is, set up default values where neccessary, but otherwise assume that the correct type of object is being passed in, except for a few cases where they are using \"typeof\" and sending a message to the console if the type is incorrect. \r\n\r\n","created_at":"2017-12-21T15:29:03.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12578#issuecomment-353379347","id":353379347,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12578","node_id":"MDEyOklzc3VlQ29tbWVudDM1MzM3OTM0Nw==","updated_at":"2017-12-21T15:29:57.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/353379347","user":{"following_url":"https:\/\/api.github.com\/users\/looeee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/looeee\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/5307958?v=4","url":"https:\/\/api.github.com\/users\/looeee","gists_url":"https:\/\/api.github.com\/users\/looeee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/looeee","subscriptions_url":"https:\/\/api.github.com\/users\/looeee\/subscriptions","node_id":"MDQ6VXNlcjUzMDc5NTg=","repos_url":"https:\/\/api.github.com\/users\/looeee\/repos","received_events_url":"https:\/\/api.github.com\/users\/looeee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/looeee\/starred{\/owner}{\/repo}","site_admin":false,"login":"looeee","type":"User","id":5307958,"followers_url":"https:\/\/api.github.com\/users\/looeee\/followers","organizations_url":"https:\/\/api.github.com\/users\/looeee\/orgs"}},{"index":8,"author_association":"CONTRIBUTOR","body":"The performance impact will only appear on development, and if disable it will just cost a boolean check. Which have not really impact. In case you're in debug mode the impact is acceptable due to the state, aka development.\r\n\r\nAbout examples:\r\n\r\n1. npm:\r\n   - [adduser](https:\/\/github.com\/npm\/npm\/blob\/latest\/lib\/adduser.js)\r\n2. bower:\r\n   - [home](https:\/\/github.com\/bower\/bower\/blob\/master\/lib\/commands\/home.js)\r\n   - [update](https:\/\/github.com\/bower\/bower\/blob\/master\/lib\/commands\/update.js)\r\n3. jQuery:\r\n   - [data](https:\/\/github.com\/jquery\/jquery\/blob\/master\/src\/data.js)\r\n4. lodash:\r\n   - [createPadding](https:\/\/github.com\/lodash\/lodash\/blob\/master\/.internal\/createPadding.js) - With additional doc for IDE !\r\n\r\nI just picked up some file randomly and find params check everywhere. Not for all params of course because it will required a more deep reading of this library. But you can be sure that all their inputs are check somewhere and could be afterware use in a safe way !","created_at":"2017-12-21T15:59:04.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12578#issuecomment-353387294","id":353387294,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12578","node_id":"MDEyOklzc3VlQ29tbWVudDM1MzM4NzI5NA==","updated_at":"2017-12-21T18:23:10.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/353387294","user":{"following_url":"https:\/\/api.github.com\/users\/Itee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Itee\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/5276909?v=4","url":"https:\/\/api.github.com\/users\/Itee","gists_url":"https:\/\/api.github.com\/users\/Itee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Itee","subscriptions_url":"https:\/\/api.github.com\/users\/Itee\/subscriptions","node_id":"MDQ6VXNlcjUyNzY5MDk=","repos_url":"https:\/\/api.github.com\/users\/Itee\/repos","received_events_url":"https:\/\/api.github.com\/users\/Itee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Itee\/starred{\/owner}{\/repo}","site_admin":false,"login":"Itee","type":"User","id":5276909,"followers_url":"https:\/\/api.github.com\/users\/Itee\/followers","organizations_url":"https:\/\/api.github.com\/users\/Itee\/orgs"}},{"index":9,"author_association":"OWNER","body":"> The performance impact will only appear on development\r\n\r\nSo we can't expect people to learn how to debug but we can people to know how to develop in debug mode and release mode? \ud83e\udd14\r\n\r\n> I just picked up some file randomly and find params check everywhere.\r\n\r\nYou should compare this with other graphics-related libraries. The ones you picked are not so focused on performance.","created_at":"2017-12-21T18:38:34.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12578#issuecomment-353425198","id":353425198,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12578","node_id":"MDEyOklzc3VlQ29tbWVudDM1MzQyNTE5OA==","updated_at":"2017-12-21T18:38:34.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/353425198","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":10,"author_association":"CONTRIBUTOR","body":"> So we can't expect people to learn how to debug but we can people to know how to develop in debug mode and release mode?\r\n\r\nToggling a Boolean value in constant file for example is (i hope) much easier for a beginner than run through chrome debug tool in a new and unknown big library like three ? About the debug learning... Catching error early against wrong params will, on the contrary, help a lot beginner to understand what happen in the code base, and what they do wrong, no ? That allow them to become better quickly.\r\n\r\n> You should compare this with other graphics-related libraries. The ones you picked are not so focused on performance.\r\n\r\nI think there is something that i don't fully understand here... \r\n\r\nWhat is the problem to make a relative ( to define, but tiny ) performance impact in development environment under debug mode on, and virtually no impact when off. And absolutely no impact in production environment ???\r\n\r\nlodash i think is about performance ( but not graphical of course ).\r\n","created_at":"2017-12-21T18:51:43.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12578#issuecomment-353428147","id":353428147,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12578","node_id":"MDEyOklzc3VlQ29tbWVudDM1MzQyODE0Nw==","updated_at":"2017-12-21T18:51:43.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/353428147","user":{"following_url":"https:\/\/api.github.com\/users\/Itee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Itee\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/5276909?v=4","url":"https:\/\/api.github.com\/users\/Itee","gists_url":"https:\/\/api.github.com\/users\/Itee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Itee","subscriptions_url":"https:\/\/api.github.com\/users\/Itee\/subscriptions","node_id":"MDQ6VXNlcjUyNzY5MDk=","repos_url":"https:\/\/api.github.com\/users\/Itee\/repos","received_events_url":"https:\/\/api.github.com\/users\/Itee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Itee\/starred{\/owner}{\/repo}","site_admin":false,"login":"Itee","type":"User","id":5276909,"followers_url":"https:\/\/api.github.com\/users\/Itee\/followers","organizations_url":"https:\/\/api.github.com\/users\/Itee\/orgs"}},{"index":11,"author_association":"OWNER","body":"> Toggling a Boolean value in constant file \r\n\r\nBut that assumes the user is using a build system. An easier approach would be to have more builds... three.release.min.js, three.debug.min.js, ... But, either way, I guarantee you that tons of people will publish the debug version.\r\n\r\n> What is the problem to make a relative ( to define, but tiny ) performance impact in development environment under debug mode on, and virtually no impact when off. And absolutely no impact in production environment ???\r\n\r\nThe problem I have is forcing users to node\/webpack\/build... development workflows. I understand the benefits, but I also understand that it makes the experience less fun. It is important for me to keep the experience fun.","created_at":"2017-12-22T01:18:39.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12578#issuecomment-353498287","id":353498287,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12578","node_id":"MDEyOklzc3VlQ29tbWVudDM1MzQ5ODI4Nw==","updated_at":"2017-12-22T01:18:39.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/353498287","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":12,"author_association":"COLLABORATOR","body":"Going over your examples:\r\n\r\n### lodash.createPadding\r\n\r\nThis example is not doing type checking - it takes 2 arguments, `length` and `chars`. \r\n\r\nIf you fail to enter `length` it will crash and burn by the look of it - certainly if you enter a string or NaN or something instead of a number you'll get weird results. \r\nIif you fail to enter `chars` then it gets set to a default value, which is something we already do in most cases here. \r\n\r\n## jQuery.data\r\n\r\n```js\r\nfunction getData( data ) {\r\n\tif ( data === \"true\" ) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tif ( data === \"false\" ) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tif ( data === \"null\" ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\t\/\/ Only convert to a number if it doesn't change the string\r\n\tif ( data === +data + \"\" ) {\r\n\t\treturn +data;\r\n\t}\r\n\r\n\tif ( rbrace.test( data ) ) {\r\n\t\treturn JSON.parse( data );\r\n\t}\r\n\r\n\treturn data;\r\n}\r\n```\r\n\r\nThere's no parameter checking here either - if you enter anything other than a string it's just going to get returned to you unchanged, which is probably going to cause weird errors if that's not what you expect. \r\n\r\nNPM and Bower are not really relevant here since they are intended to be run on your local PC or server and don't have to worry about performance to the same degree. \r\n\r\nI would agree with @mrdoob that only other libraries focused on performance to the same degree as three.js are relevant here. Although I think lodash is a good example, and it looks like it doesn't do any more checking than we do. ","created_at":"2017-12-22T02:22:50.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12578#issuecomment-353506403","id":353506403,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12578","node_id":"MDEyOklzc3VlQ29tbWVudDM1MzUwNjQwMw==","updated_at":"2017-12-22T02:22:50.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/353506403","user":{"following_url":"https:\/\/api.github.com\/users\/looeee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/looeee\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/5307958?v=4","url":"https:\/\/api.github.com\/users\/looeee","gists_url":"https:\/\/api.github.com\/users\/looeee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/looeee","subscriptions_url":"https:\/\/api.github.com\/users\/looeee\/subscriptions","node_id":"MDQ6VXNlcjUzMDc5NTg=","repos_url":"https:\/\/api.github.com\/users\/looeee\/repos","received_events_url":"https:\/\/api.github.com\/users\/looeee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/looeee\/starred{\/owner}{\/repo}","site_admin":false,"login":"looeee","type":"User","id":5307958,"followers_url":"https:\/\/api.github.com\/users\/looeee\/followers","organizations_url":"https:\/\/api.github.com\/users\/looeee\/orgs"}},{"index":13,"author_association":"CONTRIBUTOR","body":"The performance is not relevant here, because in case of production it will be strictly equals to current state ! But... like said @mrdoob:\r\n\r\n> The problem I have is forcing users to node\/webpack\/build... development workflows.\r\n\r\nI'm clearly for a normalized library that allow perfect consistency between each class\/modules\/whatever in three. That make code clearer and easier to learn\/use\/maintain. But i understand that can hurt some people.\r\nAbout forcing the user, **sorry i don't see where it forcing workflows to just allow them to debug their code only if\/when\/where they want ?** Or maybe i missed something ?! \r\n\r\nAbout:\r\n\r\n> An easier approach would be to have more builds... three.release.min.js, three.debug.min.js, ... But, either way, I guarantee you that tons of people will publish the debug version.\r\n\r\n[irony on]\r\nYes, you clearly point a problem... People that need to learn how to debug in a library of hundreds of thousands code lines without any debug output about their inputs, won't be able to set the correct file in production... ( In fact this could certainly be the case, sadly ). Maybe they should learn how to do this too, no ? \r\n[irony off]\r\n\r\nAnyway, the fact to **create new builds files for different environments could be disturbing.** Hey ! Wait a minute ! **We already have three.js and three.min.js... which are designed for dev and prod**, no ??? Personally, i will never use a three.**debug.min**.js file and always use a three.**release.min**.js file. The intent of the minification is to be use in production, right ? So in fact, we don't need to create new builds file, and users that could publish the debug version are one of them that currently publish three.js in production. So that change anything !\r\n\r\nBut may be we should take 2min to analyse what could be the impact to the end user building process. **_(*1)_**\r\n\r\nAbout the fun, yes i agree that coding need to be fun ! But, **debugging during hours** and fighting against a big library like three when you're learning it, **is IMO not so fun**. On the contrary a beginner that can easily write and debug his code will got more and faster fun about his 3d application. As far i known three is intended to be the more generically usable possible for every people, and not only for developers. So just take 2scd for this short user story:\r\n\r\n> A webdesigner, named John, need to create a website including 3d. He never wrote a code line of his life. He ear about the great three webgl library. He want use it, happily for him there is a documentation with some starter examples. But a day, when he copy paste an example, he need to make some changes and OMG something went wrong... He isn't aware about his browser debug tool, and start an epic quest to find what is wrong with the code... After googling on stackoverflow and learn that he can type f12 to get console debug output he see... an error ! Sadly this error is absolutely not related to his real problem. The website did not arrive on time, he was fired. Loosing his job, his wife leave him. He become homeless, and finally committed suicide by jumping off a bridge...\r\n\r\nThis is cruel to don't help this type of people @mrdoob ! If the debug error was related to the real problem John would still be alive !!!\r\n\r\nSo maybe am i wrong with this type of features. But during my life, using almost all programming language i always see and ear that users inputs must be checked. For **the simple principle of [GIGO](https:\/\/en.wikipedia.org\/wiki\/Garbage_in,_garbage_out).**\r\n\r\n@looeee Maybe i don't take best examples, but the idea is they check user inputs. And maybe this is a bias from my experience but check inputs params avoid tons of bugs for the library and for the end user. Finally, like i said the performance is not a relevant topic here because production won't embed any debug stuff. My goal is just to make three more robust, usable and easier for beginner. And i hope\/sure you share the same goal.\r\n\r\n## tl;nr -----------------------------\r\n\r\n1: Here i will try to list and develops some users building process using three to see if this type of argument checking, coupling to a global variable (named here DEBUG_THREE) to allow\/disallow debug stuff, is relevant or not.\r\n\r\n1. Using script tag to import the all library from html:\r\n\r\n```html\r\n<script src=\"..\/build\/three.js\"><\/script>\r\n<script>\r\n    var foo = new THREE.Vector3();\r\n<\/script>\r\n```\r\n\r\nThis is the development file, so the own building process of Three had already set the global variable DEBUG_THREE to true. The user will be clearly warn about error he can do.\r\n\r\n```html\r\n<script src=\"..\/build\/three.min.js\"><\/script>\r\n<script>\r\n    var foo = new THREE.Vector3();\r\n<\/script>\r\n```\r\n\r\nThis is the production file, so the own building process of Three had already set the global variable DEBUG_THREE to false. The user won't be clearly warn about error he can do, except by browser error that are not always relevant to the main problem.\r\n\r\n_The impact is only in Three repository, that need to set correctly a variable depending on... Maybe on NODE.env ?_\r\n\r\n2. Building his own three\r\n\r\nThe developer just need to take care to submit the NODE.env variable to the building process. And i'm sure that can be automated using package script arguments.\r\n\r\n3. Bundling using three.module.js:\r\n\r\nThe three.module.js was copied in an assets folder, and developer relies on it using es6 import statement. He can toggling manually the DEBUG_THREE variable include in the copied file. Or submit NODE.env if DEBUG_THREE is declared with something like:\r\n\r\n```javascript\r\nDEBUG_THREE = NODE.env.dev || false;\r\n```\r\n\r\n4. Bundling using node_module\/three\r\n\r\nThe devloper can't toggling manually the DEBUG_THREE variable, but can still submit NODE.env if DEBUG_THREE is declared with something like:\r\n\r\n```javascript\r\nDEBUG_THREE = NODE.env.dev || false;\r\n```\r\n\r\nIn that way his final build will take care of his environement.\r\n\r\n5. Using webpack\r\n\r\nI'm not aware about the problematic of sharing an global variable from a third_party ( three ) library using webpack. Sorry ! If someone can't tell me the pro\/con ?\r\n\r\n","created_at":"2017-12-22T12:17:25.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12578#issuecomment-353587290","id":353587290,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12578","node_id":"MDEyOklzc3VlQ29tbWVudDM1MzU4NzI5MA==","updated_at":"2017-12-22T12:17:56.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/353587290","user":{"following_url":"https:\/\/api.github.com\/users\/Itee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Itee\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/5276909?v=4","url":"https:\/\/api.github.com\/users\/Itee","gists_url":"https:\/\/api.github.com\/users\/Itee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Itee","subscriptions_url":"https:\/\/api.github.com\/users\/Itee\/subscriptions","node_id":"MDQ6VXNlcjUyNzY5MDk=","repos_url":"https:\/\/api.github.com\/users\/Itee\/repos","received_events_url":"https:\/\/api.github.com\/users\/Itee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Itee\/starred{\/owner}{\/repo}","site_admin":false,"login":"Itee","type":"User","id":5276909,"followers_url":"https:\/\/api.github.com\/users\/Itee\/followers","organizations_url":"https:\/\/api.github.com\/users\/Itee\/orgs"}},{"index":14,"author_association":"COLLABORATOR","body":"Holy wall of text, batman! \r\n\r\nDo you really expect people to read all of that? \r\n\r\nBut focusing on your response to my point above:\r\n\r\n>Maybe i don't take best examples, but the idea is they check user inputs\r\n\r\nIn your examples, they _don't_ validate function parameters.","created_at":"2017-12-22T12:24:33.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12578#issuecomment-353588478","id":353588478,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12578","node_id":"MDEyOklzc3VlQ29tbWVudDM1MzU4ODQ3OA==","updated_at":"2017-12-22T12:24:33.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/353588478","user":{"following_url":"https:\/\/api.github.com\/users\/looeee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/looeee\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/5307958?v=4","url":"https:\/\/api.github.com\/users\/looeee","gists_url":"https:\/\/api.github.com\/users\/looeee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/looeee","subscriptions_url":"https:\/\/api.github.com\/users\/looeee\/subscriptions","node_id":"MDQ6VXNlcjUzMDc5NTg=","repos_url":"https:\/\/api.github.com\/users\/looeee\/repos","received_events_url":"https:\/\/api.github.com\/users\/looeee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/looeee\/starred{\/owner}{\/repo}","site_admin":false,"login":"looeee","type":"User","id":5307958,"followers_url":"https:\/\/api.github.com\/users\/looeee\/followers","organizations_url":"https:\/\/api.github.com\/users\/looeee\/orgs"}},{"index":15,"author_association":"CONTRIBUTOR","body":"I hope they will ! Because i explain lot of things about this concern. And personally i take the time to read some block of text when the topic is interesting. But i can split this response in 4-5 comment more digest, but the size will be the same.\r\n\r\n> they don't validate function parameters.\r\n\r\nSo, they should ! \ud83d\ude04\r\n\r\nBut to the contrary, why should we not validate function parameters ? What are the gain ?\r\n","created_at":"2017-12-22T12:50:28.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12578#issuecomment-353592392","id":353592392,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12578","node_id":"MDEyOklzc3VlQ29tbWVudDM1MzU5MjM5Mg==","updated_at":"2017-12-22T12:50:28.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/353592392","user":{"following_url":"https:\/\/api.github.com\/users\/Itee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Itee\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/5276909?v=4","url":"https:\/\/api.github.com\/users\/Itee","gists_url":"https:\/\/api.github.com\/users\/Itee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Itee","subscriptions_url":"https:\/\/api.github.com\/users\/Itee\/subscriptions","node_id":"MDQ6VXNlcjUyNzY5MDk=","repos_url":"https:\/\/api.github.com\/users\/Itee\/repos","received_events_url":"https:\/\/api.github.com\/users\/Itee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Itee\/starred{\/owner}{\/repo}","site_admin":false,"login":"Itee","type":"User","id":5276909,"followers_url":"https:\/\/api.github.com\/users\/Itee\/followers","organizations_url":"https:\/\/api.github.com\/users\/Itee\/orgs"}},{"index":16,"author_association":"COLLABORATOR","body":"> I hope they will \r\n\r\nThe problem is, that no matter how much you hope, they really won't. Personally I got to the story about Johnny web developer and his divorced wife and gave up. \r\n\r\nBut anyway, back on topic:\r\n\r\nThis would be quite a major change to the library, and I'm not convinced that it's neccessary - especially since, from the examples of other libraries we have seen so far, the level and type of validation we are currently doing seems pretty standard in JavaScript. \r\n\r\nBut if we do go ahead, we'd need to make sure at least\r\n\r\n* that this doesn't favour any particular way of using the library - nothing specific to node, webpack, rollup, including via script tags or imports statements or anything else (so no `NODE.env` or other environment variables). \r\n* must be beginner friendly\r\n* minimal performance impact in dev \r\n* very close to zero impact in production\r\n* minimal impact on code complexity\r\n\r\nThe only way I see to satisfy all of these would be to add an extra build target `three.debug.js` - and I don't think it's unreasonable to expect people to switch to `three.min.js` in production. I'm not sure how this would work for people that are using build tools though. ","created_at":"2017-12-22T13:38:49.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12578#issuecomment-353600104","id":353600104,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12578","node_id":"MDEyOklzc3VlQ29tbWVudDM1MzYwMDEwNA==","updated_at":"2017-12-22T13:38:49.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/353600104","user":{"following_url":"https:\/\/api.github.com\/users\/looeee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/looeee\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/5307958?v=4","url":"https:\/\/api.github.com\/users\/looeee","gists_url":"https:\/\/api.github.com\/users\/looeee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/looeee","subscriptions_url":"https:\/\/api.github.com\/users\/looeee\/subscriptions","node_id":"MDQ6VXNlcjUzMDc5NTg=","repos_url":"https:\/\/api.github.com\/users\/looeee\/repos","received_events_url":"https:\/\/api.github.com\/users\/looeee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/looeee\/starred{\/owner}{\/repo}","site_admin":false,"login":"looeee","type":"User","id":5307958,"followers_url":"https:\/\/api.github.com\/users\/looeee\/followers","organizations_url":"https:\/\/api.github.com\/users\/looeee\/orgs"}},{"index":17,"author_association":"CONTRIBUTOR","body":"Under tl;nr is just extra stuff that is not 'required'. And i rarely make so big text in fact because it take lot of time to me. I will be more concise now. But thank for reading !\r\n\r\n> This would be quite a major change to the library\r\n\r\nYes\r\n\r\n> I'm not convinced that it's neccessary\r\n\r\nI am, but the real gain will come after the implementation.\r\n\r\n> currently doing seems pretty standard in JavaScript\r\n\r\nWe can do better than standard\r\n\r\n> that this doesn't favour any particular way of using the library - nothing specific to node, webpack, rollup\r\n\r\nThank to point this, you're totally right ! I will think about a non specific way to achieve this.\r\n\r\n> must be beginner friendly\r\n\r\nThat the purpose ! To help beginner to debug easily their code in fast and lighter way than currently.\r\n\r\n> minimal performance impact in dev\r\n\r\nNeed a benchmark, but should be minimal this cost just an boolean check per methods under dev when debug off.\r\n\r\n> very close to zero impact in production\r\n\r\nIt is not very close, it is zero impact due to the removal of the code line during bundling using rollup-plugin-strip (if we go this way)\r\n\r\n> minimal impact on code complexity\r\n\r\nThis will improve code readability ! In that way you will be able to know which type of the param should be, and you will be sure that you cannot get crappy undefined or null values ( if the param is required of course ! )\r\n\r\n> an extra build target three.debug.js\r\n\r\nWhy ? What is the purpose of three.js and three.min.js if it is not for dev (aka debug) and prod env ??? For fun ?\r\n\r\n> I don't think it's unreasonable to expect people to switch to three.min.js in production\r\n\r\nThis is the only goal of this file, no ?\r\n\r\n> I'm not sure how this would work for people that are using build tools though.\r\n\r\nWhat do you mean by build tools ? Rollup or webpack ? In this case see tl;nr section above. \r\n","created_at":"2017-12-22T14:51:06.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12578#issuecomment-353612546","id":353612546,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12578","node_id":"MDEyOklzc3VlQ29tbWVudDM1MzYxMjU0Ng==","updated_at":"2017-12-22T14:51:06.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/353612546","user":{"following_url":"https:\/\/api.github.com\/users\/Itee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Itee\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/5276909?v=4","url":"https:\/\/api.github.com\/users\/Itee","gists_url":"https:\/\/api.github.com\/users\/Itee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Itee","subscriptions_url":"https:\/\/api.github.com\/users\/Itee\/subscriptions","node_id":"MDQ6VXNlcjUyNzY5MDk=","repos_url":"https:\/\/api.github.com\/users\/Itee\/repos","received_events_url":"https:\/\/api.github.com\/users\/Itee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Itee\/starred{\/owner}{\/repo}","site_admin":false,"login":"Itee","type":"User","id":5276909,"followers_url":"https:\/\/api.github.com\/users\/Itee\/followers","organizations_url":"https:\/\/api.github.com\/users\/Itee\/orgs"}},{"index":18,"author_association":"COLLABORATOR","body":"I agree with @mrdoob and @looeee . I suggest to close this issue and focus on other topics instead.","created_at":"2018-02-17T09:47:06.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12578#issuecomment-366429965","id":366429965,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12578","node_id":"MDEyOklzc3VlQ29tbWVudDM2NjQyOTk2NQ==","updated_at":"2018-02-17T09:47:06.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/366429965","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}}]}