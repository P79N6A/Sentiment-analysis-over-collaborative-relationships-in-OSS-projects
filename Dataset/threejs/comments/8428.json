{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"OWNER","body":"Shouldn't you be doing `JSON.stringify( mmm.toJSON() )` instead?\n","created_at":"2016-03-22T01:03:03.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/8428#issuecomment-199567607","id":199567607,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8428","node_id":"MDEyOklzc3VlQ29tbWVudDE5OTU2NzYwNw==","updated_at":"2016-03-22T01:03:03.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/199567607","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":1,"author_association":"NONE","body":"Thank you for looking at this so quickly.  I apologize for the incomplete example.  I have updated the jsfiddle so it more fully illustrates the issue. [http:\/\/jsfiddle.net\/sjpt\/akmcv7Lh\/40\/](http:\/\/jsfiddle.net\/sjpt\/akmcv7Lh\/40\/)\n","created_at":"2016-03-22T09:09:42.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/8428#issuecomment-199709458","id":199709458,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8428","node_id":"MDEyOklzc3VlQ29tbWVudDE5OTcwOTQ1OA==","updated_at":"2016-03-22T09:09:42.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/199709458","user":{"following_url":"https:\/\/api.github.com\/users\/sjpt\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/sjpt\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/4954988?v=4","url":"https:\/\/api.github.com\/users\/sjpt","gists_url":"https:\/\/api.github.com\/users\/sjpt\/gists{\/gist_id}","html_url":"https:\/\/github.com\/sjpt","subscriptions_url":"https:\/\/api.github.com\/users\/sjpt\/subscriptions","node_id":"MDQ6VXNlcjQ5NTQ5ODg=","repos_url":"https:\/\/api.github.com\/users\/sjpt\/repos","received_events_url":"https:\/\/api.github.com\/users\/sjpt\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/sjpt\/starred{\/owner}{\/repo}","site_admin":false,"login":"sjpt","type":"User","id":4954988,"followers_url":"https:\/\/api.github.com\/users\/sjpt\/followers","organizations_url":"https:\/\/api.github.com\/users\/sjpt\/orgs"}},{"index":2,"author_association":"NONE","body":"Hi @sjpt I had a look at your fiddle and the issue is not related to THREE: the only explanation I can find is that the _replacer_ function of `JSON.stringify` is being called **after** the process has been executed for that value.\nThis is why you always run into the error.\nMy suggestion is filtering it before.\n","created_at":"2016-03-27T21:46:26.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/8428#issuecomment-202151192","id":202151192,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8428","node_id":"MDEyOklzc3VlQ29tbWVudDIwMjE1MTE5Mg==","updated_at":"2016-03-27T21:46:26.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/202151192","user":{"following_url":"https:\/\/api.github.com\/users\/pietro909\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pietro909\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/2094604?v=4","url":"https:\/\/api.github.com\/users\/pietro909","gists_url":"https:\/\/api.github.com\/users\/pietro909\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pietro909","subscriptions_url":"https:\/\/api.github.com\/users\/pietro909\/subscriptions","node_id":"MDQ6VXNlcjIwOTQ2MDQ=","repos_url":"https:\/\/api.github.com\/users\/pietro909\/repos","received_events_url":"https:\/\/api.github.com\/users\/pietro909\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pietro909\/starred{\/owner}{\/repo}","site_admin":false,"login":"pietro909","type":"User","id":2094604,"followers_url":"https:\/\/api.github.com\/users\/pietro909\/followers","organizations_url":"https:\/\/api.github.com\/users\/pietro909\/orgs"}},{"index":3,"author_association":"NONE","body":"I am afraid it is related to THREE, as it is THREE that is throwing the exception and causing failure of what should be a safe call to **JSON.stringify**.\n\nI agree it would be more convenient if my **replacer**() filter were called before the THREE **toJSON()** method, which would be more efficient and in which case the THREE bug would not matter.  However, the spec at http:\/\/www.ecma-international.org\/ecma-262\/6.0\/#sec-serializejsonproperty indicates this is the correct behaviour.  As I said at in the first post I have a workaround so it is not too important for me, however, I think the THREE bug should be fixed.\n","created_at":"2016-03-28T09:30:42.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/8428#issuecomment-202320290","id":202320290,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8428","node_id":"MDEyOklzc3VlQ29tbWVudDIwMjMyMDI5MA==","updated_at":"2016-03-28T09:30:42.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/202320290","user":{"following_url":"https:\/\/api.github.com\/users\/sjpt\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/sjpt\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/4954988?v=4","url":"https:\/\/api.github.com\/users\/sjpt","gists_url":"https:\/\/api.github.com\/users\/sjpt\/gists{\/gist_id}","html_url":"https:\/\/github.com\/sjpt","subscriptions_url":"https:\/\/api.github.com\/users\/sjpt\/subscriptions","node_id":"MDQ6VXNlcjQ5NTQ5ODg=","repos_url":"https:\/\/api.github.com\/users\/sjpt\/repos","received_events_url":"https:\/\/api.github.com\/users\/sjpt\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/sjpt\/starred{\/owner}{\/repo}","site_admin":false,"login":"sjpt","type":"User","id":4954988,"followers_url":"https:\/\/api.github.com\/users\/sjpt\/followers","organizations_url":"https:\/\/api.github.com\/users\/sjpt\/orgs"}},{"index":4,"author_association":"CONTRIBUTOR","body":"@mrdoob \n\n> Shouldn't you be doing JSON.stringify( mmm.toJSON() ) instead?\n\n`JSON.stringify` calls `.toJSON` automagically. One could say we use a reserved name. \n\nYou easily get exceptions (at best - weird behavior being the worse case) from within the JSON serializer, since it doesn't pass our extra `meta` parameter. \n\nFor instance, I know that [this line](https:\/\/github.com\/mrdoob\/three.js\/blob\/master\/src\/textures\/Texture.js#L104) throws when trying to serialize a `ShaderMaterial` with texture uniforms (current workaround: Set `.value`s to `null` and re-add the textures manually after the scene has been loaded).\n","created_at":"2016-03-30T00:10:56.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/8428#issuecomment-203165280","id":203165280,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8428","node_id":"MDEyOklzc3VlQ29tbWVudDIwMzE2NTI4MA==","updated_at":"2016-03-30T00:10:56.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/203165280","user":{"following_url":"https:\/\/api.github.com\/users\/tschw\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/tschw\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/3916357?v=4","url":"https:\/\/api.github.com\/users\/tschw","gists_url":"https:\/\/api.github.com\/users\/tschw\/gists{\/gist_id}","html_url":"https:\/\/github.com\/tschw","subscriptions_url":"https:\/\/api.github.com\/users\/tschw\/subscriptions","node_id":"MDQ6VXNlcjM5MTYzNTc=","repos_url":"https:\/\/api.github.com\/users\/tschw\/repos","received_events_url":"https:\/\/api.github.com\/users\/tschw\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/tschw\/starred{\/owner}{\/repo}","site_admin":false,"login":"tschw","type":"User","id":3916357,"followers_url":"https:\/\/api.github.com\/users\/tschw\/followers","organizations_url":"https:\/\/api.github.com\/users\/tschw\/orgs"}},{"index":5,"author_association":"OWNER","body":"Oh noes! Wasn't aware... Is the solution renaming to `.serialize()`?\n","created_at":"2016-03-30T21:19:10.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/8428#issuecomment-203640089","id":203640089,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8428","node_id":"MDEyOklzc3VlQ29tbWVudDIwMzY0MDA4OQ==","updated_at":"2016-03-30T21:19:10.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/203640089","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":6,"author_association":"CONTRIBUTOR","body":"@mrdoob \n\n> Oh noes! Wasn't aware... \n\nMe not either until I ran into it.\n\n> Is the solution renaming to .serialize()?\n\nArguably. As long as our implementation is complete, there's no problem. In fact, one could see it as syntactic sugar. OTOH it avoids confusion like here.\n\nWhat OP wants (specifying a _replacer_ argument to `JSON.stringify`) requires it to be called `toJSON`. We can't support that, unless putting `meta` somewhere global, but that (is ugly to begin with and) raises the question when to get rid of it again.\n\nI consider serializing `ShaderMaterial` \"partly unimplemented\" (for many other reasons, not just uniforms), that's why I didn't file a bug - thought I better come up with a solution at some point.\n","created_at":"2016-03-30T22:08:38.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/8428#issuecomment-203661242","id":203661242,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8428","node_id":"MDEyOklzc3VlQ29tbWVudDIwMzY2MTI0Mg==","updated_at":"2016-03-30T22:08:38.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/203661242","user":{"following_url":"https:\/\/api.github.com\/users\/tschw\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/tschw\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/3916357?v=4","url":"https:\/\/api.github.com\/users\/tschw","gists_url":"https:\/\/api.github.com\/users\/tschw\/gists{\/gist_id}","html_url":"https:\/\/github.com\/tschw","subscriptions_url":"https:\/\/api.github.com\/users\/tschw\/subscriptions","node_id":"MDQ6VXNlcjM5MTYzNTc=","repos_url":"https:\/\/api.github.com\/users\/tschw\/repos","received_events_url":"https:\/\/api.github.com\/users\/tschw\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/tschw\/starred{\/owner}{\/repo}","site_admin":false,"login":"tschw","type":"User","id":3916357,"followers_url":"https:\/\/api.github.com\/users\/tschw\/followers","organizations_url":"https:\/\/api.github.com\/users\/tschw\/orgs"}},{"index":7,"author_association":"NONE","body":"I think your renaming Object3D.toJSON is a good solution.  toJSON is a reserved method name with behaviour specified in the JSON.serialize specification; and that behaviour involves calling the method without arguments.  If you want to implement something similar but different, your method should have a different name.  That presumably means a rename of your other toJSON methods too.\n\nI do not need your serializer to be called as I ignore its output anyway in my replacer function.  I just need a serializer that does not throw an exception.  The default serializer (which gets called as a result of my `delete THREE.Object3D.prototype.toJSON;` workaround satisfies that.  I don't know what output the default serializer has produced for your objects or whether there is any context where it might be useful, but at least it doesn't break things by throwing an exception.\n\nI could save a trivial amount of compute time by replacing my workaround with\n`THREE.Object3D.prototype.toJSON = function() { return undefined; }`, but it would still be a workaround that could break other things.  I don't see any downside to renaming your toJSON method(s).\n","created_at":"2016-03-31T08:46:53.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/8428#issuecomment-203823592","id":203823592,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8428","node_id":"MDEyOklzc3VlQ29tbWVudDIwMzgyMzU5Mg==","updated_at":"2016-03-31T08:46:53.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/203823592","user":{"following_url":"https:\/\/api.github.com\/users\/sjpt\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/sjpt\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/4954988?v=4","url":"https:\/\/api.github.com\/users\/sjpt","gists_url":"https:\/\/api.github.com\/users\/sjpt\/gists{\/gist_id}","html_url":"https:\/\/github.com\/sjpt","subscriptions_url":"https:\/\/api.github.com\/users\/sjpt\/subscriptions","node_id":"MDQ6VXNlcjQ5NTQ5ODg=","repos_url":"https:\/\/api.github.com\/users\/sjpt\/repos","received_events_url":"https:\/\/api.github.com\/users\/sjpt\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/sjpt\/starred{\/owner}{\/repo}","site_admin":false,"login":"sjpt","type":"User","id":4954988,"followers_url":"https:\/\/api.github.com\/users\/sjpt\/followers","organizations_url":"https:\/\/api.github.com\/users\/sjpt\/orgs"}},{"index":8,"author_association":"OWNER","body":"I could see some potential breakage. People that relied on `toJSON()` will now get a different output and I'm not sure we can add a `console.warn()`... However, I think the breakage needs to be done.\n","created_at":"2016-03-31T09:25:03.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/8428#issuecomment-203844861","id":203844861,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8428","node_id":"MDEyOklzc3VlQ29tbWVudDIwMzg0NDg2MQ==","updated_at":"2016-03-31T09:25:03.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/203844861","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":9,"author_association":"NONE","body":"One suggestion to minimize breakage is to provide a toJSON that detects whether it has an input argument.  Curiously, it seems that `JSON.serialize` calls any toJSON method with a single argument of an empty string, at least on Chrome and Firefox.  I'm not sure if this is safe specified behaviour.\n\n`toJSON: function ( meta ) {`\n`if (meta === \"\") return this;`\n`console.warn(...);`\n`... rest of code as before`\n`}`\nseems to work.  (I was afraid it might go into a recursive loop.)\n","created_at":"2016-03-31T10:37:17.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/8428#issuecomment-203873597","id":203873597,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8428","node_id":"MDEyOklzc3VlQ29tbWVudDIwMzg3MzU5Nw==","updated_at":"2016-03-31T10:37:17.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/203873597","user":{"following_url":"https:\/\/api.github.com\/users\/sjpt\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/sjpt\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/4954988?v=4","url":"https:\/\/api.github.com\/users\/sjpt","gists_url":"https:\/\/api.github.com\/users\/sjpt\/gists{\/gist_id}","html_url":"https:\/\/github.com\/sjpt","subscriptions_url":"https:\/\/api.github.com\/users\/sjpt\/subscriptions","node_id":"MDQ6VXNlcjQ5NTQ5ODg=","repos_url":"https:\/\/api.github.com\/users\/sjpt\/repos","received_events_url":"https:\/\/api.github.com\/users\/sjpt\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/sjpt\/starred{\/owner}{\/repo}","site_admin":false,"login":"sjpt","type":"User","id":4954988,"followers_url":"https:\/\/api.github.com\/users\/sjpt\/followers","organizations_url":"https:\/\/api.github.com\/users\/sjpt\/orgs"}},{"index":10,"author_association":"CONTRIBUTOR","body":"How about just letting it break and adding an IMPORTANT sentence to the release notes?\n","created_at":"2016-03-31T15:25:34.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/8428#issuecomment-203985810","id":203985810,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8428","node_id":"MDEyOklzc3VlQ29tbWVudDIwMzk4NTgxMA==","updated_at":"2016-03-31T15:25:34.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/203985810","user":{"following_url":"https:\/\/api.github.com\/users\/tschw\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/tschw\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/3916357?v=4","url":"https:\/\/api.github.com\/users\/tschw","gists_url":"https:\/\/api.github.com\/users\/tschw\/gists{\/gist_id}","html_url":"https:\/\/github.com\/tschw","subscriptions_url":"https:\/\/api.github.com\/users\/tschw\/subscriptions","node_id":"MDQ6VXNlcjM5MTYzNTc=","repos_url":"https:\/\/api.github.com\/users\/tschw\/repos","received_events_url":"https:\/\/api.github.com\/users\/tschw\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/tschw\/starred{\/owner}{\/repo}","site_admin":false,"login":"tschw","type":"User","id":3916357,"followers_url":"https:\/\/api.github.com\/users\/tschw\/followers","organizations_url":"https:\/\/api.github.com\/users\/tschw\/orgs"}},{"index":11,"author_association":"CONTRIBUTOR","body":"@mrdoob \n\n> > Is the solution renaming to .serialize()?\n\n@tschw\n\n> Arguably. As long as our implementation is complete, there's no problem. In fact, one could see it as syntactic sugar. \n\nTo clarify: `JSON.stringify` should never see a `.toJSON` method except for the top-level object when the object is passed in directly.\n\nTo make this case work, we'd have to change [this line](https:\/\/github.com\/mrdoob\/three.js\/blob\/dev\/src\/core\/Object3D.js#L549) to\n\n``` javascript\nvar isRootObject = ( meta === undefined || meta === '' );\n```\n\nor use `! meta` for once to be on the safe side. It would even work with replacers, but those would only be called on the root (and unimplemented stuff), because that's how our serialization works.\n","created_at":"2016-03-31T15:42:11.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/8428#issuecomment-203991463","id":203991463,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8428","node_id":"MDEyOklzc3VlQ29tbWVudDIwMzk5MTQ2Mw==","updated_at":"2016-03-31T15:42:11.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/203991463","user":{"following_url":"https:\/\/api.github.com\/users\/tschw\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/tschw\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/3916357?v=4","url":"https:\/\/api.github.com\/users\/tschw","gists_url":"https:\/\/api.github.com\/users\/tschw\/gists{\/gist_id}","html_url":"https:\/\/github.com\/tschw","subscriptions_url":"https:\/\/api.github.com\/users\/tschw\/subscriptions","node_id":"MDQ6VXNlcjM5MTYzNTc=","repos_url":"https:\/\/api.github.com\/users\/tschw\/repos","received_events_url":"https:\/\/api.github.com\/users\/tschw\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/tschw\/starred{\/owner}{\/repo}","site_admin":false,"login":"tschw","type":"User","id":3916357,"followers_url":"https:\/\/api.github.com\/users\/tschw\/followers","organizations_url":"https:\/\/api.github.com\/users\/tschw\/orgs"}},{"index":12,"author_association":"NONE","body":"The same issue has returned with THREE.Texture().  Not at all serious for me as I am now using yaml instead of JSON.","created_at":"2018-01-24T16:46:32.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/8428#issuecomment-360197224","id":360197224,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/8428","node_id":"MDEyOklzc3VlQ29tbWVudDM2MDE5NzIyNA==","updated_at":"2018-01-24T16:46:32.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/360197224","user":{"following_url":"https:\/\/api.github.com\/users\/sjpt\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/sjpt\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/4954988?v=4","url":"https:\/\/api.github.com\/users\/sjpt","gists_url":"https:\/\/api.github.com\/users\/sjpt\/gists{\/gist_id}","html_url":"https:\/\/github.com\/sjpt","subscriptions_url":"https:\/\/api.github.com\/users\/sjpt\/subscriptions","node_id":"MDQ6VXNlcjQ5NTQ5ODg=","repos_url":"https:\/\/api.github.com\/users\/sjpt\/repos","received_events_url":"https:\/\/api.github.com\/users\/sjpt\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/sjpt\/starred{\/owner}{\/repo}","site_admin":false,"login":"sjpt","type":"User","id":4954988,"followers_url":"https:\/\/api.github.com\/users\/sjpt\/followers","organizations_url":"https:\/\/api.github.com\/users\/sjpt\/orgs"}}]}