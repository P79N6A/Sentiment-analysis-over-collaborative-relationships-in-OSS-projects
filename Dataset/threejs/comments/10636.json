{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"OWNER","body":"@Mugen87 looks good?","created_at":"2017-01-29T05:15:29.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10636#issuecomment-275894555","id":275894555,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10636","node_id":"MDEyOklzc3VlQ29tbWVudDI3NTg5NDU1NQ==","updated_at":"2017-01-29T05:15:29.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/275894555","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":1,"author_association":"COLLABORATOR","body":"I think this can be merged","created_at":"2017-01-31T22:01:12.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10636#issuecomment-276506913","id":276506913,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10636","node_id":"MDEyOklzc3VlQ29tbWVudDI3NjUwNjkxMw==","updated_at":"2017-01-31T22:36:38.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/276506913","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":2,"author_association":"COLLABORATOR","body":"Can you please explain:\r\n\r\nIn your example, all of the materials are the same in your materials array. How can you see if the code is working?\r\n\r\nIn what way are the geometries \"not compatible\" with `MultiMaterial` without this PR?\r\n\r\nIn what way are the geometries \"compatible\" with `MultiMaterial` with this PR?","created_at":"2017-01-31T22:21:16.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10636#issuecomment-276512106","id":276512106,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10636","node_id":"MDEyOklzc3VlQ29tbWVudDI3NjUxMjEwNg==","updated_at":"2017-01-31T22:21:16.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/276512106","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":3,"author_association":"CONTRIBUTOR","body":"Hi @WestLangley ,\r\n\r\nWithout the PR, you'll get runtime errors when trying to render these primitives with a `MultiMaterial` assigned.\r\n\r\nThe materials in the array are the same; however, I think that only `BoxGeometry` makes use of the multiple materials (one for each face) - all of the other primitives only use the first material.\r\n\r\nI could update the example to assign a different material to each face of the `BoxGeometry`, but the main intent of this PR was to ensure that assigning a `MultiMaterial` did not result in a runtime error.","created_at":"2017-01-31T22:37:31.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10636#issuecomment-276516027","id":276516027,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10636","node_id":"MDEyOklzc3VlQ29tbWVudDI3NjUxNjAyNw==","updated_at":"2017-01-31T22:37:31.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/276516027","user":{"following_url":"https:\/\/api.github.com\/users\/ikerr\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/ikerr\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/884960?v=4","url":"https:\/\/api.github.com\/users\/ikerr","gists_url":"https:\/\/api.github.com\/users\/ikerr\/gists{\/gist_id}","html_url":"https:\/\/github.com\/ikerr","subscriptions_url":"https:\/\/api.github.com\/users\/ikerr\/subscriptions","node_id":"MDQ6VXNlcjg4NDk2MA==","repos_url":"https:\/\/api.github.com\/users\/ikerr\/repos","received_events_url":"https:\/\/api.github.com\/users\/ikerr\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/ikerr\/starred{\/owner}{\/repo}","site_admin":false,"login":"ikerr","type":"User","id":884960,"followers_url":"https:\/\/api.github.com\/users\/ikerr\/followers","organizations_url":"https:\/\/api.github.com\/users\/ikerr\/orgs"}},{"index":4,"author_association":"COLLABORATOR","body":"I do not think the example is particularly useful as written.\r\n\r\nI also do not think `groups` should be defined unnecessarily.\r\n\r\n@Mugen87 Can this be fixed by modifying the renderer, instead?\r\n","created_at":"2017-01-31T23:07:32.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10636#issuecomment-276522954","id":276522954,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10636","node_id":"MDEyOklzc3VlQ29tbWVudDI3NjUyMjk1NA==","updated_at":"2017-01-31T23:07:32.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/276522954","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":5,"author_association":"COLLABORATOR","body":"The first problem is reproduced here: https:\/\/jsfiddle.net\/oooao6qb\/4\/\r\n\r\nYou get a runtime error if you provide a `MultiMaterial` with less materials than expected. So a `BoxBufferGeometry` needs six materials but we assign just one in the corresponding `MultiMaterial`.\r\n\r\nI think this can be fixed if we change `.projectObject()`. https:\/\/github.com\/mrdoob\/three.js\/blob\/dev\/src\/renderers\/WebGLRenderer.js#L1432-L1450","created_at":"2017-01-31T23:44:34.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10636#issuecomment-276530317","id":276530317,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10636","node_id":"MDEyOklzc3VlQ29tbWVudDI3NjUzMDMxNw==","updated_at":"2017-01-31T23:47:19.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/276530317","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":6,"author_association":"COLLABORATOR","body":"Um, i'm unable to reproduce a runtime error with a `SphereGeometry` and the same `MultiMaterial`. https:\/\/jsfiddle.net\/oooao6qb\/5\/\r\n\r\nA `SphereBufferGeometry` does not provide any errors but nothing is rendered! I think this need some more investigation...\r\n\r\nhttps:\/\/jsfiddle.net\/oooao6qb\/6\/\r\n\r\n@WestLangley Thanks for intervening \ud83d\ude09. We should not initially merge this PR but fix the problems in the renderer...","created_at":"2017-01-31T23:53:57.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10636#issuecomment-276531885","id":276531885,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10636","node_id":"MDEyOklzc3VlQ29tbWVudDI3NjUzMTg4NQ==","updated_at":"2017-01-31T23:58:09.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/276531885","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":7,"author_association":"CONTRIBUTOR","body":"I've looked into this some more, to figure out why regular `SphereGeometry` works while `SphereBufferGeometry` does not. The reason that `SphereBufferGeometry` does not work is because it has no groups, but has a `MultiMaterial` assigned, which causes the following code in `WebGLRenderer` to render nothing:\r\n\r\n```\r\nif ( material.isMultiMaterial ) {\r\n  var groups = geometry.groups; \/\/ What if there are no groups? Nothing will be rendered.\r\n  var materials = material.materials;\r\n\r\n  for ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n    var group = groups[ i ];\r\n    var groupMaterial = materials[ group.materialIndex ];\r\n\r\n    if ( groupMaterial.visible === true ) {\r\n      pushRenderItem( object, geometry, groupMaterial, _vector3.z, group );\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n*So why does regular `SphereGeometry` work?*\r\n\r\nThe short answer is that when `SphereGeometry` is converted to a `BufferGeometry` by the renderer, a single group is created, which allows the above code to work.\r\n\r\nThe longer answer is that:\r\n\r\n1. `SphereGeometry` is actually created by passing a `SphereBufferGeometry` to `fromBufferGeometry()`\r\n2. `fromBufferGeometry()` instances a bunch of `Face3` objects\r\n3. In the case where the `BufferGeometry` does not contain any groups, `fromBufferGeometry()` invokes the `Face3` constructor with an undefined `materialIndex`\r\n4. When the `Face3` constructor is called with `materialIndex = undefined`, it sets `this.materialIndex` to 0\r\n\r\nSo, `SphereGeometry` contains a bunch of `Face3` instances with `materialIndex = 0`. Now, when we render this:\r\n\r\n1. The renderer converts the `SphereGeometry` to a `DirectGeometry` by calling `DirectGeometry.prototype.fromGeometry()`\r\n2. `DirectGeometry.prototype.fromGeometry()` invokes `DirectGeometry.prototype.computeGroups()`, which creates groups based on material indices\r\n3. If all of the material indices are undefined, no groups are created, but in our case, all of the material indices are 0, so a single group is created\r\n\r\nThus, `SphereGeometry` renders fine because a group is automatically created by the renderer.\r\n\r\nWe can likely modify the above renderer code to handle the case where a `MultiMaterial` is assigned but no groups are defined by doing something like this:\r\n\r\n```\r\nif ( material.isMultiMaterial && geometry.groups.length > 0 ) {\r\n  var groups = geometry.groups;\r\n  var materials = material.materials;\r\n\r\n  for ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n    var group = groups[ i ];\r\n    var groupMaterial = materials[ group.materialIndex ];\r\n\r\n    if ( groupMaterial.visible === true ) {\r\n      pushRenderItem( object, geometry, groupMaterial, _vector3.z, group );\r\n    }\r\n  }\r\n} else if ( material.isMultiMaterial && material.materials.length > 0 ) {\r\n  \/\/ no groups are defined, so use the first material in the MultiMaterial\r\n  pushRenderItem( object, geometry, material.materials[ 0 ], _vector3.z, null );\r\n} else if ( !material.isMultiMaterial ) {\r\n  pushRenderItem( object, geometry, material, _vector3.z, null );\r\n}\r\n```\r\n\r\nOr we can take the approach of this pull request and define a single group for each `*BufferGeometry` type.","created_at":"2017-02-01T19:16:34.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10636#issuecomment-276752384","id":276752384,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10636","node_id":"MDEyOklzc3VlQ29tbWVudDI3Njc1MjM4NA==","updated_at":"2017-02-01T19:22:01.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/276752384","user":{"following_url":"https:\/\/api.github.com\/users\/ikerr\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/ikerr\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/884960?v=4","url":"https:\/\/api.github.com\/users\/ikerr","gists_url":"https:\/\/api.github.com\/users\/ikerr\/gists{\/gist_id}","html_url":"https:\/\/github.com\/ikerr","subscriptions_url":"https:\/\/api.github.com\/users\/ikerr\/subscriptions","node_id":"MDQ6VXNlcjg4NDk2MA==","repos_url":"https:\/\/api.github.com\/users\/ikerr\/repos","received_events_url":"https:\/\/api.github.com\/users\/ikerr\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/ikerr\/starred{\/owner}{\/repo}","site_admin":false,"login":"ikerr","type":"User","id":884960,"followers_url":"https:\/\/api.github.com\/users\/ikerr\/followers","organizations_url":"https:\/\/api.github.com\/users\/ikerr\/orgs"}},{"index":8,"author_association":"COLLABORATOR","body":">We can likely modify the above renderer code to handle the case where a MultiMaterial is assigned but no groups are defined\r\n\r\nI suggest we instead throw a warning when a MultiMaterial is used but groups are not specified.\r\n\r\n>Or we can take the approach of this pull request and define a single group for each *BufferGeometry type.\r\n\r\nIf we did that, when a users wants to specify a group, he has to first clear the default one, which should not be necessary in the first place.","created_at":"2017-02-01T19:37:12.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10636#issuecomment-276758328","id":276758328,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10636","node_id":"MDEyOklzc3VlQ29tbWVudDI3Njc1ODMyOA==","updated_at":"2017-02-01T19:37:12.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/276758328","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":9,"author_association":"CONTRIBUTOR","body":"@WestLangley If we just throw a warning when a `MultiMaterial` is used but groups are not specified (vs. handling this case), and do not add a default group to the `*BufferGeometry` types, then none of the `*BufferGeometry` types will work \"out of the box\" with `MultiMaterial`. IMO that's not desirable.","created_at":"2017-02-01T19:41:11.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10636#issuecomment-276759553","id":276759553,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10636","node_id":"MDEyOklzc3VlQ29tbWVudDI3Njc1OTU1Mw==","updated_at":"2017-02-01T19:41:11.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/276759553","user":{"following_url":"https:\/\/api.github.com\/users\/ikerr\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/ikerr\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/884960?v=4","url":"https:\/\/api.github.com\/users\/ikerr","gists_url":"https:\/\/api.github.com\/users\/ikerr\/gists{\/gist_id}","html_url":"https:\/\/github.com\/ikerr","subscriptions_url":"https:\/\/api.github.com\/users\/ikerr\/subscriptions","node_id":"MDQ6VXNlcjg4NDk2MA==","repos_url":"https:\/\/api.github.com\/users\/ikerr\/repos","received_events_url":"https:\/\/api.github.com\/users\/ikerr\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/ikerr\/starred{\/owner}{\/repo}","site_admin":false,"login":"ikerr","type":"User","id":884960,"followers_url":"https:\/\/api.github.com\/users\/ikerr\/followers","organizations_url":"https:\/\/api.github.com\/users\/ikerr\/orgs"}},{"index":10,"author_association":"COLLABORATOR","body":"I've update the PR #10698 with @WestLangley suggestions. Indeed, creating a default group could be problematic if users want to create their own groups. Maybe it's better for the moment if we just provide warnings and avoid runtime errors like #10698 does.\r\n\r\n@ikerr You're right, the variance between `Geometry` and `BufferGeometry` is an inconsistency. Not sure, how to handle this in a straightforward way without side effects...","created_at":"2017-02-01T19:52:58.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10636#issuecomment-276763034","id":276763034,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10636","node_id":"MDEyOklzc3VlQ29tbWVudDI3Njc2MzAzNA==","updated_at":"2017-02-01T20:52:46.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/276763034","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":11,"author_association":"COLLABORATOR","body":"@ikerr What is your use case? It does not make sense to use MultiMaterial unless material indices (i.e.,  groups) are specified.\r\n","created_at":"2017-02-01T19:58:22.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10636#issuecomment-276764446","id":276764446,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10636","node_id":"MDEyOklzc3VlQ29tbWVudDI3Njc2NDQ0Ng==","updated_at":"2017-02-01T19:58:22.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/276764446","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":12,"author_association":"CONTRIBUTOR","body":"In our engine we exclusively use `MultiMaterial` because it is the most general. Exclusively using `MultiMaterial` means that we don't need `material.isMultiMaterial` checks throughout our codebase. All of our \"mesh\" geometries have at least a single group defined, so `MultiMaterial` works fine for them. The problem we are having is that Three.js's primitives behave inconsistently with `MultiMaterial` - some work and some don't.\r\n\r\nTaking a step back, I think this lack of consistency between the primitives and also between the \"regular\" and `BufferGeometry`-based versions is the real problem, as @Mugen87 noted.\r\n\r\nI think the API would be cleaner if we could eliminate the following inconsistencies:\r\n\r\n1. Some primitives, like `BoxBufferGeometry`, `BoxGeometry`, `CylinderBufferGeometry` and `CylinderGeometry`, have explicit groups defined while other primitives do not. It seems reasonable that either all of the primitives should define groups (or we interpret the lack of groups as a single \"implicit\" group), or none of them should.\r\n\r\n2. The \"regular\", non-buffer geometries are created with an \"implicit\" group, because all of the material indices are initialized to 0 rather than undefined. That is, they render fine with a `MultiMaterial` applied whereas the `BufferGeometry` versions do not.\r\n\r\nSo I feel that there are two solutions: either we introduce explicit groups for each primitive (this PR in its current form), or we assume that a BufferGeometry has an \"implicit\" group when no explicit ones are present.\r\n\r\nIn a way, the renderer *already* assumes an \"implicit\" group for BufferGeometries that do not have any groups defined when it computes the draw range:\r\n\r\n```\r\nvar rangeStart = geometry.drawRange.start * rangeFactor;                        \r\nvar rangeCount = geometry.drawRange.count * rangeFactor;                        \r\n                                                                                \r\nvar groupStart = group !== null ? group.start * rangeFactor : 0;                \r\nvar groupCount = group !== null ? group.count * rangeFactor : Infinity;                                                                                         \r\nvar drawStart = Math.max( rangeStart, groupStart );                             \r\nvar drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\r\n                                                                                \r\nvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\r\n```\r\n\r\nIt seems reasonable to extend this idea and make the renderer assume that the \"implicit\" group has a `materialIndex` set to 0, which it already does for non-buffer geometries.","created_at":"2017-02-01T20:34:35.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10636#issuecomment-276773875","id":276773875,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10636","node_id":"MDEyOklzc3VlQ29tbWVudDI3Njc3Mzg3NQ==","updated_at":"2017-02-01T20:34:35.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/276773875","user":{"following_url":"https:\/\/api.github.com\/users\/ikerr\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/ikerr\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/884960?v=4","url":"https:\/\/api.github.com\/users\/ikerr","gists_url":"https:\/\/api.github.com\/users\/ikerr\/gists{\/gist_id}","html_url":"https:\/\/github.com\/ikerr","subscriptions_url":"https:\/\/api.github.com\/users\/ikerr\/subscriptions","node_id":"MDQ6VXNlcjg4NDk2MA==","repos_url":"https:\/\/api.github.com\/users\/ikerr\/repos","received_events_url":"https:\/\/api.github.com\/users\/ikerr\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/ikerr\/starred{\/owner}{\/repo}","site_admin":false,"login":"ikerr","type":"User","id":884960,"followers_url":"https:\/\/api.github.com\/users\/ikerr\/followers","organizations_url":"https:\/\/api.github.com\/users\/ikerr\/orgs"}},{"index":13,"author_association":"COLLABORATOR","body":">It seems reasonable to extend this idea and make the renderer assume that the \"implicit\" group has a materialIndex set to 0, which it already does for non-buffer geometries.\r\n\r\n@ikerr Yes, that is the solution I was thinking of when I suggested we fix the renderer, instead.\r\n\r\nThing is, one could also argue that it does not make sense to use MultiMaterial unless material indices (i.e., groups) are specified. So a warning is appropriate.\r\n\r\nI would be open to either.","created_at":"2017-02-01T21:16:46.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10636#issuecomment-276784882","id":276784882,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10636","node_id":"MDEyOklzc3VlQ29tbWVudDI3Njc4NDg4Mg==","updated_at":"2017-02-01T21:16:46.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/276784882","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":14,"author_association":"CONTRIBUTOR","body":"Can you guys please check-out #10093? Certainly wasn't my primary intention, but I may have already resolved this.\r\n\r\nAnd I _really_ don't want to have to rebase again :wink:","created_at":"2017-02-04T01:39:15.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10636#issuecomment-277407797","id":277407797,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10636","node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQwNzc5Nw==","updated_at":"2017-02-04T01:39:15.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/277407797","user":{"following_url":"https:\/\/api.github.com\/users\/Benjamin-Dobell\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Benjamin-Dobell\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/482276?v=4","url":"https:\/\/api.github.com\/users\/Benjamin-Dobell","gists_url":"https:\/\/api.github.com\/users\/Benjamin-Dobell\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Benjamin-Dobell","subscriptions_url":"https:\/\/api.github.com\/users\/Benjamin-Dobell\/subscriptions","node_id":"MDQ6VXNlcjQ4MjI3Ng==","repos_url":"https:\/\/api.github.com\/users\/Benjamin-Dobell\/repos","received_events_url":"https:\/\/api.github.com\/users\/Benjamin-Dobell\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Benjamin-Dobell\/starred{\/owner}{\/repo}","site_admin":false,"login":"Benjamin-Dobell","type":"User","id":482276,"followers_url":"https:\/\/api.github.com\/users\/Benjamin-Dobell\/followers","organizations_url":"https:\/\/api.github.com\/users\/Benjamin-Dobell\/orgs"}},{"index":15,"author_association":"CONTRIBUTOR","body":"<img width=\"719\" alt=\"screen shot 2017-02-04 at 1 28 53 pm\" src=\"https:\/\/cloud.githubusercontent.com\/assets\/482276\/22614916\/ec2bfb18-eadd-11e6-8aa3-69eb8967f532.png\">\r\n\r\nThis is what I'm seeing with my pull request. This is correct?\r\n\r\n**EDIT:** I didn't add any explicit groups to the shapes to achieve this. The renderer has just been refactored\/generalised as part of the instancing changes.","created_at":"2017-02-04T02:30:00.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10636#issuecomment-277411865","id":277411865,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10636","node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQxMTg2NQ==","updated_at":"2017-02-04T02:31:28.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/277411865","user":{"following_url":"https:\/\/api.github.com\/users\/Benjamin-Dobell\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Benjamin-Dobell\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/482276?v=4","url":"https:\/\/api.github.com\/users\/Benjamin-Dobell","gists_url":"https:\/\/api.github.com\/users\/Benjamin-Dobell\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Benjamin-Dobell","subscriptions_url":"https:\/\/api.github.com\/users\/Benjamin-Dobell\/subscriptions","node_id":"MDQ6VXNlcjQ4MjI3Ng==","repos_url":"https:\/\/api.github.com\/users\/Benjamin-Dobell\/repos","received_events_url":"https:\/\/api.github.com\/users\/Benjamin-Dobell\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Benjamin-Dobell\/starred{\/owner}{\/repo}","site_admin":false,"login":"Benjamin-Dobell","type":"User","id":482276,"followers_url":"https:\/\/api.github.com\/users\/Benjamin-Dobell\/followers","organizations_url":"https:\/\/api.github.com\/users\/Benjamin-Dobell\/orgs"}},{"index":16,"author_association":"OWNER","body":"I agree with @WestLangley. Is there any way we can make the example a little bit more illustrative?","created_at":"2017-02-15T06:25:14.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10636#issuecomment-279927734","id":279927734,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10636","node_id":"MDEyOklzc3VlQ29tbWVudDI3OTkyNzczNA==","updated_at":"2017-02-15T06:25:14.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/279927734","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":17,"author_association":"CONTRIBUTOR","body":"Sorry for the tardiness on this, I've been sidetracked with other things and have been waiting to see how issue #10093 played out.\r\n\r\nI'll modify this PR so that the renderer handles the existing primitives properly (vs. modifying the primitives), as we discussed above.\r\n\r\nI'm not sure what to do about the example. We could just get rid of it, but it does give us a way to verify that `MultiMaterial` is compatible with the various primitives.\r\n\r\nDoes that sound good? @WestLangley @mrdoob @Mugen87 ","created_at":"2017-02-18T18:29:58.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10636#issuecomment-280865251","id":280865251,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10636","node_id":"MDEyOklzc3VlQ29tbWVudDI4MDg2NTI1MQ==","updated_at":"2017-02-18T18:29:58.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/280865251","user":{"following_url":"https:\/\/api.github.com\/users\/ikerr\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/ikerr\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/884960?v=4","url":"https:\/\/api.github.com\/users\/ikerr","gists_url":"https:\/\/api.github.com\/users\/ikerr\/gists{\/gist_id}","html_url":"https:\/\/github.com\/ikerr","subscriptions_url":"https:\/\/api.github.com\/users\/ikerr\/subscriptions","node_id":"MDQ6VXNlcjg4NDk2MA==","repos_url":"https:\/\/api.github.com\/users\/ikerr\/repos","received_events_url":"https:\/\/api.github.com\/users\/ikerr\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/ikerr\/starred{\/owner}{\/repo}","site_admin":false,"login":"ikerr","type":"User","id":884960,"followers_url":"https:\/\/api.github.com\/users\/ikerr\/followers","organizations_url":"https:\/\/api.github.com\/users\/ikerr\/orgs"}},{"index":18,"author_association":"COLLABORATOR","body":"@ikerr Check and see to what extent your issue has been resolved in the `dev` branch.","created_at":"2017-02-19T04:04:28.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10636#issuecomment-280894431","id":280894431,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10636","node_id":"MDEyOklzc3VlQ29tbWVudDI4MDg5NDQzMQ==","updated_at":"2017-02-19T04:04:28.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/280894431","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":19,"author_association":"CONTRIBUTOR","body":"Looks like this was fixed in pull-request #10698 Thanks @Mugen87 !","created_at":"2017-02-22T20:06:54.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10636#issuecomment-281787134","id":281787134,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10636","node_id":"MDEyOklzc3VlQ29tbWVudDI4MTc4NzEzNA==","updated_at":"2017-02-22T20:07:31.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/281787134","user":{"following_url":"https:\/\/api.github.com\/users\/ikerr\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/ikerr\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/884960?v=4","url":"https:\/\/api.github.com\/users\/ikerr","gists_url":"https:\/\/api.github.com\/users\/ikerr\/gists{\/gist_id}","html_url":"https:\/\/github.com\/ikerr","subscriptions_url":"https:\/\/api.github.com\/users\/ikerr\/subscriptions","node_id":"MDQ6VXNlcjg4NDk2MA==","repos_url":"https:\/\/api.github.com\/users\/ikerr\/repos","received_events_url":"https:\/\/api.github.com\/users\/ikerr\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/ikerr\/starred{\/owner}{\/repo}","site_admin":false,"login":"ikerr","type":"User","id":884960,"followers_url":"https:\/\/api.github.com\/users\/ikerr\/followers","organizations_url":"https:\/\/api.github.com\/users\/ikerr\/orgs"}}]}