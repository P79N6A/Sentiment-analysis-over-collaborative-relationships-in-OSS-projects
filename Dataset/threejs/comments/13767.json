{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"COLLABORATOR","body":"Normals in three.js are assumed to have unit length. The library does not validate inputs, however.\r\n\r\nWe already have `BufferGeometry.normalizeNormals()`. In that method, zero-vectors are left unchanged. Zero-vectors are considered a user error.\r\n","created_at":"2018-04-04T17:57:48.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13767#issuecomment-378689961","id":378689961,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13767","node_id":"MDEyOklzc3VlQ29tbWVudDM3ODY4OTk2MQ==","updated_at":"2018-04-04T17:57:48.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/378689961","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":1,"author_association":"COLLABORATOR","body":"We already concluded in another thread that `GLTFExporter` should ensure exporting valid glTF even if model has unexpected values, like zero-vectors or non-unit length normal.","created_at":"2018-04-04T18:48:19.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13767#issuecomment-378705591","id":378705591,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13767","node_id":"MDEyOklzc3VlQ29tbWVudDM3ODcwNTU5MQ==","updated_at":"2018-04-04T19:50:37.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/378705591","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":2,"author_association":"COLLABORATOR","body":"Looking good so far, just two requests:\r\n- I'd add a `checkNormalizedNormals` (or so) parameter :)\r\n- What about checking just the normals that we're going to actually export? We already use `drawRange` to detect the number of attributes to export: https:\/\/github.com\/mrdoob\/three.js\/blob\/dev\/examples\/js\/exporters\/GLTFExporter.js#L467-L479 so we could save some time computing unused normals on very big buffers (like the vr paint examples).","created_at":"2018-04-04T18:55:57.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13767#issuecomment-378707811","id":378707811,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13767","node_id":"MDEyOklzc3VlQ29tbWVudDM3ODcwNzgxMQ==","updated_at":"2018-04-04T18:55:57.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/378707811","user":{"following_url":"https:\/\/api.github.com\/users\/fernandojsg\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/fernandojsg\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/782511?v=4","url":"https:\/\/api.github.com\/users\/fernandojsg","gists_url":"https:\/\/api.github.com\/users\/fernandojsg\/gists{\/gist_id}","html_url":"https:\/\/github.com\/fernandojsg","subscriptions_url":"https:\/\/api.github.com\/users\/fernandojsg\/subscriptions","node_id":"MDQ6VXNlcjc4MjUxMQ==","repos_url":"https:\/\/api.github.com\/users\/fernandojsg\/repos","received_events_url":"https:\/\/api.github.com\/users\/fernandojsg\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/fernandojsg\/starred{\/owner}{\/repo}","site_admin":false,"login":"fernandojsg","type":"User","id":782511,"followers_url":"https:\/\/api.github.com\/users\/fernandojsg\/followers","organizations_url":"https:\/\/api.github.com\/users\/fernandojsg\/orgs"}},{"index":3,"author_association":"COLLABORATOR","body":"> I'd add a checkNormalizedNormals (or so) parameter :)\r\n\r\nI wanna think that option if we see the actual use case\/model where the checking (quite) slows the performance. I still a bit doubt the checking does... So evaluating first.\r\n\r\n> What about checking just the normals that we're going to actually export?\r\n\r\nIf we do that, perhaps it might be better to check\/ensure in `processBuffer(View)` as you first suggested. Let me think about it...","created_at":"2018-04-04T19:10:38.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13767#issuecomment-378712529","id":378712529,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13767","node_id":"MDEyOklzc3VlQ29tbWVudDM3ODcxMjUyOQ==","updated_at":"2018-04-04T20:35:15.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/378712529","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":4,"author_association":"COLLABORATOR","body":"> I wanna think that option if we see the actual use case\/model where checking (quite) slows the performance. I still a bit doubt checking does... So evaluating first.\r\n\r\nYou are right, I just did a quick test with a big enough buffer and it was quick to normalize:\r\n```javascript\r\nvar geometry = new THREE.BufferGeometry();\r\nvar numElements = 10000000;\r\nvar positions = new THREE.BufferAttribute( new Float32Array( numElements * 3 ), 3 );\r\npositions.dynamic = true;\r\ngeometry.addAttribute( 'position', positions );\r\n\r\nvar normals = new THREE.BufferAttribute( new Float32Array( numElements * 3 ), 3 );\r\nnormals.dynamic = true;\r\ngeometry.addAttribute( 'normal', normals );\r\ngeometry.normalizeNormals();\r\n```","created_at":"2018-04-04T19:44:43.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13767#issuecomment-378722068","id":378722068,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13767","node_id":"MDEyOklzc3VlQ29tbWVudDM3ODcyMjA2OA==","updated_at":"2018-04-04T19:45:08.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/378722068","user":{"following_url":"https:\/\/api.github.com\/users\/fernandojsg\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/fernandojsg\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/782511?v=4","url":"https:\/\/api.github.com\/users\/fernandojsg","gists_url":"https:\/\/api.github.com\/users\/fernandojsg\/gists{\/gist_id}","html_url":"https:\/\/github.com\/fernandojsg","subscriptions_url":"https:\/\/api.github.com\/users\/fernandojsg\/subscriptions","node_id":"MDQ6VXNlcjc4MjUxMQ==","repos_url":"https:\/\/api.github.com\/users\/fernandojsg\/repos","received_events_url":"https:\/\/api.github.com\/users\/fernandojsg\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/fernandojsg\/starred{\/owner}{\/repo}","site_admin":false,"login":"fernandojsg","type":"User","id":782511,"followers_url":"https:\/\/api.github.com\/users\/fernandojsg\/followers","organizations_url":"https:\/\/api.github.com\/users\/fernandojsg\/orgs"}},{"index":5,"author_association":"COLLABORATOR","body":"I've just tried with a-painter and works as expected :+1: ","created_at":"2018-04-05T20:19:53.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13767#issuecomment-379063818","id":379063818,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13767","node_id":"MDEyOklzc3VlQ29tbWVudDM3OTA2MzgxOA==","updated_at":"2018-04-05T20:19:53.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/379063818","user":{"following_url":"https:\/\/api.github.com\/users\/fernandojsg\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/fernandojsg\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/782511?v=4","url":"https:\/\/api.github.com\/users\/fernandojsg","gists_url":"https:\/\/api.github.com\/users\/fernandojsg\/gists{\/gist_id}","html_url":"https:\/\/github.com\/fernandojsg","subscriptions_url":"https:\/\/api.github.com\/users\/fernandojsg\/subscriptions","node_id":"MDQ6VXNlcjc4MjUxMQ==","repos_url":"https:\/\/api.github.com\/users\/fernandojsg\/repos","received_events_url":"https:\/\/api.github.com\/users\/fernandojsg\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/fernandojsg\/starred{\/owner}{\/repo}","site_admin":false,"login":"fernandojsg","type":"User","id":782511,"followers_url":"https:\/\/api.github.com\/users\/fernandojsg\/followers","organizations_url":"https:\/\/api.github.com\/users\/fernandojsg\/orgs"}},{"index":6,"author_association":"COLLABORATOR","body":"Cool.\r\n\r\nLet's think those two options if\/when we see this checking actually affects the performance.","created_at":"2018-04-05T21:36:49.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13767#issuecomment-379084489","id":379084489,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13767","node_id":"MDEyOklzc3VlQ29tbWVudDM3OTA4NDQ4OQ==","updated_at":"2018-04-05T21:36:49.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/379084489","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":7,"author_association":"OWNER","body":"Thanks!","created_at":"2018-04-07T15:46:30.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/13767#issuecomment-379478845","id":379478845,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13767","node_id":"MDEyOklzc3VlQ29tbWVudDM3OTQ3ODg0NQ==","updated_at":"2018-04-07T15:46:30.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/379478845","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}}]}