{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"CONTRIBUTOR","body":"Related:\r\n\r\n#14231\r\n#14206\r\n#14166\r\n#14099\r\n#14098\r\n#14031\r\n#13198\r\n#10791\r\n#13446\r\n#14009\r\n#14011 \r\n#13192\r\n#7581\r\n#13364\r\n#12977\r\n#11562\r\n\r\nMy observation from these is that overall these kind of modifications to the built-in materials are not advised, and seen as an anti-pattern over both currently available alternatives and future proposed ones (see #14098 specifically, where template copying and casting to `ShaderMaterial` is advised over `onBeforeCompile` and modifications). \r\n\r\nAre you familiar with `NodeMaterial` (#7522) ? It looks like it should solve this without the need for hacks like `onBeforeCompile`. \r\n","created_at":"2018-06-07T08:32:03.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14232#issuecomment-395338409","id":395338409,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14232","node_id":"MDEyOklzc3VlQ29tbWVudDM5NTMzODQwOQ==","updated_at":"2018-06-07T08:49:08.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/395338409","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":1,"author_association":"CONTRIBUTOR","body":">**we** can detect\r\n\r\nI find this proposal too restrictive. #14231 proposes something which may possibly be a bit more flexible and leave this kind of warning to whomever implements some feature using some extension API. Three.js throws a lot of warnings as is. \r\n\r\n\r\nI've mustered up this demo with #14231:\r\n\r\n[![bbsginst](https:\/\/user-images.githubusercontent.com\/4681282\/41088460-74348de0-69f4-11e8-856b-3b802ce092ce.PNG)](http:\/\/dusanbosnjak.com\/test\/webGL\/three-material-includes\/)\r\n\r\nIt shows how to create a simple sub class of `THREE.MeshStandardMaterial` that uses spec\/gloss, uses it within `GLTFLoader` and then independently adds map transformations and instancing. There is one possible conflict, but i believe it's due to the current state of the templates not the approach. Where you would throw a warning, the demo actually takes \"a\" and modifies it. \r\n\r\n#14231 takes a very minimalist approach, it is aiming to touch the least amount of files, and the least amount of lines, while being in compliance with the linter and legible. I imagine a much more powerful interface could be conceived if it had the privilege to introduce it's own classes like you're proposing:\r\n\r\n```\r\nnew ShaderTransformReplace()\r\n```","created_at":"2018-06-07T08:34:17.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14232#issuecomment-395339060","id":395339060,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14232","node_id":"MDEyOklzc3VlQ29tbWVudDM5NTMzOTA2MA==","updated_at":"2018-06-07T08:52:10.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/395339060","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":2,"author_association":"CONTRIBUTOR","body":"I think your approach is valid. Although i don't like the \"zoo\" of include sources. I would have preferred an include library, which may cascade internally and have overrides, but keep that away from the encapsulating logic.\r\n\r\nThe overall problem that I see with `.onBeforeCompile` - it's so flexible as to invalidate a large array of useful assumptions. Your approach is also static - which I like.\r\n\r\nMaybe a title \"`.onBeforeCompile` considered harmful\" would have been more traditional :)\r\n\r\nNode-based approach is solid, in my eyes, but the implementation leaves everything else to be desired, in my eyes. If you want to have a decent node-based system, you need a solid build pipeline, which I didn't find.\r\n\r\nI think, following your approach is better, provided a chunk library is encapsulated. Something like:\r\n```js\r\nclass Material{\r\n    constructor(){\r\n          this.chunkLibrary =  new ShaderChunkLibrary({parent: THREE.DefaultChunkLibrary});\r\n    }\r\n    ...\r\n}\r\n``` \r\n\r\nand then you could do:\r\n```js\r\nmyMaterial.chunkLibrary.set('chunky-hippo','hippo = chunky');\r\nmyMaterial.chunkLibrary.set('begin_vertex',\r\n     `float _ind = aIndex + uTime;\r\n      transformed *= 1. + 0.5 * sin(${frequency}.0 * ${Math.PI} * _ind );`\r\n);\r\n```","created_at":"2018-06-07T14:53:17.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14232#issuecomment-395450052","id":395450052,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14232","node_id":"MDEyOklzc3VlQ29tbWVudDM5NTQ1MDA1Mg==","updated_at":"2018-06-07T14:53:17.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/395450052","user":{"following_url":"https:\/\/api.github.com\/users\/Usnul\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Usnul\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/5939063?v=4","url":"https:\/\/api.github.com\/users\/Usnul","gists_url":"https:\/\/api.github.com\/users\/Usnul\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Usnul","subscriptions_url":"https:\/\/api.github.com\/users\/Usnul\/subscriptions","node_id":"MDQ6VXNlcjU5MzkwNjM=","repos_url":"https:\/\/api.github.com\/users\/Usnul\/repos","received_events_url":"https:\/\/api.github.com\/users\/Usnul\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Usnul\/starred{\/owner}{\/repo}","site_admin":false,"login":"Usnul","type":"User","id":5939063,"followers_url":"https:\/\/api.github.com\/users\/Usnul\/followers","organizations_url":"https:\/\/api.github.com\/users\/Usnul\/orgs"}},{"index":3,"author_association":"CONTRIBUTOR","body":"I'd land the includes as is, without introducing new classes. I took extreme care to keep the amount of code change to a minimum, since, it's been impossible so far to convince anyone that this may be useful, and that it's completely opt in.\r\n\r\nAll these PRs have been blocked by `NodeMaterial`, i don't care at all what happens with `NodeMaterial` but i do not understand why it's being a blocker for completely unrelated things (the only thing these have in common i they work on `Material`s). \r\n\r\nCould you possibly voice some thoughts in the other PRs? ","created_at":"2018-06-07T16:04:36.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14232#issuecomment-395475825","id":395475825,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14232","node_id":"MDEyOklzc3VlQ29tbWVudDM5NTQ3NTgyNQ==","updated_at":"2018-06-07T16:04:36.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/395475825","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":4,"author_association":"COLLABORATOR","body":"@Usnul would you have time to write up your concerns and suggestions for NodeMaterial implementation in #7522, if you haven\u2019t previously?","created_at":"2018-06-07T16:38:10.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14232#issuecomment-395486498","id":395486498,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14232","node_id":"MDEyOklzc3VlQ29tbWVudDM5NTQ4NjQ5OA==","updated_at":"2018-06-07T16:38:10.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/395486498","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":5,"author_association":"CONTRIBUTOR","body":">Could you possibly voice some thoughts in the other PRs?\r\n\r\nComing from the context of just \"material extension\" (as it's stated in the title), please do not limit yourself to just #7522, it's only one of the proposals to achieve this. Please, look at the other PRs plural. Thank you :)\r\n\r\n> I would have preferred an include library,\r\n\r\nThere's no reason not to build one with #14098, but my opinion is that the user should not be limited to one. They should be allowed to use whichever library they choose, and be allowed to use the language\/environment (javascript) to achieve so. ","created_at":"2018-06-07T17:04:28.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14232#issuecomment-395494321","id":395494321,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14232","node_id":"MDEyOklzc3VlQ29tbWVudDM5NTQ5NDMyMQ==","updated_at":"2018-06-07T20:25:43.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/395494321","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":6,"author_association":"CONTRIBUTOR","body":"@pailhead \r\n> Please, look at the other PRs plural. Thank you :)\r\n\r\nI have spent some hours reading through some of the topics you have linked. It's a bit more than what I have time for currently and I do not wish to comment without have a good grasp on the conversation.\r\n\r\n> There's no reason not to build one with #14098, but my opinion is that the user should not be limited to one. They should be allowed to use whichever library they choose, and be allowed to use the language\/environment (javascript) to achieve so.\r\n\r\nI think there's a misunderstanding. I do not mean a `javascript` library, i mean library in the sense of collection. A collection of glsl code snippets with a reference name. \r\n\r\n> my opinion is that the user should not be limited to one. \r\n\r\nAs far as \"one\" goes - I believe that's a misunderstanding too, I was not clear enough I believe. What I have sketched out is a cascading structure, where a library may have a parent and when resolving a snippet by reference - parent is to be queries if library itself doesn't contain the reference. Think css.\r\n\r\nYou could have multiple parents too, if that would make sense.","created_at":"2018-06-08T11:30:08.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14232#issuecomment-395733296","id":395733296,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14232","node_id":"MDEyOklzc3VlQ29tbWVudDM5NTczMzI5Ng==","updated_at":"2018-06-08T11:30:53.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/395733296","user":{"following_url":"https:\/\/api.github.com\/users\/Usnul\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Usnul\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/5939063?v=4","url":"https:\/\/api.github.com\/users\/Usnul","gists_url":"https:\/\/api.github.com\/users\/Usnul\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Usnul","subscriptions_url":"https:\/\/api.github.com\/users\/Usnul\/subscriptions","node_id":"MDQ6VXNlcjU5MzkwNjM=","repos_url":"https:\/\/api.github.com\/users\/Usnul\/repos","received_events_url":"https:\/\/api.github.com\/users\/Usnul\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Usnul\/starred{\/owner}{\/repo}","site_admin":false,"login":"Usnul","type":"User","id":5939063,"followers_url":"https:\/\/api.github.com\/users\/Usnul\/followers","organizations_url":"https:\/\/api.github.com\/users\/Usnul\/orgs"}},{"index":7,"author_association":"CONTRIBUTOR","body":"I don't quite understand it still. I didn't mean a javascript library either, but if a dictionary is suitable for this, i meant you should be able to assemble that dictionary yourself (or just reference it from somewhere). We could continue this in #14098, since it does seem to apply and doesn't have to be as generic of a discussion.","created_at":"2018-06-08T17:18:47.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14232#issuecomment-395828362","id":395828362,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14232","node_id":"MDEyOklzc3VlQ29tbWVudDM5NTgyODM2Mg==","updated_at":"2018-06-08T17:18:47.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/395828362","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":8,"author_association":"CONTRIBUTOR","body":"@pailhead I think we're on the same page.","created_at":"2018-06-09T22:41:34.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14232#issuecomment-396003822","id":396003822,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14232","node_id":"MDEyOklzc3VlQ29tbWVudDM5NjAwMzgyMg==","updated_at":"2018-06-09T22:41:34.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/396003822","user":{"following_url":"https:\/\/api.github.com\/users\/Usnul\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Usnul\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/5939063?v=4","url":"https:\/\/api.github.com\/users\/Usnul","gists_url":"https:\/\/api.github.com\/users\/Usnul\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Usnul","subscriptions_url":"https:\/\/api.github.com\/users\/Usnul\/subscriptions","node_id":"MDQ6VXNlcjU5MzkwNjM=","repos_url":"https:\/\/api.github.com\/users\/Usnul\/repos","received_events_url":"https:\/\/api.github.com\/users\/Usnul\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Usnul\/starred{\/owner}{\/repo}","site_admin":false,"login":"Usnul","type":"User","id":5939063,"followers_url":"https:\/\/api.github.com\/users\/Usnul\/followers","organizations_url":"https:\/\/api.github.com\/users\/Usnul\/orgs"}},{"index":9,"author_association":"CONTRIBUTOR","body":"@Usnul \r\n\r\nI believe we are. My confidence has been shaken up by the many so many rejections, but this helps :)\r\n\r\nYou've done the courtesy to @donmccurdy and commented on #7522 API, where I believe we're also on the same page. \r\n\r\nCan you do me the courtesy and comment on #14245, or even #7522? When a single user shows up and asks for an arguably obscure feature, it get's implemented over 13 core `\/renderer` files in a matter of hours or days. \r\n\r\nWhen many other users suggest PR's or raise issues, it is blocked by #7522. \r\n\r\nI want to draw a diagram of processes and dependencies to try to illustrate better what i see as a problem here, it seems to be the only way. In lieu of that for now, i can try to explain it. \r\n\r\nLet's consider 10 different projects\/apps\/examples\/effects that use features that are today not available in core nor in `\/examples`.\r\n\r\nOut of these 10 features, five can be coded on top of three.js, and submitted to `\/examples`. \r\n\r\n**^ this is a good thing.** All it takes is to deem the example useful (\"cool, people would want to do this\") and since it's just new files being added to `\/examples` the risk of landing this is minimal to non-existent.\r\n\r\nThe other five though, cannot be coded on top of three.js and require some core changes. Adding five different PR's that touch renderers, shaders etc. would carry a tremendous amount of overhead. Based on historical data, these five would take longer to land than the first two. \r\n\r\nA perfect example of this can be seen here. The overhead starts in #14139 and continues in #14239\r\n\r\n1. user describes a need for a feature\r\n2. user asks(?) for a feature (says it would be \"fun\" not \"useful\", it's a bit ambigous)\r\n3. request for clarification is made\r\n4. community provides clarification \r\n5. user provides clarification\r\n6. community provides feedback\r\n7. maintainer commits to providing feature\r\n8. community suggests API\r\n9. maintainer submits RFI\r\n10. community replies to RFI\r\n11, a need for test data is established\r\n12. test data is requested\r\n13. test data is provided (ISSUE END)\r\n14. maintainer touches 13 core files\r\n15. maintainer submits PR\r\n16. community provides mixed feedback\r\n17. PR is accepted\r\n\r\nThis problem `object space normal maps would be fun` can be solved with the system proposed here (and in the past) with a much simpler process:\r\n\r\n1. user codes a feature (either in one file, or built to one file)\r\n2. User submits the PR with the one file example, and dependent data, including an explanation\r\n3. community provides feedback on the usefulness of the example\r\n4. two new files in `\/examples` are either rejected or accepted\r\n\r\nWith the looming refactor from #7522 i fail to see how further coupling `WebGLRenderer` with built-in material benefits the road map. \r\n\r\nI think i struggle with understanding how stuff in `\/examples` fits the big picture of this library. \r\nAre some examples more valuable than the others? Are some or all of them in there temporarily as sort of a testing ground before they get merged? Do some carry more weight than the others when it comes to influencing core changes? \r\n\r\nWith a static system like the one proposed specifically in https:\/\/github.com\/mrdoob\/three.js\/pull\/14231 - #14239 becomes this:\r\n\r\n```javascript\r\nmyMaterial.shaderUniforms.object_space_normal_normalMatrix =  { value: myObject.normalMatrix, stage: 'fragment', type: 'mat3' }\r\nmyMaterial.shaderIncludes.normal_fragment_maps =  `\r\nnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0; \r\n#ifdef FLIP_SIDED\r\n  normal = - normal;\r\n#endif\r\n#ifdef DOUBLE_SIDED\r\n  normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\r\n#endif\r\nnormal = normalize( object_space_normal_normalMatrix * normal );\r\n`\r\n```\r\n\r\n\r\n","created_at":"2018-06-09T23:43:14.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14232#issuecomment-396006707","id":396006707,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14232","node_id":"MDEyOklzc3VlQ29tbWVudDM5NjAwNjcwNw==","updated_at":"2018-06-09T23:43:14.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/396006707","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":10,"author_association":"CONTRIBUTOR","body":"With a system proposed in this issue, new shader features could be \"staged\" or tested in `\/examples` first, before being implemented in the core. No idea if  this would actually have any value, but it could keep some features as opt-in for a certain period of time. https:\/\/github.com\/mrdoob\/three.js\/pull\/14239 for example - if i haven't used this feature for 92 of three.js's releases, i probably won't jump in to use it in the 93rd. But any update of any app to 93 will compel me to include this code. \r\n\r\n```\r\nvar osnm = require('object-space-normal-maps')\r\n```\r\n\r\nWould allow me to opt in. ","created_at":"2018-06-09T23:49:00.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14232#issuecomment-396007073","id":396007073,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14232","node_id":"MDEyOklzc3VlQ29tbWVudDM5NjAwNzA3Mw==","updated_at":"2018-06-09T23:49:00.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/396007073","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":11,"author_association":"OWNER","body":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14245#issuecomment-397957636","created_at":"2018-06-18T06:56:15.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14232#issuecomment-397958902","id":397958902,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14232","node_id":"MDEyOklzc3VlQ29tbWVudDM5Nzk1ODkwMg==","updated_at":"2018-06-18T06:56:15.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/397958902","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":12,"author_association":"CONTRIBUTOR","body":"@mrdoob \r\nI appreciate your response. But it doesn't address the topic, if `Node`-based shaders are the way forward - what's the plan then? They have been in the oven for a long while now, we have `onBeforeCompile` meanwhile, which people (myself included) build upon, but that's a bad solution long-term. Is the plan to wait for a couple of years until Node-based solution is ready and there is a ton of code built on top on `onBeforeCompile`?\r\n\r\nI believe that `onBeforeCompile` is harmful architecturally. If you read the post you will know some of the reasons why, I would be happy to elaborate further if you want. Your mention does not address this concern. I want a viable replacement, and not in 2 years time.","created_at":"2018-06-18T17:56:02.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14232#issuecomment-398141078","id":398141078,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14232","node_id":"MDEyOklzc3VlQ29tbWVudDM5ODE0MTA3OA==","updated_at":"2018-06-18T17:56:02.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/398141078","user":{"following_url":"https:\/\/api.github.com\/users\/Usnul\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Usnul\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/5939063?v=4","url":"https:\/\/api.github.com\/users\/Usnul","gists_url":"https:\/\/api.github.com\/users\/Usnul\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Usnul","subscriptions_url":"https:\/\/api.github.com\/users\/Usnul\/subscriptions","node_id":"MDQ6VXNlcjU5MzkwNjM=","repos_url":"https:\/\/api.github.com\/users\/Usnul\/repos","received_events_url":"https:\/\/api.github.com\/users\/Usnul\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Usnul\/starred{\/owner}{\/repo}","site_admin":false,"login":"Usnul","type":"User","id":5939063,"followers_url":"https:\/\/api.github.com\/users\/Usnul\/followers","organizations_url":"https:\/\/api.github.com\/users\/Usnul\/orgs"}},{"index":13,"author_association":"COLLABORATOR","body":"@Usnul from your comments in https:\/\/github.com\/mrdoob\/three.js\/issues\/7522#issuecomment-395731605 (thank you for writing those by the way!) I assumed your worry was mainly about the internal structure and code clarity of NodeMaterial, and that you weren't concerned about \u2014 or haven't had time to consider \u2014 its functionality or readiness for use. Is that accurate?\r\n\r\nI would like to think we can have NodeMaterial in good shape within months, not years. On that timescale, a general shader transform system would be unnecessary. ","created_at":"2018-06-18T18:37:36.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14232#issuecomment-398153492","id":398153492,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14232","node_id":"MDEyOklzc3VlQ29tbWVudDM5ODE1MzQ5Mg==","updated_at":"2018-06-18T19:43:31.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/398153492","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":14,"author_association":"OWNER","body":"@Usnul \r\n\r\n> I believe that `onBeforeCompile` is harmful architecturally. \r\n\r\nYeah, adding that method was a mistake on my part. But sometimes you need to experiment until finding the right solution...\r\n\r\n> I want a viable replacement, and not in 2 years time.\r\n\r\nWe do what we can.","created_at":"2018-06-18T19:40:49.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14232#issuecomment-398171318","id":398171318,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14232","node_id":"MDEyOklzc3VlQ29tbWVudDM5ODE3MTMxOA==","updated_at":"2018-06-18T19:40:49.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/398171318","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":15,"author_association":"CONTRIBUTOR","body":"It might be worth giving some insight into what's in store for `onBeforeCompile`. It's used in `NodeMaterial` to automatically run `.build()` atm. ","created_at":"2018-06-18T20:00:08.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14232#issuecomment-398176765","id":398176765,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14232","node_id":"MDEyOklzc3VlQ29tbWVudDM5ODE3Njc2NQ==","updated_at":"2018-06-18T20:00:08.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/398176765","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":16,"author_association":"CONTRIBUTOR","body":"@donmccurdy \r\nMy takeaway from this is that there is no plan to touch `onBeforeCompile` currently with the expectation that `Node`-based shaders will be ready soon (within a 2+ months)\r\n\r\nwrt `Node`-based shader in general, yes, I find the solution to be a desirable one, my issue is with how it's done, and that's separate from the current thread - you're absolutely right.\r\n\r\n@mrdoob \r\nI apologize if I come off as hard. I make no demands, merely express my wishes to clarify my position. I am thankful for the work of yourself and other capable and diverse individuals who have in the past, currently are, and will in the future be contributing to making three.js great, again - I'm sorry if that was not clear.\r\n\r\n@pailhead \r\nThanks for the pointer. Documentation for that code will be a substantial undertaking.","created_at":"2018-06-19T08:53:20.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14232#issuecomment-398325379","id":398325379,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14232","node_id":"MDEyOklzc3VlQ29tbWVudDM5ODMyNTM3OQ==","updated_at":"2018-06-19T08:55:06.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/398325379","user":{"following_url":"https:\/\/api.github.com\/users\/Usnul\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Usnul\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/5939063?v=4","url":"https:\/\/api.github.com\/users\/Usnul","gists_url":"https:\/\/api.github.com\/users\/Usnul\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Usnul","subscriptions_url":"https:\/\/api.github.com\/users\/Usnul\/subscriptions","node_id":"MDQ6VXNlcjU5MzkwNjM=","repos_url":"https:\/\/api.github.com\/users\/Usnul\/repos","received_events_url":"https:\/\/api.github.com\/users\/Usnul\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Usnul\/starred{\/owner}{\/repo}","site_admin":false,"login":"Usnul","type":"User","id":5939063,"followers_url":"https:\/\/api.github.com\/users\/Usnul\/followers","organizations_url":"https:\/\/api.github.com\/users\/Usnul\/orgs"}},{"index":17,"author_association":"CONTRIBUTOR","body":">Documentation for that code will be a substantial undertaking. \r\n\r\nIs there a known timeline for this? It's hard to follow `NodeMaterial` PRs atm because they are several thousands lines of code. ","created_at":"2018-06-21T20:28:25.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14232#issuecomment-399232615","id":399232615,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14232","node_id":"MDEyOklzc3VlQ29tbWVudDM5OTIzMjYxNQ==","updated_at":"2018-06-21T20:28:25.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/399232615","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":18,"author_association":"OWNER","body":"> Is there a known timeline for this?\r\n\r\nNo. Sorry.","created_at":"2018-06-23T01:03:44.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14232#issuecomment-399618381","id":399618381,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14232","node_id":"MDEyOklzc3VlQ29tbWVudDM5OTYxODM4MQ==","updated_at":"2018-06-23T01:03:44.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/399618381","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":19,"author_association":"CONTRIBUTOR","body":"I didn't catch this before:\r\n\r\n>I would like to think we can have NodeMaterial in good shape within months, not years.\r\n\r\nThis is a paradox and cannot happen since it already has been several years of development. Unless we don't count the years past since 2015 :) ","created_at":"2018-07-23T20:20:49.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14232#issuecomment-407187993","id":407187993,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14232","node_id":"MDEyOklzc3VlQ29tbWVudDQwNzE4Nzk5Mw==","updated_at":"2018-07-23T20:20:49.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/407187993","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":20,"author_association":"COLLABORATOR","body":"I meant to say within months from this discussion, not months from development beginning in ~2015. ","created_at":"2018-07-23T21:07:11.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14232#issuecomment-407201464","id":407201464,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14232","node_id":"MDEyOklzc3VlQ29tbWVudDQwNzIwMTQ2NA==","updated_at":"2018-07-23T21:07:34.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/407201464","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":21,"author_association":"CONTRIBUTOR","body":"Thanks, that makes sense, so anywhere between 2-11 months is what we're hoping for :slightly_smiling_face: ","created_at":"2018-07-23T23:16:12.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14232#issuecomment-407230102","id":407230102,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14232","node_id":"MDEyOklzc3VlQ29tbWVudDQwNzIzMDEwMg==","updated_at":"2018-07-23T23:16:12.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/407230102","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}}]}