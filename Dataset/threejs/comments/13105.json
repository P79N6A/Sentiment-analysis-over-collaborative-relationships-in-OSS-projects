{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"CONTRIBUTOR","body":"Since I am currently working on a [project](https:\/\/github.com\/vt5491\/threejs-vr-gallery) that requires this very ability, this discussion is very apropos to me and indeed  the information supplied from @ngokevin was the catalyst to my working solution.  The project intends to be a gallery of three.js examples that have been \"lifted\" (or ['vrized'](https:\/\/github.com\/vt5491\/vrize) ) to vr-mode.  The front-end is in a-frame, with links to lifted three-js examples.  Thus I need the ability to retain vr-mode across:\r\n\r\n- aframe to lifted three.js script.\r\n- lifted three.js script to aframe.\r\n- lifted three.js script to lifted three.js script.\r\n\r\nThe only mode that was working out of the box was lifted three.js script to a-frame, since aframe has the 'vrdisplayactivate' handler already.   In order to get the other modes working I initially just added a listener to each script:\r\n\r\n```    \r\nwindow.addEventListener('vrdisplayactivate', function () {  \r\n    renderer.vr.getDevice().requestPresent([{ source: renderer.domElement }])  \r\n});  \r\n```\r\n\r\nThis worked, but wasn't ideal because:\r\n\r\n1.  I have to add it manually to every script.\r\n2.  It requires I extract out the name of the renderer variable i.e. hard-coding 'renderer' won't work if the actual renderer is called \"myGreatVRRenderer\" or something.\r\n\r\nThis is where @ngokevin's suggestion that it be added to the three.js system code makes a lot of sense.\r\n\r\nInvestigating, I determined the best module to put this in is 'examples\/js\/vr\/WebVR.js', which already has several other vr event handlers.  The full updated module in my project [can be seen here](https:\/\/github.com\/vt5491\/threejs-vr-gallery\/blob\/master\/src\/assets\/threejs-env\/examples\/js\/vr\/WebVR.js), but here is some code snippets.\r\n\r\nBasically after the event handler for 'vrdisplaypresentchange' add the following:\r\n\r\n```\r\n\t\t\twindow.addEventListener( 'vrdisplaypresentchange', function ( event ) {\r\n\r\n\t\t\t\tbutton.textContent = event.display.isPresenting ? 'EXIT VR' : 'ENTER VR';\r\n\r\n\t\t\t}, false );\r\n\t\t\t\/\/newcode-start\r\n\t\t\twindow.addEventListener( 'vrdisplayactivate', function ( event ) {\r\n\r\n\t\t\t\tevent.display.requestPresent([{ source: renderer.domElement }]);\r\n\r\n\t\t\t}, false );\r\n\t\t\t\/\/newcode-end\r\n\r\n\t\t\tnavigator.getVRDisplays()\r\n\t\t\t\t.then( function ( displays ) {\r\n\r\n\t\t\t\t\tif ( displays.length > 0 ) {\r\n\r\n\t\t\t\t\t\tshowEnterVR( displays[ 0 ] );\r\n\r\n\t\t\t\t\t} else {\r\n```\r\nThere are some minor nuances about this version:\r\n\r\n1.  It gets the display device directly from the event itself (an instance of [VRDisplayEvent](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/API\/VRDisplayEvent)), instead of using 'renderer.vr.getDevice()'\r\n2.  Since this event handler is actually defined inside the function 'createButton', it's a closure and thus 'renderer' is a free-variable that will be mapped to the actual renderer var name when 'createButton' is called e.g `container.appendChild(WEBVR.createButton(myGreatVRRender));`, so the code should work with whatever name has been assigned to the renderer.\r\n\r\nThis works in retaining vr-mode in all three use cases with an Oculus Rift on Firefox (and, yes, I did remove the client eventHandler).  Unfortunately, Chrome Canary is not working for me with the OR (in spite of the fact that it supposedly should with the OpenVR support), so I can't test with Chrome.  I do have an HTC Vive, but I won't be able to test that until next week. ","created_at":"2018-01-19T00:09:04.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/13105#issuecomment-358824407","id":358824407,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13105","node_id":"MDEyOklzc3VlQ29tbWVudDM1ODgyNDQwNw==","updated_at":"2018-01-19T00:15:34.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/358824407","user":{"following_url":"https:\/\/api.github.com\/users\/vt5491\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/vt5491\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/8662470?v=4","url":"https:\/\/api.github.com\/users\/vt5491","gists_url":"https:\/\/api.github.com\/users\/vt5491\/gists{\/gist_id}","html_url":"https:\/\/github.com\/vt5491","subscriptions_url":"https:\/\/api.github.com\/users\/vt5491\/subscriptions","node_id":"MDQ6VXNlcjg2NjI0NzA=","repos_url":"https:\/\/api.github.com\/users\/vt5491\/repos","received_events_url":"https:\/\/api.github.com\/users\/vt5491\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/vt5491\/starred{\/owner}{\/repo}","site_admin":false,"login":"vt5491","type":"User","id":8662470,"followers_url":"https:\/\/api.github.com\/users\/vt5491\/followers","organizations_url":"https:\/\/api.github.com\/users\/vt5491\/orgs"}},{"index":1,"author_association":"CONTRIBUTOR","body":"Unless I hear any objections, I'm going to proceed with a pull request on this.  \r\n\r\nI created a [glitch](https:\/\/adjoining-carver.glitch.me\/) that can be used for testing.  \r\n\r\nThe glitch starts off with an aframe scene with links to two pure-three.js vr scripts ('webgl_geometry_cube.html', and 'webgl_mirror.html', lifted with \"vr-ize\").  WASD keys are in effect.  From any transferred scene press 'b' to go back to the prior scene.  When you are in a three.js scene you can press 't' to transfer to the other three.js script.\r\n\r\nYou can try the following use cases:\r\n\r\n- Enter vr mode on a-frame, and then use the VR controller to select one of the three.js links.  Verify that the vr-mode is transferred to the new link.  Verify you see message ('vt:WebVR: now driving vrdisplayactivate') on the log proving the 'vrdisplayactiveate' was driven (Note: this console message will not be in the pull request).\r\n\r\n- press 'b' (back) or 'h' (home) to return to a-frame.  Verify vr-mode is still in effect (this use-case has always worked, so you're really just verifying that nothing is broken)\r\n\r\n- Enter a three.js scene in vr-mode and press 't'. You will transfer to the other three.js scene, bypassing a-frame.  Verify that vr-mode is carried over.\r\n\r\n- Test transfrering when not in vr-mode.  In this case, the 'vrdisplayactive' should not be driven and you should verify that vr-mode is *not* activated.\r\n\r\nBasically, just play around transferring among the scenes and make sure everything works as expected.\r\n\r\nNote: if you have a keypress handler on your browser such as vimium, you'll want to add a rule to exclude this site, otherwise vimium will intercept all the key presses (I was having this problem so I know).","created_at":"2018-01-23T02:45:14.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/13105#issuecomment-359655896","id":359655896,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13105","node_id":"MDEyOklzc3VlQ29tbWVudDM1OTY1NTg5Ng==","updated_at":"2018-01-23T02:48:45.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/359655896","user":{"following_url":"https:\/\/api.github.com\/users\/vt5491\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/vt5491\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/8662470?v=4","url":"https:\/\/api.github.com\/users\/vt5491","gists_url":"https:\/\/api.github.com\/users\/vt5491\/gists{\/gist_id}","html_url":"https:\/\/github.com\/vt5491","subscriptions_url":"https:\/\/api.github.com\/users\/vt5491\/subscriptions","node_id":"MDQ6VXNlcjg2NjI0NzA=","repos_url":"https:\/\/api.github.com\/users\/vt5491\/repos","received_events_url":"https:\/\/api.github.com\/users\/vt5491\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/vt5491\/starred{\/owner}{\/repo}","site_admin":false,"login":"vt5491","type":"User","id":8662470,"followers_url":"https:\/\/api.github.com\/users\/vt5491\/followers","organizations_url":"https:\/\/api.github.com\/users\/vt5491\/orgs"}},{"index":2,"author_association":"NONE","body":"FYI - something in my app didn't like having this event listener inside WebVR.js. It wouldn't automatically invoke VR mode on page launch with a Rift connected, though it would work for page reloads if I was already in VR.\r\n\r\nOnce I moved the \"vrdisplayactivate\" listener outside of WebVR.js I was able to enter VR on page load. My code now looks like:\r\n\r\n```\r\nrenderer = new THREE.WebGLRenderer({antialiasing: false, alpha: false });\r\nrenderer.setPixelRatio(window.devicePixelRatio);\r\nrenderer.setSize(window.innerWidth, window.innerHeight);\r\ncontainer.appendChild(renderer.domElement);\r\ndocument.body.appendChild( WEBVR.createButton( renderer ) );\r\nwindow.addEventListener('vrdisplayactivate',  () => {renderer.vr.getDevice().requestPresent( [ { source: renderer.domElement } ] ); }, false);\r\n```\r\n\r\nFigured I'd post here as it's possible this would affect other sites, but I'm not entirely sure why it was happening.","created_at":"2018-03-13T18:48:42.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/13105#issuecomment-372777384","id":372777384,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13105","node_id":"MDEyOklzc3VlQ29tbWVudDM3Mjc3NzM4NA==","updated_at":"2018-03-13T18:48:42.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/372777384","user":{"following_url":"https:\/\/api.github.com\/users\/dustinkerstein\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/dustinkerstein\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7659306?v=4","url":"https:\/\/api.github.com\/users\/dustinkerstein","gists_url":"https:\/\/api.github.com\/users\/dustinkerstein\/gists{\/gist_id}","html_url":"https:\/\/github.com\/dustinkerstein","subscriptions_url":"https:\/\/api.github.com\/users\/dustinkerstein\/subscriptions","node_id":"MDQ6VXNlcjc2NTkzMDY=","repos_url":"https:\/\/api.github.com\/users\/dustinkerstein\/repos","received_events_url":"https:\/\/api.github.com\/users\/dustinkerstein\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/dustinkerstein\/starred{\/owner}{\/repo}","site_admin":false,"login":"dustinkerstein","type":"User","id":7659306,"followers_url":"https:\/\/api.github.com\/users\/dustinkerstein\/followers","organizations_url":"https:\/\/api.github.com\/users\/dustinkerstein\/orgs"}},{"index":3,"author_association":"CONTRIBUTOR","body":">... It wouldn't automatically invoke VR mode on page launch with a Rift connected, though it would work for page reloads if I was already in VR.\r\n\r\nIt's my understanding that the webVr spec requires a [user gesture](https:\/\/github.com\/immersive-web\/webvrrocks\/issues\/231) in order to first enter VR mode.  That means clicking a button with a mouse, or, in the case of a-frame, optionally pressing the \"f\" key.  From the webvr 1.1 spec:\r\n\r\n>  If requestPresent() is called outside of an engagement gesture, the promise MUST be rejected unless the VRDisplay was already presenting.\r\n\r\nI do realize that \"putting on the HMD\" could also be considered a user gesture, and indeed the OR store, and the VIVE front-end acknowledge that as a suitable event to cause themselves to activate. \r\n\r\n But I've never known a web browser to auto-invoke VR without clicking a mouse of pressing a key first (don't get me wrong, I would personally like this ability).  I think the reasoning is security as well as people just getting confused e.g. popping into VR unexpectedly, so you make them explicitly request VR mode, at least initially.  But once they're in VR mode, linking and refreshing -- that's where 'vrdisplayactivate' plays it's role.  So the linking and refreshing is working as you say, and that's what's this fix is intended to do.  \r\n\r\nSo I guess I'm confused.  Are you saying that VR-mode should auto-activate upon entering a VR-enabled page, and that by adding \r\n\r\n> window.addEventListener('vrdisplayactivate',  () => {renderer.vr.getDevice().requestPresent( [ { source: renderer.domElement } ] ); }, false);\r\n\r\ndirectly to the script this gives you that ability?  I added this line to an example I have, and this made no difference -- I still had to press the \"Enter VR\" button to enter VR mode.  So I am unable to reproduce your problem and this simply seems like the browser working as expected vis a vis the WebVR spec to me.  \r\n\r\nOf course there's now the WebXR spec, which I'm not familiar with.  I don't know if that allows auto-enter of VR.  \r\n\r\nWhat browser are you using: Firefox, firefox nightly, Chromium Canary?","created_at":"2018-03-15T02:59:03.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/13105#issuecomment-373244865","id":373244865,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13105","node_id":"MDEyOklzc3VlQ29tbWVudDM3MzI0NDg2NQ==","updated_at":"2018-03-15T02:59:03.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/373244865","user":{"following_url":"https:\/\/api.github.com\/users\/vt5491\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/vt5491\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/8662470?v=4","url":"https:\/\/api.github.com\/users\/vt5491","gists_url":"https:\/\/api.github.com\/users\/vt5491\/gists{\/gist_id}","html_url":"https:\/\/github.com\/vt5491","subscriptions_url":"https:\/\/api.github.com\/users\/vt5491\/subscriptions","node_id":"MDQ6VXNlcjg2NjI0NzA=","repos_url":"https:\/\/api.github.com\/users\/vt5491\/repos","received_events_url":"https:\/\/api.github.com\/users\/vt5491\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/vt5491\/starred{\/owner}{\/repo}","site_admin":false,"login":"vt5491","type":"User","id":8662470,"followers_url":"https:\/\/api.github.com\/users\/vt5491\/followers","organizations_url":"https:\/\/api.github.com\/users\/vt5491\/orgs"}},{"index":4,"author_association":"NONE","body":"In my testing with Firefox Nightly, if the Rift is connected (with Oculus Home running) I am put into VR mode immediately when going to https:\/\/webvr.info\/samples\/03-vr-presentation.html without any user interaction. This is in fact the behavior I'm looking for, and is needed to handle inter-site link traversal in VR. Whether that's what the WebVR 1.1 spec says is supposed to happen, I can't say... But it's definitely something I am personally looking to enable.\r\n\r\n> Are you saying that VR-mode should auto-activate upon entering a VR-enabled page, and that by adding\r\n\r\n```js\r\nwindow.addEventListener('vrdisplayactivate', () => {\r\n    renderer.vr.getDevice().requestPresent( [ { source: renderer.domElement } ] );\r\n}, false);\r\n```\r\n\r\nYep, that change is what allowed my site to auto-invoke VR without any user interaction.\r\n\r\nI haven't been able to test any of this in Chrome as I've had no luck in getting my Rift to cooperate with Chrome recently.","created_at":"2018-03-15T03:09:29.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/13105#issuecomment-373246458","id":373246458,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13105","node_id":"MDEyOklzc3VlQ29tbWVudDM3MzI0NjQ1OA==","updated_at":"2018-08-12T13:46:41.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/373246458","user":{"following_url":"https:\/\/api.github.com\/users\/dustinkerstein\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/dustinkerstein\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7659306?v=4","url":"https:\/\/api.github.com\/users\/dustinkerstein","gists_url":"https:\/\/api.github.com\/users\/dustinkerstein\/gists{\/gist_id}","html_url":"https:\/\/github.com\/dustinkerstein","subscriptions_url":"https:\/\/api.github.com\/users\/dustinkerstein\/subscriptions","node_id":"MDQ6VXNlcjc2NTkzMDY=","repos_url":"https:\/\/api.github.com\/users\/dustinkerstein\/repos","received_events_url":"https:\/\/api.github.com\/users\/dustinkerstein\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/dustinkerstein\/starred{\/owner}{\/repo}","site_admin":false,"login":"dustinkerstein","type":"User","id":7659306,"followers_url":"https:\/\/api.github.com\/users\/dustinkerstein\/followers","organizations_url":"https:\/\/api.github.com\/users\/dustinkerstein\/orgs"}},{"index":5,"author_association":"NONE","body":"Though I just had someone in my office quickly test https:\/\/webvr.info\/samples\/03-vr-presentation.html with their Rift + Nightly and it didn't auto-invoke VR... So I guess I'll need to get my Rift setup again and do some more testing.","created_at":"2018-03-15T03:24:49.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/13105#issuecomment-373248790","id":373248790,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/13105","node_id":"MDEyOklzc3VlQ29tbWVudDM3MzI0ODc5MA==","updated_at":"2018-03-15T03:24:49.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/373248790","user":{"following_url":"https:\/\/api.github.com\/users\/dustinkerstein\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/dustinkerstein\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7659306?v=4","url":"https:\/\/api.github.com\/users\/dustinkerstein","gists_url":"https:\/\/api.github.com\/users\/dustinkerstein\/gists{\/gist_id}","html_url":"https:\/\/github.com\/dustinkerstein","subscriptions_url":"https:\/\/api.github.com\/users\/dustinkerstein\/subscriptions","node_id":"MDQ6VXNlcjc2NTkzMDY=","repos_url":"https:\/\/api.github.com\/users\/dustinkerstein\/repos","received_events_url":"https:\/\/api.github.com\/users\/dustinkerstein\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/dustinkerstein\/starred{\/owner}{\/repo}","site_admin":false,"login":"dustinkerstein","type":"User","id":7659306,"followers_url":"https:\/\/api.github.com\/users\/dustinkerstein\/followers","organizations_url":"https:\/\/api.github.com\/users\/dustinkerstein\/orgs"}}]}