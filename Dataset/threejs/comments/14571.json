{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"COLLABORATOR","body":"`Quaternion.lookAt()` in this PR does not work for non-camera objects.\r\n\r\nAs implemented in this PR, you would need to tell the user to swap the order of the arguments to `Quaternion.lookAt()` if the quaternion is going to be applied to an object other than a camera.\r\n\r\n`Matrix4.lookAt()` is a method for internal use. It is one of the oldest methods in the library, and was written to be used when orienting a camera.\r\n\r\nWe already have a look-at method, just as the other libraries do. We just have a slightly-different paradigm.\r\n\r\nIn three.js, we define our `lookAt()` method at the `Object3D` level, and at the `Geometry` level. This hides implementation details from the user, and it  \"just works\".\r\n\r\n","created_at":"2018-07-28T03:58:59.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14571#issuecomment-408580595","id":408580595,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14571","node_id":"MDEyOklzc3VlQ29tbWVudDQwODU4MDU5NQ==","updated_at":"2018-07-28T03:58:59.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/408580595","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":1,"author_association":"COLLABORATOR","body":"Also, in the unit tests, it is best to avoid using the library to test against itself. Instead, perform the calculation by hand and test against a known value.\r\n\r\nTrivial tests are not particularly useful. You need to test all relevant code paths, which in the math library, can include edge cases.\r\n","created_at":"2018-07-28T04:09:42.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14571#issuecomment-408581012","id":408581012,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14571","node_id":"MDEyOklzc3VlQ29tbWVudDQwODU4MTAxMg==","updated_at":"2018-07-28T04:09:42.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/408581012","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":2,"author_association":"COLLABORATOR","body":"The unit test for `Quaternion.lookAt` should just ensure that the same result is produced if you use the \"old way\" via `Matrix.lookAt()`  and `Quaternion.setFromRotationMatrix()`. Against this backdrop, the test should be sufficient.\r\n\r\nI think it's important to understand that `Quaternion.lookAt()` is intended for developers who directly work with quaternions. Like I said before, it's somewhat annoying if you always have to work with a rotation matrix. `Quaternion.lookAt()` hides this effort so you directly have the representation you need for your code.\r\n\r\n> Quaternion.lookAt() in this PR does not work for non-camera objects.\r\n\r\nYes. Users need to pass in parameters differently (like in `Object3D.lookAt()`). I've not changed the signature in order to ensure `Matrix4.lookAt()` and `Quaternion.lookAt()` behave the same. The signature and implementation of `Matrix4.lookAt()` is somewhat unfortunate. The following approach seems better to me:\r\n\r\nhttps:\/\/github.com\/juj\/MathGeoLib\/blob\/7d94b714ff17b954b1302ff29d040b76b9b40476\/src\/Math\/float3x3.cpp#L616-L677\r\n\r\nI could address your concerns if `Quaternion.lookAt()` gets a different signature and uses a new `Matrix3.lookAt()` method. The parameters are documented right [here](https:\/\/github.com\/juj\/MathGeoLib\/blob\/7d94b714ff17b954b1302ff29d040b76b9b40476\/src\/Math\/float3x3.h#L149-L172).","created_at":"2018-07-28T08:34:06.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14571#issuecomment-408592435","id":408592435,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14571","node_id":"MDEyOklzc3VlQ29tbWVudDQwODU5MjQzNQ==","updated_at":"2018-07-28T09:34:46.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/408592435","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":3,"author_association":"COLLABORATOR","body":"Closing. I try to make a new method `Quaternion.lookRotation()` with different semantics than `three.js`'s interpretation of `lookAt()`. This approach will avoid possible ambiguities.","created_at":"2018-07-28T18:26:01.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14571#issuecomment-408626476","id":408626476,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14571","node_id":"MDEyOklzc3VlQ29tbWVudDQwODYyNjQ3Ng==","updated_at":"2018-07-28T18:26:50.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/408626476","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}}]}