{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"OWNER","body":"> The main issue I came across was how best to set the renderer size. I decided on the following: \r\nIf a canvas is passed in, use its ```canvas.clientWidth``` and ```canvas.clientHeight```, otherwise create a new canvas element, set it's style.width and style.height to 100% then use the ```canvas.clientWidth``` and ```canvas.clientHeight``` of that for the renderer. \r\n\r\n@greggman suggested checking `canvas.clientWidth` and `canvas.clientHeight` every frame and update things if they change.","created_at":"2017-01-31T04:25:24.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10683#issuecomment-276272002","id":276272002,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10683","node_id":"MDEyOklzc3VlQ29tbWVudDI3NjI3MjAwMg==","updated_at":"2017-01-31T04:25:56.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/276272002","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":1,"author_association":"COLLABORATOR","body":"> @greggman suggested checking canvas.clientWidth and canvas.clientHeight every frame and update things if they change.\r\n\r\nYes, at least one example uses this approach: http:\/\/threejs.dev\/examples\/#webgl_multiple_elements\r\n\r\nI'll see if I can get that example working here, it's a good testing ground for this App idea. \r\n\r\n","created_at":"2017-01-31T04:57:30.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10683#issuecomment-276275293","id":276275293,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10683","node_id":"MDEyOklzc3VlQ29tbWVudDI3NjI3NTI5Mw==","updated_at":"2017-01-31T04:58:44.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/276275293","user":{"following_url":"https:\/\/api.github.com\/users\/looeee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/looeee\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/5307958?v=4","url":"https:\/\/api.github.com\/users\/looeee","gists_url":"https:\/\/api.github.com\/users\/looeee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/looeee","subscriptions_url":"https:\/\/api.github.com\/users\/looeee\/subscriptions","node_id":"MDQ6VXNlcjUzMDc5NTg=","repos_url":"https:\/\/api.github.com\/users\/looeee\/repos","received_events_url":"https:\/\/api.github.com\/users\/looeee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/looeee\/starred{\/owner}{\/repo}","site_admin":false,"login":"looeee","type":"User","id":5307958,"followers_url":"https:\/\/api.github.com\/users\/looeee\/followers","organizations_url":"https:\/\/api.github.com\/users\/looeee\/orgs"}},{"index":2,"author_association":"CONTRIBUTOR","body":"Maybe I don't understand it but this PR seems to have missed the entire point of the proposal and also ignored the entire discussion thread ","created_at":"2017-01-31T05:09:32.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10683#issuecomment-276276554","id":276276554,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10683","node_id":"MDEyOklzc3VlQ29tbWVudDI3NjI3NjU1NA==","updated_at":"2017-01-31T05:09:32.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/276276554","user":{"following_url":"https:\/\/api.github.com\/users\/greggman\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/greggman\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/234804?v=4","url":"https:\/\/api.github.com\/users\/greggman","gists_url":"https:\/\/api.github.com\/users\/greggman\/gists{\/gist_id}","html_url":"https:\/\/github.com\/greggman","subscriptions_url":"https:\/\/api.github.com\/users\/greggman\/subscriptions","node_id":"MDQ6VXNlcjIzNDgwNA==","repos_url":"https:\/\/api.github.com\/users\/greggman\/repos","received_events_url":"https:\/\/api.github.com\/users\/greggman\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/greggman\/starred{\/owner}{\/repo}","site_admin":false,"login":"greggman","type":"User","id":234804,"followers_url":"https:\/\/api.github.com\/users\/greggman\/followers","organizations_url":"https:\/\/api.github.com\/users\/greggman\/orgs"}},{"index":3,"author_association":"COLLABORATOR","body":"By the way I came across @greggman's arguments for ```clientWidth \/ clientHeight``` [here](http:\/\/greggman.com\/downloads\/examples\/three-by-css\/three-by-css.html), which I agree with. Using ```renderer.setSize( window.innerWidth, window.innerHeight );``` as most of the examples do is not best practice - it works because they are all fullscreen (or rather full iframe), but fails when using a smaller or bigger canvas, so at the moment examples with multiple canvases don't have resize functionality. \r\n\r\nStandardising this so that we have one approach for all canvas sizes, or at  least add resize functionality to those examples would be a good thing to come out of this, whether or not App gets used. \r\n\r\n","created_at":"2017-01-31T05:10:26.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10683#issuecomment-276276659","id":276276659,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10683","node_id":"MDEyOklzc3VlQ29tbWVudDI3NjI3NjY1OQ==","updated_at":"2017-02-02T22:03:52.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/276276659","user":{"following_url":"https:\/\/api.github.com\/users\/looeee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/looeee\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/5307958?v=4","url":"https:\/\/api.github.com\/users\/looeee","gists_url":"https:\/\/api.github.com\/users\/looeee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/looeee","subscriptions_url":"https:\/\/api.github.com\/users\/looeee\/subscriptions","node_id":"MDQ6VXNlcjUzMDc5NTg=","repos_url":"https:\/\/api.github.com\/users\/looeee\/repos","received_events_url":"https:\/\/api.github.com\/users\/looeee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/looeee\/starred{\/owner}{\/repo}","site_admin":false,"login":"looeee","type":"User","id":5307958,"followers_url":"https:\/\/api.github.com\/users\/looeee\/followers","organizations_url":"https:\/\/api.github.com\/users\/looeee\/orgs"}},{"index":4,"author_association":"COLLABORATOR","body":"In the interest of keeping this as simple as possible I haven't added any timing functionality here. These should be kept in a different class - either added to ```THREE.Clock``` or a new ```THREE.Time``` class as per @Mugen87's suggestion [here](https:\/\/github.com\/mrdoob\/three.js\/issues\/10676#issuecomment-275950729). ","created_at":"2017-01-31T06:18:23.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10683#issuecomment-276284347","id":276284347,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10683","node_id":"MDEyOklzc3VlQ29tbWVudDI3NjI4NDM0Nw==","updated_at":"2017-02-02T22:04:02.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/276284347","user":{"following_url":"https:\/\/api.github.com\/users\/looeee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/looeee\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/5307958?v=4","url":"https:\/\/api.github.com\/users\/looeee","gists_url":"https:\/\/api.github.com\/users\/looeee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/looeee","subscriptions_url":"https:\/\/api.github.com\/users\/looeee\/subscriptions","node_id":"MDQ6VXNlcjUzMDc5NTg=","repos_url":"https:\/\/api.github.com\/users\/looeee\/repos","received_events_url":"https:\/\/api.github.com\/users\/looeee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/looeee\/starred{\/owner}{\/repo}","site_admin":false,"login":"looeee","type":"User","id":5307958,"followers_url":"https:\/\/api.github.com\/users\/looeee\/followers","organizations_url":"https:\/\/api.github.com\/users\/looeee\/orgs"}},{"index":5,"author_association":"CONTRIBUTOR","body":"I'm curious what `THREE.Time` would buy you?\r\n\r\nFirst off integrating `THREE.Time` with any kind of time delta seems very problematic. Outside of `THREE.App` you're the one who setups up `requestAnimiationFrame` loops so only you can really deal with delta time unless you want to call `THREE.Time.updateTime()` manually every frame and then why add all the complication just to save 2 lines of code?\r\n\r\nThe time is passed into the `requestAnimationFrame` and if you just want a global time you can call `window.performance.now()`\r\n\r\nJust curious. My impression is if you actually try to implement it you'll see it doesn't really get you much but then I haven't tried implementing it either so maybe if I did I'd see where it shines.\r\n","created_at":"2017-01-31T06:32:51.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10683#issuecomment-276286164","id":276286164,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10683","node_id":"MDEyOklzc3VlQ29tbWVudDI3NjI4NjE2NA==","updated_at":"2017-01-31T06:33:19.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/276286164","user":{"following_url":"https:\/\/api.github.com\/users\/greggman\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/greggman\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/234804?v=4","url":"https:\/\/api.github.com\/users\/greggman","gists_url":"https:\/\/api.github.com\/users\/greggman\/gists{\/gist_id}","html_url":"https:\/\/github.com\/greggman","subscriptions_url":"https:\/\/api.github.com\/users\/greggman\/subscriptions","node_id":"MDQ6VXNlcjIzNDgwNA==","repos_url":"https:\/\/api.github.com\/users\/greggman\/repos","received_events_url":"https:\/\/api.github.com\/users\/greggman\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/greggman\/starred{\/owner}{\/repo}","site_admin":false,"login":"greggman","type":"User","id":234804,"followers_url":"https:\/\/api.github.com\/users\/greggman\/followers","organizations_url":"https:\/\/api.github.com\/users\/greggman\/orgs"}},{"index":6,"author_association":"COLLABORATOR","body":"I've added auto-resize (for perspective cameras only). Currently it's being called in a window resize event - I'm not convinced that per frame would be better at the moment, but open to being convinced. Really it should be called in a canvas resize event, but unfortunately that's not easily done at the moment (hopefully the [Resize Observer API](https:\/\/www.chromestatus.com\/feature\/5705346022637568) will gain traction though). \r\n\r\nEDIT: switched from ```renderer.setSize( width, height )``` to ```renderer.setSize( width, height, false )``` and removed the \"anti-pattern\" code referred to in the comment below. ","created_at":"2017-01-31T09:44:07.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10683#issuecomment-276318449","id":276318449,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10683","node_id":"MDEyOklzc3VlQ29tbWVudDI3NjMxODQ0OQ==","updated_at":"2017-01-31T10:21:01.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/276318449","user":{"following_url":"https:\/\/api.github.com\/users\/looeee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/looeee\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/5307958?v=4","url":"https:\/\/api.github.com\/users\/looeee","gists_url":"https:\/\/api.github.com\/users\/looeee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/looeee","subscriptions_url":"https:\/\/api.github.com\/users\/looeee\/subscriptions","node_id":"MDQ6VXNlcjUzMDc5NTg=","repos_url":"https:\/\/api.github.com\/users\/looeee\/repos","received_events_url":"https:\/\/api.github.com\/users\/looeee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/looeee\/starred{\/owner}{\/repo}","site_admin":false,"login":"looeee","type":"User","id":5307958,"followers_url":"https:\/\/api.github.com\/users\/looeee\/followers","organizations_url":"https:\/\/api.github.com\/users\/looeee\/orgs"}},{"index":7,"author_association":"COLLABORATOR","body":"I've updated a couple of examples to work with App and also temporarily added ```build\/three.js``` so that examples work on rawgit:\r\n\r\n**examples\/webgl_geometry_cube** (can't view this on rawgit because of crossorigin errors with texture loading)\r\nNot much to say here - I think this is the simplest example, so as expected it was pretty easy to update and the code is very simple now - only 15 lines of JS, compared to 30 before. \r\n\r\n**[examples\/webgl_multiple_elements](http:\/\/rawgit.com\/looeee\/three.js\/f9c10fa57b998968ad4a35c0f88242a959e3649f\/examples\/webgl_multiple_elements.html)**\r\nThis example uses multiple scenes  - it was actually easier than I expected to update, by using a custom render function rather than ```App.animate```.  @greggman this was one of your main initial concerns. Thoughts?\r\n\r\n**[examples\/webgl_multiple_renderers](http:\/\/rawgit.com\/looeee\/three.js\/f9c10fa57b998968ad4a35c0f88242a959e3649f\/examples\/webgl_multiple_renderers.html)**\r\nAlso fairly straightforward to update. As there are two renderers and two canvasses, there needs to be two apps. So it seems to be the way it will work is: multiple renderers or canvasses: multiple apps. Multiple scenes or cameras: single app, possibly with custom render function. \r\n\r\nAND one advantage here is that now the scene handles resize, which it didn't before. \r\nThere is one difference between the scenes here though, which will need to be addressed: in the original, the top scene used antialias, the bottom didn't. In the updated scene, both are using antialias as there is currently no way to set antialias (or the other options such as alpha, depth, stencil... that can only be set on initialiazation) on the default ```App.renderer```. Perhaps we should pass in a ```rendererOptions``` object?\r\n\r\n**[examples\/webgl_multiple_views](http:\/\/rawgit.com\/looeee\/three.js\/f9c10fa57b998968ad4a35c0f88242a959e3649f\/examples\/webgl_multiple_views.html)**\r\nIn this one ```App.renderer.render``` needs to be called multiple times per frame, so I added a flag ```autoRender``` which if false prevents this from being called automatically in the ```App.animate``` function. Then instead it can be user defined in ```App.onUpdate```. Again, this used one canvas and one renderer so a single app works here. \r\n\r\nThe last examples can probably be optimised further - I wanted to leave them as much as possible as they were for now though. \r\n\r\nThe only real changes I made to the examples (aside from antialias) is that ```multiple_renderers``` needed to be wrapped in a container element for resizing to work, and ```webgl_multiple_views``` needed ```position, width, height``` and ```left``` styles set on the canvas element. ","created_at":"2017-02-01T08:56:41.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10683#issuecomment-276604683","id":276604683,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10683","node_id":"MDEyOklzc3VlQ29tbWVudDI3NjYwNDY4Mw==","updated_at":"2017-02-01T11:46:47.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/276604683","user":{"following_url":"https:\/\/api.github.com\/users\/looeee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/looeee\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/5307958?v=4","url":"https:\/\/api.github.com\/users\/looeee","gists_url":"https:\/\/api.github.com\/users\/looeee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/looeee","subscriptions_url":"https:\/\/api.github.com\/users\/looeee\/subscriptions","node_id":"MDQ6VXNlcjUzMDc5NTg=","repos_url":"https:\/\/api.github.com\/users\/looeee\/repos","received_events_url":"https:\/\/api.github.com\/users\/looeee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/looeee\/starred{\/owner}{\/repo}","site_admin":false,"login":"looeee","type":"User","id":5307958,"followers_url":"https:\/\/api.github.com\/users\/looeee\/followers","organizations_url":"https:\/\/api.github.com\/users\/looeee\/orgs"}},{"index":8,"author_association":"COLLABORATOR","body":"> I'm curious what THREE.Time would buy you? \r\n\r\n@greggman apologies, I didn't respond to this above. I had been looking at Unity's Time class, and thinking about how to implement some of it, specifically these parts:\r\n\r\n* ```totalTime```: Total time since the animation started\r\n* ```lastFrameTime```: The time in seconds it took to complete the last frame.\r\n* ```averageFrameTime```:  i.e. FPS. \r\n* ```frameCount```:\tThe total number of frames that have passed.\r\n* ```timeScale```: The scale at which the time is passing. This can be used for slow motion effects.\r\n\r\nAnd perhaps also: \r\n\r\n* ```unscaledDeltaTime```: The timeScale-independent time in seconds it took to complete the last frame.\r\n* ```unscaledTime```: The timeScale-independant time at the beginning of this frame.\r\n\r\nThe reason I don't want to add any of this to ```App``` is that I think it would be better to extend ```Clock``` instead. ","created_at":"2017-02-02T02:58:40.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10683#issuecomment-276854517","id":276854517,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10683","node_id":"MDEyOklzc3VlQ29tbWVudDI3Njg1NDUxNw==","updated_at":"2017-02-02T03:01:17.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/276854517","user":{"following_url":"https:\/\/api.github.com\/users\/looeee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/looeee\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/5307958?v=4","url":"https:\/\/api.github.com\/users\/looeee","gists_url":"https:\/\/api.github.com\/users\/looeee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/looeee","subscriptions_url":"https:\/\/api.github.com\/users\/looeee\/subscriptions","node_id":"MDQ6VXNlcjUzMDc5NTg=","repos_url":"https:\/\/api.github.com\/users\/looeee\/repos","received_events_url":"https:\/\/api.github.com\/users\/looeee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/looeee\/starred{\/owner}{\/repo}","site_admin":false,"login":"looeee","type":"User","id":5307958,"followers_url":"https:\/\/api.github.com\/users\/looeee\/followers","organizations_url":"https:\/\/api.github.com\/users\/looeee\/orgs"}},{"index":9,"author_association":"OWNER","body":"How about something like this?\r\n\r\n```js\r\nfunction App( canvas ) {\r\n\r\n\tvar camera, scene, renderer;\r\n\r\n\tfunction getCamera() {\r\n\t\tif ( camera === undefined ) {\r\n\t\t\tcamera = new THREE.PerspectiveCamera( 75, canvas.clientWidth \/ canvas.clientHeight, 1, 1000 );\r\n\t\t}\r\n\t\treturn camera;\r\n\t}\r\n\r\n\tfunction setCamera( value ) {\r\n\t\tcamera = value;\r\n\t}\r\n\r\n\tfunction getScene() {\r\n\t\tif ( scene === undefined ) {\r\n\t\t\tscene = new Scene(); \r\n\t\t}\r\n\t\treturn scene;\r\n\t}\r\n\r\n\tfunction setScene( value ) {\r\n\t\tscene = value;\r\n\t}\r\n\r\n\tfunction getRenderer() {\r\n\t\tif ( renderer === undefined ) {\r\n\t\t\trenderer = new THREE.WebGLRenderer( { canvas: canvas, antialias: true } );\r\n\t\t\trenderer.setPixelRatio( window.devicePixelRatio );\r\n\t\t\trenderer.setSize( canvas.clientWidth, canvas.clientHeight, false );\r\n\t\t}\r\n\t\treturn renderer;\r\n\t}\r\n\r\n\tfunction setRenderer( value ) {\r\n\t\trenderer = value;\r\n\t}\r\n\r\n\t\/\/\r\n\r\n\tfunction animate() {\r\n\r\n\t\tgetRenderer().render( getScene(), getCamera() );\r\n\t\trequestAnimationFrame( animate );\r\n\r\n\t}\r\n\r\n\trequestAnimationFrame( animate );\r\n\r\n\treturn {\r\n\t\tgetCamera: getCamera,\r\n\t\tsetCamera: setCamera,\r\n\t\tgetScene: getScene,\r\n\t\tsetScene: setScene,\r\n\t\tgetRenderer: getRenderer,\r\n\t\tsetRenderer: setRenderer\r\n\t}\r\n\r\n}\r\n\r\nexport { App };\r\n```\r\n\r\nSomething like this allow us to pass a different scene\/renderer after doing `new THREE.App( canvas )` without redundancy.","created_at":"2017-02-03T00:21:55.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10683#issuecomment-277128196","id":277128196,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10683","node_id":"MDEyOklzc3VlQ29tbWVudDI3NzEyODE5Ng==","updated_at":"2017-02-03T00:21:55.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/277128196","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":10,"author_association":"COLLABORATOR","body":"That looks good, although then if users want to do something like set the clear color they'll have to do\r\n\r\n```app.getRenderer().setClearColor( 0xffffff );```\r\n\r\nwhich is kind of unwieldy. What about this pattern?\r\n\r\n```js\r\nvar _canvas, _scene, _camera, _renderer;\r\n\r\nfunction App( canvas ) {\r\n    if ( canvas !== undefined ) this.canvas = canvas;\r\n\r\n    this.autoRender = true;\r\n    this.autoResize = true;\r\n}\r\n\r\nObject.defineProperties( App.prototype, {\r\n\r\n    'canvas': {\r\n        get: function() {\r\n            if ( _canvas === undefined ) {\r\n                _canvas = document.body.appendChild( document.createElement( 'canvas' ) );\r\n                _canvas.style.position = 'absolute';\r\n                _canvas.style.width = _canvas.style.height = '100%';\r\n            }\r\n            return _canvas;\r\n        },\r\n\r\n        set: function(canvas) {\r\n            _canvas = canvas\r\n        },\r\n    },\r\n\r\n    'camera': {\r\n        get: function() {\r\n            if ( _camera === undefined ) {\r\n                _camera = new THREE.PerspectiveCamera( 75, this.canvas.clientWidth \/ this.canvas.clientHeight, 1, 1000 );\r\n            }\r\n            return _camera;\r\n        },\r\n\r\n        set: function( camera ) {\r\n            _camera = camera\r\n        },\r\n    },\r\n\r\n    'scene': {\r\n        get: function() {\r\n            if ( _scene === undefined ) {\r\n                _scene = new THREE.Scene();\r\n            }\r\n            return _scene;\r\n        },\r\n\r\n        set: function( scene ) {\r\n            _scene = scene\r\n        },\r\n    },\r\n\r\n    'renderer': {\r\n        get: function() {\r\n            if ( _renderer === undefined ) {\r\n                _renderer = new THREE.WebGLRenderer( { canvas: this.canvas, antialias: true } );\r\n                _renderer.setPixelRatio(window.devicePixelRatio);\r\n                _renderer.setSize( this.canvas.clientWidth, this.canvas.clientHeight, false );\r\n                _renderer.setSize( window.innerWidth, window.innerHeight, false );\r\n            }\r\n            return _renderer;\r\n        },\r\n\r\n        set: function( renderer ) {\r\n            _renderer = renderer\r\n        },\r\n    },\r\n\r\n});\r\n\r\nObject.assign( App.prototype, {\r\n\r\n\r\n    \/\/functions \r\n    ....\r\n\r\n}\r\n\r\nexport { App };\r\n```\r\n\r\nThis has the advantage of matching more closely to existing code, and you can now do ```app.renderer.setClearColor( 0xffffff );``` as well as assigning a custom scene\/renderer\/camera after doing ```new THREE.App( canvas )``` without redundancy.","created_at":"2017-02-03T04:18:10.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10683#issuecomment-277161017","id":277161017,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10683","node_id":"MDEyOklzc3VlQ29tbWVudDI3NzE2MTAxNw==","updated_at":"2017-02-03T04:22:26.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/277161017","user":{"following_url":"https:\/\/api.github.com\/users\/looeee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/looeee\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/5307958?v=4","url":"https:\/\/api.github.com\/users\/looeee","gists_url":"https:\/\/api.github.com\/users\/looeee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/looeee","subscriptions_url":"https:\/\/api.github.com\/users\/looeee\/subscriptions","node_id":"MDQ6VXNlcjUzMDc5NTg=","repos_url":"https:\/\/api.github.com\/users\/looeee\/repos","received_events_url":"https:\/\/api.github.com\/users\/looeee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/looeee\/starred{\/owner}{\/repo}","site_admin":false,"login":"looeee","type":"User","id":5307958,"followers_url":"https:\/\/api.github.com\/users\/looeee\/followers","organizations_url":"https:\/\/api.github.com\/users\/looeee\/orgs"}},{"index":11,"author_association":"OWNER","body":"I wouldn't worry too much about doing the `App.prototype` stuff. We use that pattern in objects that get instantiated a lot (like `Matrix4`, `Vector3`, ...) but in this case we can't avoid worrying about it and keeping the code easier to read.","created_at":"2017-02-03T04:25:00.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10683#issuecomment-277161698","id":277161698,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10683","node_id":"MDEyOklzc3VlQ29tbWVudDI3NzE2MTY5OA==","updated_at":"2017-02-03T04:25:00.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/277161698","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":12,"author_association":"COLLABORATOR","body":"OK, actually I don't think the above would work with multiple App instances anyway. What about this? \r\n\r\n```js\r\nfunction App( canvas ) {\r\n\r\n    var _canvas, _scene, _camera, _renderer;\r\n\t\t\r\n    if ( canvas !== undefined ) this.canvas = canvas;\r\n\r\n    this.autoRender = true;\r\n    this.autoResize = true;\r\n\r\n    Object.defineProperties( this, {\r\n\r\n        'canvas': {\r\n            get: function() {\r\n                if ( _canvas === undefined ) {\r\n                    _canvas = document.body.appendChild( document.createElement( 'canvas' ) );\r\n                    _canvas.style.position = 'absolute';\r\n                    _canvas.style.width = _canvas.style.height = '100%';\r\n                }\r\n                return _canvas;\r\n            },\r\n\r\n            set: function(canvas) {\r\n                _canvas = canvas\r\n            },\r\n        }\r\n\r\n        \/\/etc.\r\n\t\t\t\r\n    });\r\n\r\n    this.animate = function () { ... };\r\n\r\n    this.stopAnimation = function () { ... };\r\n\r\n    this.onUpdate = function () {};\r\n\r\n    this.onWindowResize = function () { ... }\r\n}\r\n\r\nexport { App };\r\n```\r\n\r\nThis is also successfully [tree-shaken by rollup](http:\/\/rollupjs.org\/?version=0.41.4&shareable=JTdCJTIyb3B0aW9ucyUyMiUzQSU3QiUyMmZvcm1hdCUyMiUzQSUyMmVzJTIyJTJDJTIybW9kdWxlTmFtZSUyMiUzQSUyMm15QnVuZGxlJTIyJTJDJTIyZ2xvYmFscyUyMiUzQSU3QiU3RCUyQyUyMm1vZHVsZUlkJTIyJTNBJTIyJTIyJTdEJTJDJTIybW9kdWxlcyUyMiUzQSU1QiU3QiUyMm5hbWUlMjIlM0ElMjJtYWluLmpzJTIyJTJDJTIyY29kZSUyMiUzQSUyMmltcG9ydCUyMCU3QiUyMEFwcCUyMCU3RCUyMGZyb20lMjAnLiUyRkFwcC5qcyclM0IlNUNuJTVDbiUyRiUyRnZhciUyMGFwcCUyMCUzRCUyMG5ldyUyMEFwcCgpJTNCJTIyJTdEJTJDJTdCJTIybmFtZSUyMiUzQSUyMkFwcC5qcyUyMiUyQyUyMmNvZGUlMjIlM0ElMjIlNUNuJTVDbmZ1bmN0aW9uJTIwQXBwKCUyMGNhbnZhcyUyMCklMjAlN0IlNUNuJTIwJTIwdmFyJTIwX2NhbnZhcyUyQyUyMF9zY2VuZSUyQyUyMF9jYW1lcmElMkMlMjBfcmVuZGVyZXIlM0IlNUNuJTIwJTIwJTVDbiUyMCUyMCUyMGlmJTIwKCUyMGNhbnZhcyUyMCElM0QlM0QlMjB1bmRlZmluZWQlMjApJTIwdGhpcy5jYW52YXMlMjAlM0QlMjBjYW52YXMlM0IlNUNuJTVDbiUyMCUyMCUyMHRoaXMuYXV0b1JlbmRlciUyMCUzRCUyMHRydWUlM0IlNUNuJTIwJTIwJTIwdGhpcy5hdXRvUmVzaXplJTIwJTNEJTIwdHJ1ZSUzQiU1Q24lMjAlMjAlNUNuJTIwJTIwJTIwT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoJTIwdGhpcyUyQyUyMCU3QiU1Q24lNUNuJTIwJTIwJTIwJTIwJ2NhbnZhcyclM0ElMjAlN0IlNUNuJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwZ2V0JTNBJTIwZnVuY3Rpb24oKSUyMCU3QiU1Q24lMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjBpZiUyMCglMjBfY2FudmFzJTIwJTNEJTNEJTNEJTIwdW5kZWZpbmVkJTIwKSUyMCU3QiU1Q24lMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjBfY2FudmFzJTIwJTNEJTIwZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCglMjBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCUyMCdjYW52YXMnJTIwKSUyMCklM0IlNUNuJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwX2NhbnZhcy5zdHlsZS5wb3NpdGlvbiUyMCUzRCUyMCdhYnNvbHV0ZSclM0IlNUNuJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwX2NhbnZhcy5zdHlsZS53aWR0aCUyMCUzRCUyMF9jYW52YXMuc3R5bGUuaGVpZ2h0JTIwJTNEJTIwJzEwMCUyNSclM0IlNUNuJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTdEJTVDbiUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMHJldHVybiUyMF9jYW52YXMlM0IlNUNuJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTdEJTJDJTVDbiU1Q24lMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjBzZXQlM0ElMjBmdW5jdGlvbihjYW52YXMpJTIwJTdCJTVDbiUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMF9jYW52YXMlMjAlM0QlMjBjYW52YXMlNUNuJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTdEJTJDJTVDbiUyMCUyMCUyMCUyMCU3RCUyQyU1Q24lNUNuJTIwJTIwJTIwJTIwJ2NhbWVyYSclM0ElMjAlN0IlNUNuJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwZ2V0JTNBJTIwZnVuY3Rpb24oKSUyMCU3QiU1Q24lMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjBpZiUyMCglMjBfY2FtZXJhJTIwJTNEJTNEJTNEJTIwdW5kZWZpbmVkJTIwKSUyMCU3QiU1Q24lMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjBfY2FtZXJhJTIwJTNEJTIwbmV3JTIwVEhSRUUuUGVyc3BlY3RpdmVDYW1lcmEoJTIwNzUlMkMlMjB0aGlzLmNhbnZhcy5jbGllbnRXaWR0aCUyMCUyRiUyMHRoaXMuY2FudmFzLmNsaWVudEhlaWdodCUyQyUyMDElMkMlMjAxMDAwJTIwKSUzQiU1Q24lMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlN0QlNUNuJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwcmV0dXJuJTIwX2NhbWVyYSUzQiU1Q24lMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlN0QlMkMlNUNuJTVDbiUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMHNldCUzQSUyMGZ1bmN0aW9uKCUyMGNhbWVyYSUyMCklMjAlN0IlNUNuJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwX2NhbWVyYSUyMCUzRCUyMGNhbWVyYSU1Q24lMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlN0QlMkMlNUNuJTIwJTIwJTIwJTIwJTdEJTJDJTVDbiU1Q24lMjAlMjAlMjAlMjAnc2NlbmUnJTNBJTIwJTdCJTVDbiUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMGdldCUzQSUyMGZ1bmN0aW9uKCklMjAlN0IlNUNuJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwaWYlMjAoJTIwX3NjZW5lJTIwJTNEJTNEJTNEJTIwdW5kZWZpbmVkJTIwKSUyMCU3QiU1Q24lMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjBfc2NlbmUlMjAlM0QlMjBuZXclMjBUSFJFRS5TY2VuZSgpJTNCJTVDbiUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCU3RCU1Q24lMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjByZXR1cm4lMjBfc2NlbmUlM0IlNUNuJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTdEJTJDJTVDbiU1Q24lMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjBzZXQlM0ElMjBmdW5jdGlvbiglMjBzY2VuZSUyMCklMjAlN0IlNUNuJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwX3NjZW5lJTIwJTNEJTIwc2NlbmUlNUNuJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTdEJTJDJTVDbiUyMCUyMCUyMCUyMCU3RCUyQyU1Q24lNUNuJTIwJTIwJTIwJTIwJ3JlbmRlcmVyJyUzQSUyMCU3QiU1Q24lMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjBnZXQlM0ElMjBmdW5jdGlvbigpJTIwJTdCJTVDbiUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMGlmJTIwKCUyMF9yZW5kZXJlciUyMCUzRCUzRCUzRCUyMHVuZGVmaW5lZCUyMCklMjAlN0IlNUNuJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwX3JlbmRlcmVyJTIwJTNEJTIwbmV3JTIwVEhSRUUuV2ViR0xSZW5kZXJlciglMjAlN0IlMjBjYW52YXMlM0ElMjB0aGlzLmNhbnZhcyUyQyUyMGFudGlhbGlhcyUzQSUyMHRydWUlMjAlN0QlMjApJTNCJTVDbiUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMF9yZW5kZXJlci5zZXRQaXhlbFJhdGlvKHdpbmRvdy5kZXZpY2VQaXhlbFJhdGlvKSUzQiU1Q24lMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjBfcmVuZGVyZXIuc2V0U2l6ZSglMjB0aGlzLmNhbnZhcy5jbGllbnRXaWR0aCUyQyUyMHRoaXMuY2FudmFzLmNsaWVudEhlaWdodCUyQyUyMGZhbHNlJTIwKSUzQiU1Q24lMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjBfcmVuZGVyZXIuc2V0U2l6ZSglMjB3aW5kb3cuaW5uZXJXaWR0aCUyQyUyMHdpbmRvdy5pbm5lckhlaWdodCUyQyUyMGZhbHNlJTIwKSUzQiU1Q24lMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlN0QlNUNuJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwcmV0dXJuJTIwX3JlbmRlcmVyJTNCJTVDbiUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCU3RCUyQyU1Q24lNUNuJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwc2V0JTNBJTIwZnVuY3Rpb24oJTIwcmVuZGVyZXIlMjApJTIwJTdCJTVDbiUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMF9yZW5kZXJlciUyMCUzRCUyMHJlbmRlcmVyJTVDbiUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCU3RCUyQyU1Q24lMjAlMjAlMjAlMjAlN0QlMkMlNUNuJTVDbiU3RCklM0IlNUNuJTIwJTIwJTVDbiUyMCUyME9iamVjdC5hc3NpZ24oJTIwdGhpcyUyQyUyMCU3QiU1Q24lNUNuJTVDdGFuaW1hdGUlM0ElMjBmdW5jdGlvbiUyMCgpJTIwJTdCJTVDbiU1Q24lNUN0JTVDdHZhciUyMHNlbGYlMjAlM0QlMjB0aGlzJTNCJTVDbiU1Q24lNUN0JTVDdGZ1bmN0aW9uJTIwYW5pbWF0aW9uSGFuZGxlcigpJTIwJTdCJTVDbiU1Q24lNUN0JTVDdCU1Q3RzZWxmLm9uVXBkYXRlKCklM0IlNUNuJTVDbiU1Q3QlNUN0JTVDdGlmJTIwKCUyMHNlbGYuYXV0b1JlbmRlciUyMCklMjBzZWxmLnJlbmRlcmVyLnJlbmRlciglMjBzZWxmLnNjZW5lJTJDJTIwc2VsZi5jYW1lcmElMjApJTNCJTVDbiU1Q24lNUN0JTVDdCU1Q3RzZWxmLmN1cnJlbnRBbmltYXRpb25GcmFtZUlEJTIwJTNEJTIwcmVxdWVzdEFuaW1hdGlvbkZyYW1lKCUyMGZ1bmN0aW9uJTIwKCklMjAlN0IlMjBhbmltYXRpb25IYW5kbGVyKCklMjAlN0QlMjApJTNCJTVDbiU1Q24lNUN0JTVDdCU3RCU1Q24lNUNuJTVDdCU1Q3RhbmltYXRpb25IYW5kbGVyKCklM0IlNUNuJTVDbiU1Q3QlN0QlMkMlNUNuJTVDbiU1Q3RzdG9wQW5pbWF0aW9uJTNBJTIwZnVuY3Rpb24lMjAoKSUyMCU3QiU1Q24lNUNuJTVDdCU1Q3RjYW5jZWxBbmltYXRpb25GcmFtZSglMjB0aGlzLmN1cnJlbnRBbmltYXRpb25GcmFtZUlEJTIwKSUzQiU1Q24lNUNuJTVDdCU3RCUyQyU1Q24lNUNuJTVDdG9uVXBkYXRlJTNBJTIwZnVuY3Rpb24lMjAoKSUyMCU3QiU3RCUyQyU1Q24lNUNuJTVDdG9uV2luZG93UmVzaXplJTNBJTVDdGZ1bmN0aW9uJTIwKCklMjAlN0IlNUNuJTVDbiU1Q3QlNUN0aWYlMjAoJTIwISUyMHRoaXMuYXV0b1Jlc2l6ZSUyMCklMjByZXR1cm4lM0IlNUNuJTVDbiU1Q3QlNUN0aWYlMjAoJTIwdGhpcy5jYW1lcmEudHlwZSUyMCElM0QlM0QlMjAnUGVyc3BlY3RpdmVDYW1lcmEnJTIwKSUyMCU3QiU1Q24lNUNuJTVDdCU1Q3QlNUN0Y29uc29sZS53YXJuKCUyMCdUSFJFRS5BUFAlM0ElMjBBdXRvUmVzaXplJTIwb25seSUyMHdvcmtzJTIwd2l0aCUyMFBlcnNwZWN0aXZlQ2FtZXJhJyUyMCklM0IlNUNuJTVDdCU1Q3QlNUN0cmV0dXJuJTNCJTVDbiU1Q24lNUN0JTVDdCU3RCU1Q24lNUNuJTVDdCU1Q3R2YXIlMjBuZXdXaWR0aCUyMCUzRCUyMHRoaXMuY2FudmFzLmNsaWVudFdpZHRoJTNCJTVDbiU1Q3QlNUN0dmFyJTIwbmV3SGVpZ2h0JTIwJTNEJTIwdGhpcy5jYW52YXMuY2xpZW50SGVpZ2h0JTNCJTVDbiU1Q24lNUN0JTVDdHRoaXMuY2FtZXJhLmFzcGVjdCUyMCUzRCUyMG5ld1dpZHRoJTIwJTJGJTIwbmV3SGVpZ2h0JTNCJTVDbiU1Q3QlNUN0dGhpcy5jYW1lcmEudXBkYXRlUHJvamVjdGlvbk1hdHJpeCgpJTNCJTVDbiU1Q3QlNUN0dGhpcy5yZW5kZXJlci5zZXRTaXplKCUyMG5ld1dpZHRoJTJDJTIwbmV3SGVpZ2h0JTJDJTIwZmFsc2UlMjApJTNCJTVDbiU1Q24lNUN0JTdEJTJDJTVDbiU1Q24lN0QlMjApJTNCJTVDbiU1Q24lN0QlNUNuJTVDbiU1Q24lNUNuJTVDbmV4cG9ydCUyMCU3QiUyMEFwcCUyMCU3RCUzQiU1Q24lMjIlN0QlNUQlN0Q=).","created_at":"2017-02-03T05:07:56.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10683#issuecomment-277165922","id":277165922,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10683","node_id":"MDEyOklzc3VlQ29tbWVudDI3NzE2NTkyMg==","updated_at":"2017-02-03T05:07:56.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/277165922","user":{"following_url":"https:\/\/api.github.com\/users\/looeee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/looeee\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/5307958?v=4","url":"https:\/\/api.github.com\/users\/looeee","gists_url":"https:\/\/api.github.com\/users\/looeee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/looeee","subscriptions_url":"https:\/\/api.github.com\/users\/looeee\/subscriptions","node_id":"MDQ6VXNlcjUzMDc5NTg=","repos_url":"https:\/\/api.github.com\/users\/looeee\/repos","received_events_url":"https:\/\/api.github.com\/users\/looeee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/looeee\/starred{\/owner}{\/repo}","site_admin":false,"login":"looeee","type":"User","id":5307958,"followers_url":"https:\/\/api.github.com\/users\/looeee\/followers","organizations_url":"https:\/\/api.github.com\/users\/looeee\/orgs"}},{"index":13,"author_association":"OWNER","body":"> That looks good, although then if users want to do something like set the clear color they'll have to do\r\n\r\n```js\r\napp.getRenderer().setClearColor( 0xffffff );\r\n```\r\n\r\nWell, this wound't be that ugly:\r\n\r\n```js\r\nvar renderer = app.getRenderer();\r\nrenderer.setClearColor( 0xffffff );\r\n```\r\n\r\nHere's another try:\r\n\r\n```js\r\nfunction App( canvas ) {\r\n\r\n\tvar camera, scene, renderer;\r\n\r\n\tfunction animate() {\r\n\r\n\t\tif ( camera === undefined ) {\r\n\t\t\tcamera = new PerspectiveCamera( 75, canvas.clientWidth \/ canvas.clientHeight, 1, 1000 );\r\n\t\t}\r\n\r\n\t\tif ( scene === undefined ) {\r\n\t\t\tscene = new Scene(); \r\n\t\t}\r\n\r\n\t\tif ( renderer === undefined ) {\r\n\t\t\trenderer = new WebGLRenderer( { canvas: canvas, antialias: true } );\r\n\t\t\trenderer.setPixelRatio( window.devicePixelRatio );\r\n\t\t\trenderer.setSize( canvas.clientWidth, canvas.clientHeight, false );\r\n\t\t}\r\n\r\n\t\trenderer.render( scene, camera );\r\n\t\trequestAnimationFrame( animate );\r\n\r\n\t}\r\n\r\n\trequestAnimationFrame( animate );\r\n\r\n\treturn {\r\n\t\tgetCamera: function () { return camera; },\r\n\t\tsetCamera: function ( value ) { camera = value; },\r\n\t\tgetScene: function () { return scene; },\r\n\t\tsetScene: function ( value ) { scene = value; },\r\n\t\tgetRenderer: function () { return renderer; },\r\n\t\tsetRenderer: function ( value ) { renderer = value; }\r\n\t}\r\n\r\n}\r\n\r\nexport { App };\r\n```\r\n","created_at":"2017-02-03T20:57:17.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10683#issuecomment-277360345","id":277360345,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10683","node_id":"MDEyOklzc3VlQ29tbWVudDI3NzM2MDM0NQ==","updated_at":"2017-02-03T20:58:40.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/277360345","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":14,"author_association":"OWNER","body":"Hmm... This approach won't allow doing this though...\r\n\r\n```js\r\nvar app = new THREE.App( canvas );\r\nvar renderer = app.getRenderer(); \/\/ undefined\r\n```","created_at":"2017-02-03T20:59:31.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10683#issuecomment-277360848","id":277360848,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10683","node_id":"MDEyOklzc3VlQ29tbWVudDI3NzM2MDg0OA==","updated_at":"2017-02-03T20:59:31.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/277360848","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":15,"author_association":"COLLABORATOR","body":"I'm not sure I understand why you want\r\n\r\n```var renderer = app.getRenderer();```\r\n\r\nwhen we can just do\r\n\r\n```var renderer = app.renderer;``` \r\n\r\nwith the exact same result using a getter. \r\n\r\nUnless you are trying to avoid getters and setters and use of ```this```? I think that imposes a lot of unnecessary constraints on what we can do here though, for the sake of making the code a little easier to read.  \r\n\r\nEither way, I'm just finishing up some stuff here, I'll push it in the next hour or so. Would you mind holding off on commenting until after? Then if you don't like it we can do things your way \ud83d\ude01 ","created_at":"2017-02-04T01:17:00.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10683#issuecomment-277405603","id":277405603,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10683","node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQwNTYwMw==","updated_at":"2017-02-04T01:17:00.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/277405603","user":{"following_url":"https:\/\/api.github.com\/users\/looeee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/looeee\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/5307958?v=4","url":"https:\/\/api.github.com\/users\/looeee","gists_url":"https:\/\/api.github.com\/users\/looeee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/looeee","subscriptions_url":"https:\/\/api.github.com\/users\/looeee\/subscriptions","node_id":"MDQ6VXNlcjUzMDc5NTg=","repos_url":"https:\/\/api.github.com\/users\/looeee\/repos","received_events_url":"https:\/\/api.github.com\/users\/looeee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/looeee\/starred{\/owner}{\/repo}","site_admin":false,"login":"looeee","type":"User","id":5307958,"followers_url":"https:\/\/api.github.com\/users\/looeee\/followers","organizations_url":"https:\/\/api.github.com\/users\/looeee\/orgs"}},{"index":16,"author_association":"COLLABORATOR","body":"I've added a Time class based on @Mugen87's [suggestion ](https:\/\/github.com\/mrdoob\/three.js\/issues\/10676#issuecomment-275950729) that we create something similar to Unity's [Time ](https:\/\/docs.unity3d.com\/ScriptReference\/Time.html) class.\r\nYou can see it in action along with App here: [**examples\/webgl_animation_timeScale**](http:\/\/rawgit.com\/looeee\/three.js\/f83b72b4d76d2d6bb8d1e36e0f070735c2fb7ebb\/examples\/webgl_animation_timeScale.html). \r\n\r\nIts essentially an enhancement of  Clock (although not based on that class) and has the following interface:\r\n\r\n**Properties**\r\n* Time.now: returns ```( performance || Date ).now()``` (Read only)\r\n* timeScale: The scale at which the time is passing. This can be used for slow motion effects.\r\n* unscaledTotalTime: total time since start was called, independent of timeScale, equivalent to Clock.getElapsedTime() (Read only)\r\n* totalTime: total timescale dependent time since start was called, also keep track of time across timeScale changes (Read only)\r\n* unscaledDelta: timeScale independent delta, eqivalent to Clock.getDelta() (Read only)\r\n* delta: timeScale dependent delta (Read only)\r\n* running: (boolean) whether or not the clock is currently running\r\n* paused: (boolean) whether or not the clock is currently paused\r\n\r\n**Methods**\r\n* start(): start the clock, or continue it if paused\r\n* stop(): stop and reset all timers\r\n* pause(): stop but don't reset timers\r\n\r\nI've added the following methods from Unity's time class to App rather than Time, the idea being that the use of App is optional so they be kept as separate as possible:\r\n\r\n* frameCount: number of frames since App.play() was called\r\n* averageFrameTime: average time per frame (Read only) \r\n","created_at":"2017-02-04T09:04:45.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10683#issuecomment-277430260","id":277430260,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10683","node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQzMDI2MA==","updated_at":"2017-02-04T09:10:02.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/277430260","user":{"following_url":"https:\/\/api.github.com\/users\/looeee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/looeee\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/5307958?v=4","url":"https:\/\/api.github.com\/users\/looeee","gists_url":"https:\/\/api.github.com\/users\/looeee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/looeee","subscriptions_url":"https:\/\/api.github.com\/users\/looeee\/subscriptions","node_id":"MDQ6VXNlcjUzMDc5NTg=","repos_url":"https:\/\/api.github.com\/users\/looeee\/repos","received_events_url":"https:\/\/api.github.com\/users\/looeee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/looeee\/starred{\/owner}{\/repo}","site_admin":false,"login":"looeee","type":"User","id":5307958,"followers_url":"https:\/\/api.github.com\/users\/looeee\/followers","organizations_url":"https:\/\/api.github.com\/users\/looeee\/orgs"}},{"index":17,"author_association":"COLLABORATOR","body":"App now has the following interface:\r\n\r\n**Constructor**\r\n```var app = new App( canvas )```\r\n\r\n**Properties**\r\n* autoRender: (boolean) whether to automatically call renderer.render() in the loop\r\n* autoResize: (boolean) whether to automatically handle resize events (perspective camera only for now)\r\n* frameCount: number of frames since App.play() was called\r\n* averageFrameTime: average time per frame (Read only)\r\n* time: instance of the Time class\r\n* canvas: the canvas passed in the constructor, or one automically created when this property is first accessed\r\n* camera: a new PerspectiveCamera is auto-created on first access if not assigned manually\r\n* scene: a new Scene is auto-created on first access if not assigned manually\r\n* renderer: a new WebGLRenderer is auto-created on first access if not assigned manually\r\n\r\n**Methods**\r\n* play: start the animation loop and call time.start()\r\n* pause: cancel the animation loop and call time.pause() \r\n* stop: cancel the animation loop, reset frameCount to 0 and call time.stop()\r\n* onUpdate: empty function, to be replaced by the user and called once per frame\r\n* onWindowResize: called on resize event if autoResize is set\r\n","created_at":"2017-02-04T09:21:11.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10683#issuecomment-277431012","id":277431012,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10683","node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQzMTAxMg==","updated_at":"2017-02-04T09:21:11.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/277431012","user":{"following_url":"https:\/\/api.github.com\/users\/looeee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/looeee\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/5307958?v=4","url":"https:\/\/api.github.com\/users\/looeee","gists_url":"https:\/\/api.github.com\/users\/looeee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/looeee","subscriptions_url":"https:\/\/api.github.com\/users\/looeee\/subscriptions","node_id":"MDQ6VXNlcjUzMDc5NTg=","repos_url":"https:\/\/api.github.com\/users\/looeee\/repos","received_events_url":"https:\/\/api.github.com\/users\/looeee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/looeee\/starred{\/owner}{\/repo}","site_admin":false,"login":"looeee","type":"User","id":5307958,"followers_url":"https:\/\/api.github.com\/users\/looeee\/followers","organizations_url":"https:\/\/api.github.com\/users\/looeee\/orgs"}},{"index":18,"author_association":"CONTRIBUTOR","body":"THREE.App is a really good idea ! \r\nIt look like very similar with an object that i called viewport... In my experience you should think about two or three other things to add in the interface !\r\n\r\nFirst, you should (in my view) allow to get\/set an camera controller (why only static scene  ?!).\r\nNext, why not a camera effect ?\r\nFurthermore, the canvas could be auto-created for a given html element id ???\r\nFinally, this app interface should be easy to parameter so why do not use this chaining methods ?\r\n\r\nThen you could use like this :\r\n\r\n```javascript\r\n\r\nvar app = new App( canvas )\r\napp.setCamera( myCamera )\r\n   .setScene( myScene )\r\n   .setRenderer( myRenderer )\r\n   .setClearColor( 0x111111 )\r\n   .setEtc( ... )\r\n\r\n```\r\n\r\nI hope it will come soon !\r\n\r\nBest regards,\r\nTristan\r\n","created_at":"2017-02-13T20:10:17.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10683#issuecomment-279507689","id":279507689,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10683","node_id":"MDEyOklzc3VlQ29tbWVudDI3OTUwNzY4OQ==","updated_at":"2017-02-13T20:10:17.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/279507689","user":{"following_url":"https:\/\/api.github.com\/users\/Itee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Itee\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/5276909?v=4","url":"https:\/\/api.github.com\/users\/Itee","gists_url":"https:\/\/api.github.com\/users\/Itee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Itee","subscriptions_url":"https:\/\/api.github.com\/users\/Itee\/subscriptions","node_id":"MDQ6VXNlcjUyNzY5MDk=","repos_url":"https:\/\/api.github.com\/users\/Itee\/repos","received_events_url":"https:\/\/api.github.com\/users\/Itee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Itee\/starred{\/owner}{\/repo}","site_admin":false,"login":"Itee","type":"User","id":5276909,"followers_url":"https:\/\/api.github.com\/users\/Itee\/followers","organizations_url":"https:\/\/api.github.com\/users\/Itee\/orgs"}},{"index":19,"author_association":"COLLABORATOR","body":"@TristanVALCKE thanks for the feedback \ud83d\ude04 \r\n\r\nBy non static scene do you mean with a camera controller? The [examples\/webgl_multiple_elements](http:\/\/rawgit.com\/looeee\/three.js\/f9c10fa57b998968ad4a35c0f88242a959e3649f\/examples\/webgl_multiple_elements.html) I linked above uses Orbit Controls, it's pretty straightforward to set up. \r\n\r\n>Next, why not a camera effect ? \r\n \r\nPostprocessing? I haven't tried this yet, but I think it should be similarly not hard to set up. \r\n\r\n> Furthermore, the canvas could be auto-created for a given html element id ???\r\n\r\nYes, I was thinking about how to do that. I think that there needs to be some more work done on how the App creates canvases. \r\n\r\nAs for your last point, doing this\r\n\r\n```js\r\nvar app = new App( canvas )\r\napp.setCamera( myCamera )\r\n   .setScene( myScene )\r\n   .setRenderer( myRenderer )\r\n   .setClearColor( 0x111111 )\r\n   .setEtc( ... )\r\n```\r\n\r\nwould require copying over references to all the renderer (and presumably camera and scene) methods. It's possible to write a function that will do that of course, something like:\r\n\r\n```\r\nObject.keys(this.renderer).forEach( function(key) {\r\n    this[key] = this.renderer[key];\r\n});\r\n```\r\n\r\nwould work, but seems messy. \r\n\r\nAt the moment I have it set up to use getters so that you can do:\r\n\r\n```js\r\nvar app = new App( canvas );\r\napp.camera = myCamera;\r\napp.scene = myScene;\r\napp.renderer = myRenderer;\r\napp.renderer.setClearColor( 0x111111 );\r\n... etc\r\n```\r\n\r\nWhile @mrdoob suggested that we do it this way (incorporating chaining):\r\n```js\r\nvar app = new App( canvas );\r\napp.setCamera( myCamera );\r\n    .setScene( myScene );\r\n    .setRenderer( myRenderer );\r\n    .getRenderer().setClearColor( 0x111111 );\r\n\/\/chaining will not work for the getThing() functions so we will continue like:\r\napp.getCamera().setSize( ... )\r\n... etc\r\n```\r\n\r\nAt this point I'm waiting for feedback to see whether this is wanted by the community or not. \r\n\r\nP.S @mrdoob I hope I didn't come across as trying to push my approach over yours, I just had a commit with the `Time` stuff ready to go and wanted feedback on it before trying your approach \ud83d\ude01 ","created_at":"2017-02-15T14:12:06.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10683#issuecomment-280020551","id":280020551,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10683","node_id":"MDEyOklzc3VlQ29tbWVudDI4MDAyMDU1MQ==","updated_at":"2017-02-15T14:12:06.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/280020551","user":{"following_url":"https:\/\/api.github.com\/users\/looeee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/looeee\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/5307958?v=4","url":"https:\/\/api.github.com\/users\/looeee","gists_url":"https:\/\/api.github.com\/users\/looeee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/looeee","subscriptions_url":"https:\/\/api.github.com\/users\/looeee\/subscriptions","node_id":"MDQ6VXNlcjUzMDc5NTg=","repos_url":"https:\/\/api.github.com\/users\/looeee\/repos","received_events_url":"https:\/\/api.github.com\/users\/looeee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/looeee\/starred{\/owner}{\/repo}","site_admin":false,"login":"looeee","type":"User","id":5307958,"followers_url":"https:\/\/api.github.com\/users\/looeee\/followers","organizations_url":"https:\/\/api.github.com\/users\/looeee\/orgs"}},{"index":20,"author_association":"CONTRIBUTOR","body":"About your last example about chaining.\r\n\r\nthe getThing() is not really a problem, when you realize that setting is \"for initialization\" : \r\n\r\n```javascript\r\n\r\nvar myCamera = new Scene();\r\nmyCamera.setSize( ... )\r\nmyCamera.setPosition( ... )\r\n\r\nvar myRenderer = new Scene();\r\nmyRenderer.setClearColor( 0x111111 );\r\n\r\nvar myScene = new Scene();\r\n\r\nvar app = new App( canvas ).setCamera( myCamera )\r\n                           .setScene( myScene )\r\n                           .setRenderer( myRenderer );\r\n\r\n```\r\n\r\n","created_at":"2017-02-20T22:16:12.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10683#issuecomment-281194698","id":281194698,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10683","node_id":"MDEyOklzc3VlQ29tbWVudDI4MTE5NDY5OA==","updated_at":"2017-02-20T22:16:12.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/281194698","user":{"following_url":"https:\/\/api.github.com\/users\/Itee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Itee\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/5276909?v=4","url":"https:\/\/api.github.com\/users\/Itee","gists_url":"https:\/\/api.github.com\/users\/Itee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Itee","subscriptions_url":"https:\/\/api.github.com\/users\/Itee\/subscriptions","node_id":"MDQ6VXNlcjUyNzY5MDk=","repos_url":"https:\/\/api.github.com\/users\/Itee\/repos","received_events_url":"https:\/\/api.github.com\/users\/Itee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Itee\/starred{\/owner}{\/repo}","site_admin":false,"login":"Itee","type":"User","id":5276909,"followers_url":"https:\/\/api.github.com\/users\/Itee\/followers","organizations_url":"https:\/\/api.github.com\/users\/Itee\/orgs"}},{"index":21,"author_association":"COLLABORATOR","body":"That is true - however in your code you are now doing pretty much the same amount of work as not using app to set up (you'll still have the advantage of auto resizing and play \/ pause \/ stop functionality of course). \r\n\r\nDo you think that this approach is better than\r\n\r\n```js\r\nvar app = new App( canvas );\r\napp.camera= new THREE.PerspectiveCamera(); \/\/actually this line is not needed as it will be created by default\r\napp.camera.setSize( ... );\r\n... etc\r\n```\r\n? ","created_at":"2017-02-21T13:22:33.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10683#issuecomment-281342683","id":281342683,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10683","node_id":"MDEyOklzc3VlQ29tbWVudDI4MTM0MjY4Mw==","updated_at":"2017-02-21T13:22:33.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/281342683","user":{"following_url":"https:\/\/api.github.com\/users\/looeee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/looeee\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/5307958?v=4","url":"https:\/\/api.github.com\/users\/looeee","gists_url":"https:\/\/api.github.com\/users\/looeee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/looeee","subscriptions_url":"https:\/\/api.github.com\/users\/looeee\/subscriptions","node_id":"MDQ6VXNlcjUzMDc5NTg=","repos_url":"https:\/\/api.github.com\/users\/looeee\/repos","received_events_url":"https:\/\/api.github.com\/users\/looeee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/looeee\/starred{\/owner}{\/repo}","site_admin":false,"login":"looeee","type":"User","id":5307958,"followers_url":"https:\/\/api.github.com\/users\/looeee\/followers","organizations_url":"https:\/\/api.github.com\/users\/looeee\/orgs"}}]}