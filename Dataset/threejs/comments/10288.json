{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"OWNER","body":"This example uses a `ShaderMaterial` with textures and seems to work fine:\r\nhttps:\/\/threejs.org\/examples\/#webgl_terrain_dynamic","created_at":"2016-12-08T16:37:37.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/10288#issuecomment-265787022","id":265787022,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10288","node_id":"MDEyOklzc3VlQ29tbWVudDI2NTc4NzAyMg==","updated_at":"2016-12-08T16:37:37.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/265787022","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":1,"author_association":"NONE","body":"Sorry, I think I didn't explain myself correctly. I am aware that you can load textures into the ShaderMaterial which is incredible useful. That is why I am talking about getting the **JSONLoader** to be able to parse an object that uses a ShaderMaterial with a texture. \r\nThat is: you would be able to store an object using the JSON Object Scene format 4 and inside specify an image using base64, then a texture that points to that image and finally reference that texture from a property, called for example, textureMap inside the uniforms property in your ShaderMaterial. \r\nAs far as I can tell the MaterialLoader, when parsing the json object just sets the uniforms property as is:\r\n`if ( json.uniforms !== undefined ) material.uniforms = json.uniforms;` \r\n\r\nThe relevant part of the JSON object is something like this:\r\n\r\n```\r\n{\r\n  \"images\":[\r\n    {\r\n        \"name\":\"matcap1.png\",\r\n        \"url\":\"data:image\/png;base64,iVBORw0KGgoAAAA...\",\r\n        \"uuid\":\"777FBD78-6BFE-4AD7-934D-DA0EB2500777\"\r\n      }\r\n  ],\r\n  \"textures\":[\r\n    {\r\n        \"name\":\"MatcapTexture\",\r\n        \"magFilter\":1006,\r\n        \"image\":\"777FBD78-6BFE-4AD7-934D-DA0EB2500777\",\r\n        \"repeat\":[1,1],\r\n        \"minFilter\":1008,\r\n        \"mapping\":300,\r\n        \"anisotropy\":1,\r\n        \"uuid\":\"77788D24-4EB1-4BE7-9073-A8F35E6FE777\",\r\n        \"wrap\":[1000,1000]\r\n    }\r\n  ],\r\n  \"materials\":[\r\n    {\r\n        \"name\":\"mat_lacquer\",\r\n        \"uuid\":\"87AACFC7-902F-4664-A3E7-CBF12B270FD1\",\r\n        \"type\":\"ShaderMaterial\",\"side\":2,\"depthFunc\":3,\"depthTest\":true,\r\n        \"depthWrite\":true,\"skinning\":false,\"morphTargets\":false,\r\n\t\t    \"uniforms\":{\r\n      \t\t          \"textureMap\":{\"type\":\"t\",\"value\": \"77788D24-4EB1-4BE7-9073-A8F35E6FE777\" },\r\n       \t\t          \"normalScale\":{\"type\":\"f\",\"value\":0},\r\n      \t\t          \"texScale\":{\"type\":\"f\",\"value\":10},\r\n      \t\t          \"useSSS\":{\"type\":\"f\",\"value\":0},\r\n       \t\t          \"useScreen\":{\"type\":\"f\",\"value\":0}\r\n \t\t    },\r\n        \"vertexShader\":\"\\n\\n\\tvarying vec3 vNormal;\\n    varying vec4 vPosition;\\n ..\",\r\n        \"fragmentShader\":\"\\n\\t\\n\\t \\n\\tvarying vec3 vReflect;\"\r\n      }\r\n  ],\r\n  ...\r\n}\r\n```\r\n\r\nThe code above allows to add this functionality and we think it would be great if it could be part of the core. It is similar to how other attributes with maps like the map, alphaMap, bumpMap, etc., work right now, just inside the \"uniforms\" property.\r\n","created_at":"2016-12-09T13:16:02.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/10288#issuecomment-266011296","id":266011296,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10288","node_id":"MDEyOklzc3VlQ29tbWVudDI2NjAxMTI5Ng==","updated_at":"2016-12-09T13:16:02.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/266011296","user":{"following_url":"https:\/\/api.github.com\/users\/jgsacris\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/jgsacris\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/3586410?v=4","url":"https:\/\/api.github.com\/users\/jgsacris","gists_url":"https:\/\/api.github.com\/users\/jgsacris\/gists{\/gist_id}","html_url":"https:\/\/github.com\/jgsacris","subscriptions_url":"https:\/\/api.github.com\/users\/jgsacris\/subscriptions","node_id":"MDQ6VXNlcjM1ODY0MTA=","repos_url":"https:\/\/api.github.com\/users\/jgsacris\/repos","received_events_url":"https:\/\/api.github.com\/users\/jgsacris\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/jgsacris\/starred{\/owner}{\/repo}","site_admin":false,"login":"jgsacris","type":"User","id":3586410,"followers_url":"https:\/\/api.github.com\/users\/jgsacris\/followers","organizations_url":"https:\/\/api.github.com\/users\/jgsacris\/orgs"}},{"index":2,"author_association":"OWNER","body":"Ah, I see... Yeah, `ObjectLoader`\/`MaterialLoader` may not be able to handle that yet...","created_at":"2016-12-09T17:55:24.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/10288#issuecomment-266078077","id":266078077,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10288","node_id":"MDEyOklzc3VlQ29tbWVudDI2NjA3ODA3Nw==","updated_at":"2016-12-09T17:55:24.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/266078077","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":3,"author_association":"NONE","body":"Is this still true? So no custom shader + custom textures via the json interface possible?","created_at":"2018-07-29T13:31:10.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/10288#issuecomment-408678051","id":408678051,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10288","node_id":"MDEyOklzc3VlQ29tbWVudDQwODY3ODA1MQ==","updated_at":"2018-07-29T13:31:10.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/408678051","user":{"following_url":"https:\/\/api.github.com\/users\/SimonDanisch\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/SimonDanisch\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1010467?v=4","url":"https:\/\/api.github.com\/users\/SimonDanisch","gists_url":"https:\/\/api.github.com\/users\/SimonDanisch\/gists{\/gist_id}","html_url":"https:\/\/github.com\/SimonDanisch","subscriptions_url":"https:\/\/api.github.com\/users\/SimonDanisch\/subscriptions","node_id":"MDQ6VXNlcjEwMTA0Njc=","repos_url":"https:\/\/api.github.com\/users\/SimonDanisch\/repos","received_events_url":"https:\/\/api.github.com\/users\/SimonDanisch\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/SimonDanisch\/starred{\/owner}{\/repo}","site_admin":false,"login":"SimonDanisch","type":"User","id":1010467,"followers_url":"https:\/\/api.github.com\/users\/SimonDanisch\/followers","organizations_url":"https:\/\/api.github.com\/users\/SimonDanisch\/orgs"}},{"index":4,"author_association":"OWNER","body":"@SimonDanisch I don't know. Doesn't work for you?","created_at":"2018-07-31T05:26:47.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/10288#issuecomment-409099141","id":409099141,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10288","node_id":"MDEyOklzc3VlQ29tbWVudDQwOTA5OTE0MQ==","updated_at":"2018-07-31T05:26:47.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/409099141","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":5,"author_association":"NONE","body":"Well, I have an example that works with `MeshLambertMaterial` and the texture comes out fine. It get's lowered to JSON like this:\r\n```Julia\r\nfunction lower(material::GenericMaterial)\r\n    data = Dict{String, Any}(\r\n        \"uuid\" => string(uuid1()),\r\n        \"type\" => \"MeshBasicMaterial\",\r\n         ... # blablabla\r\n        \"vertexColors\" => material.vertexColors,\r\n    )\r\n    if material.map !== nothing\r\n        data[\"map\"] = lower(material.map)\r\n    end\r\n    data\r\nend\r\n```\r\nhttps:\/\/github.com\/rdeits\/MeshCat.jl\/blob\/master\/src\/lowering.jl#L173\r\n\r\nI adapted this for a custom shader material with fragment + vertex shader like this:\r\n```Julia\r\nfunction lower(material::CustomMaterial)\r\n    data = Dict{String, Any}(\r\n        \"uuid\" => string(uuid1()),\r\n        \"type\" => \"ShaderMaterial\",\r\n        ... # other fields\r\n        \"fragmentShader\" => material.fragmentShader,\r\n        \"vertexShader\" => material.vertexShader,\r\n        \"defines\" => Dict(\"USE_MAP\" => \"\")\r\n    )\r\n    if material.map !== nothing\r\n        # 1)\r\n# this one seems to make me refer to the sky map (or that's just the last bound texture?)\r\n        data[\"map\"] = lower(material.map)\r\n        # other variants i tried (all turned out black\/uninitialized memory):\r\n        # 2)\r\n        data[\"uniforms\"] = Dict(\r\n            \"map\" => Dict(\r\n                \"value\" => lower(material.map)\r\n            ),\r\n        )\r\n\r\n        # 3)\r\n        data[\"uniforms\"] = Dict(\r\n            \"map\" => lower(material.map)\r\n        )\r\n\r\n        # 4)\r\n        data[\"uniforms\"] = Dict(\r\n            \"map\" => Dict(\r\n               \"type\" => \"t\",\r\n                \"value\" => lower(material.map)\r\n            ),\r\n        )\r\n    end\r\n    data\r\nend\r\n```\r\n\r\nOther uniforms come through fine, and the textures also appear in the javascript object - but they actually don't seem to be fully loaded compared to the `MeshBasicMaterial`... The `MeshBasicMaterial` comes through with many more fields - and after investigating the JSON Material loader code, i can't really find any code that actually materializes textures from uniforms or a custom material.\r\n","created_at":"2018-07-31T08:25:50.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/10288#issuecomment-409138818","id":409138818,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10288","node_id":"MDEyOklzc3VlQ29tbWVudDQwOTEzODgxOA==","updated_at":"2018-07-31T08:25:50.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/409138818","user":{"following_url":"https:\/\/api.github.com\/users\/SimonDanisch\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/SimonDanisch\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1010467?v=4","url":"https:\/\/api.github.com\/users\/SimonDanisch","gists_url":"https:\/\/api.github.com\/users\/SimonDanisch\/gists{\/gist_id}","html_url":"https:\/\/github.com\/SimonDanisch","subscriptions_url":"https:\/\/api.github.com\/users\/SimonDanisch\/subscriptions","node_id":"MDQ6VXNlcjEwMTA0Njc=","repos_url":"https:\/\/api.github.com\/users\/SimonDanisch\/repos","received_events_url":"https:\/\/api.github.com\/users\/SimonDanisch\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/SimonDanisch\/starred{\/owner}{\/repo}","site_admin":false,"login":"SimonDanisch","type":"User","id":1010467,"followers_url":"https:\/\/api.github.com\/users\/SimonDanisch\/followers","organizations_url":"https:\/\/api.github.com\/users\/SimonDanisch\/orgs"}}]}