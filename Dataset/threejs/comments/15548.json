{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"COLLABORATOR","body":"Some history: https:\/\/github.com\/mrdoob\/three.js\/pull\/9975.\r\n","created_at":"2019-01-08T20:25:43.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/15548#issuecomment-452439510","id":452439510,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/15548","node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjQzOTUxMA==","updated_at":"2019-01-08T20:25:43.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/452439510","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":1,"author_association":"COLLABORATOR","body":"Some earlier history: https:\/\/github.com\/mrdoob\/three.js\/pull\/6263.","created_at":"2019-01-08T20:29:11.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/15548#issuecomment-452440543","id":452440543,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/15548","node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjQ0MDU0Mw==","updated_at":"2019-01-08T20:29:11.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/452440543","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":2,"author_association":"COLLABORATOR","body":"Regarding the environment map, the PBR materials treat `.envMap` as an additive light source.\r\n\r\nIt was not originally like that; that is why the `material.combine` property was required.\r\n\r\nThe original three.js materials have largely remained unchanged since their introduction.","created_at":"2019-01-08T20:36:29.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/15548#issuecomment-452442627","id":452442627,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/15548","node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjQ0MjYyNw==","updated_at":"2019-01-08T20:36:29.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/452442627","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":3,"author_association":"NONE","body":"The root of Don's question here comes from the glTF `KHR_materials_unlit` extension, which is supported in the GltfLoader.js by way of the MeshBasicMaterial.  A typical client of such a loader may blindly mass-apply an environment to all of the materials of a loaded glTF file.  But in the case of `unlit` materials, applying the environment breaks the unlit effect by multiplying in some reflections.\r\n\r\nMy question on this is, should clients of GltfLoader.js be smart enough to detect `MeshBasicMaterial` and understand that it comes as a result of `KHR_materials_unlit` and should therefore be excluded from having an environment map?  Or should the loader take steps to turn off reflections, such as by setting `.reflections = 0` or similar?  Don pointed out in another thread that the glTF loader shouldn't break user expectations of the material system, but, asking users to understand which glTF materials need environment maps seems like a high bar.\r\n\r\nPerhaps the environment map could be passed into the glTF loader, so it could make its own decisions about which materials need the environment?","created_at":"2019-01-08T20:40:40.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/15548#issuecomment-452443822","id":452443822,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/15548","node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjQ0MzgyMg==","updated_at":"2019-01-08T20:40:40.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/452443822","user":{"following_url":"https:\/\/api.github.com\/users\/emackey\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/emackey\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1235080?v=4","url":"https:\/\/api.github.com\/users\/emackey","gists_url":"https:\/\/api.github.com\/users\/emackey\/gists{\/gist_id}","html_url":"https:\/\/github.com\/emackey","subscriptions_url":"https:\/\/api.github.com\/users\/emackey\/subscriptions","node_id":"MDQ6VXNlcjEyMzUwODA=","repos_url":"https:\/\/api.github.com\/users\/emackey\/repos","received_events_url":"https:\/\/api.github.com\/users\/emackey\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/emackey\/starred{\/owner}{\/repo}","site_admin":false,"login":"emackey","type":"User","id":1235080,"followers_url":"https:\/\/api.github.com\/users\/emackey\/followers","organizations_url":"https:\/\/api.github.com\/users\/emackey\/orgs"}},{"index":4,"author_association":"COLLABORATOR","body":"@emackey Your point is well-stated.  As far as I am concerned, this is a legacy three.js issue, and I do not have a strong opinion one way or the other how we resolve it.","created_at":"2019-01-08T20:51:30.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/15548#issuecomment-452446922","id":452446922,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/15548","node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjQ0NjkyMg==","updated_at":"2019-01-08T20:51:30.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/452446922","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":5,"author_association":"COLLABORATOR","body":"Thanks @WestLangley \u2014 that makes more sense knowing MeshBasicMaterial is treating envMap differently than the PBR materials.\r\n\r\nI do think it would be a step too far for GLTFLoader to take steps ensuring that manual user assignments to a material will do nothing... That MeshBasicMaterial supports these other maps was surprising to me, and I'm not sure I understand the purpose (as a user, why not merge map+aoMap+lightMap into a single texture for MeshBasicMaterial? to use separate UVs?) but I don't feel strongly enough to suggest removing support.\r\n\r\nSince both creating unlit materials in glTF and adding an environment in three.js are \"opt-in\" choices, I don't necessarily think a change is needed. Adding a `loader.setEnvMap( texture )` method would solve the immediate issue, but it's hard to recommend that when it requires loading the model and the envMap in sequence.","created_at":"2019-01-08T21:16:10.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/15548#issuecomment-452454200","id":452454200,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/15548","node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjQ1NDIwMA==","updated_at":"2019-01-08T21:16:10.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/452454200","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":6,"author_association":"COLLABORATOR","body":"I think setting `.reflectivity = 0;` for `MeshBasicMaterial` in `GLTFLoader` is ok. It's valid setting. And I don't think users expect that environment breaks unlit. ","created_at":"2019-01-09T13:06:21.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/15548#issuecomment-452689758","id":452689758,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/15548","node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjY4OTc1OA==","updated_at":"2019-01-09T13:06:21.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/452689758","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":7,"author_association":"COLLABORATOR","body":"Ok, `reflectivity=0` sounds good to me. But let's leave the AO and lightmap intensity settings alone.","created_at":"2019-01-10T05:46:06.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/15548#issuecomment-452978146","id":452978146,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/15548","node_id":"MDEyOklzc3VlQ29tbWVudDQ1Mjk3ODE0Ng==","updated_at":"2019-01-10T05:46:06.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/452978146","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":8,"author_association":"COLLABORATOR","body":"Oops, I'm just aware now of that we're talking about not only `envMap` but also `aoMap` and `lightMap`.\r\n\r\n> But let's leave the AO and lightmap intensity settings alone.\r\n\r\nThis means, should `aoMap` and `lightMap` be able to be applied to gltf unlit extension material?","created_at":"2019-01-10T06:52:09.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/15548#issuecomment-452989613","id":452989613,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/15548","node_id":"MDEyOklzc3VlQ29tbWVudDQ1Mjk4OTYxMw==","updated_at":"2019-01-10T06:52:09.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/452989613","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":9,"author_association":"COLLABORATOR","body":"The original motivation for the question was just about `envMap`, since users sometimes assume they need to traverse their models and apply envMap to each material. The same has never happened for aoMap or lightMap. On the other hand, if including the envMap will have a negative performance effect on an otherwise lightweight material, maybe it's best that the effect of the envMap is visible rather than hidden?\r\n\r\nI strongly think we should not prevent aoMap or lightMap from being applied, just as we would not prevent a user from changing a material's color, just because the glTF file says it is blue.","created_at":"2019-01-10T15:45:59.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/15548#issuecomment-453142838","id":453142838,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/15548","node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzE0MjgzOA==","updated_at":"2019-01-10T15:45:59.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/453142838","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":10,"author_association":"COLLABORATOR","body":"> if including the envMap will have a negative performance effect on an otherwise lightweight material\r\n\r\nGood point. Yeah, setting `envMap` should have negative performance impact even if `.reflectivity=0`. It's opposed to performant material that is one of the unlit extension objectives.\r\n\r\nStarting to think it may be good we add a note to the doc and ask users to check if material is not `MeshBasicMaterial` for setting `envMap`, rather than setting `.reflectivity=0`, like\r\n\r\n```javascript\r\nscene.traverse(object => {\r\n    if(object.material && !object.material.isMeshBasicMaterial) {\r\n        object.material.envMap = envMap;\r\n        object.material.needsUpdate = true;\r\n    }\r\n});\r\n```\r\n\r\nRegarding `aoMap` and `lightMap`, agreed with not preventing user's change. (If we want to prohibit these maps, maybe we should use `ShaderMaterial`, not `MeshBasicMaterial`.) So similarly starting to think `envMap` effect should be visible...","created_at":"2019-01-11T01:18:22.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/15548#issuecomment-453331039","id":453331039,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/15548","node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzMzMTAzOQ==","updated_at":"2019-01-11T01:19:31.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/453331039","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":11,"author_association":"COLLABORATOR","body":"Ok, leaning against making a change here but more feedback is welcome.","created_at":"2019-01-17T01:50:45.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/15548#issuecomment-455012054","id":455012054,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/15548","node_id":"MDEyOklzc3VlQ29tbWVudDQ1NTAxMjA1NA==","updated_at":"2019-01-17T01:50:45.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/455012054","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}}]}