{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"NONE","body":"Since this is dynamically loading JS or WebAssembly files, it will become even more painful to use whenever there is a bundling step involved (i.e. when using webpack). It was already non-trivial before due to the direct usage of the `THREE` global...but at least that you could accomplish via some loader tricks. Now it will required either removing all the JS loading code or replacing it with ES2015 imports (https:\/\/webpack.js.org\/api\/module-methods\/#import-).\r\n\r\nIt would be great if a strategy would be put in place to better support bundlers like webpack or rollup since any non-trivial app these days requires bundling (and probably also transpiling, etc).","created_at":"2017-09-12T21:30:59.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12178#issuecomment-328990197","id":328990197,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12178","node_id":"MDEyOklzc3VlQ29tbWVudDMyODk5MDE5Nw==","updated_at":"2017-09-12T21:30:59.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/328990197","user":{"following_url":"https:\/\/api.github.com\/users\/hccampos\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/hccampos\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/3759114?v=4","url":"https:\/\/api.github.com\/users\/hccampos","gists_url":"https:\/\/api.github.com\/users\/hccampos\/gists{\/gist_id}","html_url":"https:\/\/github.com\/hccampos","subscriptions_url":"https:\/\/api.github.com\/users\/hccampos\/subscriptions","node_id":"MDQ6VXNlcjM3NTkxMTQ=","repos_url":"https:\/\/api.github.com\/users\/hccampos\/repos","received_events_url":"https:\/\/api.github.com\/users\/hccampos\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/hccampos\/starred{\/owner}{\/repo}","site_admin":false,"login":"hccampos","type":"User","id":3759114,"followers_url":"https:\/\/api.github.com\/users\/hccampos\/followers","organizations_url":"https:\/\/api.github.com\/users\/hccampos\/orgs"}},{"index":1,"author_association":"COLLABORATOR","body":"> It would be great if a strategy would be put in place to better support bundlers like webpack or rollup since any non-trivial app these days requires bundling (and probably also transpiling, etc).\r\n\r\nI agree, but this isn't currently possible within the `examples\/js\/*` directory. This change was added in response to @mrdoob's feedback on a previous PR: \"How about adding all this logic inside DRACOLoader so it works transparently for the user?\", and IMO it is an improvement from that version.\r\n\r\nFor the short-term, since this is already in `examples\/js\/*`, how about saying DRACOLoader should only attempt to request decoder files if a path is provided in the constructor? If not, it would be up to the user to provide an appropriate decoder through a `loader.setDecoder(decoder)` call or something.\r\n\r\nLonger term... I'm curious how loading WebAssembly with JS fallback in webpack or rollup works. I'd be interested to see a proof of concept on this. \ud83d\ude42","created_at":"2017-09-13T16:07:59.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12178#issuecomment-329217055","id":329217055,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12178","node_id":"MDEyOklzc3VlQ29tbWVudDMyOTIxNzA1NQ==","updated_at":"2017-09-13T16:07:59.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/329217055","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":2,"author_association":"CONTRIBUTOR","body":"Hi @hccampos , thanks for pointing out this problem. We don't have much experience with JS bundler so far, so good to learn! We made a change to `DRACOLoader.js` that the dynamic loading will not occur if `DracoDecoderModule` is defined. \r\nSo you could include `draco_decoder.js` in the html and set the decoderType to 'js'. This should avoid the dynamic loading. It's kinda a temporary solution for use cases like webpack since it doesn't work with wasm. We'll look for better solution for both JS and WAMS decoder.","created_at":"2017-09-14T22:03:06.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12178#issuecomment-329621519","id":329621519,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12178","node_id":"MDEyOklzc3VlQ29tbWVudDMyOTYyMTUxOQ==","updated_at":"2017-09-14T22:03:06.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/329621519","user":{"following_url":"https:\/\/api.github.com\/users\/fanzhanggoogle\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/fanzhanggoogle\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/20713853?v=4","url":"https:\/\/api.github.com\/users\/fanzhanggoogle","gists_url":"https:\/\/api.github.com\/users\/fanzhanggoogle\/gists{\/gist_id}","html_url":"https:\/\/github.com\/fanzhanggoogle","subscriptions_url":"https:\/\/api.github.com\/users\/fanzhanggoogle\/subscriptions","node_id":"MDQ6VXNlcjIwNzEzODUz","repos_url":"https:\/\/api.github.com\/users\/fanzhanggoogle\/repos","received_events_url":"https:\/\/api.github.com\/users\/fanzhanggoogle\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/fanzhanggoogle\/starred{\/owner}{\/repo}","site_admin":false,"login":"fanzhanggoogle","type":"User","id":20713853,"followers_url":"https:\/\/api.github.com\/users\/fanzhanggoogle\/followers","organizations_url":"https:\/\/api.github.com\/users\/fanzhanggoogle\/orgs"}},{"index":3,"author_association":"OWNER","body":"Thanks!","created_at":"2017-09-16T00:12:03.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12178#issuecomment-329930659","id":329930659,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12178","node_id":"MDEyOklzc3VlQ29tbWVudDMyOTkzMDY1OQ==","updated_at":"2017-09-16T00:12:03.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/329930659","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}}]}