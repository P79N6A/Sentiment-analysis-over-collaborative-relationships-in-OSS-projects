{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"COLLABORATOR","body":"\/cc @takahirox ","created_at":"2017-09-25T03:50:56.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12274#issuecomment-331770851","id":331770851,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12274","node_id":"MDEyOklzc3VlQ29tbWVudDMzMTc3MDg1MQ==","updated_at":"2017-09-25T03:50:56.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/331770851","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":1,"author_association":"COLLABORATOR","body":"Just curious to know if `ShaderMaterial` can be cloned correctly, we don't need explicitly clone ShaderMaterial properties?\r\nI'd like to know the root issue.","created_at":"2017-09-25T04:12:58.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12274#issuecomment-331772929","id":331772929,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12274","node_id":"MDEyOklzc3VlQ29tbWVudDMzMTc3MjkyOQ==","updated_at":"2017-09-25T04:12:58.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/331772929","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":2,"author_association":"COLLABORATOR","body":"The cause of the linked bug is that `material.map` was not copied when cloning a shader material.\r\n\r\n[ShaderMaterial does the right thing](https:\/\/github.com\/mrdoob\/three.js\/blob\/dev\/src\/materials\/ShaderMaterial.js#L88-L110), copying everything it knows about and invoking [Material.copy()](https:\/\/github.com\/mrdoob\/three.js\/blob\/dev\/src\/materials\/Material.js#L290-L314). But the `Material` class doesn't know about all of the `MeshStandardMaterial` properties we've added to the ShaderMaterial to support spec\/gloss. So we have to explicitly clone all the things ShaderMaterial doesn't know about, when in an ideal world everything that's not unique to spec\/gloss would be inherited instead.","created_at":"2017-09-25T04:21:39.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12274#issuecomment-331773720","id":331773720,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12274","node_id":"MDEyOklzc3VlQ29tbWVudDMzMTc3MzcyMA==","updated_at":"2017-09-25T04:23:31.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/331773720","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":3,"author_association":"COLLABORATOR","body":"Hm, so having `MeshSGStandardMaterial` would be another option?","created_at":"2017-09-25T10:13:02.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12274#issuecomment-331837883","id":331837883,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12274","node_id":"MDEyOklzc3VlQ29tbWVudDMzMTgzNzg4Mw==","updated_at":"2017-09-25T10:13:02.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/331837883","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":4,"author_association":"COLLABORATOR","body":"IMO, this change is good so far but I'd like to add comments into the code why we need Explicitly clone ShaderMaterial properties.\r\n\r\nAnd we'll also should try to fix `ShaderMaterial.copy()` issue and then revert once we've done.","created_at":"2017-09-25T13:16:41.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12274#issuecomment-331877498","id":331877498,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12274","node_id":"MDEyOklzc3VlQ29tbWVudDMzMTg3NzQ5OA==","updated_at":"2017-09-25T13:16:41.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/331877498","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":5,"author_association":"COLLABORATOR","body":"> Hm, so having `MeshSGStandardMaterial` would be another option?\r\n\r\nYeah. The current status of that is probably [@mrdoob's comment here](https:\/\/github.com\/mrdoob\/three.js\/pull\/11038#issuecomment-297188249), that we would wait to see if people use the workflow. I don't really expect people to create spec\/gloss materials manually, but importing models that use the workflow has a bit of traction. In this case, the Minecraft exporter creates spec\/gloss materials (why it does that, I don't know...).\r\n\r\nSo IMO the SG workflow is not something most users need to worry about when creating materials programmatically, but ideally it should work reliably when importing models. \ud83d\ude15\r\n\r\n> And we'll also should try to fix ShaderMaterial.copy() issue and then revert once we've done.\r\n\r\nNot sure I understand \u2014 `ShaderMaterial.copy()` is working as intended, as far as I can tell. It just doesn't know about all these properties we've added ourselves, and therefore can't clone them.","created_at":"2017-09-25T18:57:04.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12274#issuecomment-331978906","id":331978906,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12274","node_id":"MDEyOklzc3VlQ29tbWVudDMzMTk3ODkwNg==","updated_at":"2017-09-25T18:58:07.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/331978906","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":6,"author_association":"COLLABORATOR","body":"The problem I'm worrying is `ShaderMaterial.copy()` of SG material still doesn't work even if we merge this change.\r\n\r\nIf users want to copy of SG material in their user code, they need to be aware of that they need to explicitly clone properties instead of calling `.copy()`. This's very confusing.\r\n\r\nSo I wondered if we can enable `ShaderMaterial.copy()` to copy properties that users\/we add. (But adding special properties to `ShaderMaterial` would be out of `Three.js`\/`ShaderMaterial` manner?)\r\n\r\nIn my mind, I have three options.\r\n\r\n1. Support `MeshSGStandardMaterial` in Three.js core. It works fine but we need to reconsider `MeshPhongMaterial`.\r\n2. Enable `ShaderMaterial.copy()` to copy properties added by users\/us. But this'd be out of Three.js manner.\r\n3. Declare `MeshSGStandardMaterial` in `GLTFLoader`.\r\n\r\nI prefer 3. so far if it won't have any problems. Probably inheriting `ShaderMaterial` and overrides `.copy()` (and `.clone()`?) would be the easiest way. (Inheriting `MeshStandardMaterial` would be another option?)\r\n\r\n\r\n","created_at":"2017-09-26T00:21:49.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12274#issuecomment-332050003","id":332050003,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12274","node_id":"MDEyOklzc3VlQ29tbWVudDMzMjA1MDAwMw==","updated_at":"2017-09-26T00:21:49.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/332050003","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":7,"author_association":"COLLABORATOR","body":"Even if we do (2) or (3), it will still not be possible to clone a THREE.ShaderMaterial created from a glTF model. In addition to copying properties, we need for the `mesh.onBeforeRender` callback of the material's mesh to refresh the material's uniforms, and `ShaderMaterial.copy()` can't do that. \r\n\r\nThis PR just corrects things so that at least the model renders correctly in the first place \u2014 cloning still does not work.","created_at":"2017-09-26T00:35:44.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12274#issuecomment-332051815","id":332051815,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12274","node_id":"MDEyOklzc3VlQ29tbWVudDMzMjA1MTgxNQ==","updated_at":"2017-09-26T00:35:44.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/332051815","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":8,"author_association":"COLLABORATOR","body":"OK, this change would be a good workaround if we add the comment why we need \"Explicitly clone ShaderMaterial properties\" into the code.\r\n\r\nAnd let's keep discussing how to solve the root issue.\r\n","created_at":"2017-09-26T00:44:20.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12274#issuecomment-332053025","id":332053025,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12274","node_id":"MDEyOklzc3VlQ29tbWVudDMzMjA1MzAyNQ==","updated_at":"2017-09-26T00:44:20.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/332053025","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":9,"author_association":"COLLABORATOR","body":"> OK, this change would be a good workaround if we add the comment why we need \"Explicitly clone ShaderMaterial properties\" into the code.\r\n\r\nSounds good \u2014 done.","created_at":"2017-09-26T03:03:28.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12274#issuecomment-332072890","id":332072890,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12274","node_id":"MDEyOklzc3VlQ29tbWVudDMzMjA3Mjg5MA==","updated_at":"2017-09-26T03:03:28.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/332072890","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":10,"author_association":"OWNER","body":"Thanks guys!","created_at":"2017-09-28T01:59:10.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12274#issuecomment-332705200","id":332705200,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12274","node_id":"MDEyOklzc3VlQ29tbWVudDMzMjcwNTIwMA==","updated_at":"2017-09-28T01:59:10.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/332705200","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}}]}