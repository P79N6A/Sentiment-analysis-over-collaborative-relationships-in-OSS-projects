{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"COLLABORATOR","body":"There are more candidates for auto updating  via this setter method - in particular Skinning and MorphTargets for derived materials, and also possibly all map types. \r\n\r\nI want to present this PR first though to see whether anybody has issues with doing this before going ahead.","created_at":"2016-12-26T01:45:08.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10467#issuecomment-269147105","id":269147105,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10467","node_id":"MDEyOklzc3VlQ29tbWVudDI2OTE0NzEwNQ==","updated_at":"2016-12-26T01:45:08.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/269147105","user":{"following_url":"https:\/\/api.github.com\/users\/looeee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/looeee\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/5307958?v=4","url":"https:\/\/api.github.com\/users\/looeee","gists_url":"https:\/\/api.github.com\/users\/looeee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/looeee","subscriptions_url":"https:\/\/api.github.com\/users\/looeee\/subscriptions","node_id":"MDQ6VXNlcjUzMDc5NTg=","repos_url":"https:\/\/api.github.com\/users\/looeee\/repos","received_events_url":"https:\/\/api.github.com\/users\/looeee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/looeee\/starred{\/owner}{\/repo}","site_admin":false,"login":"looeee","type":"User","id":5307958,"followers_url":"https:\/\/api.github.com\/users\/looeee\/followers","organizations_url":"https:\/\/api.github.com\/users\/looeee\/orgs"}},{"index":1,"author_association":"OWNER","body":"I think I would use this approach instead:\r\nhttps:\/\/github.com\/mrdoob\/three.js\/blob\/dev\/src\/core\/Object3D.js#L54-L77\r\n\r\nThat way we avoid adding public `_properties` to the class.","created_at":"2016-12-26T04:13:31.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10467#issuecomment-269158596","id":269158596,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10467","node_id":"MDEyOklzc3VlQ29tbWVudDI2OTE1ODU5Ng==","updated_at":"2016-12-26T04:13:51.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/269158596","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":2,"author_association":"COLLABORATOR","body":"I agree that it would be good to avoid public ```_properties``` - the problem is that there need to be some kind of private variables that can be accessed and tested against by the ```Material.setValues``` method to prevent ```Material.needsUpdate``` being set multiple times in the constructor - for example:\r\n\r\n```js\r\nvar mat = new THREE.MeshStandardMaterial({ side: THREE.DoubleSide, fog: false, });\r\n```\r\n\r\nwill result in ```side``` and ```fog``` being passed to the ```setValues``` method and ```needsUpdate``` will be set to true each time (and hence ```Material.update()``` will be called twice by the constructor).\r\n\r\nOne possibility is to use closure to create true private variables. There is already one such variable in the ```Material.js``` file:\r\nhttps:\/\/github.com\/mrdoob\/three.js\/blob\/dev\/src\/materials\/Material.js#L10\r\n\r\nDo you think it would be acceptable to add more here? \r\n","created_at":"2016-12-26T13:41:17.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/10467#issuecomment-269212421","id":269212421,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/10467","node_id":"MDEyOklzc3VlQ29tbWVudDI2OTIxMjQyMQ==","updated_at":"2016-12-26T13:41:17.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/269212421","user":{"following_url":"https:\/\/api.github.com\/users\/looeee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/looeee\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/5307958?v=4","url":"https:\/\/api.github.com\/users\/looeee","gists_url":"https:\/\/api.github.com\/users\/looeee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/looeee","subscriptions_url":"https:\/\/api.github.com\/users\/looeee\/subscriptions","node_id":"MDQ6VXNlcjUzMDc5NTg=","repos_url":"https:\/\/api.github.com\/users\/looeee\/repos","received_events_url":"https:\/\/api.github.com\/users\/looeee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/looeee\/starred{\/owner}{\/repo}","site_admin":false,"login":"looeee","type":"User","id":5307958,"followers_url":"https:\/\/api.github.com\/users\/looeee\/followers","organizations_url":"https:\/\/api.github.com\/users\/looeee\/orgs"}}]}