{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"CONTRIBUTOR","body":"As a questions, this would probably be the wrong place to post it, but since I already extracted this information for my project and it took me some time, I'll post it here in case anyone wants to continue the development of the skinning:\n\nThe update of the skinning matrices is implemented in `SkinnedMesh.updateMatrixWorld`.\n\nThe data is stored in following places:\n\n``` javascript\n\/\/ A Matrix4 transforming from the local bone space to global space\n\/\/ The index i is here the index of the bone\nSkinnedMesh.bones[i].skinMatrix\n\n\/\/ A Matrix4 transforming from global space to the local bone space\n\/\/ The index i is here the index of the bone\n\/\/ Note: This should have been a property of SkinnedMesh.bones[i] in my opinion,\n\/\/       as some file formats (COLLADA) store this explicitely and in a way that is\n\/\/       incompatible with the way three.js automatically computes these matrices.\nSkinnedMesh.boneInverses[i]\n\n\/\/ A huge array of floats that stores the products of the above matrices,\n\/\/ concatenated into a flat array.\nSkinnedMesh.boneMatrices\n\n\/\/ A texture containing the data of SkinnedMesh.boneMatrices\n\/\/ This is just a way of passing all the matrices to a vertex shader\nSkinnedMesh.boneTexture\n```\n\nThe skinning equation for vertex i in three.js is as follows (written for clarity, not performance):\n\n``` javascript\n\/\/ The indices of bones influencing vertex i are stored as a Vector4 in the geometry\n\/\/ Note: some indices may be invalid if a vertex is influenced by less than 4 bones\n\/\/ Note: three.js does not support more than four bones per vertex\nbones = []\nbone[0] = mesh.geometry.skinIndices[i].x\nbone[1] = mesh.geometry.skinIndices[i].y\nbone[2] = mesh.geometry.skinIndices[i].z\nbone[3] = mesh.geometry.skinIndices[i].w\n\/\/ The weights of those four bones are stored as another Vector4 in the geometry\nweights = []\nweight[0] = mesh.geometry.skinWeights[i].x\nweight[1] = mesh.geometry.skinWeights[i].y\nweight[2] = mesh.geometry.skinWeights[i].z\nweight[3] = mesh.geometry.skinWeights[i].w\n\/\/ The inverse matrix transforms the static geometry into the local space of the bone\n\/\/ These matrices are static and stored in the mesh\ninverses = []\ninverses[0] = mesh.boneInverses[ bone[0] ]\ninverses[1] = mesh.boneInverses[ bone[1] ]\ninverses[2] = mesh.boneInverses[ bone[2] ]\ninverses[3] = mesh.boneInverses[ bone[3] ]\n\/\/ The skin matrix transforms from the local space of the bone to the global space\n\/\/ These matrices are animated and stored in the mesh\nskinMatrices = []\nskinMatrices[0] = mesh.bones[ bone[0] ].skinMatrix\nskinMatrices[1] = mesh.bones[ bone[1] ].skinMatrix\nskinMatrices[2] = mesh.bones[ bone[2] ].skinMatrix\nskinMatrices[3] = mesh.bones[ bone[3] ].skinMatrix\n\/\/ Finally, the skinning equation in pseudocode\n\/\/ Note: the product of the skin matrix and inverse matrix is computed on the CPU\n\/\/       in SkinnedMesh.updateMatrixWorld\n\/\/ Note: the actual skinning equation is implemented in a vertex shader\nposition = (0,0,0,0)\nposition += weights[0] * skinMatrices[0] * inverses[0] * mesh.geometry.vertices[i]\nposition += weights[1] * skinMatrices[1] * inverses[1] * mesh.geometry.vertices[i]\nposition += weights[2] * skinMatrices[2] * inverses[2] * mesh.geometry.vertices[i]\nposition += weights[3] * skinMatrices[3] * inverses[3] * mesh.geometry.vertices[i]\n```\n","created_at":"2013-03-13T14:51:51.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/3187#issuecomment-14845557","id":14845557,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/3187","node_id":"MDEyOklzc3VlQ29tbWVudDE0ODQ1NTU3","updated_at":"2013-03-13T14:51:51.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/14845557","user":{"following_url":"https:\/\/api.github.com\/users\/crobi\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/crobi\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/577871?v=4","url":"https:\/\/api.github.com\/users\/crobi","gists_url":"https:\/\/api.github.com\/users\/crobi\/gists{\/gist_id}","html_url":"https:\/\/github.com\/crobi","subscriptions_url":"https:\/\/api.github.com\/users\/crobi\/subscriptions","node_id":"MDQ6VXNlcjU3Nzg3MQ==","repos_url":"https:\/\/api.github.com\/users\/crobi\/repos","received_events_url":"https:\/\/api.github.com\/users\/crobi\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/crobi\/starred{\/owner}{\/repo}","site_admin":false,"login":"crobi","type":"User","id":577871,"followers_url":"https:\/\/api.github.com\/users\/crobi\/followers","organizations_url":"https:\/\/api.github.com\/users\/crobi\/orgs"}},{"index":1,"author_association":"NONE","body":"Hi Crobi! \n I'm stuck with the same problem and your answer seems to be the only comprehensive one out there, thanks for sharing! \nit's just the 2 notes in the skinning equation that confuse me: As far as I understood, to do skeletal animation one has to update the position of every vertex using the equations you listed on the CPU side, what is the \"actual skinning\" which is implemented in a vertex shader then?\n\nsorry if the question is too primitive, I'm new to 3d animation!\nregards,\n-Mohamed\n","created_at":"2013-06-07T20:34:19.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/3187#issuecomment-19131341","id":19131341,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/3187","node_id":"MDEyOklzc3VlQ29tbWVudDE5MTMxMzQx","updated_at":"2013-06-07T20:34:19.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/19131341","user":{"following_url":"https:\/\/api.github.com\/users\/mohamed--abdel-maksoud\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mohamed--abdel-maksoud\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/1863880?v=4","url":"https:\/\/api.github.com\/users\/mohamed--abdel-maksoud","gists_url":"https:\/\/api.github.com\/users\/mohamed--abdel-maksoud\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mohamed--abdel-maksoud","subscriptions_url":"https:\/\/api.github.com\/users\/mohamed--abdel-maksoud\/subscriptions","node_id":"MDQ6VXNlcjE4NjM4ODA=","repos_url":"https:\/\/api.github.com\/users\/mohamed--abdel-maksoud\/repos","received_events_url":"https:\/\/api.github.com\/users\/mohamed--abdel-maksoud\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mohamed--abdel-maksoud\/starred{\/owner}{\/repo}","site_admin":false,"login":"mohamed--abdel-maksoud","type":"User","id":1863880,"followers_url":"https:\/\/api.github.com\/users\/mohamed--abdel-maksoud\/followers","organizations_url":"https:\/\/api.github.com\/users\/mohamed--abdel-maksoud\/orgs"}},{"index":2,"author_association":"CONTRIBUTOR","body":"The positions of vertices are not updated on the CPU. Three.js implements hardware skinning. I did not implement it myself, but this is what I found:\n- For each frame, the animation system updates the transformations of the skeleton bones (on the CPU).\n- The transformation matrices of all skeleton bones are packed into a single flat array, which is then uploaded into a texture.\n  - The texture is created in [SkinnedMesh.js](https:\/\/github.com\/mrdoob\/three.js\/blob\/master\/src\/objects\/SkinnedMesh.js#L73).\n  - The array is updated in [SkinnedMesh.js](https:\/\/github.com\/mrdoob\/three.js\/blob\/master\/src\/objects\/SkinnedMesh.js#L193)\n  - The texture is used in [WebGLRenderer.js](https:\/\/github.com\/mrdoob\/three.js\/blob\/master\/src\/renderers\/WebGLRenderer.js#L5119)\n  - If the GPU does not support vertex shader textures, the matrices are set using shader uniforms (less ideal, since the number of uniforms is limited?).\n- The vertex shader uses the texture to evaluate the skinning equation on the GPU.\n  - Each vertex contains (in addition to the usual data like vertex position and normal) one 4D vector which stores the indices of up to four bones that affect the vertex, as well as one 4D vector with weights for those bones.\n  - Vertex shader code is in [WebGLShaders.js](https:\/\/github.com\/mrdoob\/three.js\/blob\/master\/src\/renderers\/WebGLShaders.js#L1249).\n","created_at":"2013-06-07T21:52:57.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/3187#issuecomment-19134986","id":19134986,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/3187","node_id":"MDEyOklzc3VlQ29tbWVudDE5MTM0OTg2","updated_at":"2013-06-07T21:52:57.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/19134986","user":{"following_url":"https:\/\/api.github.com\/users\/crobi\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/crobi\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/577871?v=4","url":"https:\/\/api.github.com\/users\/crobi","gists_url":"https:\/\/api.github.com\/users\/crobi\/gists{\/gist_id}","html_url":"https:\/\/github.com\/crobi","subscriptions_url":"https:\/\/api.github.com\/users\/crobi\/subscriptions","node_id":"MDQ6VXNlcjU3Nzg3MQ==","repos_url":"https:\/\/api.github.com\/users\/crobi\/repos","received_events_url":"https:\/\/api.github.com\/users\/crobi\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/crobi\/starred{\/owner}{\/repo}","site_admin":false,"login":"crobi","type":"User","id":577871,"followers_url":"https:\/\/api.github.com\/users\/crobi\/followers","organizations_url":"https:\/\/api.github.com\/users\/crobi\/orgs"}},{"index":3,"author_association":"CONTRIBUTOR","body":"This is an old thread to bump, but I've figured it is better then creating new one. I have this code to mirror skin vertices transformation:\n\n``` javascript\n    var transformedSkinVertex = function (skin, index) {\n        var skinIndices = (new THREE.Vector4 ()).fromAttribute (skin.geometry.getAttribute ('skinIndex'), index);\n        var skinWeights = (new THREE.Vector4 ()).fromAttribute (skin.geometry.getAttribute ('skinWeight'), index);\n        var skinVertex = (new THREE.Vector3 ()).fromAttribute (skin.geometry.getAttribute ('position'), index).applyMatrix4 (skin.bindMatrix);\n        var result = new THREE.Vector3 (), temp = new THREE.Vector3 (), tempMatrix = new THREE.Matrix4 (); properties = ['x', 'y', 'z', 'w'];\n        for (var i = 0; i < 4; i++) {\n            var boneIndex = skinIndices[properties[i]];\n            tempMatrix.multiplyMatrices (skin.skeleton.bones[boneIndex].matrixWorld, skin.skeleton.boneInverses[boneIndex]);\n            result.add (temp.copy (skinVertex).multiplyScalar (skinWeights[properties[i]]).applyMatrix4 (tempMatrix));\n        }\n        return result.applyMatrix4 (skin.bindMatrixInverse);\n    };\n```\n\nThis works perfectly for T pose:\n![screen shot 2015-07-24 at 22 47 04](https:\/\/cloud.githubusercontent.com\/assets\/242577\/8884511\/8377b480-3257-11e5-8245-ce029ad80cb2.png)\n\nBut with arms lowered some parts explode into angel-like shape:\n![screen shot 2015-07-24 at 22 46 10](https:\/\/cloud.githubusercontent.com\/assets\/242577\/8884536\/b1ab7c38-3257-11e5-8a76-d6cc1a8369f9.png)\n\nHere is arms placed slightly differently:\n![screen shot 2015-07-24 at 22 55 46](https:\/\/cloud.githubusercontent.com\/assets\/242577\/8884552\/d384ab2c-3257-11e5-9cbf-0e6ba80d29cb.png)\n\nMy current theory is that this happens when there are > 2 bones. But... why?\n","created_at":"2015-07-24T21:01:44.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/3187#issuecomment-124722624","id":124722624,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/3187","node_id":"MDEyOklzc3VlQ29tbWVudDEyNDcyMjYyNA==","updated_at":"2015-07-24T21:01:44.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/124722624","user":{"following_url":"https:\/\/api.github.com\/users\/makc\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/makc\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/242577?v=4","url":"https:\/\/api.github.com\/users\/makc","gists_url":"https:\/\/api.github.com\/users\/makc\/gists{\/gist_id}","html_url":"https:\/\/github.com\/makc","subscriptions_url":"https:\/\/api.github.com\/users\/makc\/subscriptions","node_id":"MDQ6VXNlcjI0MjU3Nw==","repos_url":"https:\/\/api.github.com\/users\/makc\/repos","received_events_url":"https:\/\/api.github.com\/users\/makc\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/makc\/starred{\/owner}{\/repo}","site_admin":false,"login":"makc","type":"User","id":242577,"followers_url":"https:\/\/api.github.com\/users\/makc\/followers","organizations_url":"https:\/\/api.github.com\/users\/makc\/orgs"}},{"index":4,"author_association":"CONTRIBUTOR","body":"Unless I am misunderstanding the OP... Since the original post date this has been made very straight-forward. The bones are now an `Object3D` so you can simply add a mesh to the bone in a `mesh.skeleton.bones[someindex].add(mesh2)`.\n\nThis is how I add weapon objects to my character mesh in my app.\n","created_at":"2015-07-24T21:18:19.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/3187#issuecomment-124727639","id":124727639,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/3187","node_id":"MDEyOklzc3VlQ29tbWVudDEyNDcyNzYzOQ==","updated_at":"2015-07-24T21:18:19.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/124727639","user":{"following_url":"https:\/\/api.github.com\/users\/titansoftime\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/titansoftime\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/6549763?v=4","url":"https:\/\/api.github.com\/users\/titansoftime","gists_url":"https:\/\/api.github.com\/users\/titansoftime\/gists{\/gist_id}","html_url":"https:\/\/github.com\/titansoftime","subscriptions_url":"https:\/\/api.github.com\/users\/titansoftime\/subscriptions","node_id":"MDQ6VXNlcjY1NDk3NjM=","repos_url":"https:\/\/api.github.com\/users\/titansoftime\/repos","received_events_url":"https:\/\/api.github.com\/users\/titansoftime\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/titansoftime\/starred{\/owner}{\/repo}","site_admin":false,"login":"titansoftime","type":"User","id":6549763,"followers_url":"https:\/\/api.github.com\/users\/titansoftime\/followers","organizations_url":"https:\/\/api.github.com\/users\/titansoftime\/orgs"}},{"index":5,"author_association":"CONTRIBUTOR","body":"true, but I need to know where the vertices are, but since \n\n> your answer seems to be the only comprehensive one out there\n\nmeans I've found it on google, I'm here. perhaps I should echo this to stackoverflow.\n\nedit: [added to stackoverflow](http:\/\/stackoverflow.com\/questions\/31620194\/how-to-calculate-transformed-skin-vertices)\n","created_at":"2015-07-24T21:30:04.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/3187#issuecomment-124731151","id":124731151,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/3187","node_id":"MDEyOklzc3VlQ29tbWVudDEyNDczMTE1MQ==","updated_at":"2015-07-24T21:38:06.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/124731151","user":{"following_url":"https:\/\/api.github.com\/users\/makc\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/makc\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/242577?v=4","url":"https:\/\/api.github.com\/users\/makc","gists_url":"https:\/\/api.github.com\/users\/makc\/gists{\/gist_id}","html_url":"https:\/\/github.com\/makc","subscriptions_url":"https:\/\/api.github.com\/users\/makc\/subscriptions","node_id":"MDQ6VXNlcjI0MjU3Nw==","repos_url":"https:\/\/api.github.com\/users\/makc\/repos","received_events_url":"https:\/\/api.github.com\/users\/makc\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/makc\/starred{\/owner}{\/repo}","site_admin":false,"login":"makc","type":"User","id":242577,"followers_url":"https:\/\/api.github.com\/users\/makc\/followers","organizations_url":"https:\/\/api.github.com\/users\/makc\/orgs"}}]}