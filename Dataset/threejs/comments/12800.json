{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"OWNER","body":"> Alternatively, I'd be glad to add this implementation as `InterleavedBufferAttribute.prototype.clone()`, which currently does not exist.\r\n\r\nI think that'd be a better solution yeah.","created_at":"2017-12-05T08:29:46.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12800#issuecomment-349231832","id":349231832,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12800","node_id":"MDEyOklzc3VlQ29tbWVudDM0OTIzMTgzMg==","updated_at":"2017-12-05T08:29:46.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/349231832","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":1,"author_association":"COLLABORATOR","body":"Ok, done. \ud83d\udc4d","created_at":"2017-12-06T01:03:56.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12800#issuecomment-349494778","id":349494778,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12800","node_id":"MDEyOklzc3VlQ29tbWVudDM0OTQ5NDc3OA==","updated_at":"2017-12-06T01:03:56.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/349494778","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":2,"author_association":"COLLABORATOR","body":"Ok, I've reverted the `.clone()` implementation on InterleavedBufferAttribute and just used a private helper method in GLTFLoader.\r\n\r\n> Besides, it's maybe a good idea to merge InterleavedBuffer with InterleavedBufferAttribute. Properties like dynamic and updateRange should be part of the attribute. Are there any reasons for a separation of InterleavedBuffer and InterleavedBufferAttribute?\r\n\r\nThe separation of InterleavedBuffer and InterleavedBufferAttribute is a bit confusing to me as well... ","created_at":"2017-12-30T01:10:56.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12800#issuecomment-354519237","id":354519237,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12800","node_id":"MDEyOklzc3VlQ29tbWVudDM1NDUxOTIzNw==","updated_at":"2017-12-30T01:10:56.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/354519237","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":3,"author_association":"COLLABORATOR","body":"I think this PR needs a new title, now...","created_at":"2017-12-30T02:39:36.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12800#issuecomment-354523056","id":354523056,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12800","node_id":"MDEyOklzc3VlQ29tbWVudDM1NDUyMzA1Ng==","updated_at":"2017-12-30T02:39:36.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/354523056","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":4,"author_association":"COLLABORATOR","body":">Besides, it's maybe a good idea to merge InterleavedBuffer with InterleavedBufferAttribute. Properties like dynamic and updateRange should be part of the attribute. Are there any reasons for a separation of InterleavedBuffer and InterleavedBufferAttribute?\r\n\r\n\/ping @benaadams for opinion","created_at":"2017-12-30T02:40:05.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12800#issuecomment-354523073","id":354523073,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12800","node_id":"MDEyOklzc3VlQ29tbWVudDM1NDUyMzA3Mw==","updated_at":"2017-12-30T02:40:05.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/354523073","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":5,"author_association":"CONTRIBUTOR","body":"Not sure how the buffer and attribute can be the same thing; else its not interleaved?\r\n\r\nMultiple attributes share the same buffer when interleaved\r\n![](https:\/\/developer.apple.com\/library\/content\/documentation\/3DDrawing\/Conceptual\/OpenGLES_ProgrammingGuide\/Art\/interleaved_vertex_data_2_2x.png)\r\n\r\nSo the attributes are next to each other; so the single (`InterleavedBuffer`) `Float32Array` that's laid out as follows:\r\n\r\nposition0, uv0, normal0; position1, uv1, normal1; position2, uv2, normal2; ... positionM, uvN, normalN  \r\n\r\nAnd you have 3 `InterleavedBufferAttribute`s, `position`,`uv`,`normal` for the attributes `vec3 position`, `vec2 uv`, `vec3 normal`","created_at":"2017-12-30T02:56:05.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12800#issuecomment-354523677","id":354523677,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12800","node_id":"MDEyOklzc3VlQ29tbWVudDM1NDUyMzY3Nw==","updated_at":"2017-12-30T02:56:05.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/354523677","user":{"following_url":"https:\/\/api.github.com\/users\/benaadams\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/benaadams\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/1142958?v=4","url":"https:\/\/api.github.com\/users\/benaadams","gists_url":"https:\/\/api.github.com\/users\/benaadams\/gists{\/gist_id}","html_url":"https:\/\/github.com\/benaadams","subscriptions_url":"https:\/\/api.github.com\/users\/benaadams\/subscriptions","node_id":"MDQ6VXNlcjExNDI5NTg=","repos_url":"https:\/\/api.github.com\/users\/benaadams\/repos","received_events_url":"https:\/\/api.github.com\/users\/benaadams\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/benaadams\/starred{\/owner}{\/repo}","site_admin":false,"login":"benaadams","type":"User","id":1142958,"followers_url":"https:\/\/api.github.com\/users\/benaadams\/followers","organizations_url":"https:\/\/api.github.com\/users\/benaadams\/orgs"}},{"index":6,"author_association":"COLLABORATOR","body":"@benaadams for me the confusing bit is why `InterleavedBuffer` should not simply _be_ a Float32Array, and have stride\/dynamic\/updateRange be handled within the `InterleavedBufferAttribute` class. Or if that's not possible, why the `InterleavedBuffer` can't be passed into a normal `BufferAttribute` instance. The API requirement of creating two unique classes for interleaved attributes isn't quite natural-feeling, but maybe there are reasons I've missed.","created_at":"2017-12-30T03:10:05.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12800#issuecomment-354524192","id":354524192,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12800","node_id":"MDEyOklzc3VlQ29tbWVudDM1NDUyNDE5Mg==","updated_at":"2017-12-30T03:10:40.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/354524192","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":7,"author_association":"COLLABORATOR","body":"> for me the confusing bit is why InterleavedBuffer should not simply be a Float32Array, \r\n\r\nCorrect. The only difference of `BufferAttribute` and `InterleavedBufferAttribute` is the way typed arrays are created. In the case of `BufferAttribute` the internal arrays are independent of each other. When creating `InterleavedBufferAttribute`s one could use this pattern.\r\n```javascript\r\nvar arrayBuffer = new ArrayBuffer( 72 ); \/\/ a generic buffer that holds 72 bytes of data\r\n\r\n\/\/ share the buffer across multiple typed arrays (this makes the vertex information interleaved!)\r\nvar positions = new Float32Array( arrayBuffer );\r\nvar normals = new Float32Array( arrayBuffer );\r\n\r\n\/\/ create attributes without InterleavedBuffer via new THREE.InterleavedBufferAttribute( array, itemSize, stride, offset, normalized );\r\nvar interleavedPositionAttribute = new THREE.InterleavedBufferAttribute( positions, 3, 6, 0, false );\r\nvar interleavedNormalAttribute = new THREE.InterleavedBufferAttribute( normals, 3, 6, 3, false );\r\n\r\n\/\/ fill in some data with e.g. interleavedPositionAttribute.setXYZ();\r\n```\r\nWe can't use `BufferAttribute` because we need to specify the `stride` and `offset` value for each interleaved attribute. In this case:\r\n\r\n- `stride`: A single unit of vertex information (position + normal vector): 6 floats (24 bytes)\r\n- `offset`: The offset inside this unit of vertex information that marks the start of each attribute. In the case of the `normal` attribute: 3 floats (12 bytes)\r\n\r\nSo i think we do not necessarily need `InterleavedBuffer`. `InterleavedBufferAttribute`  could hold `array` and `stride` as new properties and also the other stuff of `InterleavedBuffer` (things like `dynamic` or `updateRange`). ","created_at":"2017-12-30T14:59:41.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12800#issuecomment-354550459","id":354550459,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12800","node_id":"MDEyOklzc3VlQ29tbWVudDM1NDU1MDQ1OQ==","updated_at":"2017-12-30T15:08:30.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/354550459","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":8,"author_association":"COLLABORATOR","body":"Do you understand that interleaved attribute data can contain a mixture of types? For example:\r\n\r\n```javascript\r\nvar geometry = new THREE.BufferGeometry();\r\n\r\nvar stride32 = 7; \/\/ x\/y\/z + nx\/ny\/nz + color = 7 4-byte floats\r\nvar stride8 = 28; \/\/ x\/y\/z + nx\/ny\/nz + color = 28 1-byte uints\r\n\r\nvar float32Array = new Float32Array( numTriangles * 3 * stride32 );\r\nvar uint8Array = new Uint8Array( float32Array.buffer ); \/\/ same buffer, interpreted differently\r\n\r\n\/\/ populate data ...\r\n\r\nvar ib32 = new THREE.InterleavedBuffer( float32Array, stride32 );\r\nvar ib8 = new THREE.InterleavedBuffer( uint8Array, stride8 );\r\n\r\ngeometry.addAttribute( 'position', new THREE.InterleavedBufferAttribute( ib32, 3, 0, false ) );\r\ngeometry.addAttribute( 'normal', new THREE.InterleavedBufferAttribute( ib32, 3, 3, false ) );\r\ngeometry.addAttribute( 'color', new THREE.InterleavedBufferAttribute( ib8, 3, 24, true ) );\r\n```\r\n","created_at":"2017-12-30T17:15:06.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12800#issuecomment-354557136","id":354557136,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12800","node_id":"MDEyOklzc3VlQ29tbWVudDM1NDU1NzEzNg==","updated_at":"2017-12-30T17:15:06.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/354557136","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":9,"author_association":"COLLABORATOR","body":"Sure, but conceptually I think of the typed arrays as _having_ a shared interleaved (array)buffer, not being encapsulated by an interleaved buffer. So where we have this structure:\r\n\r\n`InterleavedBufferAttribute` > `InterleavedBuffer` > `TypedArray` > `ArrayBuffer`\r\n\r\nWhy not have this:\r\n\r\n`InterleavedBufferAttribute` > `TypedArray` > `ArrayBuffer`\r\n\r\nThis matches a normal `BufferAttribute` more closely, and the example code becomes:\r\n\r\n```js\r\nvar geometry = new THREE.BufferGeometry();\r\n\r\nvar stride32 = 7; \/\/ x\/y\/z + nx\/ny\/nz + color = 7 4-byte floats\r\nvar stride8 = 28; \/\/ x\/y\/z + nx\/ny\/nz + color = 28 1-byte uints\r\n\r\nvar float32Array = new Float32Array( numTriangles * 3 * stride32 );\r\nvar uint8Array = new Uint8Array( float32Array.buffer ); \/\/ same buffer, interpreted differently\r\n\r\n\/\/ populate data ...\r\n\r\ngeometry.addAttribute( 'position', new THREE.InterleavedBufferAttribute( float32Array, stride32, 3, 0, false ) );\r\ngeometry.addAttribute( 'normal', new THREE.InterleavedBufferAttribute( float32Array, stride32, 3, 3, false ) );\r\ngeometry.addAttribute( 'color', new THREE.InterleavedBufferAttribute( uint8Array, stride8, 3, 24, true ) );\r\n```\r\n\r\nThe constructor arguments are different from `BufferAttribute` of course, but that's already the case today.","created_at":"2017-12-30T18:30:43.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12800#issuecomment-354561249","id":354561249,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12800","node_id":"MDEyOklzc3VlQ29tbWVudDM1NDU2MTI0OQ==","updated_at":"2017-12-30T18:30:43.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/354561249","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":10,"author_association":"COLLABORATOR","body":"If we would remove `InterleavedBuffer`, i think we have to ensure that the renderer creates only a single buffer via `gl.createBuffer()` for all `InterleavedBufferAttribute`s that previously belonged to an `InterleavedBuffer`. This will cause some refactoring, especially in `WebGLAttributes`.","created_at":"2017-12-30T19:12:33.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12800#issuecomment-354563167","id":354563167,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12800","node_id":"MDEyOklzc3VlQ29tbWVudDM1NDU2MzE2Nw==","updated_at":"2017-12-30T19:28:02.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/354563167","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":11,"author_association":"COLLABORATOR","body":"When i think about it, it should be also possible to have a single buffer created via `gl.createBuffer()` for all interleaved attributes of a geometry. Maybe we should try this out :grin: ","created_at":"2017-12-30T19:36:25.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12800#issuecomment-354564256","id":354564256,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12800","node_id":"MDEyOklzc3VlQ29tbWVudDM1NDU2NDI1Ng==","updated_at":"2017-12-30T19:36:54.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/354564256","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":12,"author_association":"CONTRIBUTOR","body":"Another [scenario](http:\/\/codeflow.org\/entries\/2012\/aug\/05\/webgl-rendering-of-solid-trails\/); its not just distinct attributes that are interleaved; it can be the same attribute.\r\n\r\n![image](https:\/\/user-images.githubusercontent.com\/1142958\/34456955-84a5d51a-ed9b-11e7-95ef-2032903fee77.png)\r\n\r\n\r\n```js\r\nvar geometry = new THREE.BufferGeometry();\r\n\r\nvar stride = 3; \/\/ x\/y\/z 4-byte floats\r\nvar float32Array = new Float32Array( (numPoints + 4) * 3);\r\n\r\n\/\/ populate position data ...\r\n\r\nvar ib = new THREE.InterleavedBuffer( float32Array, stride );\r\n\r\n\/\/ Same position data, different offsets\r\ngeometry.addAttribute( 'last', new THREE.InterleavedBufferAttribute( ib, 3, 0, false ) );\r\ngeometry.addAttribute( 'current', new THREE.InterleavedBufferAttribute( ib, 3, 2 * stride, false ) );\r\ngeometry.addAttribute( 'next', new THREE.InterleavedBufferAttribute( ib, 3, 4 * stride, false ) );\r\n\r\nvar mesh = new THREE.Mesh( geometry, material );\r\nmesh.drawMode = THREE.TriangleStripDrawMode;\r\n```\r\n\r\nYou want to call `gl.createBuffer()` a single time for all attributes; but also `gl.buffer{Sub}Data(...)` a single time for all attributes.\r\n\r\nRemoving `InterleavedBuffer` will mean its extra info; which is still needed, will need to be pushed on to the next shared location; mutating the `ArrayBuffer` instance and adding extra properties to it like `buffer` etc; and mutating the primitive types with extra properties isn't great (and can't be detected with `instanceof`).\r\n\r\nAs for items like `updateRange`; that could be a pass through item; so its available on the `InterleavedBufferAttribute`; but when you change it it updates the `InterleavedBuffer` multiplying by stride and adding offset etc\r\n\r\nOr you'd need an aside dict of buffers types with dirty flags keyed on the attribute; but the extra lookup wouldn't be good for perf.","created_at":"2017-12-30T20:13:57.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12800#issuecomment-354565952","id":354565952,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12800","node_id":"MDEyOklzc3VlQ29tbWVudDM1NDU2NTk1Mg==","updated_at":"2017-12-30T20:24:18.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/354565952","user":{"following_url":"https:\/\/api.github.com\/users\/benaadams\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/benaadams\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/1142958?v=4","url":"https:\/\/api.github.com\/users\/benaadams","gists_url":"https:\/\/api.github.com\/users\/benaadams\/gists{\/gist_id}","html_url":"https:\/\/github.com\/benaadams","subscriptions_url":"https:\/\/api.github.com\/users\/benaadams\/subscriptions","node_id":"MDQ6VXNlcjExNDI5NTg=","repos_url":"https:\/\/api.github.com\/users\/benaadams\/repos","received_events_url":"https:\/\/api.github.com\/users\/benaadams\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/benaadams\/starred{\/owner}{\/repo}","site_admin":false,"login":"benaadams","type":"User","id":1142958,"followers_url":"https:\/\/api.github.com\/users\/benaadams\/followers","organizations_url":"https:\/\/api.github.com\/users\/benaadams\/orgs"}},{"index":13,"author_association":"COLLABORATOR","body":"Um, I see what you mean. `InterleavedBuffer` definitely has a purpose :innocent:.\r\n\r\n@benaadams Can you make a suggestions on how to support interleaved attributes in `BufferGeometry .clone()`? I've posted some code [here](https:\/\/github.com\/mrdoob\/three.js\/pull\/12800#discussion_r159099222) but it does not handle `InterleavedBuffer` correctly. It seems that the detection of shared resources (things like `InterleavedBuffer` or `ArrayBuffer`) and the respective clone is not trivial to implement.","created_at":"2017-12-31T10:28:34.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12800#issuecomment-354596503","id":354596503,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12800","node_id":"MDEyOklzc3VlQ29tbWVudDM1NDU5NjUwMw==","updated_at":"2018-12-08T11:32:29.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/354596503","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":14,"author_association":"COLLABORATOR","body":"> Removing InterleavedBuffer will mean its extra info; which is still needed, will need to be pushed on to the next shared location; mutating the ArrayBuffer instance and adding extra properties to it like buffer etc...\r\n\r\nOk, yes this makes sense and I agree that mutating the primitive array should be avoided.\r\n\r\nIf the InterleavedBuffer's UUID is used to avoid calling `createBuffer()` multiple times, is the example @WestLangley posted earlier (https:\/\/github.com\/mrdoob\/three.js\/pull\/12800#issuecomment-354557136), using two InterleavedBuffer instances around the same ArrayBuffer instance, correct?\r\n\r\n```js\r\nvar geometry = new THREE.BufferGeometry();\r\n\r\nvar stride32 = 7; \/\/ x\/y\/z + nx\/ny\/nz + color = 7 4-byte floats\r\nvar stride8 = 28; \/\/ x\/y\/z + nx\/ny\/nz + color = 28 1-byte uints\r\n\r\nvar float32Array = new Float32Array( numTriangles * 3 * stride32 );\r\nvar uint8Array = new Uint8Array( float32Array.buffer ); \/\/ same buffer, interpreted differently\r\n\r\n\/\/ populate data ...\r\n\r\nvar ib32 = new THREE.InterleavedBuffer( float32Array, stride32 );\r\nvar ib8 = new THREE.InterleavedBuffer( uint8Array, stride8 );\r\n\r\ngeometry.addAttribute( 'position', new THREE.InterleavedBufferAttribute( ib32, 3, 0, false ) );\r\ngeometry.addAttribute( 'normal', new THREE.InterleavedBufferAttribute( ib32, 3, 3, false ) );\r\ngeometry.addAttribute( 'color', new THREE.InterleavedBufferAttribute( ib8, 3, 24, true ) );\r\n```\r\n\r\nOr does this result in multiple `createBuffer` calls? ","created_at":"2018-01-07T01:48:04.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12800#issuecomment-355792670","id":355792670,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12800","node_id":"MDEyOklzc3VlQ29tbWVudDM1NTc5MjY3MA==","updated_at":"2018-01-07T01:48:04.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/355792670","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":15,"author_association":"COLLABORATOR","body":"Aside, I think the PR itself is OK to merge at this point and orthogonal to discussion above. ","created_at":"2018-01-07T01:50:05.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12800#issuecomment-355792745","id":355792745,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12800","node_id":"MDEyOklzc3VlQ29tbWVudDM1NTc5Mjc0NQ==","updated_at":"2018-01-07T01:50:05.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/355792745","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}},{"index":16,"author_association":"OWNER","body":"Thanks!","created_at":"2018-01-08T23:32:23.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/12800#issuecomment-356130424","id":356130424,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12800","node_id":"MDEyOklzc3VlQ29tbWVudDM1NjEzMDQyNA==","updated_at":"2018-01-08T23:32:23.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/356130424","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}}]}