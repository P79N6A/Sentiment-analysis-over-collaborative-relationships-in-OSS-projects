{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"COLLABORATOR","body":">In case of utmost urgency, this functionality can be achieved today by doing\r\n\r\nIt could also be achieved today if @WestLangley's PR #14239 was merged. ","created_at":"2018-06-15T08:45:27.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14291#issuecomment-397555462","id":397555462,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14291","node_id":"MDEyOklzc3VlQ29tbWVudDM5NzU1NTQ2Mg==","updated_at":"2018-06-15T08:45:27.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/397555462","user":{"following_url":"https:\/\/api.github.com\/users\/looeee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/looeee\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/5307958?v=4","url":"https:\/\/api.github.com\/users\/looeee","gists_url":"https:\/\/api.github.com\/users\/looeee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/looeee","subscriptions_url":"https:\/\/api.github.com\/users\/looeee\/subscriptions","node_id":"MDQ6VXNlcjUzMDc5NTg=","repos_url":"https:\/\/api.github.com\/users\/looeee\/repos","received_events_url":"https:\/\/api.github.com\/users\/looeee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/looeee\/starred{\/owner}{\/repo}","site_admin":false,"login":"looeee","type":"User","id":5307958,"followers_url":"https:\/\/api.github.com\/users\/looeee\/followers","organizations_url":"https:\/\/api.github.com\/users\/looeee\/orgs"}},{"index":1,"author_association":"COLLABORATOR","body":"Can you provide some more justification as to why you think this makes more sense on the Texture rather than the Material?","created_at":"2018-06-15T08:48:55.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14291#issuecomment-397556351","id":397556351,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14291","node_id":"MDEyOklzc3VlQ29tbWVudDM5NzU1NjM1MQ==","updated_at":"2018-06-15T08:48:55.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/397556351","user":{"following_url":"https:\/\/api.github.com\/users\/looeee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/looeee\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/5307958?v=4","url":"https:\/\/api.github.com\/users\/looeee","gists_url":"https:\/\/api.github.com\/users\/looeee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/looeee","subscriptions_url":"https:\/\/api.github.com\/users\/looeee\/subscriptions","node_id":"MDQ6VXNlcjUzMDc5NTg=","repos_url":"https:\/\/api.github.com\/users\/looeee\/repos","received_events_url":"https:\/\/api.github.com\/users\/looeee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/looeee\/starred{\/owner}{\/repo}","site_admin":false,"login":"looeee","type":"User","id":5307958,"followers_url":"https:\/\/api.github.com\/users\/looeee\/followers","organizations_url":"https:\/\/api.github.com\/users\/looeee\/orgs"}},{"index":2,"author_association":"CONTRIBUTOR","body":">It could also be achieved today if @WestLangley's PR #14239 was merged.\r\n\r\nApologies, i meant to write:\r\n\r\n>In case of utmost urgency, this functionality can be achieved at this very moment, **without merging**, by using `shader patching`.\r\n___\r\n>Can you provide some more justification as to why you think this makes more sense on the Texture rather than the Material?\r\n\r\n- base `Material` class doesn't have to know about an arbitrary property of a sub class. There are 16 materials now, but imagine if there were 116, `Material.js` would just keep growing. `Material` also has to know about a property that belongs to only 3 of the 16 materials.\r\n- `normal - map - space` the construct itself refers to a map, which in three.js is commonly associated with `Texture` (every `${something}Map` is a `Texture` object). This alone could justify having the \"space\" attribute on the `Texture`\r\n- `space` in particular, refers to a property of the `Texture` - it's data. Whatever pixels are in the texture could belong to an albedo map and not be related to normal maps, but if the are, they can be in  one of the two spaces. This is one level detached from `Material`.\r\n- reduces duplicated entries in docs, some poor soul maintaining the docs will find it easier to maintain them\r\n- reduces amount of code added to the library\r\n- reduces amount of files modified \r\n","created_at":"2018-06-15T09:09:58.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14291#issuecomment-397561764","id":397561764,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14291","node_id":"MDEyOklzc3VlQ29tbWVudDM5NzU2MTc2NA==","updated_at":"2018-06-15T09:16:53.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/397561764","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":3,"author_association":"COLLABORATOR","body":"I'm not voting for this approach since properties like `normalScale`, `bumpScale`, `displacementScale` or `displacementBias` are also material properties. @WestLangley's PR is way more consistent in that regard. I also think that changing this strategy at the current maturity level of the library is not meaningful.","created_at":"2018-06-15T09:22:18.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14291#issuecomment-397564921","id":397564921,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14291","node_id":"MDEyOklzc3VlQ29tbWVudDM5NzU2NDkyMQ==","updated_at":"2018-06-15T09:22:18.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/397564921","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":4,"author_association":"CONTRIBUTOR","body":">normalScale, bumpScale, displacementScale or displacementBias\r\n\r\nNone of these actually refer to the image data found in the maps though?  Those are all actually some values, this here is just a constant. \r\n\r\n`normalScale` makes sense to be applied to an arbitrary `normal map` that's either in tangent or object space. There really isn't a reason for that property to be on `Texture`. I believe the same applies to the others but i haven't used them. \r\n\r\nPlease consider comparing this property to something like `wrapS` or `magFilter` or best `.format` since this is most similar to \"encoding\". \r\n\r\nIe. the material doesn't need to be told specifically to look at the encoding of some image in a certain way. What should happen if you provide a tangent space normal map but tick the material to display object space normal maps. It seems like a state that no user should ever be able to find themselves in. Such a safety measure shouldn't be limited by the fact that a material can scale some vector that it obtains by looking up some texture. This property happens while that vector is being looked up, its a different stage. ","created_at":"2018-06-15T09:35:00.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14291#issuecomment-397568029","id":397568029,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14291","node_id":"MDEyOklzc3VlQ29tbWVudDM5NzU2ODAyOQ==","updated_at":"2018-06-15T09:39:20.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/397568029","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":5,"author_association":"COLLABORATOR","body":"> There are 16 materials now but imagine if there were 116, Material.js would just keep growing\r\n\r\nThis is not going to happen so it's irrelevant. It's in the nature of class extension that sometimes things will be easier if the super class has properties that only _some_ subclasses use.  This is to be minimised, of course, but it's often the case that it can't be entirely avoided without making the code more complex.\r\n\r\n> normal - map - space the construct itself refers to a map\r\n\r\n> space in particular, refers to a property of the Texture - it's data\r\n\r\nThese are just nomenclature issues \/ semantics, not reasons why the property would be better on Texture. As @Mugen87  points out, doing it this way goes against all the other texture properties on materials. That means that it's inconsistent, which is by far the worst way of doing things in a codebase. \r\n\r\n> Those are all actually some values, this here is just a constant. \r\n\r\nA constant is just a value from a restricted set that's been given a special name to make it memorable. \r\n\r\n> some poor soul maintaining the docs\r\n\r\nOver the last year or two, a lot of that has been done by me. Every so often I suggest that other people help, but for some reason they only want to get involved with \"important\" stuff like nit-picking and blocking other people's PRs \ud83d\ude44 ","created_at":"2018-06-15T09:40:12.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14291#issuecomment-397569376","id":397569376,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14291","node_id":"MDEyOklzc3VlQ29tbWVudDM5NzU2OTM3Ng==","updated_at":"2018-06-15T09:41:56.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/397569376","user":{"following_url":"https:\/\/api.github.com\/users\/looeee\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/looeee\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/5307958?v=4","url":"https:\/\/api.github.com\/users\/looeee","gists_url":"https:\/\/api.github.com\/users\/looeee\/gists{\/gist_id}","html_url":"https:\/\/github.com\/looeee","subscriptions_url":"https:\/\/api.github.com\/users\/looeee\/subscriptions","node_id":"MDQ6VXNlcjUzMDc5NTg=","repos_url":"https:\/\/api.github.com\/users\/looeee\/repos","received_events_url":"https:\/\/api.github.com\/users\/looeee\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/looeee\/starred{\/owner}{\/repo}","site_admin":false,"login":"looeee","type":"User","id":5307958,"followers_url":"https:\/\/api.github.com\/users\/looeee\/followers","organizations_url":"https:\/\/api.github.com\/users\/looeee\/orgs"}},{"index":6,"author_association":"CONTRIBUTOR","body":">\"important\" stuff like nit-picking and blocking other people's PRs\r\n\r\nI didn't mean it like that, i just was referring to the same sentence used twice. Imagine there was a typo, you'd have to fix it in two places. \r\n\r\n>These are just nomenclature issues \/ semantics, not reasons why the property would be better on Texture. As @Mugen87 points out, doing it this way goes against all the other texture properties on materials. That means that it's inconsistent, which is by far the worst way of doing things in a codebase.\r\n\r\nI disagree with this. Changing this property triggers the whole shader to be recompiled into a different shader. Changing the value of `normalScale:Vector2` works with any provided texture without recompiling the shader.  \r\n\r\nhttps:\/\/threejs.org\/docs\/#api\/textures\/Texture\r\n\r\nList of possible properties it's in alignment with and not going against, up for debate:\r\n```\r\nmapping\r\nwrapS\r\nwrapT\r\nmagFilter\r\nminFilter\r\nanisotropy\r\nformat\r\ntype\r\nencoding\r\n\/\/material ever uses only one of these:\r\noffset\r\nrepeat\r\nrotation\r\ncenter\r\n```\r\n\r\noffset,repeat,rotation and center actually don't belong on the `Texture` since three's `Material` will only ever use one of them based on a priority list. If that somehow made it's way onto `Texture` i'd urge you to consider loosening the restrictions around this a little bit. \r\n\r\nJust consider this code:\r\n\r\n```javascript\r\nmyMaterial.normalScale(2,2) \/\/want to enhance texture\r\nmyMaterial.normalMap.repeat.set(2,2) \/\/want to make the texture more dense\r\nmyMaterial.alphaMap.repeat(2,2) \/\/i actually have to call this because the previous line did absolutely nothing\r\n```\r\n\r\nIf i want to scale normals in UV i have to go through `Texture` if i want to scale them in T `Material`, the former also doesn't work if there are other textures present, hence i have to repeat some other map and not the one i actually want to repeat. `normalMap` has a dedicated slot for the scale param, but it arbitrarily uses the repeats from other maps or self. \r\n\r\n```javascipt\r\nvar o = new Texture({ space: 'o' })\r\nvar t = new Texture()\r\n\r\nvar myMaterial = new Material()\r\n\r\nmyMaterial.normalMap = t  \r\n\r\nmyMaterial.normalMap = o \/\/doesn't work\r\nmyMaterial.normalMapType = 'object' \/\/needed to work\r\n\r\nmyMaterial.normalMap = t \/\/ breaks again\r\nmyMaterial.normalMapType = 'tangent' \/\/ above call ALWAYS has to be accompanied by this call\r\n```","created_at":"2018-06-15T09:50:50.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14291#issuecomment-397572059","id":397572059,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14291","node_id":"MDEyOklzc3VlQ29tbWVudDM5NzU3MjA1OQ==","updated_at":"2018-06-16T13:00:08.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/397572059","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":7,"author_association":"OWNER","body":"Opted for merging #14239 instead.","created_at":"2018-06-17T01:20:44.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14291#issuecomment-397848183","id":397848183,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14291","node_id":"MDEyOklzc3VlQ29tbWVudDM5Nzg0ODE4Mw==","updated_at":"2018-06-17T01:20:44.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/397848183","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":8,"author_association":"OWNER","body":"Thanks though!","created_at":"2018-06-17T01:20:51.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/14291#issuecomment-397848188","id":397848188,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14291","node_id":"MDEyOklzc3VlQ29tbWVudDM5Nzg0ODE4OA==","updated_at":"2018-06-17T01:20:51.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/397848188","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}}]}