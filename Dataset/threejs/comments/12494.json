{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"COLLABORATOR","body":"Thanks for reporting.\r\n\r\nThis isn't a glTF specific but a generic `SkinnedMesh` issue. `SkinnedMesh.clone()` doesn't clone `Skeleton`, and expects `Skeleton` and `Skeleton.bones` are initialized in its constructor with `geometry.bones`.\r\n\r\nSo it doesn't correctly clone if `Skeleton` and `Skeleton.bones` are initialized out of `SkinnedMesh` constructor without `geometry.bones`. It should be fixed.\r\n","created_at":"2017-10-25T12:10:46.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12494#issuecomment-339309181","id":339309181,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12494","node_id":"MDEyOklzc3VlQ29tbWVudDMzOTMwOTE4MQ==","updated_at":"2017-10-25T12:11:27.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/339309181","user":{"following_url":"https:\/\/api.github.com\/users\/takahirox\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/takahirox\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/7637832?v=4","url":"https:\/\/api.github.com\/users\/takahirox","gists_url":"https:\/\/api.github.com\/users\/takahirox\/gists{\/gist_id}","html_url":"https:\/\/github.com\/takahirox","subscriptions_url":"https:\/\/api.github.com\/users\/takahirox\/subscriptions","node_id":"MDQ6VXNlcjc2Mzc4MzI=","repos_url":"https:\/\/api.github.com\/users\/takahirox\/repos","received_events_url":"https:\/\/api.github.com\/users\/takahirox\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/takahirox\/starred{\/owner}{\/repo}","site_admin":false,"login":"takahirox","type":"User","id":7637832,"followers_url":"https:\/\/api.github.com\/users\/takahirox\/followers","organizations_url":"https:\/\/api.github.com\/users\/takahirox\/orgs"}},{"index":1,"author_association":"NONE","body":"Hi, guys,\r\nthe `Skeleton.bones` sometimes isn't a normal tree structure. Some array elements of `Skeleton.bones` might be children of other array element so `Object3D.clone()` can not deep copy the structure correctly. I wrote a method to deep copy `Skeleton`. Hope it would help for others with same problem. Thanks.\r\n\r\n```javascript\r\nconst cloneSkeleton = (skeleton) => {\r\n  \/\/ clone all bones\r\n  let boneMap = {}\r\n  skeleton.bones.forEach(bone => {\r\n    bone.traverse(subBone => {\r\n      if (Object.keys(boneMap).findIndex(key => { return key === subBone.uuid }) === -1) {\r\n        boneMap[subBone.uuid] = {\r\n          cloned: subBone.clone(false),\r\n          parent: subBone.parent\r\n        }\r\n      }\r\n    })\r\n  })\r\n  \/\/ restructure cloned bones\r\n  Object.keys(boneMap).forEach(key => {\r\n    let info = boneMap[key]\r\n    \/\/ get the real parent of cloned bone\r\n    let parentInfo = info.parent ? boneMap[info.parent.uuid] : null\r\n    \/\/ if real cloned parent found, add this bone to it\r\n    if (parentInfo) { parentInfo.cloned.add(info.cloned) }\r\n    else {\r\n      \/\/ it's a root bone, clone\/create it and add this bone to it\r\n      let root = info.parent ? info.parent.clone(false) : new Object3D()\r\n      root.name = 'RootBone'\r\n      root.add(info.cloned)\r\n    }\r\n  })\r\n  \/\/ create bones for cloned skeleton\r\n  let bones = skeleton.bones.map(bone => { return boneMap[bone.uuid].cloned })\r\n  return new Skeleton(bones, skeleton.boneInverses)\r\n}\r\n```","created_at":"2017-10-26T07:16:25.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12494#issuecomment-339574250","id":339574250,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12494","node_id":"MDEyOklzc3VlQ29tbWVudDMzOTU3NDI1MA==","updated_at":"2017-10-26T07:16:25.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/339574250","user":{"following_url":"https:\/\/api.github.com\/users\/marlinilram\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/marlinilram\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/7394919?v=4","url":"https:\/\/api.github.com\/users\/marlinilram","gists_url":"https:\/\/api.github.com\/users\/marlinilram\/gists{\/gist_id}","html_url":"https:\/\/github.com\/marlinilram","subscriptions_url":"https:\/\/api.github.com\/users\/marlinilram\/subscriptions","node_id":"MDQ6VXNlcjczOTQ5MTk=","repos_url":"https:\/\/api.github.com\/users\/marlinilram\/repos","received_events_url":"https:\/\/api.github.com\/users\/marlinilram\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/marlinilram\/starred{\/owner}{\/repo}","site_admin":false,"login":"marlinilram","type":"User","id":7394919,"followers_url":"https:\/\/api.github.com\/users\/marlinilram\/followers","organizations_url":"https:\/\/api.github.com\/users\/marlinilram\/orgs"}},{"index":2,"author_association":"COLLABORATOR","body":"Closing this, we can track the issue in #11573 and #11574.","created_at":"2017-11-17T22:41:48.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12494#issuecomment-345385580","id":345385580,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12494","node_id":"MDEyOklzc3VlQ29tbWVudDM0NTM4NTU4MA==","updated_at":"2017-11-17T22:41:48.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/345385580","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}}]}