{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"CONTRIBUTOR","body":"I believe that updating the object ID after calling the constructor is not enough (or is it?):\r\n```\r\nclass HelpersContour extends Object3D {\r\n  constructor(stack, geometry, texture) {\r\n    \/\/\r\n    super();\r\n    this.id = 'mynew' + this.id;\r\n    \/\/ should I loop though all children and update IDs in the same way?\r\n```","created_at":"2018-06-04T12:54:18.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14217#issuecomment-394344263","id":394344263,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14217","node_id":"MDEyOklzc3VlQ29tbWVudDM5NDM0NDI2Mw==","updated_at":"2018-06-04T12:54:18.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/394344263","user":{"following_url":"https:\/\/api.github.com\/users\/NicolasRannou\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/NicolasRannou\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/214063?v=4","url":"https:\/\/api.github.com\/users\/NicolasRannou","gists_url":"https:\/\/api.github.com\/users\/NicolasRannou\/gists{\/gist_id}","html_url":"https:\/\/github.com\/NicolasRannou","subscriptions_url":"https:\/\/api.github.com\/users\/NicolasRannou\/subscriptions","node_id":"MDQ6VXNlcjIxNDA2Mw==","repos_url":"https:\/\/api.github.com\/users\/NicolasRannou\/repos","received_events_url":"https:\/\/api.github.com\/users\/NicolasRannou\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/NicolasRannou\/starred{\/owner}{\/repo}","site_admin":false,"login":"NicolasRannou","type":"User","id":214063,"followers_url":"https:\/\/api.github.com\/users\/NicolasRannou\/followers","organizations_url":"https:\/\/api.github.com\/users\/NicolasRannou\/orgs"}},{"index":1,"author_association":"CONTRIBUTOR","body":"We would need to make `id` reconfigurable in such a case.\r\n```\r\nObject.defineProperty( this, 'id', { value: object3DId ++, writable: true } );\r\n```","created_at":"2018-06-04T13:07:15.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14217#issuecomment-394347889","id":394347889,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14217","node_id":"MDEyOklzc3VlQ29tbWVudDM5NDM0Nzg4OQ==","updated_at":"2018-06-04T13:07:15.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/394347889","user":{"following_url":"https:\/\/api.github.com\/users\/NicolasRannou\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/NicolasRannou\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/214063?v=4","url":"https:\/\/api.github.com\/users\/NicolasRannou","gists_url":"https:\/\/api.github.com\/users\/NicolasRannou\/gists{\/gist_id}","html_url":"https:\/\/github.com\/NicolasRannou","subscriptions_url":"https:\/\/api.github.com\/users\/NicolasRannou\/subscriptions","node_id":"MDQ6VXNlcjIxNDA2Mw==","repos_url":"https:\/\/api.github.com\/users\/NicolasRannou\/repos","received_events_url":"https:\/\/api.github.com\/users\/NicolasRannou\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/NicolasRannou\/starred{\/owner}{\/repo}","site_admin":false,"login":"NicolasRannou","type":"User","id":214063,"followers_url":"https:\/\/api.github.com\/users\/NicolasRannou\/followers","organizations_url":"https:\/\/api.github.com\/users\/NicolasRannou\/orgs"}},{"index":2,"author_association":"COLLABORATOR","body":"Set `writable` to `true` seems the easiest way to solve this problem. You can manage a global object ID on app level and overwrite the `.id` property immediately after object creation or a `super()` call.","created_at":"2018-06-04T13:17:16.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14217#issuecomment-394350793","id":394350793,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14217","node_id":"MDEyOklzc3VlQ29tbWVudDM5NDM1MDc5Mw==","updated_at":"2018-06-04T13:17:28.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/394350793","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":3,"author_association":"CONTRIBUTOR","body":"Yes, definitely - I'd be happy to make a PR if it is fine with you.\r\n\r\nWould updating the ID of the object extending `Object3D` be enough for `threejs` to render it nicely of should we also update IDs of all children (if any)?\r\n\r\n```\r\nclass SuperArrow extends ArrowHelper {\r\n  constructor(stack, geometry, texture) {\r\n    \/\/\r\n    super();\r\n    this.id = 'mynew' + this.id;\r\n    \/\/ should I loop though all children and update IDs in the same way?\r\n    \/\/ or not needed?\r\n```\r\nThanks!","created_at":"2018-06-04T13:41:58.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14217#issuecomment-394358791","id":394358791,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14217","node_id":"MDEyOklzc3VlQ29tbWVudDM5NDM1ODc5MQ==","updated_at":"2018-06-04T13:41:58.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/394358791","user":{"following_url":"https:\/\/api.github.com\/users\/NicolasRannou\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/NicolasRannou\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/214063?v=4","url":"https:\/\/api.github.com\/users\/NicolasRannou","gists_url":"https:\/\/api.github.com\/users\/NicolasRannou\/gists{\/gist_id}","html_url":"https:\/\/github.com\/NicolasRannou","subscriptions_url":"https:\/\/api.github.com\/users\/NicolasRannou\/subscriptions","node_id":"MDQ6VXNlcjIxNDA2Mw==","repos_url":"https:\/\/api.github.com\/users\/NicolasRannou\/repos","received_events_url":"https:\/\/api.github.com\/users\/NicolasRannou\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/NicolasRannou\/starred{\/owner}{\/repo}","site_admin":false,"login":"NicolasRannou","type":"User","id":214063,"followers_url":"https:\/\/api.github.com\/users\/NicolasRannou\/followers","organizations_url":"https:\/\/api.github.com\/users\/NicolasRannou\/orgs"}},{"index":4,"author_association":"COLLABORATOR","body":"You have to update all objects. I think it is also necessary to overwrite the ids of geometries, materials and textures if both of your libraries generate these types of objects.\r\n\r\n> I'd be happy to make a PR if it is fine with you.\r\n\r\nLet's see what other developers think if the suggestion.","created_at":"2018-06-04T13:46:15.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14217#issuecomment-394360164","id":394360164,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14217","node_id":"MDEyOklzc3VlQ29tbWVudDM5NDM2MDE2NA==","updated_at":"2018-06-04T14:03:33.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/394360164","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":5,"author_association":"CONTRIBUTOR","body":"Yes - so the suggestion is to make `id` writable in `Object3D`:\r\n```\r\nObject.defineProperty( this, 'id', { value: object3DId ++, writable: true } );\r\n```","created_at":"2018-06-04T13:58:48.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14217#issuecomment-394364288","id":394364288,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14217","node_id":"MDEyOklzc3VlQ29tbWVudDM5NDM2NDI4OA==","updated_at":"2018-06-04T13:58:48.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/394364288","user":{"following_url":"https:\/\/api.github.com\/users\/NicolasRannou\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/NicolasRannou\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/214063?v=4","url":"https:\/\/api.github.com\/users\/NicolasRannou","gists_url":"https:\/\/api.github.com\/users\/NicolasRannou\/gists{\/gist_id}","html_url":"https:\/\/github.com\/NicolasRannou","subscriptions_url":"https:\/\/api.github.com\/users\/NicolasRannou\/subscriptions","node_id":"MDQ6VXNlcjIxNDA2Mw==","repos_url":"https:\/\/api.github.com\/users\/NicolasRannou\/repos","received_events_url":"https:\/\/api.github.com\/users\/NicolasRannou\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/NicolasRannou\/starred{\/owner}{\/repo}","site_admin":false,"login":"NicolasRannou","type":"User","id":214063,"followers_url":"https:\/\/api.github.com\/users\/NicolasRannou\/followers","organizations_url":"https:\/\/api.github.com\/users\/NicolasRannou\/orgs"}},{"index":6,"author_association":"COLLABORATOR","body":"To be consistent, I would also perform this change for `Geometry`, `BufferGeometry`, `Material` and `Texture`.","created_at":"2018-06-04T14:01:43.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14217#issuecomment-394365327","id":394365327,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14217","node_id":"MDEyOklzc3VlQ29tbWVudDM5NDM2NTMyNw==","updated_at":"2018-06-04T14:03:10.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/394365327","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}},{"index":7,"author_association":"CONTRIBUTOR","body":"I think it would be more beneficial to have a form of a generator for this.\r\n\r\nFor example:\r\n\r\n```js\r\n\/\/ Your app.\r\nlet id = 0;\r\n\r\nfunction ThreeIdGenerator() {\r\n    return id++;\r\n}\r\n\r\nTHREE.idGenerator = ThreeIdGenerator;\r\n```\r\n\r\nAnd have something similar in threejs itself to use by default. Since objects aren't (under normal circumstances) created in real-time, there should be very little to no overhead, while letting developers using threejs determine their own ID generation-style.\r\n\r\nThis way, developers don't have to \"hack around\" objects generated by THREE and having a mechanism like this also ensures consistency between the instantiation of different types of objects. Also, if there comes a time where THREE keeps track of object ID's it has created, functionality _will_ break if your app decides to change the numbers _after_ the object was created.\r\n","created_at":"2018-06-04T15:57:16.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14217#issuecomment-394406874","id":394406874,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14217","node_id":"MDEyOklzc3VlQ29tbWVudDM5NDQwNjg3NA==","updated_at":"2018-06-04T16:00:06.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/394406874","user":{"following_url":"https:\/\/api.github.com\/users\/haroldiedema\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/haroldiedema\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/567518?v=4","url":"https:\/\/api.github.com\/users\/haroldiedema","gists_url":"https:\/\/api.github.com\/users\/haroldiedema\/gists{\/gist_id}","html_url":"https:\/\/github.com\/haroldiedema","subscriptions_url":"https:\/\/api.github.com\/users\/haroldiedema\/subscriptions","node_id":"MDQ6VXNlcjU2NzUxOA==","repos_url":"https:\/\/api.github.com\/users\/haroldiedema\/repos","received_events_url":"https:\/\/api.github.com\/users\/haroldiedema\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/haroldiedema\/starred{\/owner}{\/repo}","site_admin":false,"login":"haroldiedema","type":"User","id":567518,"followers_url":"https:\/\/api.github.com\/users\/haroldiedema\/followers","organizations_url":"https:\/\/api.github.com\/users\/haroldiedema\/orgs"}},{"index":8,"author_association":"CONTRIBUTOR","body":"I see what you suggested but unfortunately, it relies on global variables and I'm not sure it would work all the time: for instance, how would you go to update the \"generator\" function without using the global variable `window.THREE`?\r\n\r\n```\r\nimport {Mesh} from 'three';\r\n\r\n\/\/ how do you update the ThreeIdGenerator ?\r\nconst myMesh = new Mesh();\r\n```\r\n\r\nI'm still in favor of having `id`s writable :)\r\n```\r\nimport {Mesh} from 'three';\r\n\r\nconst myMesh = new Mesh();\r\nmyMesh.id = `customId-${myMesh.id}`\r\n```\r\n\r\nI like the idea of providing custom ID generators but I'm not sure that is doable","created_at":"2018-06-04T16:04:37.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14217#issuecomment-394409280","id":394409280,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14217","node_id":"MDEyOklzc3VlQ29tbWVudDM5NDQwOTI4MA==","updated_at":"2018-06-04T16:06:07.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/394409280","user":{"following_url":"https:\/\/api.github.com\/users\/NicolasRannou\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/NicolasRannou\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/214063?v=4","url":"https:\/\/api.github.com\/users\/NicolasRannou","gists_url":"https:\/\/api.github.com\/users\/NicolasRannou\/gists{\/gist_id}","html_url":"https:\/\/github.com\/NicolasRannou","subscriptions_url":"https:\/\/api.github.com\/users\/NicolasRannou\/subscriptions","node_id":"MDQ6VXNlcjIxNDA2Mw==","repos_url":"https:\/\/api.github.com\/users\/NicolasRannou\/repos","received_events_url":"https:\/\/api.github.com\/users\/NicolasRannou\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/NicolasRannou\/starred{\/owner}{\/repo}","site_admin":false,"login":"NicolasRannou","type":"User","id":214063,"followers_url":"https:\/\/api.github.com\/users\/NicolasRannou\/followers","organizations_url":"https:\/\/api.github.com\/users\/NicolasRannou\/orgs"}},{"index":9,"author_association":"CONTRIBUTOR","body":"The way module resolving works in javascript is that every time you import a module, you effectively get back the same \"instance\" of a module.\r\n\r\nSo if THREE has a module called `IdGenerator`, it can use it internally, and you can overwrite it.\r\n\r\nFor example:\r\n\r\n```js\r\nimport {IdGenerator} from 'three';\r\n\r\nlet id = 0;\r\nIdGenerator.generate = function(id) {\r\n    return id++;\r\n}\r\n```\r\n\r\nWhile inside THREE itself, it looks like this:\r\n```js\r\nfunction Mesh ( ) {\r\n    this.id = THREE.IdGenerator.generate();\r\n}\r\n```\r\n","created_at":"2018-06-05T06:58:44.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14217#issuecomment-394602408","id":394602408,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14217","node_id":"MDEyOklzc3VlQ29tbWVudDM5NDYwMjQwOA==","updated_at":"2018-06-05T06:58:49.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/394602408","user":{"following_url":"https:\/\/api.github.com\/users\/haroldiedema\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/haroldiedema\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/567518?v=4","url":"https:\/\/api.github.com\/users\/haroldiedema","gists_url":"https:\/\/api.github.com\/users\/haroldiedema\/gists{\/gist_id}","html_url":"https:\/\/github.com\/haroldiedema","subscriptions_url":"https:\/\/api.github.com\/users\/haroldiedema\/subscriptions","node_id":"MDQ6VXNlcjU2NzUxOA==","repos_url":"https:\/\/api.github.com\/users\/haroldiedema\/repos","received_events_url":"https:\/\/api.github.com\/users\/haroldiedema\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/haroldiedema\/starred{\/owner}{\/repo}","site_admin":false,"login":"haroldiedema","type":"User","id":567518,"followers_url":"https:\/\/api.github.com\/users\/haroldiedema\/followers","organizations_url":"https:\/\/api.github.com\/users\/haroldiedema\/orgs"}},{"index":10,"author_association":"CONTRIBUTOR","body":"a few things.\r\n\r\n1. Having library-wide generator be global, and editable is not a good idea. If you have 2 libraries: A and B that rely on THREE.js and both rewrite that generator - you're not in a good situation.\r\n2. suffixes are a bad idea. Currently, ID follows a standard - UUID spec of IETF, adding anything to that string will basically make it garbage instead of a standardized ID.\r\n\r\nI think your pursuit is misguided in the first place. If 2 libraries make use of three.js - they should make use of the same instance of three.js, this avoids version conflicts, separate caches, gl contexts etc. I also don't consider it to be a good design to include the same library twice, especially if you plan to mix the outputs of those two copies.","created_at":"2018-06-05T07:33:52.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14217#issuecomment-394611101","id":394611101,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14217","node_id":"MDEyOklzc3VlQ29tbWVudDM5NDYxMTEwMQ==","updated_at":"2018-06-05T07:35:15.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/394611101","user":{"following_url":"https:\/\/api.github.com\/users\/Usnul\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Usnul\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/5939063?v=4","url":"https:\/\/api.github.com\/users\/Usnul","gists_url":"https:\/\/api.github.com\/users\/Usnul\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Usnul","subscriptions_url":"https:\/\/api.github.com\/users\/Usnul\/subscriptions","node_id":"MDQ6VXNlcjU5MzkwNjM=","repos_url":"https:\/\/api.github.com\/users\/Usnul\/repos","received_events_url":"https:\/\/api.github.com\/users\/Usnul\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Usnul\/starred{\/owner}{\/repo}","site_admin":false,"login":"Usnul","type":"User","id":5939063,"followers_url":"https:\/\/api.github.com\/users\/Usnul\/followers","organizations_url":"https:\/\/api.github.com\/users\/Usnul\/orgs"}},{"index":11,"author_association":"CONTRIBUTOR","body":"@haroldiedema I like your suggestion if we can make it work (it seems we need different id generators for meshes, materials, etc.)\r\n\r\n@Usnul\r\n> Having library-wide generator be global, and editable is not a good idea. If you have 2 libraries: A and B that rely on THREE.js and both rewrite that generator - you're not in a good situation.\r\n\r\nCan you detail? What if you build extensions for threeJS, say a set of new material for \"cinema\" and a set of helpers for \"video games\". That would be great if people can just import it into their existing app and just use it without worrying about conflict of ids.\r\n\r\n> suffixes are a bad idea. Currently, ID follows a standard - UUID spec of IETF, adding anything to that string will basically make it garbage instead of a standardized ID.\r\n\r\nThere are 2 things there, `uuid` and `id`. I am proposing to extend the `id`.\r\n\r\nI understand what you say about caching, gl context, etc.. I agree, we should only use 1 version of threeJS for all the rendering part but would be nice to be able to pick meshes\/materials\/geometries from different places seamlessly.\r\n\r\nDevelopers have to make sure versions are compatible of course.","created_at":"2018-06-05T07:46:48.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14217#issuecomment-394614506","id":394614506,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14217","node_id":"MDEyOklzc3VlQ29tbWVudDM5NDYxNDUwNg==","updated_at":"2018-06-05T07:46:59.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/394614506","user":{"following_url":"https:\/\/api.github.com\/users\/NicolasRannou\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/NicolasRannou\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/214063?v=4","url":"https:\/\/api.github.com\/users\/NicolasRannou","gists_url":"https:\/\/api.github.com\/users\/NicolasRannou\/gists{\/gist_id}","html_url":"https:\/\/github.com\/NicolasRannou","subscriptions_url":"https:\/\/api.github.com\/users\/NicolasRannou\/subscriptions","node_id":"MDQ6VXNlcjIxNDA2Mw==","repos_url":"https:\/\/api.github.com\/users\/NicolasRannou\/repos","received_events_url":"https:\/\/api.github.com\/users\/NicolasRannou\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/NicolasRannou\/starred{\/owner}{\/repo}","site_admin":false,"login":"NicolasRannou","type":"User","id":214063,"followers_url":"https:\/\/api.github.com\/users\/NicolasRannou\/followers","organizations_url":"https:\/\/api.github.com\/users\/NicolasRannou\/orgs"}},{"index":12,"author_association":"CONTRIBUTOR","body":"> Can you detail? What if you build extensions for threeJS, say a set of new material for \"cinema\" and a set of helpers for \"video games\". That would be great if people can just import it into their existing app and just use it without worrying about conflict of ids.\r\n\r\nSure, lets say you have a global namespace THREE, now if your App A sets a property value THREE.generator to X and your app B sets a property value for the same property to Y - only one of those will actually stick. This is more about the case where you do, in fact, have only 1 instance of the library.\r\n\r\n> There are 2 things there, `uuid` and `id`. I am proposing to extend the `id`.\r\n\r\nOkay, sorry, I made a pre-emptive conclusion. There are some other considerations though, if ID is an integer - it maps very well to an array index, if it's a string, however, your arrays becomes a glorified map with a lot of properties which are not actually indices - this leads to degraded performance for one, and makes any attempts at index-based iteration over that array fruitless, including built-in methods such as `.forEach`, .`map`, `.filter` etc.","created_at":"2018-06-05T08:26:18.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14217#issuecomment-394625454","id":394625454,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14217","node_id":"MDEyOklzc3VlQ29tbWVudDM5NDYyNTQ1NA==","updated_at":"2018-06-05T08:29:42.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/394625454","user":{"following_url":"https:\/\/api.github.com\/users\/Usnul\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Usnul\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/5939063?v=4","url":"https:\/\/api.github.com\/users\/Usnul","gists_url":"https:\/\/api.github.com\/users\/Usnul\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Usnul","subscriptions_url":"https:\/\/api.github.com\/users\/Usnul\/subscriptions","node_id":"MDQ6VXNlcjU5MzkwNjM=","repos_url":"https:\/\/api.github.com\/users\/Usnul\/repos","received_events_url":"https:\/\/api.github.com\/users\/Usnul\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Usnul\/starred{\/owner}{\/repo}","site_admin":false,"login":"Usnul","type":"User","id":5939063,"followers_url":"https:\/\/api.github.com\/users\/Usnul\/followers","organizations_url":"https:\/\/api.github.com\/users\/Usnul\/orgs"}},{"index":13,"author_association":"CONTRIBUTOR","body":"> Sure, lets say you have a global namespace THREE, now if your App A sets a property value THREE.generator to X and your app B sets a property value for the same property to Y - only one of those will actually stick.\r\n\r\nNow I think about it, I think you have bigger problems if there are actually multiple instances of THREE loaded in your app. If you manage to let both libraries use the same instance, then your problems will also be gone. I would suggest trying this instead of \"hacking\" around the ID generation.\r\n","created_at":"2018-06-05T08:38:49.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14217#issuecomment-394629034","id":394629034,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14217","node_id":"MDEyOklzc3VlQ29tbWVudDM5NDYyOTAzNA==","updated_at":"2018-06-05T08:38:49.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/394629034","user":{"following_url":"https:\/\/api.github.com\/users\/haroldiedema\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/haroldiedema\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/567518?v=4","url":"https:\/\/api.github.com\/users\/haroldiedema","gists_url":"https:\/\/api.github.com\/users\/haroldiedema\/gists{\/gist_id}","html_url":"https:\/\/github.com\/haroldiedema","subscriptions_url":"https:\/\/api.github.com\/users\/haroldiedema\/subscriptions","node_id":"MDQ6VXNlcjU2NzUxOA==","repos_url":"https:\/\/api.github.com\/users\/haroldiedema\/repos","received_events_url":"https:\/\/api.github.com\/users\/haroldiedema\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/haroldiedema\/starred{\/owner}{\/repo}","site_admin":false,"login":"haroldiedema","type":"User","id":567518,"followers_url":"https:\/\/api.github.com\/users\/haroldiedema\/followers","organizations_url":"https:\/\/api.github.com\/users\/haroldiedema\/orgs"}},{"index":14,"author_association":"CONTRIBUTOR","body":"@haroldiedema \r\nYeah, that would be my suggestion too.\r\n\r\nMake those libraries accept three.js instance as an input in the initialization code (e.g. constructor) or just the relevant parts.","created_at":"2018-06-05T09:41:42.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14217#issuecomment-394647854","id":394647854,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14217","node_id":"MDEyOklzc3VlQ29tbWVudDM5NDY0Nzg1NA==","updated_at":"2018-06-05T09:41:42.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/394647854","user":{"following_url":"https:\/\/api.github.com\/users\/Usnul\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Usnul\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/5939063?v=4","url":"https:\/\/api.github.com\/users\/Usnul","gists_url":"https:\/\/api.github.com\/users\/Usnul\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Usnul","subscriptions_url":"https:\/\/api.github.com\/users\/Usnul\/subscriptions","node_id":"MDQ6VXNlcjU5MzkwNjM=","repos_url":"https:\/\/api.github.com\/users\/Usnul\/repos","received_events_url":"https:\/\/api.github.com\/users\/Usnul\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Usnul\/starred{\/owner}{\/repo}","site_admin":false,"login":"Usnul","type":"User","id":5939063,"followers_url":"https:\/\/api.github.com\/users\/Usnul\/followers","organizations_url":"https:\/\/api.github.com\/users\/Usnul\/orgs"}},{"index":15,"author_association":"CONTRIBUTOR","body":"@Usnul @haroldiedema yes your suggestion is good, however how would you implement it? I've been toying around but can not find the right way.\r\n```\r\nimport {Mesh} from 'three'\r\n\r\n\/\/ do not extend Mesh\r\nexport class MyMesh {\r\n  constructor (color, mesh=Mesh) {\r\n     \/\/ use \"mesh\" to initiate the class\r\n     \/\/ can not use super because my class doesn't extend anything\r\n     \/\/ must use es5 syntax to mimic the \"extend \/ super\" behavior\r\n\r\n     \/\/ option 1\r\n     this = new mesh(\u2026);.\r\n\r\n    \/\/ option 2\r\n    \/\/ use call\/create on \"mesh\" to initialize set prototype?\r\n   }\r\n}\r\n```","created_at":"2018-06-13T11:51:39.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14217#issuecomment-396910535","id":396910535,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14217","node_id":"MDEyOklzc3VlQ29tbWVudDM5NjkxMDUzNQ==","updated_at":"2018-06-13T11:54:05.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/396910535","user":{"following_url":"https:\/\/api.github.com\/users\/NicolasRannou\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/NicolasRannou\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/214063?v=4","url":"https:\/\/api.github.com\/users\/NicolasRannou","gists_url":"https:\/\/api.github.com\/users\/NicolasRannou\/gists{\/gist_id}","html_url":"https:\/\/github.com\/NicolasRannou","subscriptions_url":"https:\/\/api.github.com\/users\/NicolasRannou\/subscriptions","node_id":"MDQ6VXNlcjIxNDA2Mw==","repos_url":"https:\/\/api.github.com\/users\/NicolasRannou\/repos","received_events_url":"https:\/\/api.github.com\/users\/NicolasRannou\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/NicolasRannou\/starred{\/owner}{\/repo}","site_admin":false,"login":"NicolasRannou","type":"User","id":214063,"followers_url":"https:\/\/api.github.com\/users\/NicolasRannou\/followers","organizations_url":"https:\/\/api.github.com\/users\/NicolasRannou\/orgs"}},{"index":16,"author_association":"CONTRIBUTOR","body":"I'm writing this with protest, since - as I said before - you'll have to fix the libraries so they all accept the same instance of THREE.\r\n\r\nBut if you _really_ want to do this, here's how I'd go about it (untested, but you'll get the idea) in just 4 easy steps:\r\n\r\nStep 1: Write a generator inside THREE itself that it can use by default. This could look something like this:\r\n```js\r\nclass ObjectIdGenerator\r\n{\r\n    constructor()\r\n    {\r\n        this.index = 0;\r\n    }\r\n\r\n    \/**\r\n     * @returns {number}\r\n     *\/\r\n    generateId()\r\n    {\r\n        return (++this.index);\r\n    }\r\n}\r\n\r\nTHREE.objectIdGenerator = new ObjectIdGenerator();\r\n```\r\n\r\nStep 2: Inside THREE itself you find the part that generates the ID of an `Object3D` instance.\r\n```js\r\nfunction Object3D() {\r\n    Object.defineProperty( this, 'id', { value: object3DId ++ } );\r\n    \/\/ ...\r\n```\r\nAnd change it to:\r\n```js\r\nfunction Object3D() {\r\n    Object.defineProperty( this, 'id', { value: THREE.objectIdGenerator.generateId() } );\r\n    \/\/ ...\r\n```\r\n\r\nStep 3: Write your own generator that has a `generateId()` method.\r\n```js\r\nclass MyCustomIdGenerator()\r\n{\r\n    constructor(prefix)\r\n    {\r\n        \/\/ Assuming prefix is a number, but could be anything.\r\n        this.id = prefix;\r\n    }\r\n\r\n    generateId()\r\n    {\r\n        return (++this.id);\r\n    }\r\n}\r\n```\r\n\r\nStep 4: Apply your custom generator to all THREE instances.\r\n```js\r\nconst generator = new MyCustomIdGenerator(42);\r\nTHREE.objectIdGenerator = generator;\r\nAnotherTHREE.objectIdGenerator = generator;\r\n```\r\n\r\nNow all created `Object3D` instances will get their ID's from your custom generator.\r\nFor example:\r\n\r\n```js\r\nlet obj1 = new THREE.Object3D();\r\nlet obj2 = new AnotherTHREE.Object3D();\r\n\r\nconsole.log(obj1.id) \/\/ 43;\r\nconsole.log(obj2.id) \/\/ 44;\r\n```\r\n","created_at":"2018-06-13T15:24:20.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14217#issuecomment-396978390","id":396978390,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14217","node_id":"MDEyOklzc3VlQ29tbWVudDM5Njk3ODM5MA==","updated_at":"2018-06-13T15:29:17.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/396978390","user":{"following_url":"https:\/\/api.github.com\/users\/haroldiedema\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/haroldiedema\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/567518?v=4","url":"https:\/\/api.github.com\/users\/haroldiedema","gists_url":"https:\/\/api.github.com\/users\/haroldiedema\/gists{\/gist_id}","html_url":"https:\/\/github.com\/haroldiedema","subscriptions_url":"https:\/\/api.github.com\/users\/haroldiedema\/subscriptions","node_id":"MDQ6VXNlcjU2NzUxOA==","repos_url":"https:\/\/api.github.com\/users\/haroldiedema\/repos","received_events_url":"https:\/\/api.github.com\/users\/haroldiedema\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/haroldiedema\/starred{\/owner}{\/repo}","site_admin":false,"login":"haroldiedema","type":"User","id":567518,"followers_url":"https:\/\/api.github.com\/users\/haroldiedema\/followers","organizations_url":"https:\/\/api.github.com\/users\/haroldiedema\/orgs"}},{"index":17,"author_association":"CONTRIBUTOR","body":"@haroldiedema sorry maybe I was not clear, I do want to fix the external libraries to accept the same instance of THREEJS as you suggested. However that is a bit challenging:\r\n\r\nThat is how I envision it, in the JS application:\r\n```\r\nimport {* as three} from 'three';\r\nimport {customMesh} from 'anotherLibrary';\r\n\r\nconst validThreeJSMesh = new customMesh(three.Mesh);\r\nscene.add(validThreeJSMesh);\r\n```\r\nMain issue is what is `customMesh` gonna look like:\r\n```\r\nclass CustomMesh() {\r\n  constructor(threeRef) {\r\n    \/\/ how do I use threeRef\r\n    \/\/ to make this class become a valid THREEJS Mesh?\r\n  }\r\n}\r\n```","created_at":"2018-06-13T20:13:18.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14217#issuecomment-397070183","id":397070183,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14217","node_id":"MDEyOklzc3VlQ29tbWVudDM5NzA3MDE4Mw==","updated_at":"2018-06-13T20:13:36.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/397070183","user":{"following_url":"https:\/\/api.github.com\/users\/NicolasRannou\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/NicolasRannou\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/214063?v=4","url":"https:\/\/api.github.com\/users\/NicolasRannou","gists_url":"https:\/\/api.github.com\/users\/NicolasRannou\/gists{\/gist_id}","html_url":"https:\/\/github.com\/NicolasRannou","subscriptions_url":"https:\/\/api.github.com\/users\/NicolasRannou\/subscriptions","node_id":"MDQ6VXNlcjIxNDA2Mw==","repos_url":"https:\/\/api.github.com\/users\/NicolasRannou\/repos","received_events_url":"https:\/\/api.github.com\/users\/NicolasRannou\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/NicolasRannou\/starred{\/owner}{\/repo}","site_admin":false,"login":"NicolasRannou","type":"User","id":214063,"followers_url":"https:\/\/api.github.com\/users\/NicolasRannou\/followers","organizations_url":"https:\/\/api.github.com\/users\/NicolasRannou\/orgs"}},{"index":18,"author_association":"OWNER","body":"> @haroldiedema sorry maybe I was not clear, I do want to fix the external libraries to accept the same instance of THREEJS as you suggested. \r\n\r\nWhich are these libraries?","created_at":"2018-06-14T03:46:54.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14217#issuecomment-397161404","id":397161404,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14217","node_id":"MDEyOklzc3VlQ29tbWVudDM5NzE2MTQwNA==","updated_at":"2018-06-14T03:47:06.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/397161404","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":19,"author_association":"CONTRIBUTOR","body":"@mrdoob 'ami' is my current use case. It is a JS library for medical imaging. It can be seen as an extension for `three`.\r\n\r\nFor instance, it provides 'meshes' or 'materials' than people can use in their own applications.\r\n\r\nIt used to rely on the global namespace to create meshes and materials but I want to get rid of that .\r\n\r\nCurrently you can use it as:\r\n```\r\nimport {SpecialMesh} from 'ami';\r\n\r\nconst mesh = new SpecialMesh();\r\nscene.add(mesh);\r\n\r\nconst regularMesh = new THREE.Mesh();\r\nscene.add(regularMesh);\r\n...\r\n```\r\n\r\nIt works well because under the hood, `SpecialMesh` is defined as:\r\n```\r\nclass SpecialMesh extends THREE.Mesh {\r\n}\r\n```\r\n\r\nI want to get rid of global namespace, and the problem I have is that ids of meshes from 'ami' and 'three' can conflict.\r\n\r\nI think the following API makes sense but I do not know which would be the best implementation details or if there is any recommendation for such use cases.\r\n```\r\n\/\/ ideally in the app\r\nimport {SpecialMesh} from 'ami';\r\n\r\nconst mesh = new SpecialMesh(THREE);\r\nscene.add(mesh);\r\n\r\nconst regularMesh = new THREE.Mesh();\r\nscene.add(regularMesh);\r\n\r\n\/\/ ideally in ami\r\nexport SpecialMesh {\r\n  constructor(three) {\r\n    \/\/ do some magics\r\n  }\r\n}\r\n```\r\nMy first idea was to generate custom or random ids somehow so it would never conflict regardless we use or not global namespace.\r\n\r\nConcrete current implementation example:\r\nhttps:\/\/github.com\/FNNDSC\/ami\/blob\/dev\/src\/geometries\/geometries.voxel.js#L8-L20","created_at":"2018-06-14T07:49:20.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14217#issuecomment-397204150","id":397204150,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14217","node_id":"MDEyOklzc3VlQ29tbWVudDM5NzIwNDE1MA==","updated_at":"2018-06-14T07:52:13.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/397204150","user":{"following_url":"https:\/\/api.github.com\/users\/NicolasRannou\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/NicolasRannou\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/214063?v=4","url":"https:\/\/api.github.com\/users\/NicolasRannou","gists_url":"https:\/\/api.github.com\/users\/NicolasRannou\/gists{\/gist_id}","html_url":"https:\/\/github.com\/NicolasRannou","subscriptions_url":"https:\/\/api.github.com\/users\/NicolasRannou\/subscriptions","node_id":"MDQ6VXNlcjIxNDA2Mw==","repos_url":"https:\/\/api.github.com\/users\/NicolasRannou\/repos","received_events_url":"https:\/\/api.github.com\/users\/NicolasRannou\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/NicolasRannou\/starred{\/owner}{\/repo}","site_admin":false,"login":"NicolasRannou","type":"User","id":214063,"followers_url":"https:\/\/api.github.com\/users\/NicolasRannou\/followers","organizations_url":"https:\/\/api.github.com\/users\/NicolasRannou\/orgs"}},{"index":20,"author_association":"CONTRIBUTOR","body":"this makes no sense...\r\n> I want to get rid of global namespace\r\n\r\nwhy can't ami author add three to package.json and then\r\n```\r\nimport * as THREE from 'three';\r\n```\r\nin SpecialMesh.js or whatever?","created_at":"2018-06-14T22:35:35.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14217#issuecomment-397458835","id":397458835,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14217","node_id":"MDEyOklzc3VlQ29tbWVudDM5NzQ1ODgzNQ==","updated_at":"2018-06-14T22:35:35.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/397458835","user":{"following_url":"https:\/\/api.github.com\/users\/makc\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/makc\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/242577?v=4","url":"https:\/\/api.github.com\/users\/makc","gists_url":"https:\/\/api.github.com\/users\/makc\/gists{\/gist_id}","html_url":"https:\/\/github.com\/makc","subscriptions_url":"https:\/\/api.github.com\/users\/makc\/subscriptions","node_id":"MDQ6VXNlcjI0MjU3Nw==","repos_url":"https:\/\/api.github.com\/users\/makc\/repos","received_events_url":"https:\/\/api.github.com\/users\/makc\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/makc\/starred{\/owner}{\/repo}","site_admin":false,"login":"makc","type":"User","id":242577,"followers_url":"https:\/\/api.github.com\/users\/makc\/followers","organizations_url":"https:\/\/api.github.com\/users\/makc\/orgs"}},{"index":21,"author_association":"CONTRIBUTOR","body":"in your example, geometries.voxel.js imports Matrix4, but uses BoxGeometry via global THREE. this is an issue with ami, not three.js","created_at":"2018-06-14T22:37:57.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14217#issuecomment-397459252","id":397459252,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14217","node_id":"MDEyOklzc3VlQ29tbWVudDM5NzQ1OTI1Mg==","updated_at":"2018-06-14T22:37:57.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/397459252","user":{"following_url":"https:\/\/api.github.com\/users\/makc\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/makc\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/242577?v=4","url":"https:\/\/api.github.com\/users\/makc","gists_url":"https:\/\/api.github.com\/users\/makc\/gists{\/gist_id}","html_url":"https:\/\/github.com\/makc","subscriptions_url":"https:\/\/api.github.com\/users\/makc\/subscriptions","node_id":"MDQ6VXNlcjI0MjU3Nw==","repos_url":"https:\/\/api.github.com\/users\/makc\/repos","received_events_url":"https:\/\/api.github.com\/users\/makc\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/makc\/starred{\/owner}{\/repo}","site_admin":false,"login":"makc","type":"User","id":242577,"followers_url":"https:\/\/api.github.com\/users\/makc\/followers","organizations_url":"https:\/\/api.github.com\/users\/makc\/orgs"}},{"index":22,"author_association":"CONTRIBUTOR","body":"> in your example, geometries.voxel.js imports Matrix4, but uses BoxGeometry via global THREE. this is an issue with ami, not three.js\r\n\r\n@makc Yes, that is the whole problem I want to address. It can not use the local`three` from`npm`, because after compilation, `ami` has a reference to its \"own\" `three`. Therefore geometries created by `ami` has their own \"id counter\" and geometries created outside of my library use a different 'id counter'.\r\n\r\nBasically, I'm looking for a mechanism to extend `threejs`, custom ideas was one option, pass a reference to `three` in the object constructor is another (not sure how implement this one).","created_at":"2018-06-15T07:29:09.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14217#issuecomment-397537785","id":397537785,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14217","node_id":"MDEyOklzc3VlQ29tbWVudDM5NzUzNzc4NQ==","updated_at":"2018-06-15T07:29:09.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/397537785","user":{"following_url":"https:\/\/api.github.com\/users\/NicolasRannou\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/NicolasRannou\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/214063?v=4","url":"https:\/\/api.github.com\/users\/NicolasRannou","gists_url":"https:\/\/api.github.com\/users\/NicolasRannou\/gists{\/gist_id}","html_url":"https:\/\/github.com\/NicolasRannou","subscriptions_url":"https:\/\/api.github.com\/users\/NicolasRannou\/subscriptions","node_id":"MDQ6VXNlcjIxNDA2Mw==","repos_url":"https:\/\/api.github.com\/users\/NicolasRannou\/repos","received_events_url":"https:\/\/api.github.com\/users\/NicolasRannou\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/NicolasRannou\/starred{\/owner}{\/repo}","site_admin":false,"login":"NicolasRannou","type":"User","id":214063,"followers_url":"https:\/\/api.github.com\/users\/NicolasRannou\/followers","organizations_url":"https:\/\/api.github.com\/users\/NicolasRannou\/orgs"}},{"index":23,"author_association":"CONTRIBUTOR","body":"I can't believe I'm saying this, but I think the only thing you can do is:\r\n\r\n```js\r\nimport * as THREE from 'three';\r\nwindow.THREE = THREE;\r\n```\r\n\r\n... before loading ami.\r\n\r\n\r\nOr just file a bug report there.","created_at":"2018-06-15T20:41:46.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14217#issuecomment-397736379","id":397736379,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14217","node_id":"MDEyOklzc3VlQ29tbWVudDM5NzczNjM3OQ==","updated_at":"2018-06-15T20:41:46.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/397736379","user":{"following_url":"https:\/\/api.github.com\/users\/haroldiedema\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/haroldiedema\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/567518?v=4","url":"https:\/\/api.github.com\/users\/haroldiedema","gists_url":"https:\/\/api.github.com\/users\/haroldiedema\/gists{\/gist_id}","html_url":"https:\/\/github.com\/haroldiedema","subscriptions_url":"https:\/\/api.github.com\/users\/haroldiedema\/subscriptions","node_id":"MDQ6VXNlcjU2NzUxOA==","repos_url":"https:\/\/api.github.com\/users\/haroldiedema\/repos","received_events_url":"https:\/\/api.github.com\/users\/haroldiedema\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/haroldiedema\/starred{\/owner}{\/repo}","site_admin":false,"login":"haroldiedema","type":"User","id":567518,"followers_url":"https:\/\/api.github.com\/users\/haroldiedema\/followers","organizations_url":"https:\/\/api.github.com\/users\/haroldiedema\/orgs"}},{"index":24,"author_association":"CONTRIBUTOR","body":"FYI - I fixed `ami` to work nicely with different version of `three` using a factory pattern. We can close the issue or keep it open if you think such a feature (prefix id) may be useful at some point.\r\n\r\n```\r\n\/\/\r\nimport * as THREE from 'three';\r\nimport {customHelperFactory} from 'ami';\r\n\r\nconst CustomHelper = customHelperFactory(THREE);\r\nconst helper = new CustomHelper();\r\nscene.add(helper);\r\n```","created_at":"2018-06-26T07:29:59.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14217#issuecomment-400208670","id":400208670,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14217","node_id":"MDEyOklzc3VlQ29tbWVudDQwMDIwODY3MA==","updated_at":"2018-06-26T07:29:59.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/400208670","user":{"following_url":"https:\/\/api.github.com\/users\/NicolasRannou\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/NicolasRannou\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/214063?v=4","url":"https:\/\/api.github.com\/users\/NicolasRannou","gists_url":"https:\/\/api.github.com\/users\/NicolasRannou\/gists{\/gist_id}","html_url":"https:\/\/github.com\/NicolasRannou","subscriptions_url":"https:\/\/api.github.com\/users\/NicolasRannou\/subscriptions","node_id":"MDQ6VXNlcjIxNDA2Mw==","repos_url":"https:\/\/api.github.com\/users\/NicolasRannou\/repos","received_events_url":"https:\/\/api.github.com\/users\/NicolasRannou\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/NicolasRannou\/starred{\/owner}{\/repo}","site_admin":false,"login":"NicolasRannou","type":"User","id":214063,"followers_url":"https:\/\/api.github.com\/users\/NicolasRannou\/followers","organizations_url":"https:\/\/api.github.com\/users\/NicolasRannou\/orgs"}},{"index":25,"author_association":"COLLABORATOR","body":"Closing for now.","created_at":"2018-06-26T08:46:33.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/14217#issuecomment-400230677","id":400230677,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/14217","node_id":"MDEyOklzc3VlQ29tbWVudDQwMDIzMDY3Nw==","updated_at":"2018-06-26T08:46:33.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/400230677","user":{"following_url":"https:\/\/api.github.com\/users\/Mugen87\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Mugen87\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/12612165?v=4","url":"https:\/\/api.github.com\/users\/Mugen87","gists_url":"https:\/\/api.github.com\/users\/Mugen87\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Mugen87","subscriptions_url":"https:\/\/api.github.com\/users\/Mugen87\/subscriptions","node_id":"MDQ6VXNlcjEyNjEyMTY1","repos_url":"https:\/\/api.github.com\/users\/Mugen87\/repos","received_events_url":"https:\/\/api.github.com\/users\/Mugen87\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Mugen87\/starred{\/owner}{\/repo}","site_admin":false,"login":"Mugen87","type":"User","id":12612165,"followers_url":"https:\/\/api.github.com\/users\/Mugen87\/followers","organizations_url":"https:\/\/api.github.com\/users\/Mugen87\/orgs"}}]}