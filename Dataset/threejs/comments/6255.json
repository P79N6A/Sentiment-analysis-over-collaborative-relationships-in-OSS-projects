{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"OWNER","body":"How about naming it `physicalFalloff`?\n","created_at":"2015-04-27T23:45:31.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/6255#issuecomment-96852065","id":96852065,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/6255","node_id":"MDEyOklzc3VlQ29tbWVudDk2ODUyMDY1","updated_at":"2015-04-27T23:45:31.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/96852065","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":1,"author_association":"CONTRIBUTOR","body":"This should be ready to merge in.  I've updated the editor to expose this functionality and it also loads and saves properly.  It should also be perfectly backwards compatible.\n","created_at":"2015-06-09T13:20:52.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/6255#issuecomment-110354905","id":110354905,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/6255","node_id":"MDEyOklzc3VlQ29tbWVudDExMDM1NDkwNQ==","updated_at":"2015-06-09T13:20:52.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/110354905","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":2,"author_association":"COLLABORATOR","body":"How about updating the docs with a _clear_ explanation that, as you said previously, it\n\n> causes the light to have a quadratic falloff in terms of area and it assumes that the intensity of the light is in lumens and the distance is in meters.\n\nWhat would be reasonable `PointLight` intensity values?\n","created_at":"2015-06-09T15:41:26.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/6255#issuecomment-110407283","id":110407283,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/6255","node_id":"MDEyOklzc3VlQ29tbWVudDExMDQwNzI4Mw==","updated_at":"2015-06-09T15:41:26.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/110407283","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":3,"author_association":"CONTRIBUTOR","body":"@WestLangley Good idea.  I'm updated the docs and added example lumen values.\n","created_at":"2015-06-09T16:37:11.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/6255#issuecomment-110425670","id":110425670,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/6255","node_id":"MDEyOklzc3VlQ29tbWVudDExMDQyNTY3MA==","updated_at":"2015-06-09T16:37:11.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/110425670","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":4,"author_association":"COLLABORATOR","body":"Sorry, I still have a problem with this API.\n\nWhat you are saying, is that if `light.physicalFalloff` is `true`, then the `light.decay` parameter is ignored, and the `light.intensity` parameter has different units -- `lumens`, instead of unitless. Also, the user's units of scale is required to be meters, rather than arbitrary, and a typical constructor would be\n\n```\nnew THREE.PointLight( 0xffffff, 1600 );\n```\n\nI think it would be better to create `PhysicalPointLight` and `PhysicalSpotLight`.\n","created_at":"2015-06-09T19:02:35.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/6255#issuecomment-110465598","id":110465598,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/6255","node_id":"MDEyOklzc3VlQ29tbWVudDExMDQ2NTU5OA==","updated_at":"2015-06-09T19:02:35.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/110465598","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":5,"author_association":"CONTRIBUTOR","body":"@WestLangley I had described these caveats to its behavior fully before I implemented this PR and you did seem to approve here: https:\/\/github.com\/mrdoob\/three.js\/issues\/6243\n","created_at":"2015-06-09T19:06:22.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/6255#issuecomment-110466448","id":110466448,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/6255","node_id":"MDEyOklzc3VlQ29tbWVudDExMDQ2NjQ0OA==","updated_at":"2015-06-09T19:06:22.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/110466448","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":6,"author_association":"COLLABORATOR","body":"@bhouston I was agreeing to the feature set, not the implementation. Plus, I have more information, now. I still support your idea of adding physical lighting.\n\nIn fact, we can also get rid of `decay`, which is now replaced by your new approach -- implemented as `PhysicalPointLight` and `PhysicalSpotLight`.\n\nPlus, if you want to add `renderer.units` (https:\/\/github.com\/mrdoob\/three.js\/issues\/6259), the new \"Physical\" classes can accommodate it.\n","created_at":"2015-06-09T19:21:44.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/6255#issuecomment-110473323","id":110473323,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/6255","node_id":"MDEyOklzc3VlQ29tbWVudDExMDQ3MzMyMw==","updated_at":"2015-06-09T19:21:44.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/110473323","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":7,"author_association":"CONTRIBUTOR","body":"@WestLangley In my initial issue #6243 that motivated this PR I described exactly the implementation I was going to use:\n\n> boolean option on each light called 'physicalFalloff', which when enabled causes the light to have a quadratic falloff in terms of area and it assumes that the intensity of the light is in lumens and the distance is in meters.\n\nThis is exactly how it is implemented in this PR.\n\nI'd suggest leaving Decay.  Decay is very useful for controlling light falloffs -- otherwise they are always constant or linear (which ever default we pick.)  Unreal follows the model in this PR -- either physical falloff via a boolean, or an explicit decay parameter while both are responsive to a distance\/range parameter.\n\nhttps:\/\/docs.unrealengine.com\/latest\/INT\/Engine\/Rendering\/LightingAndShadows\/LightTypes\/Point\/index.html\n\nMy recommendation is to follow what Unreal Engine does, it and Unity are the leading game engines with a lot of thought put into them.  This light is completely backwards compatible with what we have.\n","created_at":"2015-06-09T19:41:08.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/6255#issuecomment-110481427","id":110481427,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/6255","node_id":"MDEyOklzc3VlQ29tbWVudDExMDQ4MTQyNw==","updated_at":"2015-06-09T19:41:08.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/110481427","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":8,"author_association":"COLLABORATOR","body":"@bhouston I agree with what you want to do. I just suggested what I believe is a better API.\n","created_at":"2015-06-09T19:49:39.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/6255#issuecomment-110484424","id":110484424,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/6255","node_id":"MDEyOklzc3VlQ29tbWVudDExMDQ4NDQyNA==","updated_at":"2015-06-09T19:49:39.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/110484424","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":9,"author_association":"CONTRIBUTOR","body":"@WestLangley How about to keep moving forward, we accept this PR and we can potentially in the future create new classes to separate things out going forward with new unit classes and Physical\\* classes.  This keeps it simple.  Please. :)\n","created_at":"2015-06-09T19:54:44.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/6255#issuecomment-110485621","id":110485621,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/6255","node_id":"MDEyOklzc3VlQ29tbWVudDExMDQ4NTYyMQ==","updated_at":"2015-06-09T19:54:44.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/110485621","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":10,"author_association":"COLLABORATOR","body":"@bhouston What concerns me the most I explained in https:\/\/github.com\/mrdoob\/three.js\/pull\/6255#issuecomment-110465598. Of course, I will support whatever development path you and @mrdoob want to follow.\n","created_at":"2015-06-09T20:04:09.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/6255#issuecomment-110487596","id":110487596,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/6255","node_id":"MDEyOklzc3VlQ29tbWVudDExMDQ4NzU5Ng==","updated_at":"2015-06-09T20:04:09.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/110487596","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":11,"author_association":"OWNER","body":"> I think it would be better to create `PhysicalPointLight` and `PhysicalSpotLight`.\n\nI agree. And it's also not a big change.\n\n@bhouston just a matter of creating new `PhysicalPointLight` class\/file that extends `PointLight`. I believe the code you have is pretty much the same, it's just a cleaner API.\n\nMaybe we can help with that.\n\n@WestLangley so are you saying that by having `PhysicalPointLight`, `PointLight` will no longer need `decay`?\n","created_at":"2015-06-09T21:54:23.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/6255#issuecomment-110515545","id":110515545,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/6255","node_id":"MDEyOklzc3VlQ29tbWVudDExMDUxNTU0NQ==","updated_at":"2015-06-09T21:55:43.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/110515545","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":12,"author_association":"OWNER","body":"Thinking about it a bit more... makes a lot of sense:\n\n``` javascript\nnew THREE.PointLight( 0xffffff, 1 );\nnew THREE.PhysicalPointLight( 0xffffff, 1600 ); \/\/ decay can then be 2 by default\n```\n","created_at":"2015-06-09T22:04:12.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/6255#issuecomment-110518096","id":110518096,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/6255","node_id":"MDEyOklzc3VlQ29tbWVudDExMDUxODA5Ng==","updated_at":"2015-06-09T22:04:12.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/110518096","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":13,"author_association":"COLLABORATOR","body":"> @WestLangley so are you saying that by having PhysicalPointLight, PointLight will no longer need decay?\n\nYes, I did recommend that. We could revert to the prior model for `PointLight`, where the attenuation is either linear out to a max distance, or, if distance is zero, there is no attenuation at all.\n\nWhatever you and @bhouston want to do is fine with me. I feel more strongly about having a separate \"physical\" class -- at least eventually.\n","created_at":"2015-06-10T03:23:24.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/6255#issuecomment-110572237","id":110572237,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/6255","node_id":"MDEyOklzc3VlQ29tbWVudDExMDU3MjIzNw==","updated_at":"2015-06-10T03:23:24.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/110572237","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":14,"author_association":"CONTRIBUTOR","body":"If this needs to be done I can do it.  I would prefer myself to find an easier way to simplify the constructors rather than creating new classes, but if that is the way we have to go we can go that way.\n\nWhat parts of the code base need to be modified if there was to be separate classes?\n\nI think we need to have these new classes:\n- PhysicalSpotLight (constructor, clone and toJson)\n- PhysicalPointLight (constructor, clone and toJson)\n- Eventually a PhysicalAreaLight, but not yet. (constructor, clone and toJson)\n- Support in exporters for the new light classes. (Object exporter, any others?)\n- Support in importers for the new light classes. (ObjectLoader, others?)\n- Support in WebGL Renderer for the new classes.  (I guess it has to translate it to the existing spot\/point light shader uniforms -- thus the shaders will not change.)\n- Support in other renderers for the new light classes?\n\nThis also means that if you export from any creation tool, and it doesn't export a Physical*Light, but rather a standard Light, you can not easily switch to Physical -- you need to delete the existing light and recreate one.\n\nIt will also be hard to switch between Physical and non-Physical light styles through the editor, you will have to delete a light and then recreate it again.\n\nI know that in a visual editor, like the ThreeJS editor or Clara.io, my preferred interface is to have a boolean called Physical Falloff that I can easily turn on and off -- which is what Blender, and Unreal Engine do.  I know even if we make this change with Physical*Light classes we will likely just keep the Clara.io UI interface as a checkbox as I believe that is what users want.\n\nBTW I also feel that we not introduce a \"units\" class, 3DS Max has it and it is a constant pain and it increases complexity.  Every other non-CAD tool that I know of doesn't have one and it makes it easier (e.g. Blender, Maya, Softimage, Unreal Engine, Unity 3D.)  One just needs to declare there is a unit standard (and I suggest SI units) and if you follow it, interchange is easier.\n","created_at":"2015-06-10T08:24:37.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/6255#issuecomment-110648800","id":110648800,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/6255","node_id":"MDEyOklzc3VlQ29tbWVudDExMDY0ODgwMA==","updated_at":"2015-06-10T08:24:37.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/110648800","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":15,"author_association":"CONTRIBUTOR","body":"Here are other ways of fixing the UI issue without creating new classes.  Just a list of patterns I know.\n\n**Helper function for Physical:**\n\n```\nvar myLight = THREE.SpotLight.newPhysical( myColor, myLumens );\n```\n\n**Use named parameters:**\n\n```\nvar myLight = new THREE.SpotLight( { color: myColor, intensity: myLumens, attenuation: physical } );\n```\n\n**Why not always assume intensity is in lumens and distance in meters:**\n\nWe could have the intensity always be in lumens, which is a primary SI unit.  And distance always considered to be in meters.  I do not think this hurts or changes anything.  Of course if you use a non-physical falloff, intensity and distance don't translate into a physical result but that is just an artistic choice.\n","created_at":"2015-06-10T08:37:49.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/6255#issuecomment-110654886","id":110654886,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/6255","node_id":"MDEyOklzc3VlQ29tbWVudDExMDY1NDg4Ng==","updated_at":"2015-06-10T08:38:12.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/110654886","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":16,"author_association":"COLLABORATOR","body":"Using named parameters seems like a reasonable compromise to implement @bhouston's desired functionality with minimal changes, if @mrdoob agrees.\n\nHere are my suggestions:\n1. Since the \"non-physical\" attenuation model does not have a name, I would suggest the property be `physicalAttenuation`, and it take the value `true` or `false`.\n2. Since I am not a fan of using a property for two purposes -- especially when the units are different, I'd keep `intensity` (which is unitless) and add `lumens` as an additional property.\n3. I think it is fine to assume `meters` for distance when the physical model is used. For the non-physical model, units are irrelevant, since the non-physical attenuation model is unitless.\n4. Adding the property `physicalAttenuation` allows the \"magic number\" `- 1` in the code to be removed. : - )\n5. It is a design decision whether to use `#ifdefs` in the shader if `physicalAttenuation` is `true`. I'll leave that up to those who have an opinion on these things.\n6. I still think `decay` should be removed for simplicity (it is not physical even with a value of 2 because the non-physical attenuation model is unitless) -- but I will not push it, as long as it is just considered as a tweakable parameter, and does not imply a physical model.\n","created_at":"2015-06-10T11:04:36.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/6255#issuecomment-110700847","id":110700847,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/6255","node_id":"MDEyOklzc3VlQ29tbWVudDExMDcwMDg0Nw==","updated_at":"2015-06-10T11:04:36.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/110700847","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":17,"author_association":"CONTRIBUTOR","body":"Just a quick note, I'm out of time for contributing to ThreeJS for the time being.  I'll try to get back to this in the next few weeks.\n","created_at":"2015-06-10T12:31:48.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/6255#issuecomment-110731673","id":110731673,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/6255","node_id":"MDEyOklzc3VlQ29tbWVudDExMDczMTY3Mw==","updated_at":"2015-06-10T12:31:48.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/110731673","user":{"following_url":"https:\/\/api.github.com\/users\/bhouston\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/bhouston\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/588541?v=4","url":"https:\/\/api.github.com\/users\/bhouston","gists_url":"https:\/\/api.github.com\/users\/bhouston\/gists{\/gist_id}","html_url":"https:\/\/github.com\/bhouston","subscriptions_url":"https:\/\/api.github.com\/users\/bhouston\/subscriptions","node_id":"MDQ6VXNlcjU4ODU0MQ==","repos_url":"https:\/\/api.github.com\/users\/bhouston\/repos","received_events_url":"https:\/\/api.github.com\/users\/bhouston\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/bhouston\/starred{\/owner}{\/repo}","site_admin":false,"login":"bhouston","type":"User","id":588541,"followers_url":"https:\/\/api.github.com\/users\/bhouston\/followers","organizations_url":"https:\/\/api.github.com\/users\/bhouston\/orgs"}},{"index":18,"author_association":"NONE","body":"The examples of this pullrequest are now built and visible in threejsworker. To view them, go to the following link: \n\n http:\/\/threejsworker.com\/viewpullrequest.html#6255\n","created_at":"2015-10-15T23:31:12.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/pull\/6255#issuecomment-148551207","id":148551207,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/6255","node_id":"MDEyOklzc3VlQ29tbWVudDE0ODU1MTIwNw==","updated_at":"2015-10-15T23:31:12.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/148551207","user":{"following_url":"https:\/\/api.github.com\/users\/threejsworker\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/threejsworker\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/14880287?v=4","url":"https:\/\/api.github.com\/users\/threejsworker","gists_url":"https:\/\/api.github.com\/users\/threejsworker\/gists{\/gist_id}","html_url":"https:\/\/github.com\/threejsworker","subscriptions_url":"https:\/\/api.github.com\/users\/threejsworker\/subscriptions","node_id":"MDQ6VXNlcjE0ODgwMjg3","repos_url":"https:\/\/api.github.com\/users\/threejsworker\/repos","received_events_url":"https:\/\/api.github.com\/users\/threejsworker\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/threejsworker\/starred{\/owner}{\/repo}","site_admin":false,"login":"threejsworker","type":"User","id":14880287,"followers_url":"https:\/\/api.github.com\/users\/threejsworker\/followers","organizations_url":"https:\/\/api.github.com\/users\/threejsworker\/orgs"}}]}