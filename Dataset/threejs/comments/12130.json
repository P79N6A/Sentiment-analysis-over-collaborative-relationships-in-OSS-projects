{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"CONTRIBUTOR","body":"even better would be to have gpu-based method to identify the foremost object so that user would not have to bother removing background from testing by hand, and then the current raycaster does not even need any code change.","created_at":"2017-09-05T10:51:35.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12130#issuecomment-327141006","id":327141006,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12130","node_id":"MDEyOklzc3VlQ29tbWVudDMyNzE0MTAwNg==","updated_at":"2017-09-05T10:51:35.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/327141006","user":{"following_url":"https:\/\/api.github.com\/users\/makc\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/makc\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/242577?v=4","url":"https:\/\/api.github.com\/users\/makc","gists_url":"https:\/\/api.github.com\/users\/makc\/gists{\/gist_id}","html_url":"https:\/\/github.com\/makc","subscriptions_url":"https:\/\/api.github.com\/users\/makc\/subscriptions","node_id":"MDQ6VXNlcjI0MjU3Nw==","repos_url":"https:\/\/api.github.com\/users\/makc\/repos","received_events_url":"https:\/\/api.github.com\/users\/makc\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/makc\/starred{\/owner}{\/repo}","site_admin":false,"login":"makc","type":"User","id":242577,"followers_url":"https:\/\/api.github.com\/users\/makc\/followers","organizations_url":"https:\/\/api.github.com\/users\/makc\/orgs"}},{"index":1,"author_association":"CONTRIBUTOR","body":"@makc  there is an example for that: https:\/\/threejs.org\/examples\/#webgl_interactive_cubes_gpu\r\n\r\nas far as \"limiting\" goes - it's not that simple. Finding *an* intersection won't mean that it is the closest point to the ray's origin.\r\n\r\nsome notes on how to do this efficiently:\r\n\r\nUsing a spatial index would help, i use a BVH for exactly this use-case, there is an octree example which might help: https:\/\/threejs.org\/examples\/#webgl_octree_raycasting \r\n\r\nUsing an octree you would limit search space with a plane orthogonal to the ray, and you would move the plane closer to the origin every time you get a hit.","created_at":"2017-09-06T12:52:40.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12130#issuecomment-327473628","id":327473628,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12130","node_id":"MDEyOklzc3VlQ29tbWVudDMyNzQ3MzYyOA==","updated_at":"2017-09-06T12:52:40.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/327473628","user":{"following_url":"https:\/\/api.github.com\/users\/Usnul\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Usnul\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/5939063?v=4","url":"https:\/\/api.github.com\/users\/Usnul","gists_url":"https:\/\/api.github.com\/users\/Usnul\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Usnul","subscriptions_url":"https:\/\/api.github.com\/users\/Usnul\/subscriptions","node_id":"MDQ6VXNlcjU5MzkwNjM=","repos_url":"https:\/\/api.github.com\/users\/Usnul\/repos","received_events_url":"https:\/\/api.github.com\/users\/Usnul\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Usnul\/starred{\/owner}{\/repo}","site_admin":false,"login":"Usnul","type":"User","id":5939063,"followers_url":"https:\/\/api.github.com\/users\/Usnul\/followers","organizations_url":"https:\/\/api.github.com\/users\/Usnul\/orgs"}},{"index":2,"author_association":"CONTRIBUTOR","body":"@Usnul that example is close, but it relies on scene being static. ideally, we could have a way to pass object id as uniform to scene.overrideMaterial, and then gpu picking would be easier to implement","created_at":"2017-09-06T15:27:11.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12130#issuecomment-327520489","id":327520489,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12130","node_id":"MDEyOklzc3VlQ29tbWVudDMyNzUyMDQ4OQ==","updated_at":"2017-09-06T15:29:14.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/327520489","user":{"following_url":"https:\/\/api.github.com\/users\/makc\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/makc\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/242577?v=4","url":"https:\/\/api.github.com\/users\/makc","gists_url":"https:\/\/api.github.com\/users\/makc\/gists{\/gist_id}","html_url":"https:\/\/github.com\/makc","subscriptions_url":"https:\/\/api.github.com\/users\/makc\/subscriptions","node_id":"MDQ6VXNlcjI0MjU3Nw==","repos_url":"https:\/\/api.github.com\/users\/makc\/repos","received_events_url":"https:\/\/api.github.com\/users\/makc\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/makc\/starred{\/owner}{\/repo}","site_admin":false,"login":"makc","type":"User","id":242577,"followers_url":"https:\/\/api.github.com\/users\/makc\/followers","organizations_url":"https:\/\/api.github.com\/users\/makc\/orgs"}},{"index":3,"author_association":"CONTRIBUTOR","body":"(well, not that good idea too, because it explodes draw call count)","created_at":"2017-09-06T15:30:29.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12130#issuecomment-327521590","id":327521590,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12130","node_id":"MDEyOklzc3VlQ29tbWVudDMyNzUyMTU5MA==","updated_at":"2017-09-06T15:30:29.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/327521590","user":{"following_url":"https:\/\/api.github.com\/users\/makc\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/makc\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/242577?v=4","url":"https:\/\/api.github.com\/users\/makc","gists_url":"https:\/\/api.github.com\/users\/makc\/gists{\/gist_id}","html_url":"https:\/\/github.com\/makc","subscriptions_url":"https:\/\/api.github.com\/users\/makc\/subscriptions","node_id":"MDQ6VXNlcjI0MjU3Nw==","repos_url":"https:\/\/api.github.com\/users\/makc\/repos","received_events_url":"https:\/\/api.github.com\/users\/makc\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/makc\/starred{\/owner}{\/repo}","site_admin":false,"login":"makc","type":"User","id":242577,"followers_url":"https:\/\/api.github.com\/users\/makc\/followers","organizations_url":"https:\/\/api.github.com\/users\/makc\/orgs"}},{"index":4,"author_association":"OWNER","body":"> i e break out of all loops once one intersection was found. because when I think about it, there was hardly a single case ever when I had to look past [0].\r\n\r\nYou're probably expecting that [0] is the closest one, right? In order to know that we have to test all the objects and sort the intersections. At that point, why not provide all the intersections too?","created_at":"2017-09-06T20:50:56.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12130#issuecomment-327609068","id":327609068,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12130","node_id":"MDEyOklzc3VlQ29tbWVudDMyNzYwOTA2OA==","updated_at":"2017-09-06T20:50:56.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/327609068","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":5,"author_association":"CONTRIBUTOR","body":"because I can hand-pick only the objects that are in the front before feeding them to the raycaster. think alphabet cubes scattered across the floor, and I am not giving the raycaster the floor. true, you can put all the cubes together, and then [0] can be whatever, but then I would not be using this option.\r\n\r\nhowever, like I said in my 2nd comment, if we could identify foremost object first, we dont need any change to raycaster at all - we can just run it on that object alone. so yeah. how to do that in arbitrary scene in the most efficient way? I can only think of replaceing  all the materials by hand, rendering to 1x1 and restoring original materials.","created_at":"2017-09-06T22:51:34.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12130#issuecomment-327633535","id":327633535,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12130","node_id":"MDEyOklzc3VlQ29tbWVudDMyNzYzMzUzNQ==","updated_at":"2017-09-06T22:51:34.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/327633535","user":{"following_url":"https:\/\/api.github.com\/users\/makc\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/makc\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/242577?v=4","url":"https:\/\/api.github.com\/users\/makc","gists_url":"https:\/\/api.github.com\/users\/makc\/gists{\/gist_id}","html_url":"https:\/\/github.com\/makc","subscriptions_url":"https:\/\/api.github.com\/users\/makc\/subscriptions","node_id":"MDQ6VXNlcjI0MjU3Nw==","repos_url":"https:\/\/api.github.com\/users\/makc\/repos","received_events_url":"https:\/\/api.github.com\/users\/makc\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/makc\/starred{\/owner}{\/repo}","site_admin":false,"login":"makc","type":"User","id":242577,"followers_url":"https:\/\/api.github.com\/users\/makc\/followers","organizations_url":"https:\/\/api.github.com\/users\/makc\/orgs"}},{"index":6,"author_association":"CONTRIBUTOR","body":"I was thinking since I said\r\n> we dont need any change to raycaster at all\r\n\r\nthis makes it more like support issue so no need to track it ","created_at":"2017-09-06T23:08:36.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12130#issuecomment-327636385","id":327636385,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12130","node_id":"MDEyOklzc3VlQ29tbWVudDMyNzYzNjM4NQ==","updated_at":"2017-09-06T23:08:36.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/327636385","user":{"following_url":"https:\/\/api.github.com\/users\/makc\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/makc\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/242577?v=4","url":"https:\/\/api.github.com\/users\/makc","gists_url":"https:\/\/api.github.com\/users\/makc\/gists{\/gist_id}","html_url":"https:\/\/github.com\/makc","subscriptions_url":"https:\/\/api.github.com\/users\/makc\/subscriptions","node_id":"MDQ6VXNlcjI0MjU3Nw==","repos_url":"https:\/\/api.github.com\/users\/makc\/repos","received_events_url":"https:\/\/api.github.com\/users\/makc\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/makc\/starred{\/owner}{\/repo}","site_admin":false,"login":"makc","type":"User","id":242577,"followers_url":"https:\/\/api.github.com\/users\/makc\/followers","organizations_url":"https:\/\/api.github.com\/users\/makc\/orgs"}},{"index":7,"author_association":"CONTRIBUTOR","body":"You could render to 1x1, you will have very few fragments, but you will still have the same geometry. Also, if you have to do a few lookups per frame - it will quickly become a burden. Spatial index (a special data structure to reason about space) is a better overall approach, albeit requiring more work to implement. If your geometry is animated via shaders - it becomes less easy.","created_at":"2017-09-08T09:31:01.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/12130#issuecomment-328054018","id":328054018,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/12130","node_id":"MDEyOklzc3VlQ29tbWVudDMyODA1NDAxOA==","updated_at":"2017-09-08T09:31:01.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/328054018","user":{"following_url":"https:\/\/api.github.com\/users\/Usnul\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/Usnul\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/5939063?v=4","url":"https:\/\/api.github.com\/users\/Usnul","gists_url":"https:\/\/api.github.com\/users\/Usnul\/gists{\/gist_id}","html_url":"https:\/\/github.com\/Usnul","subscriptions_url":"https:\/\/api.github.com\/users\/Usnul\/subscriptions","node_id":"MDQ6VXNlcjU5MzkwNjM=","repos_url":"https:\/\/api.github.com\/users\/Usnul\/repos","received_events_url":"https:\/\/api.github.com\/users\/Usnul\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/Usnul\/starred{\/owner}{\/repo}","site_admin":false,"login":"Usnul","type":"User","id":5939063,"followers_url":"https:\/\/api.github.com\/users\/Usnul\/followers","organizations_url":"https:\/\/api.github.com\/users\/Usnul\/orgs"}}]}