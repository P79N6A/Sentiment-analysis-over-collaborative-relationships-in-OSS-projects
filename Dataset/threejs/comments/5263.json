{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"OWNER","body":"\/ping @WestLangley \n","created_at":"2014-09-05T23:17:53.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/5263#issuecomment-54693001","id":54693001,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/5263","node_id":"MDEyOklzc3VlQ29tbWVudDU0NjkzMDAx","updated_at":"2014-09-05T23:17:53.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/54693001","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":1,"author_association":"CONTRIBUTOR","body":"I may have made this way more confusing than it should be, i should have noted that this should only apply for the mouse picking. \n\n```\nvar mouse3D = new THREE.Vector3( ( event.clientX \/ window.innerWidth ) * 2 - 1,   \/\/x\n                                    -( event.clientY \/ window.innerHeight ) * 2 + 1,  \/\/y\n                                    0.5 );                                            \/\/z\n    projector.unprojectVector( mouse3D, camera );   \n    mouse3D.sub( camera.position );                \n    mouse3D.normalize();\n    var raycaster = new THREE.Raycaster( camera.position, mouse3D );\n    var intersects = raycaster.intersectObjects( objects );\n    \/\/ Change color if hit block\n    if ( intersects.length > 0 ) {\n        intersects[ 0 ].object.material.color.setHex( Math.random() * 0xffffff );\n    }\n```\n\nThis unprojects the vector which does an inverse of a mat4, mat4 multiplication, and a vec4 mat4 multiplication, followed by a vec3 addition and finally a normalization. \n\nThe other method .pickingRay() unprojects two vectors, (think of the frustrum as an hour glass, it makes an end vector somewhere on a plane in front of the camera, and unprojects one on the opposing side (this should be mirroring all three axis?)). You end up with two points in world space, with the camera in the middle. \n\nStill, this seems even heavier at two unprojections, again followed by an addition and normalization.\n\nWhat i suggest, for doing the mouse picking, is optimizing this, with the idea that the NDC projection can be hacked. We don't need to unproject the depth from the ray direction, so we're fine with **locking it at any positive value**. No confusion then about the z value involved when setting up the projector for mouse picking. .5 o 1.0 should be totally irrelevant. ~~This is just the interpolated value between the near and the far plane.~~ It is, but it's actually from -1 to 1, so a Z = 0 would unproject somewhere in between the near and far (but much closer to near). Without this restriction, it is easier to just shortcut and reconstruct a 'normalized' view frustum for the camera. \n\nI.e. take the camera in it's own model space, before it's own world transformation. It sits at 0,0,0, pointing down the -z because of openGL. Since it is a direction in question, we can mimick the near plane by simply defining a ~~plane~~ rectangle that is \n\n```\n\nleft = -1 * camera.aspect;\nright = 1 * camera.aspect;\ntop = 1;\nbottom = -1\n```\n\nif we put it at a distance of 1 from the camera, this would equal a FOV of 90 deg. we just need to scale this by the tang of the fov. (think of the pyramid - frustrum scaling as you zoom in out).\n\nthis direction needs only to be rotated, not translated, so transformDirection() comes in handy, and might be lighter?\n\nso i'm not sure, maybe this should be the new picking ray, that is faster than unprojecting a full 3d vector, because that's what it is essentially, a shortcut to get a ray aligned with the cam frustrum (going through the cam point)  (otherwise, you just build a ray from two arbitrary world points,which you can get by unprojecting them yourself).\n\nmakes sense?\n","created_at":"2014-09-06T02:01:04.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/5263#issuecomment-54699356","id":54699356,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/5263","node_id":"MDEyOklzc3VlQ29tbWVudDU0Njk5MzU2","updated_at":"2014-09-06T06:59:31.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/54699356","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":2,"author_association":"CONTRIBUTOR","body":"come to think of it maybe both should be altered to avoid the inverse of the matrix in either case, it seems to be a quite intensive of an operation, with some hard coded math it could possibly be faster. I don't know exactly how heavy is Math.tan but it must be lighter than a mat4 inverse?. The depth from near to far is -1 - 1 in NDC. we do the same reconstruction on a ray that goes from the camera, through a scaled -1 1 rectangle. We know that a point in NDC with arbitrary X and Y will lie on this ray, we should then just be able to find Z by scaling it like \n\n```\nZ = NDCz *.5 +.5;\nZ = Z * (far-near)+near;\n```\n\nI would love to write and contribute this, but the question is, should there be an \n\nunprojectPoint() (or vector?)\nunprojectDirection() or just rayPicker basiclly the same thing but returning the ray\n\n**_Edit**_\n\nalso, what would be a good way to handle the pickinray, would this make sense?\n\n```\n\n(function(){\n...\nvar _vec3 = new THREE.Vector3(); \n...\nreturn function( vec2 , camera){\n_vec3.set(vec2.x, vec2.y, -1);\n...\nreturn _vec3;\n}\n})()\n```\n\nI guess this is minute compared to what happens next if something is hit, but still... every cycle counts, is that the 3d moto? :)\n","created_at":"2014-09-06T02:11:49.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/5263#issuecomment-54699608","id":54699608,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/5263","node_id":"MDEyOklzc3VlQ29tbWVudDU0Njk5NjA4","updated_at":"2014-09-06T07:00:42.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/54699608","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}},{"index":3,"author_association":"COLLABORATOR","body":"Yes, what @pailhead is suggesting works for perspective cameras. It is similar to the way we handle picking with orthographic cameras now.\n\nSo instead of the current pattern...\n\n```\n    vector.set( mouse.x, mouse.y, 0.5 );\n    vector.unproject( camera );\n    raycaster.set( camera.position, vector.sub( camera.position ).normalize() );\n```\n\ndefine a new method...\n\n```\nTHREE.Vector3.prototype.pickingRay = function ( camera ) {\n\n    var tan = Math.tan( 0.5 * THREE.Math.degToRad( camera.fov ) ) \/ camera.zoom;\n\n    this.x *= tan * camera.aspect;\n    this.y *= tan; \n    this.z = - 1;\n\n    return this.transformDirection( camera.matrixWorld );\n\n};\n```\n\nand use this pattern:\n\n```\n    vector.set( mouse.x, mouse.y, 0.5 );\n    vector.pickingRay( camera );\n    raycaster.set( camera.position, vector );\n```\n\nIt may be faster, but whether there is a compelling reason to change approaches, I'm not sure.\n\nthree.js r.69\n\nEDIT: added `camera.zoom`\n","created_at":"2014-10-30T02:22:56.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/5263#issuecomment-61036857","id":61036857,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/5263","node_id":"MDEyOklzc3VlQ29tbWVudDYxMDM2ODU3","updated_at":"2014-10-31T15:08:32.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/61036857","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":4,"author_association":"OWNER","body":"Can we close this @pailhead?","created_at":"2018-02-27T03:23:08.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/5263#issuecomment-368734482","id":368734482,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/5263","node_id":"MDEyOklzc3VlQ29tbWVudDM2ODczNDQ4Mg==","updated_at":"2018-02-27T03:23:08.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/368734482","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":5,"author_association":"CONTRIBUTOR","body":"Oh yeah, I think this is too old","created_at":"2018-02-27T05:24:16.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/5263#issuecomment-368751559","id":368751559,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/5263","node_id":"MDEyOklzc3VlQ29tbWVudDM2ODc1MTU1OQ==","updated_at":"2018-02-27T05:24:16.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/368751559","user":{"following_url":"https:\/\/api.github.com\/users\/pailhead\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/pailhead\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/4681282?v=4","url":"https:\/\/api.github.com\/users\/pailhead","gists_url":"https:\/\/api.github.com\/users\/pailhead\/gists{\/gist_id}","html_url":"https:\/\/github.com\/pailhead","subscriptions_url":"https:\/\/api.github.com\/users\/pailhead\/subscriptions","node_id":"MDQ6VXNlcjQ2ODEyODI=","repos_url":"https:\/\/api.github.com\/users\/pailhead\/repos","received_events_url":"https:\/\/api.github.com\/users\/pailhead\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/pailhead\/starred{\/owner}{\/repo}","site_admin":false,"login":"pailhead","type":"User","id":4681282,"followers_url":"https:\/\/api.github.com\/users\/pailhead\/followers","organizations_url":"https:\/\/api.github.com\/users\/pailhead\/orgs"}}]}