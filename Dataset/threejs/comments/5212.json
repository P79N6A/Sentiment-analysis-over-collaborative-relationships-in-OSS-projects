{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"OWNER","body":"@ikerr thoughts?\n","created_at":"2014-08-18T21:01:14.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/5212#issuecomment-52554491","id":52554491,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/5212","node_id":"MDEyOklzc3VlQ29tbWVudDUyNTU0NDkx","updated_at":"2014-08-18T21:01:14.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/52554491","user":{"following_url":"https:\/\/api.github.com\/users\/mrdoob\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mrdoob\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/97088?v=4","url":"https:\/\/api.github.com\/users\/mrdoob","gists_url":"https:\/\/api.github.com\/users\/mrdoob\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mrdoob","subscriptions_url":"https:\/\/api.github.com\/users\/mrdoob\/subscriptions","node_id":"MDQ6VXNlcjk3MDg4","repos_url":"https:\/\/api.github.com\/users\/mrdoob\/repos","received_events_url":"https:\/\/api.github.com\/users\/mrdoob\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mrdoob\/starred{\/owner}{\/repo}","site_admin":false,"login":"mrdoob","type":"User","id":97088,"followers_url":"https:\/\/api.github.com\/users\/mrdoob\/followers","organizations_url":"https:\/\/api.github.com\/users\/mrdoob\/orgs"}},{"index":1,"author_association":"CONTRIBUTOR","body":"Hi @tranek ,\n\nI think the current implementation will do what you're looking for: apply a single animation to a single skeleton and use that skeleton to drive multiple meshes. You'll notice that `THREE.SkinnedMesh` has a `bind()` function that takes a skeleton and an optional bind matrix - you can use this to attach a single skeleton to multiple meshes. For example:\n\n```\nvar skeleton = new THREE.Skeleton( bones );\nvar meshA = new THREE.SkinnedMesh( geometryA, material );\nvar meshB = new THREE.SkinnedMesh( geometryB, material );\n\nmeshA.bind( skeleton );\nmeshB.bind( skeleton );\n```\n\nwhere `bones` is an array of `THREE.Object3D` instances that exist in your scenegraph.\n\nNote: since the skeleton is shared, you only need a single animation to animate both meshes.\n\nHope that helps. Let me know if you have any questions\/comments.\n","created_at":"2014-08-19T14:18:08.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/5212#issuecomment-52640594","id":52640594,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/5212","node_id":"MDEyOklzc3VlQ29tbWVudDUyNjQwNTk0","updated_at":"2014-08-19T14:18:08.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/52640594","user":{"following_url":"https:\/\/api.github.com\/users\/ikerr\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/ikerr\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/884960?v=4","url":"https:\/\/api.github.com\/users\/ikerr","gists_url":"https:\/\/api.github.com\/users\/ikerr\/gists{\/gist_id}","html_url":"https:\/\/github.com\/ikerr","subscriptions_url":"https:\/\/api.github.com\/users\/ikerr\/subscriptions","node_id":"MDQ6VXNlcjg4NDk2MA==","repos_url":"https:\/\/api.github.com\/users\/ikerr\/repos","received_events_url":"https:\/\/api.github.com\/users\/ikerr\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/ikerr\/starred{\/owner}{\/repo}","site_admin":false,"login":"ikerr","type":"User","id":884960,"followers_url":"https:\/\/api.github.com\/users\/ikerr\/followers","organizations_url":"https:\/\/api.github.com\/users\/ikerr\/orgs"}},{"index":2,"author_association":"CONTRIBUTOR","body":"Hi @ikerr ,\n\nThanks for the response. I'm not entirely sure that I understand how to implement this. Using a Blender workflow:\n\n1) I would load in an animation into Blender so that there's only an armature in the scene\n2) Export the armature to .js only including bones (no geometry or animations since `THREE.Skeleton` doesn't store either)\n3) Import into my three.js app by using the standard `JSON loader` and in the handler use the bones as the parameter to initialize a new `THREE.Skeleton`\n4) Export from Blender `meshA` and `meshB` to .js with just geometry, bones, and skinning but no animations (or just one of them with the animation?).\n5) Import `meshA` and `meshB` into my three.js app using the standard `JSON loader` and in the handler use their `bind()` methods on the `THREE.Skeleton` that I created in step 3.\n\nWhere would I import\/add the animations? I read your post as if `meshA` or `meshB` would have the animation (but not both meshes) and the other would share it. But how would this work if both meshes only have a subset of the bones of the original `THREE.Skeleton`? If they don't both have all of the same bones, then whichever one has the animations embedded in them wouldn't have the animation info for the missing bones (if I understand how that part works correctly).\n\nIf I understand your suggestion correctly, it would seem that I would need to create a \"dummy\" `THREE.SkinnedMesh` with all of the bones but no geometry (can I make one with no geometry?) that would hold all animation info.\n\nI hope that my confusion makes sense. Thanks!!\n","created_at":"2014-08-20T23:43:03.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/5212#issuecomment-52860622","id":52860622,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/5212","node_id":"MDEyOklzc3VlQ29tbWVudDUyODYwNjIy","updated_at":"2014-08-20T23:43:03.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/52860622","user":{"following_url":"https:\/\/api.github.com\/users\/tranek\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/tranek\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/1534735?v=4","url":"https:\/\/api.github.com\/users\/tranek","gists_url":"https:\/\/api.github.com\/users\/tranek\/gists{\/gist_id}","html_url":"https:\/\/github.com\/tranek","subscriptions_url":"https:\/\/api.github.com\/users\/tranek\/subscriptions","node_id":"MDQ6VXNlcjE1MzQ3MzU=","repos_url":"https:\/\/api.github.com\/users\/tranek\/repos","received_events_url":"https:\/\/api.github.com\/users\/tranek\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/tranek\/starred{\/owner}{\/repo}","site_admin":false,"login":"tranek","type":"User","id":1534735,"followers_url":"https:\/\/api.github.com\/users\/tranek\/followers","organizations_url":"https:\/\/api.github.com\/users\/tranek\/orgs"}},{"index":3,"author_association":"CONTRIBUTOR","body":"Hi @tranek ,\n\nI'm not sure if `THREE.JSONLoader` can do everything you want - we use custom loaders. I can give you an idea of what we do, and maybe that will help...\n\nOur animations are stored in separate files and are quite simple: a list of channels with keyframe data. The channel names can be mapped to bones in the scene. For example, an animation file might look like this:\n\n```\n{\n  \"LeftLeg\": {\n    \"position\": { 0, 0, 0, 0, 1, 0, 0, 1, ... }\n    \"rotation\": { 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, ... }\n    \"scale\": { 0, 1, 1, 1, ... }\n  }\n  ...\n}\n```\n\nOur animation files have a flat structure - the channels are not hierarchical. This allows us to \u201cbind\u201d the animations to any hierarchy at runtime by matching channel names to bone names. For example, you can do something like this:\n\n```\nvar animation = createAnimation(root, channels);\n```\n\nwhere `root` is the root of your `THREE.Object3D` hierarchy, `channels` is your channel data and `animation` is the resulting `THREE.Animation`. Relating this to your first post, if you have a character with interchangeable parts, you can have a single set of channel data and bind that to multiple object hierarchies (e.g., weapons, armour, etc.).\n\nTo sum things up, here are a couple points:\n- We don\u2019t use `THREE.JSONLoader` and don\u2019t embed animation data in models - we load animations separately.\n- If your animation data is stored separately, you can bind animation channels to arbitrary object hierarchies at runtime.\n","created_at":"2014-08-21T15:58:13.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/5212#issuecomment-52941155","id":52941155,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/5212","node_id":"MDEyOklzc3VlQ29tbWVudDUyOTQxMTU1","updated_at":"2014-08-21T15:58:13.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/52941155","user":{"following_url":"https:\/\/api.github.com\/users\/ikerr\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/ikerr\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/884960?v=4","url":"https:\/\/api.github.com\/users\/ikerr","gists_url":"https:\/\/api.github.com\/users\/ikerr\/gists{\/gist_id}","html_url":"https:\/\/github.com\/ikerr","subscriptions_url":"https:\/\/api.github.com\/users\/ikerr\/subscriptions","node_id":"MDQ6VXNlcjg4NDk2MA==","repos_url":"https:\/\/api.github.com\/users\/ikerr\/repos","received_events_url":"https:\/\/api.github.com\/users\/ikerr\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/ikerr\/starred{\/owner}{\/repo}","site_admin":false,"login":"ikerr","type":"User","id":884960,"followers_url":"https:\/\/api.github.com\/users\/ikerr\/followers","organizations_url":"https:\/\/api.github.com\/users\/ikerr\/orgs"}},{"index":4,"author_association":"CONTRIBUTOR","body":"Hi @ikerr,\n\nI've been trying every combination of code and not getting very far. Using the `bind()` method of the meshes, I can get meshes to share the animations and they animate 'correctly' but are in the wrong positions\/rotations.\n\nMy meshes are weird. They are all positioned at the origin and seem to have some extra transforms applied to them before the animation takes over. For example, when I embed the animation into the meshes directly, the only way that they are in the correct position\/rotation (in a `THREE.SkinnedMesh`) is if I follow a weird procedure in Blender when exporting them. I have to save out the armature + animation as a separate .blend file and then use that with the `link` function on each item to that .blend file and then constrain all of the bones' transforms in the mesh to the armature's bones's transforms.\n\nI'm not sure exactly what happens different when I use the `link` function in Blender, but some magic happens there that applies the correct transform to the mesh to match it up correctly with the armature in three.js. I don't know how to replicate what the Blender `linking` is doing since I don't know what it is doing heh.\n\nDirectly copying the skeleton (a la `bind()`) doesn't seem to work since the correctly animating `THREE.SkinnedMeshes` have bones that are in different positions\/rotations than the base `Skeleton`'s bones.\n\nIf that all sounds confusing, then that's okay because I have a headache from trying to explain it. Anyways, I'm starting to give up hope since I have such a weird situation. I don't have access to the artists to fix the models -- they are as is.\n\nI'm just going to have to save out every animation for every item separately and then AJAX them in to every item as necessary. Just extra harddrive space and bandwidth that I was hoping to save on. :(\n\nThank you for trying to help!\n","created_at":"2014-08-24T19:53:17.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/5212#issuecomment-53204809","id":53204809,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/5212","node_id":"MDEyOklzc3VlQ29tbWVudDUzMjA0ODA5","updated_at":"2014-08-24T19:53:17.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/53204809","user":{"following_url":"https:\/\/api.github.com\/users\/tranek\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/tranek\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/1534735?v=4","url":"https:\/\/api.github.com\/users\/tranek","gists_url":"https:\/\/api.github.com\/users\/tranek\/gists{\/gist_id}","html_url":"https:\/\/github.com\/tranek","subscriptions_url":"https:\/\/api.github.com\/users\/tranek\/subscriptions","node_id":"MDQ6VXNlcjE1MzQ3MzU=","repos_url":"https:\/\/api.github.com\/users\/tranek\/repos","received_events_url":"https:\/\/api.github.com\/users\/tranek\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/tranek\/starred{\/owner}{\/repo}","site_admin":false,"login":"tranek","type":"User","id":1534735,"followers_url":"https:\/\/api.github.com\/users\/tranek\/followers","organizations_url":"https:\/\/api.github.com\/users\/tranek\/orgs"}},{"index":5,"author_association":"CONTRIBUTOR","body":"Hi @tranek ,\n\n`THREE.SkinnedMesh`'s `bind()` function takes a skeleton and optionally a bind matrix, which will allow you to correctly line up your skeleton and mesh. For example, if your mesh is offset from your skeleton by 2 units along the x-axis, you can pass in a bind matrix to negate that offset.\n","created_at":"2014-08-24T20:44:12.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/5212#issuecomment-53206615","id":53206615,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/5212","node_id":"MDEyOklzc3VlQ29tbWVudDUzMjA2NjE1","updated_at":"2014-08-24T20:44:12.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/53206615","user":{"following_url":"https:\/\/api.github.com\/users\/ikerr\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/ikerr\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/884960?v=4","url":"https:\/\/api.github.com\/users\/ikerr","gists_url":"https:\/\/api.github.com\/users\/ikerr\/gists{\/gist_id}","html_url":"https:\/\/github.com\/ikerr","subscriptions_url":"https:\/\/api.github.com\/users\/ikerr\/subscriptions","node_id":"MDQ6VXNlcjg4NDk2MA==","repos_url":"https:\/\/api.github.com\/users\/ikerr\/repos","received_events_url":"https:\/\/api.github.com\/users\/ikerr\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/ikerr\/starred{\/owner}{\/repo}","site_admin":false,"login":"ikerr","type":"User","id":884960,"followers_url":"https:\/\/api.github.com\/users\/ikerr\/followers","organizations_url":"https:\/\/api.github.com\/users\/ikerr\/orgs"}},{"index":6,"author_association":"CONTRIBUTOR","body":"Hi @ikerr ,\n\nThat makes sense, but how do I calculate the bind matrix? While looking at correct `THREE.SkinnedMeshes` (ones that animate in the correct position\/rotation because the animation was loaded in with them instead of trying to `bind()` to a skeleton), their bind matrices are all the identity. Do I have to go through and manually lineup all the meshes and calculate the bind matrix from that? I hope that is not the case because I have a lot of meshes and it just wouldn't be feasible to manually calculate the bind matrix for all of them by hand.\n\nThanks for your patience with my inexperience with this :)\n","created_at":"2014-08-24T22:58:39.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/5212#issuecomment-53212079","id":53212079,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/5212","node_id":"MDEyOklzc3VlQ29tbWVudDUzMjEyMDc5","updated_at":"2014-08-24T22:58:56.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/53212079","user":{"following_url":"https:\/\/api.github.com\/users\/tranek\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/tranek\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/1534735?v=4","url":"https:\/\/api.github.com\/users\/tranek","gists_url":"https:\/\/api.github.com\/users\/tranek\/gists{\/gist_id}","html_url":"https:\/\/github.com\/tranek","subscriptions_url":"https:\/\/api.github.com\/users\/tranek\/subscriptions","node_id":"MDQ6VXNlcjE1MzQ3MzU=","repos_url":"https:\/\/api.github.com\/users\/tranek\/repos","received_events_url":"https:\/\/api.github.com\/users\/tranek\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/tranek\/starred{\/owner}{\/repo}","site_admin":false,"login":"tranek","type":"User","id":1534735,"followers_url":"https:\/\/api.github.com\/users\/tranek\/followers","organizations_url":"https:\/\/api.github.com\/users\/tranek\/orgs"}},{"index":7,"author_association":"CONTRIBUTOR","body":"Hi @tranek,\n\nThere should be some way to infer the correct bind matrices from your data, but I don't have access to your data so I can't really tell you how to calculate them :) If you can set up a jsfiddle, I might be able to have a look and point you in the right direction.\n\n--Ian\n","created_at":"2014-08-28T18:20:31.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/5212#issuecomment-53771345","id":53771345,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/5212","node_id":"MDEyOklzc3VlQ29tbWVudDUzNzcxMzQ1","updated_at":"2014-08-28T18:20:31.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/53771345","user":{"following_url":"https:\/\/api.github.com\/users\/ikerr\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/ikerr\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/884960?v=4","url":"https:\/\/api.github.com\/users\/ikerr","gists_url":"https:\/\/api.github.com\/users\/ikerr\/gists{\/gist_id}","html_url":"https:\/\/github.com\/ikerr","subscriptions_url":"https:\/\/api.github.com\/users\/ikerr\/subscriptions","node_id":"MDQ6VXNlcjg4NDk2MA==","repos_url":"https:\/\/api.github.com\/users\/ikerr\/repos","received_events_url":"https:\/\/api.github.com\/users\/ikerr\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/ikerr\/starred{\/owner}{\/repo}","site_admin":false,"login":"ikerr","type":"User","id":884960,"followers_url":"https:\/\/api.github.com\/users\/ikerr\/followers","organizations_url":"https:\/\/api.github.com\/users\/ikerr\/orgs"}},{"index":8,"author_association":"CONTRIBUTOR","body":"Hi @ikerr ,\n\nSorry for the delay. Reddit discovered my website over the weekend and I've been dealing with the fallout from the \"Reddit Hug of Death\" and the thousands of eyes looking at it and reporting bugs.\n\nWhat would you need in the jsfiddle? I am assuming that you would need the main skeleton with the animation (I've actually have been just using a \"main\" mesh of sorts that has all of the bones and some geometry that stays static\/doesn't swap out like the other items and binding to its skeleton instead of making a standalone `THREE.Skeleton` if that makes sense) and a couple of models with correctly embedded animations and the same models without embedded animations?\n\nI've honestly never used jsfiddle before, I assume that it can handle loading .js files from external sites (the models in this case)? Or would I need to enable some sort of CORS flag somewhere on my server to make sure jsfiddle can access my models?\n\nThanks!\n","created_at":"2014-09-02T08:32:03.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/5212#issuecomment-54122789","id":54122789,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/5212","node_id":"MDEyOklzc3VlQ29tbWVudDU0MTIyNzg5","updated_at":"2014-09-02T08:32:33.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/54122789","user":{"following_url":"https:\/\/api.github.com\/users\/tranek\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/tranek\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/1534735?v=4","url":"https:\/\/api.github.com\/users\/tranek","gists_url":"https:\/\/api.github.com\/users\/tranek\/gists{\/gist_id}","html_url":"https:\/\/github.com\/tranek","subscriptions_url":"https:\/\/api.github.com\/users\/tranek\/subscriptions","node_id":"MDQ6VXNlcjE1MzQ3MzU=","repos_url":"https:\/\/api.github.com\/users\/tranek\/repos","received_events_url":"https:\/\/api.github.com\/users\/tranek\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/tranek\/starred{\/owner}{\/repo}","site_admin":false,"login":"tranek","type":"User","id":1534735,"followers_url":"https:\/\/api.github.com\/users\/tranek\/followers","organizations_url":"https:\/\/api.github.com\/users\/tranek\/orgs"}},{"index":9,"author_association":"NONE","body":"I think I'm trying to accomplish something similar to the original post here. \r\n\r\nSay I have a single skinned mesh file called skelmesh.fbx without any animations on it- just a skinned mesh and bones. I also have several animation files called idle.fbx, walk.fbx, and run.fbx containing only bone and\/or blend shape animation data. I'd like to use these animation files to drive the skinned mesh file. This is a similar setup to UE4 and Unity (at least with bone animations, not sure if blend shape animations require a mesh in the file) where you have a skeletal mesh being driven by joint animation data.\r\n\r\nIs this setup possible and if so how should I go about it? Is the bind method the key here?","created_at":"2018-09-09T06:19:50.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/5212#issuecomment-419693794","id":419693794,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/5212","node_id":"MDEyOklzc3VlQ29tbWVudDQxOTY5Mzc5NA==","updated_at":"2018-09-09T06:19:50.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/419693794","user":{"following_url":"https:\/\/api.github.com\/users\/mikebourbeauart\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mikebourbeauart\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/10410125?v=4","url":"https:\/\/api.github.com\/users\/mikebourbeauart","gists_url":"https:\/\/api.github.com\/users\/mikebourbeauart\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mikebourbeauart","subscriptions_url":"https:\/\/api.github.com\/users\/mikebourbeauart\/subscriptions","node_id":"MDQ6VXNlcjEwNDEwMTI1","repos_url":"https:\/\/api.github.com\/users\/mikebourbeauart\/repos","received_events_url":"https:\/\/api.github.com\/users\/mikebourbeauart\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mikebourbeauart\/starred{\/owner}{\/repo}","site_admin":false,"login":"mikebourbeauart","type":"User","id":10410125,"followers_url":"https:\/\/api.github.com\/users\/mikebourbeauart\/followers","organizations_url":"https:\/\/api.github.com\/users\/mikebourbeauart\/orgs"}},{"index":10,"author_association":"NONE","body":"figured it out here: https:\/\/discourse.threejs.org\/t\/fbx-drive-a-single-skinnedmesh-geometry-bound-to-skeleton-in-maya-with-multiple-animated-skeletons\/4072","created_at":"2018-09-09T17:00:25.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/5212#issuecomment-419729515","id":419729515,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/5212","node_id":"MDEyOklzc3VlQ29tbWVudDQxOTcyOTUxNQ==","updated_at":"2018-09-09T17:00:25.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/419729515","user":{"following_url":"https:\/\/api.github.com\/users\/mikebourbeauart\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/mikebourbeauart\/events{\/privacy}","avatar_url":"https:\/\/avatars1.githubusercontent.com\/u\/10410125?v=4","url":"https:\/\/api.github.com\/users\/mikebourbeauart","gists_url":"https:\/\/api.github.com\/users\/mikebourbeauart\/gists{\/gist_id}","html_url":"https:\/\/github.com\/mikebourbeauart","subscriptions_url":"https:\/\/api.github.com\/users\/mikebourbeauart\/subscriptions","node_id":"MDQ6VXNlcjEwNDEwMTI1","repos_url":"https:\/\/api.github.com\/users\/mikebourbeauart\/repos","received_events_url":"https:\/\/api.github.com\/users\/mikebourbeauart\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/mikebourbeauart\/starred{\/owner}{\/repo}","site_admin":false,"login":"mikebourbeauart","type":"User","id":10410125,"followers_url":"https:\/\/api.github.com\/users\/mikebourbeauart\/followers","organizations_url":"https:\/\/api.github.com\/users\/mikebourbeauart\/orgs"}},{"index":11,"author_association":"COLLABORATOR","body":"I think this issue can be closed as \"obsolete\" \u2014 it predates the new animation system, and animations can now be serialized separately from models, and reused with different objects by assigning a different root to AnimationMixer instances. For example:\r\n\r\n```js\r\nvar walk; \/\/ THREE.AnimationClip\r\n\r\nvar mixer1 = new THREE.AnimationMixer( mesh1 );\r\nvar walkAction1 = mixer1.clipAction( walk );\r\nwalkAction1.play();\r\n\r\nvar mixer2 = new THREE.AnimationMixer( mesh2 );\r\nvar walkAction2 = mixer2.clipAction( walk );\r\nwalkAction2.play();\r\n```","created_at":"2018-09-10T05:56:06.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/5212#issuecomment-419795910","id":419795910,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/5212","node_id":"MDEyOklzc3VlQ29tbWVudDQxOTc5NTkxMA==","updated_at":"2018-09-10T05:56:06.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/419795910","user":{"following_url":"https:\/\/api.github.com\/users\/donmccurdy\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/donmccurdy\/events{\/privacy}","avatar_url":"https:\/\/avatars3.githubusercontent.com\/u\/1848368?v=4","url":"https:\/\/api.github.com\/users\/donmccurdy","gists_url":"https:\/\/api.github.com\/users\/donmccurdy\/gists{\/gist_id}","html_url":"https:\/\/github.com\/donmccurdy","subscriptions_url":"https:\/\/api.github.com\/users\/donmccurdy\/subscriptions","node_id":"MDQ6VXNlcjE4NDgzNjg=","repos_url":"https:\/\/api.github.com\/users\/donmccurdy\/repos","received_events_url":"https:\/\/api.github.com\/users\/donmccurdy\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/donmccurdy\/starred{\/owner}{\/repo}","site_admin":false,"login":"donmccurdy","type":"User","id":1848368,"followers_url":"https:\/\/api.github.com\/users\/donmccurdy\/followers","organizations_url":"https:\/\/api.github.com\/users\/donmccurdy\/orgs"}}]}