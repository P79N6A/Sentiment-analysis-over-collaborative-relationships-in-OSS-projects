{"schema": {"fields":[{"type":"integer","name":"index"},{"type":"string","name":"author_association"},{"type":"string","name":"body"},{"type":"datetime","name":"created_at"},{"type":"string","name":"html_url"},{"type":"integer","name":"id"},{"type":"string","name":"issue_url"},{"type":"string","name":"node_id"},{"type":"datetime","name":"updated_at"},{"type":"string","name":"url"},{"type":"string","name":"user"}],"pandas_version":"0.20.0","primaryKey":["index"]}, "data": [{"index":0,"author_association":"NONE","body":"It fails to compute a bounding sphere when NaN values are present and it looks like the raycast function in mesh.js has:\r\n\r\n```\r\nif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\nsphere.copy( geometry.boundingSphere );\r\nsphere.applyMatrix4( matrixWorld );\r\n\r\nif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\r\n```\r\nSeems like there are a couple of pre-checks  with bounding sphere and bounding rectangle before it gets into the math of raycasting.  Maybe by adding \r\n\r\n`if ( raycaster.ray.intersectsSphere( sphere ) === false && sphere != null ) return;`\r\n\r\n","created_at":"2017-07-20T16:52:08.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11806#issuecomment-316764851","id":316764851,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11806","node_id":"MDEyOklzc3VlQ29tbWVudDMxNjc2NDg1MQ==","updated_at":"2017-07-20T16:52:08.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/316764851","user":{"following_url":"https:\/\/api.github.com\/users\/kpetrow\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/kpetrow\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/18248938?v=4","url":"https:\/\/api.github.com\/users\/kpetrow","gists_url":"https:\/\/api.github.com\/users\/kpetrow\/gists{\/gist_id}","html_url":"https:\/\/github.com\/kpetrow","subscriptions_url":"https:\/\/api.github.com\/users\/kpetrow\/subscriptions","node_id":"MDQ6VXNlcjE4MjQ4OTM4","repos_url":"https:\/\/api.github.com\/users\/kpetrow\/repos","received_events_url":"https:\/\/api.github.com\/users\/kpetrow\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/kpetrow\/starred{\/owner}{\/repo}","site_admin":false,"login":"kpetrow","type":"User","id":18248938,"followers_url":"https:\/\/api.github.com\/users\/kpetrow\/followers","organizations_url":"https:\/\/api.github.com\/users\/kpetrow\/orgs"}},{"index":1,"author_association":"COLLABORATOR","body":"three.js does not accommodate invalid data.\r\n\r\n```\r\nvar geometry = new THREE.PlaneBufferGeometry();\r\ngeometry.addAttribute('position', new THREE.BufferAttribute(positions, 3));\r\n```\r\nYou should be updating the values in the existing attribute, not adding a  new one.","created_at":"2017-07-20T17:20:25.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11806#issuecomment-316772459","id":316772459,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11806","node_id":"MDEyOklzc3VlQ29tbWVudDMxNjc3MjQ1OQ==","updated_at":"2017-07-20T17:20:25.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/316772459","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":2,"author_association":"NONE","body":"undefined != invalid ??  There are unknown values in my positions array because they are unknown.  If i assign a value then it is incorrect.  The position array of the PlaneBufferGeometry is populated by real world data and sometimes the z elevation for that position is unknown and should reflect that.  Should computeBoundingSphere() handle undefined values?  Do you suggest a different geometry for surfaces?  move to SO? \r\n\r\n![image](https:\/\/user-images.githubusercontent.com\/18248938\/28430654-86c55eac-6d3e-11e7-8032-0b330b61f5c7.png)\r\n\r\nthe value of cloning and making a predefined z is that i could make z of -123 = undefined later on","created_at":"2017-07-20T17:33:20.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11806#issuecomment-316775753","id":316775753,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11806","node_id":"MDEyOklzc3VlQ29tbWVudDMxNjc3NTc1Mw==","updated_at":"2017-07-20T17:33:20.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/316775753","user":{"following_url":"https:\/\/api.github.com\/users\/kpetrow\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/kpetrow\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/18248938?v=4","url":"https:\/\/api.github.com\/users\/kpetrow","gists_url":"https:\/\/api.github.com\/users\/kpetrow\/gists{\/gist_id}","html_url":"https:\/\/github.com\/kpetrow","subscriptions_url":"https:\/\/api.github.com\/users\/kpetrow\/subscriptions","node_id":"MDQ6VXNlcjE4MjQ4OTM4","repos_url":"https:\/\/api.github.com\/users\/kpetrow\/repos","received_events_url":"https:\/\/api.github.com\/users\/kpetrow\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/kpetrow\/starred{\/owner}{\/repo}","site_admin":false,"login":"kpetrow","type":"User","id":18248938,"followers_url":"https:\/\/api.github.com\/users\/kpetrow\/followers","organizations_url":"https:\/\/api.github.com\/users\/kpetrow\/orgs"}},{"index":3,"author_association":"CONTRIBUTOR","body":"lol, it says Float32Array. is `undefined` Float32?","created_at":"2017-07-20T18:33:49.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11806#issuecomment-316791844","id":316791844,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11806","node_id":"MDEyOklzc3VlQ29tbWVudDMxNjc5MTg0NA==","updated_at":"2017-07-20T18:33:49.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/316791844","user":{"following_url":"https:\/\/api.github.com\/users\/makc\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/makc\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/242577?v=4","url":"https:\/\/api.github.com\/users\/makc","gists_url":"https:\/\/api.github.com\/users\/makc\/gists{\/gist_id}","html_url":"https:\/\/github.com\/makc","subscriptions_url":"https:\/\/api.github.com\/users\/makc\/subscriptions","node_id":"MDQ6VXNlcjI0MjU3Nw==","repos_url":"https:\/\/api.github.com\/users\/makc\/repos","received_events_url":"https:\/\/api.github.com\/users\/makc\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/makc\/starred{\/owner}{\/repo}","site_admin":false,"login":"makc","type":"User","id":242577,"followers_url":"https:\/\/api.github.com\/users\/makc\/followers","organizations_url":"https:\/\/api.github.com\/users\/makc\/orgs"}},{"index":4,"author_association":"CONTRIBUTOR","body":"> populated by real world data and sometimes the z elevation for that position is unknown and should reflect that.\r\n\r\nI say, if you do not know coordinates - set all the vertices coords in the same triangle to 0. this will make the triangle invisible, leaving the hole in its place, just like you want to.","created_at":"2017-07-20T18:37:28.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11806#issuecomment-316792827","id":316792827,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11806","node_id":"MDEyOklzc3VlQ29tbWVudDMxNjc5MjgyNw==","updated_at":"2017-07-20T18:37:28.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/316792827","user":{"following_url":"https:\/\/api.github.com\/users\/makc\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/makc\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/242577?v=4","url":"https:\/\/api.github.com\/users\/makc","gists_url":"https:\/\/api.github.com\/users\/makc\/gists{\/gist_id}","html_url":"https:\/\/github.com\/makc","subscriptions_url":"https:\/\/api.github.com\/users\/makc\/subscriptions","node_id":"MDQ6VXNlcjI0MjU3Nw==","repos_url":"https:\/\/api.github.com\/users\/makc\/repos","received_events_url":"https:\/\/api.github.com\/users\/makc\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/makc\/starred{\/owner}{\/repo}","site_admin":false,"login":"makc","type":"User","id":242577,"followers_url":"https:\/\/api.github.com\/users\/makc\/followers","organizations_url":"https:\/\/api.github.com\/users\/makc\/orgs"}},{"index":5,"author_association":"NONE","body":"> lol, it says Float32Array. is undefined Float32?\r\n\r\nnot sure what you mean.  Code is snippet and simplified.\r\n\r\n> I say, if you do not know coordinates - set all the vertices coords in the same triangle to 0. this will make the triangle invisible, leaving the hole in its place, just like you want to.\r\n\r\nI think I have tried this before.  You then start to lose edges of defined areas. because the vertex of undefined is shared with a defined vertex.\r\n\r\nI'm just thinking that having computeBoundingSphere() handle NaN or undefined would be proper behavior.  say my plane buffer geometry is 10x10 and i put 9x9 in it.  Just have it toss out the undefined values.  Or if not wanting to mess with the computeBoundingSphere() have the raycast check if sphere is null?? \r\n\r\n Regardless if it doesnt fail on creating the mesh, then the mesh methods should work??  If you want to be strict on sparse arrays then you can't be strict only after the object is created?","created_at":"2017-07-20T18:53:42.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11806#issuecomment-316797020","id":316797020,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11806","node_id":"MDEyOklzc3VlQ29tbWVudDMxNjc5NzAyMA==","updated_at":"2017-07-20T18:56:15.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/316797020","user":{"following_url":"https:\/\/api.github.com\/users\/kpetrow\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/kpetrow\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/18248938?v=4","url":"https:\/\/api.github.com\/users\/kpetrow","gists_url":"https:\/\/api.github.com\/users\/kpetrow\/gists{\/gist_id}","html_url":"https:\/\/github.com\/kpetrow","subscriptions_url":"https:\/\/api.github.com\/users\/kpetrow\/subscriptions","node_id":"MDQ6VXNlcjE4MjQ4OTM4","repos_url":"https:\/\/api.github.com\/users\/kpetrow\/repos","received_events_url":"https:\/\/api.github.com\/users\/kpetrow\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/kpetrow\/starred{\/owner}{\/repo}","site_admin":false,"login":"kpetrow","type":"User","id":18248938,"followers_url":"https:\/\/api.github.com\/users\/kpetrow\/followers","organizations_url":"https:\/\/api.github.com\/users\/kpetrow\/orgs"}},{"index":6,"author_association":"CONTRIBUTOR","body":"ok, let's focus on this:\r\n> having computeBoundingSphere() handle NaN or undefined\r\n\r\nhow? if a single value is undefined, then both bounding sphere center and radius are uncertain, and also have to be undefined? if so, and you try to get an answer to 'will my ray intersect this sphere and where', what shall it be? 'I don't know', I guess?\r\n\r\n> intersects is always empty\r\n\r\nwould returning point = new THREE.Vector3 (undefined, undefined, undefined) be better?\r\n","created_at":"2017-07-20T19:04:41.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11806#issuecomment-316799914","id":316799914,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11806","node_id":"MDEyOklzc3VlQ29tbWVudDMxNjc5OTkxNA==","updated_at":"2017-07-20T19:04:41.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/316799914","user":{"following_url":"https:\/\/api.github.com\/users\/makc\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/makc\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/242577?v=4","url":"https:\/\/api.github.com\/users\/makc","gists_url":"https:\/\/api.github.com\/users\/makc\/gists{\/gist_id}","html_url":"https:\/\/github.com\/makc","subscriptions_url":"https:\/\/api.github.com\/users\/makc\/subscriptions","node_id":"MDQ6VXNlcjI0MjU3Nw==","repos_url":"https:\/\/api.github.com\/users\/makc\/repos","received_events_url":"https:\/\/api.github.com\/users\/makc\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/makc\/starred{\/owner}{\/repo}","site_admin":false,"login":"makc","type":"User","id":242577,"followers_url":"https:\/\/api.github.com\/users\/makc\/followers","organizations_url":"https:\/\/api.github.com\/users\/makc\/orgs"}},{"index":7,"author_association":"NONE","body":"> if a single value is undefined, then both bounding sphere center and radius are uncertain.\r\n\r\nIt should just ignore the undefined points.  say my plane is defined as:\r\n![image](https:\/\/user-images.githubusercontent.com\/18248938\/28435445-262ac9d0-6d50-11e7-9d3c-5131088cd613.png)\r\n\r\nthen just toss out the other undefined values.  if the definition is less then the values, then bounding sphere should shrink wrap into what is defined.  Diameter should be the furthest defined points.  I feel like this should just be in computeBoundingSphere():\r\n\r\n`if( isNaN(position[i+2]) )continue;`\r\n\r\n> would returning point = new THREE.Vector3 (undefined, undefined, undefined) be better?\r\n\r\nNo, there is an intersection with the planeBufferGeometry.  It just that the raycaster fails a optimization routine because computeBoundingSphere() can not properly handle undefined\/null\/NaN values.  I'll dig into the ComputeBoundingSphere code later tonight. It looks like after sphere is box, which also might need to be modified.","created_at":"2017-07-20T19:41:59.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11806#issuecomment-316809058","id":316809058,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11806","node_id":"MDEyOklzc3VlQ29tbWVudDMxNjgwOTA1OA==","updated_at":"2017-07-20T19:42:59.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/316809058","user":{"following_url":"https:\/\/api.github.com\/users\/kpetrow\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/kpetrow\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/18248938?v=4","url":"https:\/\/api.github.com\/users\/kpetrow","gists_url":"https:\/\/api.github.com\/users\/kpetrow\/gists{\/gist_id}","html_url":"https:\/\/github.com\/kpetrow","subscriptions_url":"https:\/\/api.github.com\/users\/kpetrow\/subscriptions","node_id":"MDQ6VXNlcjE4MjQ4OTM4","repos_url":"https:\/\/api.github.com\/users\/kpetrow\/repos","received_events_url":"https:\/\/api.github.com\/users\/kpetrow\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/kpetrow\/starred{\/owner}{\/repo}","site_admin":false,"login":"kpetrow","type":"User","id":18248938,"followers_url":"https:\/\/api.github.com\/users\/kpetrow\/followers","organizations_url":"https:\/\/api.github.com\/users\/kpetrow\/orgs"}},{"index":8,"author_association":"CONTRIBUTOR","body":"> It should just ignore the undefined points\r\n\r\nin other words, it should behave as if undefined values were not there?","created_at":"2017-07-20T19:42:55.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11806#issuecomment-316809276","id":316809276,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11806","node_id":"MDEyOklzc3VlQ29tbWVudDMxNjgwOTI3Ng==","updated_at":"2017-07-20T19:42:55.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/316809276","user":{"following_url":"https:\/\/api.github.com\/users\/makc\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/makc\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/242577?v=4","url":"https:\/\/api.github.com\/users\/makc","gists_url":"https:\/\/api.github.com\/users\/makc\/gists{\/gist_id}","html_url":"https:\/\/github.com\/makc","subscriptions_url":"https:\/\/api.github.com\/users\/makc\/subscriptions","node_id":"MDQ6VXNlcjI0MjU3Nw==","repos_url":"https:\/\/api.github.com\/users\/makc\/repos","received_events_url":"https:\/\/api.github.com\/users\/makc\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/makc\/starred{\/owner}{\/repo}","site_admin":false,"login":"makc","type":"User","id":242577,"followers_url":"https:\/\/api.github.com\/users\/makc\/followers","organizations_url":"https:\/\/api.github.com\/users\/makc\/orgs"}},{"index":9,"author_association":"NONE","body":"It should behave that undefined = undefined.  Bounding sphere should measure the largest defined values..  If we are going to get into a broader discussion then i'll resort back to:\r\n\r\n> Regardless if it doesnt fail on creating the mesh, then the mesh methods should work?? If you want to be strict on sparse arrays then you can't be strict only after the object is created?","created_at":"2017-07-20T19:45:42.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11806#issuecomment-316809915","id":316809915,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11806","node_id":"MDEyOklzc3VlQ29tbWVudDMxNjgwOTkxNQ==","updated_at":"2017-07-20T19:45:42.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/316809915","user":{"following_url":"https:\/\/api.github.com\/users\/kpetrow\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/kpetrow\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/18248938?v=4","url":"https:\/\/api.github.com\/users\/kpetrow","gists_url":"https:\/\/api.github.com\/users\/kpetrow\/gists{\/gist_id}","html_url":"https:\/\/github.com\/kpetrow","subscriptions_url":"https:\/\/api.github.com\/users\/kpetrow\/subscriptions","node_id":"MDQ6VXNlcjE4MjQ4OTM4","repos_url":"https:\/\/api.github.com\/users\/kpetrow\/repos","received_events_url":"https:\/\/api.github.com\/users\/kpetrow\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/kpetrow\/starred{\/owner}{\/repo}","site_admin":false,"login":"kpetrow","type":"User","id":18248938,"followers_url":"https:\/\/api.github.com\/users\/kpetrow\/followers","organizations_url":"https:\/\/api.github.com\/users\/kpetrow\/orgs"}},{"index":10,"author_association":"CONTRIBUTOR","body":"well if undefined value is there you can't know the sphere radius.\r\n\r\nedit: you can override the radius and other values (sphere center, bounding box min\/max) yourself, however. maybe that will help you?","created_at":"2017-07-20T19:50:03.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11806#issuecomment-316811015","id":316811015,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11806","node_id":"MDEyOklzc3VlQ29tbWVudDMxNjgxMTAxNQ==","updated_at":"2017-07-20T19:54:02.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/316811015","user":{"following_url":"https:\/\/api.github.com\/users\/makc\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/makc\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/242577?v=4","url":"https:\/\/api.github.com\/users\/makc","gists_url":"https:\/\/api.github.com\/users\/makc\/gists{\/gist_id}","html_url":"https:\/\/github.com\/makc","subscriptions_url":"https:\/\/api.github.com\/users\/makc\/subscriptions","node_id":"MDQ6VXNlcjI0MjU3Nw==","repos_url":"https:\/\/api.github.com\/users\/makc\/repos","received_events_url":"https:\/\/api.github.com\/users\/makc\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/makc\/starred{\/owner}{\/repo}","site_admin":false,"login":"makc","type":"User","id":242577,"followers_url":"https:\/\/api.github.com\/users\/makc\/followers","organizations_url":"https:\/\/api.github.com\/users\/makc\/orgs"}},{"index":11,"author_association":"NONE","body":"> well if undefined value is there you can't know the sphere radius.\r\n\r\nyou can know the largest defined sphere.  function arrayMax([1,undefined]) should give you 1 vs is well we dont know what undefined could be so I'm just going to throw an error\/warning.","created_at":"2017-07-20T20:23:39.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11806#issuecomment-316819319","id":316819319,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11806","node_id":"MDEyOklzc3VlQ29tbWVudDMxNjgxOTMxOQ==","updated_at":"2017-07-20T20:23:39.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/316819319","user":{"following_url":"https:\/\/api.github.com\/users\/kpetrow\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/kpetrow\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/18248938?v=4","url":"https:\/\/api.github.com\/users\/kpetrow","gists_url":"https:\/\/api.github.com\/users\/kpetrow\/gists{\/gist_id}","html_url":"https:\/\/github.com\/kpetrow","subscriptions_url":"https:\/\/api.github.com\/users\/kpetrow\/subscriptions","node_id":"MDQ6VXNlcjE4MjQ4OTM4","repos_url":"https:\/\/api.github.com\/users\/kpetrow\/repos","received_events_url":"https:\/\/api.github.com\/users\/kpetrow\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/kpetrow\/starred{\/owner}{\/repo}","site_admin":false,"login":"kpetrow","type":"User","id":18248938,"followers_url":"https:\/\/api.github.com\/users\/kpetrow\/followers","organizations_url":"https:\/\/api.github.com\/users\/kpetrow\/orgs"}},{"index":12,"author_association":"NONE","body":"My proposal in src\/core\/BufferGeometry.js ( start at line 629):\r\n```\r\nfor ( var i = 0, il = position.count; i < il; i ++ ) {\r\n   vector.x = position.getX( i );\r\n    vector.y = position.getY( i );\r\n    vector.z = position.getZ( i );\r\n    maxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\r\n}\r\n```\r\nbecomes\r\n```\r\nfor ( var i = 0, il = position.count; i < il; i ++ ) {\r\n   if(isNaN(position.getZ( i )) ||  isNaN(position.getX( i )) || isNaN(position.getY( i )) )\r\n      continue;\r\n   vector.x = position.getX( i );\r\n    vector.y = position.getY( i );\r\n    vector.z = position.getZ( i );\r\n    maxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\r\n}\r\n```\r\n\r\nI am confused by how the center is found.  Looks like you might need to find the defined min,max of x,y,z;\r\nI see that the sphere is created but where are the init values?\r\n```\r\nif ( this.boundingSphere === null ) {\r\n\r\n\t\t\t\tthis.boundingSphere = new Sphere();\r\n\r\n\t\t\t}\r\n```","created_at":"2017-07-20T22:06:33.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11806#issuecomment-316843624","id":316843624,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11806","node_id":"MDEyOklzc3VlQ29tbWVudDMxNjg0MzYyNA==","updated_at":"2017-07-20T22:06:33.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/316843624","user":{"following_url":"https:\/\/api.github.com\/users\/kpetrow\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/kpetrow\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/18248938?v=4","url":"https:\/\/api.github.com\/users\/kpetrow","gists_url":"https:\/\/api.github.com\/users\/kpetrow\/gists{\/gist_id}","html_url":"https:\/\/github.com\/kpetrow","subscriptions_url":"https:\/\/api.github.com\/users\/kpetrow\/subscriptions","node_id":"MDQ6VXNlcjE4MjQ4OTM4","repos_url":"https:\/\/api.github.com\/users\/kpetrow\/repos","received_events_url":"https:\/\/api.github.com\/users\/kpetrow\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/kpetrow\/starred{\/owner}{\/repo}","site_admin":false,"login":"kpetrow","type":"User","id":18248938,"followers_url":"https:\/\/api.github.com\/users\/kpetrow\/followers","organizations_url":"https:\/\/api.github.com\/users\/kpetrow\/orgs"}},{"index":13,"author_association":"COLLABORATOR","body":"As I said, three.js does not accommodate missing, `undefined`, `null`, or otherwise invalid attribute data. If we were to do so for this case, we would have to do the same for every method in the library.\r\n","created_at":"2017-07-20T22:22:15.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11806#issuecomment-316846880","id":316846880,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11806","node_id":"MDEyOklzc3VlQ29tbWVudDMxNjg0Njg4MA==","updated_at":"2017-07-20T22:22:40.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/316846880","user":{"following_url":"https:\/\/api.github.com\/users\/WestLangley\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/WestLangley\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/1000017?v=4","url":"https:\/\/api.github.com\/users\/WestLangley","gists_url":"https:\/\/api.github.com\/users\/WestLangley\/gists{\/gist_id}","html_url":"https:\/\/github.com\/WestLangley","subscriptions_url":"https:\/\/api.github.com\/users\/WestLangley\/subscriptions","node_id":"MDQ6VXNlcjEwMDAwMTc=","repos_url":"https:\/\/api.github.com\/users\/WestLangley\/repos","received_events_url":"https:\/\/api.github.com\/users\/WestLangley\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/WestLangley\/starred{\/owner}{\/repo}","site_admin":false,"login":"WestLangley","type":"User","id":1000017,"followers_url":"https:\/\/api.github.com\/users\/WestLangley\/followers","organizations_url":"https:\/\/api.github.com\/users\/WestLangley\/orgs"}},{"index":14,"author_association":"CONTRIBUTOR","body":"@kpetrow what I am saying is that if you are (obviously) not happy with what 3js puts into boundingSphere\/Box, you could do this:\r\n```javascript\r\ngeometry.boundingSphere = new THREE.Sphere (yourCenter, yourRadius);\r\ngeometry.boundingBox = new THREE.Box3 (yourMin, yourMax);\r\n```\r\ninstead of relying on geometry.computeBoundingSphere\/Box calls. this will allow you to bypass the checks that you are saying are in the way of finding intersections, right?\r\n","created_at":"2017-07-20T22:26:55.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11806#issuecomment-316847821","id":316847821,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11806","node_id":"MDEyOklzc3VlQ29tbWVudDMxNjg0NzgyMQ==","updated_at":"2017-07-20T22:28:03.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/316847821","user":{"following_url":"https:\/\/api.github.com\/users\/makc\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/makc\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/242577?v=4","url":"https:\/\/api.github.com\/users\/makc","gists_url":"https:\/\/api.github.com\/users\/makc\/gists{\/gist_id}","html_url":"https:\/\/github.com\/makc","subscriptions_url":"https:\/\/api.github.com\/users\/makc\/subscriptions","node_id":"MDQ6VXNlcjI0MjU3Nw==","repos_url":"https:\/\/api.github.com\/users\/makc\/repos","received_events_url":"https:\/\/api.github.com\/users\/makc\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/makc\/starred{\/owner}{\/repo}","site_admin":false,"login":"makc","type":"User","id":242577,"followers_url":"https:\/\/api.github.com\/users\/makc\/followers","organizations_url":"https:\/\/api.github.com\/users\/makc\/orgs"}},{"index":15,"author_association":"CONTRIBUTOR","body":"> should give you 1 vs is well we dont know what undefined could be\r\n\r\nthis is just silly, imagine if we could solve any problem like that? we don't know what the value of X is, so we're just going to assume it's 1 and operate under that assumption. why not 2? I like 2 more.\r\n\r\n> then just toss out the other undefined values\r\n\r\nwhich is proper solution of the problem on your end.","created_at":"2017-07-20T22:31:06.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11806#issuecomment-316848600","id":316848600,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11806","node_id":"MDEyOklzc3VlQ29tbWVudDMxNjg0ODYwMA==","updated_at":"2017-07-20T22:38:39.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/316848600","user":{"following_url":"https:\/\/api.github.com\/users\/makc\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/makc\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/242577?v=4","url":"https:\/\/api.github.com\/users\/makc","gists_url":"https:\/\/api.github.com\/users\/makc\/gists{\/gist_id}","html_url":"https:\/\/github.com\/makc","subscriptions_url":"https:\/\/api.github.com\/users\/makc\/subscriptions","node_id":"MDQ6VXNlcjI0MjU3Nw==","repos_url":"https:\/\/api.github.com\/users\/makc\/repos","received_events_url":"https:\/\/api.github.com\/users\/makc\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/makc\/starred{\/owner}{\/repo}","site_admin":false,"login":"makc","type":"User","id":242577,"followers_url":"https:\/\/api.github.com\/users\/makc\/followers","organizations_url":"https:\/\/api.github.com\/users\/makc\/orgs"}},{"index":16,"author_association":"NONE","body":"> As I said, three.js does not accommodate missing, undefined, null, or otherwise invalid attribute data. If we were to do so for this case, we would have to do the same for every method in the library.\r\n\r\nSo the bug is too big to fix?  What is the solution then for plane buffer geometry with holes?  If I modify src code, it will create upgrade nightmare.  Is there a better geometry type for surface data?  If it is not a bug what is the solution?\r\n\r\nthis is just silly, imagine if we could solve any problem like that? we don't know what the value of X is, so we're just going to assume it's 1 and operate under that assumption. why not 2? I like 2 more.\r\n\r\nSeriously, do you not see my point at all?  The definition of the geometry should not override or supersede the data in the geometry. Methods should respect the data in the geometey not the definition of the geometry.\r\n\r\n\r\n\r\n","created_at":"2017-07-20T22:44:44.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11806#issuecomment-316851241","id":316851241,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11806","node_id":"MDEyOklzc3VlQ29tbWVudDMxNjg1MTI0MQ==","updated_at":"2017-07-20T23:18:39.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/316851241","user":{"following_url":"https:\/\/api.github.com\/users\/kpetrow\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/kpetrow\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/18248938?v=4","url":"https:\/\/api.github.com\/users\/kpetrow","gists_url":"https:\/\/api.github.com\/users\/kpetrow\/gists{\/gist_id}","html_url":"https:\/\/github.com\/kpetrow","subscriptions_url":"https:\/\/api.github.com\/users\/kpetrow\/subscriptions","node_id":"MDQ6VXNlcjE4MjQ4OTM4","repos_url":"https:\/\/api.github.com\/users\/kpetrow\/repos","received_events_url":"https:\/\/api.github.com\/users\/kpetrow\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/kpetrow\/starred{\/owner}{\/repo}","site_admin":false,"login":"kpetrow","type":"User","id":18248938,"followers_url":"https:\/\/api.github.com\/users\/kpetrow\/followers","organizations_url":"https:\/\/api.github.com\/users\/kpetrow\/orgs"}},{"index":17,"author_association":"NONE","body":"geometry.boundingSphere = new THREE.Sphere (yourCenter, yourRadius);\r\ngeometry.boundingBox = new THREE.Box3 (yourMin, yourMax);\r\n\r\nThis might work. Thanks.","created_at":"2017-07-20T22:49:19.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11806#issuecomment-316852085","id":316852085,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11806","node_id":"MDEyOklzc3VlQ29tbWVudDMxNjg1MjA4NQ==","updated_at":"2017-07-20T22:49:19.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/316852085","user":{"following_url":"https:\/\/api.github.com\/users\/kpetrow\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/kpetrow\/events{\/privacy}","avatar_url":"https:\/\/avatars2.githubusercontent.com\/u\/18248938?v=4","url":"https:\/\/api.github.com\/users\/kpetrow","gists_url":"https:\/\/api.github.com\/users\/kpetrow\/gists{\/gist_id}","html_url":"https:\/\/github.com\/kpetrow","subscriptions_url":"https:\/\/api.github.com\/users\/kpetrow\/subscriptions","node_id":"MDQ6VXNlcjE4MjQ4OTM4","repos_url":"https:\/\/api.github.com\/users\/kpetrow\/repos","received_events_url":"https:\/\/api.github.com\/users\/kpetrow\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/kpetrow\/starred{\/owner}{\/repo}","site_admin":false,"login":"kpetrow","type":"User","id":18248938,"followers_url":"https:\/\/api.github.com\/users\/kpetrow\/followers","organizations_url":"https:\/\/api.github.com\/users\/kpetrow\/orgs"}},{"index":18,"author_association":"CONTRIBUTOR","body":"> Is there a better geometry type for surface data?\r\n\r\nthat might be BufferGeometry. if you are not happy with (0,0,0)-(0,0,0)-(0,0,0) triangles in PlaneBufferGeometry, you can create your own geometry avoiding the need to do something about triangles with missing data - by not creating these triangles in the 1st place.","created_at":"2017-07-20T22:52:24.000Z","html_url":"https:\/\/github.com\/mrdoob\/three.js\/issues\/11806#issuecomment-316852636","id":316852636,"issue_url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/11806","node_id":"MDEyOklzc3VlQ29tbWVudDMxNjg1MjYzNg==","updated_at":"2017-07-20T22:52:24.000Z","url":"https:\/\/api.github.com\/repos\/mrdoob\/three.js\/issues\/comments\/316852636","user":{"following_url":"https:\/\/api.github.com\/users\/makc\/following{\/other_user}","events_url":"https:\/\/api.github.com\/users\/makc\/events{\/privacy}","avatar_url":"https:\/\/avatars0.githubusercontent.com\/u\/242577?v=4","url":"https:\/\/api.github.com\/users\/makc","gists_url":"https:\/\/api.github.com\/users\/makc\/gists{\/gist_id}","html_url":"https:\/\/github.com\/makc","subscriptions_url":"https:\/\/api.github.com\/users\/makc\/subscriptions","node_id":"MDQ6VXNlcjI0MjU3Nw==","repos_url":"https:\/\/api.github.com\/users\/makc\/repos","received_events_url":"https:\/\/api.github.com\/users\/makc\/received_events","gravatar_id":"","starred_url":"https:\/\/api.github.com\/users\/makc\/starred{\/owner}{\/repo}","site_admin":false,"login":"makc","type":"User","id":242577,"followers_url":"https:\/\/api.github.com\/users\/makc\/followers","organizations_url":"https:\/\/api.github.com\/users\/makc\/orgs"}}]}